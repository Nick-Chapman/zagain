Code for 682 routines
--[1]--------------------------------------------------
LocRoutine 010094:
  MakeRoutineFrame 0;
  Jump: 010095
LocOp 010095:
  TraceOperation 010095 (Print_ret " cthe         gkthe c        9 sdon't         g Ford k ");
  GamePrint " cthe         gkthe c        9 sdon't         g Ford k \n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[2]--------------------------------------------------
LocRoutine 010824:
  MakeRoutineFrame 0;
  Jump: 010825
LocOp 010825:
  TraceOperation 010825 (Jump 010826);
  Jump: 010826
--[3]--------------------------------------------------
LocRoutine 010832:
  MakeRoutineFrame 0;
  Jump: 010833
LocOp 010833:
  TraceOperation 010833 (Jump 011091);
  Jump: 011091
--[4]--------------------------------------------------
LocRoutine 014300:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 30;
  }
  Jump: 014303
LocOp 014303:
  TraceOperation 014303 (Test_attr (Con 170) (Var (Global 53)) (Branch F Dtrue));
  Let b1 = M[008014];
  Let b2 = M[008015];
  Let b3 = M[Offset(002281,Div8(MakeHiLo(b1,b2)))];
  if (TestBit(b3,SevenMinus(LoByte(Mod(MakeHiLo(b1,b2),8))))) {
    TraceOperation 014307 (Ret (Var Sp));
    PopStack popped4;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: popped4
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
--[5]--------------------------------------------------
LocRoutine 015218:
  MakeRoutineFrame 0;
  Jump: 015219
LocOp 015219:
  TraceOperation 015219 (Jin (Con 146) (Var (Global 152)) (Branch T (Dloc 008438)));
  Let b1 = M[008212];
  Let b2 = M[008213];
  Let b3 = M[002069];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 008438
  } else {
    TraceOperation 015224 (Je [Con 0,Con 38] (Branch T (Dloc 020004)));
    TraceOperation 015229 (Inc_chk (Con 34) (Var (Global 74)) (Branch F (Dloc 015270)));
    Let b4 = M[007944];
    Let b5 = M[007945];
    Let b6 = M[008056];
    Let b7 = M[008057];
    SetByte 007944 HiByte(Add(MakeHiLo(b4,b5),1));
    SetByte 007945 LoByte(Add(MakeHiLo(b4,b5),1));
    if (GreaterThanEqual(MakeHiLo(b4,b5),MakeHiLo(b6,b7))) {
      TraceOperation 015234 (Get_parent (Con 148) (Global 149));
      Let b8 = M[002087];
      SetByte 008206 HiByte(Widen(b8));
      SetByte 008207 LoByte(Widen(b8));
      TraceOperation 015237 (Je [Var (Global 232),Con 0] (Branch F (Dloc 008731)));
      Let b9 = M[008372];
      Let b10 = M[008373];
      if (Equal(MakeHiLo(b9,b10),0)) {
        TraceOperation 015242 (Print_addr (Con 25));
        GamePrint GetText(000025);
        TraceOperation 015244 (Dec_chk (Con 239) (Con 0) (Branch F (Dloc 008738)));
        Let b11 = M[008354];
        Let b12 = M[008355];
        if (LessThanEqual(MakeHiLo(b11,b12),0)) {
          SetByte 008354 HiByte(Sub(MakeHiLo(b11,b12),1));
          SetByte 008355 LoByte(Sub(MakeHiLo(b11,b12),1));
          TraceOperation 015249 (Ret (Con 42));
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 42
        } else {
          SetByte 008354 HiByte(Sub(MakeHiLo(b11,b12),1));
          SetByte 008355 LoByte(Sub(MakeHiLo(b11,b12),1));
          Jump: 008738
        }
      } else {
        Jump: 008731
      }
    } else {
      Jump: 015270
    }
  }
--[6]--------------------------------------------------
LocRoutine 015462:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 1834;
  }
  Jump: 015465
LocOp 015465:
  TraceOperation 015465 (Loadw (Var (Global 195)) (Var (Global 181)) (Global 49));
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[008270];
  Let b4 = M[008271];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  SetByte 008006 b5;
  SetByte 008007 b6;
  TraceOperation 015469 (Jz (Var Sp) (Branch F (Dloc 009960)));
  PopStack popped7;
  if (IsZero(popped7)) {
    TraceOperation 015473 (Print_obj (Var (Global 213)));
    Let b8 = M[008334];
    Let b9 = M[008335];
    Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),7)];
    Let b11 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),7),1)];
    Let b12 = M[Address(MakeHiLo(b10,b11))];
    if (IsZeroByte(b12)) {
      GamePrint "";
      TraceOperation 015475 (Je [Var (Global 145),Con 0] (Branch F (Dloc 010064)));
      Let b13 = M[008198];
      Let b14 = M[008199];
      if (Equal(MakeHiLo(b13,b14),0)) {
        TraceOperation 015480 (Ret (Con 46));
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 46
      } else {
        Jump: 010064
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b10,b11)),1));
      TraceOperation 015475 (Je [Var (Global 145),Con 0] (Branch F (Dloc 010064)));
      Let b16 = M[008198];
      Let b17 = M[008199];
      if (Equal(MakeHiLo(b16,b17),0)) {
        TraceOperation 015480 (Ret (Con 46));
        PopFrame return_address_18;
        JumpReturn: return_address_18, result: 46
      } else {
        Jump: 010064
      }
    }
  } else {
    Jump: 009960
  }
--[7]--------------------------------------------------
LocRoutine 015862:
  MakeRoutineFrame 0;
  Jump: 015863
LocOp 015863:
  TraceOperation 015863 (Loadb (Con 165) (Var (Global 132)) (Global 149));
  Let b1 = M[008172];
  Let b2 = M[008173];
  Let b3 = M[Offset(000165,MakeHiLo(b1,b2))];
  SetByte 008206 HiByte(Widen(b3));
  SetByte 008207 LoByte(Widen(b3));
  TraceOperation 015867 (Je [Var (Global 115),Con 0] (Branch F (Dloc 011958)));
  Let b4 = M[008138];
  Let b5 = M[008139];
  if (Equal(MakeHiLo(b4,b5),0)) {
    TraceOperation 015872 (Print_ret "n  2sgalact");
    GamePrint "n  2sgalact\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    Jump: 011958
  }
--[8]--------------------------------------------------
LocRoutine 016044:
  MakeRoutineFrame 0;
  Jump: 016045
LocOp 016045:
  TraceOperation 016045 (Get_prop_addr (Con 230) (Var (Global 213)) (Global 195));
  Let b1 = M[008334];
  Let b2 = M[008335];
  Let b3 = M[002828];
  Let b4 = M[002829];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
--[9]--------------------------------------------------
LocRoutine 016408:
  MakeRoutineFrame 0;
  Jump: 016409
LocOp 016409:
  TraceOperation 016409 (Div (Con 87) (Var (Global 180)) (Global 149));
  Let b1 = M[008268];
  Let b2 = M[008269];
  SetByte 008206 HiByte(Div(87,MakeHiLo(b1,b2)));
  SetByte 008207 LoByte(Div(87,MakeHiLo(b1,b2)));
  TraceOperation 016413 (Je [Var (Global 219),Con 0] (Branch F (Dloc 014325)));
  Let b3 = M[008346];
  Let b4 = M[008347];
  if (Equal(MakeHiLo(b3,b4),0)) {
    TraceOperation 016418 (Print_obj (Var (Global 232)));
    Let b5 = M[008372];
    Let b6 = M[008373];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7)];
    Let b8 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7),1)];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    if (IsZeroByte(b9)) {
      GamePrint "";
      TraceOperation 016420 (Jl (Con 24) (Var Sp) (Branch F (Dloc 014332)));
      PopStack popped10;
      if (LessThan(24,popped10)) {
        TraceOperation 016425 (Print_obj (Var (Global 236)));
        Let b11 = M[008380];
        Let b12 = M[008381];
        Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),7)];
        Let b14 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),7),1)];
        Let b15 = M[Address(MakeHiLo(b13,b14))];
        if (IsZeroByte(b15)) {
          GamePrint "";
          TraceOperation 016427 (Jl (Con 22) (Var Sp) (Branch F (Dloc 014547)));
          PopStack popped16;
          if (LessThan(22,popped16)) {
            TraceOperation 016432 (Get_prop_len (Con 165) (Global 176));
            Let b17 = M[000164];
            SetByte 008260 HiByte(Add(1,Widen(BwAnd(ShiftR(b17,5),7))));
            SetByte 008261 LoByte(Add(1,Widen(BwAnd(ShiftR(b17,5),7))));
            TraceOperation 016435 (Je [Con 120,Con 56] (Branch T (Dloc 014590)));
            TraceOperation 016440 (Inc (Var (Global 176)));
            Let b18 = M[008260];
            Let b19 = M[008261];
            if (IsZeroByte(b19)) {
              PopStack popped20;
              PushStack Add(popped20,1);
              TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
              Jump: 012048
            } else {
              if (LessThanByte(b19,16)) {
                SetLocal b19 Add(GetLocal(b19),1);
                TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
                Jump: 012048
              } else {
                Let b21 = M[Offset(007908,Mul(2,Widen(MinusByte(b19,16))))];
                Let b22 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b19,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b19,16)))) HiByte(Add(MakeHiLo(b21,b22),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b19,16)))),1) LoByte(Add(MakeHiLo(b21,b22),1));
                TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
                Jump: 012048
              }
            }
          } else {
            Jump: 014547
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
          TraceOperation 016427 (Jl (Con 22) (Var Sp) (Branch F (Dloc 014547)));
          PopStack popped23;
          if (LessThan(22,popped23)) {
            TraceOperation 016432 (Get_prop_len (Con 165) (Global 176));
            Let b24 = M[000164];
            SetByte 008260 HiByte(Add(1,Widen(BwAnd(ShiftR(b24,5),7))));
            SetByte 008261 LoByte(Add(1,Widen(BwAnd(ShiftR(b24,5),7))));
            TraceOperation 016435 (Je [Con 120,Con 56] (Branch T (Dloc 014590)));
            TraceOperation 016440 (Inc (Var (Global 176)));
            Let b25 = M[008260];
            Let b26 = M[008261];
            if (IsZeroByte(b26)) {
              PopStack popped27;
              PushStack Add(popped27,1);
              TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
              Jump: 012048
            } else {
              if (LessThanByte(b26,16)) {
                SetLocal b26 Add(GetLocal(b26),1);
                TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
                Jump: 012048
              } else {
                Let b28 = M[Offset(007908,Mul(2,Widen(MinusByte(b26,16))))];
                Let b29 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b26,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b26,16)))) HiByte(Add(MakeHiLo(b28,b29),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b26,16)))),1) LoByte(Add(MakeHiLo(b28,b29),1));
                TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
                Jump: 012048
              }
            }
          } else {
            Jump: 014547
          }
        }
      } else {
        Jump: 014332
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
      TraceOperation 016420 (Jl (Con 24) (Var Sp) (Branch F (Dloc 014332)));
      PopStack popped30;
      if (LessThan(24,popped30)) {
        TraceOperation 016425 (Print_obj (Var (Global 236)));
        Let b31 = M[008380];
        Let b32 = M[008381];
        Let b33 = M[Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),7)];
        Let b34 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),7),1)];
        Let b35 = M[Address(MakeHiLo(b33,b34))];
        if (IsZeroByte(b35)) {
          GamePrint "";
          TraceOperation 016427 (Jl (Con 22) (Var Sp) (Branch F (Dloc 014547)));
          PopStack popped36;
          if (LessThan(22,popped36)) {
            TraceOperation 016432 (Get_prop_len (Con 165) (Global 176));
            Let b37 = M[000164];
            SetByte 008260 HiByte(Add(1,Widen(BwAnd(ShiftR(b37,5),7))));
            SetByte 008261 LoByte(Add(1,Widen(BwAnd(ShiftR(b37,5),7))));
            TraceOperation 016435 (Je [Con 120,Con 56] (Branch T (Dloc 014590)));
            TraceOperation 016440 (Inc (Var (Global 176)));
            Let b38 = M[008260];
            Let b39 = M[008261];
            if (IsZeroByte(b39)) {
              PopStack popped40;
              PushStack Add(popped40,1);
              TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
              Jump: 012048
            } else {
              if (LessThanByte(b39,16)) {
                SetLocal b39 Add(GetLocal(b39),1);
                TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
                Jump: 012048
              } else {
                Let b41 = M[Offset(007908,Mul(2,Widen(MinusByte(b39,16))))];
                Let b42 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b39,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b39,16)))) HiByte(Add(MakeHiLo(b41,b42),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b39,16)))),1) LoByte(Add(MakeHiLo(b41,b42),1));
                TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
                Jump: 012048
              }
            }
          } else {
            Jump: 014547
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b33,b34)),1));
          TraceOperation 016427 (Jl (Con 22) (Var Sp) (Branch F (Dloc 014547)));
          PopStack popped43;
          if (LessThan(22,popped43)) {
            TraceOperation 016432 (Get_prop_len (Con 165) (Global 176));
            Let b44 = M[000164];
            SetByte 008260 HiByte(Add(1,Widen(BwAnd(ShiftR(b44,5),7))));
            SetByte 008261 LoByte(Add(1,Widen(BwAnd(ShiftR(b44,5),7))));
            TraceOperation 016435 (Je [Con 120,Con 56] (Branch T (Dloc 014590)));
            TraceOperation 016440 (Inc (Var (Global 176)));
            Let b45 = M[008260];
            Let b46 = M[008261];
            if (IsZeroByte(b46)) {
              PopStack popped47;
              PushStack Add(popped47,1);
              TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
              Jump: 012048
            } else {
              if (LessThanByte(b46,16)) {
                SetLocal b46 Add(GetLocal(b46),1);
                TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
                Jump: 012048
              } else {
                Let b48 = M[Offset(007908,Mul(2,Widen(MinusByte(b46,16))))];
                Let b49 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b46,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b46,16)))) HiByte(Add(MakeHiLo(b48,b49),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b46,16)))),1) LoByte(Add(MakeHiLo(b48,b49),1));
                TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
                Jump: 012048
              }
            }
          } else {
            Jump: 014547
          }
        }
      } else {
        Jump: 014332
      }
    }
  } else {
    Jump: 014325
  }
--[10]--------------------------------------------------
LocRoutine 016744:
  MakeRoutineFrame 0;
  Jump: 016745
LocOp 016745:
  TraceOperation 016745 (Dec_chk (Var (Global 194)) (Con 212) (Branch T (Dloc 009964)));
  Let b1 = M[008296];
  Let b2 = M[008297];
  if (IsZeroByte(b2)) {
    PopStack popped3;
    if (LessThanEqual(popped3,212)) {
      PushStack Sub(popped3,1);
      Jump: 009964
    } else {
      PushStack Sub(popped3,1);
      TraceOperation 016750 (Je [Con 0,Con 68] (Branch T (Dloc 016775)));
      TraceOperation 016754 Rfalse;
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  } else {
    if (LessThanByte(b2,16)) {
      if (LessThanEqual(GetLocal(b2),212)) {
        SetLocal b2 Sub(GetLocal(b2),1);
        Jump: 009964
      } else {
        SetLocal b2 Sub(GetLocal(b2),1);
        TraceOperation 016750 (Je [Con 0,Con 68] (Branch T (Dloc 016775)));
        TraceOperation 016754 Rfalse;
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 0
      }
    } else {
      Let b6 = M[Offset(007908,Mul(2,Widen(MinusByte(b2,16))))];
      Let b7 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2,16)))),1)];
      if (LessThanEqual(MakeHiLo(b6,b7),212)) {
        SetByte Offset(007908,Mul(2,Widen(MinusByte(b2,16)))) HiByte(Sub(MakeHiLo(b6,b7),1));
        SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b2,16)))),1) LoByte(Sub(MakeHiLo(b6,b7),1));
        Jump: 009964
      } else {
        SetByte Offset(007908,Mul(2,Widen(MinusByte(b2,16)))) HiByte(Sub(MakeHiLo(b6,b7),1));
        SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b2,16)))),1) LoByte(Sub(MakeHiLo(b6,b7),1));
        TraceOperation 016750 (Je [Con 0,Con 68] (Branch T (Dloc 016775)));
        TraceOperation 016754 Rfalse;
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      }
    }
  }
--[11]--------------------------------------------------
LocRoutine 017212:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 74;
  }
  Jump: 017215
LocOp 017215:
  TraceOperation 017215 (Ret (Con 168));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 168
--[12]--------------------------------------------------
LocRoutine 018606:
  MakeRoutineFrame 0;
  Jump: 018607
LocOp 018607:
  TraceOperation 018607 (Je [Var (Global 56),Var (Global 218)] (Branch T (Dloc 018651)));
  Let b1 = M[008020];
  Let b2 = M[008021];
  Let b3 = M[008344];
  Let b4 = M[008345];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 018651
  } else {
    TraceOperation 018611 (Je [Var (Global 220),Con 0] (Branch F (Dloc 018646)));
    Let b5 = M[008348];
    Let b6 = M[008349];
    if (Equal(MakeHiLo(b5,b6),0)) {
      TraceOperation 018615 (Or (Var (Global 218)) (Con 238) (Global 18));
      Let b7 = M[008344];
      Let b8 = M[008345];
      SetByte 007944 HiByte(Or(MakeHiLo(b7,b8),238));
      SetByte 007945 LoByte(Or(MakeHiLo(b7,b8),238));
      TraceOperation 018619 Ret_popped;
      PopStack popped9;
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: popped9
    } else {
      Jump: 018646
    }
  }
--[13]--------------------------------------------------
LocRoutine 018746:
  MakeRoutineFrame 0;
  Jump: 018747
LocOp 018747:
  TraceOperation 018747 (Je [Var (Global 158),Var (Global 196)] (Branch T (Dloc 011966)));
  Let b1 = M[008224];
  Let b2 = M[008225];
  Let b3 = M[008300];
  Let b4 = M[008301];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 011966
  } else {
    TraceOperation 018752 (Je [Con 0,Con 97] (Branch T (Dloc 014359)));
    TraceOperation 018757 Ret_popped;
    PopStack popped5;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: popped5
  }
--[14]--------------------------------------------------
LocRoutine 018998:
  MakeRoutineFrame 0;
  Jump: 018999
LocOp 018999:
  TraceOperation 018999 (Jl (Var (Global 100)) (Var (Global 205)) (Branch T (Dloc 019020)));
  Let b1 = M[008108];
  Let b2 = M[008109];
  Let b3 = M[008318];
  Let b4 = M[008319];
  if (LessThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 019020
  } else {
    TraceOperation 019003 (Jz (Con 256) (Branch F (Dloc 019039)));
    Jump: 019039
  }
--[15]--------------------------------------------------
LocRoutine 019018:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 98;
  }
  Jump: 019021
LocOp 019021:
  TraceOperation 019021 (Load (Con -15031) (Global 18));
  Let b1 = M[008022];
  Let b2 = M[008023];
  SetByte 007944 b1;
  SetByte 007945 b2;
  TraceOperation 019025 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[16]--------------------------------------------------
LocRoutine 019116:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 98;
  }
  Jump: 019119
LocOp 019119:
  TraceOperation 019119 (Print_obj (Var (Global 153)));
  Let b1 = M[008214];
  Let b2 = M[008215];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 019121 (Inc_chk (Con 34) (Var (Global 55)) (Branch F (Dloc 019222)));
    Let b6 = M[007944];
    Let b7 = M[007945];
    Let b8 = M[008018];
    Let b9 = M[008019];
    SetByte 007944 HiByte(Add(MakeHiLo(b6,b7),1));
    SetByte 007945 LoByte(Add(MakeHiLo(b6,b7),1));
    if (GreaterThanEqual(MakeHiLo(b6,b7),MakeHiLo(b8,b9))) {
      TraceOperation 019126 (Print_obj (Var (Global 153)));
      Let b10 = M[008214];
      Let b11 = M[008215];
      Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),7)];
      Let b13 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),7),1)];
      Let b14 = M[Address(MakeHiLo(b12,b13))];
      if (IsZeroByte(b14)) {
        GamePrint "";
        TraceOperation 019128 (Test (Con 128) (Var (Local 1)) (Branch F (Dloc 019229)));
        if (Equal(And(128,GetLocal(1)),GetLocal(1))) {
          TraceOperation 019133 (Print_obj (Var (Global 206)));
          Let b15 = M[008320];
          Let b16 = M[008321];
          Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),7)];
          Let b18 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),7),1)];
          Let b19 = M[Address(MakeHiLo(b17,b18))];
          if (IsZeroByte(b19)) {
            GamePrint "";
            TraceOperation 019135 (Inc_chk (Var (Global 18)) (Con 56) (Branch F (Dloc 019236)));
            Let b20 = M[007944];
            Let b21 = M[007945];
            if (IsZeroByte(b21)) {
              PopStack popped22;
              PushStack Add(popped22,1);
              if (GreaterThanEqual(popped22,56)) {
                TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                Let b23 = M[008272];
                Let b24 = M[008273];
                if (IsZeroByte(b24)) {
                  PopStack popped25;
                  PushStack popped25;
                  SetByte 007950 HiByte(popped25);
                  SetByte 007951 LoByte(popped25);
                  TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                  Let b26 = M[008284];
                  Let b27 = M[008285];
                  if (Equal(MakeHiLo(b26,b27),0)) {
                    TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                    Let b28 = M[008284];
                    Let b29 = M[008285];
                    if (IsZeroByte(b29)) {
                      PopStack popped30;
                      PushStack popped30;
                      SetByte 008206 HiByte(popped30);
                      SetByte 008207 LoByte(popped30);
                      TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                      Let b31 = M[008330];
                      Let b32 = M[008331];
                      if (Equal(MakeHiLo(b31,b32),0)) {
                        TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                        Let b33 = M[008318];
                        Let b34 = M[008319];
                        if (IsZeroByte(b34)) {
                          PopStack popped35;
                          PushStack popped35;
                          SetByte 008014 HiByte(popped35);
                          SetByte 008015 LoByte(popped35);
                          TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                          Jump: 019193
                        } else {
                          if (LessThanByte(b34,16)) {
                            SetByte 008014 HiByte(GetLocal(b34));
                            SetByte 008015 LoByte(GetLocal(b34));
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            Let b36 = M[Offset(007908,Mul(2,Widen(MinusByte(b34,16))))];
                            Let b37 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b34,16)))),1)];
                            SetByte 008014 b36;
                            SetByte 008015 b37;
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          }
                        }
                      } else {
                        Jump: 019186
                      }
                    } else {
                      if (LessThanByte(b29,16)) {
                        SetByte 008206 HiByte(GetLocal(b29));
                        SetByte 008207 LoByte(GetLocal(b29));
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b38 = M[008330];
                        Let b39 = M[008331];
                        if (Equal(MakeHiLo(b38,b39),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b40 = M[008318];
                          Let b41 = M[008319];
                          if (IsZeroByte(b41)) {
                            PopStack popped42;
                            PushStack popped42;
                            SetByte 008014 HiByte(popped42);
                            SetByte 008015 LoByte(popped42);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b41,16)) {
                              SetByte 008014 HiByte(GetLocal(b41));
                              SetByte 008015 LoByte(GetLocal(b41));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b43 = M[Offset(007908,Mul(2,Widen(MinusByte(b41,16))))];
                              Let b44 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b41,16)))),1)];
                              SetByte 008014 b43;
                              SetByte 008015 b44;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        Let b45 = M[Offset(007908,Mul(2,Widen(MinusByte(b29,16))))];
                        Let b46 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b29,16)))),1)];
                        SetByte 008206 b45;
                        SetByte 008207 b46;
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b47 = M[008330];
                        Let b48 = M[008331];
                        if (Equal(MakeHiLo(b47,b48),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b49 = M[008318];
                          Let b50 = M[008319];
                          if (IsZeroByte(b50)) {
                            PopStack popped51;
                            PushStack popped51;
                            SetByte 008014 HiByte(popped51);
                            SetByte 008015 LoByte(popped51);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b50,16)) {
                              SetByte 008014 HiByte(GetLocal(b50));
                              SetByte 008015 LoByte(GetLocal(b50));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b52 = M[Offset(007908,Mul(2,Widen(MinusByte(b50,16))))];
                              Let b53 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b50,16)))),1)];
                              SetByte 008014 b52;
                              SetByte 008015 b53;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      }
                    }
                  } else {
                    Jump: 019179
                  }
                } else {
                  if (LessThanByte(b24,16)) {
                    SetByte 007950 HiByte(GetLocal(b24));
                    SetByte 007951 LoByte(GetLocal(b24));
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b54 = M[008284];
                    Let b55 = M[008285];
                    if (Equal(MakeHiLo(b54,b55),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b56 = M[008284];
                      Let b57 = M[008285];
                      if (IsZeroByte(b57)) {
                        PopStack popped58;
                        PushStack popped58;
                        SetByte 008206 HiByte(popped58);
                        SetByte 008207 LoByte(popped58);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b59 = M[008330];
                        Let b60 = M[008331];
                        if (Equal(MakeHiLo(b59,b60),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b61 = M[008318];
                          Let b62 = M[008319];
                          if (IsZeroByte(b62)) {
                            PopStack popped63;
                            PushStack popped63;
                            SetByte 008014 HiByte(popped63);
                            SetByte 008015 LoByte(popped63);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b62,16)) {
                              SetByte 008014 HiByte(GetLocal(b62));
                              SetByte 008015 LoByte(GetLocal(b62));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b64 = M[Offset(007908,Mul(2,Widen(MinusByte(b62,16))))];
                              Let b65 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b62,16)))),1)];
                              SetByte 008014 b64;
                              SetByte 008015 b65;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b57,16)) {
                          SetByte 008206 HiByte(GetLocal(b57));
                          SetByte 008207 LoByte(GetLocal(b57));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b66 = M[008330];
                          Let b67 = M[008331];
                          if (Equal(MakeHiLo(b66,b67),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b68 = M[008318];
                            Let b69 = M[008319];
                            if (IsZeroByte(b69)) {
                              PopStack popped70;
                              PushStack popped70;
                              SetByte 008014 HiByte(popped70);
                              SetByte 008015 LoByte(popped70);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b69,16)) {
                                SetByte 008014 HiByte(GetLocal(b69));
                                SetByte 008015 LoByte(GetLocal(b69));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b71 = M[Offset(007908,Mul(2,Widen(MinusByte(b69,16))))];
                                Let b72 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b69,16)))),1)];
                                SetByte 008014 b71;
                                SetByte 008015 b72;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b73 = M[Offset(007908,Mul(2,Widen(MinusByte(b57,16))))];
                          Let b74 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b57,16)))),1)];
                          SetByte 008206 b73;
                          SetByte 008207 b74;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b75 = M[008330];
                          Let b76 = M[008331];
                          if (Equal(MakeHiLo(b75,b76),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b77 = M[008318];
                            Let b78 = M[008319];
                            if (IsZeroByte(b78)) {
                              PopStack popped79;
                              PushStack popped79;
                              SetByte 008014 HiByte(popped79);
                              SetByte 008015 LoByte(popped79);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b78,16)) {
                                SetByte 008014 HiByte(GetLocal(b78));
                                SetByte 008015 LoByte(GetLocal(b78));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b80 = M[Offset(007908,Mul(2,Widen(MinusByte(b78,16))))];
                                Let b81 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b78,16)))),1)];
                                SetByte 008014 b80;
                                SetByte 008015 b81;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    Let b82 = M[Offset(007908,Mul(2,Widen(MinusByte(b24,16))))];
                    Let b83 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b24,16)))),1)];
                    SetByte 007950 b82;
                    SetByte 007951 b83;
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b84 = M[008284];
                    Let b85 = M[008285];
                    if (Equal(MakeHiLo(b84,b85),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b86 = M[008284];
                      Let b87 = M[008285];
                      if (IsZeroByte(b87)) {
                        PopStack popped88;
                        PushStack popped88;
                        SetByte 008206 HiByte(popped88);
                        SetByte 008207 LoByte(popped88);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b89 = M[008330];
                        Let b90 = M[008331];
                        if (Equal(MakeHiLo(b89,b90),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b91 = M[008318];
                          Let b92 = M[008319];
                          if (IsZeroByte(b92)) {
                            PopStack popped93;
                            PushStack popped93;
                            SetByte 008014 HiByte(popped93);
                            SetByte 008015 LoByte(popped93);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b92,16)) {
                              SetByte 008014 HiByte(GetLocal(b92));
                              SetByte 008015 LoByte(GetLocal(b92));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b94 = M[Offset(007908,Mul(2,Widen(MinusByte(b92,16))))];
                              Let b95 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b92,16)))),1)];
                              SetByte 008014 b94;
                              SetByte 008015 b95;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b87,16)) {
                          SetByte 008206 HiByte(GetLocal(b87));
                          SetByte 008207 LoByte(GetLocal(b87));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b96 = M[008330];
                          Let b97 = M[008331];
                          if (Equal(MakeHiLo(b96,b97),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b98 = M[008318];
                            Let b99 = M[008319];
                            if (IsZeroByte(b99)) {
                              PopStack popped100;
                              PushStack popped100;
                              SetByte 008014 HiByte(popped100);
                              SetByte 008015 LoByte(popped100);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b99,16)) {
                                SetByte 008014 HiByte(GetLocal(b99));
                                SetByte 008015 LoByte(GetLocal(b99));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b101 = M[Offset(007908,Mul(2,Widen(MinusByte(b99,16))))];
                                Let b102 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b99,16)))),1)];
                                SetByte 008014 b101;
                                SetByte 008015 b102;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b103 = M[Offset(007908,Mul(2,Widen(MinusByte(b87,16))))];
                          Let b104 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b87,16)))),1)];
                          SetByte 008206 b103;
                          SetByte 008207 b104;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b105 = M[008330];
                          Let b106 = M[008331];
                          if (Equal(MakeHiLo(b105,b106),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b107 = M[008318];
                            Let b108 = M[008319];
                            if (IsZeroByte(b108)) {
                              PopStack popped109;
                              PushStack popped109;
                              SetByte 008014 HiByte(popped109);
                              SetByte 008015 LoByte(popped109);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b108,16)) {
                                SetByte 008014 HiByte(GetLocal(b108));
                                SetByte 008015 LoByte(GetLocal(b108));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b110 = M[Offset(007908,Mul(2,Widen(MinusByte(b108,16))))];
                                Let b111 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b108,16)))),1)];
                                SetByte 008014 b110;
                                SetByte 008015 b111;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  }
                }
              } else {
                Jump: 019236
              }
            } else {
              if (LessThanByte(b21,16)) {
                SetLocal b21 Add(GetLocal(b21),1);
                if (GreaterThanEqual(GetLocal(b21),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b112 = M[008272];
                  Let b113 = M[008273];
                  if (IsZeroByte(b113)) {
                    PopStack popped114;
                    PushStack popped114;
                    SetByte 007950 HiByte(popped114);
                    SetByte 007951 LoByte(popped114);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b115 = M[008284];
                    Let b116 = M[008285];
                    if (Equal(MakeHiLo(b115,b116),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b117 = M[008284];
                      Let b118 = M[008285];
                      if (IsZeroByte(b118)) {
                        PopStack popped119;
                        PushStack popped119;
                        SetByte 008206 HiByte(popped119);
                        SetByte 008207 LoByte(popped119);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b120 = M[008330];
                        Let b121 = M[008331];
                        if (Equal(MakeHiLo(b120,b121),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b122 = M[008318];
                          Let b123 = M[008319];
                          if (IsZeroByte(b123)) {
                            PopStack popped124;
                            PushStack popped124;
                            SetByte 008014 HiByte(popped124);
                            SetByte 008015 LoByte(popped124);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b123,16)) {
                              SetByte 008014 HiByte(GetLocal(b123));
                              SetByte 008015 LoByte(GetLocal(b123));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b125 = M[Offset(007908,Mul(2,Widen(MinusByte(b123,16))))];
                              Let b126 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b123,16)))),1)];
                              SetByte 008014 b125;
                              SetByte 008015 b126;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b118,16)) {
                          SetByte 008206 HiByte(GetLocal(b118));
                          SetByte 008207 LoByte(GetLocal(b118));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b127 = M[008330];
                          Let b128 = M[008331];
                          if (Equal(MakeHiLo(b127,b128),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b129 = M[008318];
                            Let b130 = M[008319];
                            if (IsZeroByte(b130)) {
                              PopStack popped131;
                              PushStack popped131;
                              SetByte 008014 HiByte(popped131);
                              SetByte 008015 LoByte(popped131);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b130,16)) {
                                SetByte 008014 HiByte(GetLocal(b130));
                                SetByte 008015 LoByte(GetLocal(b130));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b132 = M[Offset(007908,Mul(2,Widen(MinusByte(b130,16))))];
                                Let b133 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b130,16)))),1)];
                                SetByte 008014 b132;
                                SetByte 008015 b133;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b134 = M[Offset(007908,Mul(2,Widen(MinusByte(b118,16))))];
                          Let b135 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b118,16)))),1)];
                          SetByte 008206 b134;
                          SetByte 008207 b135;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b136 = M[008330];
                          Let b137 = M[008331];
                          if (Equal(MakeHiLo(b136,b137),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b138 = M[008318];
                            Let b139 = M[008319];
                            if (IsZeroByte(b139)) {
                              PopStack popped140;
                              PushStack popped140;
                              SetByte 008014 HiByte(popped140);
                              SetByte 008015 LoByte(popped140);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b139,16)) {
                                SetByte 008014 HiByte(GetLocal(b139));
                                SetByte 008015 LoByte(GetLocal(b139));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b141 = M[Offset(007908,Mul(2,Widen(MinusByte(b139,16))))];
                                Let b142 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b139,16)))),1)];
                                SetByte 008014 b141;
                                SetByte 008015 b142;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b113,16)) {
                      SetByte 007950 HiByte(GetLocal(b113));
                      SetByte 007951 LoByte(GetLocal(b113));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b143 = M[008284];
                      Let b144 = M[008285];
                      if (Equal(MakeHiLo(b143,b144),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b145 = M[008284];
                        Let b146 = M[008285];
                        if (IsZeroByte(b146)) {
                          PopStack popped147;
                          PushStack popped147;
                          SetByte 008206 HiByte(popped147);
                          SetByte 008207 LoByte(popped147);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b148 = M[008330];
                          Let b149 = M[008331];
                          if (Equal(MakeHiLo(b148,b149),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b150 = M[008318];
                            Let b151 = M[008319];
                            if (IsZeroByte(b151)) {
                              PopStack popped152;
                              PushStack popped152;
                              SetByte 008014 HiByte(popped152);
                              SetByte 008015 LoByte(popped152);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b151,16)) {
                                SetByte 008014 HiByte(GetLocal(b151));
                                SetByte 008015 LoByte(GetLocal(b151));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b153 = M[Offset(007908,Mul(2,Widen(MinusByte(b151,16))))];
                                Let b154 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b151,16)))),1)];
                                SetByte 008014 b153;
                                SetByte 008015 b154;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b146,16)) {
                            SetByte 008206 HiByte(GetLocal(b146));
                            SetByte 008207 LoByte(GetLocal(b146));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b155 = M[008330];
                            Let b156 = M[008331];
                            if (Equal(MakeHiLo(b155,b156),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b157 = M[008318];
                              Let b158 = M[008319];
                              if (IsZeroByte(b158)) {
                                PopStack popped159;
                                PushStack popped159;
                                SetByte 008014 HiByte(popped159);
                                SetByte 008015 LoByte(popped159);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b158,16)) {
                                  SetByte 008014 HiByte(GetLocal(b158));
                                  SetByte 008015 LoByte(GetLocal(b158));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b160 = M[Offset(007908,Mul(2,Widen(MinusByte(b158,16))))];
                                  Let b161 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b158,16)))),1)];
                                  SetByte 008014 b160;
                                  SetByte 008015 b161;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b162 = M[Offset(007908,Mul(2,Widen(MinusByte(b146,16))))];
                            Let b163 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b146,16)))),1)];
                            SetByte 008206 b162;
                            SetByte 008207 b163;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b164 = M[008330];
                            Let b165 = M[008331];
                            if (Equal(MakeHiLo(b164,b165),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b166 = M[008318];
                              Let b167 = M[008319];
                              if (IsZeroByte(b167)) {
                                PopStack popped168;
                                PushStack popped168;
                                SetByte 008014 HiByte(popped168);
                                SetByte 008015 LoByte(popped168);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b167,16)) {
                                  SetByte 008014 HiByte(GetLocal(b167));
                                  SetByte 008015 LoByte(GetLocal(b167));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b169 = M[Offset(007908,Mul(2,Widen(MinusByte(b167,16))))];
                                  Let b170 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b167,16)))),1)];
                                  SetByte 008014 b169;
                                  SetByte 008015 b170;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b171 = M[Offset(007908,Mul(2,Widen(MinusByte(b113,16))))];
                      Let b172 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b113,16)))),1)];
                      SetByte 007950 b171;
                      SetByte 007951 b172;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b173 = M[008284];
                      Let b174 = M[008285];
                      if (Equal(MakeHiLo(b173,b174),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b175 = M[008284];
                        Let b176 = M[008285];
                        if (IsZeroByte(b176)) {
                          PopStack popped177;
                          PushStack popped177;
                          SetByte 008206 HiByte(popped177);
                          SetByte 008207 LoByte(popped177);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b178 = M[008330];
                          Let b179 = M[008331];
                          if (Equal(MakeHiLo(b178,b179),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b180 = M[008318];
                            Let b181 = M[008319];
                            if (IsZeroByte(b181)) {
                              PopStack popped182;
                              PushStack popped182;
                              SetByte 008014 HiByte(popped182);
                              SetByte 008015 LoByte(popped182);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b181,16)) {
                                SetByte 008014 HiByte(GetLocal(b181));
                                SetByte 008015 LoByte(GetLocal(b181));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b183 = M[Offset(007908,Mul(2,Widen(MinusByte(b181,16))))];
                                Let b184 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b181,16)))),1)];
                                SetByte 008014 b183;
                                SetByte 008015 b184;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b176,16)) {
                            SetByte 008206 HiByte(GetLocal(b176));
                            SetByte 008207 LoByte(GetLocal(b176));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b185 = M[008330];
                            Let b186 = M[008331];
                            if (Equal(MakeHiLo(b185,b186),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b187 = M[008318];
                              Let b188 = M[008319];
                              if (IsZeroByte(b188)) {
                                PopStack popped189;
                                PushStack popped189;
                                SetByte 008014 HiByte(popped189);
                                SetByte 008015 LoByte(popped189);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b188,16)) {
                                  SetByte 008014 HiByte(GetLocal(b188));
                                  SetByte 008015 LoByte(GetLocal(b188));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b190 = M[Offset(007908,Mul(2,Widen(MinusByte(b188,16))))];
                                  Let b191 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b188,16)))),1)];
                                  SetByte 008014 b190;
                                  SetByte 008015 b191;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b192 = M[Offset(007908,Mul(2,Widen(MinusByte(b176,16))))];
                            Let b193 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b176,16)))),1)];
                            SetByte 008206 b192;
                            SetByte 008207 b193;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b194 = M[008330];
                            Let b195 = M[008331];
                            if (Equal(MakeHiLo(b194,b195),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b196 = M[008318];
                              Let b197 = M[008319];
                              if (IsZeroByte(b197)) {
                                PopStack popped198;
                                PushStack popped198;
                                SetByte 008014 HiByte(popped198);
                                SetByte 008015 LoByte(popped198);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b197,16)) {
                                  SetByte 008014 HiByte(GetLocal(b197));
                                  SetByte 008015 LoByte(GetLocal(b197));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b199 = M[Offset(007908,Mul(2,Widen(MinusByte(b197,16))))];
                                  Let b200 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b197,16)))),1)];
                                  SetByte 008014 b199;
                                  SetByte 008015 b200;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              } else {
                Let b201 = M[Offset(007908,Mul(2,Widen(MinusByte(b21,16))))];
                Let b202 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b21,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b21,16)))) HiByte(Add(MakeHiLo(b201,b202),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b21,16)))),1) LoByte(Add(MakeHiLo(b201,b202),1));
                if (GreaterThanEqual(MakeHiLo(b201,b202),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b203 = M[008272];
                  Let b204 = M[008273];
                  if (IsZeroByte(b204)) {
                    PopStack popped205;
                    PushStack popped205;
                    SetByte 007950 HiByte(popped205);
                    SetByte 007951 LoByte(popped205);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b206 = M[008284];
                    Let b207 = M[008285];
                    if (Equal(MakeHiLo(b206,b207),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b208 = M[008284];
                      Let b209 = M[008285];
                      if (IsZeroByte(b209)) {
                        PopStack popped210;
                        PushStack popped210;
                        SetByte 008206 HiByte(popped210);
                        SetByte 008207 LoByte(popped210);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b211 = M[008330];
                        Let b212 = M[008331];
                        if (Equal(MakeHiLo(b211,b212),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b213 = M[008318];
                          Let b214 = M[008319];
                          if (IsZeroByte(b214)) {
                            PopStack popped215;
                            PushStack popped215;
                            SetByte 008014 HiByte(popped215);
                            SetByte 008015 LoByte(popped215);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b214,16)) {
                              SetByte 008014 HiByte(GetLocal(b214));
                              SetByte 008015 LoByte(GetLocal(b214));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b216 = M[Offset(007908,Mul(2,Widen(MinusByte(b214,16))))];
                              Let b217 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b214,16)))),1)];
                              SetByte 008014 b216;
                              SetByte 008015 b217;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b209,16)) {
                          SetByte 008206 HiByte(GetLocal(b209));
                          SetByte 008207 LoByte(GetLocal(b209));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b218 = M[008330];
                          Let b219 = M[008331];
                          if (Equal(MakeHiLo(b218,b219),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b220 = M[008318];
                            Let b221 = M[008319];
                            if (IsZeroByte(b221)) {
                              PopStack popped222;
                              PushStack popped222;
                              SetByte 008014 HiByte(popped222);
                              SetByte 008015 LoByte(popped222);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b221,16)) {
                                SetByte 008014 HiByte(GetLocal(b221));
                                SetByte 008015 LoByte(GetLocal(b221));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b223 = M[Offset(007908,Mul(2,Widen(MinusByte(b221,16))))];
                                Let b224 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b221,16)))),1)];
                                SetByte 008014 b223;
                                SetByte 008015 b224;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b225 = M[Offset(007908,Mul(2,Widen(MinusByte(b209,16))))];
                          Let b226 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b209,16)))),1)];
                          SetByte 008206 b225;
                          SetByte 008207 b226;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b227 = M[008330];
                          Let b228 = M[008331];
                          if (Equal(MakeHiLo(b227,b228),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b229 = M[008318];
                            Let b230 = M[008319];
                            if (IsZeroByte(b230)) {
                              PopStack popped231;
                              PushStack popped231;
                              SetByte 008014 HiByte(popped231);
                              SetByte 008015 LoByte(popped231);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b230,16)) {
                                SetByte 008014 HiByte(GetLocal(b230));
                                SetByte 008015 LoByte(GetLocal(b230));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b232 = M[Offset(007908,Mul(2,Widen(MinusByte(b230,16))))];
                                Let b233 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b230,16)))),1)];
                                SetByte 008014 b232;
                                SetByte 008015 b233;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b204,16)) {
                      SetByte 007950 HiByte(GetLocal(b204));
                      SetByte 007951 LoByte(GetLocal(b204));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b234 = M[008284];
                      Let b235 = M[008285];
                      if (Equal(MakeHiLo(b234,b235),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b236 = M[008284];
                        Let b237 = M[008285];
                        if (IsZeroByte(b237)) {
                          PopStack popped238;
                          PushStack popped238;
                          SetByte 008206 HiByte(popped238);
                          SetByte 008207 LoByte(popped238);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b239 = M[008330];
                          Let b240 = M[008331];
                          if (Equal(MakeHiLo(b239,b240),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b241 = M[008318];
                            Let b242 = M[008319];
                            if (IsZeroByte(b242)) {
                              PopStack popped243;
                              PushStack popped243;
                              SetByte 008014 HiByte(popped243);
                              SetByte 008015 LoByte(popped243);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b242,16)) {
                                SetByte 008014 HiByte(GetLocal(b242));
                                SetByte 008015 LoByte(GetLocal(b242));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b244 = M[Offset(007908,Mul(2,Widen(MinusByte(b242,16))))];
                                Let b245 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b242,16)))),1)];
                                SetByte 008014 b244;
                                SetByte 008015 b245;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b237,16)) {
                            SetByte 008206 HiByte(GetLocal(b237));
                            SetByte 008207 LoByte(GetLocal(b237));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b246 = M[008330];
                            Let b247 = M[008331];
                            if (Equal(MakeHiLo(b246,b247),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b248 = M[008318];
                              Let b249 = M[008319];
                              if (IsZeroByte(b249)) {
                                PopStack popped250;
                                PushStack popped250;
                                SetByte 008014 HiByte(popped250);
                                SetByte 008015 LoByte(popped250);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b249,16)) {
                                  SetByte 008014 HiByte(GetLocal(b249));
                                  SetByte 008015 LoByte(GetLocal(b249));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b251 = M[Offset(007908,Mul(2,Widen(MinusByte(b249,16))))];
                                  Let b252 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b249,16)))),1)];
                                  SetByte 008014 b251;
                                  SetByte 008015 b252;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b253 = M[Offset(007908,Mul(2,Widen(MinusByte(b237,16))))];
                            Let b254 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b237,16)))),1)];
                            SetByte 008206 b253;
                            SetByte 008207 b254;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b255 = M[008330];
                            Let b256 = M[008331];
                            if (Equal(MakeHiLo(b255,b256),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b257 = M[008318];
                              Let b258 = M[008319];
                              if (IsZeroByte(b258)) {
                                PopStack popped259;
                                PushStack popped259;
                                SetByte 008014 HiByte(popped259);
                                SetByte 008015 LoByte(popped259);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b258,16)) {
                                  SetByte 008014 HiByte(GetLocal(b258));
                                  SetByte 008015 LoByte(GetLocal(b258));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b260 = M[Offset(007908,Mul(2,Widen(MinusByte(b258,16))))];
                                  Let b261 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b258,16)))),1)];
                                  SetByte 008014 b260;
                                  SetByte 008015 b261;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b262 = M[Offset(007908,Mul(2,Widen(MinusByte(b204,16))))];
                      Let b263 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b204,16)))),1)];
                      SetByte 007950 b262;
                      SetByte 007951 b263;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b264 = M[008284];
                      Let b265 = M[008285];
                      if (Equal(MakeHiLo(b264,b265),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b266 = M[008284];
                        Let b267 = M[008285];
                        if (IsZeroByte(b267)) {
                          PopStack popped268;
                          PushStack popped268;
                          SetByte 008206 HiByte(popped268);
                          SetByte 008207 LoByte(popped268);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b269 = M[008330];
                          Let b270 = M[008331];
                          if (Equal(MakeHiLo(b269,b270),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b271 = M[008318];
                            Let b272 = M[008319];
                            if (IsZeroByte(b272)) {
                              PopStack popped273;
                              PushStack popped273;
                              SetByte 008014 HiByte(popped273);
                              SetByte 008015 LoByte(popped273);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b272,16)) {
                                SetByte 008014 HiByte(GetLocal(b272));
                                SetByte 008015 LoByte(GetLocal(b272));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b274 = M[Offset(007908,Mul(2,Widen(MinusByte(b272,16))))];
                                Let b275 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b272,16)))),1)];
                                SetByte 008014 b274;
                                SetByte 008015 b275;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b267,16)) {
                            SetByte 008206 HiByte(GetLocal(b267));
                            SetByte 008207 LoByte(GetLocal(b267));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b276 = M[008330];
                            Let b277 = M[008331];
                            if (Equal(MakeHiLo(b276,b277),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b278 = M[008318];
                              Let b279 = M[008319];
                              if (IsZeroByte(b279)) {
                                PopStack popped280;
                                PushStack popped280;
                                SetByte 008014 HiByte(popped280);
                                SetByte 008015 LoByte(popped280);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b279,16)) {
                                  SetByte 008014 HiByte(GetLocal(b279));
                                  SetByte 008015 LoByte(GetLocal(b279));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b281 = M[Offset(007908,Mul(2,Widen(MinusByte(b279,16))))];
                                  Let b282 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b279,16)))),1)];
                                  SetByte 008014 b281;
                                  SetByte 008015 b282;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b283 = M[Offset(007908,Mul(2,Widen(MinusByte(b267,16))))];
                            Let b284 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b267,16)))),1)];
                            SetByte 008206 b283;
                            SetByte 008207 b284;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b285 = M[008330];
                            Let b286 = M[008331];
                            if (Equal(MakeHiLo(b285,b286),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b287 = M[008318];
                              Let b288 = M[008319];
                              if (IsZeroByte(b288)) {
                                PopStack popped289;
                                PushStack popped289;
                                SetByte 008014 HiByte(popped289);
                                SetByte 008015 LoByte(popped289);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b288,16)) {
                                  SetByte 008014 HiByte(GetLocal(b288));
                                  SetByte 008015 LoByte(GetLocal(b288));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b290 = M[Offset(007908,Mul(2,Widen(MinusByte(b288,16))))];
                                  Let b291 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b288,16)))),1)];
                                  SetByte 008014 b290;
                                  SetByte 008015 b291;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              }
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b17,b18)),1));
            TraceOperation 019135 (Inc_chk (Var (Global 18)) (Con 56) (Branch F (Dloc 019236)));
            Let b292 = M[007944];
            Let b293 = M[007945];
            if (IsZeroByte(b293)) {
              PopStack popped294;
              PushStack Add(popped294,1);
              if (GreaterThanEqual(popped294,56)) {
                TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                Let b295 = M[008272];
                Let b296 = M[008273];
                if (IsZeroByte(b296)) {
                  PopStack popped297;
                  PushStack popped297;
                  SetByte 007950 HiByte(popped297);
                  SetByte 007951 LoByte(popped297);
                  TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                  Let b298 = M[008284];
                  Let b299 = M[008285];
                  if (Equal(MakeHiLo(b298,b299),0)) {
                    TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                    Let b300 = M[008284];
                    Let b301 = M[008285];
                    if (IsZeroByte(b301)) {
                      PopStack popped302;
                      PushStack popped302;
                      SetByte 008206 HiByte(popped302);
                      SetByte 008207 LoByte(popped302);
                      TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                      Let b303 = M[008330];
                      Let b304 = M[008331];
                      if (Equal(MakeHiLo(b303,b304),0)) {
                        TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                        Let b305 = M[008318];
                        Let b306 = M[008319];
                        if (IsZeroByte(b306)) {
                          PopStack popped307;
                          PushStack popped307;
                          SetByte 008014 HiByte(popped307);
                          SetByte 008015 LoByte(popped307);
                          TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                          Jump: 019193
                        } else {
                          if (LessThanByte(b306,16)) {
                            SetByte 008014 HiByte(GetLocal(b306));
                            SetByte 008015 LoByte(GetLocal(b306));
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            Let b308 = M[Offset(007908,Mul(2,Widen(MinusByte(b306,16))))];
                            Let b309 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b306,16)))),1)];
                            SetByte 008014 b308;
                            SetByte 008015 b309;
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          }
                        }
                      } else {
                        Jump: 019186
                      }
                    } else {
                      if (LessThanByte(b301,16)) {
                        SetByte 008206 HiByte(GetLocal(b301));
                        SetByte 008207 LoByte(GetLocal(b301));
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b310 = M[008330];
                        Let b311 = M[008331];
                        if (Equal(MakeHiLo(b310,b311),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b312 = M[008318];
                          Let b313 = M[008319];
                          if (IsZeroByte(b313)) {
                            PopStack popped314;
                            PushStack popped314;
                            SetByte 008014 HiByte(popped314);
                            SetByte 008015 LoByte(popped314);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b313,16)) {
                              SetByte 008014 HiByte(GetLocal(b313));
                              SetByte 008015 LoByte(GetLocal(b313));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b315 = M[Offset(007908,Mul(2,Widen(MinusByte(b313,16))))];
                              Let b316 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b313,16)))),1)];
                              SetByte 008014 b315;
                              SetByte 008015 b316;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        Let b317 = M[Offset(007908,Mul(2,Widen(MinusByte(b301,16))))];
                        Let b318 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b301,16)))),1)];
                        SetByte 008206 b317;
                        SetByte 008207 b318;
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b319 = M[008330];
                        Let b320 = M[008331];
                        if (Equal(MakeHiLo(b319,b320),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b321 = M[008318];
                          Let b322 = M[008319];
                          if (IsZeroByte(b322)) {
                            PopStack popped323;
                            PushStack popped323;
                            SetByte 008014 HiByte(popped323);
                            SetByte 008015 LoByte(popped323);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b322,16)) {
                              SetByte 008014 HiByte(GetLocal(b322));
                              SetByte 008015 LoByte(GetLocal(b322));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b324 = M[Offset(007908,Mul(2,Widen(MinusByte(b322,16))))];
                              Let b325 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b322,16)))),1)];
                              SetByte 008014 b324;
                              SetByte 008015 b325;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      }
                    }
                  } else {
                    Jump: 019179
                  }
                } else {
                  if (LessThanByte(b296,16)) {
                    SetByte 007950 HiByte(GetLocal(b296));
                    SetByte 007951 LoByte(GetLocal(b296));
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b326 = M[008284];
                    Let b327 = M[008285];
                    if (Equal(MakeHiLo(b326,b327),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b328 = M[008284];
                      Let b329 = M[008285];
                      if (IsZeroByte(b329)) {
                        PopStack popped330;
                        PushStack popped330;
                        SetByte 008206 HiByte(popped330);
                        SetByte 008207 LoByte(popped330);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b331 = M[008330];
                        Let b332 = M[008331];
                        if (Equal(MakeHiLo(b331,b332),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b333 = M[008318];
                          Let b334 = M[008319];
                          if (IsZeroByte(b334)) {
                            PopStack popped335;
                            PushStack popped335;
                            SetByte 008014 HiByte(popped335);
                            SetByte 008015 LoByte(popped335);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b334,16)) {
                              SetByte 008014 HiByte(GetLocal(b334));
                              SetByte 008015 LoByte(GetLocal(b334));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b336 = M[Offset(007908,Mul(2,Widen(MinusByte(b334,16))))];
                              Let b337 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b334,16)))),1)];
                              SetByte 008014 b336;
                              SetByte 008015 b337;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b329,16)) {
                          SetByte 008206 HiByte(GetLocal(b329));
                          SetByte 008207 LoByte(GetLocal(b329));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b338 = M[008330];
                          Let b339 = M[008331];
                          if (Equal(MakeHiLo(b338,b339),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b340 = M[008318];
                            Let b341 = M[008319];
                            if (IsZeroByte(b341)) {
                              PopStack popped342;
                              PushStack popped342;
                              SetByte 008014 HiByte(popped342);
                              SetByte 008015 LoByte(popped342);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b341,16)) {
                                SetByte 008014 HiByte(GetLocal(b341));
                                SetByte 008015 LoByte(GetLocal(b341));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b343 = M[Offset(007908,Mul(2,Widen(MinusByte(b341,16))))];
                                Let b344 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b341,16)))),1)];
                                SetByte 008014 b343;
                                SetByte 008015 b344;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b345 = M[Offset(007908,Mul(2,Widen(MinusByte(b329,16))))];
                          Let b346 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b329,16)))),1)];
                          SetByte 008206 b345;
                          SetByte 008207 b346;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b347 = M[008330];
                          Let b348 = M[008331];
                          if (Equal(MakeHiLo(b347,b348),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b349 = M[008318];
                            Let b350 = M[008319];
                            if (IsZeroByte(b350)) {
                              PopStack popped351;
                              PushStack popped351;
                              SetByte 008014 HiByte(popped351);
                              SetByte 008015 LoByte(popped351);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b350,16)) {
                                SetByte 008014 HiByte(GetLocal(b350));
                                SetByte 008015 LoByte(GetLocal(b350));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b352 = M[Offset(007908,Mul(2,Widen(MinusByte(b350,16))))];
                                Let b353 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b350,16)))),1)];
                                SetByte 008014 b352;
                                SetByte 008015 b353;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    Let b354 = M[Offset(007908,Mul(2,Widen(MinusByte(b296,16))))];
                    Let b355 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b296,16)))),1)];
                    SetByte 007950 b354;
                    SetByte 007951 b355;
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b356 = M[008284];
                    Let b357 = M[008285];
                    if (Equal(MakeHiLo(b356,b357),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b358 = M[008284];
                      Let b359 = M[008285];
                      if (IsZeroByte(b359)) {
                        PopStack popped360;
                        PushStack popped360;
                        SetByte 008206 HiByte(popped360);
                        SetByte 008207 LoByte(popped360);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b361 = M[008330];
                        Let b362 = M[008331];
                        if (Equal(MakeHiLo(b361,b362),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b363 = M[008318];
                          Let b364 = M[008319];
                          if (IsZeroByte(b364)) {
                            PopStack popped365;
                            PushStack popped365;
                            SetByte 008014 HiByte(popped365);
                            SetByte 008015 LoByte(popped365);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b364,16)) {
                              SetByte 008014 HiByte(GetLocal(b364));
                              SetByte 008015 LoByte(GetLocal(b364));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b366 = M[Offset(007908,Mul(2,Widen(MinusByte(b364,16))))];
                              Let b367 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b364,16)))),1)];
                              SetByte 008014 b366;
                              SetByte 008015 b367;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b359,16)) {
                          SetByte 008206 HiByte(GetLocal(b359));
                          SetByte 008207 LoByte(GetLocal(b359));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b368 = M[008330];
                          Let b369 = M[008331];
                          if (Equal(MakeHiLo(b368,b369),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b370 = M[008318];
                            Let b371 = M[008319];
                            if (IsZeroByte(b371)) {
                              PopStack popped372;
                              PushStack popped372;
                              SetByte 008014 HiByte(popped372);
                              SetByte 008015 LoByte(popped372);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b371,16)) {
                                SetByte 008014 HiByte(GetLocal(b371));
                                SetByte 008015 LoByte(GetLocal(b371));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b373 = M[Offset(007908,Mul(2,Widen(MinusByte(b371,16))))];
                                Let b374 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b371,16)))),1)];
                                SetByte 008014 b373;
                                SetByte 008015 b374;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b375 = M[Offset(007908,Mul(2,Widen(MinusByte(b359,16))))];
                          Let b376 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b359,16)))),1)];
                          SetByte 008206 b375;
                          SetByte 008207 b376;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b377 = M[008330];
                          Let b378 = M[008331];
                          if (Equal(MakeHiLo(b377,b378),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b379 = M[008318];
                            Let b380 = M[008319];
                            if (IsZeroByte(b380)) {
                              PopStack popped381;
                              PushStack popped381;
                              SetByte 008014 HiByte(popped381);
                              SetByte 008015 LoByte(popped381);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b380,16)) {
                                SetByte 008014 HiByte(GetLocal(b380));
                                SetByte 008015 LoByte(GetLocal(b380));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b382 = M[Offset(007908,Mul(2,Widen(MinusByte(b380,16))))];
                                Let b383 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b380,16)))),1)];
                                SetByte 008014 b382;
                                SetByte 008015 b383;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  }
                }
              } else {
                Jump: 019236
              }
            } else {
              if (LessThanByte(b293,16)) {
                SetLocal b293 Add(GetLocal(b293),1);
                if (GreaterThanEqual(GetLocal(b293),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b384 = M[008272];
                  Let b385 = M[008273];
                  if (IsZeroByte(b385)) {
                    PopStack popped386;
                    PushStack popped386;
                    SetByte 007950 HiByte(popped386);
                    SetByte 007951 LoByte(popped386);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b387 = M[008284];
                    Let b388 = M[008285];
                    if (Equal(MakeHiLo(b387,b388),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b389 = M[008284];
                      Let b390 = M[008285];
                      if (IsZeroByte(b390)) {
                        PopStack popped391;
                        PushStack popped391;
                        SetByte 008206 HiByte(popped391);
                        SetByte 008207 LoByte(popped391);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b392 = M[008330];
                        Let b393 = M[008331];
                        if (Equal(MakeHiLo(b392,b393),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b394 = M[008318];
                          Let b395 = M[008319];
                          if (IsZeroByte(b395)) {
                            PopStack popped396;
                            PushStack popped396;
                            SetByte 008014 HiByte(popped396);
                            SetByte 008015 LoByte(popped396);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b395,16)) {
                              SetByte 008014 HiByte(GetLocal(b395));
                              SetByte 008015 LoByte(GetLocal(b395));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b397 = M[Offset(007908,Mul(2,Widen(MinusByte(b395,16))))];
                              Let b398 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b395,16)))),1)];
                              SetByte 008014 b397;
                              SetByte 008015 b398;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b390,16)) {
                          SetByte 008206 HiByte(GetLocal(b390));
                          SetByte 008207 LoByte(GetLocal(b390));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b399 = M[008330];
                          Let b400 = M[008331];
                          if (Equal(MakeHiLo(b399,b400),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b401 = M[008318];
                            Let b402 = M[008319];
                            if (IsZeroByte(b402)) {
                              PopStack popped403;
                              PushStack popped403;
                              SetByte 008014 HiByte(popped403);
                              SetByte 008015 LoByte(popped403);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b402,16)) {
                                SetByte 008014 HiByte(GetLocal(b402));
                                SetByte 008015 LoByte(GetLocal(b402));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b404 = M[Offset(007908,Mul(2,Widen(MinusByte(b402,16))))];
                                Let b405 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b402,16)))),1)];
                                SetByte 008014 b404;
                                SetByte 008015 b405;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b406 = M[Offset(007908,Mul(2,Widen(MinusByte(b390,16))))];
                          Let b407 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b390,16)))),1)];
                          SetByte 008206 b406;
                          SetByte 008207 b407;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b408 = M[008330];
                          Let b409 = M[008331];
                          if (Equal(MakeHiLo(b408,b409),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b410 = M[008318];
                            Let b411 = M[008319];
                            if (IsZeroByte(b411)) {
                              PopStack popped412;
                              PushStack popped412;
                              SetByte 008014 HiByte(popped412);
                              SetByte 008015 LoByte(popped412);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b411,16)) {
                                SetByte 008014 HiByte(GetLocal(b411));
                                SetByte 008015 LoByte(GetLocal(b411));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b413 = M[Offset(007908,Mul(2,Widen(MinusByte(b411,16))))];
                                Let b414 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b411,16)))),1)];
                                SetByte 008014 b413;
                                SetByte 008015 b414;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b385,16)) {
                      SetByte 007950 HiByte(GetLocal(b385));
                      SetByte 007951 LoByte(GetLocal(b385));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b415 = M[008284];
                      Let b416 = M[008285];
                      if (Equal(MakeHiLo(b415,b416),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b417 = M[008284];
                        Let b418 = M[008285];
                        if (IsZeroByte(b418)) {
                          PopStack popped419;
                          PushStack popped419;
                          SetByte 008206 HiByte(popped419);
                          SetByte 008207 LoByte(popped419);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b420 = M[008330];
                          Let b421 = M[008331];
                          if (Equal(MakeHiLo(b420,b421),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b422 = M[008318];
                            Let b423 = M[008319];
                            if (IsZeroByte(b423)) {
                              PopStack popped424;
                              PushStack popped424;
                              SetByte 008014 HiByte(popped424);
                              SetByte 008015 LoByte(popped424);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b423,16)) {
                                SetByte 008014 HiByte(GetLocal(b423));
                                SetByte 008015 LoByte(GetLocal(b423));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b425 = M[Offset(007908,Mul(2,Widen(MinusByte(b423,16))))];
                                Let b426 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b423,16)))),1)];
                                SetByte 008014 b425;
                                SetByte 008015 b426;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b418,16)) {
                            SetByte 008206 HiByte(GetLocal(b418));
                            SetByte 008207 LoByte(GetLocal(b418));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b427 = M[008330];
                            Let b428 = M[008331];
                            if (Equal(MakeHiLo(b427,b428),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b429 = M[008318];
                              Let b430 = M[008319];
                              if (IsZeroByte(b430)) {
                                PopStack popped431;
                                PushStack popped431;
                                SetByte 008014 HiByte(popped431);
                                SetByte 008015 LoByte(popped431);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b430,16)) {
                                  SetByte 008014 HiByte(GetLocal(b430));
                                  SetByte 008015 LoByte(GetLocal(b430));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b432 = M[Offset(007908,Mul(2,Widen(MinusByte(b430,16))))];
                                  Let b433 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b430,16)))),1)];
                                  SetByte 008014 b432;
                                  SetByte 008015 b433;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b434 = M[Offset(007908,Mul(2,Widen(MinusByte(b418,16))))];
                            Let b435 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b418,16)))),1)];
                            SetByte 008206 b434;
                            SetByte 008207 b435;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b436 = M[008330];
                            Let b437 = M[008331];
                            if (Equal(MakeHiLo(b436,b437),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b438 = M[008318];
                              Let b439 = M[008319];
                              if (IsZeroByte(b439)) {
                                PopStack popped440;
                                PushStack popped440;
                                SetByte 008014 HiByte(popped440);
                                SetByte 008015 LoByte(popped440);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b439,16)) {
                                  SetByte 008014 HiByte(GetLocal(b439));
                                  SetByte 008015 LoByte(GetLocal(b439));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b441 = M[Offset(007908,Mul(2,Widen(MinusByte(b439,16))))];
                                  Let b442 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b439,16)))),1)];
                                  SetByte 008014 b441;
                                  SetByte 008015 b442;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b443 = M[Offset(007908,Mul(2,Widen(MinusByte(b385,16))))];
                      Let b444 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b385,16)))),1)];
                      SetByte 007950 b443;
                      SetByte 007951 b444;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b445 = M[008284];
                      Let b446 = M[008285];
                      if (Equal(MakeHiLo(b445,b446),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b447 = M[008284];
                        Let b448 = M[008285];
                        if (IsZeroByte(b448)) {
                          PopStack popped449;
                          PushStack popped449;
                          SetByte 008206 HiByte(popped449);
                          SetByte 008207 LoByte(popped449);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b450 = M[008330];
                          Let b451 = M[008331];
                          if (Equal(MakeHiLo(b450,b451),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b452 = M[008318];
                            Let b453 = M[008319];
                            if (IsZeroByte(b453)) {
                              PopStack popped454;
                              PushStack popped454;
                              SetByte 008014 HiByte(popped454);
                              SetByte 008015 LoByte(popped454);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b453,16)) {
                                SetByte 008014 HiByte(GetLocal(b453));
                                SetByte 008015 LoByte(GetLocal(b453));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b455 = M[Offset(007908,Mul(2,Widen(MinusByte(b453,16))))];
                                Let b456 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b453,16)))),1)];
                                SetByte 008014 b455;
                                SetByte 008015 b456;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b448,16)) {
                            SetByte 008206 HiByte(GetLocal(b448));
                            SetByte 008207 LoByte(GetLocal(b448));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b457 = M[008330];
                            Let b458 = M[008331];
                            if (Equal(MakeHiLo(b457,b458),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b459 = M[008318];
                              Let b460 = M[008319];
                              if (IsZeroByte(b460)) {
                                PopStack popped461;
                                PushStack popped461;
                                SetByte 008014 HiByte(popped461);
                                SetByte 008015 LoByte(popped461);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b460,16)) {
                                  SetByte 008014 HiByte(GetLocal(b460));
                                  SetByte 008015 LoByte(GetLocal(b460));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b462 = M[Offset(007908,Mul(2,Widen(MinusByte(b460,16))))];
                                  Let b463 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b460,16)))),1)];
                                  SetByte 008014 b462;
                                  SetByte 008015 b463;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b464 = M[Offset(007908,Mul(2,Widen(MinusByte(b448,16))))];
                            Let b465 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b448,16)))),1)];
                            SetByte 008206 b464;
                            SetByte 008207 b465;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b466 = M[008330];
                            Let b467 = M[008331];
                            if (Equal(MakeHiLo(b466,b467),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b468 = M[008318];
                              Let b469 = M[008319];
                              if (IsZeroByte(b469)) {
                                PopStack popped470;
                                PushStack popped470;
                                SetByte 008014 HiByte(popped470);
                                SetByte 008015 LoByte(popped470);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b469,16)) {
                                  SetByte 008014 HiByte(GetLocal(b469));
                                  SetByte 008015 LoByte(GetLocal(b469));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b471 = M[Offset(007908,Mul(2,Widen(MinusByte(b469,16))))];
                                  Let b472 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b469,16)))),1)];
                                  SetByte 008014 b471;
                                  SetByte 008015 b472;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              } else {
                Let b473 = M[Offset(007908,Mul(2,Widen(MinusByte(b293,16))))];
                Let b474 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b293,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b293,16)))) HiByte(Add(MakeHiLo(b473,b474),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b293,16)))),1) LoByte(Add(MakeHiLo(b473,b474),1));
                if (GreaterThanEqual(MakeHiLo(b473,b474),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b475 = M[008272];
                  Let b476 = M[008273];
                  if (IsZeroByte(b476)) {
                    PopStack popped477;
                    PushStack popped477;
                    SetByte 007950 HiByte(popped477);
                    SetByte 007951 LoByte(popped477);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b478 = M[008284];
                    Let b479 = M[008285];
                    if (Equal(MakeHiLo(b478,b479),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b480 = M[008284];
                      Let b481 = M[008285];
                      if (IsZeroByte(b481)) {
                        PopStack popped482;
                        PushStack popped482;
                        SetByte 008206 HiByte(popped482);
                        SetByte 008207 LoByte(popped482);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b483 = M[008330];
                        Let b484 = M[008331];
                        if (Equal(MakeHiLo(b483,b484),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b485 = M[008318];
                          Let b486 = M[008319];
                          if (IsZeroByte(b486)) {
                            PopStack popped487;
                            PushStack popped487;
                            SetByte 008014 HiByte(popped487);
                            SetByte 008015 LoByte(popped487);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b486,16)) {
                              SetByte 008014 HiByte(GetLocal(b486));
                              SetByte 008015 LoByte(GetLocal(b486));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b488 = M[Offset(007908,Mul(2,Widen(MinusByte(b486,16))))];
                              Let b489 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b486,16)))),1)];
                              SetByte 008014 b488;
                              SetByte 008015 b489;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b481,16)) {
                          SetByte 008206 HiByte(GetLocal(b481));
                          SetByte 008207 LoByte(GetLocal(b481));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b490 = M[008330];
                          Let b491 = M[008331];
                          if (Equal(MakeHiLo(b490,b491),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b492 = M[008318];
                            Let b493 = M[008319];
                            if (IsZeroByte(b493)) {
                              PopStack popped494;
                              PushStack popped494;
                              SetByte 008014 HiByte(popped494);
                              SetByte 008015 LoByte(popped494);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b493,16)) {
                                SetByte 008014 HiByte(GetLocal(b493));
                                SetByte 008015 LoByte(GetLocal(b493));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b495 = M[Offset(007908,Mul(2,Widen(MinusByte(b493,16))))];
                                Let b496 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b493,16)))),1)];
                                SetByte 008014 b495;
                                SetByte 008015 b496;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b497 = M[Offset(007908,Mul(2,Widen(MinusByte(b481,16))))];
                          Let b498 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b481,16)))),1)];
                          SetByte 008206 b497;
                          SetByte 008207 b498;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b499 = M[008330];
                          Let b500 = M[008331];
                          if (Equal(MakeHiLo(b499,b500),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b501 = M[008318];
                            Let b502 = M[008319];
                            if (IsZeroByte(b502)) {
                              PopStack popped503;
                              PushStack popped503;
                              SetByte 008014 HiByte(popped503);
                              SetByte 008015 LoByte(popped503);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b502,16)) {
                                SetByte 008014 HiByte(GetLocal(b502));
                                SetByte 008015 LoByte(GetLocal(b502));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b504 = M[Offset(007908,Mul(2,Widen(MinusByte(b502,16))))];
                                Let b505 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b502,16)))),1)];
                                SetByte 008014 b504;
                                SetByte 008015 b505;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b476,16)) {
                      SetByte 007950 HiByte(GetLocal(b476));
                      SetByte 007951 LoByte(GetLocal(b476));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b506 = M[008284];
                      Let b507 = M[008285];
                      if (Equal(MakeHiLo(b506,b507),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b508 = M[008284];
                        Let b509 = M[008285];
                        if (IsZeroByte(b509)) {
                          PopStack popped510;
                          PushStack popped510;
                          SetByte 008206 HiByte(popped510);
                          SetByte 008207 LoByte(popped510);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b511 = M[008330];
                          Let b512 = M[008331];
                          if (Equal(MakeHiLo(b511,b512),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b513 = M[008318];
                            Let b514 = M[008319];
                            if (IsZeroByte(b514)) {
                              PopStack popped515;
                              PushStack popped515;
                              SetByte 008014 HiByte(popped515);
                              SetByte 008015 LoByte(popped515);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b514,16)) {
                                SetByte 008014 HiByte(GetLocal(b514));
                                SetByte 008015 LoByte(GetLocal(b514));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b516 = M[Offset(007908,Mul(2,Widen(MinusByte(b514,16))))];
                                Let b517 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b514,16)))),1)];
                                SetByte 008014 b516;
                                SetByte 008015 b517;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b509,16)) {
                            SetByte 008206 HiByte(GetLocal(b509));
                            SetByte 008207 LoByte(GetLocal(b509));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b518 = M[008330];
                            Let b519 = M[008331];
                            if (Equal(MakeHiLo(b518,b519),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b520 = M[008318];
                              Let b521 = M[008319];
                              if (IsZeroByte(b521)) {
                                PopStack popped522;
                                PushStack popped522;
                                SetByte 008014 HiByte(popped522);
                                SetByte 008015 LoByte(popped522);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b521,16)) {
                                  SetByte 008014 HiByte(GetLocal(b521));
                                  SetByte 008015 LoByte(GetLocal(b521));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b523 = M[Offset(007908,Mul(2,Widen(MinusByte(b521,16))))];
                                  Let b524 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b521,16)))),1)];
                                  SetByte 008014 b523;
                                  SetByte 008015 b524;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b525 = M[Offset(007908,Mul(2,Widen(MinusByte(b509,16))))];
                            Let b526 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b509,16)))),1)];
                            SetByte 008206 b525;
                            SetByte 008207 b526;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b527 = M[008330];
                            Let b528 = M[008331];
                            if (Equal(MakeHiLo(b527,b528),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b529 = M[008318];
                              Let b530 = M[008319];
                              if (IsZeroByte(b530)) {
                                PopStack popped531;
                                PushStack popped531;
                                SetByte 008014 HiByte(popped531);
                                SetByte 008015 LoByte(popped531);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b530,16)) {
                                  SetByte 008014 HiByte(GetLocal(b530));
                                  SetByte 008015 LoByte(GetLocal(b530));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b532 = M[Offset(007908,Mul(2,Widen(MinusByte(b530,16))))];
                                  Let b533 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b530,16)))),1)];
                                  SetByte 008014 b532;
                                  SetByte 008015 b533;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b534 = M[Offset(007908,Mul(2,Widen(MinusByte(b476,16))))];
                      Let b535 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b476,16)))),1)];
                      SetByte 007950 b534;
                      SetByte 007951 b535;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b536 = M[008284];
                      Let b537 = M[008285];
                      if (Equal(MakeHiLo(b536,b537),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b538 = M[008284];
                        Let b539 = M[008285];
                        if (IsZeroByte(b539)) {
                          PopStack popped540;
                          PushStack popped540;
                          SetByte 008206 HiByte(popped540);
                          SetByte 008207 LoByte(popped540);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b541 = M[008330];
                          Let b542 = M[008331];
                          if (Equal(MakeHiLo(b541,b542),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b543 = M[008318];
                            Let b544 = M[008319];
                            if (IsZeroByte(b544)) {
                              PopStack popped545;
                              PushStack popped545;
                              SetByte 008014 HiByte(popped545);
                              SetByte 008015 LoByte(popped545);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b544,16)) {
                                SetByte 008014 HiByte(GetLocal(b544));
                                SetByte 008015 LoByte(GetLocal(b544));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b546 = M[Offset(007908,Mul(2,Widen(MinusByte(b544,16))))];
                                Let b547 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b544,16)))),1)];
                                SetByte 008014 b546;
                                SetByte 008015 b547;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b539,16)) {
                            SetByte 008206 HiByte(GetLocal(b539));
                            SetByte 008207 LoByte(GetLocal(b539));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b548 = M[008330];
                            Let b549 = M[008331];
                            if (Equal(MakeHiLo(b548,b549),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b550 = M[008318];
                              Let b551 = M[008319];
                              if (IsZeroByte(b551)) {
                                PopStack popped552;
                                PushStack popped552;
                                SetByte 008014 HiByte(popped552);
                                SetByte 008015 LoByte(popped552);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b551,16)) {
                                  SetByte 008014 HiByte(GetLocal(b551));
                                  SetByte 008015 LoByte(GetLocal(b551));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b553 = M[Offset(007908,Mul(2,Widen(MinusByte(b551,16))))];
                                  Let b554 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b551,16)))),1)];
                                  SetByte 008014 b553;
                                  SetByte 008015 b554;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b555 = M[Offset(007908,Mul(2,Widen(MinusByte(b539,16))))];
                            Let b556 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b539,16)))),1)];
                            SetByte 008206 b555;
                            SetByte 008207 b556;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b557 = M[008330];
                            Let b558 = M[008331];
                            if (Equal(MakeHiLo(b557,b558),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b559 = M[008318];
                              Let b560 = M[008319];
                              if (IsZeroByte(b560)) {
                                PopStack popped561;
                                PushStack popped561;
                                SetByte 008014 HiByte(popped561);
                                SetByte 008015 LoByte(popped561);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b560,16)) {
                                  SetByte 008014 HiByte(GetLocal(b560));
                                  SetByte 008015 LoByte(GetLocal(b560));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b562 = M[Offset(007908,Mul(2,Widen(MinusByte(b560,16))))];
                                  Let b563 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b560,16)))),1)];
                                  SetByte 008014 b562;
                                  SetByte 008015 b563;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              }
            }
          }
        } else {
          Jump: 019229
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b12,b13)),1));
        TraceOperation 019128 (Test (Con 128) (Var (Local 1)) (Branch F (Dloc 019229)));
        if (Equal(And(128,GetLocal(1)),GetLocal(1))) {
          TraceOperation 019133 (Print_obj (Var (Global 206)));
          Let b564 = M[008320];
          Let b565 = M[008321];
          Let b566 = M[Offset(Offset(000751,Mul(MakeHiLo(b564,b565),9)),7)];
          Let b567 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b564,b565),9)),7),1)];
          Let b568 = M[Address(MakeHiLo(b566,b567))];
          if (IsZeroByte(b568)) {
            GamePrint "";
            TraceOperation 019135 (Inc_chk (Var (Global 18)) (Con 56) (Branch F (Dloc 019236)));
            Let b569 = M[007944];
            Let b570 = M[007945];
            if (IsZeroByte(b570)) {
              PopStack popped571;
              PushStack Add(popped571,1);
              if (GreaterThanEqual(popped571,56)) {
                TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                Let b572 = M[008272];
                Let b573 = M[008273];
                if (IsZeroByte(b573)) {
                  PopStack popped574;
                  PushStack popped574;
                  SetByte 007950 HiByte(popped574);
                  SetByte 007951 LoByte(popped574);
                  TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                  Let b575 = M[008284];
                  Let b576 = M[008285];
                  if (Equal(MakeHiLo(b575,b576),0)) {
                    TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                    Let b577 = M[008284];
                    Let b578 = M[008285];
                    if (IsZeroByte(b578)) {
                      PopStack popped579;
                      PushStack popped579;
                      SetByte 008206 HiByte(popped579);
                      SetByte 008207 LoByte(popped579);
                      TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                      Let b580 = M[008330];
                      Let b581 = M[008331];
                      if (Equal(MakeHiLo(b580,b581),0)) {
                        TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                        Let b582 = M[008318];
                        Let b583 = M[008319];
                        if (IsZeroByte(b583)) {
                          PopStack popped584;
                          PushStack popped584;
                          SetByte 008014 HiByte(popped584);
                          SetByte 008015 LoByte(popped584);
                          TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                          Jump: 019193
                        } else {
                          if (LessThanByte(b583,16)) {
                            SetByte 008014 HiByte(GetLocal(b583));
                            SetByte 008015 LoByte(GetLocal(b583));
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            Let b585 = M[Offset(007908,Mul(2,Widen(MinusByte(b583,16))))];
                            Let b586 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b583,16)))),1)];
                            SetByte 008014 b585;
                            SetByte 008015 b586;
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          }
                        }
                      } else {
                        Jump: 019186
                      }
                    } else {
                      if (LessThanByte(b578,16)) {
                        SetByte 008206 HiByte(GetLocal(b578));
                        SetByte 008207 LoByte(GetLocal(b578));
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b587 = M[008330];
                        Let b588 = M[008331];
                        if (Equal(MakeHiLo(b587,b588),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b589 = M[008318];
                          Let b590 = M[008319];
                          if (IsZeroByte(b590)) {
                            PopStack popped591;
                            PushStack popped591;
                            SetByte 008014 HiByte(popped591);
                            SetByte 008015 LoByte(popped591);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b590,16)) {
                              SetByte 008014 HiByte(GetLocal(b590));
                              SetByte 008015 LoByte(GetLocal(b590));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b592 = M[Offset(007908,Mul(2,Widen(MinusByte(b590,16))))];
                              Let b593 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b590,16)))),1)];
                              SetByte 008014 b592;
                              SetByte 008015 b593;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        Let b594 = M[Offset(007908,Mul(2,Widen(MinusByte(b578,16))))];
                        Let b595 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b578,16)))),1)];
                        SetByte 008206 b594;
                        SetByte 008207 b595;
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b596 = M[008330];
                        Let b597 = M[008331];
                        if (Equal(MakeHiLo(b596,b597),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b598 = M[008318];
                          Let b599 = M[008319];
                          if (IsZeroByte(b599)) {
                            PopStack popped600;
                            PushStack popped600;
                            SetByte 008014 HiByte(popped600);
                            SetByte 008015 LoByte(popped600);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b599,16)) {
                              SetByte 008014 HiByte(GetLocal(b599));
                              SetByte 008015 LoByte(GetLocal(b599));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b601 = M[Offset(007908,Mul(2,Widen(MinusByte(b599,16))))];
                              Let b602 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b599,16)))),1)];
                              SetByte 008014 b601;
                              SetByte 008015 b602;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      }
                    }
                  } else {
                    Jump: 019179
                  }
                } else {
                  if (LessThanByte(b573,16)) {
                    SetByte 007950 HiByte(GetLocal(b573));
                    SetByte 007951 LoByte(GetLocal(b573));
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b603 = M[008284];
                    Let b604 = M[008285];
                    if (Equal(MakeHiLo(b603,b604),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b605 = M[008284];
                      Let b606 = M[008285];
                      if (IsZeroByte(b606)) {
                        PopStack popped607;
                        PushStack popped607;
                        SetByte 008206 HiByte(popped607);
                        SetByte 008207 LoByte(popped607);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b608 = M[008330];
                        Let b609 = M[008331];
                        if (Equal(MakeHiLo(b608,b609),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b610 = M[008318];
                          Let b611 = M[008319];
                          if (IsZeroByte(b611)) {
                            PopStack popped612;
                            PushStack popped612;
                            SetByte 008014 HiByte(popped612);
                            SetByte 008015 LoByte(popped612);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b611,16)) {
                              SetByte 008014 HiByte(GetLocal(b611));
                              SetByte 008015 LoByte(GetLocal(b611));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b613 = M[Offset(007908,Mul(2,Widen(MinusByte(b611,16))))];
                              Let b614 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b611,16)))),1)];
                              SetByte 008014 b613;
                              SetByte 008015 b614;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b606,16)) {
                          SetByte 008206 HiByte(GetLocal(b606));
                          SetByte 008207 LoByte(GetLocal(b606));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b615 = M[008330];
                          Let b616 = M[008331];
                          if (Equal(MakeHiLo(b615,b616),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b617 = M[008318];
                            Let b618 = M[008319];
                            if (IsZeroByte(b618)) {
                              PopStack popped619;
                              PushStack popped619;
                              SetByte 008014 HiByte(popped619);
                              SetByte 008015 LoByte(popped619);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b618,16)) {
                                SetByte 008014 HiByte(GetLocal(b618));
                                SetByte 008015 LoByte(GetLocal(b618));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b620 = M[Offset(007908,Mul(2,Widen(MinusByte(b618,16))))];
                                Let b621 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b618,16)))),1)];
                                SetByte 008014 b620;
                                SetByte 008015 b621;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b622 = M[Offset(007908,Mul(2,Widen(MinusByte(b606,16))))];
                          Let b623 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b606,16)))),1)];
                          SetByte 008206 b622;
                          SetByte 008207 b623;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b624 = M[008330];
                          Let b625 = M[008331];
                          if (Equal(MakeHiLo(b624,b625),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b626 = M[008318];
                            Let b627 = M[008319];
                            if (IsZeroByte(b627)) {
                              PopStack popped628;
                              PushStack popped628;
                              SetByte 008014 HiByte(popped628);
                              SetByte 008015 LoByte(popped628);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b627,16)) {
                                SetByte 008014 HiByte(GetLocal(b627));
                                SetByte 008015 LoByte(GetLocal(b627));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b629 = M[Offset(007908,Mul(2,Widen(MinusByte(b627,16))))];
                                Let b630 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b627,16)))),1)];
                                SetByte 008014 b629;
                                SetByte 008015 b630;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    Let b631 = M[Offset(007908,Mul(2,Widen(MinusByte(b573,16))))];
                    Let b632 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b573,16)))),1)];
                    SetByte 007950 b631;
                    SetByte 007951 b632;
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b633 = M[008284];
                    Let b634 = M[008285];
                    if (Equal(MakeHiLo(b633,b634),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b635 = M[008284];
                      Let b636 = M[008285];
                      if (IsZeroByte(b636)) {
                        PopStack popped637;
                        PushStack popped637;
                        SetByte 008206 HiByte(popped637);
                        SetByte 008207 LoByte(popped637);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b638 = M[008330];
                        Let b639 = M[008331];
                        if (Equal(MakeHiLo(b638,b639),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b640 = M[008318];
                          Let b641 = M[008319];
                          if (IsZeroByte(b641)) {
                            PopStack popped642;
                            PushStack popped642;
                            SetByte 008014 HiByte(popped642);
                            SetByte 008015 LoByte(popped642);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b641,16)) {
                              SetByte 008014 HiByte(GetLocal(b641));
                              SetByte 008015 LoByte(GetLocal(b641));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b643 = M[Offset(007908,Mul(2,Widen(MinusByte(b641,16))))];
                              Let b644 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b641,16)))),1)];
                              SetByte 008014 b643;
                              SetByte 008015 b644;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b636,16)) {
                          SetByte 008206 HiByte(GetLocal(b636));
                          SetByte 008207 LoByte(GetLocal(b636));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b645 = M[008330];
                          Let b646 = M[008331];
                          if (Equal(MakeHiLo(b645,b646),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b647 = M[008318];
                            Let b648 = M[008319];
                            if (IsZeroByte(b648)) {
                              PopStack popped649;
                              PushStack popped649;
                              SetByte 008014 HiByte(popped649);
                              SetByte 008015 LoByte(popped649);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b648,16)) {
                                SetByte 008014 HiByte(GetLocal(b648));
                                SetByte 008015 LoByte(GetLocal(b648));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b650 = M[Offset(007908,Mul(2,Widen(MinusByte(b648,16))))];
                                Let b651 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b648,16)))),1)];
                                SetByte 008014 b650;
                                SetByte 008015 b651;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b652 = M[Offset(007908,Mul(2,Widen(MinusByte(b636,16))))];
                          Let b653 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b636,16)))),1)];
                          SetByte 008206 b652;
                          SetByte 008207 b653;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b654 = M[008330];
                          Let b655 = M[008331];
                          if (Equal(MakeHiLo(b654,b655),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b656 = M[008318];
                            Let b657 = M[008319];
                            if (IsZeroByte(b657)) {
                              PopStack popped658;
                              PushStack popped658;
                              SetByte 008014 HiByte(popped658);
                              SetByte 008015 LoByte(popped658);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b657,16)) {
                                SetByte 008014 HiByte(GetLocal(b657));
                                SetByte 008015 LoByte(GetLocal(b657));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b659 = M[Offset(007908,Mul(2,Widen(MinusByte(b657,16))))];
                                Let b660 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b657,16)))),1)];
                                SetByte 008014 b659;
                                SetByte 008015 b660;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  }
                }
              } else {
                Jump: 019236
              }
            } else {
              if (LessThanByte(b570,16)) {
                SetLocal b570 Add(GetLocal(b570),1);
                if (GreaterThanEqual(GetLocal(b570),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b661 = M[008272];
                  Let b662 = M[008273];
                  if (IsZeroByte(b662)) {
                    PopStack popped663;
                    PushStack popped663;
                    SetByte 007950 HiByte(popped663);
                    SetByte 007951 LoByte(popped663);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b664 = M[008284];
                    Let b665 = M[008285];
                    if (Equal(MakeHiLo(b664,b665),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b666 = M[008284];
                      Let b667 = M[008285];
                      if (IsZeroByte(b667)) {
                        PopStack popped668;
                        PushStack popped668;
                        SetByte 008206 HiByte(popped668);
                        SetByte 008207 LoByte(popped668);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b669 = M[008330];
                        Let b670 = M[008331];
                        if (Equal(MakeHiLo(b669,b670),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b671 = M[008318];
                          Let b672 = M[008319];
                          if (IsZeroByte(b672)) {
                            PopStack popped673;
                            PushStack popped673;
                            SetByte 008014 HiByte(popped673);
                            SetByte 008015 LoByte(popped673);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b672,16)) {
                              SetByte 008014 HiByte(GetLocal(b672));
                              SetByte 008015 LoByte(GetLocal(b672));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b674 = M[Offset(007908,Mul(2,Widen(MinusByte(b672,16))))];
                              Let b675 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b672,16)))),1)];
                              SetByte 008014 b674;
                              SetByte 008015 b675;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b667,16)) {
                          SetByte 008206 HiByte(GetLocal(b667));
                          SetByte 008207 LoByte(GetLocal(b667));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b676 = M[008330];
                          Let b677 = M[008331];
                          if (Equal(MakeHiLo(b676,b677),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b678 = M[008318];
                            Let b679 = M[008319];
                            if (IsZeroByte(b679)) {
                              PopStack popped680;
                              PushStack popped680;
                              SetByte 008014 HiByte(popped680);
                              SetByte 008015 LoByte(popped680);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b679,16)) {
                                SetByte 008014 HiByte(GetLocal(b679));
                                SetByte 008015 LoByte(GetLocal(b679));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b681 = M[Offset(007908,Mul(2,Widen(MinusByte(b679,16))))];
                                Let b682 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b679,16)))),1)];
                                SetByte 008014 b681;
                                SetByte 008015 b682;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b683 = M[Offset(007908,Mul(2,Widen(MinusByte(b667,16))))];
                          Let b684 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b667,16)))),1)];
                          SetByte 008206 b683;
                          SetByte 008207 b684;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b685 = M[008330];
                          Let b686 = M[008331];
                          if (Equal(MakeHiLo(b685,b686),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b687 = M[008318];
                            Let b688 = M[008319];
                            if (IsZeroByte(b688)) {
                              PopStack popped689;
                              PushStack popped689;
                              SetByte 008014 HiByte(popped689);
                              SetByte 008015 LoByte(popped689);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b688,16)) {
                                SetByte 008014 HiByte(GetLocal(b688));
                                SetByte 008015 LoByte(GetLocal(b688));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b690 = M[Offset(007908,Mul(2,Widen(MinusByte(b688,16))))];
                                Let b691 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b688,16)))),1)];
                                SetByte 008014 b690;
                                SetByte 008015 b691;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b662,16)) {
                      SetByte 007950 HiByte(GetLocal(b662));
                      SetByte 007951 LoByte(GetLocal(b662));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b692 = M[008284];
                      Let b693 = M[008285];
                      if (Equal(MakeHiLo(b692,b693),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b694 = M[008284];
                        Let b695 = M[008285];
                        if (IsZeroByte(b695)) {
                          PopStack popped696;
                          PushStack popped696;
                          SetByte 008206 HiByte(popped696);
                          SetByte 008207 LoByte(popped696);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b697 = M[008330];
                          Let b698 = M[008331];
                          if (Equal(MakeHiLo(b697,b698),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b699 = M[008318];
                            Let b700 = M[008319];
                            if (IsZeroByte(b700)) {
                              PopStack popped701;
                              PushStack popped701;
                              SetByte 008014 HiByte(popped701);
                              SetByte 008015 LoByte(popped701);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b700,16)) {
                                SetByte 008014 HiByte(GetLocal(b700));
                                SetByte 008015 LoByte(GetLocal(b700));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b702 = M[Offset(007908,Mul(2,Widen(MinusByte(b700,16))))];
                                Let b703 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b700,16)))),1)];
                                SetByte 008014 b702;
                                SetByte 008015 b703;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b695,16)) {
                            SetByte 008206 HiByte(GetLocal(b695));
                            SetByte 008207 LoByte(GetLocal(b695));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b704 = M[008330];
                            Let b705 = M[008331];
                            if (Equal(MakeHiLo(b704,b705),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b706 = M[008318];
                              Let b707 = M[008319];
                              if (IsZeroByte(b707)) {
                                PopStack popped708;
                                PushStack popped708;
                                SetByte 008014 HiByte(popped708);
                                SetByte 008015 LoByte(popped708);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b707,16)) {
                                  SetByte 008014 HiByte(GetLocal(b707));
                                  SetByte 008015 LoByte(GetLocal(b707));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b709 = M[Offset(007908,Mul(2,Widen(MinusByte(b707,16))))];
                                  Let b710 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b707,16)))),1)];
                                  SetByte 008014 b709;
                                  SetByte 008015 b710;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b711 = M[Offset(007908,Mul(2,Widen(MinusByte(b695,16))))];
                            Let b712 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b695,16)))),1)];
                            SetByte 008206 b711;
                            SetByte 008207 b712;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b713 = M[008330];
                            Let b714 = M[008331];
                            if (Equal(MakeHiLo(b713,b714),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b715 = M[008318];
                              Let b716 = M[008319];
                              if (IsZeroByte(b716)) {
                                PopStack popped717;
                                PushStack popped717;
                                SetByte 008014 HiByte(popped717);
                                SetByte 008015 LoByte(popped717);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b716,16)) {
                                  SetByte 008014 HiByte(GetLocal(b716));
                                  SetByte 008015 LoByte(GetLocal(b716));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b718 = M[Offset(007908,Mul(2,Widen(MinusByte(b716,16))))];
                                  Let b719 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b716,16)))),1)];
                                  SetByte 008014 b718;
                                  SetByte 008015 b719;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b720 = M[Offset(007908,Mul(2,Widen(MinusByte(b662,16))))];
                      Let b721 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b662,16)))),1)];
                      SetByte 007950 b720;
                      SetByte 007951 b721;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b722 = M[008284];
                      Let b723 = M[008285];
                      if (Equal(MakeHiLo(b722,b723),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b724 = M[008284];
                        Let b725 = M[008285];
                        if (IsZeroByte(b725)) {
                          PopStack popped726;
                          PushStack popped726;
                          SetByte 008206 HiByte(popped726);
                          SetByte 008207 LoByte(popped726);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b727 = M[008330];
                          Let b728 = M[008331];
                          if (Equal(MakeHiLo(b727,b728),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b729 = M[008318];
                            Let b730 = M[008319];
                            if (IsZeroByte(b730)) {
                              PopStack popped731;
                              PushStack popped731;
                              SetByte 008014 HiByte(popped731);
                              SetByte 008015 LoByte(popped731);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b730,16)) {
                                SetByte 008014 HiByte(GetLocal(b730));
                                SetByte 008015 LoByte(GetLocal(b730));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b732 = M[Offset(007908,Mul(2,Widen(MinusByte(b730,16))))];
                                Let b733 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b730,16)))),1)];
                                SetByte 008014 b732;
                                SetByte 008015 b733;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b725,16)) {
                            SetByte 008206 HiByte(GetLocal(b725));
                            SetByte 008207 LoByte(GetLocal(b725));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b734 = M[008330];
                            Let b735 = M[008331];
                            if (Equal(MakeHiLo(b734,b735),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b736 = M[008318];
                              Let b737 = M[008319];
                              if (IsZeroByte(b737)) {
                                PopStack popped738;
                                PushStack popped738;
                                SetByte 008014 HiByte(popped738);
                                SetByte 008015 LoByte(popped738);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b737,16)) {
                                  SetByte 008014 HiByte(GetLocal(b737));
                                  SetByte 008015 LoByte(GetLocal(b737));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b739 = M[Offset(007908,Mul(2,Widen(MinusByte(b737,16))))];
                                  Let b740 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b737,16)))),1)];
                                  SetByte 008014 b739;
                                  SetByte 008015 b740;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b741 = M[Offset(007908,Mul(2,Widen(MinusByte(b725,16))))];
                            Let b742 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b725,16)))),1)];
                            SetByte 008206 b741;
                            SetByte 008207 b742;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b743 = M[008330];
                            Let b744 = M[008331];
                            if (Equal(MakeHiLo(b743,b744),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b745 = M[008318];
                              Let b746 = M[008319];
                              if (IsZeroByte(b746)) {
                                PopStack popped747;
                                PushStack popped747;
                                SetByte 008014 HiByte(popped747);
                                SetByte 008015 LoByte(popped747);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b746,16)) {
                                  SetByte 008014 HiByte(GetLocal(b746));
                                  SetByte 008015 LoByte(GetLocal(b746));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b748 = M[Offset(007908,Mul(2,Widen(MinusByte(b746,16))))];
                                  Let b749 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b746,16)))),1)];
                                  SetByte 008014 b748;
                                  SetByte 008015 b749;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              } else {
                Let b750 = M[Offset(007908,Mul(2,Widen(MinusByte(b570,16))))];
                Let b751 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b570,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b570,16)))) HiByte(Add(MakeHiLo(b750,b751),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b570,16)))),1) LoByte(Add(MakeHiLo(b750,b751),1));
                if (GreaterThanEqual(MakeHiLo(b750,b751),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b752 = M[008272];
                  Let b753 = M[008273];
                  if (IsZeroByte(b753)) {
                    PopStack popped754;
                    PushStack popped754;
                    SetByte 007950 HiByte(popped754);
                    SetByte 007951 LoByte(popped754);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b755 = M[008284];
                    Let b756 = M[008285];
                    if (Equal(MakeHiLo(b755,b756),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b757 = M[008284];
                      Let b758 = M[008285];
                      if (IsZeroByte(b758)) {
                        PopStack popped759;
                        PushStack popped759;
                        SetByte 008206 HiByte(popped759);
                        SetByte 008207 LoByte(popped759);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b760 = M[008330];
                        Let b761 = M[008331];
                        if (Equal(MakeHiLo(b760,b761),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b762 = M[008318];
                          Let b763 = M[008319];
                          if (IsZeroByte(b763)) {
                            PopStack popped764;
                            PushStack popped764;
                            SetByte 008014 HiByte(popped764);
                            SetByte 008015 LoByte(popped764);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b763,16)) {
                              SetByte 008014 HiByte(GetLocal(b763));
                              SetByte 008015 LoByte(GetLocal(b763));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b765 = M[Offset(007908,Mul(2,Widen(MinusByte(b763,16))))];
                              Let b766 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b763,16)))),1)];
                              SetByte 008014 b765;
                              SetByte 008015 b766;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b758,16)) {
                          SetByte 008206 HiByte(GetLocal(b758));
                          SetByte 008207 LoByte(GetLocal(b758));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b767 = M[008330];
                          Let b768 = M[008331];
                          if (Equal(MakeHiLo(b767,b768),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b769 = M[008318];
                            Let b770 = M[008319];
                            if (IsZeroByte(b770)) {
                              PopStack popped771;
                              PushStack popped771;
                              SetByte 008014 HiByte(popped771);
                              SetByte 008015 LoByte(popped771);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b770,16)) {
                                SetByte 008014 HiByte(GetLocal(b770));
                                SetByte 008015 LoByte(GetLocal(b770));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b772 = M[Offset(007908,Mul(2,Widen(MinusByte(b770,16))))];
                                Let b773 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b770,16)))),1)];
                                SetByte 008014 b772;
                                SetByte 008015 b773;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b774 = M[Offset(007908,Mul(2,Widen(MinusByte(b758,16))))];
                          Let b775 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b758,16)))),1)];
                          SetByte 008206 b774;
                          SetByte 008207 b775;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b776 = M[008330];
                          Let b777 = M[008331];
                          if (Equal(MakeHiLo(b776,b777),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b778 = M[008318];
                            Let b779 = M[008319];
                            if (IsZeroByte(b779)) {
                              PopStack popped780;
                              PushStack popped780;
                              SetByte 008014 HiByte(popped780);
                              SetByte 008015 LoByte(popped780);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b779,16)) {
                                SetByte 008014 HiByte(GetLocal(b779));
                                SetByte 008015 LoByte(GetLocal(b779));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b781 = M[Offset(007908,Mul(2,Widen(MinusByte(b779,16))))];
                                Let b782 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b779,16)))),1)];
                                SetByte 008014 b781;
                                SetByte 008015 b782;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b753,16)) {
                      SetByte 007950 HiByte(GetLocal(b753));
                      SetByte 007951 LoByte(GetLocal(b753));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b783 = M[008284];
                      Let b784 = M[008285];
                      if (Equal(MakeHiLo(b783,b784),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b785 = M[008284];
                        Let b786 = M[008285];
                        if (IsZeroByte(b786)) {
                          PopStack popped787;
                          PushStack popped787;
                          SetByte 008206 HiByte(popped787);
                          SetByte 008207 LoByte(popped787);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b788 = M[008330];
                          Let b789 = M[008331];
                          if (Equal(MakeHiLo(b788,b789),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b790 = M[008318];
                            Let b791 = M[008319];
                            if (IsZeroByte(b791)) {
                              PopStack popped792;
                              PushStack popped792;
                              SetByte 008014 HiByte(popped792);
                              SetByte 008015 LoByte(popped792);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b791,16)) {
                                SetByte 008014 HiByte(GetLocal(b791));
                                SetByte 008015 LoByte(GetLocal(b791));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b793 = M[Offset(007908,Mul(2,Widen(MinusByte(b791,16))))];
                                Let b794 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b791,16)))),1)];
                                SetByte 008014 b793;
                                SetByte 008015 b794;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b786,16)) {
                            SetByte 008206 HiByte(GetLocal(b786));
                            SetByte 008207 LoByte(GetLocal(b786));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b795 = M[008330];
                            Let b796 = M[008331];
                            if (Equal(MakeHiLo(b795,b796),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b797 = M[008318];
                              Let b798 = M[008319];
                              if (IsZeroByte(b798)) {
                                PopStack popped799;
                                PushStack popped799;
                                SetByte 008014 HiByte(popped799);
                                SetByte 008015 LoByte(popped799);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b798,16)) {
                                  SetByte 008014 HiByte(GetLocal(b798));
                                  SetByte 008015 LoByte(GetLocal(b798));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b800 = M[Offset(007908,Mul(2,Widen(MinusByte(b798,16))))];
                                  Let b801 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b798,16)))),1)];
                                  SetByte 008014 b800;
                                  SetByte 008015 b801;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b802 = M[Offset(007908,Mul(2,Widen(MinusByte(b786,16))))];
                            Let b803 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b786,16)))),1)];
                            SetByte 008206 b802;
                            SetByte 008207 b803;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b804 = M[008330];
                            Let b805 = M[008331];
                            if (Equal(MakeHiLo(b804,b805),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b806 = M[008318];
                              Let b807 = M[008319];
                              if (IsZeroByte(b807)) {
                                PopStack popped808;
                                PushStack popped808;
                                SetByte 008014 HiByte(popped808);
                                SetByte 008015 LoByte(popped808);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b807,16)) {
                                  SetByte 008014 HiByte(GetLocal(b807));
                                  SetByte 008015 LoByte(GetLocal(b807));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b809 = M[Offset(007908,Mul(2,Widen(MinusByte(b807,16))))];
                                  Let b810 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b807,16)))),1)];
                                  SetByte 008014 b809;
                                  SetByte 008015 b810;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b811 = M[Offset(007908,Mul(2,Widen(MinusByte(b753,16))))];
                      Let b812 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b753,16)))),1)];
                      SetByte 007950 b811;
                      SetByte 007951 b812;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b813 = M[008284];
                      Let b814 = M[008285];
                      if (Equal(MakeHiLo(b813,b814),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b815 = M[008284];
                        Let b816 = M[008285];
                        if (IsZeroByte(b816)) {
                          PopStack popped817;
                          PushStack popped817;
                          SetByte 008206 HiByte(popped817);
                          SetByte 008207 LoByte(popped817);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b818 = M[008330];
                          Let b819 = M[008331];
                          if (Equal(MakeHiLo(b818,b819),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b820 = M[008318];
                            Let b821 = M[008319];
                            if (IsZeroByte(b821)) {
                              PopStack popped822;
                              PushStack popped822;
                              SetByte 008014 HiByte(popped822);
                              SetByte 008015 LoByte(popped822);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b821,16)) {
                                SetByte 008014 HiByte(GetLocal(b821));
                                SetByte 008015 LoByte(GetLocal(b821));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b823 = M[Offset(007908,Mul(2,Widen(MinusByte(b821,16))))];
                                Let b824 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b821,16)))),1)];
                                SetByte 008014 b823;
                                SetByte 008015 b824;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b816,16)) {
                            SetByte 008206 HiByte(GetLocal(b816));
                            SetByte 008207 LoByte(GetLocal(b816));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b825 = M[008330];
                            Let b826 = M[008331];
                            if (Equal(MakeHiLo(b825,b826),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b827 = M[008318];
                              Let b828 = M[008319];
                              if (IsZeroByte(b828)) {
                                PopStack popped829;
                                PushStack popped829;
                                SetByte 008014 HiByte(popped829);
                                SetByte 008015 LoByte(popped829);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b828,16)) {
                                  SetByte 008014 HiByte(GetLocal(b828));
                                  SetByte 008015 LoByte(GetLocal(b828));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b830 = M[Offset(007908,Mul(2,Widen(MinusByte(b828,16))))];
                                  Let b831 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b828,16)))),1)];
                                  SetByte 008014 b830;
                                  SetByte 008015 b831;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b832 = M[Offset(007908,Mul(2,Widen(MinusByte(b816,16))))];
                            Let b833 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b816,16)))),1)];
                            SetByte 008206 b832;
                            SetByte 008207 b833;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b834 = M[008330];
                            Let b835 = M[008331];
                            if (Equal(MakeHiLo(b834,b835),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b836 = M[008318];
                              Let b837 = M[008319];
                              if (IsZeroByte(b837)) {
                                PopStack popped838;
                                PushStack popped838;
                                SetByte 008014 HiByte(popped838);
                                SetByte 008015 LoByte(popped838);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b837,16)) {
                                  SetByte 008014 HiByte(GetLocal(b837));
                                  SetByte 008015 LoByte(GetLocal(b837));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b839 = M[Offset(007908,Mul(2,Widen(MinusByte(b837,16))))];
                                  Let b840 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b837,16)))),1)];
                                  SetByte 008014 b839;
                                  SetByte 008015 b840;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              }
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b566,b567)),1));
            TraceOperation 019135 (Inc_chk (Var (Global 18)) (Con 56) (Branch F (Dloc 019236)));
            Let b841 = M[007944];
            Let b842 = M[007945];
            if (IsZeroByte(b842)) {
              PopStack popped843;
              PushStack Add(popped843,1);
              if (GreaterThanEqual(popped843,56)) {
                TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                Let b844 = M[008272];
                Let b845 = M[008273];
                if (IsZeroByte(b845)) {
                  PopStack popped846;
                  PushStack popped846;
                  SetByte 007950 HiByte(popped846);
                  SetByte 007951 LoByte(popped846);
                  TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                  Let b847 = M[008284];
                  Let b848 = M[008285];
                  if (Equal(MakeHiLo(b847,b848),0)) {
                    TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                    Let b849 = M[008284];
                    Let b850 = M[008285];
                    if (IsZeroByte(b850)) {
                      PopStack popped851;
                      PushStack popped851;
                      SetByte 008206 HiByte(popped851);
                      SetByte 008207 LoByte(popped851);
                      TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                      Let b852 = M[008330];
                      Let b853 = M[008331];
                      if (Equal(MakeHiLo(b852,b853),0)) {
                        TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                        Let b854 = M[008318];
                        Let b855 = M[008319];
                        if (IsZeroByte(b855)) {
                          PopStack popped856;
                          PushStack popped856;
                          SetByte 008014 HiByte(popped856);
                          SetByte 008015 LoByte(popped856);
                          TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                          Jump: 019193
                        } else {
                          if (LessThanByte(b855,16)) {
                            SetByte 008014 HiByte(GetLocal(b855));
                            SetByte 008015 LoByte(GetLocal(b855));
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            Let b857 = M[Offset(007908,Mul(2,Widen(MinusByte(b855,16))))];
                            Let b858 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b855,16)))),1)];
                            SetByte 008014 b857;
                            SetByte 008015 b858;
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          }
                        }
                      } else {
                        Jump: 019186
                      }
                    } else {
                      if (LessThanByte(b850,16)) {
                        SetByte 008206 HiByte(GetLocal(b850));
                        SetByte 008207 LoByte(GetLocal(b850));
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b859 = M[008330];
                        Let b860 = M[008331];
                        if (Equal(MakeHiLo(b859,b860),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b861 = M[008318];
                          Let b862 = M[008319];
                          if (IsZeroByte(b862)) {
                            PopStack popped863;
                            PushStack popped863;
                            SetByte 008014 HiByte(popped863);
                            SetByte 008015 LoByte(popped863);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b862,16)) {
                              SetByte 008014 HiByte(GetLocal(b862));
                              SetByte 008015 LoByte(GetLocal(b862));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b864 = M[Offset(007908,Mul(2,Widen(MinusByte(b862,16))))];
                              Let b865 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b862,16)))),1)];
                              SetByte 008014 b864;
                              SetByte 008015 b865;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        Let b866 = M[Offset(007908,Mul(2,Widen(MinusByte(b850,16))))];
                        Let b867 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b850,16)))),1)];
                        SetByte 008206 b866;
                        SetByte 008207 b867;
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b868 = M[008330];
                        Let b869 = M[008331];
                        if (Equal(MakeHiLo(b868,b869),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b870 = M[008318];
                          Let b871 = M[008319];
                          if (IsZeroByte(b871)) {
                            PopStack popped872;
                            PushStack popped872;
                            SetByte 008014 HiByte(popped872);
                            SetByte 008015 LoByte(popped872);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b871,16)) {
                              SetByte 008014 HiByte(GetLocal(b871));
                              SetByte 008015 LoByte(GetLocal(b871));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b873 = M[Offset(007908,Mul(2,Widen(MinusByte(b871,16))))];
                              Let b874 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b871,16)))),1)];
                              SetByte 008014 b873;
                              SetByte 008015 b874;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      }
                    }
                  } else {
                    Jump: 019179
                  }
                } else {
                  if (LessThanByte(b845,16)) {
                    SetByte 007950 HiByte(GetLocal(b845));
                    SetByte 007951 LoByte(GetLocal(b845));
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b875 = M[008284];
                    Let b876 = M[008285];
                    if (Equal(MakeHiLo(b875,b876),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b877 = M[008284];
                      Let b878 = M[008285];
                      if (IsZeroByte(b878)) {
                        PopStack popped879;
                        PushStack popped879;
                        SetByte 008206 HiByte(popped879);
                        SetByte 008207 LoByte(popped879);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b880 = M[008330];
                        Let b881 = M[008331];
                        if (Equal(MakeHiLo(b880,b881),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b882 = M[008318];
                          Let b883 = M[008319];
                          if (IsZeroByte(b883)) {
                            PopStack popped884;
                            PushStack popped884;
                            SetByte 008014 HiByte(popped884);
                            SetByte 008015 LoByte(popped884);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b883,16)) {
                              SetByte 008014 HiByte(GetLocal(b883));
                              SetByte 008015 LoByte(GetLocal(b883));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b885 = M[Offset(007908,Mul(2,Widen(MinusByte(b883,16))))];
                              Let b886 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b883,16)))),1)];
                              SetByte 008014 b885;
                              SetByte 008015 b886;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b878,16)) {
                          SetByte 008206 HiByte(GetLocal(b878));
                          SetByte 008207 LoByte(GetLocal(b878));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b887 = M[008330];
                          Let b888 = M[008331];
                          if (Equal(MakeHiLo(b887,b888),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b889 = M[008318];
                            Let b890 = M[008319];
                            if (IsZeroByte(b890)) {
                              PopStack popped891;
                              PushStack popped891;
                              SetByte 008014 HiByte(popped891);
                              SetByte 008015 LoByte(popped891);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b890,16)) {
                                SetByte 008014 HiByte(GetLocal(b890));
                                SetByte 008015 LoByte(GetLocal(b890));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b892 = M[Offset(007908,Mul(2,Widen(MinusByte(b890,16))))];
                                Let b893 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b890,16)))),1)];
                                SetByte 008014 b892;
                                SetByte 008015 b893;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b894 = M[Offset(007908,Mul(2,Widen(MinusByte(b878,16))))];
                          Let b895 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b878,16)))),1)];
                          SetByte 008206 b894;
                          SetByte 008207 b895;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b896 = M[008330];
                          Let b897 = M[008331];
                          if (Equal(MakeHiLo(b896,b897),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b898 = M[008318];
                            Let b899 = M[008319];
                            if (IsZeroByte(b899)) {
                              PopStack popped900;
                              PushStack popped900;
                              SetByte 008014 HiByte(popped900);
                              SetByte 008015 LoByte(popped900);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b899,16)) {
                                SetByte 008014 HiByte(GetLocal(b899));
                                SetByte 008015 LoByte(GetLocal(b899));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b901 = M[Offset(007908,Mul(2,Widen(MinusByte(b899,16))))];
                                Let b902 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b899,16)))),1)];
                                SetByte 008014 b901;
                                SetByte 008015 b902;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    Let b903 = M[Offset(007908,Mul(2,Widen(MinusByte(b845,16))))];
                    Let b904 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b845,16)))),1)];
                    SetByte 007950 b903;
                    SetByte 007951 b904;
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b905 = M[008284];
                    Let b906 = M[008285];
                    if (Equal(MakeHiLo(b905,b906),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b907 = M[008284];
                      Let b908 = M[008285];
                      if (IsZeroByte(b908)) {
                        PopStack popped909;
                        PushStack popped909;
                        SetByte 008206 HiByte(popped909);
                        SetByte 008207 LoByte(popped909);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b910 = M[008330];
                        Let b911 = M[008331];
                        if (Equal(MakeHiLo(b910,b911),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b912 = M[008318];
                          Let b913 = M[008319];
                          if (IsZeroByte(b913)) {
                            PopStack popped914;
                            PushStack popped914;
                            SetByte 008014 HiByte(popped914);
                            SetByte 008015 LoByte(popped914);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b913,16)) {
                              SetByte 008014 HiByte(GetLocal(b913));
                              SetByte 008015 LoByte(GetLocal(b913));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b915 = M[Offset(007908,Mul(2,Widen(MinusByte(b913,16))))];
                              Let b916 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b913,16)))),1)];
                              SetByte 008014 b915;
                              SetByte 008015 b916;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b908,16)) {
                          SetByte 008206 HiByte(GetLocal(b908));
                          SetByte 008207 LoByte(GetLocal(b908));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b917 = M[008330];
                          Let b918 = M[008331];
                          if (Equal(MakeHiLo(b917,b918),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b919 = M[008318];
                            Let b920 = M[008319];
                            if (IsZeroByte(b920)) {
                              PopStack popped921;
                              PushStack popped921;
                              SetByte 008014 HiByte(popped921);
                              SetByte 008015 LoByte(popped921);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b920,16)) {
                                SetByte 008014 HiByte(GetLocal(b920));
                                SetByte 008015 LoByte(GetLocal(b920));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b922 = M[Offset(007908,Mul(2,Widen(MinusByte(b920,16))))];
                                Let b923 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b920,16)))),1)];
                                SetByte 008014 b922;
                                SetByte 008015 b923;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b924 = M[Offset(007908,Mul(2,Widen(MinusByte(b908,16))))];
                          Let b925 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b908,16)))),1)];
                          SetByte 008206 b924;
                          SetByte 008207 b925;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b926 = M[008330];
                          Let b927 = M[008331];
                          if (Equal(MakeHiLo(b926,b927),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b928 = M[008318];
                            Let b929 = M[008319];
                            if (IsZeroByte(b929)) {
                              PopStack popped930;
                              PushStack popped930;
                              SetByte 008014 HiByte(popped930);
                              SetByte 008015 LoByte(popped930);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b929,16)) {
                                SetByte 008014 HiByte(GetLocal(b929));
                                SetByte 008015 LoByte(GetLocal(b929));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b931 = M[Offset(007908,Mul(2,Widen(MinusByte(b929,16))))];
                                Let b932 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b929,16)))),1)];
                                SetByte 008014 b931;
                                SetByte 008015 b932;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  }
                }
              } else {
                Jump: 019236
              }
            } else {
              if (LessThanByte(b842,16)) {
                SetLocal b842 Add(GetLocal(b842),1);
                if (GreaterThanEqual(GetLocal(b842),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b933 = M[008272];
                  Let b934 = M[008273];
                  if (IsZeroByte(b934)) {
                    PopStack popped935;
                    PushStack popped935;
                    SetByte 007950 HiByte(popped935);
                    SetByte 007951 LoByte(popped935);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b936 = M[008284];
                    Let b937 = M[008285];
                    if (Equal(MakeHiLo(b936,b937),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b938 = M[008284];
                      Let b939 = M[008285];
                      if (IsZeroByte(b939)) {
                        PopStack popped940;
                        PushStack popped940;
                        SetByte 008206 HiByte(popped940);
                        SetByte 008207 LoByte(popped940);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b941 = M[008330];
                        Let b942 = M[008331];
                        if (Equal(MakeHiLo(b941,b942),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b943 = M[008318];
                          Let b944 = M[008319];
                          if (IsZeroByte(b944)) {
                            PopStack popped945;
                            PushStack popped945;
                            SetByte 008014 HiByte(popped945);
                            SetByte 008015 LoByte(popped945);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b944,16)) {
                              SetByte 008014 HiByte(GetLocal(b944));
                              SetByte 008015 LoByte(GetLocal(b944));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b946 = M[Offset(007908,Mul(2,Widen(MinusByte(b944,16))))];
                              Let b947 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b944,16)))),1)];
                              SetByte 008014 b946;
                              SetByte 008015 b947;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b939,16)) {
                          SetByte 008206 HiByte(GetLocal(b939));
                          SetByte 008207 LoByte(GetLocal(b939));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b948 = M[008330];
                          Let b949 = M[008331];
                          if (Equal(MakeHiLo(b948,b949),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b950 = M[008318];
                            Let b951 = M[008319];
                            if (IsZeroByte(b951)) {
                              PopStack popped952;
                              PushStack popped952;
                              SetByte 008014 HiByte(popped952);
                              SetByte 008015 LoByte(popped952);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b951,16)) {
                                SetByte 008014 HiByte(GetLocal(b951));
                                SetByte 008015 LoByte(GetLocal(b951));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b953 = M[Offset(007908,Mul(2,Widen(MinusByte(b951,16))))];
                                Let b954 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b951,16)))),1)];
                                SetByte 008014 b953;
                                SetByte 008015 b954;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b955 = M[Offset(007908,Mul(2,Widen(MinusByte(b939,16))))];
                          Let b956 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b939,16)))),1)];
                          SetByte 008206 b955;
                          SetByte 008207 b956;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b957 = M[008330];
                          Let b958 = M[008331];
                          if (Equal(MakeHiLo(b957,b958),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b959 = M[008318];
                            Let b960 = M[008319];
                            if (IsZeroByte(b960)) {
                              PopStack popped961;
                              PushStack popped961;
                              SetByte 008014 HiByte(popped961);
                              SetByte 008015 LoByte(popped961);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b960,16)) {
                                SetByte 008014 HiByte(GetLocal(b960));
                                SetByte 008015 LoByte(GetLocal(b960));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b962 = M[Offset(007908,Mul(2,Widen(MinusByte(b960,16))))];
                                Let b963 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b960,16)))),1)];
                                SetByte 008014 b962;
                                SetByte 008015 b963;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b934,16)) {
                      SetByte 007950 HiByte(GetLocal(b934));
                      SetByte 007951 LoByte(GetLocal(b934));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b964 = M[008284];
                      Let b965 = M[008285];
                      if (Equal(MakeHiLo(b964,b965),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b966 = M[008284];
                        Let b967 = M[008285];
                        if (IsZeroByte(b967)) {
                          PopStack popped968;
                          PushStack popped968;
                          SetByte 008206 HiByte(popped968);
                          SetByte 008207 LoByte(popped968);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b969 = M[008330];
                          Let b970 = M[008331];
                          if (Equal(MakeHiLo(b969,b970),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b971 = M[008318];
                            Let b972 = M[008319];
                            if (IsZeroByte(b972)) {
                              PopStack popped973;
                              PushStack popped973;
                              SetByte 008014 HiByte(popped973);
                              SetByte 008015 LoByte(popped973);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b972,16)) {
                                SetByte 008014 HiByte(GetLocal(b972));
                                SetByte 008015 LoByte(GetLocal(b972));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b974 = M[Offset(007908,Mul(2,Widen(MinusByte(b972,16))))];
                                Let b975 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b972,16)))),1)];
                                SetByte 008014 b974;
                                SetByte 008015 b975;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b967,16)) {
                            SetByte 008206 HiByte(GetLocal(b967));
                            SetByte 008207 LoByte(GetLocal(b967));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b976 = M[008330];
                            Let b977 = M[008331];
                            if (Equal(MakeHiLo(b976,b977),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b978 = M[008318];
                              Let b979 = M[008319];
                              if (IsZeroByte(b979)) {
                                PopStack popped980;
                                PushStack popped980;
                                SetByte 008014 HiByte(popped980);
                                SetByte 008015 LoByte(popped980);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b979,16)) {
                                  SetByte 008014 HiByte(GetLocal(b979));
                                  SetByte 008015 LoByte(GetLocal(b979));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b981 = M[Offset(007908,Mul(2,Widen(MinusByte(b979,16))))];
                                  Let b982 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b979,16)))),1)];
                                  SetByte 008014 b981;
                                  SetByte 008015 b982;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b983 = M[Offset(007908,Mul(2,Widen(MinusByte(b967,16))))];
                            Let b984 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b967,16)))),1)];
                            SetByte 008206 b983;
                            SetByte 008207 b984;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b985 = M[008330];
                            Let b986 = M[008331];
                            if (Equal(MakeHiLo(b985,b986),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b987 = M[008318];
                              Let b988 = M[008319];
                              if (IsZeroByte(b988)) {
                                PopStack popped989;
                                PushStack popped989;
                                SetByte 008014 HiByte(popped989);
                                SetByte 008015 LoByte(popped989);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b988,16)) {
                                  SetByte 008014 HiByte(GetLocal(b988));
                                  SetByte 008015 LoByte(GetLocal(b988));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b990 = M[Offset(007908,Mul(2,Widen(MinusByte(b988,16))))];
                                  Let b991 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b988,16)))),1)];
                                  SetByte 008014 b990;
                                  SetByte 008015 b991;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b992 = M[Offset(007908,Mul(2,Widen(MinusByte(b934,16))))];
                      Let b993 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b934,16)))),1)];
                      SetByte 007950 b992;
                      SetByte 007951 b993;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b994 = M[008284];
                      Let b995 = M[008285];
                      if (Equal(MakeHiLo(b994,b995),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b996 = M[008284];
                        Let b997 = M[008285];
                        if (IsZeroByte(b997)) {
                          PopStack popped998;
                          PushStack popped998;
                          SetByte 008206 HiByte(popped998);
                          SetByte 008207 LoByte(popped998);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b999 = M[008330];
                          Let b1000 = M[008331];
                          if (Equal(MakeHiLo(b999,b1000),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1001 = M[008318];
                            Let b1002 = M[008319];
                            if (IsZeroByte(b1002)) {
                              PopStack popped1003;
                              PushStack popped1003;
                              SetByte 008014 HiByte(popped1003);
                              SetByte 008015 LoByte(popped1003);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1002,16)) {
                                SetByte 008014 HiByte(GetLocal(b1002));
                                SetByte 008015 LoByte(GetLocal(b1002));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1004 = M[Offset(007908,Mul(2,Widen(MinusByte(b1002,16))))];
                                Let b1005 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1002,16)))),1)];
                                SetByte 008014 b1004;
                                SetByte 008015 b1005;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b997,16)) {
                            SetByte 008206 HiByte(GetLocal(b997));
                            SetByte 008207 LoByte(GetLocal(b997));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1006 = M[008330];
                            Let b1007 = M[008331];
                            if (Equal(MakeHiLo(b1006,b1007),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1008 = M[008318];
                              Let b1009 = M[008319];
                              if (IsZeroByte(b1009)) {
                                PopStack popped1010;
                                PushStack popped1010;
                                SetByte 008014 HiByte(popped1010);
                                SetByte 008015 LoByte(popped1010);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1009,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1009));
                                  SetByte 008015 LoByte(GetLocal(b1009));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1011 = M[Offset(007908,Mul(2,Widen(MinusByte(b1009,16))))];
                                  Let b1012 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1009,16)))),1)];
                                  SetByte 008014 b1011;
                                  SetByte 008015 b1012;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1013 = M[Offset(007908,Mul(2,Widen(MinusByte(b997,16))))];
                            Let b1014 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b997,16)))),1)];
                            SetByte 008206 b1013;
                            SetByte 008207 b1014;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1015 = M[008330];
                            Let b1016 = M[008331];
                            if (Equal(MakeHiLo(b1015,b1016),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1017 = M[008318];
                              Let b1018 = M[008319];
                              if (IsZeroByte(b1018)) {
                                PopStack popped1019;
                                PushStack popped1019;
                                SetByte 008014 HiByte(popped1019);
                                SetByte 008015 LoByte(popped1019);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1018,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1018));
                                  SetByte 008015 LoByte(GetLocal(b1018));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1020 = M[Offset(007908,Mul(2,Widen(MinusByte(b1018,16))))];
                                  Let b1021 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1018,16)))),1)];
                                  SetByte 008014 b1020;
                                  SetByte 008015 b1021;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              } else {
                Let b1022 = M[Offset(007908,Mul(2,Widen(MinusByte(b842,16))))];
                Let b1023 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b842,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b842,16)))) HiByte(Add(MakeHiLo(b1022,b1023),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b842,16)))),1) LoByte(Add(MakeHiLo(b1022,b1023),1));
                if (GreaterThanEqual(MakeHiLo(b1022,b1023),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b1024 = M[008272];
                  Let b1025 = M[008273];
                  if (IsZeroByte(b1025)) {
                    PopStack popped1026;
                    PushStack popped1026;
                    SetByte 007950 HiByte(popped1026);
                    SetByte 007951 LoByte(popped1026);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1027 = M[008284];
                    Let b1028 = M[008285];
                    if (Equal(MakeHiLo(b1027,b1028),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1029 = M[008284];
                      Let b1030 = M[008285];
                      if (IsZeroByte(b1030)) {
                        PopStack popped1031;
                        PushStack popped1031;
                        SetByte 008206 HiByte(popped1031);
                        SetByte 008207 LoByte(popped1031);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1032 = M[008330];
                        Let b1033 = M[008331];
                        if (Equal(MakeHiLo(b1032,b1033),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1034 = M[008318];
                          Let b1035 = M[008319];
                          if (IsZeroByte(b1035)) {
                            PopStack popped1036;
                            PushStack popped1036;
                            SetByte 008014 HiByte(popped1036);
                            SetByte 008015 LoByte(popped1036);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1035,16)) {
                              SetByte 008014 HiByte(GetLocal(b1035));
                              SetByte 008015 LoByte(GetLocal(b1035));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1037 = M[Offset(007908,Mul(2,Widen(MinusByte(b1035,16))))];
                              Let b1038 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1035,16)))),1)];
                              SetByte 008014 b1037;
                              SetByte 008015 b1038;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1030,16)) {
                          SetByte 008206 HiByte(GetLocal(b1030));
                          SetByte 008207 LoByte(GetLocal(b1030));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1039 = M[008330];
                          Let b1040 = M[008331];
                          if (Equal(MakeHiLo(b1039,b1040),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1041 = M[008318];
                            Let b1042 = M[008319];
                            if (IsZeroByte(b1042)) {
                              PopStack popped1043;
                              PushStack popped1043;
                              SetByte 008014 HiByte(popped1043);
                              SetByte 008015 LoByte(popped1043);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1042,16)) {
                                SetByte 008014 HiByte(GetLocal(b1042));
                                SetByte 008015 LoByte(GetLocal(b1042));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1044 = M[Offset(007908,Mul(2,Widen(MinusByte(b1042,16))))];
                                Let b1045 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1042,16)))),1)];
                                SetByte 008014 b1044;
                                SetByte 008015 b1045;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1046 = M[Offset(007908,Mul(2,Widen(MinusByte(b1030,16))))];
                          Let b1047 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1030,16)))),1)];
                          SetByte 008206 b1046;
                          SetByte 008207 b1047;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1048 = M[008330];
                          Let b1049 = M[008331];
                          if (Equal(MakeHiLo(b1048,b1049),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1050 = M[008318];
                            Let b1051 = M[008319];
                            if (IsZeroByte(b1051)) {
                              PopStack popped1052;
                              PushStack popped1052;
                              SetByte 008014 HiByte(popped1052);
                              SetByte 008015 LoByte(popped1052);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1051,16)) {
                                SetByte 008014 HiByte(GetLocal(b1051));
                                SetByte 008015 LoByte(GetLocal(b1051));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1053 = M[Offset(007908,Mul(2,Widen(MinusByte(b1051,16))))];
                                Let b1054 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1051,16)))),1)];
                                SetByte 008014 b1053;
                                SetByte 008015 b1054;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b1025,16)) {
                      SetByte 007950 HiByte(GetLocal(b1025));
                      SetByte 007951 LoByte(GetLocal(b1025));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1055 = M[008284];
                      Let b1056 = M[008285];
                      if (Equal(MakeHiLo(b1055,b1056),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1057 = M[008284];
                        Let b1058 = M[008285];
                        if (IsZeroByte(b1058)) {
                          PopStack popped1059;
                          PushStack popped1059;
                          SetByte 008206 HiByte(popped1059);
                          SetByte 008207 LoByte(popped1059);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1060 = M[008330];
                          Let b1061 = M[008331];
                          if (Equal(MakeHiLo(b1060,b1061),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1062 = M[008318];
                            Let b1063 = M[008319];
                            if (IsZeroByte(b1063)) {
                              PopStack popped1064;
                              PushStack popped1064;
                              SetByte 008014 HiByte(popped1064);
                              SetByte 008015 LoByte(popped1064);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1063,16)) {
                                SetByte 008014 HiByte(GetLocal(b1063));
                                SetByte 008015 LoByte(GetLocal(b1063));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1065 = M[Offset(007908,Mul(2,Widen(MinusByte(b1063,16))))];
                                Let b1066 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1063,16)))),1)];
                                SetByte 008014 b1065;
                                SetByte 008015 b1066;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1058,16)) {
                            SetByte 008206 HiByte(GetLocal(b1058));
                            SetByte 008207 LoByte(GetLocal(b1058));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1067 = M[008330];
                            Let b1068 = M[008331];
                            if (Equal(MakeHiLo(b1067,b1068),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1069 = M[008318];
                              Let b1070 = M[008319];
                              if (IsZeroByte(b1070)) {
                                PopStack popped1071;
                                PushStack popped1071;
                                SetByte 008014 HiByte(popped1071);
                                SetByte 008015 LoByte(popped1071);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1070,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1070));
                                  SetByte 008015 LoByte(GetLocal(b1070));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1072 = M[Offset(007908,Mul(2,Widen(MinusByte(b1070,16))))];
                                  Let b1073 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1070,16)))),1)];
                                  SetByte 008014 b1072;
                                  SetByte 008015 b1073;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1074 = M[Offset(007908,Mul(2,Widen(MinusByte(b1058,16))))];
                            Let b1075 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1058,16)))),1)];
                            SetByte 008206 b1074;
                            SetByte 008207 b1075;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1076 = M[008330];
                            Let b1077 = M[008331];
                            if (Equal(MakeHiLo(b1076,b1077),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1078 = M[008318];
                              Let b1079 = M[008319];
                              if (IsZeroByte(b1079)) {
                                PopStack popped1080;
                                PushStack popped1080;
                                SetByte 008014 HiByte(popped1080);
                                SetByte 008015 LoByte(popped1080);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1079,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1079));
                                  SetByte 008015 LoByte(GetLocal(b1079));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1081 = M[Offset(007908,Mul(2,Widen(MinusByte(b1079,16))))];
                                  Let b1082 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1079,16)))),1)];
                                  SetByte 008014 b1081;
                                  SetByte 008015 b1082;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b1083 = M[Offset(007908,Mul(2,Widen(MinusByte(b1025,16))))];
                      Let b1084 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1025,16)))),1)];
                      SetByte 007950 b1083;
                      SetByte 007951 b1084;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1085 = M[008284];
                      Let b1086 = M[008285];
                      if (Equal(MakeHiLo(b1085,b1086),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1087 = M[008284];
                        Let b1088 = M[008285];
                        if (IsZeroByte(b1088)) {
                          PopStack popped1089;
                          PushStack popped1089;
                          SetByte 008206 HiByte(popped1089);
                          SetByte 008207 LoByte(popped1089);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1090 = M[008330];
                          Let b1091 = M[008331];
                          if (Equal(MakeHiLo(b1090,b1091),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1092 = M[008318];
                            Let b1093 = M[008319];
                            if (IsZeroByte(b1093)) {
                              PopStack popped1094;
                              PushStack popped1094;
                              SetByte 008014 HiByte(popped1094);
                              SetByte 008015 LoByte(popped1094);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1093,16)) {
                                SetByte 008014 HiByte(GetLocal(b1093));
                                SetByte 008015 LoByte(GetLocal(b1093));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1095 = M[Offset(007908,Mul(2,Widen(MinusByte(b1093,16))))];
                                Let b1096 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1093,16)))),1)];
                                SetByte 008014 b1095;
                                SetByte 008015 b1096;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1088,16)) {
                            SetByte 008206 HiByte(GetLocal(b1088));
                            SetByte 008207 LoByte(GetLocal(b1088));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1097 = M[008330];
                            Let b1098 = M[008331];
                            if (Equal(MakeHiLo(b1097,b1098),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1099 = M[008318];
                              Let b1100 = M[008319];
                              if (IsZeroByte(b1100)) {
                                PopStack popped1101;
                                PushStack popped1101;
                                SetByte 008014 HiByte(popped1101);
                                SetByte 008015 LoByte(popped1101);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1100,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1100));
                                  SetByte 008015 LoByte(GetLocal(b1100));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1102 = M[Offset(007908,Mul(2,Widen(MinusByte(b1100,16))))];
                                  Let b1103 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1100,16)))),1)];
                                  SetByte 008014 b1102;
                                  SetByte 008015 b1103;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1104 = M[Offset(007908,Mul(2,Widen(MinusByte(b1088,16))))];
                            Let b1105 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1088,16)))),1)];
                            SetByte 008206 b1104;
                            SetByte 008207 b1105;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1106 = M[008330];
                            Let b1107 = M[008331];
                            if (Equal(MakeHiLo(b1106,b1107),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1108 = M[008318];
                              Let b1109 = M[008319];
                              if (IsZeroByte(b1109)) {
                                PopStack popped1110;
                                PushStack popped1110;
                                SetByte 008014 HiByte(popped1110);
                                SetByte 008015 LoByte(popped1110);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1109,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1109));
                                  SetByte 008015 LoByte(GetLocal(b1109));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1111 = M[Offset(007908,Mul(2,Widen(MinusByte(b1109,16))))];
                                  Let b1112 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1109,16)))),1)];
                                  SetByte 008014 b1111;
                                  SetByte 008015 b1112;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              }
            }
          }
        } else {
          Jump: 019229
        }
      }
    } else {
      Jump: 019222
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 019121 (Inc_chk (Con 34) (Var (Global 55)) (Branch F (Dloc 019222)));
    Let b1113 = M[007944];
    Let b1114 = M[007945];
    Let b1115 = M[008018];
    Let b1116 = M[008019];
    SetByte 007944 HiByte(Add(MakeHiLo(b1113,b1114),1));
    SetByte 007945 LoByte(Add(MakeHiLo(b1113,b1114),1));
    if (GreaterThanEqual(MakeHiLo(b1113,b1114),MakeHiLo(b1115,b1116))) {
      TraceOperation 019126 (Print_obj (Var (Global 153)));
      Let b1117 = M[008214];
      Let b1118 = M[008215];
      Let b1119 = M[Offset(Offset(000751,Mul(MakeHiLo(b1117,b1118),9)),7)];
      Let b1120 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1117,b1118),9)),7),1)];
      Let b1121 = M[Address(MakeHiLo(b1119,b1120))];
      if (IsZeroByte(b1121)) {
        GamePrint "";
        TraceOperation 019128 (Test (Con 128) (Var (Local 1)) (Branch F (Dloc 019229)));
        if (Equal(And(128,GetLocal(1)),GetLocal(1))) {
          TraceOperation 019133 (Print_obj (Var (Global 206)));
          Let b1122 = M[008320];
          Let b1123 = M[008321];
          Let b1124 = M[Offset(Offset(000751,Mul(MakeHiLo(b1122,b1123),9)),7)];
          Let b1125 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1122,b1123),9)),7),1)];
          Let b1126 = M[Address(MakeHiLo(b1124,b1125))];
          if (IsZeroByte(b1126)) {
            GamePrint "";
            TraceOperation 019135 (Inc_chk (Var (Global 18)) (Con 56) (Branch F (Dloc 019236)));
            Let b1127 = M[007944];
            Let b1128 = M[007945];
            if (IsZeroByte(b1128)) {
              PopStack popped1129;
              PushStack Add(popped1129,1);
              if (GreaterThanEqual(popped1129,56)) {
                TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                Let b1130 = M[008272];
                Let b1131 = M[008273];
                if (IsZeroByte(b1131)) {
                  PopStack popped1132;
                  PushStack popped1132;
                  SetByte 007950 HiByte(popped1132);
                  SetByte 007951 LoByte(popped1132);
                  TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                  Let b1133 = M[008284];
                  Let b1134 = M[008285];
                  if (Equal(MakeHiLo(b1133,b1134),0)) {
                    TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                    Let b1135 = M[008284];
                    Let b1136 = M[008285];
                    if (IsZeroByte(b1136)) {
                      PopStack popped1137;
                      PushStack popped1137;
                      SetByte 008206 HiByte(popped1137);
                      SetByte 008207 LoByte(popped1137);
                      TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                      Let b1138 = M[008330];
                      Let b1139 = M[008331];
                      if (Equal(MakeHiLo(b1138,b1139),0)) {
                        TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                        Let b1140 = M[008318];
                        Let b1141 = M[008319];
                        if (IsZeroByte(b1141)) {
                          PopStack popped1142;
                          PushStack popped1142;
                          SetByte 008014 HiByte(popped1142);
                          SetByte 008015 LoByte(popped1142);
                          TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                          Jump: 019193
                        } else {
                          if (LessThanByte(b1141,16)) {
                            SetByte 008014 HiByte(GetLocal(b1141));
                            SetByte 008015 LoByte(GetLocal(b1141));
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            Let b1143 = M[Offset(007908,Mul(2,Widen(MinusByte(b1141,16))))];
                            Let b1144 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1141,16)))),1)];
                            SetByte 008014 b1143;
                            SetByte 008015 b1144;
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          }
                        }
                      } else {
                        Jump: 019186
                      }
                    } else {
                      if (LessThanByte(b1136,16)) {
                        SetByte 008206 HiByte(GetLocal(b1136));
                        SetByte 008207 LoByte(GetLocal(b1136));
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1145 = M[008330];
                        Let b1146 = M[008331];
                        if (Equal(MakeHiLo(b1145,b1146),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1147 = M[008318];
                          Let b1148 = M[008319];
                          if (IsZeroByte(b1148)) {
                            PopStack popped1149;
                            PushStack popped1149;
                            SetByte 008014 HiByte(popped1149);
                            SetByte 008015 LoByte(popped1149);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1148,16)) {
                              SetByte 008014 HiByte(GetLocal(b1148));
                              SetByte 008015 LoByte(GetLocal(b1148));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1150 = M[Offset(007908,Mul(2,Widen(MinusByte(b1148,16))))];
                              Let b1151 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1148,16)))),1)];
                              SetByte 008014 b1150;
                              SetByte 008015 b1151;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        Let b1152 = M[Offset(007908,Mul(2,Widen(MinusByte(b1136,16))))];
                        Let b1153 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1136,16)))),1)];
                        SetByte 008206 b1152;
                        SetByte 008207 b1153;
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1154 = M[008330];
                        Let b1155 = M[008331];
                        if (Equal(MakeHiLo(b1154,b1155),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1156 = M[008318];
                          Let b1157 = M[008319];
                          if (IsZeroByte(b1157)) {
                            PopStack popped1158;
                            PushStack popped1158;
                            SetByte 008014 HiByte(popped1158);
                            SetByte 008015 LoByte(popped1158);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1157,16)) {
                              SetByte 008014 HiByte(GetLocal(b1157));
                              SetByte 008015 LoByte(GetLocal(b1157));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1159 = M[Offset(007908,Mul(2,Widen(MinusByte(b1157,16))))];
                              Let b1160 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1157,16)))),1)];
                              SetByte 008014 b1159;
                              SetByte 008015 b1160;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      }
                    }
                  } else {
                    Jump: 019179
                  }
                } else {
                  if (LessThanByte(b1131,16)) {
                    SetByte 007950 HiByte(GetLocal(b1131));
                    SetByte 007951 LoByte(GetLocal(b1131));
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1161 = M[008284];
                    Let b1162 = M[008285];
                    if (Equal(MakeHiLo(b1161,b1162),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1163 = M[008284];
                      Let b1164 = M[008285];
                      if (IsZeroByte(b1164)) {
                        PopStack popped1165;
                        PushStack popped1165;
                        SetByte 008206 HiByte(popped1165);
                        SetByte 008207 LoByte(popped1165);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1166 = M[008330];
                        Let b1167 = M[008331];
                        if (Equal(MakeHiLo(b1166,b1167),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1168 = M[008318];
                          Let b1169 = M[008319];
                          if (IsZeroByte(b1169)) {
                            PopStack popped1170;
                            PushStack popped1170;
                            SetByte 008014 HiByte(popped1170);
                            SetByte 008015 LoByte(popped1170);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1169,16)) {
                              SetByte 008014 HiByte(GetLocal(b1169));
                              SetByte 008015 LoByte(GetLocal(b1169));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1171 = M[Offset(007908,Mul(2,Widen(MinusByte(b1169,16))))];
                              Let b1172 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1169,16)))),1)];
                              SetByte 008014 b1171;
                              SetByte 008015 b1172;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1164,16)) {
                          SetByte 008206 HiByte(GetLocal(b1164));
                          SetByte 008207 LoByte(GetLocal(b1164));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1173 = M[008330];
                          Let b1174 = M[008331];
                          if (Equal(MakeHiLo(b1173,b1174),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1175 = M[008318];
                            Let b1176 = M[008319];
                            if (IsZeroByte(b1176)) {
                              PopStack popped1177;
                              PushStack popped1177;
                              SetByte 008014 HiByte(popped1177);
                              SetByte 008015 LoByte(popped1177);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1176,16)) {
                                SetByte 008014 HiByte(GetLocal(b1176));
                                SetByte 008015 LoByte(GetLocal(b1176));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1178 = M[Offset(007908,Mul(2,Widen(MinusByte(b1176,16))))];
                                Let b1179 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1176,16)))),1)];
                                SetByte 008014 b1178;
                                SetByte 008015 b1179;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1180 = M[Offset(007908,Mul(2,Widen(MinusByte(b1164,16))))];
                          Let b1181 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1164,16)))),1)];
                          SetByte 008206 b1180;
                          SetByte 008207 b1181;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1182 = M[008330];
                          Let b1183 = M[008331];
                          if (Equal(MakeHiLo(b1182,b1183),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1184 = M[008318];
                            Let b1185 = M[008319];
                            if (IsZeroByte(b1185)) {
                              PopStack popped1186;
                              PushStack popped1186;
                              SetByte 008014 HiByte(popped1186);
                              SetByte 008015 LoByte(popped1186);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1185,16)) {
                                SetByte 008014 HiByte(GetLocal(b1185));
                                SetByte 008015 LoByte(GetLocal(b1185));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1187 = M[Offset(007908,Mul(2,Widen(MinusByte(b1185,16))))];
                                Let b1188 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1185,16)))),1)];
                                SetByte 008014 b1187;
                                SetByte 008015 b1188;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    Let b1189 = M[Offset(007908,Mul(2,Widen(MinusByte(b1131,16))))];
                    Let b1190 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1131,16)))),1)];
                    SetByte 007950 b1189;
                    SetByte 007951 b1190;
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1191 = M[008284];
                    Let b1192 = M[008285];
                    if (Equal(MakeHiLo(b1191,b1192),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1193 = M[008284];
                      Let b1194 = M[008285];
                      if (IsZeroByte(b1194)) {
                        PopStack popped1195;
                        PushStack popped1195;
                        SetByte 008206 HiByte(popped1195);
                        SetByte 008207 LoByte(popped1195);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1196 = M[008330];
                        Let b1197 = M[008331];
                        if (Equal(MakeHiLo(b1196,b1197),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1198 = M[008318];
                          Let b1199 = M[008319];
                          if (IsZeroByte(b1199)) {
                            PopStack popped1200;
                            PushStack popped1200;
                            SetByte 008014 HiByte(popped1200);
                            SetByte 008015 LoByte(popped1200);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1199,16)) {
                              SetByte 008014 HiByte(GetLocal(b1199));
                              SetByte 008015 LoByte(GetLocal(b1199));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1201 = M[Offset(007908,Mul(2,Widen(MinusByte(b1199,16))))];
                              Let b1202 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1199,16)))),1)];
                              SetByte 008014 b1201;
                              SetByte 008015 b1202;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1194,16)) {
                          SetByte 008206 HiByte(GetLocal(b1194));
                          SetByte 008207 LoByte(GetLocal(b1194));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1203 = M[008330];
                          Let b1204 = M[008331];
                          if (Equal(MakeHiLo(b1203,b1204),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1205 = M[008318];
                            Let b1206 = M[008319];
                            if (IsZeroByte(b1206)) {
                              PopStack popped1207;
                              PushStack popped1207;
                              SetByte 008014 HiByte(popped1207);
                              SetByte 008015 LoByte(popped1207);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1206,16)) {
                                SetByte 008014 HiByte(GetLocal(b1206));
                                SetByte 008015 LoByte(GetLocal(b1206));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1208 = M[Offset(007908,Mul(2,Widen(MinusByte(b1206,16))))];
                                Let b1209 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1206,16)))),1)];
                                SetByte 008014 b1208;
                                SetByte 008015 b1209;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1210 = M[Offset(007908,Mul(2,Widen(MinusByte(b1194,16))))];
                          Let b1211 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1194,16)))),1)];
                          SetByte 008206 b1210;
                          SetByte 008207 b1211;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1212 = M[008330];
                          Let b1213 = M[008331];
                          if (Equal(MakeHiLo(b1212,b1213),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1214 = M[008318];
                            Let b1215 = M[008319];
                            if (IsZeroByte(b1215)) {
                              PopStack popped1216;
                              PushStack popped1216;
                              SetByte 008014 HiByte(popped1216);
                              SetByte 008015 LoByte(popped1216);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1215,16)) {
                                SetByte 008014 HiByte(GetLocal(b1215));
                                SetByte 008015 LoByte(GetLocal(b1215));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1217 = M[Offset(007908,Mul(2,Widen(MinusByte(b1215,16))))];
                                Let b1218 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1215,16)))),1)];
                                SetByte 008014 b1217;
                                SetByte 008015 b1218;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  }
                }
              } else {
                Jump: 019236
              }
            } else {
              if (LessThanByte(b1128,16)) {
                SetLocal b1128 Add(GetLocal(b1128),1);
                if (GreaterThanEqual(GetLocal(b1128),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b1219 = M[008272];
                  Let b1220 = M[008273];
                  if (IsZeroByte(b1220)) {
                    PopStack popped1221;
                    PushStack popped1221;
                    SetByte 007950 HiByte(popped1221);
                    SetByte 007951 LoByte(popped1221);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1222 = M[008284];
                    Let b1223 = M[008285];
                    if (Equal(MakeHiLo(b1222,b1223),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1224 = M[008284];
                      Let b1225 = M[008285];
                      if (IsZeroByte(b1225)) {
                        PopStack popped1226;
                        PushStack popped1226;
                        SetByte 008206 HiByte(popped1226);
                        SetByte 008207 LoByte(popped1226);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1227 = M[008330];
                        Let b1228 = M[008331];
                        if (Equal(MakeHiLo(b1227,b1228),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1229 = M[008318];
                          Let b1230 = M[008319];
                          if (IsZeroByte(b1230)) {
                            PopStack popped1231;
                            PushStack popped1231;
                            SetByte 008014 HiByte(popped1231);
                            SetByte 008015 LoByte(popped1231);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1230,16)) {
                              SetByte 008014 HiByte(GetLocal(b1230));
                              SetByte 008015 LoByte(GetLocal(b1230));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1232 = M[Offset(007908,Mul(2,Widen(MinusByte(b1230,16))))];
                              Let b1233 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1230,16)))),1)];
                              SetByte 008014 b1232;
                              SetByte 008015 b1233;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1225,16)) {
                          SetByte 008206 HiByte(GetLocal(b1225));
                          SetByte 008207 LoByte(GetLocal(b1225));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1234 = M[008330];
                          Let b1235 = M[008331];
                          if (Equal(MakeHiLo(b1234,b1235),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1236 = M[008318];
                            Let b1237 = M[008319];
                            if (IsZeroByte(b1237)) {
                              PopStack popped1238;
                              PushStack popped1238;
                              SetByte 008014 HiByte(popped1238);
                              SetByte 008015 LoByte(popped1238);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1237,16)) {
                                SetByte 008014 HiByte(GetLocal(b1237));
                                SetByte 008015 LoByte(GetLocal(b1237));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1239 = M[Offset(007908,Mul(2,Widen(MinusByte(b1237,16))))];
                                Let b1240 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1237,16)))),1)];
                                SetByte 008014 b1239;
                                SetByte 008015 b1240;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1241 = M[Offset(007908,Mul(2,Widen(MinusByte(b1225,16))))];
                          Let b1242 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1225,16)))),1)];
                          SetByte 008206 b1241;
                          SetByte 008207 b1242;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1243 = M[008330];
                          Let b1244 = M[008331];
                          if (Equal(MakeHiLo(b1243,b1244),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1245 = M[008318];
                            Let b1246 = M[008319];
                            if (IsZeroByte(b1246)) {
                              PopStack popped1247;
                              PushStack popped1247;
                              SetByte 008014 HiByte(popped1247);
                              SetByte 008015 LoByte(popped1247);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1246,16)) {
                                SetByte 008014 HiByte(GetLocal(b1246));
                                SetByte 008015 LoByte(GetLocal(b1246));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1248 = M[Offset(007908,Mul(2,Widen(MinusByte(b1246,16))))];
                                Let b1249 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1246,16)))),1)];
                                SetByte 008014 b1248;
                                SetByte 008015 b1249;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b1220,16)) {
                      SetByte 007950 HiByte(GetLocal(b1220));
                      SetByte 007951 LoByte(GetLocal(b1220));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1250 = M[008284];
                      Let b1251 = M[008285];
                      if (Equal(MakeHiLo(b1250,b1251),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1252 = M[008284];
                        Let b1253 = M[008285];
                        if (IsZeroByte(b1253)) {
                          PopStack popped1254;
                          PushStack popped1254;
                          SetByte 008206 HiByte(popped1254);
                          SetByte 008207 LoByte(popped1254);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1255 = M[008330];
                          Let b1256 = M[008331];
                          if (Equal(MakeHiLo(b1255,b1256),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1257 = M[008318];
                            Let b1258 = M[008319];
                            if (IsZeroByte(b1258)) {
                              PopStack popped1259;
                              PushStack popped1259;
                              SetByte 008014 HiByte(popped1259);
                              SetByte 008015 LoByte(popped1259);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1258,16)) {
                                SetByte 008014 HiByte(GetLocal(b1258));
                                SetByte 008015 LoByte(GetLocal(b1258));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1260 = M[Offset(007908,Mul(2,Widen(MinusByte(b1258,16))))];
                                Let b1261 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1258,16)))),1)];
                                SetByte 008014 b1260;
                                SetByte 008015 b1261;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1253,16)) {
                            SetByte 008206 HiByte(GetLocal(b1253));
                            SetByte 008207 LoByte(GetLocal(b1253));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1262 = M[008330];
                            Let b1263 = M[008331];
                            if (Equal(MakeHiLo(b1262,b1263),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1264 = M[008318];
                              Let b1265 = M[008319];
                              if (IsZeroByte(b1265)) {
                                PopStack popped1266;
                                PushStack popped1266;
                                SetByte 008014 HiByte(popped1266);
                                SetByte 008015 LoByte(popped1266);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1265,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1265));
                                  SetByte 008015 LoByte(GetLocal(b1265));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1267 = M[Offset(007908,Mul(2,Widen(MinusByte(b1265,16))))];
                                  Let b1268 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1265,16)))),1)];
                                  SetByte 008014 b1267;
                                  SetByte 008015 b1268;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1269 = M[Offset(007908,Mul(2,Widen(MinusByte(b1253,16))))];
                            Let b1270 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1253,16)))),1)];
                            SetByte 008206 b1269;
                            SetByte 008207 b1270;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1271 = M[008330];
                            Let b1272 = M[008331];
                            if (Equal(MakeHiLo(b1271,b1272),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1273 = M[008318];
                              Let b1274 = M[008319];
                              if (IsZeroByte(b1274)) {
                                PopStack popped1275;
                                PushStack popped1275;
                                SetByte 008014 HiByte(popped1275);
                                SetByte 008015 LoByte(popped1275);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1274,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1274));
                                  SetByte 008015 LoByte(GetLocal(b1274));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1276 = M[Offset(007908,Mul(2,Widen(MinusByte(b1274,16))))];
                                  Let b1277 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1274,16)))),1)];
                                  SetByte 008014 b1276;
                                  SetByte 008015 b1277;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b1278 = M[Offset(007908,Mul(2,Widen(MinusByte(b1220,16))))];
                      Let b1279 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1220,16)))),1)];
                      SetByte 007950 b1278;
                      SetByte 007951 b1279;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1280 = M[008284];
                      Let b1281 = M[008285];
                      if (Equal(MakeHiLo(b1280,b1281),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1282 = M[008284];
                        Let b1283 = M[008285];
                        if (IsZeroByte(b1283)) {
                          PopStack popped1284;
                          PushStack popped1284;
                          SetByte 008206 HiByte(popped1284);
                          SetByte 008207 LoByte(popped1284);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1285 = M[008330];
                          Let b1286 = M[008331];
                          if (Equal(MakeHiLo(b1285,b1286),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1287 = M[008318];
                            Let b1288 = M[008319];
                            if (IsZeroByte(b1288)) {
                              PopStack popped1289;
                              PushStack popped1289;
                              SetByte 008014 HiByte(popped1289);
                              SetByte 008015 LoByte(popped1289);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1288,16)) {
                                SetByte 008014 HiByte(GetLocal(b1288));
                                SetByte 008015 LoByte(GetLocal(b1288));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1290 = M[Offset(007908,Mul(2,Widen(MinusByte(b1288,16))))];
                                Let b1291 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1288,16)))),1)];
                                SetByte 008014 b1290;
                                SetByte 008015 b1291;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1283,16)) {
                            SetByte 008206 HiByte(GetLocal(b1283));
                            SetByte 008207 LoByte(GetLocal(b1283));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1292 = M[008330];
                            Let b1293 = M[008331];
                            if (Equal(MakeHiLo(b1292,b1293),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1294 = M[008318];
                              Let b1295 = M[008319];
                              if (IsZeroByte(b1295)) {
                                PopStack popped1296;
                                PushStack popped1296;
                                SetByte 008014 HiByte(popped1296);
                                SetByte 008015 LoByte(popped1296);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1295,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1295));
                                  SetByte 008015 LoByte(GetLocal(b1295));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1297 = M[Offset(007908,Mul(2,Widen(MinusByte(b1295,16))))];
                                  Let b1298 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1295,16)))),1)];
                                  SetByte 008014 b1297;
                                  SetByte 008015 b1298;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1299 = M[Offset(007908,Mul(2,Widen(MinusByte(b1283,16))))];
                            Let b1300 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1283,16)))),1)];
                            SetByte 008206 b1299;
                            SetByte 008207 b1300;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1301 = M[008330];
                            Let b1302 = M[008331];
                            if (Equal(MakeHiLo(b1301,b1302),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1303 = M[008318];
                              Let b1304 = M[008319];
                              if (IsZeroByte(b1304)) {
                                PopStack popped1305;
                                PushStack popped1305;
                                SetByte 008014 HiByte(popped1305);
                                SetByte 008015 LoByte(popped1305);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1304,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1304));
                                  SetByte 008015 LoByte(GetLocal(b1304));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1306 = M[Offset(007908,Mul(2,Widen(MinusByte(b1304,16))))];
                                  Let b1307 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1304,16)))),1)];
                                  SetByte 008014 b1306;
                                  SetByte 008015 b1307;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              } else {
                Let b1308 = M[Offset(007908,Mul(2,Widen(MinusByte(b1128,16))))];
                Let b1309 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1128,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b1128,16)))) HiByte(Add(MakeHiLo(b1308,b1309),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b1128,16)))),1) LoByte(Add(MakeHiLo(b1308,b1309),1));
                if (GreaterThanEqual(MakeHiLo(b1308,b1309),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b1310 = M[008272];
                  Let b1311 = M[008273];
                  if (IsZeroByte(b1311)) {
                    PopStack popped1312;
                    PushStack popped1312;
                    SetByte 007950 HiByte(popped1312);
                    SetByte 007951 LoByte(popped1312);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1313 = M[008284];
                    Let b1314 = M[008285];
                    if (Equal(MakeHiLo(b1313,b1314),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1315 = M[008284];
                      Let b1316 = M[008285];
                      if (IsZeroByte(b1316)) {
                        PopStack popped1317;
                        PushStack popped1317;
                        SetByte 008206 HiByte(popped1317);
                        SetByte 008207 LoByte(popped1317);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1318 = M[008330];
                        Let b1319 = M[008331];
                        if (Equal(MakeHiLo(b1318,b1319),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1320 = M[008318];
                          Let b1321 = M[008319];
                          if (IsZeroByte(b1321)) {
                            PopStack popped1322;
                            PushStack popped1322;
                            SetByte 008014 HiByte(popped1322);
                            SetByte 008015 LoByte(popped1322);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1321,16)) {
                              SetByte 008014 HiByte(GetLocal(b1321));
                              SetByte 008015 LoByte(GetLocal(b1321));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1323 = M[Offset(007908,Mul(2,Widen(MinusByte(b1321,16))))];
                              Let b1324 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1321,16)))),1)];
                              SetByte 008014 b1323;
                              SetByte 008015 b1324;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1316,16)) {
                          SetByte 008206 HiByte(GetLocal(b1316));
                          SetByte 008207 LoByte(GetLocal(b1316));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1325 = M[008330];
                          Let b1326 = M[008331];
                          if (Equal(MakeHiLo(b1325,b1326),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1327 = M[008318];
                            Let b1328 = M[008319];
                            if (IsZeroByte(b1328)) {
                              PopStack popped1329;
                              PushStack popped1329;
                              SetByte 008014 HiByte(popped1329);
                              SetByte 008015 LoByte(popped1329);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1328,16)) {
                                SetByte 008014 HiByte(GetLocal(b1328));
                                SetByte 008015 LoByte(GetLocal(b1328));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1330 = M[Offset(007908,Mul(2,Widen(MinusByte(b1328,16))))];
                                Let b1331 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1328,16)))),1)];
                                SetByte 008014 b1330;
                                SetByte 008015 b1331;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1332 = M[Offset(007908,Mul(2,Widen(MinusByte(b1316,16))))];
                          Let b1333 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1316,16)))),1)];
                          SetByte 008206 b1332;
                          SetByte 008207 b1333;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1334 = M[008330];
                          Let b1335 = M[008331];
                          if (Equal(MakeHiLo(b1334,b1335),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1336 = M[008318];
                            Let b1337 = M[008319];
                            if (IsZeroByte(b1337)) {
                              PopStack popped1338;
                              PushStack popped1338;
                              SetByte 008014 HiByte(popped1338);
                              SetByte 008015 LoByte(popped1338);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1337,16)) {
                                SetByte 008014 HiByte(GetLocal(b1337));
                                SetByte 008015 LoByte(GetLocal(b1337));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1339 = M[Offset(007908,Mul(2,Widen(MinusByte(b1337,16))))];
                                Let b1340 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1337,16)))),1)];
                                SetByte 008014 b1339;
                                SetByte 008015 b1340;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b1311,16)) {
                      SetByte 007950 HiByte(GetLocal(b1311));
                      SetByte 007951 LoByte(GetLocal(b1311));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1341 = M[008284];
                      Let b1342 = M[008285];
                      if (Equal(MakeHiLo(b1341,b1342),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1343 = M[008284];
                        Let b1344 = M[008285];
                        if (IsZeroByte(b1344)) {
                          PopStack popped1345;
                          PushStack popped1345;
                          SetByte 008206 HiByte(popped1345);
                          SetByte 008207 LoByte(popped1345);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1346 = M[008330];
                          Let b1347 = M[008331];
                          if (Equal(MakeHiLo(b1346,b1347),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1348 = M[008318];
                            Let b1349 = M[008319];
                            if (IsZeroByte(b1349)) {
                              PopStack popped1350;
                              PushStack popped1350;
                              SetByte 008014 HiByte(popped1350);
                              SetByte 008015 LoByte(popped1350);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1349,16)) {
                                SetByte 008014 HiByte(GetLocal(b1349));
                                SetByte 008015 LoByte(GetLocal(b1349));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1351 = M[Offset(007908,Mul(2,Widen(MinusByte(b1349,16))))];
                                Let b1352 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1349,16)))),1)];
                                SetByte 008014 b1351;
                                SetByte 008015 b1352;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1344,16)) {
                            SetByte 008206 HiByte(GetLocal(b1344));
                            SetByte 008207 LoByte(GetLocal(b1344));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1353 = M[008330];
                            Let b1354 = M[008331];
                            if (Equal(MakeHiLo(b1353,b1354),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1355 = M[008318];
                              Let b1356 = M[008319];
                              if (IsZeroByte(b1356)) {
                                PopStack popped1357;
                                PushStack popped1357;
                                SetByte 008014 HiByte(popped1357);
                                SetByte 008015 LoByte(popped1357);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1356,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1356));
                                  SetByte 008015 LoByte(GetLocal(b1356));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1358 = M[Offset(007908,Mul(2,Widen(MinusByte(b1356,16))))];
                                  Let b1359 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1356,16)))),1)];
                                  SetByte 008014 b1358;
                                  SetByte 008015 b1359;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1360 = M[Offset(007908,Mul(2,Widen(MinusByte(b1344,16))))];
                            Let b1361 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1344,16)))),1)];
                            SetByte 008206 b1360;
                            SetByte 008207 b1361;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1362 = M[008330];
                            Let b1363 = M[008331];
                            if (Equal(MakeHiLo(b1362,b1363),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1364 = M[008318];
                              Let b1365 = M[008319];
                              if (IsZeroByte(b1365)) {
                                PopStack popped1366;
                                PushStack popped1366;
                                SetByte 008014 HiByte(popped1366);
                                SetByte 008015 LoByte(popped1366);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1365,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1365));
                                  SetByte 008015 LoByte(GetLocal(b1365));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1367 = M[Offset(007908,Mul(2,Widen(MinusByte(b1365,16))))];
                                  Let b1368 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1365,16)))),1)];
                                  SetByte 008014 b1367;
                                  SetByte 008015 b1368;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b1369 = M[Offset(007908,Mul(2,Widen(MinusByte(b1311,16))))];
                      Let b1370 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1311,16)))),1)];
                      SetByte 007950 b1369;
                      SetByte 007951 b1370;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1371 = M[008284];
                      Let b1372 = M[008285];
                      if (Equal(MakeHiLo(b1371,b1372),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1373 = M[008284];
                        Let b1374 = M[008285];
                        if (IsZeroByte(b1374)) {
                          PopStack popped1375;
                          PushStack popped1375;
                          SetByte 008206 HiByte(popped1375);
                          SetByte 008207 LoByte(popped1375);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1376 = M[008330];
                          Let b1377 = M[008331];
                          if (Equal(MakeHiLo(b1376,b1377),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1378 = M[008318];
                            Let b1379 = M[008319];
                            if (IsZeroByte(b1379)) {
                              PopStack popped1380;
                              PushStack popped1380;
                              SetByte 008014 HiByte(popped1380);
                              SetByte 008015 LoByte(popped1380);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1379,16)) {
                                SetByte 008014 HiByte(GetLocal(b1379));
                                SetByte 008015 LoByte(GetLocal(b1379));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1381 = M[Offset(007908,Mul(2,Widen(MinusByte(b1379,16))))];
                                Let b1382 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1379,16)))),1)];
                                SetByte 008014 b1381;
                                SetByte 008015 b1382;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1374,16)) {
                            SetByte 008206 HiByte(GetLocal(b1374));
                            SetByte 008207 LoByte(GetLocal(b1374));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1383 = M[008330];
                            Let b1384 = M[008331];
                            if (Equal(MakeHiLo(b1383,b1384),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1385 = M[008318];
                              Let b1386 = M[008319];
                              if (IsZeroByte(b1386)) {
                                PopStack popped1387;
                                PushStack popped1387;
                                SetByte 008014 HiByte(popped1387);
                                SetByte 008015 LoByte(popped1387);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1386,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1386));
                                  SetByte 008015 LoByte(GetLocal(b1386));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1388 = M[Offset(007908,Mul(2,Widen(MinusByte(b1386,16))))];
                                  Let b1389 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1386,16)))),1)];
                                  SetByte 008014 b1388;
                                  SetByte 008015 b1389;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1390 = M[Offset(007908,Mul(2,Widen(MinusByte(b1374,16))))];
                            Let b1391 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1374,16)))),1)];
                            SetByte 008206 b1390;
                            SetByte 008207 b1391;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1392 = M[008330];
                            Let b1393 = M[008331];
                            if (Equal(MakeHiLo(b1392,b1393),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1394 = M[008318];
                              Let b1395 = M[008319];
                              if (IsZeroByte(b1395)) {
                                PopStack popped1396;
                                PushStack popped1396;
                                SetByte 008014 HiByte(popped1396);
                                SetByte 008015 LoByte(popped1396);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1395,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1395));
                                  SetByte 008015 LoByte(GetLocal(b1395));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1397 = M[Offset(007908,Mul(2,Widen(MinusByte(b1395,16))))];
                                  Let b1398 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1395,16)))),1)];
                                  SetByte 008014 b1397;
                                  SetByte 008015 b1398;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              }
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b1124,b1125)),1));
            TraceOperation 019135 (Inc_chk (Var (Global 18)) (Con 56) (Branch F (Dloc 019236)));
            Let b1399 = M[007944];
            Let b1400 = M[007945];
            if (IsZeroByte(b1400)) {
              PopStack popped1401;
              PushStack Add(popped1401,1);
              if (GreaterThanEqual(popped1401,56)) {
                TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                Let b1402 = M[008272];
                Let b1403 = M[008273];
                if (IsZeroByte(b1403)) {
                  PopStack popped1404;
                  PushStack popped1404;
                  SetByte 007950 HiByte(popped1404);
                  SetByte 007951 LoByte(popped1404);
                  TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                  Let b1405 = M[008284];
                  Let b1406 = M[008285];
                  if (Equal(MakeHiLo(b1405,b1406),0)) {
                    TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                    Let b1407 = M[008284];
                    Let b1408 = M[008285];
                    if (IsZeroByte(b1408)) {
                      PopStack popped1409;
                      PushStack popped1409;
                      SetByte 008206 HiByte(popped1409);
                      SetByte 008207 LoByte(popped1409);
                      TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                      Let b1410 = M[008330];
                      Let b1411 = M[008331];
                      if (Equal(MakeHiLo(b1410,b1411),0)) {
                        TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                        Let b1412 = M[008318];
                        Let b1413 = M[008319];
                        if (IsZeroByte(b1413)) {
                          PopStack popped1414;
                          PushStack popped1414;
                          SetByte 008014 HiByte(popped1414);
                          SetByte 008015 LoByte(popped1414);
                          TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                          Jump: 019193
                        } else {
                          if (LessThanByte(b1413,16)) {
                            SetByte 008014 HiByte(GetLocal(b1413));
                            SetByte 008015 LoByte(GetLocal(b1413));
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            Let b1415 = M[Offset(007908,Mul(2,Widen(MinusByte(b1413,16))))];
                            Let b1416 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1413,16)))),1)];
                            SetByte 008014 b1415;
                            SetByte 008015 b1416;
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          }
                        }
                      } else {
                        Jump: 019186
                      }
                    } else {
                      if (LessThanByte(b1408,16)) {
                        SetByte 008206 HiByte(GetLocal(b1408));
                        SetByte 008207 LoByte(GetLocal(b1408));
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1417 = M[008330];
                        Let b1418 = M[008331];
                        if (Equal(MakeHiLo(b1417,b1418),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1419 = M[008318];
                          Let b1420 = M[008319];
                          if (IsZeroByte(b1420)) {
                            PopStack popped1421;
                            PushStack popped1421;
                            SetByte 008014 HiByte(popped1421);
                            SetByte 008015 LoByte(popped1421);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1420,16)) {
                              SetByte 008014 HiByte(GetLocal(b1420));
                              SetByte 008015 LoByte(GetLocal(b1420));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1422 = M[Offset(007908,Mul(2,Widen(MinusByte(b1420,16))))];
                              Let b1423 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1420,16)))),1)];
                              SetByte 008014 b1422;
                              SetByte 008015 b1423;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        Let b1424 = M[Offset(007908,Mul(2,Widen(MinusByte(b1408,16))))];
                        Let b1425 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1408,16)))),1)];
                        SetByte 008206 b1424;
                        SetByte 008207 b1425;
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1426 = M[008330];
                        Let b1427 = M[008331];
                        if (Equal(MakeHiLo(b1426,b1427),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1428 = M[008318];
                          Let b1429 = M[008319];
                          if (IsZeroByte(b1429)) {
                            PopStack popped1430;
                            PushStack popped1430;
                            SetByte 008014 HiByte(popped1430);
                            SetByte 008015 LoByte(popped1430);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1429,16)) {
                              SetByte 008014 HiByte(GetLocal(b1429));
                              SetByte 008015 LoByte(GetLocal(b1429));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1431 = M[Offset(007908,Mul(2,Widen(MinusByte(b1429,16))))];
                              Let b1432 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1429,16)))),1)];
                              SetByte 008014 b1431;
                              SetByte 008015 b1432;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      }
                    }
                  } else {
                    Jump: 019179
                  }
                } else {
                  if (LessThanByte(b1403,16)) {
                    SetByte 007950 HiByte(GetLocal(b1403));
                    SetByte 007951 LoByte(GetLocal(b1403));
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1433 = M[008284];
                    Let b1434 = M[008285];
                    if (Equal(MakeHiLo(b1433,b1434),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1435 = M[008284];
                      Let b1436 = M[008285];
                      if (IsZeroByte(b1436)) {
                        PopStack popped1437;
                        PushStack popped1437;
                        SetByte 008206 HiByte(popped1437);
                        SetByte 008207 LoByte(popped1437);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1438 = M[008330];
                        Let b1439 = M[008331];
                        if (Equal(MakeHiLo(b1438,b1439),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1440 = M[008318];
                          Let b1441 = M[008319];
                          if (IsZeroByte(b1441)) {
                            PopStack popped1442;
                            PushStack popped1442;
                            SetByte 008014 HiByte(popped1442);
                            SetByte 008015 LoByte(popped1442);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1441,16)) {
                              SetByte 008014 HiByte(GetLocal(b1441));
                              SetByte 008015 LoByte(GetLocal(b1441));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1443 = M[Offset(007908,Mul(2,Widen(MinusByte(b1441,16))))];
                              Let b1444 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1441,16)))),1)];
                              SetByte 008014 b1443;
                              SetByte 008015 b1444;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1436,16)) {
                          SetByte 008206 HiByte(GetLocal(b1436));
                          SetByte 008207 LoByte(GetLocal(b1436));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1445 = M[008330];
                          Let b1446 = M[008331];
                          if (Equal(MakeHiLo(b1445,b1446),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1447 = M[008318];
                            Let b1448 = M[008319];
                            if (IsZeroByte(b1448)) {
                              PopStack popped1449;
                              PushStack popped1449;
                              SetByte 008014 HiByte(popped1449);
                              SetByte 008015 LoByte(popped1449);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1448,16)) {
                                SetByte 008014 HiByte(GetLocal(b1448));
                                SetByte 008015 LoByte(GetLocal(b1448));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1450 = M[Offset(007908,Mul(2,Widen(MinusByte(b1448,16))))];
                                Let b1451 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1448,16)))),1)];
                                SetByte 008014 b1450;
                                SetByte 008015 b1451;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1452 = M[Offset(007908,Mul(2,Widen(MinusByte(b1436,16))))];
                          Let b1453 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1436,16)))),1)];
                          SetByte 008206 b1452;
                          SetByte 008207 b1453;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1454 = M[008330];
                          Let b1455 = M[008331];
                          if (Equal(MakeHiLo(b1454,b1455),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1456 = M[008318];
                            Let b1457 = M[008319];
                            if (IsZeroByte(b1457)) {
                              PopStack popped1458;
                              PushStack popped1458;
                              SetByte 008014 HiByte(popped1458);
                              SetByte 008015 LoByte(popped1458);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1457,16)) {
                                SetByte 008014 HiByte(GetLocal(b1457));
                                SetByte 008015 LoByte(GetLocal(b1457));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1459 = M[Offset(007908,Mul(2,Widen(MinusByte(b1457,16))))];
                                Let b1460 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1457,16)))),1)];
                                SetByte 008014 b1459;
                                SetByte 008015 b1460;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    Let b1461 = M[Offset(007908,Mul(2,Widen(MinusByte(b1403,16))))];
                    Let b1462 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1403,16)))),1)];
                    SetByte 007950 b1461;
                    SetByte 007951 b1462;
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1463 = M[008284];
                    Let b1464 = M[008285];
                    if (Equal(MakeHiLo(b1463,b1464),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1465 = M[008284];
                      Let b1466 = M[008285];
                      if (IsZeroByte(b1466)) {
                        PopStack popped1467;
                        PushStack popped1467;
                        SetByte 008206 HiByte(popped1467);
                        SetByte 008207 LoByte(popped1467);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1468 = M[008330];
                        Let b1469 = M[008331];
                        if (Equal(MakeHiLo(b1468,b1469),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1470 = M[008318];
                          Let b1471 = M[008319];
                          if (IsZeroByte(b1471)) {
                            PopStack popped1472;
                            PushStack popped1472;
                            SetByte 008014 HiByte(popped1472);
                            SetByte 008015 LoByte(popped1472);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1471,16)) {
                              SetByte 008014 HiByte(GetLocal(b1471));
                              SetByte 008015 LoByte(GetLocal(b1471));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1473 = M[Offset(007908,Mul(2,Widen(MinusByte(b1471,16))))];
                              Let b1474 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1471,16)))),1)];
                              SetByte 008014 b1473;
                              SetByte 008015 b1474;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1466,16)) {
                          SetByte 008206 HiByte(GetLocal(b1466));
                          SetByte 008207 LoByte(GetLocal(b1466));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1475 = M[008330];
                          Let b1476 = M[008331];
                          if (Equal(MakeHiLo(b1475,b1476),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1477 = M[008318];
                            Let b1478 = M[008319];
                            if (IsZeroByte(b1478)) {
                              PopStack popped1479;
                              PushStack popped1479;
                              SetByte 008014 HiByte(popped1479);
                              SetByte 008015 LoByte(popped1479);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1478,16)) {
                                SetByte 008014 HiByte(GetLocal(b1478));
                                SetByte 008015 LoByte(GetLocal(b1478));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1480 = M[Offset(007908,Mul(2,Widen(MinusByte(b1478,16))))];
                                Let b1481 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1478,16)))),1)];
                                SetByte 008014 b1480;
                                SetByte 008015 b1481;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1482 = M[Offset(007908,Mul(2,Widen(MinusByte(b1466,16))))];
                          Let b1483 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1466,16)))),1)];
                          SetByte 008206 b1482;
                          SetByte 008207 b1483;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1484 = M[008330];
                          Let b1485 = M[008331];
                          if (Equal(MakeHiLo(b1484,b1485),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1486 = M[008318];
                            Let b1487 = M[008319];
                            if (IsZeroByte(b1487)) {
                              PopStack popped1488;
                              PushStack popped1488;
                              SetByte 008014 HiByte(popped1488);
                              SetByte 008015 LoByte(popped1488);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1487,16)) {
                                SetByte 008014 HiByte(GetLocal(b1487));
                                SetByte 008015 LoByte(GetLocal(b1487));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1489 = M[Offset(007908,Mul(2,Widen(MinusByte(b1487,16))))];
                                Let b1490 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1487,16)))),1)];
                                SetByte 008014 b1489;
                                SetByte 008015 b1490;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  }
                }
              } else {
                Jump: 019236
              }
            } else {
              if (LessThanByte(b1400,16)) {
                SetLocal b1400 Add(GetLocal(b1400),1);
                if (GreaterThanEqual(GetLocal(b1400),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b1491 = M[008272];
                  Let b1492 = M[008273];
                  if (IsZeroByte(b1492)) {
                    PopStack popped1493;
                    PushStack popped1493;
                    SetByte 007950 HiByte(popped1493);
                    SetByte 007951 LoByte(popped1493);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1494 = M[008284];
                    Let b1495 = M[008285];
                    if (Equal(MakeHiLo(b1494,b1495),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1496 = M[008284];
                      Let b1497 = M[008285];
                      if (IsZeroByte(b1497)) {
                        PopStack popped1498;
                        PushStack popped1498;
                        SetByte 008206 HiByte(popped1498);
                        SetByte 008207 LoByte(popped1498);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1499 = M[008330];
                        Let b1500 = M[008331];
                        if (Equal(MakeHiLo(b1499,b1500),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1501 = M[008318];
                          Let b1502 = M[008319];
                          if (IsZeroByte(b1502)) {
                            PopStack popped1503;
                            PushStack popped1503;
                            SetByte 008014 HiByte(popped1503);
                            SetByte 008015 LoByte(popped1503);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1502,16)) {
                              SetByte 008014 HiByte(GetLocal(b1502));
                              SetByte 008015 LoByte(GetLocal(b1502));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1504 = M[Offset(007908,Mul(2,Widen(MinusByte(b1502,16))))];
                              Let b1505 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1502,16)))),1)];
                              SetByte 008014 b1504;
                              SetByte 008015 b1505;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1497,16)) {
                          SetByte 008206 HiByte(GetLocal(b1497));
                          SetByte 008207 LoByte(GetLocal(b1497));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1506 = M[008330];
                          Let b1507 = M[008331];
                          if (Equal(MakeHiLo(b1506,b1507),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1508 = M[008318];
                            Let b1509 = M[008319];
                            if (IsZeroByte(b1509)) {
                              PopStack popped1510;
                              PushStack popped1510;
                              SetByte 008014 HiByte(popped1510);
                              SetByte 008015 LoByte(popped1510);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1509,16)) {
                                SetByte 008014 HiByte(GetLocal(b1509));
                                SetByte 008015 LoByte(GetLocal(b1509));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1511 = M[Offset(007908,Mul(2,Widen(MinusByte(b1509,16))))];
                                Let b1512 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1509,16)))),1)];
                                SetByte 008014 b1511;
                                SetByte 008015 b1512;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1513 = M[Offset(007908,Mul(2,Widen(MinusByte(b1497,16))))];
                          Let b1514 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1497,16)))),1)];
                          SetByte 008206 b1513;
                          SetByte 008207 b1514;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1515 = M[008330];
                          Let b1516 = M[008331];
                          if (Equal(MakeHiLo(b1515,b1516),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1517 = M[008318];
                            Let b1518 = M[008319];
                            if (IsZeroByte(b1518)) {
                              PopStack popped1519;
                              PushStack popped1519;
                              SetByte 008014 HiByte(popped1519);
                              SetByte 008015 LoByte(popped1519);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1518,16)) {
                                SetByte 008014 HiByte(GetLocal(b1518));
                                SetByte 008015 LoByte(GetLocal(b1518));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1520 = M[Offset(007908,Mul(2,Widen(MinusByte(b1518,16))))];
                                Let b1521 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1518,16)))),1)];
                                SetByte 008014 b1520;
                                SetByte 008015 b1521;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b1492,16)) {
                      SetByte 007950 HiByte(GetLocal(b1492));
                      SetByte 007951 LoByte(GetLocal(b1492));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1522 = M[008284];
                      Let b1523 = M[008285];
                      if (Equal(MakeHiLo(b1522,b1523),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1524 = M[008284];
                        Let b1525 = M[008285];
                        if (IsZeroByte(b1525)) {
                          PopStack popped1526;
                          PushStack popped1526;
                          SetByte 008206 HiByte(popped1526);
                          SetByte 008207 LoByte(popped1526);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1527 = M[008330];
                          Let b1528 = M[008331];
                          if (Equal(MakeHiLo(b1527,b1528),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1529 = M[008318];
                            Let b1530 = M[008319];
                            if (IsZeroByte(b1530)) {
                              PopStack popped1531;
                              PushStack popped1531;
                              SetByte 008014 HiByte(popped1531);
                              SetByte 008015 LoByte(popped1531);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1530,16)) {
                                SetByte 008014 HiByte(GetLocal(b1530));
                                SetByte 008015 LoByte(GetLocal(b1530));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1532 = M[Offset(007908,Mul(2,Widen(MinusByte(b1530,16))))];
                                Let b1533 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1530,16)))),1)];
                                SetByte 008014 b1532;
                                SetByte 008015 b1533;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1525,16)) {
                            SetByte 008206 HiByte(GetLocal(b1525));
                            SetByte 008207 LoByte(GetLocal(b1525));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1534 = M[008330];
                            Let b1535 = M[008331];
                            if (Equal(MakeHiLo(b1534,b1535),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1536 = M[008318];
                              Let b1537 = M[008319];
                              if (IsZeroByte(b1537)) {
                                PopStack popped1538;
                                PushStack popped1538;
                                SetByte 008014 HiByte(popped1538);
                                SetByte 008015 LoByte(popped1538);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1537,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1537));
                                  SetByte 008015 LoByte(GetLocal(b1537));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1539 = M[Offset(007908,Mul(2,Widen(MinusByte(b1537,16))))];
                                  Let b1540 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1537,16)))),1)];
                                  SetByte 008014 b1539;
                                  SetByte 008015 b1540;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1541 = M[Offset(007908,Mul(2,Widen(MinusByte(b1525,16))))];
                            Let b1542 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1525,16)))),1)];
                            SetByte 008206 b1541;
                            SetByte 008207 b1542;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1543 = M[008330];
                            Let b1544 = M[008331];
                            if (Equal(MakeHiLo(b1543,b1544),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1545 = M[008318];
                              Let b1546 = M[008319];
                              if (IsZeroByte(b1546)) {
                                PopStack popped1547;
                                PushStack popped1547;
                                SetByte 008014 HiByte(popped1547);
                                SetByte 008015 LoByte(popped1547);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1546,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1546));
                                  SetByte 008015 LoByte(GetLocal(b1546));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1548 = M[Offset(007908,Mul(2,Widen(MinusByte(b1546,16))))];
                                  Let b1549 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1546,16)))),1)];
                                  SetByte 008014 b1548;
                                  SetByte 008015 b1549;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b1550 = M[Offset(007908,Mul(2,Widen(MinusByte(b1492,16))))];
                      Let b1551 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1492,16)))),1)];
                      SetByte 007950 b1550;
                      SetByte 007951 b1551;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1552 = M[008284];
                      Let b1553 = M[008285];
                      if (Equal(MakeHiLo(b1552,b1553),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1554 = M[008284];
                        Let b1555 = M[008285];
                        if (IsZeroByte(b1555)) {
                          PopStack popped1556;
                          PushStack popped1556;
                          SetByte 008206 HiByte(popped1556);
                          SetByte 008207 LoByte(popped1556);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1557 = M[008330];
                          Let b1558 = M[008331];
                          if (Equal(MakeHiLo(b1557,b1558),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1559 = M[008318];
                            Let b1560 = M[008319];
                            if (IsZeroByte(b1560)) {
                              PopStack popped1561;
                              PushStack popped1561;
                              SetByte 008014 HiByte(popped1561);
                              SetByte 008015 LoByte(popped1561);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1560,16)) {
                                SetByte 008014 HiByte(GetLocal(b1560));
                                SetByte 008015 LoByte(GetLocal(b1560));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1562 = M[Offset(007908,Mul(2,Widen(MinusByte(b1560,16))))];
                                Let b1563 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1560,16)))),1)];
                                SetByte 008014 b1562;
                                SetByte 008015 b1563;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1555,16)) {
                            SetByte 008206 HiByte(GetLocal(b1555));
                            SetByte 008207 LoByte(GetLocal(b1555));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1564 = M[008330];
                            Let b1565 = M[008331];
                            if (Equal(MakeHiLo(b1564,b1565),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1566 = M[008318];
                              Let b1567 = M[008319];
                              if (IsZeroByte(b1567)) {
                                PopStack popped1568;
                                PushStack popped1568;
                                SetByte 008014 HiByte(popped1568);
                                SetByte 008015 LoByte(popped1568);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1567,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1567));
                                  SetByte 008015 LoByte(GetLocal(b1567));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1569 = M[Offset(007908,Mul(2,Widen(MinusByte(b1567,16))))];
                                  Let b1570 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1567,16)))),1)];
                                  SetByte 008014 b1569;
                                  SetByte 008015 b1570;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1571 = M[Offset(007908,Mul(2,Widen(MinusByte(b1555,16))))];
                            Let b1572 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1555,16)))),1)];
                            SetByte 008206 b1571;
                            SetByte 008207 b1572;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1573 = M[008330];
                            Let b1574 = M[008331];
                            if (Equal(MakeHiLo(b1573,b1574),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1575 = M[008318];
                              Let b1576 = M[008319];
                              if (IsZeroByte(b1576)) {
                                PopStack popped1577;
                                PushStack popped1577;
                                SetByte 008014 HiByte(popped1577);
                                SetByte 008015 LoByte(popped1577);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1576,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1576));
                                  SetByte 008015 LoByte(GetLocal(b1576));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1578 = M[Offset(007908,Mul(2,Widen(MinusByte(b1576,16))))];
                                  Let b1579 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1576,16)))),1)];
                                  SetByte 008014 b1578;
                                  SetByte 008015 b1579;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              } else {
                Let b1580 = M[Offset(007908,Mul(2,Widen(MinusByte(b1400,16))))];
                Let b1581 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1400,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b1400,16)))) HiByte(Add(MakeHiLo(b1580,b1581),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b1400,16)))),1) LoByte(Add(MakeHiLo(b1580,b1581),1));
                if (GreaterThanEqual(MakeHiLo(b1580,b1581),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b1582 = M[008272];
                  Let b1583 = M[008273];
                  if (IsZeroByte(b1583)) {
                    PopStack popped1584;
                    PushStack popped1584;
                    SetByte 007950 HiByte(popped1584);
                    SetByte 007951 LoByte(popped1584);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1585 = M[008284];
                    Let b1586 = M[008285];
                    if (Equal(MakeHiLo(b1585,b1586),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1587 = M[008284];
                      Let b1588 = M[008285];
                      if (IsZeroByte(b1588)) {
                        PopStack popped1589;
                        PushStack popped1589;
                        SetByte 008206 HiByte(popped1589);
                        SetByte 008207 LoByte(popped1589);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1590 = M[008330];
                        Let b1591 = M[008331];
                        if (Equal(MakeHiLo(b1590,b1591),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1592 = M[008318];
                          Let b1593 = M[008319];
                          if (IsZeroByte(b1593)) {
                            PopStack popped1594;
                            PushStack popped1594;
                            SetByte 008014 HiByte(popped1594);
                            SetByte 008015 LoByte(popped1594);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1593,16)) {
                              SetByte 008014 HiByte(GetLocal(b1593));
                              SetByte 008015 LoByte(GetLocal(b1593));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1595 = M[Offset(007908,Mul(2,Widen(MinusByte(b1593,16))))];
                              Let b1596 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1593,16)))),1)];
                              SetByte 008014 b1595;
                              SetByte 008015 b1596;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1588,16)) {
                          SetByte 008206 HiByte(GetLocal(b1588));
                          SetByte 008207 LoByte(GetLocal(b1588));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1597 = M[008330];
                          Let b1598 = M[008331];
                          if (Equal(MakeHiLo(b1597,b1598),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1599 = M[008318];
                            Let b1600 = M[008319];
                            if (IsZeroByte(b1600)) {
                              PopStack popped1601;
                              PushStack popped1601;
                              SetByte 008014 HiByte(popped1601);
                              SetByte 008015 LoByte(popped1601);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1600,16)) {
                                SetByte 008014 HiByte(GetLocal(b1600));
                                SetByte 008015 LoByte(GetLocal(b1600));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1602 = M[Offset(007908,Mul(2,Widen(MinusByte(b1600,16))))];
                                Let b1603 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1600,16)))),1)];
                                SetByte 008014 b1602;
                                SetByte 008015 b1603;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1604 = M[Offset(007908,Mul(2,Widen(MinusByte(b1588,16))))];
                          Let b1605 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1588,16)))),1)];
                          SetByte 008206 b1604;
                          SetByte 008207 b1605;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1606 = M[008330];
                          Let b1607 = M[008331];
                          if (Equal(MakeHiLo(b1606,b1607),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1608 = M[008318];
                            Let b1609 = M[008319];
                            if (IsZeroByte(b1609)) {
                              PopStack popped1610;
                              PushStack popped1610;
                              SetByte 008014 HiByte(popped1610);
                              SetByte 008015 LoByte(popped1610);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1609,16)) {
                                SetByte 008014 HiByte(GetLocal(b1609));
                                SetByte 008015 LoByte(GetLocal(b1609));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1611 = M[Offset(007908,Mul(2,Widen(MinusByte(b1609,16))))];
                                Let b1612 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1609,16)))),1)];
                                SetByte 008014 b1611;
                                SetByte 008015 b1612;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b1583,16)) {
                      SetByte 007950 HiByte(GetLocal(b1583));
                      SetByte 007951 LoByte(GetLocal(b1583));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1613 = M[008284];
                      Let b1614 = M[008285];
                      if (Equal(MakeHiLo(b1613,b1614),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1615 = M[008284];
                        Let b1616 = M[008285];
                        if (IsZeroByte(b1616)) {
                          PopStack popped1617;
                          PushStack popped1617;
                          SetByte 008206 HiByte(popped1617);
                          SetByte 008207 LoByte(popped1617);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1618 = M[008330];
                          Let b1619 = M[008331];
                          if (Equal(MakeHiLo(b1618,b1619),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1620 = M[008318];
                            Let b1621 = M[008319];
                            if (IsZeroByte(b1621)) {
                              PopStack popped1622;
                              PushStack popped1622;
                              SetByte 008014 HiByte(popped1622);
                              SetByte 008015 LoByte(popped1622);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1621,16)) {
                                SetByte 008014 HiByte(GetLocal(b1621));
                                SetByte 008015 LoByte(GetLocal(b1621));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1623 = M[Offset(007908,Mul(2,Widen(MinusByte(b1621,16))))];
                                Let b1624 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1621,16)))),1)];
                                SetByte 008014 b1623;
                                SetByte 008015 b1624;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1616,16)) {
                            SetByte 008206 HiByte(GetLocal(b1616));
                            SetByte 008207 LoByte(GetLocal(b1616));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1625 = M[008330];
                            Let b1626 = M[008331];
                            if (Equal(MakeHiLo(b1625,b1626),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1627 = M[008318];
                              Let b1628 = M[008319];
                              if (IsZeroByte(b1628)) {
                                PopStack popped1629;
                                PushStack popped1629;
                                SetByte 008014 HiByte(popped1629);
                                SetByte 008015 LoByte(popped1629);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1628,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1628));
                                  SetByte 008015 LoByte(GetLocal(b1628));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1630 = M[Offset(007908,Mul(2,Widen(MinusByte(b1628,16))))];
                                  Let b1631 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1628,16)))),1)];
                                  SetByte 008014 b1630;
                                  SetByte 008015 b1631;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1632 = M[Offset(007908,Mul(2,Widen(MinusByte(b1616,16))))];
                            Let b1633 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1616,16)))),1)];
                            SetByte 008206 b1632;
                            SetByte 008207 b1633;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1634 = M[008330];
                            Let b1635 = M[008331];
                            if (Equal(MakeHiLo(b1634,b1635),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1636 = M[008318];
                              Let b1637 = M[008319];
                              if (IsZeroByte(b1637)) {
                                PopStack popped1638;
                                PushStack popped1638;
                                SetByte 008014 HiByte(popped1638);
                                SetByte 008015 LoByte(popped1638);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1637,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1637));
                                  SetByte 008015 LoByte(GetLocal(b1637));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1639 = M[Offset(007908,Mul(2,Widen(MinusByte(b1637,16))))];
                                  Let b1640 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1637,16)))),1)];
                                  SetByte 008014 b1639;
                                  SetByte 008015 b1640;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b1641 = M[Offset(007908,Mul(2,Widen(MinusByte(b1583,16))))];
                      Let b1642 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1583,16)))),1)];
                      SetByte 007950 b1641;
                      SetByte 007951 b1642;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1643 = M[008284];
                      Let b1644 = M[008285];
                      if (Equal(MakeHiLo(b1643,b1644),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1645 = M[008284];
                        Let b1646 = M[008285];
                        if (IsZeroByte(b1646)) {
                          PopStack popped1647;
                          PushStack popped1647;
                          SetByte 008206 HiByte(popped1647);
                          SetByte 008207 LoByte(popped1647);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1648 = M[008330];
                          Let b1649 = M[008331];
                          if (Equal(MakeHiLo(b1648,b1649),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1650 = M[008318];
                            Let b1651 = M[008319];
                            if (IsZeroByte(b1651)) {
                              PopStack popped1652;
                              PushStack popped1652;
                              SetByte 008014 HiByte(popped1652);
                              SetByte 008015 LoByte(popped1652);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1651,16)) {
                                SetByte 008014 HiByte(GetLocal(b1651));
                                SetByte 008015 LoByte(GetLocal(b1651));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1653 = M[Offset(007908,Mul(2,Widen(MinusByte(b1651,16))))];
                                Let b1654 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1651,16)))),1)];
                                SetByte 008014 b1653;
                                SetByte 008015 b1654;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1646,16)) {
                            SetByte 008206 HiByte(GetLocal(b1646));
                            SetByte 008207 LoByte(GetLocal(b1646));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1655 = M[008330];
                            Let b1656 = M[008331];
                            if (Equal(MakeHiLo(b1655,b1656),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1657 = M[008318];
                              Let b1658 = M[008319];
                              if (IsZeroByte(b1658)) {
                                PopStack popped1659;
                                PushStack popped1659;
                                SetByte 008014 HiByte(popped1659);
                                SetByte 008015 LoByte(popped1659);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1658,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1658));
                                  SetByte 008015 LoByte(GetLocal(b1658));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1660 = M[Offset(007908,Mul(2,Widen(MinusByte(b1658,16))))];
                                  Let b1661 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1658,16)))),1)];
                                  SetByte 008014 b1660;
                                  SetByte 008015 b1661;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1662 = M[Offset(007908,Mul(2,Widen(MinusByte(b1646,16))))];
                            Let b1663 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1646,16)))),1)];
                            SetByte 008206 b1662;
                            SetByte 008207 b1663;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1664 = M[008330];
                            Let b1665 = M[008331];
                            if (Equal(MakeHiLo(b1664,b1665),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1666 = M[008318];
                              Let b1667 = M[008319];
                              if (IsZeroByte(b1667)) {
                                PopStack popped1668;
                                PushStack popped1668;
                                SetByte 008014 HiByte(popped1668);
                                SetByte 008015 LoByte(popped1668);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1667,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1667));
                                  SetByte 008015 LoByte(GetLocal(b1667));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1669 = M[Offset(007908,Mul(2,Widen(MinusByte(b1667,16))))];
                                  Let b1670 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1667,16)))),1)];
                                  SetByte 008014 b1669;
                                  SetByte 008015 b1670;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              }
            }
          }
        } else {
          Jump: 019229
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b1119,b1120)),1));
        TraceOperation 019128 (Test (Con 128) (Var (Local 1)) (Branch F (Dloc 019229)));
        if (Equal(And(128,GetLocal(1)),GetLocal(1))) {
          TraceOperation 019133 (Print_obj (Var (Global 206)));
          Let b1671 = M[008320];
          Let b1672 = M[008321];
          Let b1673 = M[Offset(Offset(000751,Mul(MakeHiLo(b1671,b1672),9)),7)];
          Let b1674 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1671,b1672),9)),7),1)];
          Let b1675 = M[Address(MakeHiLo(b1673,b1674))];
          if (IsZeroByte(b1675)) {
            GamePrint "";
            TraceOperation 019135 (Inc_chk (Var (Global 18)) (Con 56) (Branch F (Dloc 019236)));
            Let b1676 = M[007944];
            Let b1677 = M[007945];
            if (IsZeroByte(b1677)) {
              PopStack popped1678;
              PushStack Add(popped1678,1);
              if (GreaterThanEqual(popped1678,56)) {
                TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                Let b1679 = M[008272];
                Let b1680 = M[008273];
                if (IsZeroByte(b1680)) {
                  PopStack popped1681;
                  PushStack popped1681;
                  SetByte 007950 HiByte(popped1681);
                  SetByte 007951 LoByte(popped1681);
                  TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                  Let b1682 = M[008284];
                  Let b1683 = M[008285];
                  if (Equal(MakeHiLo(b1682,b1683),0)) {
                    TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                    Let b1684 = M[008284];
                    Let b1685 = M[008285];
                    if (IsZeroByte(b1685)) {
                      PopStack popped1686;
                      PushStack popped1686;
                      SetByte 008206 HiByte(popped1686);
                      SetByte 008207 LoByte(popped1686);
                      TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                      Let b1687 = M[008330];
                      Let b1688 = M[008331];
                      if (Equal(MakeHiLo(b1687,b1688),0)) {
                        TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                        Let b1689 = M[008318];
                        Let b1690 = M[008319];
                        if (IsZeroByte(b1690)) {
                          PopStack popped1691;
                          PushStack popped1691;
                          SetByte 008014 HiByte(popped1691);
                          SetByte 008015 LoByte(popped1691);
                          TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                          Jump: 019193
                        } else {
                          if (LessThanByte(b1690,16)) {
                            SetByte 008014 HiByte(GetLocal(b1690));
                            SetByte 008015 LoByte(GetLocal(b1690));
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            Let b1692 = M[Offset(007908,Mul(2,Widen(MinusByte(b1690,16))))];
                            Let b1693 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1690,16)))),1)];
                            SetByte 008014 b1692;
                            SetByte 008015 b1693;
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          }
                        }
                      } else {
                        Jump: 019186
                      }
                    } else {
                      if (LessThanByte(b1685,16)) {
                        SetByte 008206 HiByte(GetLocal(b1685));
                        SetByte 008207 LoByte(GetLocal(b1685));
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1694 = M[008330];
                        Let b1695 = M[008331];
                        if (Equal(MakeHiLo(b1694,b1695),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1696 = M[008318];
                          Let b1697 = M[008319];
                          if (IsZeroByte(b1697)) {
                            PopStack popped1698;
                            PushStack popped1698;
                            SetByte 008014 HiByte(popped1698);
                            SetByte 008015 LoByte(popped1698);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1697,16)) {
                              SetByte 008014 HiByte(GetLocal(b1697));
                              SetByte 008015 LoByte(GetLocal(b1697));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1699 = M[Offset(007908,Mul(2,Widen(MinusByte(b1697,16))))];
                              Let b1700 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1697,16)))),1)];
                              SetByte 008014 b1699;
                              SetByte 008015 b1700;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        Let b1701 = M[Offset(007908,Mul(2,Widen(MinusByte(b1685,16))))];
                        Let b1702 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1685,16)))),1)];
                        SetByte 008206 b1701;
                        SetByte 008207 b1702;
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1703 = M[008330];
                        Let b1704 = M[008331];
                        if (Equal(MakeHiLo(b1703,b1704),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1705 = M[008318];
                          Let b1706 = M[008319];
                          if (IsZeroByte(b1706)) {
                            PopStack popped1707;
                            PushStack popped1707;
                            SetByte 008014 HiByte(popped1707);
                            SetByte 008015 LoByte(popped1707);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1706,16)) {
                              SetByte 008014 HiByte(GetLocal(b1706));
                              SetByte 008015 LoByte(GetLocal(b1706));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1708 = M[Offset(007908,Mul(2,Widen(MinusByte(b1706,16))))];
                              Let b1709 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1706,16)))),1)];
                              SetByte 008014 b1708;
                              SetByte 008015 b1709;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      }
                    }
                  } else {
                    Jump: 019179
                  }
                } else {
                  if (LessThanByte(b1680,16)) {
                    SetByte 007950 HiByte(GetLocal(b1680));
                    SetByte 007951 LoByte(GetLocal(b1680));
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1710 = M[008284];
                    Let b1711 = M[008285];
                    if (Equal(MakeHiLo(b1710,b1711),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1712 = M[008284];
                      Let b1713 = M[008285];
                      if (IsZeroByte(b1713)) {
                        PopStack popped1714;
                        PushStack popped1714;
                        SetByte 008206 HiByte(popped1714);
                        SetByte 008207 LoByte(popped1714);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1715 = M[008330];
                        Let b1716 = M[008331];
                        if (Equal(MakeHiLo(b1715,b1716),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1717 = M[008318];
                          Let b1718 = M[008319];
                          if (IsZeroByte(b1718)) {
                            PopStack popped1719;
                            PushStack popped1719;
                            SetByte 008014 HiByte(popped1719);
                            SetByte 008015 LoByte(popped1719);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1718,16)) {
                              SetByte 008014 HiByte(GetLocal(b1718));
                              SetByte 008015 LoByte(GetLocal(b1718));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1720 = M[Offset(007908,Mul(2,Widen(MinusByte(b1718,16))))];
                              Let b1721 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1718,16)))),1)];
                              SetByte 008014 b1720;
                              SetByte 008015 b1721;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1713,16)) {
                          SetByte 008206 HiByte(GetLocal(b1713));
                          SetByte 008207 LoByte(GetLocal(b1713));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1722 = M[008330];
                          Let b1723 = M[008331];
                          if (Equal(MakeHiLo(b1722,b1723),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1724 = M[008318];
                            Let b1725 = M[008319];
                            if (IsZeroByte(b1725)) {
                              PopStack popped1726;
                              PushStack popped1726;
                              SetByte 008014 HiByte(popped1726);
                              SetByte 008015 LoByte(popped1726);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1725,16)) {
                                SetByte 008014 HiByte(GetLocal(b1725));
                                SetByte 008015 LoByte(GetLocal(b1725));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1727 = M[Offset(007908,Mul(2,Widen(MinusByte(b1725,16))))];
                                Let b1728 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1725,16)))),1)];
                                SetByte 008014 b1727;
                                SetByte 008015 b1728;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1729 = M[Offset(007908,Mul(2,Widen(MinusByte(b1713,16))))];
                          Let b1730 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1713,16)))),1)];
                          SetByte 008206 b1729;
                          SetByte 008207 b1730;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1731 = M[008330];
                          Let b1732 = M[008331];
                          if (Equal(MakeHiLo(b1731,b1732),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1733 = M[008318];
                            Let b1734 = M[008319];
                            if (IsZeroByte(b1734)) {
                              PopStack popped1735;
                              PushStack popped1735;
                              SetByte 008014 HiByte(popped1735);
                              SetByte 008015 LoByte(popped1735);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1734,16)) {
                                SetByte 008014 HiByte(GetLocal(b1734));
                                SetByte 008015 LoByte(GetLocal(b1734));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1736 = M[Offset(007908,Mul(2,Widen(MinusByte(b1734,16))))];
                                Let b1737 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1734,16)))),1)];
                                SetByte 008014 b1736;
                                SetByte 008015 b1737;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    Let b1738 = M[Offset(007908,Mul(2,Widen(MinusByte(b1680,16))))];
                    Let b1739 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1680,16)))),1)];
                    SetByte 007950 b1738;
                    SetByte 007951 b1739;
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1740 = M[008284];
                    Let b1741 = M[008285];
                    if (Equal(MakeHiLo(b1740,b1741),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1742 = M[008284];
                      Let b1743 = M[008285];
                      if (IsZeroByte(b1743)) {
                        PopStack popped1744;
                        PushStack popped1744;
                        SetByte 008206 HiByte(popped1744);
                        SetByte 008207 LoByte(popped1744);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1745 = M[008330];
                        Let b1746 = M[008331];
                        if (Equal(MakeHiLo(b1745,b1746),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1747 = M[008318];
                          Let b1748 = M[008319];
                          if (IsZeroByte(b1748)) {
                            PopStack popped1749;
                            PushStack popped1749;
                            SetByte 008014 HiByte(popped1749);
                            SetByte 008015 LoByte(popped1749);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1748,16)) {
                              SetByte 008014 HiByte(GetLocal(b1748));
                              SetByte 008015 LoByte(GetLocal(b1748));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1750 = M[Offset(007908,Mul(2,Widen(MinusByte(b1748,16))))];
                              Let b1751 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1748,16)))),1)];
                              SetByte 008014 b1750;
                              SetByte 008015 b1751;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1743,16)) {
                          SetByte 008206 HiByte(GetLocal(b1743));
                          SetByte 008207 LoByte(GetLocal(b1743));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1752 = M[008330];
                          Let b1753 = M[008331];
                          if (Equal(MakeHiLo(b1752,b1753),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1754 = M[008318];
                            Let b1755 = M[008319];
                            if (IsZeroByte(b1755)) {
                              PopStack popped1756;
                              PushStack popped1756;
                              SetByte 008014 HiByte(popped1756);
                              SetByte 008015 LoByte(popped1756);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1755,16)) {
                                SetByte 008014 HiByte(GetLocal(b1755));
                                SetByte 008015 LoByte(GetLocal(b1755));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1757 = M[Offset(007908,Mul(2,Widen(MinusByte(b1755,16))))];
                                Let b1758 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1755,16)))),1)];
                                SetByte 008014 b1757;
                                SetByte 008015 b1758;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1759 = M[Offset(007908,Mul(2,Widen(MinusByte(b1743,16))))];
                          Let b1760 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1743,16)))),1)];
                          SetByte 008206 b1759;
                          SetByte 008207 b1760;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1761 = M[008330];
                          Let b1762 = M[008331];
                          if (Equal(MakeHiLo(b1761,b1762),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1763 = M[008318];
                            Let b1764 = M[008319];
                            if (IsZeroByte(b1764)) {
                              PopStack popped1765;
                              PushStack popped1765;
                              SetByte 008014 HiByte(popped1765);
                              SetByte 008015 LoByte(popped1765);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1764,16)) {
                                SetByte 008014 HiByte(GetLocal(b1764));
                                SetByte 008015 LoByte(GetLocal(b1764));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1766 = M[Offset(007908,Mul(2,Widen(MinusByte(b1764,16))))];
                                Let b1767 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1764,16)))),1)];
                                SetByte 008014 b1766;
                                SetByte 008015 b1767;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  }
                }
              } else {
                Jump: 019236
              }
            } else {
              if (LessThanByte(b1677,16)) {
                SetLocal b1677 Add(GetLocal(b1677),1);
                if (GreaterThanEqual(GetLocal(b1677),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b1768 = M[008272];
                  Let b1769 = M[008273];
                  if (IsZeroByte(b1769)) {
                    PopStack popped1770;
                    PushStack popped1770;
                    SetByte 007950 HiByte(popped1770);
                    SetByte 007951 LoByte(popped1770);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1771 = M[008284];
                    Let b1772 = M[008285];
                    if (Equal(MakeHiLo(b1771,b1772),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1773 = M[008284];
                      Let b1774 = M[008285];
                      if (IsZeroByte(b1774)) {
                        PopStack popped1775;
                        PushStack popped1775;
                        SetByte 008206 HiByte(popped1775);
                        SetByte 008207 LoByte(popped1775);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1776 = M[008330];
                        Let b1777 = M[008331];
                        if (Equal(MakeHiLo(b1776,b1777),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1778 = M[008318];
                          Let b1779 = M[008319];
                          if (IsZeroByte(b1779)) {
                            PopStack popped1780;
                            PushStack popped1780;
                            SetByte 008014 HiByte(popped1780);
                            SetByte 008015 LoByte(popped1780);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1779,16)) {
                              SetByte 008014 HiByte(GetLocal(b1779));
                              SetByte 008015 LoByte(GetLocal(b1779));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1781 = M[Offset(007908,Mul(2,Widen(MinusByte(b1779,16))))];
                              Let b1782 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1779,16)))),1)];
                              SetByte 008014 b1781;
                              SetByte 008015 b1782;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1774,16)) {
                          SetByte 008206 HiByte(GetLocal(b1774));
                          SetByte 008207 LoByte(GetLocal(b1774));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1783 = M[008330];
                          Let b1784 = M[008331];
                          if (Equal(MakeHiLo(b1783,b1784),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1785 = M[008318];
                            Let b1786 = M[008319];
                            if (IsZeroByte(b1786)) {
                              PopStack popped1787;
                              PushStack popped1787;
                              SetByte 008014 HiByte(popped1787);
                              SetByte 008015 LoByte(popped1787);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1786,16)) {
                                SetByte 008014 HiByte(GetLocal(b1786));
                                SetByte 008015 LoByte(GetLocal(b1786));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1788 = M[Offset(007908,Mul(2,Widen(MinusByte(b1786,16))))];
                                Let b1789 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1786,16)))),1)];
                                SetByte 008014 b1788;
                                SetByte 008015 b1789;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1790 = M[Offset(007908,Mul(2,Widen(MinusByte(b1774,16))))];
                          Let b1791 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1774,16)))),1)];
                          SetByte 008206 b1790;
                          SetByte 008207 b1791;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1792 = M[008330];
                          Let b1793 = M[008331];
                          if (Equal(MakeHiLo(b1792,b1793),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1794 = M[008318];
                            Let b1795 = M[008319];
                            if (IsZeroByte(b1795)) {
                              PopStack popped1796;
                              PushStack popped1796;
                              SetByte 008014 HiByte(popped1796);
                              SetByte 008015 LoByte(popped1796);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1795,16)) {
                                SetByte 008014 HiByte(GetLocal(b1795));
                                SetByte 008015 LoByte(GetLocal(b1795));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1797 = M[Offset(007908,Mul(2,Widen(MinusByte(b1795,16))))];
                                Let b1798 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1795,16)))),1)];
                                SetByte 008014 b1797;
                                SetByte 008015 b1798;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b1769,16)) {
                      SetByte 007950 HiByte(GetLocal(b1769));
                      SetByte 007951 LoByte(GetLocal(b1769));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1799 = M[008284];
                      Let b1800 = M[008285];
                      if (Equal(MakeHiLo(b1799,b1800),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1801 = M[008284];
                        Let b1802 = M[008285];
                        if (IsZeroByte(b1802)) {
                          PopStack popped1803;
                          PushStack popped1803;
                          SetByte 008206 HiByte(popped1803);
                          SetByte 008207 LoByte(popped1803);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1804 = M[008330];
                          Let b1805 = M[008331];
                          if (Equal(MakeHiLo(b1804,b1805),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1806 = M[008318];
                            Let b1807 = M[008319];
                            if (IsZeroByte(b1807)) {
                              PopStack popped1808;
                              PushStack popped1808;
                              SetByte 008014 HiByte(popped1808);
                              SetByte 008015 LoByte(popped1808);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1807,16)) {
                                SetByte 008014 HiByte(GetLocal(b1807));
                                SetByte 008015 LoByte(GetLocal(b1807));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1809 = M[Offset(007908,Mul(2,Widen(MinusByte(b1807,16))))];
                                Let b1810 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1807,16)))),1)];
                                SetByte 008014 b1809;
                                SetByte 008015 b1810;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1802,16)) {
                            SetByte 008206 HiByte(GetLocal(b1802));
                            SetByte 008207 LoByte(GetLocal(b1802));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1811 = M[008330];
                            Let b1812 = M[008331];
                            if (Equal(MakeHiLo(b1811,b1812),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1813 = M[008318];
                              Let b1814 = M[008319];
                              if (IsZeroByte(b1814)) {
                                PopStack popped1815;
                                PushStack popped1815;
                                SetByte 008014 HiByte(popped1815);
                                SetByte 008015 LoByte(popped1815);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1814,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1814));
                                  SetByte 008015 LoByte(GetLocal(b1814));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1816 = M[Offset(007908,Mul(2,Widen(MinusByte(b1814,16))))];
                                  Let b1817 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1814,16)))),1)];
                                  SetByte 008014 b1816;
                                  SetByte 008015 b1817;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1818 = M[Offset(007908,Mul(2,Widen(MinusByte(b1802,16))))];
                            Let b1819 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1802,16)))),1)];
                            SetByte 008206 b1818;
                            SetByte 008207 b1819;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1820 = M[008330];
                            Let b1821 = M[008331];
                            if (Equal(MakeHiLo(b1820,b1821),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1822 = M[008318];
                              Let b1823 = M[008319];
                              if (IsZeroByte(b1823)) {
                                PopStack popped1824;
                                PushStack popped1824;
                                SetByte 008014 HiByte(popped1824);
                                SetByte 008015 LoByte(popped1824);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1823,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1823));
                                  SetByte 008015 LoByte(GetLocal(b1823));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1825 = M[Offset(007908,Mul(2,Widen(MinusByte(b1823,16))))];
                                  Let b1826 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1823,16)))),1)];
                                  SetByte 008014 b1825;
                                  SetByte 008015 b1826;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b1827 = M[Offset(007908,Mul(2,Widen(MinusByte(b1769,16))))];
                      Let b1828 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1769,16)))),1)];
                      SetByte 007950 b1827;
                      SetByte 007951 b1828;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1829 = M[008284];
                      Let b1830 = M[008285];
                      if (Equal(MakeHiLo(b1829,b1830),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1831 = M[008284];
                        Let b1832 = M[008285];
                        if (IsZeroByte(b1832)) {
                          PopStack popped1833;
                          PushStack popped1833;
                          SetByte 008206 HiByte(popped1833);
                          SetByte 008207 LoByte(popped1833);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1834 = M[008330];
                          Let b1835 = M[008331];
                          if (Equal(MakeHiLo(b1834,b1835),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1836 = M[008318];
                            Let b1837 = M[008319];
                            if (IsZeroByte(b1837)) {
                              PopStack popped1838;
                              PushStack popped1838;
                              SetByte 008014 HiByte(popped1838);
                              SetByte 008015 LoByte(popped1838);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1837,16)) {
                                SetByte 008014 HiByte(GetLocal(b1837));
                                SetByte 008015 LoByte(GetLocal(b1837));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1839 = M[Offset(007908,Mul(2,Widen(MinusByte(b1837,16))))];
                                Let b1840 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1837,16)))),1)];
                                SetByte 008014 b1839;
                                SetByte 008015 b1840;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1832,16)) {
                            SetByte 008206 HiByte(GetLocal(b1832));
                            SetByte 008207 LoByte(GetLocal(b1832));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1841 = M[008330];
                            Let b1842 = M[008331];
                            if (Equal(MakeHiLo(b1841,b1842),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1843 = M[008318];
                              Let b1844 = M[008319];
                              if (IsZeroByte(b1844)) {
                                PopStack popped1845;
                                PushStack popped1845;
                                SetByte 008014 HiByte(popped1845);
                                SetByte 008015 LoByte(popped1845);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1844,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1844));
                                  SetByte 008015 LoByte(GetLocal(b1844));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1846 = M[Offset(007908,Mul(2,Widen(MinusByte(b1844,16))))];
                                  Let b1847 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1844,16)))),1)];
                                  SetByte 008014 b1846;
                                  SetByte 008015 b1847;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1848 = M[Offset(007908,Mul(2,Widen(MinusByte(b1832,16))))];
                            Let b1849 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1832,16)))),1)];
                            SetByte 008206 b1848;
                            SetByte 008207 b1849;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1850 = M[008330];
                            Let b1851 = M[008331];
                            if (Equal(MakeHiLo(b1850,b1851),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1852 = M[008318];
                              Let b1853 = M[008319];
                              if (IsZeroByte(b1853)) {
                                PopStack popped1854;
                                PushStack popped1854;
                                SetByte 008014 HiByte(popped1854);
                                SetByte 008015 LoByte(popped1854);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1853,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1853));
                                  SetByte 008015 LoByte(GetLocal(b1853));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1855 = M[Offset(007908,Mul(2,Widen(MinusByte(b1853,16))))];
                                  Let b1856 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1853,16)))),1)];
                                  SetByte 008014 b1855;
                                  SetByte 008015 b1856;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              } else {
                Let b1857 = M[Offset(007908,Mul(2,Widen(MinusByte(b1677,16))))];
                Let b1858 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1677,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b1677,16)))) HiByte(Add(MakeHiLo(b1857,b1858),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b1677,16)))),1) LoByte(Add(MakeHiLo(b1857,b1858),1));
                if (GreaterThanEqual(MakeHiLo(b1857,b1858),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b1859 = M[008272];
                  Let b1860 = M[008273];
                  if (IsZeroByte(b1860)) {
                    PopStack popped1861;
                    PushStack popped1861;
                    SetByte 007950 HiByte(popped1861);
                    SetByte 007951 LoByte(popped1861);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1862 = M[008284];
                    Let b1863 = M[008285];
                    if (Equal(MakeHiLo(b1862,b1863),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1864 = M[008284];
                      Let b1865 = M[008285];
                      if (IsZeroByte(b1865)) {
                        PopStack popped1866;
                        PushStack popped1866;
                        SetByte 008206 HiByte(popped1866);
                        SetByte 008207 LoByte(popped1866);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1867 = M[008330];
                        Let b1868 = M[008331];
                        if (Equal(MakeHiLo(b1867,b1868),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1869 = M[008318];
                          Let b1870 = M[008319];
                          if (IsZeroByte(b1870)) {
                            PopStack popped1871;
                            PushStack popped1871;
                            SetByte 008014 HiByte(popped1871);
                            SetByte 008015 LoByte(popped1871);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1870,16)) {
                              SetByte 008014 HiByte(GetLocal(b1870));
                              SetByte 008015 LoByte(GetLocal(b1870));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1872 = M[Offset(007908,Mul(2,Widen(MinusByte(b1870,16))))];
                              Let b1873 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1870,16)))),1)];
                              SetByte 008014 b1872;
                              SetByte 008015 b1873;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1865,16)) {
                          SetByte 008206 HiByte(GetLocal(b1865));
                          SetByte 008207 LoByte(GetLocal(b1865));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1874 = M[008330];
                          Let b1875 = M[008331];
                          if (Equal(MakeHiLo(b1874,b1875),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1876 = M[008318];
                            Let b1877 = M[008319];
                            if (IsZeroByte(b1877)) {
                              PopStack popped1878;
                              PushStack popped1878;
                              SetByte 008014 HiByte(popped1878);
                              SetByte 008015 LoByte(popped1878);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1877,16)) {
                                SetByte 008014 HiByte(GetLocal(b1877));
                                SetByte 008015 LoByte(GetLocal(b1877));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1879 = M[Offset(007908,Mul(2,Widen(MinusByte(b1877,16))))];
                                Let b1880 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1877,16)))),1)];
                                SetByte 008014 b1879;
                                SetByte 008015 b1880;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b1881 = M[Offset(007908,Mul(2,Widen(MinusByte(b1865,16))))];
                          Let b1882 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1865,16)))),1)];
                          SetByte 008206 b1881;
                          SetByte 008207 b1882;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1883 = M[008330];
                          Let b1884 = M[008331];
                          if (Equal(MakeHiLo(b1883,b1884),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1885 = M[008318];
                            Let b1886 = M[008319];
                            if (IsZeroByte(b1886)) {
                              PopStack popped1887;
                              PushStack popped1887;
                              SetByte 008014 HiByte(popped1887);
                              SetByte 008015 LoByte(popped1887);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1886,16)) {
                                SetByte 008014 HiByte(GetLocal(b1886));
                                SetByte 008015 LoByte(GetLocal(b1886));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1888 = M[Offset(007908,Mul(2,Widen(MinusByte(b1886,16))))];
                                Let b1889 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1886,16)))),1)];
                                SetByte 008014 b1888;
                                SetByte 008015 b1889;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b1860,16)) {
                      SetByte 007950 HiByte(GetLocal(b1860));
                      SetByte 007951 LoByte(GetLocal(b1860));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1890 = M[008284];
                      Let b1891 = M[008285];
                      if (Equal(MakeHiLo(b1890,b1891),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1892 = M[008284];
                        Let b1893 = M[008285];
                        if (IsZeroByte(b1893)) {
                          PopStack popped1894;
                          PushStack popped1894;
                          SetByte 008206 HiByte(popped1894);
                          SetByte 008207 LoByte(popped1894);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1895 = M[008330];
                          Let b1896 = M[008331];
                          if (Equal(MakeHiLo(b1895,b1896),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1897 = M[008318];
                            Let b1898 = M[008319];
                            if (IsZeroByte(b1898)) {
                              PopStack popped1899;
                              PushStack popped1899;
                              SetByte 008014 HiByte(popped1899);
                              SetByte 008015 LoByte(popped1899);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1898,16)) {
                                SetByte 008014 HiByte(GetLocal(b1898));
                                SetByte 008015 LoByte(GetLocal(b1898));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1900 = M[Offset(007908,Mul(2,Widen(MinusByte(b1898,16))))];
                                Let b1901 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1898,16)))),1)];
                                SetByte 008014 b1900;
                                SetByte 008015 b1901;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1893,16)) {
                            SetByte 008206 HiByte(GetLocal(b1893));
                            SetByte 008207 LoByte(GetLocal(b1893));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1902 = M[008330];
                            Let b1903 = M[008331];
                            if (Equal(MakeHiLo(b1902,b1903),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1904 = M[008318];
                              Let b1905 = M[008319];
                              if (IsZeroByte(b1905)) {
                                PopStack popped1906;
                                PushStack popped1906;
                                SetByte 008014 HiByte(popped1906);
                                SetByte 008015 LoByte(popped1906);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1905,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1905));
                                  SetByte 008015 LoByte(GetLocal(b1905));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1907 = M[Offset(007908,Mul(2,Widen(MinusByte(b1905,16))))];
                                  Let b1908 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1905,16)))),1)];
                                  SetByte 008014 b1907;
                                  SetByte 008015 b1908;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1909 = M[Offset(007908,Mul(2,Widen(MinusByte(b1893,16))))];
                            Let b1910 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1893,16)))),1)];
                            SetByte 008206 b1909;
                            SetByte 008207 b1910;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1911 = M[008330];
                            Let b1912 = M[008331];
                            if (Equal(MakeHiLo(b1911,b1912),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1913 = M[008318];
                              Let b1914 = M[008319];
                              if (IsZeroByte(b1914)) {
                                PopStack popped1915;
                                PushStack popped1915;
                                SetByte 008014 HiByte(popped1915);
                                SetByte 008015 LoByte(popped1915);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1914,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1914));
                                  SetByte 008015 LoByte(GetLocal(b1914));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1916 = M[Offset(007908,Mul(2,Widen(MinusByte(b1914,16))))];
                                  Let b1917 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1914,16)))),1)];
                                  SetByte 008014 b1916;
                                  SetByte 008015 b1917;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b1918 = M[Offset(007908,Mul(2,Widen(MinusByte(b1860,16))))];
                      Let b1919 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1860,16)))),1)];
                      SetByte 007950 b1918;
                      SetByte 007951 b1919;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b1920 = M[008284];
                      Let b1921 = M[008285];
                      if (Equal(MakeHiLo(b1920,b1921),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b1922 = M[008284];
                        Let b1923 = M[008285];
                        if (IsZeroByte(b1923)) {
                          PopStack popped1924;
                          PushStack popped1924;
                          SetByte 008206 HiByte(popped1924);
                          SetByte 008207 LoByte(popped1924);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1925 = M[008330];
                          Let b1926 = M[008331];
                          if (Equal(MakeHiLo(b1925,b1926),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1927 = M[008318];
                            Let b1928 = M[008319];
                            if (IsZeroByte(b1928)) {
                              PopStack popped1929;
                              PushStack popped1929;
                              SetByte 008014 HiByte(popped1929);
                              SetByte 008015 LoByte(popped1929);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1928,16)) {
                                SetByte 008014 HiByte(GetLocal(b1928));
                                SetByte 008015 LoByte(GetLocal(b1928));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1930 = M[Offset(007908,Mul(2,Widen(MinusByte(b1928,16))))];
                                Let b1931 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1928,16)))),1)];
                                SetByte 008014 b1930;
                                SetByte 008015 b1931;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b1923,16)) {
                            SetByte 008206 HiByte(GetLocal(b1923));
                            SetByte 008207 LoByte(GetLocal(b1923));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1932 = M[008330];
                            Let b1933 = M[008331];
                            if (Equal(MakeHiLo(b1932,b1933),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1934 = M[008318];
                              Let b1935 = M[008319];
                              if (IsZeroByte(b1935)) {
                                PopStack popped1936;
                                PushStack popped1936;
                                SetByte 008014 HiByte(popped1936);
                                SetByte 008015 LoByte(popped1936);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1935,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1935));
                                  SetByte 008015 LoByte(GetLocal(b1935));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1937 = M[Offset(007908,Mul(2,Widen(MinusByte(b1935,16))))];
                                  Let b1938 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1935,16)))),1)];
                                  SetByte 008014 b1937;
                                  SetByte 008015 b1938;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b1939 = M[Offset(007908,Mul(2,Widen(MinusByte(b1923,16))))];
                            Let b1940 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1923,16)))),1)];
                            SetByte 008206 b1939;
                            SetByte 008207 b1940;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b1941 = M[008330];
                            Let b1942 = M[008331];
                            if (Equal(MakeHiLo(b1941,b1942),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b1943 = M[008318];
                              Let b1944 = M[008319];
                              if (IsZeroByte(b1944)) {
                                PopStack popped1945;
                                PushStack popped1945;
                                SetByte 008014 HiByte(popped1945);
                                SetByte 008015 LoByte(popped1945);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b1944,16)) {
                                  SetByte 008014 HiByte(GetLocal(b1944));
                                  SetByte 008015 LoByte(GetLocal(b1944));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b1946 = M[Offset(007908,Mul(2,Widen(MinusByte(b1944,16))))];
                                  Let b1947 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1944,16)))),1)];
                                  SetByte 008014 b1946;
                                  SetByte 008015 b1947;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              }
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b1673,b1674)),1));
            TraceOperation 019135 (Inc_chk (Var (Global 18)) (Con 56) (Branch F (Dloc 019236)));
            Let b1948 = M[007944];
            Let b1949 = M[007945];
            if (IsZeroByte(b1949)) {
              PopStack popped1950;
              PushStack Add(popped1950,1);
              if (GreaterThanEqual(popped1950,56)) {
                TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                Let b1951 = M[008272];
                Let b1952 = M[008273];
                if (IsZeroByte(b1952)) {
                  PopStack popped1953;
                  PushStack popped1953;
                  SetByte 007950 HiByte(popped1953);
                  SetByte 007951 LoByte(popped1953);
                  TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                  Let b1954 = M[008284];
                  Let b1955 = M[008285];
                  if (Equal(MakeHiLo(b1954,b1955),0)) {
                    TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                    Let b1956 = M[008284];
                    Let b1957 = M[008285];
                    if (IsZeroByte(b1957)) {
                      PopStack popped1958;
                      PushStack popped1958;
                      SetByte 008206 HiByte(popped1958);
                      SetByte 008207 LoByte(popped1958);
                      TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                      Let b1959 = M[008330];
                      Let b1960 = M[008331];
                      if (Equal(MakeHiLo(b1959,b1960),0)) {
                        TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                        Let b1961 = M[008318];
                        Let b1962 = M[008319];
                        if (IsZeroByte(b1962)) {
                          PopStack popped1963;
                          PushStack popped1963;
                          SetByte 008014 HiByte(popped1963);
                          SetByte 008015 LoByte(popped1963);
                          TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                          Jump: 019193
                        } else {
                          if (LessThanByte(b1962,16)) {
                            SetByte 008014 HiByte(GetLocal(b1962));
                            SetByte 008015 LoByte(GetLocal(b1962));
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            Let b1964 = M[Offset(007908,Mul(2,Widen(MinusByte(b1962,16))))];
                            Let b1965 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1962,16)))),1)];
                            SetByte 008014 b1964;
                            SetByte 008015 b1965;
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          }
                        }
                      } else {
                        Jump: 019186
                      }
                    } else {
                      if (LessThanByte(b1957,16)) {
                        SetByte 008206 HiByte(GetLocal(b1957));
                        SetByte 008207 LoByte(GetLocal(b1957));
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1966 = M[008330];
                        Let b1967 = M[008331];
                        if (Equal(MakeHiLo(b1966,b1967),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1968 = M[008318];
                          Let b1969 = M[008319];
                          if (IsZeroByte(b1969)) {
                            PopStack popped1970;
                            PushStack popped1970;
                            SetByte 008014 HiByte(popped1970);
                            SetByte 008015 LoByte(popped1970);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1969,16)) {
                              SetByte 008014 HiByte(GetLocal(b1969));
                              SetByte 008015 LoByte(GetLocal(b1969));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1971 = M[Offset(007908,Mul(2,Widen(MinusByte(b1969,16))))];
                              Let b1972 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1969,16)))),1)];
                              SetByte 008014 b1971;
                              SetByte 008015 b1972;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        Let b1973 = M[Offset(007908,Mul(2,Widen(MinusByte(b1957,16))))];
                        Let b1974 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1957,16)))),1)];
                        SetByte 008206 b1973;
                        SetByte 008207 b1974;
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1975 = M[008330];
                        Let b1976 = M[008331];
                        if (Equal(MakeHiLo(b1975,b1976),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1977 = M[008318];
                          Let b1978 = M[008319];
                          if (IsZeroByte(b1978)) {
                            PopStack popped1979;
                            PushStack popped1979;
                            SetByte 008014 HiByte(popped1979);
                            SetByte 008015 LoByte(popped1979);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1978,16)) {
                              SetByte 008014 HiByte(GetLocal(b1978));
                              SetByte 008015 LoByte(GetLocal(b1978));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1980 = M[Offset(007908,Mul(2,Widen(MinusByte(b1978,16))))];
                              Let b1981 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1978,16)))),1)];
                              SetByte 008014 b1980;
                              SetByte 008015 b1981;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      }
                    }
                  } else {
                    Jump: 019179
                  }
                } else {
                  if (LessThanByte(b1952,16)) {
                    SetByte 007950 HiByte(GetLocal(b1952));
                    SetByte 007951 LoByte(GetLocal(b1952));
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b1982 = M[008284];
                    Let b1983 = M[008285];
                    if (Equal(MakeHiLo(b1982,b1983),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b1984 = M[008284];
                      Let b1985 = M[008285];
                      if (IsZeroByte(b1985)) {
                        PopStack popped1986;
                        PushStack popped1986;
                        SetByte 008206 HiByte(popped1986);
                        SetByte 008207 LoByte(popped1986);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b1987 = M[008330];
                        Let b1988 = M[008331];
                        if (Equal(MakeHiLo(b1987,b1988),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b1989 = M[008318];
                          Let b1990 = M[008319];
                          if (IsZeroByte(b1990)) {
                            PopStack popped1991;
                            PushStack popped1991;
                            SetByte 008014 HiByte(popped1991);
                            SetByte 008015 LoByte(popped1991);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b1990,16)) {
                              SetByte 008014 HiByte(GetLocal(b1990));
                              SetByte 008015 LoByte(GetLocal(b1990));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b1992 = M[Offset(007908,Mul(2,Widen(MinusByte(b1990,16))))];
                              Let b1993 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1990,16)))),1)];
                              SetByte 008014 b1992;
                              SetByte 008015 b1993;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b1985,16)) {
                          SetByte 008206 HiByte(GetLocal(b1985));
                          SetByte 008207 LoByte(GetLocal(b1985));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b1994 = M[008330];
                          Let b1995 = M[008331];
                          if (Equal(MakeHiLo(b1994,b1995),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b1996 = M[008318];
                            Let b1997 = M[008319];
                            if (IsZeroByte(b1997)) {
                              PopStack popped1998;
                              PushStack popped1998;
                              SetByte 008014 HiByte(popped1998);
                              SetByte 008015 LoByte(popped1998);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b1997,16)) {
                                SetByte 008014 HiByte(GetLocal(b1997));
                                SetByte 008015 LoByte(GetLocal(b1997));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b1999 = M[Offset(007908,Mul(2,Widen(MinusByte(b1997,16))))];
                                Let b2000 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1997,16)))),1)];
                                SetByte 008014 b1999;
                                SetByte 008015 b2000;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b2001 = M[Offset(007908,Mul(2,Widen(MinusByte(b1985,16))))];
                          Let b2002 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1985,16)))),1)];
                          SetByte 008206 b2001;
                          SetByte 008207 b2002;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b2003 = M[008330];
                          Let b2004 = M[008331];
                          if (Equal(MakeHiLo(b2003,b2004),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b2005 = M[008318];
                            Let b2006 = M[008319];
                            if (IsZeroByte(b2006)) {
                              PopStack popped2007;
                              PushStack popped2007;
                              SetByte 008014 HiByte(popped2007);
                              SetByte 008015 LoByte(popped2007);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b2006,16)) {
                                SetByte 008014 HiByte(GetLocal(b2006));
                                SetByte 008015 LoByte(GetLocal(b2006));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b2008 = M[Offset(007908,Mul(2,Widen(MinusByte(b2006,16))))];
                                Let b2009 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2006,16)))),1)];
                                SetByte 008014 b2008;
                                SetByte 008015 b2009;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    Let b2010 = M[Offset(007908,Mul(2,Widen(MinusByte(b1952,16))))];
                    Let b2011 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1952,16)))),1)];
                    SetByte 007950 b2010;
                    SetByte 007951 b2011;
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b2012 = M[008284];
                    Let b2013 = M[008285];
                    if (Equal(MakeHiLo(b2012,b2013),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b2014 = M[008284];
                      Let b2015 = M[008285];
                      if (IsZeroByte(b2015)) {
                        PopStack popped2016;
                        PushStack popped2016;
                        SetByte 008206 HiByte(popped2016);
                        SetByte 008207 LoByte(popped2016);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b2017 = M[008330];
                        Let b2018 = M[008331];
                        if (Equal(MakeHiLo(b2017,b2018),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b2019 = M[008318];
                          Let b2020 = M[008319];
                          if (IsZeroByte(b2020)) {
                            PopStack popped2021;
                            PushStack popped2021;
                            SetByte 008014 HiByte(popped2021);
                            SetByte 008015 LoByte(popped2021);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b2020,16)) {
                              SetByte 008014 HiByte(GetLocal(b2020));
                              SetByte 008015 LoByte(GetLocal(b2020));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b2022 = M[Offset(007908,Mul(2,Widen(MinusByte(b2020,16))))];
                              Let b2023 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2020,16)))),1)];
                              SetByte 008014 b2022;
                              SetByte 008015 b2023;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b2015,16)) {
                          SetByte 008206 HiByte(GetLocal(b2015));
                          SetByte 008207 LoByte(GetLocal(b2015));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b2024 = M[008330];
                          Let b2025 = M[008331];
                          if (Equal(MakeHiLo(b2024,b2025),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b2026 = M[008318];
                            Let b2027 = M[008319];
                            if (IsZeroByte(b2027)) {
                              PopStack popped2028;
                              PushStack popped2028;
                              SetByte 008014 HiByte(popped2028);
                              SetByte 008015 LoByte(popped2028);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b2027,16)) {
                                SetByte 008014 HiByte(GetLocal(b2027));
                                SetByte 008015 LoByte(GetLocal(b2027));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b2029 = M[Offset(007908,Mul(2,Widen(MinusByte(b2027,16))))];
                                Let b2030 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2027,16)))),1)];
                                SetByte 008014 b2029;
                                SetByte 008015 b2030;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b2031 = M[Offset(007908,Mul(2,Widen(MinusByte(b2015,16))))];
                          Let b2032 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2015,16)))),1)];
                          SetByte 008206 b2031;
                          SetByte 008207 b2032;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b2033 = M[008330];
                          Let b2034 = M[008331];
                          if (Equal(MakeHiLo(b2033,b2034),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b2035 = M[008318];
                            Let b2036 = M[008319];
                            if (IsZeroByte(b2036)) {
                              PopStack popped2037;
                              PushStack popped2037;
                              SetByte 008014 HiByte(popped2037);
                              SetByte 008015 LoByte(popped2037);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b2036,16)) {
                                SetByte 008014 HiByte(GetLocal(b2036));
                                SetByte 008015 LoByte(GetLocal(b2036));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b2038 = M[Offset(007908,Mul(2,Widen(MinusByte(b2036,16))))];
                                Let b2039 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2036,16)))),1)];
                                SetByte 008014 b2038;
                                SetByte 008015 b2039;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  }
                }
              } else {
                Jump: 019236
              }
            } else {
              if (LessThanByte(b1949,16)) {
                SetLocal b1949 Add(GetLocal(b1949),1);
                if (GreaterThanEqual(GetLocal(b1949),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b2040 = M[008272];
                  Let b2041 = M[008273];
                  if (IsZeroByte(b2041)) {
                    PopStack popped2042;
                    PushStack popped2042;
                    SetByte 007950 HiByte(popped2042);
                    SetByte 007951 LoByte(popped2042);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b2043 = M[008284];
                    Let b2044 = M[008285];
                    if (Equal(MakeHiLo(b2043,b2044),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b2045 = M[008284];
                      Let b2046 = M[008285];
                      if (IsZeroByte(b2046)) {
                        PopStack popped2047;
                        PushStack popped2047;
                        SetByte 008206 HiByte(popped2047);
                        SetByte 008207 LoByte(popped2047);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b2048 = M[008330];
                        Let b2049 = M[008331];
                        if (Equal(MakeHiLo(b2048,b2049),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b2050 = M[008318];
                          Let b2051 = M[008319];
                          if (IsZeroByte(b2051)) {
                            PopStack popped2052;
                            PushStack popped2052;
                            SetByte 008014 HiByte(popped2052);
                            SetByte 008015 LoByte(popped2052);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b2051,16)) {
                              SetByte 008014 HiByte(GetLocal(b2051));
                              SetByte 008015 LoByte(GetLocal(b2051));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b2053 = M[Offset(007908,Mul(2,Widen(MinusByte(b2051,16))))];
                              Let b2054 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2051,16)))),1)];
                              SetByte 008014 b2053;
                              SetByte 008015 b2054;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b2046,16)) {
                          SetByte 008206 HiByte(GetLocal(b2046));
                          SetByte 008207 LoByte(GetLocal(b2046));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b2055 = M[008330];
                          Let b2056 = M[008331];
                          if (Equal(MakeHiLo(b2055,b2056),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b2057 = M[008318];
                            Let b2058 = M[008319];
                            if (IsZeroByte(b2058)) {
                              PopStack popped2059;
                              PushStack popped2059;
                              SetByte 008014 HiByte(popped2059);
                              SetByte 008015 LoByte(popped2059);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b2058,16)) {
                                SetByte 008014 HiByte(GetLocal(b2058));
                                SetByte 008015 LoByte(GetLocal(b2058));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b2060 = M[Offset(007908,Mul(2,Widen(MinusByte(b2058,16))))];
                                Let b2061 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2058,16)))),1)];
                                SetByte 008014 b2060;
                                SetByte 008015 b2061;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b2062 = M[Offset(007908,Mul(2,Widen(MinusByte(b2046,16))))];
                          Let b2063 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2046,16)))),1)];
                          SetByte 008206 b2062;
                          SetByte 008207 b2063;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b2064 = M[008330];
                          Let b2065 = M[008331];
                          if (Equal(MakeHiLo(b2064,b2065),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b2066 = M[008318];
                            Let b2067 = M[008319];
                            if (IsZeroByte(b2067)) {
                              PopStack popped2068;
                              PushStack popped2068;
                              SetByte 008014 HiByte(popped2068);
                              SetByte 008015 LoByte(popped2068);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b2067,16)) {
                                SetByte 008014 HiByte(GetLocal(b2067));
                                SetByte 008015 LoByte(GetLocal(b2067));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b2069 = M[Offset(007908,Mul(2,Widen(MinusByte(b2067,16))))];
                                Let b2070 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2067,16)))),1)];
                                SetByte 008014 b2069;
                                SetByte 008015 b2070;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b2041,16)) {
                      SetByte 007950 HiByte(GetLocal(b2041));
                      SetByte 007951 LoByte(GetLocal(b2041));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b2071 = M[008284];
                      Let b2072 = M[008285];
                      if (Equal(MakeHiLo(b2071,b2072),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b2073 = M[008284];
                        Let b2074 = M[008285];
                        if (IsZeroByte(b2074)) {
                          PopStack popped2075;
                          PushStack popped2075;
                          SetByte 008206 HiByte(popped2075);
                          SetByte 008207 LoByte(popped2075);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b2076 = M[008330];
                          Let b2077 = M[008331];
                          if (Equal(MakeHiLo(b2076,b2077),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b2078 = M[008318];
                            Let b2079 = M[008319];
                            if (IsZeroByte(b2079)) {
                              PopStack popped2080;
                              PushStack popped2080;
                              SetByte 008014 HiByte(popped2080);
                              SetByte 008015 LoByte(popped2080);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b2079,16)) {
                                SetByte 008014 HiByte(GetLocal(b2079));
                                SetByte 008015 LoByte(GetLocal(b2079));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b2081 = M[Offset(007908,Mul(2,Widen(MinusByte(b2079,16))))];
                                Let b2082 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2079,16)))),1)];
                                SetByte 008014 b2081;
                                SetByte 008015 b2082;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b2074,16)) {
                            SetByte 008206 HiByte(GetLocal(b2074));
                            SetByte 008207 LoByte(GetLocal(b2074));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b2083 = M[008330];
                            Let b2084 = M[008331];
                            if (Equal(MakeHiLo(b2083,b2084),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b2085 = M[008318];
                              Let b2086 = M[008319];
                              if (IsZeroByte(b2086)) {
                                PopStack popped2087;
                                PushStack popped2087;
                                SetByte 008014 HiByte(popped2087);
                                SetByte 008015 LoByte(popped2087);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b2086,16)) {
                                  SetByte 008014 HiByte(GetLocal(b2086));
                                  SetByte 008015 LoByte(GetLocal(b2086));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b2088 = M[Offset(007908,Mul(2,Widen(MinusByte(b2086,16))))];
                                  Let b2089 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2086,16)))),1)];
                                  SetByte 008014 b2088;
                                  SetByte 008015 b2089;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b2090 = M[Offset(007908,Mul(2,Widen(MinusByte(b2074,16))))];
                            Let b2091 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2074,16)))),1)];
                            SetByte 008206 b2090;
                            SetByte 008207 b2091;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b2092 = M[008330];
                            Let b2093 = M[008331];
                            if (Equal(MakeHiLo(b2092,b2093),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b2094 = M[008318];
                              Let b2095 = M[008319];
                              if (IsZeroByte(b2095)) {
                                PopStack popped2096;
                                PushStack popped2096;
                                SetByte 008014 HiByte(popped2096);
                                SetByte 008015 LoByte(popped2096);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b2095,16)) {
                                  SetByte 008014 HiByte(GetLocal(b2095));
                                  SetByte 008015 LoByte(GetLocal(b2095));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b2097 = M[Offset(007908,Mul(2,Widen(MinusByte(b2095,16))))];
                                  Let b2098 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2095,16)))),1)];
                                  SetByte 008014 b2097;
                                  SetByte 008015 b2098;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b2099 = M[Offset(007908,Mul(2,Widen(MinusByte(b2041,16))))];
                      Let b2100 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2041,16)))),1)];
                      SetByte 007950 b2099;
                      SetByte 007951 b2100;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b2101 = M[008284];
                      Let b2102 = M[008285];
                      if (Equal(MakeHiLo(b2101,b2102),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b2103 = M[008284];
                        Let b2104 = M[008285];
                        if (IsZeroByte(b2104)) {
                          PopStack popped2105;
                          PushStack popped2105;
                          SetByte 008206 HiByte(popped2105);
                          SetByte 008207 LoByte(popped2105);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b2106 = M[008330];
                          Let b2107 = M[008331];
                          if (Equal(MakeHiLo(b2106,b2107),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b2108 = M[008318];
                            Let b2109 = M[008319];
                            if (IsZeroByte(b2109)) {
                              PopStack popped2110;
                              PushStack popped2110;
                              SetByte 008014 HiByte(popped2110);
                              SetByte 008015 LoByte(popped2110);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b2109,16)) {
                                SetByte 008014 HiByte(GetLocal(b2109));
                                SetByte 008015 LoByte(GetLocal(b2109));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b2111 = M[Offset(007908,Mul(2,Widen(MinusByte(b2109,16))))];
                                Let b2112 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2109,16)))),1)];
                                SetByte 008014 b2111;
                                SetByte 008015 b2112;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b2104,16)) {
                            SetByte 008206 HiByte(GetLocal(b2104));
                            SetByte 008207 LoByte(GetLocal(b2104));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b2113 = M[008330];
                            Let b2114 = M[008331];
                            if (Equal(MakeHiLo(b2113,b2114),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b2115 = M[008318];
                              Let b2116 = M[008319];
                              if (IsZeroByte(b2116)) {
                                PopStack popped2117;
                                PushStack popped2117;
                                SetByte 008014 HiByte(popped2117);
                                SetByte 008015 LoByte(popped2117);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b2116,16)) {
                                  SetByte 008014 HiByte(GetLocal(b2116));
                                  SetByte 008015 LoByte(GetLocal(b2116));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b2118 = M[Offset(007908,Mul(2,Widen(MinusByte(b2116,16))))];
                                  Let b2119 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2116,16)))),1)];
                                  SetByte 008014 b2118;
                                  SetByte 008015 b2119;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b2120 = M[Offset(007908,Mul(2,Widen(MinusByte(b2104,16))))];
                            Let b2121 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2104,16)))),1)];
                            SetByte 008206 b2120;
                            SetByte 008207 b2121;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b2122 = M[008330];
                            Let b2123 = M[008331];
                            if (Equal(MakeHiLo(b2122,b2123),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b2124 = M[008318];
                              Let b2125 = M[008319];
                              if (IsZeroByte(b2125)) {
                                PopStack popped2126;
                                PushStack popped2126;
                                SetByte 008014 HiByte(popped2126);
                                SetByte 008015 LoByte(popped2126);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b2125,16)) {
                                  SetByte 008014 HiByte(GetLocal(b2125));
                                  SetByte 008015 LoByte(GetLocal(b2125));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b2127 = M[Offset(007908,Mul(2,Widen(MinusByte(b2125,16))))];
                                  Let b2128 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2125,16)))),1)];
                                  SetByte 008014 b2127;
                                  SetByte 008015 b2128;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              } else {
                Let b2129 = M[Offset(007908,Mul(2,Widen(MinusByte(b1949,16))))];
                Let b2130 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b1949,16)))),1)];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b1949,16)))) HiByte(Add(MakeHiLo(b2129,b2130),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b1949,16)))),1) LoByte(Add(MakeHiLo(b2129,b2130),1));
                if (GreaterThanEqual(MakeHiLo(b2129,b2130),56)) {
                  TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
                  Let b2131 = M[008272];
                  Let b2132 = M[008273];
                  if (IsZeroByte(b2132)) {
                    PopStack popped2133;
                    PushStack popped2133;
                    SetByte 007950 HiByte(popped2133);
                    SetByte 007951 LoByte(popped2133);
                    TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                    Let b2134 = M[008284];
                    Let b2135 = M[008285];
                    if (Equal(MakeHiLo(b2134,b2135),0)) {
                      TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                      Let b2136 = M[008284];
                      Let b2137 = M[008285];
                      if (IsZeroByte(b2137)) {
                        PopStack popped2138;
                        PushStack popped2138;
                        SetByte 008206 HiByte(popped2138);
                        SetByte 008207 LoByte(popped2138);
                        TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                        Let b2139 = M[008330];
                        Let b2140 = M[008331];
                        if (Equal(MakeHiLo(b2139,b2140),0)) {
                          TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                          Let b2141 = M[008318];
                          Let b2142 = M[008319];
                          if (IsZeroByte(b2142)) {
                            PopStack popped2143;
                            PushStack popped2143;
                            SetByte 008014 HiByte(popped2143);
                            SetByte 008015 LoByte(popped2143);
                            TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                            Jump: 019193
                          } else {
                            if (LessThanByte(b2142,16)) {
                              SetByte 008014 HiByte(GetLocal(b2142));
                              SetByte 008015 LoByte(GetLocal(b2142));
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              Let b2144 = M[Offset(007908,Mul(2,Widen(MinusByte(b2142,16))))];
                              Let b2145 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2142,16)))),1)];
                              SetByte 008014 b2144;
                              SetByte 008015 b2145;
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            }
                          }
                        } else {
                          Jump: 019186
                        }
                      } else {
                        if (LessThanByte(b2137,16)) {
                          SetByte 008206 HiByte(GetLocal(b2137));
                          SetByte 008207 LoByte(GetLocal(b2137));
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b2146 = M[008330];
                          Let b2147 = M[008331];
                          if (Equal(MakeHiLo(b2146,b2147),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b2148 = M[008318];
                            Let b2149 = M[008319];
                            if (IsZeroByte(b2149)) {
                              PopStack popped2150;
                              PushStack popped2150;
                              SetByte 008014 HiByte(popped2150);
                              SetByte 008015 LoByte(popped2150);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b2149,16)) {
                                SetByte 008014 HiByte(GetLocal(b2149));
                                SetByte 008015 LoByte(GetLocal(b2149));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b2151 = M[Offset(007908,Mul(2,Widen(MinusByte(b2149,16))))];
                                Let b2152 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2149,16)))),1)];
                                SetByte 008014 b2151;
                                SetByte 008015 b2152;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          Let b2153 = M[Offset(007908,Mul(2,Widen(MinusByte(b2137,16))))];
                          Let b2154 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2137,16)))),1)];
                          SetByte 008206 b2153;
                          SetByte 008207 b2154;
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b2155 = M[008330];
                          Let b2156 = M[008331];
                          if (Equal(MakeHiLo(b2155,b2156),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b2157 = M[008318];
                            Let b2158 = M[008319];
                            if (IsZeroByte(b2158)) {
                              PopStack popped2159;
                              PushStack popped2159;
                              SetByte 008014 HiByte(popped2159);
                              SetByte 008015 LoByte(popped2159);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b2158,16)) {
                                SetByte 008014 HiByte(GetLocal(b2158));
                                SetByte 008015 LoByte(GetLocal(b2158));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b2160 = M[Offset(007908,Mul(2,Widen(MinusByte(b2158,16))))];
                                Let b2161 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2158,16)))),1)];
                                SetByte 008014 b2160;
                                SetByte 008015 b2161;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        }
                      }
                    } else {
                      Jump: 019179
                    }
                  } else {
                    if (LessThanByte(b2132,16)) {
                      SetByte 007950 HiByte(GetLocal(b2132));
                      SetByte 007951 LoByte(GetLocal(b2132));
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b2162 = M[008284];
                      Let b2163 = M[008285];
                      if (Equal(MakeHiLo(b2162,b2163),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b2164 = M[008284];
                        Let b2165 = M[008285];
                        if (IsZeroByte(b2165)) {
                          PopStack popped2166;
                          PushStack popped2166;
                          SetByte 008206 HiByte(popped2166);
                          SetByte 008207 LoByte(popped2166);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b2167 = M[008330];
                          Let b2168 = M[008331];
                          if (Equal(MakeHiLo(b2167,b2168),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b2169 = M[008318];
                            Let b2170 = M[008319];
                            if (IsZeroByte(b2170)) {
                              PopStack popped2171;
                              PushStack popped2171;
                              SetByte 008014 HiByte(popped2171);
                              SetByte 008015 LoByte(popped2171);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b2170,16)) {
                                SetByte 008014 HiByte(GetLocal(b2170));
                                SetByte 008015 LoByte(GetLocal(b2170));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b2172 = M[Offset(007908,Mul(2,Widen(MinusByte(b2170,16))))];
                                Let b2173 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2170,16)))),1)];
                                SetByte 008014 b2172;
                                SetByte 008015 b2173;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b2165,16)) {
                            SetByte 008206 HiByte(GetLocal(b2165));
                            SetByte 008207 LoByte(GetLocal(b2165));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b2174 = M[008330];
                            Let b2175 = M[008331];
                            if (Equal(MakeHiLo(b2174,b2175),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b2176 = M[008318];
                              Let b2177 = M[008319];
                              if (IsZeroByte(b2177)) {
                                PopStack popped2178;
                                PushStack popped2178;
                                SetByte 008014 HiByte(popped2178);
                                SetByte 008015 LoByte(popped2178);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b2177,16)) {
                                  SetByte 008014 HiByte(GetLocal(b2177));
                                  SetByte 008015 LoByte(GetLocal(b2177));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b2179 = M[Offset(007908,Mul(2,Widen(MinusByte(b2177,16))))];
                                  Let b2180 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2177,16)))),1)];
                                  SetByte 008014 b2179;
                                  SetByte 008015 b2180;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b2181 = M[Offset(007908,Mul(2,Widen(MinusByte(b2165,16))))];
                            Let b2182 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2165,16)))),1)];
                            SetByte 008206 b2181;
                            SetByte 008207 b2182;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b2183 = M[008330];
                            Let b2184 = M[008331];
                            if (Equal(MakeHiLo(b2183,b2184),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b2185 = M[008318];
                              Let b2186 = M[008319];
                              if (IsZeroByte(b2186)) {
                                PopStack popped2187;
                                PushStack popped2187;
                                SetByte 008014 HiByte(popped2187);
                                SetByte 008015 LoByte(popped2187);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b2186,16)) {
                                  SetByte 008014 HiByte(GetLocal(b2186));
                                  SetByte 008015 LoByte(GetLocal(b2186));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b2188 = M[Offset(007908,Mul(2,Widen(MinusByte(b2186,16))))];
                                  Let b2189 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2186,16)))),1)];
                                  SetByte 008014 b2188;
                                  SetByte 008015 b2189;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    } else {
                      Let b2190 = M[Offset(007908,Mul(2,Widen(MinusByte(b2132,16))))];
                      Let b2191 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2132,16)))),1)];
                      SetByte 007950 b2190;
                      SetByte 007951 b2191;
                      TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
                      Let b2192 = M[008284];
                      Let b2193 = M[008285];
                      if (Equal(MakeHiLo(b2192,b2193),0)) {
                        TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
                        Let b2194 = M[008284];
                        Let b2195 = M[008285];
                        if (IsZeroByte(b2195)) {
                          PopStack popped2196;
                          PushStack popped2196;
                          SetByte 008206 HiByte(popped2196);
                          SetByte 008207 LoByte(popped2196);
                          TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                          Let b2197 = M[008330];
                          Let b2198 = M[008331];
                          if (Equal(MakeHiLo(b2197,b2198),0)) {
                            TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                            Let b2199 = M[008318];
                            Let b2200 = M[008319];
                            if (IsZeroByte(b2200)) {
                              PopStack popped2201;
                              PushStack popped2201;
                              SetByte 008014 HiByte(popped2201);
                              SetByte 008015 LoByte(popped2201);
                              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                              Jump: 019193
                            } else {
                              if (LessThanByte(b2200,16)) {
                                SetByte 008014 HiByte(GetLocal(b2200));
                                SetByte 008015 LoByte(GetLocal(b2200));
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                Let b2202 = M[Offset(007908,Mul(2,Widen(MinusByte(b2200,16))))];
                                Let b2203 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2200,16)))),1)];
                                SetByte 008014 b2202;
                                SetByte 008015 b2203;
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              }
                            }
                          } else {
                            Jump: 019186
                          }
                        } else {
                          if (LessThanByte(b2195,16)) {
                            SetByte 008206 HiByte(GetLocal(b2195));
                            SetByte 008207 LoByte(GetLocal(b2195));
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b2204 = M[008330];
                            Let b2205 = M[008331];
                            if (Equal(MakeHiLo(b2204,b2205),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b2206 = M[008318];
                              Let b2207 = M[008319];
                              if (IsZeroByte(b2207)) {
                                PopStack popped2208;
                                PushStack popped2208;
                                SetByte 008014 HiByte(popped2208);
                                SetByte 008015 LoByte(popped2208);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b2207,16)) {
                                  SetByte 008014 HiByte(GetLocal(b2207));
                                  SetByte 008015 LoByte(GetLocal(b2207));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b2209 = M[Offset(007908,Mul(2,Widen(MinusByte(b2207,16))))];
                                  Let b2210 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2207,16)))),1)];
                                  SetByte 008014 b2209;
                                  SetByte 008015 b2210;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          } else {
                            Let b2211 = M[Offset(007908,Mul(2,Widen(MinusByte(b2195,16))))];
                            Let b2212 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2195,16)))),1)];
                            SetByte 008206 b2211;
                            SetByte 008207 b2212;
                            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
                            Let b2213 = M[008330];
                            Let b2214 = M[008331];
                            if (Equal(MakeHiLo(b2213,b2214),0)) {
                              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                              Let b2215 = M[008318];
                              Let b2216 = M[008319];
                              if (IsZeroByte(b2216)) {
                                PopStack popped2217;
                                PushStack popped2217;
                                SetByte 008014 HiByte(popped2217);
                                SetByte 008015 LoByte(popped2217);
                                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                Jump: 019193
                              } else {
                                if (LessThanByte(b2216,16)) {
                                  SetByte 008014 HiByte(GetLocal(b2216));
                                  SetByte 008015 LoByte(GetLocal(b2216));
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                } else {
                                  Let b2218 = M[Offset(007908,Mul(2,Widen(MinusByte(b2216,16))))];
                                  Let b2219 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2216,16)))),1)];
                                  SetByte 008014 b2218;
                                  SetByte 008015 b2219;
                                  TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                                  Jump: 019193
                                }
                              }
                            } else {
                              Jump: 019186
                            }
                          }
                        }
                      } else {
                        Jump: 019179
                      }
                    }
                  }
                } else {
                  Jump: 019236
                }
              }
            }
          }
        } else {
          Jump: 019229
        }
      }
    } else {
      Jump: 019222
    }
  }
--[17]--------------------------------------------------
LocRoutine 019292:
  MakeRoutineFrame 0;
  Jump: 019293
LocOp 019293:
  TraceOperation 019293 (Jg (Var (Global 26)) (Var (Global 221)) (Branch F (Dloc 019314)));
  Let b1 = M[007960];
  Let b2 = M[007961];
  Let b3 = M[008350];
  Let b4 = M[008351];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 019297 (Jl (Con 81) (Var Sp) (Branch F (Dloc 019334)));
    PopStack popped5;
    if (LessThan(81,popped5)) {
      TraceOperation 019301 (Add (Con 200) (Var (Global 184)) (Global 112));
      Let b6 = M[008276];
      Let b7 = M[008277];
      SetByte 008132 HiByte(Add(200,MakeHiLo(b6,b7)));
      SetByte 008133 LoByte(Add(200,MakeHiLo(b6,b7)));
      TraceOperation 019305 (Je [Con 0,Con 99] (Branch F (Dloc 016441)));
      Jump: 016441
    } else {
      Jump: 019334
    }
  } else {
    Jump: 019314
  }
--[18]--------------------------------------------------
LocRoutine 020054:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 109;
  }
  Jump: 020057
LocOp 020057:
  TraceOperation 020057 (Div (Var (Global 209)) (Con 212) (Global 49));
  Let b1 = M[008326];
  Let b2 = M[008327];
  SetByte 008006 HiByte(Div(MakeHiLo(b1,b2),212));
  SetByte 008007 LoByte(Div(MakeHiLo(b1,b2),212));
  TraceOperation 020061 (Jz (Con 110) (Branch F (Dloc 013377)));
  Jump: 013377
--[19]--------------------------------------------------
LocRoutine 020230:
  MakeRoutineFrame 0;
  Jump: 020231
LocOp 020231:
  TraceOperation 020231 (Get_prop (Var (Global 150)) (Var (Global 212)) (Global 149));
  Let b1 = M[008208];
  Let b2 = M[008209];
  Let b3 = M[008332];
  Let b4 = M[008333];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Error: getPropsA
--[20]--------------------------------------------------
LocRoutine 020662:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 020671
LocOp 020671:
  TraceOperation 020671 (Add (Var (Global 224)) (Con 210) (Local 3));
  Let b1 = M[008356];
  Let b2 = M[008357];
  SetLocal 3 Add(MakeHiLo(b1,b2),210);
  TraceOperation 020675 (Add (Var (Global 224)) (Var (Global 223)) (Local 2));
  Let b3 = M[008356];
  Let b4 = M[008357];
  Let b5 = M[008354];
  Let b6 = M[008355];
  SetLocal 2 Add(MakeHiLo(b3,b4),MakeHiLo(b5,b6));
  Jump: 020679
LocOp 020679:
  TraceOperation 020679 (Je [Var (Local 2),Var (Local 3)] (Branch T Dfalse));
  if (Equal(GetLocal(2),GetLocal(3))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 020683 (Loadw (Var (Local 2)) (Con 2) Sp);
    Let b2 = M[Offset(Address(GetLocal(2)),4)];
    Let b3 = M[Offset(Offset(Address(GetLocal(2)),4),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 020687 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 020710)));
    PopStack popped4;
    if (Equal(popped4,GetLocal(1))) {
      TraceOperation 020691 (Loadw (Var (Local 2)) (Con 0) Sp);
      Let b5 = M[Offset(Address(GetLocal(2)),0)];
      Let b6 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
      PushStack MakeHiLo(b5,b6);
      TraceOperation 020695 (Jz (Var Sp) (Branch T Dfalse));
      PopStack popped7;
      if (IsZero(popped7)) {
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      } else {
        TraceOperation 020698 (Loadw (Var (Local 2)) (Con 1) (Local 4));
        Let b9 = M[Offset(Address(GetLocal(2)),2)];
        Let b10 = M[Offset(Offset(Address(GetLocal(2)),2),1)];
        SetLocal 4 MakeHiLo(b9,b10);
        TraceOperation 020702 (Jz (Var (Local 4)) (Branch T Dfalse));
        if (IsZero(GetLocal(4))) {
          PopFrame return_address_11;
          JumpReturn: return_address_11, result: 0
        } else {
          TraceOperation 020705 (Jg (Var (Local 4)) (Con 1) (Branch F Dtrue));
          if (GreaterThan(GetLocal(4),1)) {
            TraceOperation 020709 Rfalse;
            PopFrame return_address_12;
            JumpReturn: return_address_12, result: 0
          } else {
            PopFrame return_address_13;
            JumpReturn: return_address_13, result: 1
          }
        }
      }
    } else {
      Jump: 020710
    }
  }
LocOp 020710:
  TraceOperation 020710 (Add (Var (Local 2)) (Con 6) (Local 2));
  SetLocal 2 Add(GetLocal(2),6);
  TraceOperation 020714 (Jump 020679);
  Jump: 020679
--[21]--------------------------------------------------
LocRoutine 020718:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 020721
LocOp 020721:
  TraceOperation 020721 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 020725 (Random (Var Sp) Sp);
  PopStack popped3;
  LetRandom random4 popped3;
  PushStack random4;
  TraceOperation 020729 (Loadw (Var (Local 1)) (Var Sp) Sp);
  PopStack popped5;
  Let b6 = M[Offset(Address(GetLocal(1)),Mul(2,popped5))];
  Let b7 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,popped5)),1)];
  PushStack MakeHiLo(b6,b7);
  TraceOperation 020733 Ret_popped;
  PopStack popped8;
  PopFrame return_address_9;
  JumpReturn: return_address_9, result: popped8
--[22]--------------------------------------------------
LocRoutine 020734:
  MakeRoutineFrame 0;
  Jump: 020735
LocOp 020735:
  TraceOperation 020735 (Storeb (Var (Global 194)) (Con 0) (Con 59));
  Let b1 = M[008296];
  Let b2 = M[008297];
  SetByte Offset(Address(MakeHiLo(b1,b2)),0) 59;
  TraceOperation 020740 (Call (Floc 022320) [Con 29202,Con 20] Sp);
  PushFrame 020740;
  SetLocal 1 29202;
  SetLocal 2 20;
  JumpCall: 022320, #actuals: 2
LocReturn 020740:
  PushStack call_result;
  TraceOperation 020748 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 020753 (Call (Floc 022320) [Con 30159,Con 21] Sp);
  PushFrame 020753;
  SetLocal 1 30159;
  SetLocal 2 21;
  JumpCall: 022320, #actuals: 2
LocReturn 020753:
  PushStack call_result;
  TraceOperation 020761 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 020766 (Call (Floc 022320) [Con -28826,Con 50] Sp);
  PushFrame 020766;
  SetLocal 1 -28826;
  SetLocal 2 50;
  JumpCall: 022320, #actuals: 2
LocReturn 020766:
  PushStack call_result;
  TraceOperation 020774 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 020779 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 020782 (Store (Con 251) (Con 31));
  SetByte 008378 0;
  SetByte 008379 31;
  TraceOperation 020785 (Store (Con 16) (Con 168));
  SetByte 007908 0;
  SetByte 007909 168;
  TraceOperation 020788 (Store (Con 136) (Con 123));
  SetByte 008148 0;
  SetByte 008149 123;
  TraceOperation 020791 (Insert_obj (Con 123) (Con 169));
  Let b2 = M[001862];
  if (IsZero(Widen(b2))) {
    SetByte 001862 169;
    Let b3 = M[002278];
    SetByte 001863 LoByte(Widen(b3));
    SetByte 002278 123;
    TraceOperation 020794 (Store (Con 102) (Con 1));
    SetByte 008080 0;
    SetByte 008081 1;
    TraceOperation 020797 (Insert_obj (Con 31) (Con 161));
    Let b4 = M[001034];
    if (IsZero(Widen(b4))) {
      SetByte 001034 161;
      Let b5 = M[002206];
      SetByte 001035 LoByte(Widen(b5));
      SetByte 002206 31;
      TraceOperation 020800 (Call (Floc 029450) [] Sp);
      PushFrame 020800;
      JumpCall: 029450, #actuals: 0
    } else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b6),31)) {
        Let b7 = M[001035];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b7));
        SetByte 001034 161;
        Let b8 = M[002206];
        SetByte 001035 LoByte(Widen(b8));
        SetByte 002206 31;
        TraceOperation 020800 (Call (Floc 029450) [] Sp);
        PushFrame 020800;
        JumpCall: 029450, #actuals: 0
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b9 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b9),123)) {
      Let b10 = M[001863];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b10));
      SetByte 001862 169;
      Let b11 = M[002278];
      SetByte 001863 LoByte(Widen(b11));
      SetByte 002278 123;
      TraceOperation 020794 (Store (Con 102) (Con 1));
      SetByte 008080 0;
      SetByte 008081 1;
      TraceOperation 020797 (Insert_obj (Con 31) (Con 161));
      Let b12 = M[001034];
      if (IsZero(Widen(b12))) {
        SetByte 001034 161;
        Let b13 = M[002206];
        SetByte 001035 LoByte(Widen(b13));
        SetByte 002206 31;
        TraceOperation 020800 (Call (Floc 029450) [] Sp);
        PushFrame 020800;
        JumpCall: 029450, #actuals: 0
      } else {
        Let b14 = M[Offset(Offset(000751,Mul(Widen(b12),9)),6)];
        if (Equal(Widen(b14),31)) {
          Let b15 = M[001035];
          SetByte Offset(Offset(000751,Mul(Widen(b12),9)),6) LoByte(Widen(b15));
          SetByte 001034 161;
          Let b16 = M[002206];
          SetByte 001035 LoByte(Widen(b16));
          SetByte 002206 31;
          TraceOperation 020800 (Call (Floc 029450) [] Sp);
          PushFrame 020800;
          JumpCall: 029450, #actuals: 0
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 020800:
  PushStack call_result;
  TraceOperation 020805 New_line;
  GamePrint "\n";
  TraceOperation 020806 (Print "You wake up. The room is spinning very gently round your head. Or at least it would be if you could see it which you can't.");
  GamePrint "You wake up. The room is spinning very gently round your head. Or at least it would be if you could see it which you can't.";
  TraceOperation 020873 New_line;
  GamePrint "\n";
  TraceOperation 020874 New_line;
  GamePrint "\n";
  TraceOperation 020875 (Call (Floc 034400) [] Sp);
  PushFrame 020875;
  JumpCall: 034400, #actuals: 0
LocReturn 020875:
  PushStack call_result;
  TraceOperation 020880 (Call (Floc 020888) [] Sp);
  PushFrame 020880;
  JumpCall: 020888, #actuals: 0
LocReturn 020880:
  PushStack call_result;
  TraceOperation 020885 (Jump 020735);
  Jump: 020735
--[23]--------------------------------------------------
LocRoutine 020888:
  MakeRoutineFrame 11;
  if (LessThanByte(num_actuals,11)) {
    SetLocal 11 0;
    if (LessThanByte(num_actuals,10)) {
      SetLocal 10 0;
      if (LessThanByte(num_actuals,9)) {
        SetLocal 9 0;
        if (LessThanByte(num_actuals,8)) {
          SetLocal 8 0;
          if (LessThanByte(num_actuals,7)) {
            SetLocal 7 0;
            if (LessThanByte(num_actuals,6)) {
              SetLocal 6 0;
              if (LessThanByte(num_actuals,5)) {
                SetLocal 5 0;
                if (LessThanByte(num_actuals,4)) {
                  SetLocal 4 0;
                  if (LessThanByte(num_actuals,3)) {
                    SetLocal 3 0;
                    if (LessThanByte(num_actuals,2)) {
                      SetLocal 2 0;
                      if (LessThanByte(num_actuals,1)) {
                        SetLocal 1 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 020911
LocOp 020911:
  TraceOperation 020911 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  TraceOperation 020914 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  TraceOperation 020917 (Store (Con 8) (Con 1));
  SetLocal 8 1;
  TraceOperation 020920 (Call (Floc 022490) [] (Global 234));
  PushFrame 020920;
  JumpCall: 022490, #actuals: 0
LocReturn 020920:
  SetByte 008376 HiByte(call_result);
  SetByte 008377 LoByte(call_result);
  TraceOperation 020925 (Jz (Var (Global 234)) (Branch T (Dloc 021651)));
  Let b1 = M[008376];
  Let b2 = M[008377];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021651
  } else {
    TraceOperation 020929 (Loadw (Var (Global 166)) (Var (Global 162)) (Local 1));
    Let b3 = M[008240];
    Let b4 = M[008241];
    Let b5 = M[008232];
    Let b6 = M[008233];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    SetLocal 1 MakeHiLo(b7,b8);
    TraceOperation 020933 (Loadw (Var (Global 167)) (Var (Global 162)) (Local 2));
    Let b9 = M[008242];
    Let b10 = M[008243];
    Let b11 = M[008232];
    Let b12 = M[008233];
    Let b13 = M[Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12)))];
    Let b14 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))),1)];
    SetLocal 2 MakeHiLo(b13,b14);
    TraceOperation 020937 (Jz (Var (Global 191)) (Branch T (Dloc 021007)));
    Let b15 = M[008290];
    Let b16 = M[008291];
    if (IsZero(MakeHiLo(b15,b16))) {
      Jump: 021007
    } else {
      TraceOperation 020941 (Call (Floc 043298) [Var (Global 191)] Sp);
      Let b17 = M[008290];
      Let b18 = M[008291];
      PushFrame 020941;
      SetLocal 1 MakeHiLo(b17,b18);
      JumpCall: 043298, #actuals: 1
    }
  }
LocReturn 020941:
  PushStack call_result;
  TraceOperation 020947 (Jz (Var Sp) (Branch T (Dloc 021007)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 021007
  } else {
    TraceOperation 020950 (Store (Con 10) (Con 0));
    SetLocal 10 0;
    Jump: 020953
  }
LocOp 020953:
  TraceOperation 020953 (Inc_chk (Con 4) (Var (Local 1)) (Branch F (Dloc 020960)));
  SetLocal 4 Add(GetLocal(4),1);
  if (GreaterThanEqual(GetLocal(4),GetLocal(1))) {
    TraceOperation 020957 (Jump 020977);
    Jump: 020977
  } else {
    Jump: 020960
  }
LocOp 020960:
  TraceOperation 020960 (Loadw (Var (Global 166)) (Var (Local 4)) Sp);
  Let b1 = M[008240];
  Let b2 = M[008241];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 020964 (Je [Var Sp,Con 47] (Branch F (Dloc 020953)));
  PopStack popped5;
  if (Equal(popped5,47)) {
    TraceOperation 020969 (Storew (Var (Global 166)) (Var (Local 4)) (Var (Global 191)));
    Let b6 = M[008240];
    Let b7 = M[008241];
    Let b8 = M[008290];
    Let b9 = M[008291];
    SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(4))) b8;
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(4))),1) b9;
    TraceOperation 020974 (Store (Con 10) (Con 1));
    SetLocal 10 1;
    Jump: 020977
  } else {
    Jump: 020953
  }
LocOp 020977:
  TraceOperation 020977 (Jz (Var (Local 10)) (Branch F (Dloc 021004)));
  if (IsZero(GetLocal(10))) {
    TraceOperation 020980 (Store (Con 4) (Con 0));
    SetLocal 4 0;
    Jump: 020983
  } else {
    Jump: 021004
  }
LocOp 020983:
  TraceOperation 020983 (Inc_chk (Con 4) (Var (Local 2)) (Branch F (Dloc 020990)));
  SetLocal 4 Add(GetLocal(4),1);
  if (GreaterThanEqual(GetLocal(4),GetLocal(2))) {
    TraceOperation 020987 (Jump 021004);
    Jump: 021004
  } else {
    Jump: 020990
  }
LocOp 020990:
  TraceOperation 020990 (Loadw (Var (Global 167)) (Var (Local 4)) Sp);
  Let b1 = M[008242];
  Let b2 = M[008243];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 020994 (Je [Var Sp,Con 47] (Branch F (Dloc 020983)));
  PopStack popped5;
  if (Equal(popped5,47)) {
    TraceOperation 020999 (Storew (Var (Global 167)) (Var (Local 4)) (Var (Global 191)));
    Let b6 = M[008242];
    Let b7 = M[008243];
    Let b8 = M[008290];
    Let b9 = M[008291];
    SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(4))) b8;
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(4))),1) b9;
    Jump: 021004
  } else {
    Jump: 020983
  }
LocOp 021004:
  TraceOperation 021004 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 021007
LocOp 021007:
  TraceOperation 021007 (Jz (Var (Local 2)) (Branch F (Dloc 021016)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 021010 (Push (Var (Local 2)));
    PushStack GetLocal(2);
    TraceOperation 021013 (Jump 021065);
    Jump: 021065
  } else {
    Jump: 021016
  }
LocOp 021016:
  TraceOperation 021016 (Jg (Var (Local 2)) (Con 1) (Branch F (Dloc 021042)));
  if (GreaterThan(GetLocal(2),1)) {
    TraceOperation 021020 (Store (Con 6) (Var (Global 167)));
    Let b1 = M[008242];
    Let b2 = M[008243];
    SetLocal 6 MakeHiLo(b1,b2);
    TraceOperation 021023 (Jz (Var (Local 1)) (Branch F (Dloc 021032)));
    if (IsZero(GetLocal(1))) {
      TraceOperation 021026 (Store (Con 5) (Con 0));
      SetLocal 5 0;
      TraceOperation 021029 (Jump 021036);
      Jump: 021036
    } else {
      Jump: 021032
    }
  } else {
    Jump: 021042
  }
LocOp 021032:
  TraceOperation 021032 (Loadw (Var (Global 166)) (Con 1) (Local 5));
  Let b1 = M[008240];
  Let b2 = M[008241];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 5 MakeHiLo(b3,b4);
  Jump: 021036
LocOp 021036:
  TraceOperation 021036 (Push (Var (Local 2)));
  PushStack GetLocal(2);
  TraceOperation 021039 (Jump 021065);
  Jump: 021065
LocOp 021042:
  TraceOperation 021042 (Jg (Var (Local 1)) (Con 1) (Branch F (Dloc 021062)));
  if (GreaterThan(GetLocal(1),1)) {
    TraceOperation 021046 (Store (Con 8) (Con 0));
    SetLocal 8 0;
    TraceOperation 021049 (Store (Con 6) (Var (Global 166)));
    Let b1 = M[008240];
    Let b2 = M[008241];
    SetLocal 6 MakeHiLo(b1,b2);
    TraceOperation 021052 (Loadw (Var (Global 167)) (Con 1) (Local 5));
    Let b3 = M[008242];
    Let b4 = M[008243];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),2)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),2),1)];
    SetLocal 5 MakeHiLo(b5,b6);
    TraceOperation 021056 (Push (Var (Local 1)));
    PushStack GetLocal(1);
    TraceOperation 021059 (Jump 021065);
    Jump: 021065
  } else {
    Jump: 021062
  }
LocOp 021062:
  TraceOperation 021062 (Push (Con 1));
  PushStack 1;
  Jump: 021065
LocOp 021065:
  TraceOperation 021065 (Store (Con 3) (Var Sp));
  PopStack popped1;
  SetLocal 3 popped1;
  TraceOperation 021068 (Jz (Var (Local 5)) (Branch F (Dloc 021079)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 021071 (Je [Var (Local 1),Con 1] (Branch F (Dloc 021079)));
    if (Equal(GetLocal(1),1)) {
      TraceOperation 021075 (Loadw (Var (Global 166)) (Con 1) (Local 5));
      Let b2 = M[008240];
      Let b3 = M[008241];
      Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),2)];
      Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),2),1)];
      SetLocal 5 MakeHiLo(b4,b5);
      Jump: 021079
    } else {
      Jump: 021079
    }
  } else {
    Jump: 021079
  }
LocOp 021079:
  TraceOperation 021079 (Je [Var (Global 203),Con 169] (Branch F (Dloc 021093)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    TraceOperation 021083 (Call (Floc 022042) [Var (Global 203),Var (Global 201)] (Local 7));
    Let b3 = M[008314];
    Let b4 = M[008315];
    Let b5 = M[008310];
    Let b6 = M[008311];
    PushFrame 021083;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 MakeHiLo(b5,b6);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 021093
  }
LocReturn 021083:
  SetLocal 7 call_result;
  TraceOperation 021090 (Jump 021539);
  Jump: 021539
LocOp 021093:
  TraceOperation 021093 (Jz (Var (Local 3)) (Branch F (Dloc 021204)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 021097 (Loadb (Var (Global 198)) (Con 0) Sp);
    Let b1 = M[008304];
    Let b2 = M[008305];
    Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
    PushStack Widen(b3);
    TraceOperation 021101 (And (Var Sp) (Con 3) Sp);
    PopStack popped4;
    PushStack And(popped4,3);
    TraceOperation 021105 (Jz (Var Sp) (Branch F (Dloc 021120)));
    PopStack popped5;
    if (IsZero(popped5)) {
      TraceOperation 021108 (Call (Floc 022042) [Var (Global 203)] (Local 7));
      Let b6 = M[008314];
      Let b7 = M[008315];
      PushFrame 021108;
      SetLocal 1 MakeHiLo(b6,b7);
      JumpCall: 022042, #actuals: 1
    } else {
      Jump: 021120
    }
  } else {
    Jump: 021204
  }
LocReturn 021108:
  SetLocal 7 call_result;
  TraceOperation 021114 (Store (Con 217) (Con 0));
  SetByte 008310 0;
  SetByte 008311 0;
  TraceOperation 021117 (Jump 021539);
  Jump: 021539
LocOp 021120:
  TraceOperation 021120 (Jz (Var (Global 85)) (Branch F (Dloc 021134)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 021123 (Print_paddr (Var (Global 56)));
    Let b3 = M[008020];
    Let b4 = M[008021];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 021125 New_line;
    GamePrint "\n";
    TraceOperation 021126 (Call (Floc 043634) [] Sp);
    PushFrame 021126;
    JumpCall: 043634, #actuals: 0
  } else {
    Jump: 021134
  }
LocReturn 021126:
  PushStack call_result;
  TraceOperation 021131 (Jump 021539);
  Jump: 021539
LocOp 021134:
  TraceOperation 021134 (Print "There isn't anything to ");
  GamePrint "There isn't anything to ";
  TraceOperation 021141 (Loadw (Var (Global 184)) (Con 1) (Local 10));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 10 MakeHiLo(b3,b4);
  TraceOperation 021145 (Je [Var (Global 203),Con 15] (Branch F (Dloc 021159)));
  Let b5 = M[008314];
  Let b6 = M[008315];
  if (Equal(MakeHiLo(b5,b6),15)) {
    TraceOperation 021149 (Print "talk to");
    GamePrint "talk to";
    TraceOperation 021156 (Jump 021189);
    Jump: 021189
  } else {
    Jump: 021159
  }
LocOp 021159:
  TraceOperation 021159 (Jz (Var (Global 189)) (Branch F (Dloc 021165)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 021162 (Jz (Var (Global 188)) (Branch T (Dloc 021174)));
    Let b3 = M[008284];
    Let b4 = M[008285];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 021174
    } else {
      Jump: 021165
    }
  } else {
    Jump: 021165
  }
LocOp 021165:
  TraceOperation 021165 (Loadw (Var (Local 10)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(10)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(10)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 021169 (Print_addr (Var Sp));
  PopStack popped3;
  GamePrint GetText(Address(popped3));
  TraceOperation 021171 (Jump 021189);
  Jump: 021189
LocOp 021174:
  TraceOperation 021174 (Loadb (Var (Local 10)) (Con 2) (Local 11));
  Let b1 = M[Offset(Address(GetLocal(10)),2)];
  SetLocal 11 Widen(b1);
  TraceOperation 021178 (Loadb (Var (Local 10)) (Con 3) Sp);
  Let b2 = M[Offset(Address(GetLocal(10)),3)];
  PushStack Widen(b2);
  TraceOperation 021182 (Call (Floc 024740) [Var (Local 11),Var Sp] Sp);
  PopStack popped3;
  PushFrame 021182;
  SetLocal 1 GetLocal(11);
  SetLocal 2 popped3;
  JumpCall: 024740, #actuals: 2
LocReturn 021182:
  PushStack call_result;
  Jump: 021189
LocOp 021189:
  TraceOperation 021189 (Print "!");
  GamePrint "!";
  TraceOperation 021192 New_line;
  GamePrint "\n";
  TraceOperation 021193 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  TraceOperation 021196 (Call (Floc 043634) [] Sp);
  PushFrame 021196;
  JumpCall: 043634, #actuals: 0
LocReturn 021196:
  PushStack call_result;
  TraceOperation 021201 (Jump 021539);
  Jump: 021539
LocOp 021204:
  TraceOperation 021204 (Store (Con 242) (Con 0));
  SetByte 008360 0;
  SetByte 008361 0;
  TraceOperation 021207 (Store (Con 243) (Con 0));
  SetByte 008362 0;
  SetByte 008363 0;
  TraceOperation 021210 (Jg (Var (Local 3)) (Con 1) (Branch F (Dloc 021217)));
  if (GreaterThan(GetLocal(3),1)) {
    TraceOperation 021214 (Store (Con 243) (Con 1));
    SetByte 008362 0;
    SetByte 008363 1;
    Jump: 021217
  } else {
    Jump: 021217
  }
LocOp 021217:
  TraceOperation 021217 (Store (Con 10) (Con 0));
  SetLocal 10 0;
  Jump: 021220
LocOp 021220:
  TraceOperation 021220 (Inc_chk (Con 4) (Var (Local 3)) (Branch F (Dloc 021299)));
  SetLocal 4 Add(GetLocal(4),1);
  if (GreaterThanEqual(GetLocal(4),GetLocal(3))) {
    TraceOperation 021225 (Jg (Var (Global 226)) (Con 0) (Branch F (Dloc 021289)));
    Let b1 = M[008360];
    Let b2 = M[008361];
    if (GreaterThan(MakeHiLo(b1,b2),0)) {
      TraceOperation 021230 (Print "The ");
      GamePrint "The ";
      TraceOperation 021233 (Je [Var (Global 226),Var (Local 3)] (Branch T (Dloc 021242)));
      Let b3 = M[008360];
      Let b4 = M[008361];
      if (Equal(MakeHiLo(b3,b4),GetLocal(3))) {
        Jump: 021242
      } else {
        TraceOperation 021237 (Print "other ");
        GamePrint "other ";
        Jump: 021242
      }
    } else {
      Jump: 021289
    }
  } else {
    Jump: 021299
  }
LocOp 021242:
  TraceOperation 021242 (Print "object");
  GamePrint "object";
  TraceOperation 021247 (Je [Var (Global 226),Con 1] (Branch T (Dloc 021254)));
  Let b1 = M[008360];
  Let b2 = M[008361];
  if (Equal(MakeHiLo(b1,b2),1)) {
    Jump: 021254
  } else {
    TraceOperation 021251 (Print "s");
    GamePrint "s";
    Jump: 021254
  }
LocOp 021254:
  TraceOperation 021254 (Print " that you mentioned ");
  GamePrint " that you mentioned ";
  TraceOperation 021265 (Je [Var (Global 226),Con 1] (Branch T (Dloc 021275)));
  Let b1 = M[008360];
  Let b2 = M[008361];
  if (Equal(MakeHiLo(b1,b2),1)) {
    Jump: 021275
  } else {
    TraceOperation 021269 (Print "are");
    GamePrint "are";
    TraceOperation 021272 (Jump 021278);
    Jump: 021278
  }
LocOp 021275:
  TraceOperation 021275 (Print "is");
  GamePrint "is";
  Jump: 021278
LocOp 021278:
  TraceOperation 021278 (Print "n't here.");
  GamePrint "n't here.";
  TraceOperation 021285 New_line;
  GamePrint "\n";
  TraceOperation 021286 (Jump 021539);
  Jump: 021539
LocOp 021289:
  TraceOperation 021289 (Jz (Var (Local 10)) (Branch F (Dloc 021539)));
  if (IsZero(GetLocal(10))) {
    TraceOperation 021293 (Print_paddr (Var (Global 51)));
    Let b1 = M[008010];
    Let b2 = M[008011];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
    TraceOperation 021295 New_line;
    GamePrint "\n";
    TraceOperation 021296 (Jump 021539);
    Jump: 021539
  } else {
    Jump: 021539
  }
LocOp 021299:
  TraceOperation 021299 (Jz (Var (Local 8)) (Branch T (Dloc 021309)));
  if (IsZero(GetLocal(8))) {
    Jump: 021309
  } else {
    TraceOperation 021302 (Loadw (Var (Global 167)) (Var (Local 4)) (Local 9));
    Let b1 = M[008242];
    Let b2 = M[008243];
    Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4)))];
    Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4))),1)];
    SetLocal 9 MakeHiLo(b3,b4);
    TraceOperation 021306 (Jump 021313);
    Jump: 021313
  }
LocOp 021309:
  TraceOperation 021309 (Loadw (Var (Global 166)) (Var (Local 4)) (Local 9));
  Let b1 = M[008240];
  Let b2 = M[008241];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(4))),1)];
  SetLocal 9 MakeHiLo(b3,b4);
  Jump: 021313
LocOp 021313:
  TraceOperation 021313 (Jz (Var (Local 8)) (Branch T (Dloc 021322)));
  if (IsZero(GetLocal(8))) {
    Jump: 021322
  } else {
    TraceOperation 021316 (Push (Var (Local 9)));
    PushStack GetLocal(9);
    TraceOperation 021319 (Jump 021325);
    Jump: 021325
  }
LocOp 021322:
  TraceOperation 021322 (Push (Var (Local 5)));
  PushStack GetLocal(5);
  Jump: 021325
LocOp 021325:
  TraceOperation 021325 (Store (Con 217) (Var Sp));
  PopStack popped1;
  SetByte 008310 HiByte(popped1);
  SetByte 008311 LoByte(popped1);
  TraceOperation 021328 (Jz (Var (Local 8)) (Branch T (Dloc 021337)));
  if (IsZero(GetLocal(8))) {
    Jump: 021337
  } else {
    TraceOperation 021331 (Push (Var (Local 5)));
    PushStack GetLocal(5);
    TraceOperation 021334 (Jump 021340);
    Jump: 021340
  }
LocOp 021337:
  TraceOperation 021337 (Push (Var (Local 9)));
  PushStack GetLocal(9);
  Jump: 021340
LocOp 021340:
  TraceOperation 021340 (Store (Con 218) (Var Sp));
  PopStack popped1;
  SetByte 008312 HiByte(popped1);
  SetByte 008313 LoByte(popped1);
  TraceOperation 021343 (Jg (Var (Local 3)) (Con 1) (Branch T (Dloc 021362)));
  if (GreaterThan(GetLocal(3),1)) {
    Jump: 021362
  } else {
    TraceOperation 021347 (Loadw (Var (Global 184)) (Con 6) Sp);
    Let b2 = M[008276];
    Let b3 = M[008277];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),12)];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),12),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 021351 (Loadw (Var Sp) (Con 0) Sp);
    PopStack popped6;
    Let b7 = M[Offset(Address(popped6),0)];
    Let b8 = M[Offset(Offset(Address(popped6),0),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 021355 (Je [Var Sp,Con 13798] (Branch F (Dloc 021520)));
    PopStack popped9;
    if (Equal(popped9,13798)) {
      Jump: 021362
    } else {
      Jump: 021520
    }
  }
LocOp 021362:
  TraceOperation 021362 (Je [Var (Local 9),Con 46] (Branch F (Dloc 021371)));
  if (Equal(GetLocal(9),46)) {
    TraceOperation 021366 (Inc (Con 242));
    Let b1 = M[008360];
    Let b2 = M[008361];
    SetByte 008360 HiByte(Add(MakeHiLo(b1,b2),1));
    SetByte 008361 LoByte(Add(MakeHiLo(b1,b2),1));
    TraceOperation 021368 (Jump 021220);
    Jump: 021220
  } else {
    Jump: 021371
  }
LocOp 021371:
  TraceOperation 021371 (Je [Var (Global 161),Con 1] (Branch F (Dloc 021410)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 021375 (Je [Var (Global 203),Con 108,Con 124] (Branch F (Dloc 021410)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),108),Equal(MakeHiLo(b3,b4),124))) {
      TraceOperation 021381 (Get_parent (Var (Local 9)) Sp);
      Let b5 = M[Offset(Offset(000751,Mul(GetLocal(9),9)),4)];
      PushStack Widen(b5);
      TraceOperation 021384 (Je [Var Sp,Var (Global 195),Var (Global 0),Var (Global 202)] (Branch T (Dloc 021399)));
      PopStack popped6;
      Let b7 = M[008298];
      Let b8 = M[008299];
      Let b9 = M[007908];
      Let b10 = M[007909];
      Let b11 = M[008312];
      Let b12 = M[008313];
      if (LogOr(LogOr(Equal(popped6,MakeHiLo(b7,b8)),Equal(popped6,MakeHiLo(b9,b10))),Equal(popped6,MakeHiLo(b11,b12)))) {
        Jump: 021399
      } else {
        TraceOperation 021391 (Get_parent (Var (Local 9)) Sp);
        Let b13 = M[Offset(Offset(000751,Mul(GetLocal(9),9)),4)];
        PushStack Widen(b13);
        TraceOperation 021394 (Test_attr (Var Sp) (Con 8) (Branch F (Dloc 021220)));
        PopStack popped14;
        Let b15 = M[Offset(Offset(000751,Mul(popped14,9)),1)];
        if (TestBit(b15,7)) {
          Jump: 021399
        } else {
          Jump: 021220
        }
      }
    } else {
      Jump: 021410
    }
  } else {
    Jump: 021410
  }
LocOp 021399:
  TraceOperation 021399 (Test_attr (Var (Local 9)) (Con 25) (Branch T (Dloc 021410)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(9),9)),3)];
  if (TestBit(b1,6)) {
    Jump: 021410
  } else {
    TraceOperation 021403 (Test_attr (Var (Local 9)) (Con 21) (Branch T (Dloc 021410)));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(9),9)),2)];
    if (TestBit(b2,2)) {
      Jump: 021410
    } else {
      TraceOperation 021407 (Jump 021220);
      Jump: 021220
    }
  }
LocOp 021410:
  TraceOperation 021410 (Je [Var (Global 203),Con 108,Con 124] (Branch F (Dloc 021426)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),108),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 021416 (Jz (Var (Global 202)) (Branch T (Dloc 021426)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 021426
    } else {
      TraceOperation 021419 (Jin (Var (Global 201)) (Var (Global 202)) (Branch T (Dloc 021426)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[008312];
      Let b8 = M[008313];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      if (Equal(MakeHiLo(b7,b8),Widen(b9))) {
        Jump: 021426
      } else {
        TraceOperation 021423 (Jump 021220);
        Jump: 021220
      }
    }
  } else {
    Jump: 021426
  }
LocOp 021426:
  TraceOperation 021426 (Je [Var (Global 161),Con 1] (Branch F (Dloc 021441)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 021430 (Je [Var (Global 203),Con 53] (Branch F (Dloc 021441)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),53)) {
      TraceOperation 021434 (Jin (Var (Local 9)) (Var (Global 195)) (Branch T (Dloc 021441)));
      Let b5 = M[008298];
      Let b6 = M[008299];
      Let b7 = M[Offset(Offset(000751,Mul(GetLocal(9),9)),4)];
      if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
        Jump: 021441
      } else {
        TraceOperation 021438 (Jump 021220);
        Jump: 021220
      }
    } else {
      Jump: 021441
    }
  } else {
    Jump: 021441
  }
LocOp 021441:
  TraceOperation 021441 (Je [Var (Global 161),Con 1] (Branch F (Dloc 021455)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 021445 (Jz (Var (Global 202)) (Branch T (Dloc 021455)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 021455
    } else {
      TraceOperation 021448 (Je [Var (Global 201),Var (Global 202)] (Branch F (Dloc 021455)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[008312];
      Let b8 = M[008313];
      if (Equal(MakeHiLo(b5,b6),MakeHiLo(b7,b8))) {
        TraceOperation 021452 (Jump 021220);
        Jump: 021220
      } else {
        Jump: 021455
      }
    }
  } else {
    Jump: 021455
  }
LocOp 021455:
  TraceOperation 021455 (Je [Var (Global 161),Con 1] (Branch F (Dloc 021476)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 021459 (Je [Var (Global 203),Con 46] (Branch F (Dloc 021476)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),46)) {
      TraceOperation 021463 (Call (Floc 043468) [Var (Global 201),Var (Global 202)] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame 021463;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 MakeHiLo(b7,b8);
      JumpCall: 043468, #actuals: 2
    } else {
      Jump: 021476
    }
  } else {
    Jump: 021476
  }
LocReturn 021463:
  PushStack call_result;
  TraceOperation 021470 (Jz (Var Sp) (Branch T (Dloc 021476)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 021476
  } else {
    TraceOperation 021473 (Jump 021220);
    Jump: 021220
  }
LocOp 021476:
  TraceOperation 021476 (Call (Floc 043298) [Var (Local 9)] Sp);
  PushFrame 021476;
  SetLocal 1 GetLocal(9);
  JumpCall: 043298, #actuals: 1
LocReturn 021476:
  PushStack call_result;
  TraceOperation 021482 (Jz (Var Sp) (Branch F (Dloc 021488)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 021485 (Jump 021220);
    Jump: 021220
  } else {
    Jump: 021488
  }
LocOp 021488:
  TraceOperation 021488 (Je [Var (Local 9),Con 47] (Branch F (Dloc 021497)));
  if (Equal(GetLocal(9),47)) {
    TraceOperation 021492 (Print_obj (Var (Global 191)));
    Let b1 = M[008290];
    Let b2 = M[008291];
    Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 021494 (Jump 021508);
      Jump: 021508
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 021494 (Jump 021508);
      Jump: 021508
    }
  } else {
    Jump: 021497
  }
LocOp 021497:
  TraceOperation 021497 (Call (Floc 050260) [Var (Local 9)] Sp);
  PushFrame 021497;
  SetLocal 1 GetLocal(9);
  JumpCall: 050260, #actuals: 1
LocReturn 021497:
  PushStack call_result;
  TraceOperation 021503 (Jz (Var Sp) (Branch T (Dloc 021508)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 021508
  } else {
    TraceOperation 021506 (Print_obj (Var (Local 9)));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(9),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000751,Mul(GetLocal(9),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      Jump: 021508
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      Jump: 021508
    }
  }
LocOp 021508:
  TraceOperation 021508 (Call (Floc 050260) [Var (Local 9)] Sp);
  PushFrame 021508;
  SetLocal 1 GetLocal(9);
  JumpCall: 050260, #actuals: 1
LocReturn 021508:
  PushStack call_result;
  TraceOperation 021514 (Jz (Var Sp) (Branch T (Dloc 021520)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 021520
  } else {
    TraceOperation 021517 (Print ": ");
    GamePrint ": ";
    Jump: 021520
  }
LocOp 021520:
  TraceOperation 021520 (Store (Con 10) (Con 1));
  SetLocal 10 1;
  TraceOperation 021523 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Var (Global 202)] (Local 7));
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  Let b5 = M[008312];
  Let b6 = M[008313];
  PushFrame 021523;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 MakeHiLo(b5,b6);
  JumpCall: 022042, #actuals: 3
LocReturn 021523:
  SetLocal 7 call_result;
  TraceOperation 021531 (Je [Var (Local 7),Con 2] (Branch F (Dloc 021220)));
  if (Equal(GetLocal(7),2)) {
    TraceOperation 021536 (Jump 021539);
    Jump: 021539
  } else {
    Jump: 021220
  }
LocOp 021539:
  TraceOperation 021539 (Je [Var (Local 7),Con 2] (Branch T (Dloc 021579)));
  if (Equal(GetLocal(7),2)) {
    Jump: 021579
  } else {
    TraceOperation 021543 (Je [Var (Global 203),Con 2,Con 1,Con 15] (Branch T (Dloc 021579)));
    Let b1 = M[008314];
    Let b2 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),2),Equal(MakeHiLo(b1,b2),1)),Equal(MakeHiLo(b1,b2),15))) {
      Jump: 021579
    } else {
      TraceOperation 021550 (Je [Var (Global 203),Con 13,Con 9,Con 0] (Branch T (Dloc 021579)));
      Let b3 = M[008314];
      Let b4 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),13),Equal(MakeHiLo(b3,b4),9)),Equal(MakeHiLo(b3,b4),0))) {
        Jump: 021579
      } else {
        TraceOperation 021557 (Je [Var (Global 203),Con 12,Con 11,Con 8] (Branch F (Dloc 021567)));
        Let b5 = M[008314];
        Let b6 = M[008315];
        if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),12),Equal(MakeHiLo(b5,b6),11)),Equal(MakeHiLo(b5,b6),8))) {
          TraceOperation 021564 (Jump 021579);
          Jump: 021579
        } else {
          Jump: 021567
        }
      }
    }
  }
LocOp 021567:
  TraceOperation 021567 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 021570 (Get_prop (Var Sp) (Con 29) Sp);
  PopStack popped4;
  Let b5 = M[Offset(Offset(000751,Mul(popped4,9)),7)];
  Let b6 = M[Offset(Offset(Offset(000751,Mul(popped4,9)),7),1)];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Error: getPropsA
LocReturn 021574:
  SetLocal 7 call_result;
  Jump: 021579
LocOp 021579:
  TraceOperation 021579 (Je [Var (Global 203),Con 8,Con 9,Con 16] (Branch T (Dloc 021617)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),9)),Equal(MakeHiLo(b1,b2),16))) {
    Jump: 021617
  } else {
    TraceOperation 021586 (Je [Var (Global 203),Con 0,Con 12,Con 11] (Branch T (Dloc 021617)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),0),Equal(MakeHiLo(b3,b4),12)),Equal(MakeHiLo(b3,b4),11))) {
      Jump: 021617
    } else {
      TraceOperation 021593 (Je [Var (Global 203),Con 2,Con 1] (Branch F (Dloc 021602)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (LogOr(Equal(MakeHiLo(b5,b6),2),Equal(MakeHiLo(b5,b6),1))) {
        TraceOperation 021599 (Jump 021617);
        Jump: 021617
      } else {
        Jump: 021602
      }
    }
  }
LocOp 021602:
  TraceOperation 021602 (Jz (Var (Global 189)) (Branch T (Dloc 021608)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021608
  } else {
    TraceOperation 021605 (Jump 021617);
    Jump: 021617
  }
LocOp 021608:
  TraceOperation 021608 (Store (Con 248) (Var (Global 203)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  SetByte 008372 b1;
  SetByte 008373 b2;
  TraceOperation 021611 (Store (Con 247) (Var (Global 201)));
  Let b3 = M[008310];
  Let b4 = M[008311];
  SetByte 008370 b3;
  SetByte 008371 b4;
  TraceOperation 021614 (Store (Con 246) (Var (Global 202)));
  Let b5 = M[008312];
  Let b6 = M[008313];
  SetByte 008368 b5;
  SetByte 008369 b6;
  Jump: 021617
LocOp 021617:
  TraceOperation 021617 (Jz (Var (Global 176)) (Branch T (Dloc 021626)));
  Let b1 = M[008260];
  Let b2 = M[008261];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021626
  } else {
    TraceOperation 021620 (Store (Con 245) (Con 1));
    SetByte 008366 0;
    SetByte 008367 1;
    TraceOperation 021623 (Jump 021629);
    Jump: 021629
  }
LocOp 021626:
  TraceOperation 021626 (Store (Con 245) (Con 0));
  SetByte 008366 0;
  SetByte 008367 0;
  Jump: 021629
LocOp 021629:
  TraceOperation 021629 (Jz (Var (Global 204)) (Branch T (Dloc 021638)));
  Let b1 = M[008316];
  Let b2 = M[008317];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021638
  } else {
    TraceOperation 021632 (Store (Con 244) (Con 1));
    SetByte 008364 0;
    SetByte 008365 1;
    TraceOperation 021635 (Jump 021641);
    Jump: 021641
  }
LocOp 021638:
  TraceOperation 021638 (Store (Con 244) (Con 0));
  SetByte 008364 0;
  SetByte 008365 0;
  Jump: 021641
LocOp 021641:
  TraceOperation 021641 (Je [Var (Local 7),Con 2] (Branch F (Dloc 021654)));
  if (Equal(GetLocal(7),2)) {
    TraceOperation 021645 (Store (Con 208) (Con 0));
    SetByte 008292 0;
    SetByte 008293 0;
    TraceOperation 021648 (Jump 021654);
    Jump: 021654
  } else {
    Jump: 021654
  }
LocOp 021651:
  TraceOperation 021651 (Store (Con 208) (Con 0));
  SetByte 008292 0;
  SetByte 008293 0;
  Jump: 021654
LocOp 021654:
  TraceOperation 021654 (Jz (Var (Global 234)) (Branch T (Dloc 021792)));
  Let b1 = M[008376];
  Let b2 = M[008377];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021792
  } else {
    TraceOperation 021658 (Je [Var (Global 203),Con 2,Con 1,Con 15] (Branch T (Dloc 021780)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),2),Equal(MakeHiLo(b3,b4),1)),Equal(MakeHiLo(b3,b4),15))) {
      Jump: 021780
    } else {
      TraceOperation 021666 (Je [Var (Global 203),Con 6,Con 13,Con 0] (Branch T (Dloc 021780)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),6),Equal(MakeHiLo(b5,b6),13)),Equal(MakeHiLo(b5,b6),0))) {
        Jump: 021780
      } else {
        TraceOperation 021674 (Je [Var (Global 203),Con 8,Con 9,Con 10] (Branch T (Dloc 021780)));
        Let b7 = M[008314];
        Let b8 = M[008315];
        if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),8),Equal(MakeHiLo(b7,b8),9)),Equal(MakeHiLo(b7,b8),10))) {
          Jump: 021780
        } else {
          TraceOperation 021682 (Je [Var (Global 203),Con 70,Con 12,Con 11] (Branch T (Dloc 021780)));
          Let b9 = M[008314];
          Let b10 = M[008315];
          if (LogOr(LogOr(Equal(MakeHiLo(b9,b10),70),Equal(MakeHiLo(b9,b10),12)),Equal(MakeHiLo(b9,b10),11))) {
            Jump: 021780
          } else {
            TraceOperation 021690 (Je [Var (Global 203),Con 7,Con 76] (Branch F (Dloc 021699)));
            Let b11 = M[008314];
            Let b12 = M[008315];
            if (LogOr(Equal(MakeHiLo(b11,b12),7),Equal(MakeHiLo(b11,b12),76))) {
              TraceOperation 021696 (Jump 021780);
              Jump: 021780
            } else {
              Jump: 021699
            }
          }
        }
      }
    }
  }
LocOp 021699:
  TraceOperation 021699 (Je [Var (Global 203),Con 16] (Branch F (Dloc 021751)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 021703 (Je [Var (Global 232),Con 64,Con 69,Con 105] (Branch T (Dloc 021780)));
    Let b3 = M[008372];
    Let b4 = M[008373];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),64),Equal(MakeHiLo(b3,b4),69)),Equal(MakeHiLo(b3,b4),105))) {
      Jump: 021780
    } else {
      TraceOperation 021711 (Je [Var (Global 232),Con 174,Con 177,Con 166] (Branch T (Dloc 021780)));
      Let b5 = M[008372];
      Let b6 = M[008373];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),174),Equal(MakeHiLo(b5,b6),177)),Equal(MakeHiLo(b5,b6),166))) {
        Jump: 021780
      } else {
        TraceOperation 021719 (Je [Var (Global 232),Con 178,Con 21,Con 175] (Branch T (Dloc 021780)));
        Let b7 = M[008372];
        Let b8 = M[008373];
        if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),178),Equal(MakeHiLo(b7,b8),21)),Equal(MakeHiLo(b7,b8),175))) {
          Jump: 021780
        } else {
          TraceOperation 021727 (Je [Var (Global 232),Con 22,Con 23,Con 5] (Branch T (Dloc 021780)));
          Let b9 = M[008372];
          Let b10 = M[008373];
          if (LogOr(LogOr(Equal(MakeHiLo(b9,b10),22),Equal(MakeHiLo(b9,b10),23)),Equal(MakeHiLo(b9,b10),5))) {
            Jump: 021780
          } else {
            TraceOperation 021734 (Je [Var (Global 232),Con 101,Con 31,Con 10] (Branch T (Dloc 021780)));
            Let b11 = M[008372];
            Let b12 = M[008373];
            if (LogOr(LogOr(Equal(MakeHiLo(b11,b12),101),Equal(MakeHiLo(b11,b12),31)),Equal(MakeHiLo(b11,b12),10))) {
              Jump: 021780
            } else {
              TraceOperation 021741 (Je [Var (Global 232),Con 13,Con 70,Con 76] (Branch F (Dloc 021751)));
              Let b13 = M[008372];
              Let b14 = M[008373];
              if (LogOr(LogOr(Equal(MakeHiLo(b13,b14),13),Equal(MakeHiLo(b13,b14),70)),Equal(MakeHiLo(b13,b14),76))) {
                TraceOperation 021748 (Jump 021780);
                Jump: 021780
              } else {
                Jump: 021751
              }
            }
          }
        }
      }
    }
  } else {
    Jump: 021751
  }
LocOp 021751:
  TraceOperation 021751 (Je [Var (Global 203),Con 165] (Branch F (Dloc 021761)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),165)) {
    TraceOperation 021755 (Jz (Var (Global 176)) (Branch T (Dloc 021761)));
    Let b3 = M[008260];
    Let b4 = M[008261];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 021761
    } else {
      TraceOperation 021758 (Jump 021780);
      Jump: 021780
    }
  } else {
    Jump: 021761
  }
LocOp 021761:
  TraceOperation 021761 (Je [Var (Global 203),Con 16] (Branch F (Dloc 021775)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 021765 (Je [Var (Global 232),Con 165] (Branch F (Dloc 021775)));
    Let b3 = M[008372];
    Let b4 = M[008373];
    if (Equal(MakeHiLo(b3,b4),165)) {
      TraceOperation 021769 (Jz (Var (Global 229)) (Branch T (Dloc 021775)));
      Let b5 = M[008366];
      Let b6 = M[008367];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 021775
      } else {
        TraceOperation 021772 (Jump 021780);
        Jump: 021780
      }
    } else {
      Jump: 021775
    }
  } else {
    Jump: 021775
  }
LocOp 021775:
  TraceOperation 021775 (Call (Floc 022394) [] (Local 7));
  PushFrame 021775;
  JumpCall: 022394, #actuals: 0
LocReturn 021775:
  SetLocal 7 call_result;
  Jump: 021780
LocOp 021780:
  TraceOperation 021780 (Store (Con 219) (Con 0));
  SetByte 008314 0;
  SetByte 008315 0;
  TraceOperation 021783 (Store (Con 217) (Con 0));
  SetByte 008310 0;
  SetByte 008311 0;
  TraceOperation 021786 (Store (Con 218) (Con 0));
  SetByte 008312 0;
  SetByte 008313 0;
  TraceOperation 021789 (Jump 020911);
  Jump: 020911
LocOp 021792:
  TraceOperation 021792 (Loadb (Var (Global 194)) (Con 1) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),1)];
  PushStack Widen(b3);
  TraceOperation 021796 (Jg (Var Sp) (Con 3) (Branch F (Dloc 020911)));
  PopStack popped4;
  if (GreaterThan(popped4,3)) {
    TraceOperation 021801 (Jz (Var (Global 100)) (Branch F (Dloc 020911)));
    Let b5 = M[008108];
    Let b6 = M[008109];
    if (IsZero(MakeHiLo(b5,b6))) {
      TraceOperation 021805 (Jz (Var (Global 122)) (Branch T (Dloc 020911)));
      Let b7 = M[008152];
      Let b8 = M[008153];
      if (IsZero(MakeHiLo(b7,b8))) {
        Jump: 020911
      } else {
        TraceOperation 021809 (Call (Floc 021838) [Var (Global 233)] Sp);
        Let b9 = M[008374];
        Let b10 = M[008375];
        PushFrame 021809;
        SetLocal 1 MakeHiLo(b9,b10);
        JumpCall: 021838, #actuals: 1
      }
    } else {
      Jump: 020911
    }
  } else {
    Jump: 020911
  }
LocReturn 021809:
  PushStack call_result;
  TraceOperation 021815 (Jz (Var Sp) (Branch T (Dloc 020911)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 020911
  } else {
    TraceOperation 021819 (Store (Con 116) (Con 1));
    SetByte 008108 0;
    SetByte 008109 1;
    TraceOperation 021822 (Call (Floc 022320) [Con -22495,Con 3] Sp);
    PushFrame 021822;
    SetLocal 1 -22495;
    SetLocal 2 3;
    JumpCall: 022320, #actuals: 2
  }
LocReturn 021822:
  PushStack call_result;
  TraceOperation 021830 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 021835 (Jump 020911);
  Jump: 020911
--[24]--------------------------------------------------
LocRoutine 021838:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 021849
LocOp 021849:
  TraceOperation 021849 (Mul (Con 4) (Var (Global 178)) (Local 4));
  Let b1 = M[008264];
  Let b2 = M[008265];
  SetLocal 4 Mul(4,MakeHiLo(b1,b2));
  TraceOperation 021853 (Loadb (Var (Global 194)) (Var (Local 4)) (Local 5));
  Let b3 = M[008296];
  Let b4 = M[008297];
  Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),GetLocal(4))];
  SetLocal 5 Widen(b5);
  TraceOperation 021857 (Add (Var (Local 4)) (Con 1) Sp);
  PushStack Add(GetLocal(4),1);
  TraceOperation 021861 (Loadb (Var (Global 194)) (Var Sp) Sp);
  Let b6 = M[008296];
  Let b7 = M[008297];
  PopStack popped8;
  Let b9 = M[Offset(Address(MakeHiLo(b6,b7)),popped8)];
  PushStack Widen(b9);
  TraceOperation 021865 (Add (Var (Local 5)) (Var Sp) (Local 3));
  PopStack popped10;
  SetLocal 3 Add(GetLocal(5),popped10);
  TraceOperation 021869 (Jz (Var (Local 3)) (Branch T Dfalse));
  if (IsZero(GetLocal(3))) {
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 0
  } else {
    TraceOperation 021872 (Dec (Con 3));
    SetLocal 3 Sub(GetLocal(3),1);
    Jump: 021874
  }
LocOp 021874:
  TraceOperation 021874 (Je [Var (Local 2),Var (Local 3)] (Branch F (Dloc 021884)));
  if (Equal(GetLocal(2),GetLocal(3))) {
    TraceOperation 021878 (Storeb (Var (Local 1)) (Var (Local 2)) (Con 0));
    SetByte Offset(Address(GetLocal(1)),GetLocal(2)) 0;
    TraceOperation 021883 Rtrue;
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    Jump: 021884
  }
LocOp 021884:
  TraceOperation 021884 (Add (Var (Local 2)) (Con 1) Sp);
  PushStack Add(GetLocal(2),1);
  TraceOperation 021888 (Loadb (Var (Global 193)) (Var Sp) Sp);
  Let b1 = M[008294];
  Let b2 = M[008295];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),popped3)];
  PushStack Widen(b4);
  TraceOperation 021892 (Storeb (Var (Local 1)) (Var (Local 2)) (Var Sp));
  PopStack popped5;
  SetByte Offset(Address(GetLocal(1)),GetLocal(2)) LoByte(popped5);
  TraceOperation 021897 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 021899 (Jump 021874);
  Jump: 021874
--[25]--------------------------------------------------
LocRoutine 021902:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 021907
LocOp 021907:
  TraceOperation 021907 (Loadb (Var (Local 1)) (Con 0) (Local 2));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  SetLocal 2 Widen(b1);
  TraceOperation 021911 (Jz (Var (Local 2)) (Branch T Dtrue));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    TraceOperation 021914 (Print_char (Var (Local 2)));
    GamePrint SingleChar(GetLocal(2));
    TraceOperation 021917 (Add (Con 1) (Var (Local 1)) (Local 1));
    SetLocal 1 Add(1,GetLocal(1));
    TraceOperation 021921 (Jump 021907);
    Jump: 021907
  }
--[26]--------------------------------------------------
LocRoutine 021924:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 021929
LocOp 021929:
  TraceOperation 021929 (Call (Floc 025378) [Var (Global 198),Con 0] Sp);
  Let b1 = M[008304];
  Let b2 = M[008305];
  PushFrame 021929;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 0;
  JumpCall: 025378, #actuals: 2
LocReturn 021929:
  PushStack call_result;
  TraceOperation 021936 (Print "Be specific: what object do");
  GamePrint "Be specific: what object do";
  TraceOperation 021955 (Jz (Var (Global 176)) (Branch T (Dloc 021963)));
  Let b1 = M[008260];
  Let b2 = M[008261];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021963
  } else {
    TraceOperation 021958 (Print "n't");
    GamePrint "n't";
    Jump: 021963
  }
LocOp 021963:
  TraceOperation 021963 (Print " you want to ");
  GamePrint " you want to ";
  TraceOperation 021972 (Loadw (Var (Global 183)) (Con 1) (Local 1));
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 021976 (Jz (Var (Local 1)) (Branch F (Dloc 021987)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 021979 (Print "tell");
    GamePrint "tell";
    TraceOperation 021984 (Jump 022023);
    Jump: 022023
  } else {
    Jump: 021987
  }
LocOp 021987:
  TraceOperation 021987 (Loadb (Var (Global 182)) (Con 2) Sp);
  Let b1 = M[008272];
  Let b2 = M[008273];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  PushStack Widen(b3);
  TraceOperation 021991 (Jz (Var Sp) (Branch F (Dloc 022003)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 021994 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b5 = M[Offset(Address(GetLocal(1)),0)];
    Let b6 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 021998 (Print_addr (Var Sp));
    PopStack popped7;
    GamePrint GetText(Address(popped7));
    TraceOperation 022000 (Jump 022023);
    Jump: 022023
  } else {
    Jump: 022003
  }
LocOp 022003:
  TraceOperation 022003 (Loadb (Var (Local 1)) (Con 2) (Local 2));
  Let b1 = M[Offset(Address(GetLocal(1)),2)];
  SetLocal 2 Widen(b1);
  TraceOperation 022007 (Loadb (Var (Local 1)) (Con 3) Sp);
  Let b2 = M[Offset(Address(GetLocal(1)),3)];
  PushStack Widen(b2);
  TraceOperation 022011 (Call (Floc 024740) [Var (Local 2),Var Sp] Sp);
  PopStack popped3;
  PushFrame 022011;
  SetLocal 1 GetLocal(2);
  SetLocal 2 popped3;
  JumpCall: 024740, #actuals: 2
LocReturn 022011:
  PushStack call_result;
  TraceOperation 022018 (Storeb (Var (Global 182)) (Con 2) (Con 0));
  Let b1 = M[008272];
  Let b2 = M[008273];
  SetByte Offset(Address(MakeHiLo(b1,b2)),2) 0;
  Jump: 022023
LocOp 022023:
  TraceOperation 022023 (Store (Con 205) (Con 1));
  SetByte 008286 0;
  SetByte 008287 1;
  TraceOperation 022026 (Store (Con 250) (Con 0));
  SetByte 008376 0;
  SetByte 008377 0;
  TraceOperation 022029 (Loadb (Var (Global 198)) (Con 1) Sp);
  Let b1 = M[008304];
  Let b2 = M[008305];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),1)];
  PushStack Widen(b3);
  TraceOperation 022033 (Call (Floc 025828) [Var Sp] Sp);
  PopStack popped4;
  PushFrame 022033;
  SetLocal 1 popped4;
  JumpCall: 025828, #actuals: 1
LocReturn 022033:
  PushStack call_result;
  TraceOperation 022039 (Print_ret "?");
  GamePrint "?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[27]--------------------------------------------------
LocRoutine 022042:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 022057
LocOp 022057:
  TraceOperation 022057 (Store (Con 5) (Var (Global 203)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 022060 (Store (Con 6) (Var (Global 201)));
  Let b3 = M[008310];
  Let b4 = M[008311];
  SetLocal 6 MakeHiLo(b3,b4);
  TraceOperation 022063 (Store (Con 7) (Var (Global 202)));
  Let b5 = M[008312];
  Let b6 = M[008313];
  SetLocal 7 MakeHiLo(b5,b6);
  TraceOperation 022066 (Store (Con 219) (Var (Local 1)));
  SetByte 008314 HiByte(GetLocal(1));
  SetByte 008315 LoByte(GetLocal(1));
  TraceOperation 022069 (Je [Con 47,Var (Local 3),Var (Local 2)] (Branch F (Dloc 022090)));
  if (LogOr(Equal(47,GetLocal(3)),Equal(47,GetLocal(2)))) {
    TraceOperation 022075 (Jz (Var (Local 3)) (Branch F (Dloc 022085)));
    if (IsZero(GetLocal(3))) {
      TraceOperation 022078 (Call (Floc 021924) [] Sp);
      PushFrame 022078;
      JumpCall: 021924, #actuals: 0
    } else {
      Jump: 022085
    }
  } else {
    Jump: 022090
  }
LocReturn 022078:
  PushStack call_result;
  TraceOperation 022083 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 022085:
  TraceOperation 022085 (Print_paddr (Var (Global 51)));
  Let b1 = M[008010];
  Let b2 = M[008011];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 022087 New_line;
  GamePrint "\n";
  TraceOperation 022088 (Ret (Con 2));
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 2
LocOp 022090:
  TraceOperation 022090 (Store (Con 217) (Var (Local 2)));
  SetByte 008310 HiByte(GetLocal(2));
  SetByte 008311 LoByte(GetLocal(2));
  TraceOperation 022093 (Jz (Var (Global 201)) (Branch T (Dloc 022107)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022107
  } else {
    TraceOperation 022096 (Je [Var (Global 203),Con 169] (Branch T (Dloc 022107)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),169)) {
      Jump: 022107
    } else {
      TraceOperation 022100 (Je [Var (Global 201),Con 46] (Branch T (Dloc 022107)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),46)) {
        Jump: 022107
      } else {
        TraceOperation 022104 (Store (Con 207) (Var (Global 201)));
        Let b7 = M[008310];
        Let b8 = M[008311];
        SetByte 008290 b7;
        SetByte 008291 b8;
        Jump: 022107
      }
    }
  }
LocOp 022107:
  TraceOperation 022107 (Store (Con 218) (Var (Local 3)));
  SetByte 008312 HiByte(GetLocal(3));
  SetByte 008313 LoByte(GetLocal(3));
  TraceOperation 022110 (Je [Var (Local 1),Con 169] (Branch T (Dloc 022138)));
  if (Equal(GetLocal(1),169)) {
    Jump: 022138
  } else {
    TraceOperation 022114 (Je [Con 46,Var (Global 201),Var (Global 202)] (Branch F (Dloc 022138)));
    Let b1 = M[008310];
    Let b2 = M[008311];
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(46,MakeHiLo(b1,b2)),Equal(46,MakeHiLo(b3,b4)))) {
      TraceOperation 022120 (Call (Floc 022288) [Con -12396,Con 21892] (Local 4));
      PushFrame 022120;
      SetLocal 1 -12396;
      SetLocal 2 21892;
      JumpCall: 022288, #actuals: 2
    } else {
      Jump: 022138
    }
  }
LocReturn 022120:
  SetLocal 4 call_result;
  TraceOperation 022129 (Jz (Var (Local 4)) (Branch T (Dloc 022138)));
  if (IsZero(GetLocal(4))) {
    Jump: 022138
  } else {
    TraceOperation 022132 (Store (Con 250) (Con 0));
    SetByte 008376 0;
    SetByte 008377 0;
    TraceOperation 022135 (Jump 022276);
    Jump: 022276
  }
LocOp 022138:
  TraceOperation 022138 (Store (Con 2) (Var (Global 201)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 022141 (Store (Con 3) (Var (Global 202)));
  Let b3 = M[008312];
  Let b4 = M[008313];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 022144 (Get_prop (Var (Global 195)) (Con 29) Sp);
  Let b5 = M[008298];
  Let b6 = M[008299];
  Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7)];
  Let b8 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7),1)];
  Let b9 = M[Address(MakeHiLo(b7,b8))];
  Error: getPropsA
LocReturn 022148:
  SetLocal 4 call_result;
  TraceOperation 022156 (Jz (Var (Local 4)) (Branch T (Dloc 022162)));
  if (IsZero(GetLocal(4))) {
    Jump: 022162
  } else {
    TraceOperation 022159 (Jump 022276);
    Jump: 022276
  }
LocOp 022162:
  TraceOperation 022162 (Jz (Var (Global 176)) (Branch T (Dloc 022176)));
  Let b1 = M[008260];
  Let b2 = M[008261];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022176
  } else {
    TraceOperation 022165 (Call (Floc 046754) [] (Local 4));
    PushFrame 022165;
    JumpCall: 046754, #actuals: 0
  }
LocReturn 022165:
  SetLocal 4 call_result;
  TraceOperation 022170 (Jz (Var (Local 4)) (Branch T (Dloc 022176)));
  if (IsZero(GetLocal(4))) {
    Jump: 022176
  } else {
    TraceOperation 022173 (Jump 022276);
    Jump: 022276
  }
LocOp 022176:
  TraceOperation 022176 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 022179 (Get_prop (Var Sp) (Con 29) Sp);
  PopStack popped4;
  Let b5 = M[Offset(Offset(000751,Mul(popped4,9)),7)];
  Let b6 = M[Offset(Offset(Offset(000751,Mul(popped4,9)),7),1)];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Error: getPropsA
LocReturn 022183:
  SetLocal 4 call_result;
  TraceOperation 022192 (Jz (Var (Local 4)) (Branch T (Dloc 022198)));
  if (IsZero(GetLocal(4))) {
    Jump: 022198
  } else {
    TraceOperation 022195 (Jump 022276);
    Jump: 022276
  }
LocOp 022198:
  TraceOperation 022198 (Loadw (Var (Global 238)) (Var (Local 1)) Sp);
  Let b1 = M[008384];
  Let b2 = M[008385];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 022202 (Call (Floc 022288) [Con -12387,Var Sp] (Local 4));
  PopStack popped5;
  PushFrame 022202;
  SetLocal 1 -12387;
  SetLocal 2 popped5;
  JumpCall: 022288, #actuals: 2
LocReturn 022202:
  SetLocal 4 call_result;
  TraceOperation 022210 (Jz (Var (Local 4)) (Branch T (Dloc 022216)));
  if (IsZero(GetLocal(4))) {
    Jump: 022216
  } else {
    TraceOperation 022213 (Jump 022276);
    Jump: 022276
  }
LocOp 022216:
  TraceOperation 022216 (Jz (Var (Local 3)) (Branch T (Dloc 022237)));
  if (IsZero(GetLocal(3))) {
    Jump: 022237
  } else {
    TraceOperation 022219 (Get_prop (Var (Local 3)) (Con 29) Sp);
    Let b1 = M[Offset(Offset(000751,Mul(GetLocal(3),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(3),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Error: getPropsA
  }
LocReturn 022223:
  SetLocal 4 call_result;
  TraceOperation 022231 (Jz (Var (Local 4)) (Branch T (Dloc 022237)));
  if (IsZero(GetLocal(4))) {
    Jump: 022237
  } else {
    TraceOperation 022234 (Jump 022276);
    Jump: 022276
  }
LocOp 022237:
  TraceOperation 022237 (Jz (Var (Local 2)) (Branch T (Dloc 022262)));
  if (IsZero(GetLocal(2))) {
    Jump: 022262
  } else {
    TraceOperation 022240 (Je [Var (Local 1),Con 169] (Branch T (Dloc 022262)));
    if (Equal(GetLocal(1),169)) {
      Jump: 022262
    } else {
      TraceOperation 022244 (Get_prop (Var (Local 2)) (Con 29) Sp);
      Let b1 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),7)];
      Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(2),9)),7),1)];
      Let b3 = M[Address(MakeHiLo(b1,b2))];
      Error: getPropsA
    }
  }
LocReturn 022248:
  SetLocal 4 call_result;
  TraceOperation 022256 (Jz (Var (Local 4)) (Branch T (Dloc 022262)));
  if (IsZero(GetLocal(4))) {
    Jump: 022262
  } else {
    TraceOperation 022259 (Jump 022276);
    Jump: 022276
  }
LocOp 022262:
  TraceOperation 022262 (Loadw (Var (Global 237)) (Var (Local 1)) Sp);
  Let b1 = M[008382];
  Let b2 = M[008383];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 022266 (Call (Floc 022288) [Con 0,Var Sp] (Local 4));
  PopStack popped5;
  PushFrame 022266;
  SetLocal 1 0;
  SetLocal 2 popped5;
  JumpCall: 022288, #actuals: 2
LocReturn 022266:
  SetLocal 4 call_result;
  TraceOperation 022273 (Jz (Var (Local 4)) (Branch T (Dloc 022276)));
  if (IsZero(GetLocal(4))) {
    Jump: 022276
  } else {
    Jump: 022276
  }
LocOp 022276:
  TraceOperation 022276 (Store (Con 219) (Var (Local 5)));
  SetByte 008314 HiByte(GetLocal(5));
  SetByte 008315 LoByte(GetLocal(5));
  TraceOperation 022279 (Store (Con 217) (Var (Local 6)));
  SetByte 008310 HiByte(GetLocal(6));
  SetByte 008311 LoByte(GetLocal(6));
  TraceOperation 022282 (Store (Con 218) (Var (Local 7)));
  SetByte 008312 HiByte(GetLocal(7));
  SetByte 008313 LoByte(GetLocal(7));
  TraceOperation 022285 (Ret (Var (Local 4)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(4)
--[28]--------------------------------------------------
LocRoutine 022288:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 022297
LocOp 022297:
  TraceOperation 022297 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 022300 (Jz (Var (Local 3)) (Branch T (Dloc 022311)));
    if (IsZero(GetLocal(3))) {
      Jump: 022311
    } else {
      TraceOperation 022303 (Call (Fvar (Local 2)) [Var (Local 3)] Sp);
      if (IsZeroAddress(PackedAddress Z3(GetLocal(2)))) {
        PushStack 0;
        TraceOperation 022308 (Jump 022315);
        Jump: 022315
      } else {
        PushFrame 022303;
        SetLocal 1 GetLocal(3);
        JumpCall: PackedAddress Z3(GetLocal(2)), #actuals: 1
      }
    }
  }
LocReturn 022303:
  PushStack call_result;
  TraceOperation 022308 (Jump 022315);
  Jump: 022315
LocOp 022311:
  TraceOperation 022311 (Call (Fvar (Local 2)) [] Sp);
  if (IsZeroAddress(PackedAddress Z3(GetLocal(2)))) {
    PushStack 0;
    Jump: 022315
  } else {
    PushFrame 022311;
    JumpCall: PackedAddress Z3(GetLocal(2)), #actuals: 0
  }
LocReturn 022311:
  PushStack call_result;
  Jump: 022315
LocOp 022315:
  TraceOperation 022315 (Store (Con 4) (Var Sp));
  PopStack popped1;
  SetLocal 4 popped1;
  TraceOperation 022318 (Ret (Var (Local 4)));
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: GetLocal(4)
--[29]--------------------------------------------------
LocRoutine 022320:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 022327
LocOp 022327:
  TraceOperation 022327 (Call (Floc 022340) [Var (Local 1)] (Local 3));
  PushFrame 022327;
  SetLocal 1 GetLocal(1);
  JumpCall: 022340, #actuals: 1
LocReturn 022327:
  SetLocal 3 call_result;
  TraceOperation 022333 (Storew (Var (Local 3)) (Con 1) (Var (Local 2)));
  SetByte Offset(Address(GetLocal(3)),2) HiByte(GetLocal(2));
  SetByte Offset(Offset(Address(GetLocal(3)),2),1) LoByte(GetLocal(2));
  TraceOperation 022338 (Ret (Var (Local 3)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(3)
--[30]--------------------------------------------------
LocRoutine 022340:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 022349
LocOp 022349:
  TraceOperation 022349 (Add (Var (Global 224)) (Con 210) (Local 2));
  Let b1 = M[008356];
  Let b2 = M[008357];
  SetLocal 2 Add(MakeHiLo(b1,b2),210);
  TraceOperation 022353 (Add (Var (Global 224)) (Var (Global 223)) (Local 3));
  Let b3 = M[008356];
  Let b4 = M[008357];
  Let b5 = M[008354];
  Let b6 = M[008355];
  SetLocal 3 Add(MakeHiLo(b3,b4),MakeHiLo(b5,b6));
  Jump: 022357
LocOp 022357:
  TraceOperation 022357 (Je [Var (Local 3),Var (Local 2)] (Branch F (Dloc 022376)));
  if (Equal(GetLocal(3),GetLocal(2))) {
    TraceOperation 022361 (Sub (Var (Global 223)) (Con 6) (Global 223));
    Let b1 = M[008354];
    Let b2 = M[008355];
    SetByte 008354 HiByte(Sub(MakeHiLo(b1,b2),6));
    SetByte 008355 LoByte(Sub(MakeHiLo(b1,b2),6));
    TraceOperation 022365 (Add (Var (Global 224)) (Var (Global 223)) (Local 4));
    Let b3 = M[008356];
    Let b4 = M[008357];
    Let b5 = M[008354];
    Let b6 = M[008355];
    SetLocal 4 Add(MakeHiLo(b3,b4),MakeHiLo(b5,b6));
    TraceOperation 022369 (Storew (Var (Local 4)) (Con 2) (Var (Local 1)));
    SetByte Offset(Address(GetLocal(4)),4) HiByte(GetLocal(1));
    SetByte Offset(Offset(Address(GetLocal(4)),4),1) LoByte(GetLocal(1));
    TraceOperation 022374 (Ret (Var (Local 4)));
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: GetLocal(4)
  } else {
    Jump: 022376
  }
LocOp 022376:
  TraceOperation 022376 (Loadw (Var (Local 3)) (Con 2) Sp);
  Let b1 = M[Offset(Address(GetLocal(3)),4)];
  Let b2 = M[Offset(Offset(Address(GetLocal(3)),4),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 022380 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 022386)));
  PopStack popped3;
  if (Equal(popped3,GetLocal(1))) {
    TraceOperation 022384 (Ret (Var (Local 3)));
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: GetLocal(3)
  } else {
    Jump: 022386
  }
LocOp 022386:
  TraceOperation 022386 (Add (Var (Local 3)) (Con 6) (Local 3));
  SetLocal 3 Add(GetLocal(3),6);
  TraceOperation 022390 (Jump 022357);
  Jump: 022357
--[31]--------------------------------------------------
LocRoutine 022394:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 022403
LocOp 022403:
  TraceOperation 022403 (Jz (Var (Global 225)) (Branch T (Dloc 022410)));
  Let b1 = M[008358];
  Let b2 = M[008359];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022410
  } else {
    TraceOperation 022406 (Store (Con 241) (Con 0));
    SetByte 008358 0;
    SetByte 008359 0;
    TraceOperation 022409 Rfalse;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 022410:
  TraceOperation 022410 (Jz (Var (Global 234)) (Branch T (Dloc 022419)));
  Let b1 = M[008376];
  Let b2 = M[008377];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022419
  } else {
    TraceOperation 022413 (Push (Var (Global 223)));
    Let b3 = M[008354];
    Let b4 = M[008355];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 022416 (Jump 022422);
    Jump: 022422
  }
LocOp 022419:
  TraceOperation 022419 (Push (Con 0));
  PushStack 0;
  Jump: 022422
LocOp 022422:
  TraceOperation 022422 (Add (Var (Global 224)) (Var Sp) (Local 1));
  Let b1 = M[008356];
  Let b2 = M[008357];
  PopStack popped3;
  SetLocal 1 Add(MakeHiLo(b1,b2),popped3);
  TraceOperation 022426 (Add (Var (Global 224)) (Con 210) (Local 2));
  Let b4 = M[008356];
  Let b5 = M[008357];
  SetLocal 2 Add(MakeHiLo(b4,b5),210);
  Jump: 022430
LocOp 022430:
  TraceOperation 022430 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 022438)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 022434 (Inc (Con 18));
    Let b1 = M[007912];
    Let b2 = M[007913];
    SetByte 007912 HiByte(Add(MakeHiLo(b1,b2),1));
    SetByte 007913 LoByte(Add(MakeHiLo(b1,b2),1));
    TraceOperation 022436 (Ret (Var (Local 4)));
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: GetLocal(4)
  } else {
    Jump: 022438
  }
LocOp 022438:
  TraceOperation 022438 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 022442 (Jz (Var Sp) (Branch T (Dloc 022482)));
  PopStack popped3;
  if (IsZero(popped3)) {
    Jump: 022482
  } else {
    TraceOperation 022445 (Loadw (Var (Local 1)) (Con 1) (Local 3));
    Let b4 = M[Offset(Address(GetLocal(1)),2)];
    Let b5 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
    SetLocal 3 MakeHiLo(b4,b5);
    TraceOperation 022449 (Jz (Var (Local 3)) (Branch F (Dloc 022455)));
    if (IsZero(GetLocal(3))) {
      TraceOperation 022452 (Jump 022482);
      Jump: 022482
    } else {
      Jump: 022455
    }
  }
LocOp 022455:
  TraceOperation 022455 (Sub (Var (Local 3)) (Con 1) Sp);
  PushStack Sub(GetLocal(3),1);
  TraceOperation 022459 (Storew (Var (Local 1)) (Con 1) (Var Sp));
  PopStack popped1;
  SetByte Offset(Address(GetLocal(1)),2) HiByte(popped1);
  SetByte Offset(Offset(Address(GetLocal(1)),2),1) LoByte(popped1);
  TraceOperation 022464 (Jg (Var (Local 3)) (Con 1) (Branch T (Dloc 022482)));
  if (GreaterThan(GetLocal(3),1)) {
    Jump: 022482
  } else {
    TraceOperation 022468 (Loadw (Var (Local 1)) (Con 2) Sp);
    Let b2 = M[Offset(Address(GetLocal(1)),4)];
    Let b3 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 022472 (Call (Fvar Sp) [] Sp);
    PopStack popped4;
    if (IsZeroAddress(PackedAddress Z3(popped4))) {
      PushStack 0;
      TraceOperation 022476 (Jz (Var Sp) (Branch T (Dloc 022482)));
      PopStack popped5;
      if (IsZero(popped5)) {
        Jump: 022482
      } else {
        TraceOperation 022479 (Store (Con 4) (Con 1));
        SetLocal 4 1;
        Jump: 022482
      }
    } else {
      PushFrame 022472;
      JumpCall: PackedAddress Z3(popped4), #actuals: 0
    }
  }
LocReturn 022472:
  PushStack call_result;
  TraceOperation 022476 (Jz (Var Sp) (Branch T (Dloc 022482)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 022482
  } else {
    TraceOperation 022479 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 022482
  }
LocOp 022482:
  TraceOperation 022482 (Add (Var (Local 1)) (Con 6) (Local 1));
  SetLocal 1 Add(GetLocal(1),6);
  TraceOperation 022486 (Jump 022430);
  Jump: 022430
--[32]--------------------------------------------------
LocRoutine 022490:
  MakeRoutineFrame 12;
  if (LessThanByte(num_actuals,12)) {
    SetLocal 12 -1;
    if (LessThanByte(num_actuals,11)) {
      SetLocal 11 0;
      if (LessThanByte(num_actuals,10)) {
        SetLocal 10 0;
        if (LessThanByte(num_actuals,9)) {
          SetLocal 9 0;
          if (LessThanByte(num_actuals,8)) {
            SetLocal 8 0;
            if (LessThanByte(num_actuals,7)) {
              SetLocal 7 0;
              if (LessThanByte(num_actuals,6)) {
                SetLocal 6 0;
                if (LessThanByte(num_actuals,5)) {
                  SetLocal 5 0;
                  if (LessThanByte(num_actuals,4)) {
                    SetLocal 4 0;
                    if (LessThanByte(num_actuals,3)) {
                      SetLocal 3 0;
                      if (LessThanByte(num_actuals,2)) {
                        SetLocal 2 0;
                        if (LessThanByte(num_actuals,1)) {
                          SetLocal 1 1;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 022515
LocOp 022515:
  TraceOperation 022515 (Inc_chk (Con 12) (Con 9) (Branch F (Dloc 022522)));
  SetLocal 12 Add(GetLocal(12),1);
  if (GreaterThanEqual(GetLocal(12),9)) {
    TraceOperation 022519 (Jump 022530);
    Jump: 022530
  } else {
    Jump: 022522
  }
LocOp 022522:
  TraceOperation 022522 (Storew (Var (Global 184)) (Var (Local 12)) (Con 0));
  Let b1 = M[008276];
  Let b2 = M[008277];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(12))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(12))),1) 0;
  TraceOperation 022527 (Jump 022515);
  Jump: 022515
LocOp 022530:
  TraceOperation 022530 (Store (Con 220) (Con 0));
  SetByte 008316 0;
  SetByte 008317 0;
  TraceOperation 022533 (Store (Con 185) (Con 0));
  SetByte 008246 0;
  SetByte 008247 0;
  TraceOperation 022536 (Store (Con 204) (Con 0));
  SetByte 008284 0;
  SetByte 008285 0;
  TraceOperation 022539 (Store (Con 193) (Con 0));
  SetByte 008262 0;
  SetByte 008263 0;
  TraceOperation 022542 (Storew (Var (Global 167)) (Var (Global 162)) (Con 0));
  Let b1 = M[008242];
  Let b2 = M[008243];
  Let b3 = M[008232];
  Let b4 = M[008233];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 0;
  TraceOperation 022547 (Storew (Var (Global 166)) (Var (Global 162)) (Con 0));
  Let b5 = M[008240];
  Let b6 = M[008241];
  Let b7 = M[008232];
  Let b8 = M[008233];
  SetByte Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8))),1) 0;
  TraceOperation 022552 (Storew (Var (Global 165)) (Var (Global 162)) (Con 0));
  Let b9 = M[008238];
  Let b10 = M[008239];
  Let b11 = M[008232];
  Let b12 = M[008233];
  SetByte Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))),1) 0;
  TraceOperation 022557 (Jz (Var (Global 179)) (Branch F (Dloc 022583)));
  Let b13 = M[008266];
  Let b14 = M[008267];
  if (IsZero(MakeHiLo(b13,b14))) {
    TraceOperation 022560 (Je [Var (Global 195),Var (Global 235)] (Branch T (Dloc 022583)));
    Let b15 = M[008298];
    Let b16 = M[008299];
    Let b17 = M[008378];
    Let b18 = M[008379];
    if (Equal(MakeHiLo(b15,b16),MakeHiLo(b17,b18))) {
      Jump: 022583
    } else {
      TraceOperation 022564 (Store (Con 211) (Var (Global 235)));
      Let b19 = M[008378];
      Let b20 = M[008379];
      SetByte 008298 b19;
      SetByte 008299 b20;
      TraceOperation 022567 (Get_parent (Var (Global 195)) Sp);
      Let b21 = M[008298];
      Let b22 = M[008299];
      Let b23 = M[Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),4)];
      PushStack Widen(b23);
      TraceOperation 022570 (Test_attr (Var Sp) (Con 12) (Branch T (Dloc 022577)));
      PopStack popped24;
      Let b25 = M[Offset(Offset(000751,Mul(popped24,9)),1)];
      if (TestBit(b25,3)) {
        Jump: 022577
      } else {
        TraceOperation 022574 (Get_parent (Var (Global 195)) (Global 0));
        Let b26 = M[008298];
        Let b27 = M[008299];
        Let b28 = M[Offset(Offset(000751,Mul(MakeHiLo(b26,b27),9)),4)];
        SetByte 007908 HiByte(Widen(b28));
        SetByte 007909 LoByte(Widen(b28));
        Jump: 022577
      }
    }
  } else {
    Jump: 022583
  }
LocOp 022577:
  TraceOperation 022577 (Call (Floc 028316) [Var (Global 0)] (Global 85));
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame 022577;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 028316, #actuals: 1
LocReturn 022577:
  SetByte 008078 HiByte(call_result);
  SetByte 008079 LoByte(call_result);
  Jump: 022583
LocOp 022583:
  TraceOperation 022583 (Jz (Var (Global 192)) (Branch T (Dloc 022606)));
  Let b1 = M[008292];
  Let b2 = M[008293];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022606
  } else {
    TraceOperation 022586 (Store (Con 1) (Var (Global 192)));
    Let b3 = M[008292];
    Let b4 = M[008293];
    SetLocal 1 MakeHiLo(b3,b4);
    TraceOperation 022589 (Je [Var (Global 152),Con 1,Con 2] (Branch F (Dloc 022600)));
    Let b5 = M[008212];
    Let b6 = M[008213];
    if (LogOr(Equal(MakeHiLo(b5,b6),1),Equal(MakeHiLo(b5,b6),2))) {
      TraceOperation 022595 (Je [Var (Global 235),Var (Global 195)] (Branch F (Dloc 022600)));
      Let b7 = M[008378];
      Let b8 = M[008379];
      Let b9 = M[008298];
      Let b10 = M[008299];
      if (Equal(MakeHiLo(b7,b8),MakeHiLo(b9,b10))) {
        TraceOperation 022599 New_line;
        GamePrint "\n";
        Jump: 022600
      } else {
        Jump: 022600
      }
    } else {
      Jump: 022600
    }
  }
LocOp 022600:
  TraceOperation 022600 (Store (Con 208) (Con 0));
  SetByte 008292 0;
  SetByte 008293 0;
  TraceOperation 022603 (Jump 022648);
  Jump: 022648
LocOp 022606:
  TraceOperation 022606 (Store (Con 211) (Var (Global 235)));
  Let b1 = M[008378];
  Let b2 = M[008379];
  SetByte 008298 b1;
  SetByte 008299 b2;
  TraceOperation 022609 (Store (Con 195) (Con 0));
  SetByte 008266 0;
  SetByte 008267 0;
  TraceOperation 022612 (Get_parent (Var (Global 195)) Sp);
  Let b3 = M[008298];
  Let b4 = M[008299];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
  PushStack Widen(b5);
  TraceOperation 022615 (Test_attr (Var Sp) (Con 12) (Branch T (Dloc 022622)));
  PopStack popped6;
  Let b7 = M[Offset(Offset(000751,Mul(popped6,9)),1)];
  if (TestBit(b7,3)) {
    Jump: 022622
  } else {
    TraceOperation 022619 (Get_parent (Var (Global 195)) (Global 0));
    Let b8 = M[008298];
    Let b9 = M[008299];
    Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),4)];
    SetByte 007908 HiByte(Widen(b10));
    SetByte 007909 LoByte(Widen(b10));
    Jump: 022622
  }
LocOp 022622:
  TraceOperation 022622 (Call (Floc 028316) [Var (Global 0)] (Global 85));
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame 022622;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 028316, #actuals: 1
LocReturn 022622:
  SetByte 008078 HiByte(call_result);
  SetByte 008079 LoByte(call_result);
  TraceOperation 022628 (Je [Var (Global 152),Con 1,Con 2] (Branch F (Dloc 022635)));
  Let b1 = M[008212];
  Let b2 = M[008213];
  if (LogOr(Equal(MakeHiLo(b1,b2),1),Equal(MakeHiLo(b1,b2),2))) {
    TraceOperation 022634 New_line;
    GamePrint "\n";
    Jump: 022635
  } else {
    Jump: 022635
  }
LocOp 022635:
  TraceOperation 022635 (Print ">");
  GamePrint ">";
  TraceOperation 022640 (Sread (Var (Global 193)) (Var (Global 194)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    Let b6 = M[007910];
    Let b7 = M[007911];
    Let b8 = M[007912];
    Let b9 = M[007913];
    ReadInputFromUser (Just (StatusInfo {room = "", score = MakeHiLo(b6,b7), turns = MakeHiLo(b8,b9)})) user_command_line_10;
    Let b11 = M[008294];
    Let b12 = M[008295];
    Let b13 = M[008296];
    Let b14 = M[008297];
    Tokenize user_command_line_10 (num_tokens_15,position_words_16,canonicalized17);
    StringBytes canonicalized17 string_bytes_18;
    ForeachB: (index19,byte20) in (string_bytes_18) {
      SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),1),index19) byte20;
    }
    SetByte Offset(Address(MakeHiLo(b13,b14)),1) num_tokens_15;
    ForeachB: (index21,pos22,word23) in (position_words_16) {
      Let lookee24 = LookupInDict(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),0) HiByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),1) LoByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),2) StringLength(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),3) pos22;
    }
    TraceOperation 022644 (Loadb (Var (Global 194)) (Con 1) (Global 178));
    Let b25 = M[008296];
    Let b26 = M[008297];
    Let b27 = M[Offset(Address(MakeHiLo(b25,b26)),1)];
    SetByte 008264 HiByte(Widen(b27));
    SetByte 008265 LoByte(Widen(b27));
    Jump: 022648
  } else {
    Let b28 = M[007910];
    Let b29 = M[007911];
    Let b30 = M[007912];
    Let b31 = M[007913];
    ReadInputFromUser (Just (StatusInfo {room = GetText(Offset(Address(MakeHiLo(b3,b4)),1)), score = MakeHiLo(b28,b29), turns = MakeHiLo(b30,b31)})) user_command_line_32;
    Let b33 = M[008294];
    Let b34 = M[008295];
    Let b35 = M[008296];
    Let b36 = M[008297];
    Tokenize user_command_line_32 (num_tokens_37,position_words_38,canonicalized39);
    StringBytes canonicalized39 string_bytes_40;
    ForeachB: (index41,byte42) in (string_bytes_40) {
      SetByte Offset(Offset(Address(MakeHiLo(b33,b34)),1),index41) byte42;
    }
    SetByte Offset(Address(MakeHiLo(b35,b36)),1) num_tokens_37;
    ForeachB: (index43,pos44,word45) in (position_words_38) {
      Let lookee46 = LookupInDict(word45);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b35,b36)),2),Mul(4,index43)),0) HiByte(DeAddress(lookee46));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b35,b36)),2),Mul(4,index43)),1) LoByte(DeAddress(lookee46));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b35,b36)),2),Mul(4,index43)),2) StringLength(word45);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b35,b36)),2),Mul(4,index43)),3) pos44;
    }
    TraceOperation 022644 (Loadb (Var (Global 194)) (Con 1) (Global 178));
    Let b47 = M[008296];
    Let b48 = M[008297];
    Let b49 = M[Offset(Address(MakeHiLo(b47,b48)),1)];
    SetByte 008264 HiByte(Widen(b49));
    SetByte 008265 LoByte(Widen(b49));
    Jump: 022648
  }
LocOp 022648:
  TraceOperation 022648 (Loadb (Var (Global 194)) (Con 1) (Global 196));
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),1)];
  SetByte 008300 HiByte(Widen(b3));
  SetByte 008301 LoByte(Widen(b3));
  TraceOperation 022652 (Jz (Var (Global 196)) (Branch F (Dloc 022670)));
  Let b4 = M[008300];
  Let b5 = M[008301];
  if (IsZero(MakeHiLo(b4,b5))) {
    TraceOperation 022655 (Print "I beg your pardon?");
    GamePrint "I beg your pardon?";
    TraceOperation 022668 New_line;
    GamePrint "\n";
    TraceOperation 022669 Rfalse;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  } else {
    Jump: 022670
  }
LocOp 022670:
  TraceOperation 022670 (Store (Con 6) (Var (Global 196)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 022673 (Store (Con 196) (Con 0));
  SetByte 008268 0;
  SetByte 008269 0;
  TraceOperation 022676 (Store (Con 177) (Con 0));
  SetByte 008230 0;
  SetByte 008231 0;
  Jump: 022679
LocOp 022679:
  TraceOperation 022679 (Dec_chk (Con 212) (Con 0) (Branch F (Dloc 022689)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (LessThanEqual(MakeHiLo(b1,b2),0)) {
    SetByte 008300 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008301 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 022683 (Store (Con 195) (Con 0));
    SetByte 008266 0;
    SetByte 008267 0;
    TraceOperation 022686 (Jump 023396);
    Jump: 023396
  } else {
    SetByte 008300 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008301 LoByte(Sub(MakeHiLo(b1,b2),1));
    Jump: 022689
  }
LocOp 022689:
  TraceOperation 022689 (Loadw (Var (Global 194)) (Var (Local 1)) (Local 2));
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 022693 (Jz (Var (Local 2)) (Branch F (Dloc 022706)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 022696 (Call (Floc 023996) [Var (Local 1)] (Local 2));
    PushFrame 022696;
    SetLocal 1 GetLocal(1);
    JumpCall: 023996, #actuals: 1
  } else {
    Jump: 022706
  }
LocReturn 022696:
  SetLocal 2 call_result;
  TraceOperation 022702 (Jz (Var (Local 2)) (Branch T (Dloc 023379)));
  if (IsZero(GetLocal(2))) {
    Jump: 023379
  } else {
    Jump: 022706
  }
LocOp 022706:
  TraceOperation 022706 (Je [Var (Local 2),Con 19664] (Branch F (Dloc 022750)));
  if (Equal(GetLocal(2),19664)) {
    TraceOperation 022712 (Je [Var (Local 4),Con 233,Con 136] (Branch F (Dloc 022750)));
    if (LogOr(Equal(GetLocal(4),233),Equal(GetLocal(4),136))) {
      TraceOperation 022718 (Add (Var (Local 1)) (Con 2) Sp);
      PushStack Add(GetLocal(1),2);
      TraceOperation 022722 (Loadw (Var (Global 194)) (Var Sp) Sp);
      Let b1 = M[008296];
      Let b2 = M[008297];
      PopStack popped3;
      Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
      Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
      PushStack MakeHiLo(b4,b5);
      TraceOperation 022726 (Call (Floc 023466) [Var Sp,Con 64,Con 1] Sp);
      PopStack popped6;
      PushFrame 022726;
      SetLocal 1 popped6;
      SetLocal 2 64;
      SetLocal 3 1;
      JumpCall: 023466, #actuals: 3
    } else {
      Jump: 022750
    }
  } else {
    Jump: 022750
  }
LocReturn 022726:
  PushStack call_result;
  TraceOperation 022734 (Jz (Var Sp) (Branch T (Dloc 022750)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 022750
  } else {
    TraceOperation 022737 (Storew (Var (Global 184)) (Con 0) (Con 233));
    Let b2 = M[008276];
    Let b3 = M[008277];
    SetByte Offset(Address(MakeHiLo(b2,b3)),0) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b2,b3)),0),1) 233;
    TraceOperation 022742 (Store (Con 2) (Con 13686));
    SetLocal 2 13686;
    TraceOperation 022747 (Jump 022777);
    Jump: 022777
  }
LocOp 022750:
  TraceOperation 022750 (Je [Var (Local 2),Con 19559] (Branch F (Dloc 022777)));
  if (Equal(GetLocal(2),19559)) {
    TraceOperation 022756 (Jz (Var (Local 4)) (Branch F (Dloc 022777)));
    if (IsZero(GetLocal(4))) {
      TraceOperation 022759 (Jz (Var (Global 179)) (Branch F (Dloc 022777)));
      Let b1 = M[008266];
      Let b2 = M[008267];
      if (IsZero(MakeHiLo(b1,b2))) {
        TraceOperation 022762 (Storew (Var (Global 184)) (Con 0) (Con 233));
        Let b3 = M[008276];
        Let b4 = M[008277];
        SetByte Offset(Address(MakeHiLo(b3,b4)),0) 0;
        SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),0),1) 233;
        TraceOperation 022767 (Storew (Var (Global 184)) (Con 1) (Con 0));
        Let b5 = M[008276];
        Let b6 = M[008277];
        SetByte Offset(Address(MakeHiLo(b5,b6)),2) 0;
        SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),2),1) 0;
        TraceOperation 022772 (Store (Con 2) (Con 13686));
        SetLocal 2 13686;
        Jump: 022777
      } else {
        Jump: 022777
      }
    } else {
      Jump: 022777
    }
  } else {
    Jump: 022777
  }
LocOp 022777:
  TraceOperation 022777 (Je [Var (Local 2),Con 13665] (Branch F (Dloc 022795)));
  if (Equal(GetLocal(2),13665)) {
    TraceOperation 022783 (Je [Var (Local 9),Con 17228] (Branch F (Dloc 022795)));
    if (Equal(GetLocal(9),17228)) {
      TraceOperation 022789 (Store (Con 9) (Con 0));
      SetLocal 9 0;
      TraceOperation 022792 (Jump 023386);
      Jump: 023386
    } else {
      Jump: 022795
    }
  } else {
    Jump: 022795
  }
LocOp 022795:
  TraceOperation 022795 (Je [Var (Local 2),Con 19559,Con 13665] (Branch T (Dloc 022809)));
  if (LogOr(Equal(GetLocal(2),19559),Equal(GetLocal(2),13665))) {
    Jump: 022809
  } else {
    TraceOperation 022803 (Je [Var (Local 2),Con 13686] (Branch F (Dloc 022859)));
    if (Equal(GetLocal(2),13686)) {
      Jump: 022809
    } else {
      Jump: 022859
    }
  }
LocOp 022809:
  TraceOperation 022809 (Je [Var (Local 2),Con 13686] (Branch F (Dloc 022844)));
  if (Equal(GetLocal(2),13686)) {
    TraceOperation 022815 (Je [Var (Local 4),Con 143,Con 194] (Branch F (Dloc 022832)));
    if (LogOr(Equal(GetLocal(4),143),Equal(GetLocal(4),194))) {
      TraceOperation 022821 (Storew (Var (Global 194)) (Var (Local 1)) (Con 19545));
      Let b1 = M[008296];
      Let b2 = M[008297];
      SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))) 76;
      SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1) 89;
      TraceOperation 022827 (Inc (Con 212));
      Let b3 = M[008300];
      Let b4 = M[008301];
      SetByte 008300 HiByte(Add(MakeHiLo(b3,b4),1));
      SetByte 008301 LoByte(Add(MakeHiLo(b3,b4),1));
      TraceOperation 022829 (Jump 022679);
      Jump: 022679
    } else {
      Jump: 022832
    }
  } else {
    Jump: 022844
  }
LocOp 022832:
  TraceOperation 022832 (Jz (Var (Global 179)) (Branch T (Dloc 022841)));
  Let b1 = M[008266];
  Let b2 = M[008267];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022841
  } else {
    TraceOperation 022835 (Store (Con 195) (Con 0));
    SetByte 008266 0;
    SetByte 008267 0;
    TraceOperation 022838 (Jump 022844);
    Jump: 022844
  }
LocOp 022841:
  TraceOperation 022841 (Store (Con 195) (Con 1));
  SetByte 008266 0;
  SetByte 008267 1;
  Jump: 022844
LocOp 022844:
  TraceOperation 022844 (Jz (Var (Global 196)) (Branch T (Dloc 022851)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022851
  } else {
    TraceOperation 022847 (Add (Var (Local 1)) (Con 2) (Global 192));
    SetByte 008292 HiByte(Add(GetLocal(1),2));
    SetByte 008293 LoByte(Add(GetLocal(1),2));
    Jump: 022851
  }
LocOp 022851:
  TraceOperation 022851 (Storeb (Var (Global 194)) (Con 1) (Var (Global 196)));
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008300];
  Let b4 = M[008301];
  SetByte Offset(Address(MakeHiLo(b1,b2)),1) b4;
  TraceOperation 022856 (Jump 023396);
  Jump: 023396
LocOp 022859:
  TraceOperation 022859 (Call (Floc 023466) [Var (Local 2),Con 16,Con 3] (Local 3));
  PushFrame 022859;
  SetLocal 1 GetLocal(2);
  SetLocal 2 16;
  SetLocal 3 3;
  JumpCall: 023466, #actuals: 3
LocReturn 022859:
  SetLocal 3 call_result;
  TraceOperation 022867 (Jz (Var (Local 3)) (Branch T (Dloc 022970)));
  if (IsZero(GetLocal(3))) {
    Jump: 022970
  } else {
    TraceOperation 022871 (Je [Var (Local 4),Con 0,Con 244] (Branch F (Dloc 022970)));
    if (LogOr(Equal(GetLocal(4),0),Equal(GetLocal(4),244))) {
      TraceOperation 022878 (Je [Var (Local 6),Con 1] (Branch T (Dloc 022938)));
      if (Equal(GetLocal(6),1)) {
        Jump: 022938
      } else {
        TraceOperation 022883 (Je [Var (Local 6),Con 2] (Branch F (Dloc 022891)));
        if (Equal(GetLocal(6),2)) {
          TraceOperation 022887 (Je [Var (Local 4),Con 244] (Branch T (Dloc 022938)));
          if (Equal(GetLocal(4),244)) {
            Jump: 022938
          } else {
            Jump: 022891
          }
        } else {
          Jump: 022891
        }
      }
    } else {
      Jump: 022970
    }
  }
LocOp 022891:
  TraceOperation 022891 (Add (Var (Local 1)) (Con 2) Sp);
  PushStack Add(GetLocal(1),2);
  TraceOperation 022895 (Loadw (Var (Global 194)) (Var Sp) (Local 8));
  Let b1 = M[008296];
  Let b2 = M[008297];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 8 MakeHiLo(b4,b5);
  TraceOperation 022899 (Je [Var (Local 8),Con 19559,Con 13665,Con 13686] (Branch F (Dloc 022913)));
  if (LogOr(LogOr(Equal(GetLocal(8),19559),Equal(GetLocal(8),13665)),Equal(GetLocal(8),13686))) {
    TraceOperation 022909 (Jl (Var (Local 6)) (Con 2) (Branch F (Dloc 022938)));
    if (LessThan(GetLocal(6),2)) {
      Jump: 022913
    } else {
      Jump: 022938
    }
  } else {
    Jump: 022913
  }
LocOp 022913:
  TraceOperation 022913 (Jz (Var (Global 179)) (Branch T (Dloc 022926)));
  Let b1 = M[008266];
  Let b2 = M[008267];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022926
  } else {
    TraceOperation 022916 (Je [Var (Local 6),Con 2] (Branch F (Dloc 022926)));
    if (Equal(GetLocal(6),2)) {
      TraceOperation 022920 (Je [Var (Local 8),Con 13686] (Branch T (Dloc 022938)));
      if (Equal(GetLocal(8),13686)) {
        Jump: 022938
      } else {
        Jump: 022926
      }
    } else {
      Jump: 022926
    }
  }
LocOp 022926:
  TraceOperation 022926 (Jg (Var (Local 6)) (Con 2) (Branch F (Dloc 022970)));
  if (GreaterThan(GetLocal(6),2)) {
    TraceOperation 022930 (Je [Var (Local 8),Con 13672,Con 13833] (Branch F (Dloc 022970)));
    if (LogOr(Equal(GetLocal(8),13672),Equal(GetLocal(8),13833))) {
      Jump: 022938
    } else {
      Jump: 022970
    }
  } else {
    Jump: 022970
  }
LocOp 022938:
  TraceOperation 022938 (Store (Con 7) (Var (Local 3)));
  SetLocal 7 GetLocal(3);
  TraceOperation 022941 (Je [Var (Local 8),Con 13672,Con 13833] (Branch F (Dloc 022959)));
  if (LogOr(Equal(GetLocal(8),13672),Equal(GetLocal(8),13833))) {
    TraceOperation 022949 (Add (Var (Local 1)) (Con 2) Sp);
    PushStack Add(GetLocal(1),2);
    TraceOperation 022953 (Storew (Var (Global 194)) (Var Sp) (Con 19559));
    Let b1 = M[008296];
    Let b2 = M[008297];
    PopStack popped3;
    SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)) 76;
    SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1) 103;
    Jump: 022959
  } else {
    Jump: 022959
  }
LocOp 022959:
  TraceOperation 022959 (Jg (Var (Local 6)) (Con 2) (Branch T (Dloc 023386)));
  if (GreaterThan(GetLocal(6),2)) {
    Jump: 023386
  } else {
    TraceOperation 022964 (Store (Con 195) (Con 0));
    SetByte 008266 0;
    SetByte 008267 0;
    TraceOperation 022967 (Jump 023396);
    Jump: 023396
  }
LocOp 022970:
  TraceOperation 022970 (Call (Floc 023466) [Var (Local 2),Con 64,Con 1] (Local 3));
  PushFrame 022970;
  SetLocal 1 GetLocal(2);
  SetLocal 2 64;
  SetLocal 3 1;
  JumpCall: 023466, #actuals: 3
LocReturn 022970:
  SetLocal 3 call_result;
  TraceOperation 022978 (Jz (Var (Local 3)) (Branch T (Dloc 023035)));
  if (IsZero(GetLocal(3))) {
    Jump: 023035
  } else {
    TraceOperation 022981 (Jz (Var (Local 4)) (Branch F (Dloc 023035)));
    if (IsZero(GetLocal(4))) {
      TraceOperation 022984 (Store (Con 4) (Var (Local 3)));
      SetLocal 4 GetLocal(3);
      TraceOperation 022987 (Storew (Var (Global 184)) (Con 0) (Var (Local 3)));
      Let b1 = M[008276];
      Let b2 = M[008277];
      SetByte Offset(Address(MakeHiLo(b1,b2)),0) HiByte(GetLocal(3));
      SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),0),1) LoByte(GetLocal(3));
      TraceOperation 022992 (Storew (Var (Global 184)) (Con 1) (Var (Global 182)));
      Let b3 = M[008276];
      Let b4 = M[008277];
      Let b5 = M[008272];
      Let b6 = M[008273];
      SetByte Offset(Address(MakeHiLo(b3,b4)),2) b5;
      SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),2),1) b6;
      TraceOperation 022997 (Storew (Var (Global 182)) (Con 0) (Var (Local 2)));
      Let b7 = M[008272];
      Let b8 = M[008273];
      SetByte Offset(Address(MakeHiLo(b7,b8)),0) HiByte(GetLocal(2));
      SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),0),1) LoByte(GetLocal(2));
      TraceOperation 023002 (Mul (Var (Local 1)) (Con 2) Sp);
      PushStack Mul(GetLocal(1),2);
      TraceOperation 023006 (Add (Var Sp) (Con 2) (Local 10));
      PopStack popped9;
      SetLocal 10 Add(popped9,2);
      TraceOperation 023010 (Loadb (Var (Global 194)) (Var (Local 10)) Sp);
      Let b10 = M[008296];
      Let b11 = M[008297];
      Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),GetLocal(10))];
      PushStack Widen(b12);
      TraceOperation 023014 (Storeb (Var (Global 182)) (Con 2) (Var Sp));
      Let b13 = M[008272];
      Let b14 = M[008273];
      PopStack popped15;
      SetByte Offset(Address(MakeHiLo(b13,b14)),2) LoByte(popped15);
      TraceOperation 023019 (Add (Var (Local 10)) (Con 1) Sp);
      PushStack Add(GetLocal(10),1);
      TraceOperation 023023 (Loadb (Var (Global 194)) (Var Sp) Sp);
      Let b16 = M[008296];
      Let b17 = M[008297];
      PopStack popped18;
      Let b19 = M[Offset(Address(MakeHiLo(b16,b17)),popped18)];
      PushStack Widen(b19);
      TraceOperation 023027 (Storeb (Var (Global 182)) (Con 3) (Var Sp));
      Let b20 = M[008272];
      Let b21 = M[008273];
      PopStack popped22;
      SetByte Offset(Address(MakeHiLo(b20,b21)),3) LoByte(popped22);
      TraceOperation 023032 (Jump 023386);
      Jump: 023386
    } else {
      Jump: 023035
    }
  }
LocOp 023035:
  TraceOperation 023035 (Call (Floc 023466) [Var (Local 2),Con 8,Con 0] (Local 3));
  PushFrame 023035;
  SetLocal 1 GetLocal(2);
  SetLocal 2 8;
  SetLocal 3 0;
  JumpCall: 023466, #actuals: 3
LocReturn 023035:
  SetLocal 3 call_result;
  TraceOperation 023043 (Jz (Var (Local 3)) (Branch F (Dloc 023080)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 023046 (Je [Var (Local 2),Con 13798,Con 17473,Con 14386] (Branch T (Dloc 023077)));
    if (LogOr(LogOr(Equal(GetLocal(2),13798),Equal(GetLocal(2),17473)),Equal(GetLocal(2),14386))) {
      Jump: 023077
    } else {
      TraceOperation 023056 (Call (Floc 023466) [Var (Local 2),Con 32] Sp);
      PushFrame 023056;
      SetLocal 1 GetLocal(2);
      SetLocal 2 32;
      JumpCall: 023466, #actuals: 2
    }
  } else {
    Jump: 023080
  }
LocReturn 023056:
  PushStack call_result;
  TraceOperation 023063 (Jz (Var Sp) (Branch F (Dloc 023077)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 023066 (Call (Floc 023466) [Var (Local 2),Con 128] Sp);
    PushFrame 023066;
    SetLocal 1 GetLocal(2);
    SetLocal 2 128;
    JumpCall: 023466, #actuals: 2
  } else {
    Jump: 023077
  }
LocReturn 023066:
  PushStack call_result;
  TraceOperation 023073 (Jz (Var Sp) (Branch T (Dloc 023277)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023277
  } else {
    Jump: 023077
  }
LocOp 023077:
  TraceOperation 023077 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 023080
LocOp 023080:
  TraceOperation 023080 (Jg (Var (Global 196)) (Con 0) (Branch F (Dloc 023120)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 023084 (Add (Var (Local 1)) (Con 2) Sp);
    PushStack Add(GetLocal(1),2);
    TraceOperation 023088 (Loadw (Var (Global 194)) (Var Sp) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    PopStack popped5;
    Let b6 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5))];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5)),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 023092 (Je [Var Sp,Con 17417] (Branch F (Dloc 023120)));
    PopStack popped8;
    if (Equal(popped8,17417)) {
      TraceOperation 023098 (Jz (Var (Local 3)) (Branch F (Dloc 023120)));
      if (IsZero(GetLocal(3))) {
        TraceOperation 023101 (Je [Var (Local 2),Con 13798,Con 17473,Con 13693] (Branch T (Dloc 023120)));
        if (LogOr(LogOr(Equal(GetLocal(2),13798),Equal(GetLocal(2),17473)),Equal(GetLocal(2),13693))) {
          Jump: 023120
        } else {
          TraceOperation 023111 (Je [Var (Local 2),Con 14386] (Branch T (Dloc 023120)));
          if (Equal(GetLocal(2),14386)) {
            Jump: 023120
          } else {
            TraceOperation 023117 (Jump 023386);
            Jump: 023386
          }
        }
      } else {
        Jump: 023120
      }
    } else {
      Jump: 023120
    }
  } else {
    Jump: 023120
  }
LocOp 023120:
  TraceOperation 023120 (Jz (Var (Local 3)) (Branch T (Dloc 023163)));
  if (IsZero(GetLocal(3))) {
    Jump: 023163
  } else {
    TraceOperation 023123 (Jz (Var (Global 196)) (Branch T (Dloc 023142)));
    Let b1 = M[008300];
    Let b2 = M[008301];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 023142
    } else {
      TraceOperation 023126 (Add (Var (Local 1)) (Con 2) Sp);
      PushStack Add(GetLocal(1),2);
      TraceOperation 023130 (Loadw (Var (Global 194)) (Var Sp) Sp);
      Let b3 = M[008296];
      Let b4 = M[008297];
      PopStack popped5;
      Let b6 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5))];
      Let b7 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5)),1)];
      PushStack MakeHiLo(b6,b7);
      TraceOperation 023134 (Je [Var Sp,Con 19559,Con 13665] (Branch F (Dloc 023163)));
      PopStack popped8;
      if (LogOr(Equal(popped8,19559),Equal(popped8,13665))) {
        Jump: 023142
      } else {
        Jump: 023163
      }
    }
  }
LocOp 023142:
  TraceOperation 023142 (Store (Con 193) (Con 1));
  SetByte 008262 0;
  SetByte 008263 1;
  TraceOperation 023145 (Jl (Var (Global 180)) (Con 2) (Branch F (Dloc 023386)));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (LessThan(MakeHiLo(b1,b2),2)) {
    TraceOperation 023150 (Storew (Var (Global 184)) (Con 2) (Var (Local 3)));
    Let b3 = M[008276];
    Let b4 = M[008277];
    SetByte Offset(Address(MakeHiLo(b3,b4)),4) HiByte(GetLocal(3));
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),4),1) LoByte(GetLocal(3));
    TraceOperation 023155 (Storew (Var (Global 184)) (Con 3) (Var (Local 2)));
    Let b5 = M[008276];
    Let b6 = M[008277];
    SetByte Offset(Address(MakeHiLo(b5,b6)),6) HiByte(GetLocal(2));
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),6),1) LoByte(GetLocal(2));
    TraceOperation 023160 (Jump 023386);
    Jump: 023386
  } else {
    Jump: 023386
  }
LocOp 023163:
  TraceOperation 023163 (Je [Var (Global 180),Con 2] (Branch F (Dloc 023194)));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 023167 (Print "There were too many nouns in that sentence.");
    GamePrint "There were too many nouns in that sentence.";
    TraceOperation 023192 New_line;
    GamePrint "\n";
    TraceOperation 023193 Rfalse;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    Jump: 023194
  }
LocOp 023194:
  TraceOperation 023194 (Inc (Con 196));
  Let b1 = M[008268];
  Let b2 = M[008269];
  SetByte 008268 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008269 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 023196 (Je [Var (Local 3),Con 250] (Branch F (Dloc 023220)));
  if (Equal(GetLocal(3),250)) {
    TraceOperation 023200 (Add (Var (Local 1)) (Con 2) Sp);
    PushStack Add(GetLocal(1),2);
    TraceOperation 023204 (Loadw (Var (Global 194)) (Var Sp) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    PopStack popped5;
    Let b6 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5))];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5)),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 023208 (Je [Var Sp,Con 15835] (Branch F (Dloc 023220)));
    PopStack popped8;
    if (Equal(popped8,15835)) {
      TraceOperation 023214 (Store (Con 220) (Con 1));
      SetByte 008316 0;
      SetByte 008317 1;
      TraceOperation 023217 (Jump 023255);
      Jump: 023255
    } else {
      Jump: 023220
    }
  } else {
    Jump: 023220
  }
LocOp 023220:
  TraceOperation 023220 (Je [Var (Local 3),Con 248] (Branch F (Dloc 023255)));
  if (Equal(GetLocal(3),248)) {
    TraceOperation 023224 (Add (Var (Local 1)) (Con 2) Sp);
    PushStack Add(GetLocal(1),2);
    TraceOperation 023228 (Loadw (Var (Global 194)) (Var Sp) Sp);
    Let b1 = M[008296];
    Let b2 = M[008297];
    PopStack popped3;
    Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 023232 (Je [Var Sp,Con 16472] (Branch F (Dloc 023255)));
    PopStack popped6;
    if (Equal(popped6,16472)) {
      TraceOperation 023238 (Add (Var (Local 1)) (Con 4) Sp);
      PushStack Add(GetLocal(1),4);
      TraceOperation 023242 (Loadw (Var (Global 194)) (Var Sp) Sp);
      Let b7 = M[008296];
      Let b8 = M[008297];
      PopStack popped9;
      Let b10 = M[Offset(Address(MakeHiLo(b7,b8)),Mul(2,popped9))];
      Let b11 = M[Offset(Offset(Address(MakeHiLo(b7,b8)),Mul(2,popped9)),1)];
      PushStack MakeHiLo(b10,b11);
      TraceOperation 023246 (Je [Var Sp,Con 15835] (Branch F (Dloc 023255)));
      PopStack popped12;
      if (Equal(popped12,15835)) {
        TraceOperation 023252 (Store (Con 220) (Con 1));
        SetByte 008316 0;
        SetByte 008317 1;
        Jump: 023255
      } else {
        Jump: 023255
      }
    } else {
      Jump: 023255
    }
  } else {
    Jump: 023255
  }
LocOp 023255:
  TraceOperation 023255 (Call (Floc 023504) [Var (Local 1),Var (Local 3),Var (Local 2)] (Local 1));
  PushFrame 023255;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(3);
  SetLocal 3 GetLocal(2);
  JumpCall: 023504, #actuals: 3
LocReturn 023255:
  SetLocal 1 call_result;
  TraceOperation 023263 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 023266 (Jl (Var (Local 1)) (Con 0) (Branch F (Dloc 023386)));
    if (LessThan(GetLocal(1),0)) {
      TraceOperation 023271 (Store (Con 195) (Con 0));
      SetByte 008266 0;
      SetByte 008267 0;
      TraceOperation 023274 (Jump 023396);
      Jump: 023396
    } else {
      Jump: 023386
    }
  }
LocOp 023277:
  TraceOperation 023277 (Jz (Var (Local 4)) (Branch F (Dloc 023294)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 023280 (Je [Var (Local 2),Con 15240,Con 15254] (Branch F (Dloc 023294)));
    if (LogOr(Equal(GetLocal(2),15240),Equal(GetLocal(2),15254))) {
      TraceOperation 023288 (Store (Con 5) (Con 1));
      SetLocal 5 1;
      TraceOperation 023291 (Jump 023386);
      Jump: 023386
    } else {
      Jump: 023294
    }
  } else {
    Jump: 023294
  }
LocOp 023294:
  TraceOperation 023294 (Call (Floc 023466) [Var (Local 2),Con 4] Sp);
  PushFrame 023294;
  SetLocal 1 GetLocal(2);
  SetLocal 2 4;
  JumpCall: 023466, #actuals: 2
LocReturn 023294:
  PushStack call_result;
  TraceOperation 023301 (Jz (Var Sp) (Branch T (Dloc 023307)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023307
  } else {
    TraceOperation 023304 (Jump 023386);
    Jump: 023386
  }
LocOp 023307:
  TraceOperation 023307 (Je [Var (Local 4),Con 233] (Branch F (Dloc 023372)));
  if (Equal(GetLocal(4),233)) {
    TraceOperation 023312 (Call (Floc 023466) [Var (Local 2),Con 64,Con 1] Sp);
    PushFrame 023312;
    SetLocal 1 GetLocal(2);
    SetLocal 2 64;
    SetLocal 3 1;
    JumpCall: 023466, #actuals: 3
  } else {
    Jump: 023372
  }
LocReturn 023312:
  PushStack call_result;
  TraceOperation 023320 (Jz (Var Sp) (Branch T (Dloc 023372)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023372
  } else {
    TraceOperation 023323 (Je [Var (Global 195),Var (Global 235)] (Branch F (Dloc 023372)));
    Let b2 = M[008298];
    Let b3 = M[008299];
    Let b4 = M[008378];
    Let b5 = M[008379];
    if (Equal(MakeHiLo(b2,b3),MakeHiLo(b4,b5))) {
      TraceOperation 023327 (Print "Please consult your manual for the correct way to talk to characters.");
      GamePrint "Please consult your manual for the correct way to talk to characters.";
      TraceOperation 023370 New_line;
      GamePrint "\n";
      TraceOperation 023371 Rfalse;
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      Jump: 023372
    }
  }
LocOp 023372:
  TraceOperation 023372 (Call (Floc 024824) [Var (Local 1)] Sp);
  PushFrame 023372;
  SetLocal 1 GetLocal(1);
  JumpCall: 024824, #actuals: 1
LocReturn 023372:
  PushStack call_result;
  TraceOperation 023378 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 023379:
  TraceOperation 023379 (Call (Floc 024762) [Var (Local 1)] Sp);
  PushFrame 023379;
  SetLocal 1 GetLocal(1);
  JumpCall: 024762, #actuals: 1
LocReturn 023379:
  PushStack call_result;
  TraceOperation 023385 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 023386:
  TraceOperation 023386 (Store (Con 9) (Var (Local 2)));
  SetLocal 9 GetLocal(2);
  TraceOperation 023389 (Add (Var (Local 1)) (Con 2) (Local 1));
  SetLocal 1 Add(GetLocal(1),2);
  TraceOperation 023393 (Jump 022679);
  Jump: 022679
LocOp 023396:
  TraceOperation 023396 (Jz (Var (Local 7)) (Branch T (Dloc 023416)));
  if (IsZero(GetLocal(7))) {
    Jump: 023416
  } else {
    TraceOperation 023399 (Store (Con 219) (Con 169));
    SetByte 008314 0;
    SetByte 008315 169;
    TraceOperation 023402 (Store (Con 217) (Var (Local 7)));
    SetByte 008310 HiByte(GetLocal(7));
    SetByte 008311 LoByte(GetLocal(7));
    TraceOperation 023405 (Store (Con 205) (Con 0));
    SetByte 008286 0;
    SetByte 008287 0;
    TraceOperation 023408 (Store (Con 191) (Var (Local 7)));
    SetByte 008258 HiByte(GetLocal(7));
    SetByte 008259 LoByte(GetLocal(7));
    TraceOperation 023411 (Store (Con 192) (Var (Local 5)));
    SetByte 008260 HiByte(GetLocal(5));
    SetByte 008261 LoByte(GetLocal(5));
    TraceOperation 023414 (Ret (Con 1));
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  }
LocOp 023416:
  TraceOperation 023416 (Store (Con 191) (Con 0));
  SetByte 008258 0;
  SetByte 008259 0;
  TraceOperation 023419 (Jz (Var (Global 189)) (Branch T (Dloc 023430)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 023430
  } else {
    TraceOperation 023422 (Call (Floc 024134) [] Sp);
    PushFrame 023422;
    JumpCall: 024134, #actuals: 0
  }
LocReturn 023422:
  PushStack call_result;
  TraceOperation 023427 (Jz (Var Sp) (Branch F (Dloc 023433)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023430
  } else {
    Jump: 023433
  }
LocOp 023430:
  TraceOperation 023430 (Store (Con 192) (Var (Local 5)));
  SetByte 008260 HiByte(GetLocal(5));
  SetByte 008261 LoByte(GetLocal(5));
  Jump: 023433
LocOp 023433:
  TraceOperation 023433 (Call (Floc 024902) [] Sp);
  PushFrame 023433;
  JumpCall: 024902, #actuals: 0
LocReturn 023433:
  PushStack call_result;
  TraceOperation 023438 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 023441 (Call (Floc 026166) [] Sp);
    PushFrame 023441;
    JumpCall: 026166, #actuals: 0
  }
LocReturn 023441:
  PushStack call_result;
  TraceOperation 023446 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 023449 (Call (Floc 028114) [] Sp);
    PushFrame 023449;
    JumpCall: 028114, #actuals: 0
  }
LocReturn 023449:
  PushStack call_result;
  TraceOperation 023454 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 023457 (Call (Floc 027810) [] Sp);
    PushFrame 023457;
    JumpCall: 027810, #actuals: 0
  }
LocReturn 023457:
  PushStack call_result;
  TraceOperation 023462 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 023465 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[33]--------------------------------------------------
LocRoutine 023466:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 5;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 5;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 023477
LocOp 023477:
  TraceOperation 023477 (Loadb (Var (Local 1)) (Con 4) (Local 5));
  Let b1 = M[Offset(Address(GetLocal(1)),4)];
  SetLocal 5 Widen(b1);
  TraceOperation 023481 (Test (Var (Local 5)) (Var (Local 2)) (Branch F Dfalse));
  if (Equal(And(GetLocal(5),GetLocal(2)),GetLocal(2))) {
    TraceOperation 023485 (Jg (Var (Local 3)) (Con 4) (Branch T Dtrue));
    if (GreaterThan(GetLocal(3),4)) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 1
    } else {
      TraceOperation 023489 (And (Var (Local 5)) (Con 3) (Local 5));
      SetLocal 5 And(GetLocal(5),3);
      TraceOperation 023493 (Je [Var (Local 5),Var (Local 3)] (Branch T (Dloc 023499)));
      if (Equal(GetLocal(5),GetLocal(3))) {
        Jump: 023499
      } else {
        TraceOperation 023497 (Inc (Con 4));
        SetLocal 4 Add(GetLocal(4),1);
        Jump: 023499
      }
    }
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 023499:
  TraceOperation 023499 (Loadb (Var (Local 1)) (Var (Local 4)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),GetLocal(4))];
  PushStack Widen(b1);
  TraceOperation 023503 Ret_popped;
  PopStack popped2;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: popped2
--[34]--------------------------------------------------
LocRoutine 023504:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 1;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 023525
LocOp 023525:
  TraceOperation 023525 (Sub (Var (Global 180)) (Con 1) Sp);
  Let b1 = M[008268];
  Let b2 = M[008269];
  PushStack Sub(MakeHiLo(b1,b2),1);
  TraceOperation 023529 (Mul (Var Sp) (Con 2) (Local 4));
  PopStack popped3;
  SetLocal 4 Mul(popped3,2);
  TraceOperation 023533 (Jz (Var (Local 2)) (Branch T (Dloc 023561)));
  if (IsZero(GetLocal(2))) {
    Jump: 023561
  } else {
    TraceOperation 023536 (Add (Con 2) (Var (Local 4)) (Local 5));
    SetLocal 5 Add(2,GetLocal(4));
    TraceOperation 023540 (Storew (Var (Global 184)) (Var (Local 5)) (Var (Local 2)));
    Let b4 = M[008276];
    Let b5 = M[008277];
    SetByte Offset(Address(MakeHiLo(b4,b5)),Mul(2,GetLocal(5))) HiByte(GetLocal(2));
    SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),Mul(2,GetLocal(5))),1) LoByte(GetLocal(2));
    TraceOperation 023545 (Add (Var (Local 5)) (Con 1) Sp);
    PushStack Add(GetLocal(5),1);
    TraceOperation 023549 (Storew (Var (Global 184)) (Var Sp) (Var (Local 3)));
    Let b6 = M[008276];
    Let b7 = M[008277];
    PopStack popped8;
    SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,popped8)) HiByte(GetLocal(3));
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,popped8)),1) LoByte(GetLocal(3));
    TraceOperation 023554 (Add (Var (Local 1)) (Con 2) (Local 1));
    SetLocal 1 Add(GetLocal(1),2);
    TraceOperation 023558 (Jump 023563);
    Jump: 023563
  }
LocOp 023561:
  TraceOperation 023561 (Inc (Con 212));
  Let b1 = M[008300];
  Let b2 = M[008301];
  SetByte 008300 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008301 LoByte(Add(MakeHiLo(b1,b2),1));
  Jump: 023563
LocOp 023563:
  TraceOperation 023563 (Jz (Var (Global 196)) (Branch F (Dloc 023571)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 023566 (Dec (Con 196));
    Let b3 = M[008268];
    Let b4 = M[008269];
    SetByte 008268 HiByte(Sub(MakeHiLo(b3,b4),1));
    SetByte 008269 LoByte(Sub(MakeHiLo(b3,b4),1));
    TraceOperation 023568 (Ret (Con -1));
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: -1
  } else {
    Jump: 023571
  }
LocOp 023571:
  TraceOperation 023571 (Add (Con 6) (Var (Local 4)) (Local 5));
  SetLocal 5 Add(6,GetLocal(4));
  TraceOperation 023575 (Mul (Var (Local 1)) (Con 2) Sp);
  PushStack Mul(GetLocal(1),2);
  TraceOperation 023579 (Add (Var (Global 194)) (Var Sp) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  PopStack popped3;
  PushStack Add(MakeHiLo(b1,b2),popped3);
  TraceOperation 023583 (Storew (Var (Global 184)) (Var (Local 5)) (Var Sp));
  Let b4 = M[008276];
  Let b5 = M[008277];
  PopStack popped6;
  SetByte Offset(Address(MakeHiLo(b4,b5)),Mul(2,GetLocal(5))) HiByte(popped6);
  SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),Mul(2,GetLocal(5))),1) LoByte(popped6);
  TraceOperation 023588 (Loadw (Var (Global 194)) (Var (Local 1)) Sp);
  Let b7 = M[008296];
  Let b8 = M[008297];
  Let b9 = M[Offset(Address(MakeHiLo(b7,b8)),Mul(2,GetLocal(1)))];
  Let b10 = M[Offset(Offset(Address(MakeHiLo(b7,b8)),Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b9,b10);
  TraceOperation 023592 (Je [Var Sp,Con 19545,Con 13693,Con 13819] (Branch F (Dloc 023615)));
  PopStack popped11;
  if (LogOr(LogOr(Equal(popped11,19545),Equal(popped11,13693)),Equal(popped11,13819))) {
    TraceOperation 023602 (Loadw (Var (Global 184)) (Var (Local 5)) Sp);
    Let b12 = M[008276];
    Let b13 = M[008277];
    Let b14 = M[Offset(Address(MakeHiLo(b12,b13)),Mul(2,GetLocal(5)))];
    Let b15 = M[Offset(Offset(Address(MakeHiLo(b12,b13)),Mul(2,GetLocal(5))),1)];
    PushStack MakeHiLo(b14,b15);
    TraceOperation 023606 (Add (Var Sp) (Con 4) Sp);
    PopStack popped16;
    PushStack Add(popped16,4);
    TraceOperation 023610 (Storew (Var (Global 184)) (Var (Local 5)) (Var Sp));
    Let b17 = M[008276];
    Let b18 = M[008277];
    PopStack popped19;
    SetByte Offset(Address(MakeHiLo(b17,b18)),Mul(2,GetLocal(5))) HiByte(popped19);
    SetByte Offset(Offset(Address(MakeHiLo(b17,b18)),Mul(2,GetLocal(5))),1) LoByte(popped19);
    Jump: 023615
  } else {
    Jump: 023615
  }
LocOp 023615:
  TraceOperation 023615 (Dec_chk (Con 212) (Con 0) (Branch F (Dloc 023639)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (LessThanEqual(MakeHiLo(b1,b2),0)) {
    SetByte 008300 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008301 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 023619 (Add (Var (Local 5)) (Con 1) (Local 10));
    SetLocal 10 Add(GetLocal(5),1);
    TraceOperation 023623 (Mul (Var (Local 1)) (Con 2) Sp);
    PushStack Mul(GetLocal(1),2);
    TraceOperation 023627 (Add (Var (Global 194)) (Var Sp) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    PopStack popped5;
    PushStack Add(MakeHiLo(b3,b4),popped5);
    TraceOperation 023631 (Storew (Var (Global 184)) (Var (Local 10)) (Var Sp));
    Let b6 = M[008276];
    Let b7 = M[008277];
    PopStack popped8;
    SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(10))) HiByte(popped8);
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(10))),1) LoByte(popped8);
    TraceOperation 023636 (Ret (Con -1));
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: -1
  } else {
    SetByte 008300 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008301 LoByte(Sub(MakeHiLo(b1,b2),1));
    Jump: 023639
  }
LocOp 023639:
  TraceOperation 023639 (Loadw (Var (Global 194)) (Var (Local 1)) (Local 3));
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 023643 (Jz (Var (Local 3)) (Branch F (Dloc 023656)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 023646 (Call (Floc 023996) [Var (Local 1)] (Local 3));
    PushFrame 023646;
    SetLocal 1 GetLocal(1);
    JumpCall: 023996, #actuals: 1
  } else {
    Jump: 023656
  }
LocReturn 023646:
  SetLocal 3 call_result;
  TraceOperation 023652 (Jz (Var (Local 3)) (Branch T (Dloc 023976)));
  if (IsZero(GetLocal(3))) {
    Jump: 023976
  } else {
    Jump: 023656
  }
LocOp 023656:
  TraceOperation 023656 (Jz (Var (Global 196)) (Branch F (Dloc 023665)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 023659 (Store (Con 8) (Con 0));
    SetLocal 8 0;
    TraceOperation 023662 (Jump 023673);
    Jump: 023673
  } else {
    Jump: 023665
  }
LocOp 023665:
  TraceOperation 023665 (Add (Var (Local 1)) (Con 2) Sp);
  PushStack Add(GetLocal(1),2);
  TraceOperation 023669 (Loadw (Var (Global 194)) (Var Sp) (Local 8));
  Let b1 = M[008296];
  Let b2 = M[008297];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 8 MakeHiLo(b4,b5);
  Jump: 023673
LocOp 023673:
  TraceOperation 023673 (Je [Var (Local 3),Con 13665] (Branch F (Dloc 023691)));
  if (Equal(GetLocal(3),13665)) {
    TraceOperation 023679 (Je [Var (Local 9),Con 17228] (Branch F (Dloc 023691)));
    if (Equal(GetLocal(9),17228)) {
      TraceOperation 023685 (Store (Con 9) (Con 0));
      SetLocal 9 0;
      TraceOperation 023688 (Jump 023983);
      Jump: 023983
    } else {
      Jump: 023691
    }
  } else {
    Jump: 023691
  }
LocOp 023691:
  TraceOperation 023691 (Je [Var (Local 3),Con 13833,Con 13672] (Branch F (Dloc 023705)));
  if (LogOr(Equal(GetLocal(3),13833),Equal(GetLocal(3),13672))) {
    TraceOperation 023699 (Store (Con 6) (Con 1));
    SetLocal 6 1;
    TraceOperation 023702 (Jump 023983);
    Jump: 023983
  } else {
    Jump: 023705
  }
LocOp 023705:
  TraceOperation 023705 (Je [Var (Local 3),Con 13798,Con 17473,Con 14386] (Branch F (Dloc 023731)));
  if (LogOr(LogOr(Equal(GetLocal(3),13798),Equal(GetLocal(3),17473)),Equal(GetLocal(3),14386))) {
    TraceOperation 023715 (Je [Var (Local 8),Con 17417] (Branch F (Dloc 023983)));
    if (Equal(GetLocal(8),17417)) {
      TraceOperation 023722 (Dec (Con 212));
      Let b1 = M[008300];
      Let b2 = M[008301];
      SetByte 008300 HiByte(Sub(MakeHiLo(b1,b2),1));
      SetByte 008301 LoByte(Sub(MakeHiLo(b1,b2),1));
      TraceOperation 023724 (Add (Var (Local 1)) (Con 2) (Local 1));
      SetLocal 1 Add(GetLocal(1),2);
      TraceOperation 023728 (Jump 023983);
      Jump: 023983
    } else {
      Jump: 023983
    }
  } else {
    Jump: 023731
  }
LocOp 023731:
  TraceOperation 023731 (Je [Var (Local 3),Con 19559,Con 13665] (Branch T (Dloc 023759)));
  if (LogOr(Equal(GetLocal(3),19559),Equal(GetLocal(3),13665))) {
    Jump: 023759
  } else {
    TraceOperation 023739 (Call (Floc 023466) [Var (Local 3),Con 8] Sp);
    PushFrame 023739;
    SetLocal 1 GetLocal(3);
    SetLocal 2 8;
    JumpCall: 023466, #actuals: 2
  }
LocReturn 023739:
  PushStack call_result;
  TraceOperation 023746 (Jz (Var Sp) (Branch T (Dloc 023784)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023784
  } else {
    TraceOperation 023749 (Loadw (Var (Global 184)) (Con 0) Sp);
    Let b2 = M[008276];
    Let b3 = M[008277];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),0)];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),0),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 023753 (Jz (Var Sp) (Branch T (Dloc 023784)));
    PopStack popped6;
    if (IsZero(popped6)) {
      Jump: 023784
    } else {
      TraceOperation 023756 (Jz (Var (Local 7)) (Branch F (Dloc 023784)));
      if (IsZero(GetLocal(7))) {
        Jump: 023759
      } else {
        Jump: 023784
      }
    }
  }
LocOp 023759:
  TraceOperation 023759 (Inc (Con 212));
  Let b1 = M[008300];
  Let b2 = M[008301];
  SetByte 008300 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008301 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 023761 (Add (Var (Local 5)) (Con 1) (Local 10));
  SetLocal 10 Add(GetLocal(5),1);
  TraceOperation 023765 (Mul (Var (Local 1)) (Con 2) Sp);
  PushStack Mul(GetLocal(1),2);
  TraceOperation 023769 (Add (Var (Global 194)) (Var Sp) Sp);
  Let b3 = M[008296];
  Let b4 = M[008297];
  PopStack popped5;
  PushStack Add(MakeHiLo(b3,b4),popped5);
  TraceOperation 023773 (Storew (Var (Global 184)) (Var (Local 10)) (Var Sp));
  Let b6 = M[008276];
  Let b7 = M[008277];
  PopStack popped8;
  SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(10))) HiByte(popped8);
  SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(10))),1) LoByte(popped8);
  TraceOperation 023778 (Sub (Var (Local 1)) (Con 2) Sp);
  PushStack Sub(GetLocal(1),2);
  TraceOperation 023782 (Ret (Var Sp));
  PopStack popped9;
  PopFrame return_address_10;
  JumpReturn: return_address_10, result: popped9
LocOp 023784:
  TraceOperation 023784 (Jz (Var (Local 6)) (Branch T (Dloc 023815)));
  if (IsZero(GetLocal(6))) {
    Jump: 023815
  } else {
    TraceOperation 023787 (Loadw (Var (Global 184)) (Con 0) Sp);
    Let b1 = M[008276];
    Let b2 = M[008277];
    Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
    Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 023791 (Jz (Var Sp) (Branch F (Dloc 023815)));
    PopStack popped5;
    if (IsZero(popped5)) {
      TraceOperation 023794 (Sub (Var (Local 1)) (Con 4) (Local 1));
      SetLocal 1 Sub(GetLocal(1),4);
      TraceOperation 023798 (Add (Var (Local 1)) (Con 2) Sp);
      PushStack Add(GetLocal(1),2);
      TraceOperation 023802 (Storew (Var (Global 194)) (Var Sp) (Con 19559));
      Let b6 = M[008296];
      Let b7 = M[008297];
      PopStack popped8;
      SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,popped8)) 76;
      SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,popped8)),1) 103;
      TraceOperation 023808 (Add (Var (Global 196)) (Con 2) (Global 196));
      Let b9 = M[008300];
      Let b10 = M[008301];
      SetByte 008300 HiByte(Add(MakeHiLo(b9,b10),2));
      SetByte 008301 LoByte(Add(MakeHiLo(b9,b10),2));
      TraceOperation 023812 (Jump 023983);
      Jump: 023983
    } else {
      Jump: 023815
    }
  }
LocOp 023815:
  TraceOperation 023815 (Call (Floc 023466) [Var (Local 3),Con 128] Sp);
  PushFrame 023815;
  SetLocal 1 GetLocal(3);
  SetLocal 2 128;
  JumpCall: 023466, #actuals: 2
LocReturn 023815:
  PushStack call_result;
  TraceOperation 023822 (Jz (Var Sp) (Branch T (Dloc 023933)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023933
  } else {
    TraceOperation 023826 (Jg (Var (Global 196)) (Con 0) (Branch F (Dloc 023847)));
    Let b2 = M[008300];
    Let b3 = M[008301];
    if (GreaterThan(MakeHiLo(b2,b3),0)) {
      TraceOperation 023830 (Je [Var (Local 8),Con 17417] (Branch F (Dloc 023847)));
      if (Equal(GetLocal(8),17417)) {
        TraceOperation 023836 (Je [Var (Local 3),Con 13798,Con 17473] (Branch T (Dloc 023847)));
        if (LogOr(Equal(GetLocal(3),13798),Equal(GetLocal(3),17473))) {
          Jump: 023847
        } else {
          TraceOperation 023844 (Jump 023983);
          Jump: 023983
        }
      } else {
        Jump: 023847
      }
    } else {
      Jump: 023847
    }
  }
LocOp 023847:
  TraceOperation 023847 (Call (Floc 023466) [Var (Local 3),Con 32,Con 2] Sp);
  PushFrame 023847;
  SetLocal 1 GetLocal(3);
  SetLocal 2 32;
  SetLocal 3 2;
  JumpCall: 023466, #actuals: 3
LocReturn 023847:
  PushStack call_result;
  TraceOperation 023855 (Jz (Var Sp) (Branch T (Dloc 023885)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023885
  } else {
    TraceOperation 023858 (Jz (Var (Local 8)) (Branch T (Dloc 023885)));
    if (IsZero(GetLocal(8))) {
      Jump: 023885
    } else {
      TraceOperation 023861 (Call (Floc 023466) [Var (Local 8),Con 128] Sp);
      PushFrame 023861;
      SetLocal 1 GetLocal(8);
      SetLocal 2 128;
      JumpCall: 023466, #actuals: 2
    }
  }
LocReturn 023861:
  PushStack call_result;
  TraceOperation 023868 (Jz (Var Sp) (Branch F (Dloc 023983)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 023872 (Call (Floc 023466) [Var (Local 8),Con 32] Sp);
    PushFrame 023872;
    SetLocal 1 GetLocal(8);
    SetLocal 2 32;
    JumpCall: 023466, #actuals: 2
  } else {
    Jump: 023983
  }
LocReturn 023872:
  PushStack call_result;
  TraceOperation 023879 (Jz (Var Sp) (Branch T (Dloc 023885)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023885
  } else {
    TraceOperation 023882 (Jump 023983);
    Jump: 023983
  }
LocOp 023885:
  TraceOperation 023885 (Jz (Var (Local 6)) (Branch F (Dloc 023927)));
  if (IsZero(GetLocal(6))) {
    TraceOperation 023888 (Je [Var (Local 8),Con 14505,Con 15499] (Branch T (Dloc 023927)));
    if (LogOr(Equal(GetLocal(8),14505),Equal(GetLocal(8),15499))) {
      Jump: 023927
    } else {
      TraceOperation 023896 (Je [Var (Local 8),Con 13833,Con 13672] (Branch T (Dloc 023927)));
      if (LogOr(Equal(GetLocal(8),13833),Equal(GetLocal(8),13672))) {
        Jump: 023927
      } else {
        TraceOperation 023904 (Add (Var (Local 5)) (Con 1) (Local 10));
        SetLocal 10 Add(GetLocal(5),1);
        TraceOperation 023908 (Add (Var (Local 1)) (Con 2) Sp);
        PushStack Add(GetLocal(1),2);
        TraceOperation 023912 (Mul (Var Sp) (Con 2) Sp);
        PopStack popped1;
        PushStack Mul(popped1,2);
        TraceOperation 023916 (Add (Var (Global 194)) (Var Sp) Sp);
        Let b2 = M[008296];
        Let b3 = M[008297];
        PopStack popped4;
        PushStack Add(MakeHiLo(b2,b3),popped4);
        TraceOperation 023920 (Storew (Var (Global 184)) (Var (Local 10)) (Var Sp));
        Let b5 = M[008276];
        Let b6 = M[008277];
        PopStack popped7;
        SetByte Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(10))) HiByte(popped7);
        SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(10))),1) LoByte(popped7);
        TraceOperation 023925 (Ret (Var (Local 1)));
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: GetLocal(1)
      }
    }
  } else {
    Jump: 023927
  }
LocOp 023927:
  TraceOperation 023927 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 023930 (Jump 023983);
  Jump: 023983
LocOp 023933:
  TraceOperation 023933 (Call (Floc 023466) [Var (Local 3),Con 32] Sp);
  PushFrame 023933;
  SetLocal 1 GetLocal(3);
  SetLocal 2 32;
  JumpCall: 023466, #actuals: 2
LocReturn 023933:
  PushStack call_result;
  TraceOperation 023940 (Jz (Var Sp) (Branch F (Dloc 023983)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 023943 (Call (Floc 023466) [Var (Local 3),Con 4] Sp);
    PushFrame 023943;
    SetLocal 1 GetLocal(3);
    SetLocal 2 4;
    JumpCall: 023466, #actuals: 2
  } else {
    Jump: 023983
  }
LocReturn 023943:
  PushStack call_result;
  TraceOperation 023950 (Jz (Var Sp) (Branch T (Dloc 023956)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023956
  } else {
    TraceOperation 023953 (Jump 023983);
    Jump: 023983
  }
LocOp 023956:
  TraceOperation 023956 (Call (Floc 023466) [Var (Local 3),Con 8] Sp);
  PushFrame 023956;
  SetLocal 1 GetLocal(3);
  SetLocal 2 8;
  JumpCall: 023466, #actuals: 2
LocReturn 023956:
  PushStack call_result;
  TraceOperation 023963 (Jz (Var Sp) (Branch T (Dloc 023969)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023969
  } else {
    TraceOperation 023966 (Jump 023983);
    Jump: 023983
  }
LocOp 023969:
  TraceOperation 023969 (Call (Floc 024824) [Var (Local 1)] Sp);
  PushFrame 023969;
  SetLocal 1 GetLocal(1);
  JumpCall: 024824, #actuals: 1
LocReturn 023969:
  PushStack call_result;
  TraceOperation 023975 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 023976:
  TraceOperation 023976 (Call (Floc 024762) [Var (Local 1)] Sp);
  PushFrame 023976;
  SetLocal 1 GetLocal(1);
  JumpCall: 024762, #actuals: 1
LocReturn 023976:
  PushStack call_result;
  TraceOperation 023982 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 023983:
  TraceOperation 023983 (Store (Con 9) (Var (Local 3)));
  SetLocal 9 GetLocal(3);
  TraceOperation 023986 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  TraceOperation 023989 (Add (Var (Local 1)) (Con 2) (Local 1));
  SetLocal 1 Add(GetLocal(1),2);
  TraceOperation 023993 (Jump 023615);
  Jump: 023615
--[35]--------------------------------------------------
LocRoutine 023996:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 024011
LocOp 024011:
  TraceOperation 024011 (Mul (Var (Local 1)) (Con 2) Sp);
  PushStack Mul(GetLocal(1),2);
  TraceOperation 024015 (Add (Var (Global 194)) (Var Sp) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  PopStack popped3;
  PushStack Add(MakeHiLo(b1,b2),popped3);
  TraceOperation 024019 (Loadb (Var Sp) (Con 2) (Local 2));
  PopStack popped4;
  Let b5 = M[Offset(Address(popped4),2)];
  SetLocal 2 Widen(b5);
  TraceOperation 024023 (Mul (Var (Local 1)) (Con 2) Sp);
  PushStack Mul(GetLocal(1),2);
  TraceOperation 024027 (Add (Var (Global 194)) (Var Sp) Sp);
  Let b6 = M[008296];
  Let b7 = M[008297];
  PopStack popped8;
  PushStack Add(MakeHiLo(b6,b7),popped8);
  TraceOperation 024031 (Loadb (Var Sp) (Con 3) (Local 3));
  PopStack popped9;
  Let b10 = M[Offset(Address(popped9),3)];
  SetLocal 3 Widen(b10);
  Jump: 024035
LocOp 024035:
  TraceOperation 024035 (Dec_chk (Con 2) (Con 0) (Branch F (Dloc 024042)));
  if (LessThanEqual(GetLocal(2),0)) {
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 024039 (Jump 024090);
    Jump: 024090
  } else {
    SetLocal 2 Sub(GetLocal(2),1);
    Jump: 024042
  }
LocOp 024042:
  TraceOperation 024042 (Loadb (Var (Global 193)) (Var (Local 3)) (Local 4));
  Let b1 = M[008294];
  Let b2 = M[008295];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),GetLocal(3))];
  SetLocal 4 Widen(b3);
  TraceOperation 024046 (Je [Var (Local 4),Con 58] (Branch F (Dloc 024059)));
  if (Equal(GetLocal(4),58)) {
    TraceOperation 024050 (Store (Con 6) (Var (Local 5)));
    SetLocal 6 GetLocal(5);
    TraceOperation 024053 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    TraceOperation 024056 (Jump 024085);
    Jump: 024085
  } else {
    Jump: 024059
  }
LocOp 024059:
  TraceOperation 024059 (Jg (Var (Local 5)) (Con 10000) (Branch T Dfalse));
  if (GreaterThan(GetLocal(5),10000)) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 024065 (Jl (Var (Local 4)) (Con 58) (Branch F Dfalse));
    if (LessThan(GetLocal(4),58)) {
      TraceOperation 024069 (Jg (Var (Local 4)) (Con 47) (Branch F Dfalse));
      if (GreaterThan(GetLocal(4),47)) {
        TraceOperation 024073 (Mul (Var (Local 5)) (Con 10) (Local 7));
        SetLocal 7 Mul(GetLocal(5),10);
        TraceOperation 024077 (Sub (Var (Local 4)) (Con 48) Sp);
        PushStack Sub(GetLocal(4),48);
        TraceOperation 024081 (Add (Var (Local 7)) (Var Sp) (Local 5));
        PopStack popped2;
        SetLocal 5 Add(GetLocal(7),popped2);
        Jump: 024085
      } else {
        PopFrame return_address_3;
        JumpReturn: return_address_3, result: 0
      }
    } else {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  }
LocOp 024085:
  TraceOperation 024085 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 024087 (Jump 024035);
  Jump: 024035
LocOp 024090:
  TraceOperation 024090 (Storew (Var (Global 194)) (Var (Local 1)) (Con 16563));
  Let b1 = M[008296];
  Let b2 = M[008297];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))) 64;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1) 179;
  TraceOperation 024096 (Jg (Var (Local 5)) (Con 1000) (Branch T Dfalse));
  if (GreaterThan(GetLocal(5),1000)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 024102 (Jz (Var (Local 6)) (Branch T (Dloc 024128)));
    if (IsZero(GetLocal(6))) {
      Jump: 024128
    } else {
      TraceOperation 024105 (Jl (Var (Local 6)) (Con 8) (Branch F (Dloc 024116)));
      if (LessThan(GetLocal(6),8)) {
        TraceOperation 024109 (Add (Var (Local 6)) (Con 12) (Local 6));
        SetLocal 6 Add(GetLocal(6),12);
        TraceOperation 024113 (Jump 024120);
        Jump: 024120
      } else {
        Jump: 024116
      }
    }
  }
LocOp 024116:
  TraceOperation 024116 (Jg (Var (Local 6)) (Con 23) (Branch T Dfalse));
  if (GreaterThan(GetLocal(6),23)) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    Jump: 024120
  }
LocOp 024120:
  TraceOperation 024120 (Mul (Var (Local 6)) (Con 60) Sp);
  PushStack Mul(GetLocal(6),60);
  TraceOperation 024124 (Add (Var (Local 5)) (Var Sp) (Local 5));
  PopStack popped1;
  SetLocal 5 Add(GetLocal(5),popped1);
  Jump: 024128
LocOp 024128:
  TraceOperation 024128 (Store (Con 190) (Var (Local 5)));
  SetByte 008256 HiByte(GetLocal(5));
  SetByte 008257 LoByte(GetLocal(5));
  TraceOperation 024131 (Ret (Con 16563));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 16563
--[36]--------------------------------------------------
LocRoutine 024134:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 -1;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 024151
LocOp 024151:
  TraceOperation 024151 (Store (Con 205) (Con 0));
  SetByte 008286 0;
  SetByte 008287 0;
  TraceOperation 024154 (Loadw (Var (Global 184)) (Con 1) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024158 (Loadw (Var Sp) (Con 0) (Local 7));
  PopStack popped5;
  Let b6 = M[Offset(Address(popped5),0)];
  Let b7 = M[Offset(Offset(Address(popped5),0),1)];
  SetLocal 7 MakeHiLo(b6,b7);
  TraceOperation 024162 (Call (Floc 023466) [Var (Local 7),Con 32,Con 2] Sp);
  PushFrame 024162;
  SetLocal 1 GetLocal(7);
  SetLocal 2 32;
  SetLocal 3 2;
  JumpCall: 023466, #actuals: 3
LocReturn 024162:
  PushStack call_result;
  TraceOperation 024170 (Jz (Var Sp) (Branch T (Dloc 024179)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 024179
  } else {
    TraceOperation 024173 (Store (Con 6) (Con 1));
    SetLocal 6 1;
    TraceOperation 024176 (Jump 024224);
    Jump: 024224
  }
LocOp 024179:
  TraceOperation 024179 (Call (Floc 023466) [Var (Local 7),Con 128,Con 0] Sp);
  PushFrame 024179;
  SetLocal 1 GetLocal(7);
  SetLocal 2 128;
  SetLocal 3 0;
  JumpCall: 023466, #actuals: 3
LocReturn 024179:
  PushStack call_result;
  TraceOperation 024187 (Jz (Var Sp) (Branch T (Dloc 024224)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 024224
  } else {
    TraceOperation 024190 (Jz (Var (Global 180)) (Branch F (Dloc 024224)));
    Let b2 = M[008268];
    Let b3 = M[008269];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 024193 (Storew (Var (Global 184)) (Con 0) (Con 0));
      Let b4 = M[008276];
      Let b5 = M[008277];
      SetByte Offset(Address(MakeHiLo(b4,b5)),0) 0;
      SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),0),1) 0;
      TraceOperation 024198 (Storew (Var (Global 184)) (Con 1) (Con 0));
      Let b6 = M[008276];
      Let b7 = M[008277];
      SetByte Offset(Address(MakeHiLo(b6,b7)),2) 0;
      SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),2),1) 0;
      TraceOperation 024203 (Add (Var (Global 194)) (Con 2) Sp);
      Let b8 = M[008296];
      Let b9 = M[008297];
      PushStack Add(MakeHiLo(b8,b9),2);
      TraceOperation 024207 (Storew (Var (Global 184)) (Con 6) (Var Sp));
      Let b10 = M[008276];
      Let b11 = M[008277];
      PopStack popped12;
      SetByte Offset(Address(MakeHiLo(b10,b11)),12) HiByte(popped12);
      SetByte Offset(Offset(Address(MakeHiLo(b10,b11)),12),1) LoByte(popped12);
      TraceOperation 024212 (Add (Var (Global 194)) (Con 6) Sp);
      Let b13 = M[008296];
      Let b14 = M[008297];
      PushStack Add(MakeHiLo(b13,b14),6);
      TraceOperation 024216 (Storew (Var (Global 184)) (Con 7) (Var Sp));
      Let b15 = M[008276];
      Let b16 = M[008277];
      PopStack popped17;
      SetByte Offset(Address(MakeHiLo(b15,b16)),14) HiByte(popped17);
      SetByte Offset(Offset(Address(MakeHiLo(b15,b16)),14),1) LoByte(popped17);
      TraceOperation 024221 (Store (Con 196) (Con 1));
      SetByte 008268 0;
      SetByte 008269 1;
      Jump: 024224
    } else {
      Jump: 024224
    }
  }
LocOp 024224:
  TraceOperation 024224 (Loadw (Var (Global 184)) (Con 0) (Local 3));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 024228 (Jz (Var (Local 3)) (Branch T (Dloc 024242)));
  if (IsZero(GetLocal(3))) {
    Jump: 024242
  } else {
    TraceOperation 024231 (Jz (Var (Local 6)) (Branch F (Dloc 024242)));
    if (IsZero(GetLocal(6))) {
      TraceOperation 024234 (Loadw (Var (Global 183)) (Con 0) Sp);
      Let b5 = M[008274];
      Let b6 = M[008275];
      Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),0)];
      Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),0),1)];
      PushStack MakeHiLo(b7,b8);
      TraceOperation 024238 (Je [Var (Local 3),Var Sp] (Branch F Dfalse));
      PopStack popped9;
      if (Equal(GetLocal(3),popped9)) {
        Jump: 024242
      } else {
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 0
      }
    } else {
      Jump: 024242
    }
  }
LocOp 024242:
  TraceOperation 024242 (Je [Var (Global 180),Con 2] (Branch T Dfalse));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (Equal(MakeHiLo(b1,b2),2)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 024246 (Loadw (Var (Global 183)) (Con 6) Sp);
    Let b4 = M[008274];
    Let b5 = M[008275];
    Let b6 = M[Offset(Address(MakeHiLo(b4,b5)),12)];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b4,b5)),12),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 024250 (Je [Var Sp,Con 1] (Branch F (Dloc 024328)));
    PopStack popped8;
    if (Equal(popped8,1)) {
      TraceOperation 024255 (Loadw (Var (Global 184)) (Con 2) (Local 2));
      Let b9 = M[008276];
      Let b10 = M[008277];
      Let b11 = M[Offset(Address(MakeHiLo(b9,b10)),4)];
      Let b12 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),4),1)];
      SetLocal 2 MakeHiLo(b11,b12);
      TraceOperation 024259 (Loadw (Var (Global 183)) (Con 2) Sp);
      Let b13 = M[008274];
      Let b14 = M[008275];
      Let b15 = M[Offset(Address(MakeHiLo(b13,b14)),4)];
      Let b16 = M[Offset(Offset(Address(MakeHiLo(b13,b14)),4),1)];
      PushStack MakeHiLo(b15,b16);
      TraceOperation 024263 (Je [Var (Local 2),Var Sp] (Branch T (Dloc 024270)));
      PopStack popped17;
      if (Equal(GetLocal(2),popped17)) {
        Jump: 024270
      } else {
        TraceOperation 024267 (Jz (Var (Local 2)) (Branch F Dfalse));
        if (IsZero(GetLocal(2))) {
          Jump: 024270
        } else {
          PopFrame return_address_18;
          JumpReturn: return_address_18, result: 0
        }
      }
    } else {
      Jump: 024328
    }
  }
LocOp 024270:
  TraceOperation 024270 (Jz (Var (Local 6)) (Branch T (Dloc 024307)));
  if (IsZero(GetLocal(6))) {
    Jump: 024307
  } else {
    TraceOperation 024273 (Add (Var (Global 194)) (Con 2) Sp);
    Let b1 = M[008296];
    Let b2 = M[008297];
    PushStack Add(MakeHiLo(b1,b2),2);
    TraceOperation 024277 (Storew (Var (Global 183)) (Con 6) (Var Sp));
    Let b3 = M[008274];
    Let b4 = M[008275];
    PopStack popped5;
    SetByte Offset(Address(MakeHiLo(b3,b4)),12) HiByte(popped5);
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),12),1) LoByte(popped5);
    TraceOperation 024282 (Loadw (Var (Global 184)) (Con 7) Sp);
    Let b6 = M[008276];
    Let b7 = M[008277];
    Let b8 = M[Offset(Address(MakeHiLo(b6,b7)),14)];
    Let b9 = M[Offset(Offset(Address(MakeHiLo(b6,b7)),14),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 024286 (Jz (Var Sp) (Branch F (Dloc 024298)));
    PopStack popped10;
    if (IsZero(popped10)) {
      TraceOperation 024289 (Add (Var (Global 194)) (Con 6) Sp);
      Let b11 = M[008296];
      Let b12 = M[008297];
      PushStack Add(MakeHiLo(b11,b12),6);
      TraceOperation 024293 (Storew (Var (Global 184)) (Con 7) (Var Sp));
      Let b13 = M[008276];
      Let b14 = M[008277];
      PopStack popped15;
      SetByte Offset(Address(MakeHiLo(b13,b14)),14) HiByte(popped15);
      SetByte Offset(Offset(Address(MakeHiLo(b13,b14)),14),1) LoByte(popped15);
      Jump: 024298
    } else {
      Jump: 024298
    }
  }
LocOp 024298:
  TraceOperation 024298 (Jz (Var (Global 180)) (Branch F (Dloc 024316)));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 024301 (Store (Con 196) (Con 1));
    SetByte 008268 0;
    SetByte 008269 1;
    TraceOperation 024304 (Jump 024316);
    Jump: 024316
  } else {
    Jump: 024316
  }
LocOp 024307:
  TraceOperation 024307 (Loadw (Var (Global 184)) (Con 6) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024311 (Storew (Var (Global 183)) (Con 6) (Var Sp));
  Let b5 = M[008274];
  Let b6 = M[008275];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),12) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),12),1) LoByte(popped7);
  Jump: 024316
LocOp 024316:
  TraceOperation 024316 (Loadw (Var (Global 184)) (Con 7) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),14)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),14),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024320 (Storew (Var (Global 183)) (Con 7) (Var Sp));
  Let b5 = M[008274];
  Let b6 = M[008275];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),14) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),14),1) LoByte(popped7);
  TraceOperation 024325 (Jump 024561);
  Jump: 024561
LocOp 024328:
  TraceOperation 024328 (Loadw (Var (Global 183)) (Con 8) Sp);
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024332 (Je [Var Sp,Con 1] (Branch F (Dloc 024404)));
  PopStack popped5;
  if (Equal(popped5,1)) {
    TraceOperation 024337 (Loadw (Var (Global 184)) (Con 2) (Local 2));
    Let b6 = M[008276];
    Let b7 = M[008277];
    Let b8 = M[Offset(Address(MakeHiLo(b6,b7)),4)];
    Let b9 = M[Offset(Offset(Address(MakeHiLo(b6,b7)),4),1)];
    SetLocal 2 MakeHiLo(b8,b9);
    TraceOperation 024341 (Loadw (Var (Global 183)) (Con 4) Sp);
    Let b10 = M[008274];
    Let b11 = M[008275];
    Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),8)];
    Let b13 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),8),1)];
    PushStack MakeHiLo(b12,b13);
    TraceOperation 024345 (Je [Var (Local 2),Var Sp] (Branch T (Dloc 024352)));
    PopStack popped14;
    if (Equal(GetLocal(2),popped14)) {
      Jump: 024352
    } else {
      TraceOperation 024349 (Jz (Var (Local 2)) (Branch F Dfalse));
      if (IsZero(GetLocal(2))) {
        Jump: 024352
      } else {
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 0
      }
    }
  } else {
    Jump: 024404
  }
LocOp 024352:
  TraceOperation 024352 (Jz (Var (Local 6)) (Branch T (Dloc 024380)));
  if (IsZero(GetLocal(6))) {
    Jump: 024380
  } else {
    TraceOperation 024355 (Add (Var (Global 194)) (Con 2) Sp);
    Let b1 = M[008296];
    Let b2 = M[008297];
    PushStack Add(MakeHiLo(b1,b2),2);
    TraceOperation 024359 (Storew (Var (Global 184)) (Con 6) (Var Sp));
    Let b3 = M[008276];
    Let b4 = M[008277];
    PopStack popped5;
    SetByte Offset(Address(MakeHiLo(b3,b4)),12) HiByte(popped5);
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),12),1) LoByte(popped5);
    TraceOperation 024364 (Loadw (Var (Global 184)) (Con 7) Sp);
    Let b6 = M[008276];
    Let b7 = M[008277];
    Let b8 = M[Offset(Address(MakeHiLo(b6,b7)),14)];
    Let b9 = M[Offset(Offset(Address(MakeHiLo(b6,b7)),14),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 024368 (Jz (Var Sp) (Branch F (Dloc 024380)));
    PopStack popped10;
    if (IsZero(popped10)) {
      TraceOperation 024371 (Add (Var (Global 194)) (Con 6) Sp);
      Let b11 = M[008296];
      Let b12 = M[008297];
      PushStack Add(MakeHiLo(b11,b12),6);
      TraceOperation 024375 (Storew (Var (Global 184)) (Con 7) (Var Sp));
      Let b13 = M[008276];
      Let b14 = M[008277];
      PopStack popped15;
      SetByte Offset(Address(MakeHiLo(b13,b14)),14) HiByte(popped15);
      SetByte Offset(Offset(Address(MakeHiLo(b13,b14)),14),1) LoByte(popped15);
      Jump: 024380
    } else {
      Jump: 024380
    }
  }
LocOp 024380:
  TraceOperation 024380 (Loadw (Var (Global 184)) (Con 6) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024384 (Storew (Var (Global 183)) (Con 8) (Var Sp));
  Let b5 = M[008274];
  Let b6 = M[008275];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),16) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),16),1) LoByte(popped7);
  TraceOperation 024389 (Loadw (Var (Global 184)) (Con 7) Sp);
  Let b8 = M[008276];
  Let b9 = M[008277];
  Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),14)];
  Let b11 = M[Offset(Offset(Address(MakeHiLo(b8,b9)),14),1)];
  PushStack MakeHiLo(b10,b11);
  TraceOperation 024393 (Storew (Var (Global 183)) (Con 9) (Var Sp));
  Let b12 = M[008274];
  Let b13 = M[008275];
  PopStack popped14;
  SetByte Offset(Address(MakeHiLo(b12,b13)),18) HiByte(popped14);
  SetByte Offset(Offset(Address(MakeHiLo(b12,b13)),18),1) LoByte(popped14);
  TraceOperation 024398 (Store (Con 196) (Con 2));
  SetByte 008268 0;
  SetByte 008269 2;
  TraceOperation 024401 (Jump 024561);
  Jump: 024561
LocOp 024404:
  TraceOperation 024404 (Jz (Var (Global 187)) (Branch T (Dloc 024561)));
  Let b1 = M[008282];
  Let b2 = M[008283];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 024561
  } else {
    TraceOperation 024408 (Je [Var (Global 180),Con 1] (Branch T (Dloc 024419)));
    Let b3 = M[008268];
    Let b4 = M[008269];
    if (Equal(MakeHiLo(b3,b4),1)) {
      Jump: 024419
    } else {
      TraceOperation 024412 (Jz (Var (Local 6)) (Branch F (Dloc 024419)));
      if (IsZero(GetLocal(6))) {
        TraceOperation 024415 (Store (Con 203) (Con 0));
        SetByte 008282 0;
        SetByte 008283 0;
        TraceOperation 024418 Rfalse;
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 0
      } else {
        Jump: 024419
      }
    }
  }
LocOp 024419:
  TraceOperation 024419 (Loadw (Var (Global 184)) (Con 6) (Local 4));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  SetLocal 4 MakeHiLo(b3,b4);
  TraceOperation 024423 (Jz (Var (Local 6)) (Branch T (Dloc 024433)));
  if (IsZero(GetLocal(6))) {
    Jump: 024433
  } else {
    TraceOperation 024426 (Add (Var (Global 194)) (Con 2) (Local 4));
    Let b5 = M[008296];
    Let b6 = M[008297];
    SetLocal 4 Add(MakeHiLo(b5,b6),2);
    TraceOperation 024430 (Store (Con 6) (Con 0));
    SetLocal 6 0;
    Jump: 024433
  }
LocOp 024433:
  TraceOperation 024433 (Loadw (Var (Global 184)) (Con 7) (Local 5));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),14)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),14),1)];
  SetLocal 5 MakeHiLo(b3,b4);
  Jump: 024437
LocOp 024437:
  TraceOperation 024437 (Loadw (Var (Local 4)) (Con 0) (Local 7));
  Let b1 = M[Offset(Address(GetLocal(4)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(4)),0),1)];
  SetLocal 7 MakeHiLo(b1,b2);
  TraceOperation 024441 (Je [Var (Local 4),Var (Local 5)] (Branch F (Dloc 024461)));
  if (Equal(GetLocal(4),GetLocal(5))) {
    TraceOperation 024445 (Jz (Var (Local 6)) (Branch T (Dloc 024457)));
    if (IsZero(GetLocal(6))) {
      Jump: 024457
    } else {
      TraceOperation 024448 (Call (Floc 024618) [Var (Local 6)] Sp);
      PushFrame 024448;
      SetLocal 1 GetLocal(6);
      JumpCall: 024618, #actuals: 1
    }
  } else {
    Jump: 024461
  }
LocReturn 024448:
  PushStack call_result;
  TraceOperation 024454 (Jump 024561);
  Jump: 024561
LocOp 024457:
  TraceOperation 024457 (Store (Con 203) (Con 0));
  SetByte 008282 0;
  SetByte 008283 0;
  TraceOperation 024460 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 024461:
  TraceOperation 024461 (Jz (Var (Local 6)) (Branch F (Dloc 024486)));
  if (IsZero(GetLocal(6))) {
    TraceOperation 024464 (Loadb (Var (Local 7)) (Con 4) Sp);
    Let b1 = M[Offset(Address(GetLocal(7)),4)];
    PushStack Widen(b1);
    TraceOperation 024468 (Test (Var Sp) (Con 32) (Branch T (Dloc 024480)));
    PopStack popped2;
    if (Equal(And(popped2,32),32)) {
      Jump: 024480
    } else {
      TraceOperation 024472 (Je [Var (Local 7),Con 13798,Con 17473] (Branch F (Dloc 024486)));
      if (LogOr(Equal(GetLocal(7),13798),Equal(GetLocal(7),17473))) {
        Jump: 024480
      } else {
        Jump: 024486
      }
    }
  } else {
    Jump: 024486
  }
LocOp 024480:
  TraceOperation 024480 (Store (Con 6) (Var (Local 7)));
  SetLocal 6 GetLocal(7);
  TraceOperation 024483 (Jump 024530);
  Jump: 024530
LocOp 024486:
  TraceOperation 024486 (Je [Var (Local 7),Con 17473] (Branch F (Dloc 024501)));
  if (Equal(GetLocal(7),17473)) {
    TraceOperation 024492 (Call (Floc 024618) [Var (Local 6)] Sp);
    PushFrame 024492;
    SetLocal 1 GetLocal(6);
    JumpCall: 024618, #actuals: 1
  } else {
    Jump: 024501
  }
LocReturn 024492:
  PushStack call_result;
  TraceOperation 024498 (Jump 024561);
  Jump: 024561
LocOp 024501:
  TraceOperation 024501 (Loadb (Var (Local 7)) (Con 4) Sp);
  Let b1 = M[Offset(Address(GetLocal(7)),4)];
  PushStack Widen(b1);
  TraceOperation 024505 (Test (Var Sp) (Con 128) (Branch F (Dloc 024530)));
  PopStack popped2;
  if (Equal(And(popped2,128),128)) {
    TraceOperation 024509 (Je [Var (Local 7),Var (Global 186)] (Branch F (Dloc 024522)));
    Let b3 = M[008280];
    Let b4 = M[008281];
    if (Equal(GetLocal(7),MakeHiLo(b3,b4))) {
      TraceOperation 024513 (Call (Floc 024618) [Var (Local 6)] Sp);
      PushFrame 024513;
      SetLocal 1 GetLocal(6);
      JumpCall: 024618, #actuals: 1
    } else {
      Jump: 024522
    }
  } else {
    Jump: 024530
  }
LocReturn 024513:
  PushStack call_result;
  TraceOperation 024519 (Jump 024561);
  Jump: 024561
LocOp 024522:
  TraceOperation 024522 (Call (Floc 024694) [] Sp);
  PushFrame 024522;
  JumpCall: 024694, #actuals: 0
LocReturn 024522:
  PushStack call_result;
  TraceOperation 024527 (Jump 024561);
  Jump: 024561
LocOp 024530:
  TraceOperation 024530 (Add (Var (Local 4)) (Con 4) (Local 4));
  SetLocal 4 Add(GetLocal(4),4);
  TraceOperation 024534 (Jz (Var (Local 5)) (Branch F (Dloc 024437)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 024538 (Store (Con 5) (Var (Local 4)));
    SetLocal 5 GetLocal(4);
    TraceOperation 024541 (Store (Con 196) (Con 1));
    SetByte 008268 0;
    SetByte 008269 1;
    TraceOperation 024544 (Sub (Var (Local 4)) (Con 4) Sp);
    PushStack Sub(GetLocal(4),4);
    TraceOperation 024548 (Storew (Var (Global 184)) (Con 6) (Var Sp));
    Let b1 = M[008276];
    Let b2 = M[008277];
    PopStack popped3;
    SetByte Offset(Address(MakeHiLo(b1,b2)),12) HiByte(popped3);
    SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),12),1) LoByte(popped3);
    TraceOperation 024553 (Storew (Var (Global 184)) (Con 7) (Var (Local 4)));
    Let b4 = M[008276];
    Let b5 = M[008277];
    SetByte Offset(Address(MakeHiLo(b4,b5)),14) HiByte(GetLocal(4));
    SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),14),1) LoByte(GetLocal(4));
    TraceOperation 024558 (Jump 024437);
    Jump: 024437
  } else {
    Jump: 024437
  }
LocOp 024561:
  TraceOperation 024561 (Loadw (Var (Global 181)) (Con 0) Sp);
  Let b1 = M[008270];
  Let b2 = M[008271];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024565 (Storew (Var (Global 182)) (Con 0) (Var Sp));
  Let b5 = M[008272];
  Let b6 = M[008273];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),0) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),0),1) LoByte(popped7);
  TraceOperation 024570 (Loadb (Var (Global 181)) (Con 2) Sp);
  Let b8 = M[008270];
  Let b9 = M[008271];
  Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),2)];
  PushStack Widen(b10);
  TraceOperation 024574 (Storeb (Var (Global 182)) (Con 2) (Var Sp));
  Let b11 = M[008272];
  Let b12 = M[008273];
  PopStack popped13;
  SetByte Offset(Address(MakeHiLo(b11,b12)),2) LoByte(popped13);
  TraceOperation 024579 (Loadb (Var (Global 181)) (Con 3) Sp);
  Let b14 = M[008270];
  Let b15 = M[008271];
  Let b16 = M[Offset(Address(MakeHiLo(b14,b15)),3)];
  PushStack Widen(b16);
  TraceOperation 024583 (Storeb (Var (Global 182)) (Con 3) (Var Sp));
  Let b17 = M[008272];
  Let b18 = M[008273];
  PopStack popped19;
  SetByte Offset(Address(MakeHiLo(b17,b18)),3) LoByte(popped19);
  TraceOperation 024588 (Storew (Var (Global 183)) (Con 1) (Var (Global 182)));
  Let b20 = M[008274];
  Let b21 = M[008275];
  Let b22 = M[008272];
  Let b23 = M[008273];
  SetByte Offset(Address(MakeHiLo(b20,b21)),2) b22;
  SetByte Offset(Offset(Address(MakeHiLo(b20,b21)),2),1) b23;
  TraceOperation 024593 (Storeb (Var (Global 182)) (Con 2) (Con 0));
  Let b24 = M[008272];
  Let b25 = M[008273];
  SetByte Offset(Address(MakeHiLo(b24,b25)),2) 0;
  Jump: 024598
LocOp 024598:
  TraceOperation 024598 (Inc_chk (Con 1) (Con 9) (Branch F (Dloc 024606)));
  SetLocal 1 Add(GetLocal(1),1);
  if (GreaterThanEqual(GetLocal(1),9)) {
    TraceOperation 024602 (Store (Con 204) (Con 1));
    SetByte 008284 0;
    SetByte 008285 1;
    TraceOperation 024605 Rtrue;
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    Jump: 024606
  }
LocOp 024606:
  TraceOperation 024606 (Loadw (Var (Global 183)) (Var (Local 1)) Sp);
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024610 (Storew (Var (Global 184)) (Var (Local 1)) (Var Sp));
  Let b5 = M[008276];
  Let b6 = M[008277];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(1))) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(1))),1) LoByte(popped7);
  TraceOperation 024615 (Jump 024598);
  Jump: 024598
--[37]--------------------------------------------------
LocRoutine 024618:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 024621
LocOp 024621:
  TraceOperation 024621 (Loadw (Var (Global 183)) (Con 0) Sp);
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024625 (Storew (Var (Global 184)) (Con 0) (Var Sp));
  Let b5 = M[008276];
  Let b6 = M[008277];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),0) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),0),1) LoByte(popped7);
  TraceOperation 024630 (Je [Var (Local 1),Con 19503] (Branch F (Dloc 024644)));
  if (Equal(GetLocal(1),19503)) {
    TraceOperation 024636 (Call (Floc 024694) [] Sp);
    PushFrame 024636;
    JumpCall: 024694, #actuals: 0
  } else {
    Jump: 024644
  }
LocReturn 024636:
  PushStack call_result;
  TraceOperation 024641 (Jump 024680);
  Jump: 024680
LocOp 024644:
  TraceOperation 024644 (Storew (Var (Global 197)) (Con 0) (Var (Global 187)));
  Let b1 = M[008302];
  Let b2 = M[008303];
  Let b3 = M[008282];
  Let b4 = M[008283];
  SetByte Offset(Address(MakeHiLo(b1,b2)),0) b3;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),0),1) b4;
  TraceOperation 024649 (Add (Var (Global 187)) (Con 1) Sp);
  Let b5 = M[008282];
  Let b6 = M[008283];
  PushStack Add(MakeHiLo(b5,b6),1);
  TraceOperation 024653 (Storew (Var (Global 197)) (Con 1) (Var Sp));
  Let b7 = M[008302];
  Let b8 = M[008303];
  PopStack popped9;
  SetByte Offset(Address(MakeHiLo(b7,b8)),2) HiByte(popped9);
  SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),2),1) LoByte(popped9);
  TraceOperation 024658 (Storew (Var (Global 197)) (Con 2) (Var (Global 187)));
  Let b10 = M[008302];
  Let b11 = M[008303];
  Let b12 = M[008282];
  Let b13 = M[008283];
  SetByte Offset(Address(MakeHiLo(b10,b11)),4) b12;
  SetByte Offset(Offset(Address(MakeHiLo(b10,b11)),4),1) b13;
  TraceOperation 024663 (Add (Var (Global 187)) (Con 1) Sp);
  Let b14 = M[008282];
  Let b15 = M[008283];
  PushStack Add(MakeHiLo(b14,b15),1);
  TraceOperation 024667 (Storew (Var (Global 197)) (Con 3) (Var Sp));
  Let b16 = M[008302];
  Let b17 = M[008303];
  PopStack popped18;
  SetByte Offset(Address(MakeHiLo(b16,b17)),6) HiByte(popped18);
  SetByte Offset(Offset(Address(MakeHiLo(b16,b17)),6),1) LoByte(popped18);
  TraceOperation 024672 (Call (Floc 025860) [Var (Global 183),Var (Global 183),Var (Local 1)] Sp);
  Let b19 = M[008274];
  Let b20 = M[008275];
  Let b21 = M[008274];
  Let b22 = M[008275];
  PushFrame 024672;
  SetLocal 1 MakeHiLo(b19,b20);
  SetLocal 2 MakeHiLo(b21,b22);
  SetLocal 3 GetLocal(1);
  JumpCall: 025860, #actuals: 3
LocReturn 024672:
  PushStack call_result;
  Jump: 024680
LocOp 024680:
  TraceOperation 024680 (Loadw (Var (Global 183)) (Con 8) Sp);
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024684 (Jz (Var Sp) (Branch T (Dloc 024690)));
  PopStack popped5;
  if (IsZero(popped5)) {
    Jump: 024690
  } else {
    TraceOperation 024687 (Store (Con 196) (Con 2));
    SetByte 008268 0;
    SetByte 008269 2;
    Jump: 024690
  }
LocOp 024690:
  TraceOperation 024690 (Store (Con 203) (Con 0));
  SetByte 008282 0;
  SetByte 008283 0;
  TraceOperation 024693 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[38]--------------------------------------------------
LocRoutine 024694:
  MakeRoutineFrame 0;
  Jump: 024695
LocOp 024695:
  TraceOperation 024695 (Storew (Var (Global 197)) (Con 0) (Con 6));
  Let b1 = M[008302];
  Let b2 = M[008303];
  SetByte Offset(Address(MakeHiLo(b1,b2)),0) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),0),1) 6;
  TraceOperation 024700 (Storew (Var (Global 197)) (Con 1) (Con 7));
  Let b3 = M[008302];
  Let b4 = M[008303];
  SetByte Offset(Address(MakeHiLo(b3,b4)),2) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),2),1) 7;
  TraceOperation 024705 (Storew (Var (Global 197)) (Con 2) (Var (Global 187)));
  Let b5 = M[008302];
  Let b6 = M[008303];
  Let b7 = M[008282];
  Let b8 = M[008283];
  SetByte Offset(Address(MakeHiLo(b5,b6)),4) b7;
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),4),1) b8;
  TraceOperation 024710 (Add (Var (Global 187)) (Con 1) Sp);
  Let b9 = M[008282];
  Let b10 = M[008283];
  PushStack Add(MakeHiLo(b9,b10),1);
  TraceOperation 024714 (Storew (Var (Global 197)) (Con 3) (Var Sp));
  Let b11 = M[008302];
  Let b12 = M[008303];
  PopStack popped13;
  SetByte Offset(Address(MakeHiLo(b11,b12)),6) HiByte(popped13);
  SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),6),1) LoByte(popped13);
  TraceOperation 024719 (Call (Floc 025860) [Var (Global 184),Var (Global 183)] Sp);
  Let b14 = M[008276];
  Let b15 = M[008277];
  Let b16 = M[008274];
  Let b17 = M[008275];
  PushFrame 024719;
  SetLocal 1 MakeHiLo(b14,b15);
  SetLocal 2 MakeHiLo(b16,b17);
  JumpCall: 025860, #actuals: 2
LocReturn 024719:
  PushStack call_result;
  TraceOperation 024726 (Loadw (Var (Global 183)) (Con 8) Sp);
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024730 (Jz (Var Sp) (Branch T (Dloc 024736)));
  PopStack popped5;
  if (IsZero(popped5)) {
    Jump: 024736
  } else {
    TraceOperation 024733 (Store (Con 196) (Con 2));
    SetByte 008268 0;
    SetByte 008269 2;
    Jump: 024736
  }
LocOp 024736:
  TraceOperation 024736 (Store (Con 203) (Con 0));
  SetByte 008282 0;
  SetByte 008283 0;
  TraceOperation 024739 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[39]--------------------------------------------------
LocRoutine 024740:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 024745
LocOp 024745:
  TraceOperation 024745 (Dec_chk (Con 1) (Con 0) (Branch T Dtrue));
  if (LessThanEqual(GetLocal(1),0)) {
    SetLocal 1 Sub(GetLocal(1),1);
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    SetLocal 1 Sub(GetLocal(1),1);
    TraceOperation 024749 (Loadb (Var (Global 193)) (Var (Local 2)) Sp);
    Let b2 = M[008294];
    Let b3 = M[008295];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),GetLocal(2))];
    PushStack Widen(b4);
    TraceOperation 024753 (Print_char (Var Sp));
    PopStack popped5;
    GamePrint SingleChar(popped5);
    TraceOperation 024756 (Inc (Con 2));
    SetLocal 2 Add(GetLocal(2),1);
    TraceOperation 024758 (Jump 024745);
    Jump: 024745
  }
--[40]--------------------------------------------------
LocRoutine 024762:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 024769
LocOp 024769:
  TraceOperation 024769 (Print "I don't know the word \"");
  GamePrint "I don't know the word \"";
  TraceOperation 024782 (Mul (Var (Local 1)) (Con 2) (Local 2));
  SetLocal 2 Mul(GetLocal(1),2);
  TraceOperation 024786 (Add (Var (Global 194)) (Var (Local 2)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  PushStack Add(MakeHiLo(b1,b2),GetLocal(2));
  TraceOperation 024790 (Loadb (Var Sp) (Con 2) (Local 3));
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),2)];
  SetLocal 3 Widen(b4);
  TraceOperation 024794 (Add (Var (Global 194)) (Var (Local 2)) Sp);
  Let b5 = M[008296];
  Let b6 = M[008297];
  PushStack Add(MakeHiLo(b5,b6),GetLocal(2));
  TraceOperation 024798 (Loadb (Var Sp) (Con 3) Sp);
  PopStack popped7;
  Let b8 = M[Offset(Address(popped7),3)];
  PushStack Widen(b8);
  TraceOperation 024802 (Call (Floc 024740) [Var (Local 3),Var Sp] Sp);
  PopStack popped9;
  PushFrame 024802;
  SetLocal 1 GetLocal(3);
  SetLocal 2 popped9;
  JumpCall: 024740, #actuals: 2
LocReturn 024802:
  PushStack call_result;
  TraceOperation 024809 (Print "\".");
  GamePrint "\".";
  TraceOperation 024814 New_line;
  GamePrint "\n";
  TraceOperation 024815 (Store (Con 195) (Con 0));
  SetByte 008266 0;
  SetByte 008267 0;
  TraceOperation 024818 (Store (Con 205) (Con 0));
  SetByte 008286 0;
  SetByte 008287 0;
  TraceOperation 024821 (Ret (Var (Global 189)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[41]--------------------------------------------------
LocRoutine 024824:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 024831
LocOp 024831:
  TraceOperation 024831 (Print "You used the word \"");
  GamePrint "You used the word \"";
  TraceOperation 024844 (Mul (Var (Local 1)) (Con 2) (Local 2));
  SetLocal 2 Mul(GetLocal(1),2);
  TraceOperation 024848 (Add (Var (Global 194)) (Var (Local 2)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  PushStack Add(MakeHiLo(b1,b2),GetLocal(2));
  TraceOperation 024852 (Loadb (Var Sp) (Con 2) (Local 3));
  PopStack popped3;
  Let b4 = M[Offset(Address(popped3),2)];
  SetLocal 3 Widen(b4);
  TraceOperation 024856 (Add (Var (Global 194)) (Var (Local 2)) Sp);
  Let b5 = M[008296];
  Let b6 = M[008297];
  PushStack Add(MakeHiLo(b5,b6),GetLocal(2));
  TraceOperation 024860 (Loadb (Var Sp) (Con 3) Sp);
  PopStack popped7;
  Let b8 = M[Offset(Address(popped7),3)];
  PushStack Widen(b8);
  TraceOperation 024864 (Call (Floc 024740) [Var (Local 3),Var Sp] Sp);
  PopStack popped9;
  PushFrame 024864;
  SetLocal 1 GetLocal(3);
  SetLocal 2 popped9;
  JumpCall: 024740, #actuals: 2
LocReturn 024864:
  PushStack call_result;
  TraceOperation 024871 (Print "\" in a way that I don't understand.");
  GamePrint "\" in a way that I don't understand.";
  TraceOperation 024892 New_line;
  GamePrint "\n";
  TraceOperation 024893 (Store (Con 195) (Con 0));
  SetByte 008266 0;
  SetByte 008267 0;
  TraceOperation 024896 (Store (Con 205) (Con 0));
  SetByte 008286 0;
  SetByte 008287 0;
  TraceOperation 024899 (Ret (Var (Global 189)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[42]--------------------------------------------------
LocRoutine 024902:
  MakeRoutineFrame 11;
  if (LessThanByte(num_actuals,11)) {
    SetLocal 11 0;
    if (LessThanByte(num_actuals,10)) {
      SetLocal 10 0;
      if (LessThanByte(num_actuals,9)) {
        SetLocal 9 0;
        if (LessThanByte(num_actuals,8)) {
          SetLocal 8 0;
          if (LessThanByte(num_actuals,7)) {
            SetLocal 7 0;
            if (LessThanByte(num_actuals,6)) {
              SetLocal 6 0;
              if (LessThanByte(num_actuals,5)) {
                SetLocal 5 0;
                if (LessThanByte(num_actuals,4)) {
                  SetLocal 4 0;
                  if (LessThanByte(num_actuals,3)) {
                    SetLocal 3 0;
                    if (LessThanByte(num_actuals,2)) {
                      SetLocal 2 0;
                      if (LessThanByte(num_actuals,1)) {
                        SetLocal 1 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 024925
LocOp 024925:
  TraceOperation 024925 (Loadw (Var (Global 184)) (Con 0) (Local 8));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  SetLocal 8 MakeHiLo(b3,b4);
  TraceOperation 024929 (Jz (Var (Local 8)) (Branch F (Dloc 024955)));
  if (IsZero(GetLocal(8))) {
    TraceOperation 024932 (Print "There was no verb in that sentence!");
    GamePrint "There was no verb in that sentence!";
    TraceOperation 024953 New_line;
    GamePrint "\n";
    TraceOperation 024954 Rfalse;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  } else {
    Jump: 024955
  }
LocOp 024955:
  TraceOperation 024955 (Sub (Con 255) (Var (Local 8)) Sp);
  PushStack Sub(255,GetLocal(8));
  TraceOperation 024959 (Loadw (Var (Global 239)) (Var Sp) (Local 1));
  Let b1 = M[008386];
  Let b2 = M[008387];
  PopStack popped3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1)];
  SetLocal 1 MakeHiLo(b4,b5);
  TraceOperation 024963 (Loadb (Var (Local 1)) (Con 0) (Local 2));
  Let b6 = M[Offset(Address(GetLocal(1)),0)];
  SetLocal 2 Widen(b6);
  TraceOperation 024967 (Add (Con 1) (Var (Local 1)) (Local 1));
  SetLocal 1 Add(1,GetLocal(1));
  Jump: 024971
LocOp 024971:
  TraceOperation 024971 (Loadb (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  PushStack Widen(b1);
  TraceOperation 024975 (And (Var Sp) (Con 3) (Local 3));
  PopStack popped2;
  SetLocal 3 And(popped2,3);
  TraceOperation 024979 (Jg (Var (Global 180)) (Var (Local 3)) (Branch F (Dloc 024986)));
  Let b3 = M[008268];
  Let b4 = M[008269];
  if (GreaterThan(MakeHiLo(b3,b4),GetLocal(3))) {
    TraceOperation 024983 (Jump 025059);
    Jump: 025059
  } else {
    Jump: 024986
  }
LocOp 024986:
  TraceOperation 024986 (Jl (Var (Local 3)) (Con 1) (Branch T (Dloc 025014)));
  if (LessThan(GetLocal(3),1)) {
    Jump: 025014
  } else {
    TraceOperation 024990 (Jz (Var (Global 180)) (Branch F (Dloc 025014)));
    Let b1 = M[008268];
    Let b2 = M[008269];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 024993 (Loadw (Var (Global 184)) (Con 2) (Local 7));
      Let b3 = M[008276];
      Let b4 = M[008277];
      Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),4)];
      Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),4),1)];
      SetLocal 7 MakeHiLo(b5,b6);
      TraceOperation 024997 (Jz (Var (Local 7)) (Branch T (Dloc 025008)));
      if (IsZero(GetLocal(7))) {
        Jump: 025008
      } else {
        TraceOperation 025000 (Loadb (Var (Local 1)) (Con 1) Sp);
        Let b7 = M[Offset(Address(GetLocal(1)),1)];
        PushStack Widen(b7);
        TraceOperation 025004 (Je [Var (Local 7),Var Sp] (Branch F (Dloc 025014)));
        PopStack popped8;
        if (Equal(GetLocal(7),popped8)) {
          Jump: 025008
        } else {
          Jump: 025014
        }
      }
    } else {
      Jump: 025014
    }
  }
LocOp 025008:
  TraceOperation 025008 (Store (Con 5) (Var (Local 1)));
  SetLocal 5 GetLocal(1);
  TraceOperation 025011 (Jump 025059);
  Jump: 025059
LocOp 025014:
  TraceOperation 025014 (Loadb (Var (Local 1)) (Con 1) (Local 11));
  Let b1 = M[Offset(Address(GetLocal(1)),1)];
  SetLocal 11 Widen(b1);
  TraceOperation 025018 (Loadw (Var (Global 184)) (Con 2) Sp);
  Let b2 = M[008276];
  Let b3 = M[008277];
  Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),4)];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),4),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 025022 (Je [Var (Local 11),Var Sp] (Branch F (Dloc 025059)));
  PopStack popped6;
  if (Equal(GetLocal(11),popped6)) {
    TraceOperation 025026 (Je [Var (Local 3),Con 2] (Branch F (Dloc 025040)));
    if (Equal(GetLocal(3),2)) {
      TraceOperation 025030 (Je [Var (Global 180),Con 1] (Branch F (Dloc 025040)));
      Let b7 = M[008268];
      Let b8 = M[008269];
      if (Equal(MakeHiLo(b7,b8),1)) {
        TraceOperation 025034 (Store (Con 6) (Var (Local 1)));
        SetLocal 6 GetLocal(1);
        TraceOperation 025037 (Jump 025059);
        Jump: 025059
      } else {
        Jump: 025040
      }
    } else {
      Jump: 025040
    }
  } else {
    Jump: 025059
  }
LocOp 025040:
  TraceOperation 025040 (Loadb (Var (Local 1)) (Con 2) (Local 11));
  Let b1 = M[Offset(Address(GetLocal(1)),2)];
  SetLocal 11 Widen(b1);
  TraceOperation 025044 (Loadw (Var (Global 184)) (Con 4) Sp);
  Let b2 = M[008276];
  Let b3 = M[008277];
  Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),8)];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),8),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 025048 (Je [Var (Local 11),Var Sp] (Branch F (Dloc 025059)));
  PopStack popped6;
  if (Equal(GetLocal(11),popped6)) {
    TraceOperation 025052 (Call (Floc 026050) [Var (Local 1)] Sp);
    PushFrame 025052;
    SetLocal 1 GetLocal(1);
    JumpCall: 026050, #actuals: 1
  } else {
    Jump: 025059
  }
LocReturn 025052:
  PushStack call_result;
  TraceOperation 025058 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 025059:
  TraceOperation 025059 (Dec_chk (Con 2) (Con 1) (Branch F (Dloc 025078)));
  if (LessThanEqual(GetLocal(2),1)) {
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 025063 (Jz (Var (Local 5)) (Branch F (Dloc 025085)));
    if (IsZero(GetLocal(5))) {
      TraceOperation 025066 (Jz (Var (Local 6)) (Branch T (Dloc 025072)));
      if (IsZero(GetLocal(6))) {
        Jump: 025072
      } else {
        TraceOperation 025069 (Jump 025085);
        Jump: 025085
      }
    } else {
      Jump: 025085
    }
  } else {
    SetLocal 2 Sub(GetLocal(2),1);
    Jump: 025078
  }
LocOp 025072:
  TraceOperation 025072 (Call (Floc 039060) [] Sp);
  PushFrame 025072;
  JumpCall: 039060, #actuals: 0
LocReturn 025072:
  PushStack call_result;
  TraceOperation 025077 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 025078:
  TraceOperation 025078 (Add (Var (Local 1)) (Con 8) (Local 1));
  SetLocal 1 Add(GetLocal(1),8);
  TraceOperation 025082 (Jump 024971);
  Jump: 024971
LocOp 025085:
  TraceOperation 025085 (Jz (Var (Local 5)) (Branch T (Dloc 025128)));
  if (IsZero(GetLocal(5))) {
    Jump: 025128
  } else {
    TraceOperation 025088 (Loadb (Var (Local 5)) (Con 3) (Local 10));
    Let b1 = M[Offset(Address(GetLocal(5)),3)];
    SetLocal 10 Widen(b1);
    TraceOperation 025092 (Loadb (Var (Local 5)) (Con 5) (Local 11));
    Let b2 = M[Offset(Address(GetLocal(5)),5)];
    SetLocal 11 Widen(b2);
    TraceOperation 025096 (Loadb (Var (Local 5)) (Con 1) Sp);
    Let b3 = M[Offset(Address(GetLocal(5)),1)];
    PushStack Widen(b3);
    TraceOperation 025100 (Call (Floc 026062) [Var (Local 10),Var (Local 11),Var Sp] (Local 4));
    PopStack popped4;
    PushFrame 025100;
    SetLocal 1 GetLocal(10);
    SetLocal 2 GetLocal(11);
    SetLocal 3 popped4;
    JumpCall: 026062, #actuals: 3
  }
LocReturn 025100:
  SetLocal 4 call_result;
  TraceOperation 025108 (Jz (Var (Local 4)) (Branch T (Dloc 025128)));
  if (IsZero(GetLocal(4))) {
    Jump: 025128
  } else {
    TraceOperation 025111 (Storew (Var (Global 167)) (Var (Global 162)) (Con 1));
    Let b1 = M[008242];
    Let b2 = M[008243];
    Let b3 = M[008232];
    Let b4 = M[008233];
    SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 1;
    TraceOperation 025116 (Storew (Var (Global 167)) (Con 1) (Var (Local 4)));
    Let b5 = M[008242];
    Let b6 = M[008243];
    SetByte Offset(Address(MakeHiLo(b5,b6)),2) HiByte(GetLocal(4));
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),2),1) LoByte(GetLocal(4));
    TraceOperation 025121 (Call (Floc 026050) [Var (Local 5)] Sp);
    PushFrame 025121;
    SetLocal 1 GetLocal(5);
    JumpCall: 026050, #actuals: 1
  }
LocReturn 025121:
  PushStack call_result;
  TraceOperation 025127 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 025128:
  TraceOperation 025128 (Jz (Var (Local 6)) (Branch T (Dloc 025171)));
  if (IsZero(GetLocal(6))) {
    Jump: 025171
  } else {
    TraceOperation 025131 (Loadb (Var (Local 6)) (Con 4) (Local 10));
    Let b1 = M[Offset(Address(GetLocal(6)),4)];
    SetLocal 10 Widen(b1);
    TraceOperation 025135 (Loadb (Var (Local 6)) (Con 6) (Local 11));
    Let b2 = M[Offset(Address(GetLocal(6)),6)];
    SetLocal 11 Widen(b2);
    TraceOperation 025139 (Loadb (Var (Local 6)) (Con 2) Sp);
    Let b3 = M[Offset(Address(GetLocal(6)),2)];
    PushStack Widen(b3);
    TraceOperation 025143 (Call (Floc 026062) [Var (Local 10),Var (Local 11),Var Sp] (Local 4));
    PopStack popped4;
    PushFrame 025143;
    SetLocal 1 GetLocal(10);
    SetLocal 2 GetLocal(11);
    SetLocal 3 popped4;
    JumpCall: 026062, #actuals: 3
  }
LocReturn 025143:
  SetLocal 4 call_result;
  TraceOperation 025151 (Jz (Var (Local 4)) (Branch T (Dloc 025171)));
  if (IsZero(GetLocal(4))) {
    Jump: 025171
  } else {
    TraceOperation 025154 (Storew (Var (Global 166)) (Var (Global 162)) (Con 1));
    Let b1 = M[008240];
    Let b2 = M[008241];
    Let b3 = M[008232];
    Let b4 = M[008233];
    SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 1;
    TraceOperation 025159 (Storew (Var (Global 166)) (Con 1) (Var (Local 4)));
    Let b5 = M[008240];
    Let b6 = M[008241];
    SetByte Offset(Address(MakeHiLo(b5,b6)),2) HiByte(GetLocal(4));
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),2),1) LoByte(GetLocal(4));
    TraceOperation 025164 (Call (Floc 026050) [Var (Local 6)] Sp);
    PushFrame 025164;
    SetLocal 1 GetLocal(6);
    JumpCall: 026050, #actuals: 1
  }
LocReturn 025164:
  PushStack call_result;
  TraceOperation 025170 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 025171:
  TraceOperation 025171 (Je [Var (Local 8),Con 168] (Branch F (Dloc 025194)));
  if (Equal(GetLocal(8),168)) {
    TraceOperation 025175 (Print "I can't answer that question.");
    GamePrint "I can't answer that question.";
    TraceOperation 025192 New_line;
    GamePrint "\n";
    TraceOperation 025193 Rfalse;
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    Jump: 025194
  }
LocOp 025194:
  TraceOperation 025194 (Je [Var (Global 195),Con 31] (Branch T (Dloc 025204)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),31)) {
    Jump: 025204
  } else {
    TraceOperation 025198 (Call (Floc 025324) [] Sp);
    PushFrame 025198;
    JumpCall: 025324, #actuals: 0
  }
LocReturn 025198:
  PushStack call_result;
  TraceOperation 025203 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 025204:
  TraceOperation 025204 (Call (Floc 025378) [Var (Local 5),Var (Local 6)] Sp);
  PushFrame 025204;
  SetLocal 1 GetLocal(5);
  SetLocal 2 GetLocal(6);
  JumpCall: 025378, #actuals: 2
LocReturn 025204:
  PushStack call_result;
  TraceOperation 025211 (Print "What do");
  GamePrint "What do";
  TraceOperation 025218 (Jz (Var (Global 176)) (Branch T (Dloc 025226)));
  Let b1 = M[008260];
  Let b2 = M[008261];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 025226
  } else {
    TraceOperation 025221 (Print "n't");
    GamePrint "n't";
    Jump: 025226
  }
LocOp 025226:
  TraceOperation 025226 (Print " you want to ");
  GamePrint " you want to ";
  TraceOperation 025235 (Loadw (Var (Global 183)) (Con 1) (Local 9));
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 9 MakeHiLo(b3,b4);
  TraceOperation 025239 (Jz (Var (Local 9)) (Branch F (Dloc 025250)));
  if (IsZero(GetLocal(9))) {
    TraceOperation 025242 (Print "tell");
    GamePrint "tell";
    TraceOperation 025247 (Jump 025286);
    Jump: 025286
  } else {
    Jump: 025250
  }
LocOp 025250:
  TraceOperation 025250 (Loadb (Var (Global 182)) (Con 2) Sp);
  Let b1 = M[008272];
  Let b2 = M[008273];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  PushStack Widen(b3);
  TraceOperation 025254 (Jz (Var Sp) (Branch F (Dloc 025266)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 025257 (Loadw (Var (Local 9)) (Con 0) Sp);
    Let b5 = M[Offset(Address(GetLocal(9)),0)];
    Let b6 = M[Offset(Offset(Address(GetLocal(9)),0),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 025261 (Print_addr (Var Sp));
    PopStack popped7;
    GamePrint GetText(Address(popped7));
    TraceOperation 025263 (Jump 025286);
    Jump: 025286
  } else {
    Jump: 025266
  }
LocOp 025266:
  TraceOperation 025266 (Loadb (Var (Local 9)) (Con 2) (Local 11));
  Let b1 = M[Offset(Address(GetLocal(9)),2)];
  SetLocal 11 Widen(b1);
  TraceOperation 025270 (Loadb (Var (Local 9)) (Con 3) Sp);
  Let b2 = M[Offset(Address(GetLocal(9)),3)];
  PushStack Widen(b2);
  TraceOperation 025274 (Call (Floc 024740) [Var (Local 11),Var Sp] Sp);
  PopStack popped3;
  PushFrame 025274;
  SetLocal 1 GetLocal(11);
  SetLocal 2 popped3;
  JumpCall: 024740, #actuals: 2
LocReturn 025274:
  PushStack call_result;
  TraceOperation 025281 (Storeb (Var (Global 182)) (Con 2) (Con 0));
  Let b1 = M[008272];
  Let b2 = M[008273];
  SetByte Offset(Address(MakeHiLo(b1,b2)),2) 0;
  Jump: 025286
LocOp 025286:
  TraceOperation 025286 (Jz (Var (Local 6)) (Branch T (Dloc 025296)));
  if (IsZero(GetLocal(6))) {
    Jump: 025296
  } else {
    TraceOperation 025289 (Call (Floc 025538) [Con 6,Con 7] Sp);
    PushFrame 025289;
    SetLocal 1 6;
    SetLocal 2 7;
    JumpCall: 025538, #actuals: 2
  }
LocReturn 025289:
  PushStack call_result;
  Jump: 025296
LocOp 025296:
  TraceOperation 025296 (Store (Con 205) (Con 1));
  SetByte 008286 0;
  SetByte 008287 1;
  TraceOperation 025299 (Jz (Var (Local 5)) (Branch T (Dloc 025309)));
  if (IsZero(GetLocal(5))) {
    Jump: 025309
  } else {
    TraceOperation 025302 (Loadb (Var (Local 5)) (Con 1) Sp);
    Let b1 = M[Offset(Address(GetLocal(5)),1)];
    PushStack Widen(b1);
    TraceOperation 025306 (Jump 025313);
    Jump: 025313
  }
LocOp 025309:
  TraceOperation 025309 (Loadb (Var (Local 6)) (Con 2) Sp);
  Let b1 = M[Offset(Address(GetLocal(6)),2)];
  PushStack Widen(b1);
  Jump: 025313
LocOp 025313:
  TraceOperation 025313 (Call (Floc 025828) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 025313;
  SetLocal 1 popped1;
  JumpCall: 025828, #actuals: 1
LocReturn 025313:
  PushStack call_result;
  TraceOperation 025319 (Print "?");
  GamePrint "?";
  TraceOperation 025322 New_line;
  GamePrint "\n";
  TraceOperation 025323 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[43]--------------------------------------------------
LocRoutine 025324:
  MakeRoutineFrame 0;
  Jump: 025325
LocOp 025325:
  TraceOperation 025325 (Je [Var (Global 195),Con 27] (Branch F (Dloc 025341)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),27)) {
    TraceOperation 025329 (Je [Var (Global 0),Con 54] (Branch F (Dloc 025341)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),54)) {
      TraceOperation 025333 (Print "\"We");
      GamePrint "\"We";
      TraceOperation 025338 (Jump 025346);
      Jump: 025346
    } else {
      Jump: 025341
    }
  } else {
    Jump: 025341
  }
LocOp 025341:
  TraceOperation 025341 (Print "\"I");
  GamePrint "\"I";
  Jump: 025346
LocOp 025346:
  TraceOperation 025346 (Print " don't understand! What are you referring to?\"");
  GamePrint " don't understand! What are you referring to?\"";
  TraceOperation 025375 New_line;
  GamePrint "\n";
  TraceOperation 025376 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[44]--------------------------------------------------
LocRoutine 025378:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 -1;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 025385
LocOp 025385:
  TraceOperation 025385 (Jz (Var (Global 188)) (Branch F (Dloc 025393)));
  Let b1 = M[008284];
  Let b2 = M[008285];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 025388 (Storew (Var (Global 163)) (Var (Global 162)) (Con 0));
    Let b3 = M[008234];
    Let b4 = M[008235];
    Let b5 = M[008232];
    Let b6 = M[008233];
    SetByte Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1) 0;
    Jump: 025393
  } else {
    Jump: 025393
  }
LocOp 025393:
  TraceOperation 025393 (Loadw (Var (Global 182)) (Con 0) Sp);
  Let b1 = M[008272];
  Let b2 = M[008273];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 025397 (Storew (Var (Global 181)) (Con 0) (Var Sp));
  Let b5 = M[008270];
  Let b6 = M[008271];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),0) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),0),1) LoByte(popped7);
  TraceOperation 025402 (Loadb (Var (Global 182)) (Con 2) Sp);
  Let b8 = M[008272];
  Let b9 = M[008273];
  Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),2)];
  PushStack Widen(b10);
  TraceOperation 025406 (Storeb (Var (Global 181)) (Con 2) (Var Sp));
  Let b11 = M[008270];
  Let b12 = M[008271];
  PopStack popped13;
  SetByte Offset(Address(MakeHiLo(b11,b12)),2) LoByte(popped13);
  TraceOperation 025411 (Loadb (Var (Global 182)) (Con 3) Sp);
  Let b14 = M[008272];
  Let b15 = M[008273];
  Let b16 = M[Offset(Address(MakeHiLo(b14,b15)),3)];
  PushStack Widen(b16);
  TraceOperation 025415 (Storeb (Var (Global 181)) (Con 3) (Var Sp));
  Let b17 = M[008270];
  Let b18 = M[008271];
  PopStack popped19;
  SetByte Offset(Address(MakeHiLo(b17,b18)),3) LoByte(popped19);
  Jump: 025420
LocOp 025420:
  TraceOperation 025420 (Inc_chk (Con 3) (Con 9) (Branch F (Dloc 025427)));
  SetLocal 3 Add(GetLocal(3),1);
  if (GreaterThanEqual(GetLocal(3),9)) {
    TraceOperation 025424 (Jump 025439);
    Jump: 025439
  } else {
    Jump: 025427
  }
LocOp 025427:
  TraceOperation 025427 (Loadw (Var (Global 184)) (Var (Local 3)) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(3)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(3))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 025431 (Storew (Var (Global 183)) (Var (Local 3)) (Var Sp));
  Let b5 = M[008274];
  Let b6 = M[008275];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(3))) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(3))),1) LoByte(popped7);
  TraceOperation 025436 (Jump 025420);
  Jump: 025420
LocOp 025439:
  TraceOperation 025439 (Je [Var (Global 180),Con 2] (Branch F (Dloc 025470)));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 025443 (Storew (Var (Global 197)) (Con 0) (Con 8));
    Let b3 = M[008302];
    Let b4 = M[008303];
    SetByte Offset(Address(MakeHiLo(b3,b4)),0) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),0),1) 8;
    TraceOperation 025448 (Storew (Var (Global 197)) (Con 1) (Con 9));
    Let b5 = M[008302];
    Let b6 = M[008303];
    SetByte Offset(Address(MakeHiLo(b5,b6)),2) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),2),1) 9;
    TraceOperation 025453 (Storew (Var (Global 197)) (Con 2) (Con 8));
    Let b7 = M[008302];
    Let b8 = M[008303];
    SetByte Offset(Address(MakeHiLo(b7,b8)),4) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),4),1) 8;
    TraceOperation 025458 (Storew (Var (Global 197)) (Con 3) (Con 9));
    Let b9 = M[008302];
    Let b10 = M[008303];
    SetByte Offset(Address(MakeHiLo(b9,b10)),6) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),6),1) 9;
    TraceOperation 025463 (Call (Floc 025860) [Var (Global 184),Var (Global 183)] Sp);
    Let b11 = M[008276];
    Let b12 = M[008277];
    Let b13 = M[008274];
    Let b14 = M[008275];
    PushFrame 025463;
    SetLocal 1 MakeHiLo(b11,b12);
    SetLocal 2 MakeHiLo(b13,b14);
    JumpCall: 025860, #actuals: 2
  } else {
    Jump: 025470
  }
LocReturn 025463:
  PushStack call_result;
  Jump: 025470
LocOp 025470:
  TraceOperation 025470 (Jl (Var (Global 180)) (Con 1) (Branch T (Dloc 025501)));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (LessThan(MakeHiLo(b1,b2),1)) {
    Jump: 025501
  } else {
    TraceOperation 025474 (Storew (Var (Global 197)) (Con 0) (Con 6));
    Let b3 = M[008302];
    Let b4 = M[008303];
    SetByte Offset(Address(MakeHiLo(b3,b4)),0) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),0),1) 6;
    TraceOperation 025479 (Storew (Var (Global 197)) (Con 1) (Con 7));
    Let b5 = M[008302];
    Let b6 = M[008303];
    SetByte Offset(Address(MakeHiLo(b5,b6)),2) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),2),1) 7;
    TraceOperation 025484 (Storew (Var (Global 197)) (Con 2) (Con 6));
    Let b7 = M[008302];
    Let b8 = M[008303];
    SetByte Offset(Address(MakeHiLo(b7,b8)),4) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),4),1) 6;
    TraceOperation 025489 (Storew (Var (Global 197)) (Con 3) (Con 7));
    Let b9 = M[008302];
    Let b10 = M[008303];
    SetByte Offset(Address(MakeHiLo(b9,b10)),6) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),6),1) 7;
    TraceOperation 025494 (Call (Floc 025860) [Var (Global 184),Var (Global 183)] Sp);
    Let b11 = M[008276];
    Let b12 = M[008277];
    Let b13 = M[008274];
    Let b14 = M[008275];
    PushFrame 025494;
    SetLocal 1 MakeHiLo(b11,b12);
    SetLocal 2 MakeHiLo(b13,b14);
    JumpCall: 025860, #actuals: 2
  }
LocReturn 025494:
  PushStack call_result;
  Jump: 025501
LocOp 025501:
  TraceOperation 025501 (Jz (Var (Local 1)) (Branch T (Dloc 025519)));
  if (IsZero(GetLocal(1))) {
    Jump: 025519
  } else {
    TraceOperation 025504 (Loadb (Var (Local 1)) (Con 1) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),1)];
    PushStack Widen(b1);
    TraceOperation 025508 (Storew (Var (Global 183)) (Con 2) (Var Sp));
    Let b2 = M[008274];
    Let b3 = M[008275];
    PopStack popped4;
    SetByte Offset(Address(MakeHiLo(b2,b3)),4) HiByte(popped4);
    SetByte Offset(Offset(Address(MakeHiLo(b2,b3)),4),1) LoByte(popped4);
    TraceOperation 025513 (Storew (Var (Global 183)) (Con 6) (Con 1));
    Let b5 = M[008274];
    Let b6 = M[008275];
    SetByte Offset(Address(MakeHiLo(b5,b6)),12) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),12),1) 1;
    TraceOperation 025518 Rtrue;
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 025519:
  TraceOperation 025519 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 025522 (Loadb (Var (Local 2)) (Con 2) Sp);
    Let b2 = M[Offset(Address(GetLocal(2)),2)];
    PushStack Widen(b2);
    TraceOperation 025526 (Storew (Var (Global 183)) (Con 4) (Var Sp));
    Let b3 = M[008274];
    Let b4 = M[008275];
    PopStack popped5;
    SetByte Offset(Address(MakeHiLo(b3,b4)),8) HiByte(popped5);
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),8),1) LoByte(popped5);
    TraceOperation 025531 (Storew (Var (Global 183)) (Con 8) (Con 1));
    Let b6 = M[008274];
    Let b7 = M[008275];
    SetByte Offset(Address(MakeHiLo(b6,b7)),16) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),16),1) 1;
    TraceOperation 025536 Rtrue;
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  }
--[45]--------------------------------------------------
LocRoutine 025538:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 1;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 025547
LocOp 025547:
  TraceOperation 025547 (Loadw (Var (Global 184)) (Var (Local 1)) (Local 4));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(1))),1)];
  SetLocal 4 MakeHiLo(b3,b4);
  TraceOperation 025551 (Loadw (Var (Global 184)) (Var (Local 2)) Sp);
  Let b5 = M[008276];
  Let b6 = M[008277];
  Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(2)))];
  Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,GetLocal(2))),1)];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 025555 (Call (Floc 025564) [Var (Local 4),Var Sp,Var (Local 3)] Sp);
  PopStack popped9;
  PushFrame 025555;
  SetLocal 1 GetLocal(4);
  SetLocal 2 popped9;
  SetLocal 3 GetLocal(3);
  JumpCall: 025564, #actuals: 3
LocReturn 025555:
  PushStack call_result;
  TraceOperation 025563 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[46]--------------------------------------------------
LocRoutine 025564:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 1;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 025581
LocOp 025581:
  TraceOperation 025581 (Je [Var (Local 1),Var (Local 2)] (Branch T Dtrue));
  if (Equal(GetLocal(1),GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 025585 (Jz (Var (Local 4)) (Branch T (Dloc 025594)));
    if (IsZero(GetLocal(4))) {
      Jump: 025594
    } else {
      TraceOperation 025588 (Store (Con 4) (Con 0));
      SetLocal 4 0;
      TraceOperation 025591 (Jump 025597);
      Jump: 025597
    }
  }
LocOp 025594:
  TraceOperation 025594 (Print " ");
  GamePrint " ";
  Jump: 025597
LocOp 025597:
  TraceOperation 025597 (Loadw (Var (Local 1)) (Con 0) (Local 5));
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 025601 (Je [Var (Local 5),Con 13665] (Branch F (Dloc 025613)));
  if (Equal(GetLocal(5),13665)) {
    TraceOperation 025607 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    TraceOperation 025610 (Jump 025709);
    Jump: 025709
  } else {
    Jump: 025613
  }
LocOp 025613:
  TraceOperation 025613 (Je [Var (Local 5),Con 17074] (Branch F (Dloc 025627)));
  if (Equal(GetLocal(5),17074)) {
    TraceOperation 025619 (Print_obj (Con 30));
    Let b1 = M[001028];
    Let b2 = M[001029];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 025621 (Store (Con 7) (Con 1));
      SetLocal 7 1;
      TraceOperation 025624 (Jump 025709);
      Jump: 025709
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 025621 (Store (Con 7) (Con 1));
      SetLocal 7 1;
      TraceOperation 025624 (Jump 025709);
      Jump: 025709
    }
  } else {
    Jump: 025627
  }
LocOp 025627:
  TraceOperation 025627 (Call (Floc 025716) [Var (Local 5)] Sp);
  PushFrame 025627;
  SetLocal 1 GetLocal(5);
  JumpCall: 025716, #actuals: 1
LocReturn 025627:
  PushStack call_result;
  TraceOperation 025633 (Jz (Var Sp) (Branch T (Dloc 025648)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 025648
  } else {
    TraceOperation 025636 (Call (Floc 025770) [Var (Local 1)] Sp);
    PushFrame 025636;
    SetLocal 1 GetLocal(1);
    JumpCall: 025770, #actuals: 1
  }
LocReturn 025636:
  PushStack call_result;
  TraceOperation 025642 (Store (Con 7) (Con 1));
  SetLocal 7 1;
  TraceOperation 025645 (Jump 025709);
  Jump: 025709
LocOp 025648:
  TraceOperation 025648 (Jz (Var (Local 6)) (Branch T (Dloc 025660)));
  if (IsZero(GetLocal(6))) {
    Jump: 025660
  } else {
    TraceOperation 025651 (Jz (Var (Local 7)) (Branch F (Dloc 025660)));
    if (IsZero(GetLocal(7))) {
      TraceOperation 025654 (Jz (Var (Local 3)) (Branch T (Dloc 025660)));
      if (IsZero(GetLocal(3))) {
        Jump: 025660
      } else {
        TraceOperation 025657 (Print "the ");
        GamePrint "the ";
        Jump: 025660
      }
    } else {
      Jump: 025660
    }
  }
LocOp 025660:
  TraceOperation 025660 (Jz (Var (Global 189)) (Branch F (Dloc 025666)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 025663 (Jz (Var (Global 188)) (Branch T (Dloc 025671)));
    Let b3 = M[008284];
    Let b4 = M[008285];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 025671
    } else {
      Jump: 025666
    }
  } else {
    Jump: 025666
  }
LocOp 025666:
  TraceOperation 025666 (Print_addr (Var (Local 5)));
  GamePrint GetText(Address(GetLocal(5)));
  TraceOperation 025668 (Jump 025706);
  Jump: 025706
LocOp 025671:
  TraceOperation 025671 (Je [Var (Local 5),Con 16619] (Branch F (Dloc 025691)));
  if (Equal(GetLocal(5),16619)) {
    TraceOperation 025677 (Call (Floc 043298) [Var (Global 191)] Sp);
    Let b1 = M[008290];
    Let b2 = M[008291];
    PushFrame 025677;
    SetLocal 1 MakeHiLo(b1,b2);
    JumpCall: 043298, #actuals: 1
  } else {
    Jump: 025691
  }
LocReturn 025677:
  PushStack call_result;
  TraceOperation 025683 (Jz (Var Sp) (Branch T (Dloc 025691)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 025691
  } else {
    TraceOperation 025686 (Print_obj (Var (Global 191)));
    Let b2 = M[008290];
    Let b3 = M[008291];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7)];
    Let b5 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 025688 (Jump 025706);
      Jump: 025706
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 025688 (Jump 025706);
      Jump: 025706
    }
  }
LocOp 025691:
  TraceOperation 025691 (Loadb (Var (Local 1)) (Con 2) (Local 8));
  Let b1 = M[Offset(Address(GetLocal(1)),2)];
  SetLocal 8 Widen(b1);
  TraceOperation 025695 (Loadb (Var (Local 1)) (Con 3) Sp);
  Let b2 = M[Offset(Address(GetLocal(1)),3)];
  PushStack Widen(b2);
  TraceOperation 025699 (Call (Floc 024740) [Var (Local 8),Var Sp] Sp);
  PopStack popped3;
  PushFrame 025699;
  SetLocal 1 GetLocal(8);
  SetLocal 2 popped3;
  JumpCall: 024740, #actuals: 2
LocReturn 025699:
  PushStack call_result;
  Jump: 025706
LocOp 025706:
  TraceOperation 025706 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  Jump: 025709
LocOp 025709:
  TraceOperation 025709 (Add (Var (Local 1)) (Con 4) (Local 1));
  SetLocal 1 Add(GetLocal(1),4);
  TraceOperation 025713 (Jump 025581);
  Jump: 025581
--[47]--------------------------------------------------
LocRoutine 025716:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025719
LocOp 025719:
  TraceOperation 025719 (Je [Var (Local 1),Con 15730,Con 20441,Con 14162] (Branch T Dtrue));
  if (LogOr(LogOr(Equal(GetLocal(1),15730),Equal(GetLocal(1),20441)),Equal(GetLocal(1),14162))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 025729 (Je [Var (Local 1),Con 19797,Con 19790,Con 17067] (Branch T Dtrue));
    if (LogOr(LogOr(Equal(GetLocal(1),19797),Equal(GetLocal(1),19790)),Equal(GetLocal(1),17067))) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 1
    } else {
      TraceOperation 025739 (Je [Var (Local 1),Con 18005,Con 17025,Con 13924] (Branch T Dtrue));
      if (LogOr(LogOr(Equal(GetLocal(1),18005),Equal(GetLocal(1),17025)),Equal(GetLocal(1),13924))) {
        PopFrame return_address_3;
        JumpReturn: return_address_3, result: 1
      } else {
        TraceOperation 025749 (Je [Var (Local 1),Con 15065,Con 17949,Con 17725] (Branch T Dtrue));
        if (LogOr(LogOr(Equal(GetLocal(1),15065),Equal(GetLocal(1),17949)),Equal(GetLocal(1),17725))) {
          PopFrame return_address_4;
          JumpReturn: return_address_4, result: 1
        } else {
          TraceOperation 025759 (Je [Var (Local 1),Con 15429,Con 17018,Con 15422] (Branch F Dfalse));
          if (LogOr(LogOr(Equal(GetLocal(1),15429),Equal(GetLocal(1),17018)),Equal(GetLocal(1),15422))) {
            TraceOperation 025769 Rtrue;
            PopFrame return_address_5;
            JumpReturn: return_address_5, result: 1
          } else {
            PopFrame return_address_6;
            JumpReturn: return_address_6, result: 0
          }
        }
      }
    }
  }
--[48]--------------------------------------------------
LocRoutine 025770:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 025775
LocOp 025775:
  TraceOperation 025775 (Jz (Var (Global 189)) (Branch F (Dloc 025781)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 025778 (Jz (Var (Global 188)) (Branch T (Dloc 025788)));
    Let b3 = M[008284];
    Let b4 = M[008285];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 025788
    } else {
      Jump: 025781
    }
  } else {
    Jump: 025781
  }
LocOp 025781:
  TraceOperation 025781 (Loadw (Var (Local 1)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 025785 (Print_addr (Var Sp));
  PopStack popped3;
  GamePrint GetText(Address(popped3));
  TraceOperation 025787 Rtrue;
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: 1
LocOp 025788:
  TraceOperation 025788 (Loadb (Var (Local 1)) (Con 3) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),3)];
  PushStack Widen(b1);
  TraceOperation 025792 (Loadb (Var (Global 193)) (Var Sp) Sp);
  Let b2 = M[008294];
  Let b3 = M[008295];
  PopStack popped4;
  Let b5 = M[Offset(Address(MakeHiLo(b2,b3)),popped4)];
  PushStack Widen(b5);
  TraceOperation 025796 (Sub (Var Sp) (Con 32) Sp);
  PopStack popped6;
  PushStack Sub(popped6,32);
  TraceOperation 025800 (Print_char (Var Sp));
  PopStack popped7;
  GamePrint SingleChar(popped7);
  TraceOperation 025803 (Loadb (Var (Local 1)) (Con 2) Sp);
  Let b8 = M[Offset(Address(GetLocal(1)),2)];
  PushStack Widen(b8);
  TraceOperation 025807 (Sub (Var Sp) (Con 1) (Local 2));
  PopStack popped9;
  SetLocal 2 Sub(popped9,1);
  TraceOperation 025811 (Loadb (Var (Local 1)) (Con 3) Sp);
  Let b10 = M[Offset(Address(GetLocal(1)),3)];
  PushStack Widen(b10);
  TraceOperation 025815 (Add (Var Sp) (Con 1) Sp);
  PopStack popped11;
  PushStack Add(popped11,1);
  TraceOperation 025819 (Call (Floc 024740) [Var (Local 2),Var Sp] Sp);
  PopStack popped12;
  PushFrame 025819;
  SetLocal 1 GetLocal(2);
  SetLocal 2 popped12;
  JumpCall: 024740, #actuals: 2
LocReturn 025819:
  PushStack call_result;
  TraceOperation 025826 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[49]--------------------------------------------------
LocRoutine 025828:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 025833
LocOp 025833:
  TraceOperation 025833 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 025836 (Print " ");
    GamePrint " ";
    TraceOperation 025839 (Je [Var (Local 1),Con 246] (Branch F (Dloc 025851)));
    if (Equal(GetLocal(1),246)) {
      TraceOperation 025843 (Print "through");
      GamePrint "through";
      TraceOperation 025850 Rtrue;
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 1
    } else {
      Jump: 025851
    }
  }
LocOp 025851:
  TraceOperation 025851 (Call (Floc 026012) [Var (Local 1)] (Local 2));
  PushFrame 025851;
  SetLocal 1 GetLocal(1);
  JumpCall: 026012, #actuals: 1
LocReturn 025851:
  SetLocal 2 call_result;
  TraceOperation 025857 (Print_addr (Var (Local 2)));
  GamePrint GetText(Address(GetLocal(2)));
  TraceOperation 025859 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[50]--------------------------------------------------
LocRoutine 025860:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 025873
LocOp 025873:
  TraceOperation 025873 (Loadw (Var (Global 197)) (Con 0) Sp);
  Let b1 = M[008302];
  Let b2 = M[008303];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 025877 (Loadw (Var (Local 1)) (Var Sp) (Local 4));
  PopStack popped5;
  Let b6 = M[Offset(Address(GetLocal(1)),Mul(2,popped5))];
  Let b7 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,popped5)),1)];
  SetLocal 4 MakeHiLo(b6,b7);
  TraceOperation 025881 (Loadw (Var (Global 197)) (Con 1) Sp);
  Let b8 = M[008302];
  Let b9 = M[008303];
  Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),2)];
  Let b11 = M[Offset(Offset(Address(MakeHiLo(b8,b9)),2),1)];
  PushStack MakeHiLo(b10,b11);
  TraceOperation 025885 (Loadw (Var (Local 1)) (Var Sp) (Local 5));
  PopStack popped12;
  Let b13 = M[Offset(Address(GetLocal(1)),Mul(2,popped12))];
  Let b14 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,popped12)),1)];
  SetLocal 5 MakeHiLo(b13,b14);
  TraceOperation 025889 (Loadw (Var (Global 197)) (Con 2) (Local 6));
  Let b15 = M[008302];
  Let b16 = M[008303];
  Let b17 = M[Offset(Address(MakeHiLo(b15,b16)),4)];
  Let b18 = M[Offset(Offset(Address(MakeHiLo(b15,b16)),4),1)];
  SetLocal 6 MakeHiLo(b17,b18);
  TraceOperation 025893 (Loadw (Var (Global 163)) (Var (Global 162)) Sp);
  Let b19 = M[008234];
  Let b20 = M[008235];
  Let b21 = M[008232];
  Let b22 = M[008233];
  Let b23 = M[Offset(Address(MakeHiLo(b19,b20)),Mul(2,MakeHiLo(b21,b22)))];
  Let b24 = M[Offset(Offset(Address(MakeHiLo(b19,b20)),Mul(2,MakeHiLo(b21,b22))),1)];
  PushStack MakeHiLo(b23,b24);
  TraceOperation 025897 (Mul (Var Sp) (Con 2) Sp);
  PopStack popped25;
  PushStack Mul(popped25,2);
  TraceOperation 025901 (Add (Var Sp) (Con 2) Sp);
  PopStack popped26;
  PushStack Add(popped26,2);
  TraceOperation 025905 (Add (Var (Global 163)) (Var Sp) Sp);
  Let b27 = M[008234];
  Let b28 = M[008235];
  PopStack popped29;
  PushStack Add(MakeHiLo(b27,b28),popped29);
  TraceOperation 025909 (Storew (Var (Local 2)) (Var (Local 6)) (Var Sp));
  PopStack popped30;
  SetByte Offset(Address(GetLocal(2)),Mul(2,GetLocal(6))) HiByte(popped30);
  SetByte Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(6))),1) LoByte(popped30);
  Jump: 025914
LocOp 025914:
  TraceOperation 025914 (Je [Var (Local 4),Var (Local 5)] (Branch F (Dloc 025944)));
  if (Equal(GetLocal(4),GetLocal(5))) {
    TraceOperation 025918 (Loadw (Var (Global 197)) (Con 3) (Local 6));
    Let b1 = M[008302];
    Let b2 = M[008303];
    Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),6)];
    Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),6),1)];
    SetLocal 6 MakeHiLo(b3,b4);
    TraceOperation 025922 (Loadw (Var (Global 163)) (Var (Global 162)) Sp);
    Let b5 = M[008234];
    Let b6 = M[008235];
    Let b7 = M[008232];
    Let b8 = M[008233];
    Let b9 = M[Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8)))];
    Let b10 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8))),1)];
    PushStack MakeHiLo(b9,b10);
    TraceOperation 025926 (Mul (Var Sp) (Con 2) Sp);
    PopStack popped11;
    PushStack Mul(popped11,2);
    TraceOperation 025930 (Add (Var Sp) (Con 2) Sp);
    PopStack popped12;
    PushStack Add(popped12,2);
    TraceOperation 025934 (Add (Var (Global 163)) (Var Sp) Sp);
    Let b13 = M[008234];
    Let b14 = M[008235];
    PopStack popped15;
    PushStack Add(MakeHiLo(b13,b14),popped15);
    TraceOperation 025938 (Storew (Var (Local 2)) (Var (Local 6)) (Var Sp));
    PopStack popped16;
    SetByte Offset(Address(GetLocal(2)),Mul(2,GetLocal(6))) HiByte(popped16);
    SetByte Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(6))),1) LoByte(popped16);
    TraceOperation 025943 Rtrue;
    PopFrame return_address_17;
    JumpReturn: return_address_17, result: 1
  } else {
    Jump: 025944
  }
LocOp 025944:
  TraceOperation 025944 (Jz (Var (Local 3)) (Branch T (Dloc 025961)));
  if (IsZero(GetLocal(3))) {
    Jump: 025961
  } else {
    TraceOperation 025947 (Loadw (Var (Local 4)) (Con 0) Sp);
    Let b1 = M[Offset(Address(GetLocal(4)),0)];
    Let b2 = M[Offset(Offset(Address(GetLocal(4)),0),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 025951 (Je [Var (Global 186),Var Sp] (Branch F (Dloc 025961)));
    Let b3 = M[008280];
    Let b4 = M[008281];
    PopStack popped5;
    if (Equal(MakeHiLo(b3,b4),popped5)) {
      TraceOperation 025955 (Call (Floc 025978) [Var (Local 3)] Sp);
      PushFrame 025955;
      SetLocal 1 GetLocal(3);
      JumpCall: 025978, #actuals: 1
    } else {
      Jump: 025961
    }
  }
LocReturn 025955:
  PushStack call_result;
  Jump: 025961
LocOp 025961:
  TraceOperation 025961 (Loadw (Var (Local 4)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(4)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(4)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 025965 (Call (Floc 025978) [Var Sp] Sp);
  PopStack popped3;
  PushFrame 025965;
  SetLocal 1 popped3;
  JumpCall: 025978, #actuals: 1
LocReturn 025965:
  PushStack call_result;
  TraceOperation 025971 (Add (Var (Local 4)) (Con 4) (Local 4));
  SetLocal 4 Add(GetLocal(4),4);
  TraceOperation 025975 (Jump 025914);
  Jump: 025914
--[51]--------------------------------------------------
LocRoutine 025978:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 025983
LocOp 025983:
  TraceOperation 025983 (Loadw (Var (Global 163)) (Var (Global 162)) Sp);
  Let b1 = M[008234];
  Let b2 = M[008235];
  Let b3 = M[008232];
  Let b4 = M[008233];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 025987 (Add (Var Sp) (Con 2) (Local 2));
  PopStack popped7;
  SetLocal 2 Add(popped7,2);
  TraceOperation 025991 (Sub (Var (Local 2)) (Con 1) Sp);
  PushStack Sub(GetLocal(2),1);
  TraceOperation 025995 (Storew (Var (Global 163)) (Var Sp) (Var (Local 1)));
  Let b8 = M[008234];
  Let b9 = M[008235];
  PopStack popped10;
  SetByte Offset(Address(MakeHiLo(b8,b9)),Mul(2,popped10)) HiByte(GetLocal(1));
  SetByte Offset(Offset(Address(MakeHiLo(b8,b9)),Mul(2,popped10)),1) LoByte(GetLocal(1));
  TraceOperation 026000 (Storew (Var (Global 163)) (Var (Local 2)) (Con 0));
  Let b11 = M[008234];
  Let b12 = M[008235];
  SetByte Offset(Address(MakeHiLo(b11,b12)),Mul(2,GetLocal(2))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),Mul(2,GetLocal(2))),1) 0;
  TraceOperation 026005 (Storew (Var (Global 163)) (Var (Global 162)) (Var (Local 2)));
  Let b13 = M[008234];
  Let b14 = M[008235];
  Let b15 = M[008232];
  Let b16 = M[008233];
  SetByte Offset(Address(MakeHiLo(b13,b14)),Mul(2,MakeHiLo(b15,b16))) HiByte(GetLocal(2));
  SetByte Offset(Offset(Address(MakeHiLo(b13,b14)),Mul(2,MakeHiLo(b15,b16))),1) LoByte(GetLocal(2));
  TraceOperation 026010 Rtrue;
  PopFrame return_address_17;
  JumpReturn: return_address_17, result: 1
--[52]--------------------------------------------------
LocRoutine 026012:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 026019
LocOp 026019:
  TraceOperation 026019 (Loadw (Var (Global 236)) (Con 0) Sp);
  Let b1 = M[008380];
  Let b2 = M[008381];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 026023 (Mul (Var Sp) (Con 2) (Local 3));
  PopStack popped5;
  SetLocal 3 Mul(popped5,2);
  Jump: 026027
LocOp 026027:
  TraceOperation 026027 (Inc_chk (Con 2) (Var (Local 3)) (Branch T Dfalse));
  SetLocal 2 Add(GetLocal(2),1);
  if (GreaterThanEqual(GetLocal(2),GetLocal(3))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 026031 (Loadw (Var (Global 236)) (Var (Local 2)) Sp);
    Let b2 = M[008380];
    Let b3 = M[008381];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,GetLocal(2)))];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,GetLocal(2))),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 026035 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 026027)));
    PopStack popped6;
    if (Equal(popped6,GetLocal(1))) {
      TraceOperation 026040 (Sub (Var (Local 2)) (Con 1) Sp);
      PushStack Sub(GetLocal(2),1);
      TraceOperation 026044 (Loadw (Var (Global 236)) (Var Sp) Sp);
      Let b7 = M[008380];
      Let b8 = M[008381];
      PopStack popped9;
      Let b10 = M[Offset(Address(MakeHiLo(b7,b8)),Mul(2,popped9))];
      Let b11 = M[Offset(Offset(Address(MakeHiLo(b7,b8)),Mul(2,popped9)),1)];
      PushStack MakeHiLo(b10,b11);
      TraceOperation 026048 (Ret (Var Sp));
      PopStack popped12;
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: popped12
    } else {
      Jump: 026027
    }
  }
--[53]--------------------------------------------------
LocRoutine 026050:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 026053
LocOp 026053:
  TraceOperation 026053 (Store (Con 214) (Var (Local 1)));
  SetByte 008304 HiByte(GetLocal(1));
  SetByte 008305 LoByte(GetLocal(1));
  TraceOperation 026056 (Loadb (Var (Local 1)) (Con 7) (Global 203));
  Let b1 = M[Offset(Address(GetLocal(1)),7)];
  SetByte 008314 HiByte(Widen(b1));
  SetByte 008315 LoByte(Widen(b1));
  TraceOperation 026060 (Ret (Var (Global 203)));
  Let b2 = M[008314];
  Let b3 = M[008315];
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: MakeHiLo(b2,b3)
--[54]--------------------------------------------------
LocRoutine 026062:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 026071
LocOp 026071:
  TraceOperation 026071 (Je [Var (Local 1),Con 30] (Branch F (Dloc 026077)));
  if (Equal(GetLocal(1),30)) {
    TraceOperation 026075 (Ret (Con 217));
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 217
  } else {
    Jump: 026077
  }
LocOp 026077:
  TraceOperation 026077 (Store (Con 188) (Var (Local 1)));
  SetByte 008252 HiByte(GetLocal(1));
  SetByte 008253 LoByte(GetLocal(1));
  TraceOperation 026080 (Store (Con 189) (Var (Local 2)));
  SetByte 008254 HiByte(GetLocal(2));
  SetByte 008255 LoByte(GetLocal(2));
  TraceOperation 026083 (Storew (Var (Global 164)) (Var (Global 162)) (Con 0));
  Let b1 = M[008236];
  Let b2 = M[008237];
  Let b3 = M[008232];
  Let b4 = M[008233];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 0;
  TraceOperation 026088 (Call (Floc 026722) [Var (Global 164),Con 0] Sp);
  Let b5 = M[008236];
  Let b6 = M[008237];
  PushFrame 026088;
  SetLocal 1 MakeHiLo(b5,b6);
  SetLocal 2 0;
  JumpCall: 026722, #actuals: 2
LocReturn 026088:
  PushStack call_result;
  TraceOperation 026095 (Jz (Var Sp) (Branch T (Dloc 026161)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026161
  } else {
    TraceOperation 026099 (Store (Con 188) (Con 0));
    SetByte 008252 0;
    SetByte 008253 0;
    TraceOperation 026102 (Loadw (Var (Global 164)) (Var (Global 162)) Sp);
    Let b2 = M[008236];
    Let b3 = M[008237];
    Let b4 = M[008232];
    Let b5 = M[008233];
    Let b6 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,MakeHiLo(b4,b5)))];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,MakeHiLo(b4,b5))),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 026106 (Je [Var Sp,Con 1] (Branch F Dfalse));
    PopStack popped8;
    if (Equal(popped8,1)) {
      TraceOperation 026110 (Loadw (Var (Global 164)) (Con 1) (Local 4));
      Let b9 = M[008236];
      Let b10 = M[008237];
      Let b11 = M[Offset(Address(MakeHiLo(b9,b10)),2)];
      Let b12 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),2),1)];
      SetLocal 4 MakeHiLo(b11,b12);
      TraceOperation 026114 (Print "(");
      GamePrint "(";
      TraceOperation 026117 (Jz (Var (Local 3)) (Branch T (Dloc 026153)));
      if (IsZero(GetLocal(3))) {
        Jump: 026153
      } else {
        TraceOperation 026120 (Jz (Var (Global 177)) (Branch F (Dloc 026153)));
        Let b13 = M[008262];
        Let b14 = M[008263];
        if (IsZero(MakeHiLo(b13,b14))) {
          TraceOperation 026123 (Call (Floc 026012) [Var (Local 3)] (Local 3));
          PushFrame 026123;
          SetLocal 1 GetLocal(3);
          JumpCall: 026012, #actuals: 1
        } else {
          Jump: 026153
        }
      }
    } else {
      PopFrame return_address_15;
      JumpReturn: return_address_15, result: 0
    }
  }
LocReturn 026123:
  SetLocal 3 call_result;
  TraceOperation 026129 (Print_addr (Var (Local 3)));
  GamePrint GetText(Address(GetLocal(3)));
  TraceOperation 026131 (Je [Var (Local 3),Con 17522] (Branch F (Dloc 026140)));
  if (Equal(GetLocal(3),17522)) {
    TraceOperation 026137 (Print " of");
    GamePrint " of";
    Jump: 026140
  } else {
    Jump: 026140
  }
LocOp 026140:
  TraceOperation 026140 (Test_attr (Var (Local 4)) (Con 31) (Branch T (Dloc 026150)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),3)];
  if (TestBit(b1,0)) {
    Jump: 026150
  } else {
    TraceOperation 026144 (Print " the ");
    GamePrint " the ";
    TraceOperation 026147 (Jump 026153);
    Jump: 026153
  }
LocOp 026150:
  TraceOperation 026150 (Print " ");
  GamePrint " ";
  Jump: 026153
LocOp 026153:
  TraceOperation 026153 (Print_obj (Var (Local 4)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(4),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 026155 (Print ")");
    GamePrint ")";
    TraceOperation 026158 New_line;
    GamePrint "\n";
    TraceOperation 026159 (Ret (Var (Local 4)));
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: GetLocal(4)
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 026155 (Print ")");
    GamePrint ")";
    TraceOperation 026158 New_line;
    GamePrint "\n";
    TraceOperation 026159 (Ret (Var (Local 4)));
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: GetLocal(4)
  }
LocOp 026161:
  TraceOperation 026161 (Store (Con 188) (Con 0));
  SetByte 008252 0;
  SetByte 008253 0;
  TraceOperation 026164 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[55]--------------------------------------------------
LocRoutine 026166:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 026169
LocOp 026169:
  TraceOperation 026169 (Loadw (Var (Global 184)) (Con 6) (Local 1));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 026173 (Jz (Var (Local 1)) (Branch T (Dloc 026208)));
  if (IsZero(GetLocal(1))) {
    Jump: 026208
  } else {
    TraceOperation 026176 (Loadb (Var (Global 198)) (Con 5) (Global 173));
    Let b5 = M[008304];
    Let b6 = M[008305];
    Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),5)];
    SetByte 008254 HiByte(Widen(b7));
    SetByte 008255 LoByte(Widen(b7));
    TraceOperation 026180 (Loadw (Var (Global 184)) (Con 7) Sp);
    Let b8 = M[008276];
    Let b9 = M[008277];
    Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),14)];
    Let b11 = M[Offset(Offset(Address(MakeHiLo(b8,b9)),14),1)];
    PushStack MakeHiLo(b10,b11);
    TraceOperation 026184 (Call (Floc 026342) [Var (Local 1),Var Sp,Var (Global 167)] Sp);
    PopStack popped12;
    Let b13 = M[008242];
    Let b14 = M[008243];
    PushFrame 026184;
    SetLocal 1 GetLocal(1);
    SetLocal 2 popped12;
    SetLocal 3 MakeHiLo(b13,b14);
    JumpCall: 026342, #actuals: 3
  }
LocReturn 026184:
  PushStack call_result;
  TraceOperation 026192 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 026195 (Loadw (Var (Global 165)) (Var (Global 162)) Sp);
    Let b3 = M[008238];
    Let b4 = M[008239];
    Let b5 = M[008232];
    Let b6 = M[008233];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 026199 (Jz (Var Sp) (Branch T (Dloc 026208)));
    PopStack popped9;
    if (IsZero(popped9)) {
      Jump: 026208
    } else {
      TraceOperation 026202 (Call (Floc 026264) [Var (Global 167)] (Global 167));
      Let b10 = M[008242];
      Let b11 = M[008243];
      PushFrame 026202;
      SetLocal 1 MakeHiLo(b10,b11);
      JumpCall: 026264, #actuals: 1
    }
  }
LocReturn 026202:
  SetByte 008242 HiByte(call_result);
  SetByte 008243 LoByte(call_result);
  Jump: 026208
LocOp 026208:
  TraceOperation 026208 (Loadw (Var (Global 184)) (Con 8) (Local 1));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 026212 (Jz (Var (Local 1)) (Branch T Dtrue));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    TraceOperation 026215 (Loadb (Var (Global 198)) (Con 6) (Global 173));
    Let b6 = M[008304];
    Let b7 = M[008305];
    Let b8 = M[Offset(Address(MakeHiLo(b6,b7)),6)];
    SetByte 008254 HiByte(Widen(b8));
    SetByte 008255 LoByte(Widen(b8));
    TraceOperation 026219 (Loadw (Var (Global 184)) (Con 9) Sp);
    Let b9 = M[008276];
    Let b10 = M[008277];
    Let b11 = M[Offset(Address(MakeHiLo(b9,b10)),18)];
    Let b12 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),18),1)];
    PushStack MakeHiLo(b11,b12);
    TraceOperation 026223 (Call (Floc 026342) [Var (Local 1),Var Sp,Var (Global 166)] Sp);
    PopStack popped13;
    Let b14 = M[008240];
    Let b15 = M[008241];
    PushFrame 026223;
    SetLocal 1 GetLocal(1);
    SetLocal 2 popped13;
    SetLocal 3 MakeHiLo(b14,b15);
    JumpCall: 026342, #actuals: 3
  }
LocReturn 026223:
  PushStack call_result;
  TraceOperation 026231 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 026234 (Loadw (Var (Global 165)) (Var (Global 162)) Sp);
    Let b3 = M[008238];
    Let b4 = M[008239];
    Let b5 = M[008232];
    Let b6 = M[008233];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 026238 (Jz (Var Sp) (Branch T Dtrue));
    PopStack popped9;
    if (IsZero(popped9)) {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    } else {
      TraceOperation 026241 (Loadw (Var (Global 166)) (Var (Global 162)) Sp);
      Let b11 = M[008240];
      Let b12 = M[008241];
      Let b13 = M[008232];
      Let b14 = M[008233];
      Let b15 = M[Offset(Address(MakeHiLo(b11,b12)),Mul(2,MakeHiLo(b13,b14)))];
      Let b16 = M[Offset(Offset(Address(MakeHiLo(b11,b12)),Mul(2,MakeHiLo(b13,b14))),1)];
      PushStack MakeHiLo(b15,b16);
      TraceOperation 026245 (Je [Var Sp,Con 1] (Branch F (Dloc 026256)));
      PopStack popped17;
      if (Equal(popped17,1)) {
        TraceOperation 026249 (Call (Floc 026264) [Var (Global 167)] (Global 167));
        Let b18 = M[008242];
        Let b19 = M[008243];
        PushFrame 026249;
        SetLocal 1 MakeHiLo(b18,b19);
        JumpCall: 026264, #actuals: 1
      } else {
        Jump: 026256
      }
    }
  }
LocReturn 026249:
  SetByte 008242 HiByte(call_result);
  SetByte 008243 LoByte(call_result);
  TraceOperation 026255 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 026256:
  TraceOperation 026256 (Call (Floc 026264) [Var (Global 166)] (Global 166));
  Let b1 = M[008240];
  Let b2 = M[008241];
  PushFrame 026256;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 026264, #actuals: 1
LocReturn 026256:
  SetByte 008240 HiByte(call_result);
  SetByte 008241 LoByte(call_result);
  TraceOperation 026262 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[56]--------------------------------------------------
LocRoutine 026264:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 1;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 026279
LocOp 026279:
  TraceOperation 026279 (Loadw (Var (Local 1)) (Var (Global 162)) (Local 2));
  Let b1 = M[008232];
  Let b2 = M[008233];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 026283 (Storew (Var (Global 164)) (Var (Global 162)) (Con 0));
  Let b5 = M[008236];
  Let b6 = M[008237];
  Let b7 = M[008232];
  Let b8 = M[008233];
  SetByte Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8))),1) 0;
  Jump: 026288
LocOp 026288:
  TraceOperation 026288 (Dec_chk (Con 2) (Con 0) (Branch F (Dloc 026295)));
  if (LessThanEqual(GetLocal(2),0)) {
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 026292 (Jump 026328);
    Jump: 026328
  } else {
    SetLocal 2 Sub(GetLocal(2),1);
    Jump: 026295
  }
LocOp 026295:
  TraceOperation 026295 (Loadw (Var (Local 1)) (Var (Local 4)) (Local 6));
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(4)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(4))),1)];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 026299 (Call (Floc 028252) [Var (Local 6),Var (Global 165)] Sp);
  Let b3 = M[008238];
  Let b4 = M[008239];
  PushFrame 026299;
  SetLocal 1 GetLocal(6);
  SetLocal 2 MakeHiLo(b3,b4);
  JumpCall: 028252, #actuals: 2
LocReturn 026299:
  PushStack call_result;
  TraceOperation 026306 (Jz (Var Sp) (Branch T (Dloc 026312)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026312
  } else {
    TraceOperation 026309 (Jump 026323);
    Jump: 026323
  }
LocOp 026312:
  TraceOperation 026312 (Add (Var (Local 5)) (Con 1) Sp);
  PushStack Add(GetLocal(5),1);
  TraceOperation 026316 (Storew (Var (Global 164)) (Var Sp) (Var (Local 6)));
  Let b1 = M[008236];
  Let b2 = M[008237];
  PopStack popped3;
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)) HiByte(GetLocal(6));
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,popped3)),1) LoByte(GetLocal(6));
  TraceOperation 026321 (Inc (Con 5));
  SetLocal 5 Add(GetLocal(5),1);
  Jump: 026323
LocOp 026323:
  TraceOperation 026323 (Inc (Con 4));
  SetLocal 4 Add(GetLocal(4),1);
  TraceOperation 026325 (Jump 026288);
  Jump: 026288
LocOp 026328:
  TraceOperation 026328 (Storew (Var (Global 164)) (Var (Global 162)) (Var (Local 5)));
  Let b1 = M[008236];
  Let b2 = M[008237];
  Let b3 = M[008232];
  Let b4 = M[008233];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) HiByte(GetLocal(5));
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) LoByte(GetLocal(5));
  TraceOperation 026333 (Store (Con 7) (Var (Global 164)));
  Let b5 = M[008236];
  Let b6 = M[008237];
  SetLocal 7 MakeHiLo(b5,b6);
  TraceOperation 026336 (Store (Con 180) (Var (Local 1)));
  SetByte 008236 HiByte(GetLocal(1));
  SetByte 008237 LoByte(GetLocal(1));
  TraceOperation 026339 (Ret (Var (Local 7)));
  PopFrame return_address_7;
  JumpReturn: return_address_7, result: GetLocal(7)
--[57]--------------------------------------------------
LocRoutine 026342:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 026361
LocOp 026361:
  TraceOperation 026361 (Store (Con 221) (Con 0));
  SetByte 008318 0;
  SetByte 008319 0;
  TraceOperation 026364 (Je [Var (Global 161),Con 1] (Branch F (Dloc 026371)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 026368 (Store (Con 9) (Con 1));
    SetLocal 9 1;
    Jump: 026371
  } else {
    Jump: 026371
  }
LocOp 026371:
  TraceOperation 026371 (Store (Con 177) (Con 0));
  SetByte 008230 0;
  SetByte 008231 0;
  TraceOperation 026374 (Store (Con 176) (Var (Local 1)));
  SetByte 008228 HiByte(GetLocal(1));
  SetByte 008229 LoByte(GetLocal(1));
  TraceOperation 026377 (Store (Con 175) (Var (Local 2)));
  SetByte 008226 HiByte(GetLocal(2));
  SetByte 008227 LoByte(GetLocal(2));
  TraceOperation 026380 (Storew (Var (Global 165)) (Var (Global 162)) (Con 0));
  Let b1 = M[008238];
  Let b2 = M[008239];
  Let b3 = M[008232];
  Let b4 = M[008233];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 0;
  TraceOperation 026385 (Storew (Var (Local 3)) (Var (Global 162)) (Con 0));
  Let b5 = M[008232];
  Let b6 = M[008233];
  SetByte Offset(Address(GetLocal(3)),Mul(2,MakeHiLo(b5,b6))) 0;
  SetByte Offset(Offset(Address(GetLocal(3)),Mul(2,MakeHiLo(b5,b6))),1) 0;
  TraceOperation 026390 (Loadw (Var (Local 1)) (Con 0) (Local 7));
  Let b7 = M[Offset(Address(GetLocal(1)),0)];
  Let b8 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
  SetLocal 7 MakeHiLo(b7,b8);
  Jump: 026394
LocOp 026394:
  TraceOperation 026394 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 026424)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    TraceOperation 026398 (Jz (Var (Local 4)) (Branch T (Dloc 026407)));
    if (IsZero(GetLocal(4))) {
      Jump: 026407
    } else {
      TraceOperation 026401 (Push (Var (Local 4)));
      PushStack GetLocal(4);
      TraceOperation 026404 (Jump 026410);
      Jump: 026410
    }
  } else {
    Jump: 026424
  }
LocOp 026407:
  TraceOperation 026407 (Push (Var (Local 3)));
  PushStack GetLocal(3);
  Jump: 026410
LocOp 026410:
  TraceOperation 026410 (Call (Floc 026722) [Var Sp] (Local 6));
  PopStack popped1;
  PushFrame 026410;
  SetLocal 1 popped1;
  JumpCall: 026722, #actuals: 1
LocReturn 026410:
  SetLocal 6 call_result;
  TraceOperation 026416 (Jz (Var (Local 9)) (Branch T (Dloc 026422)));
  if (IsZero(GetLocal(9))) {
    Jump: 026422
  } else {
    TraceOperation 026419 (Store (Con 177) (Con 1));
    SetByte 008230 0;
    SetByte 008231 1;
    Jump: 026422
  }
LocOp 026422:
  TraceOperation 026422 (Ret (Var (Local 6)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(6)
LocOp 026424:
  TraceOperation 026424 (Loadw (Var (Local 1)) (Con 2) (Local 8));
  Let b1 = M[Offset(Address(GetLocal(1)),4)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),4),1)];
  SetLocal 8 MakeHiLo(b1,b2);
  TraceOperation 026428 (Je [Var (Local 7),Con 13798,Con 14386] (Branch F (Dloc 026453)));
  if (LogOr(Equal(GetLocal(7),13798),Equal(GetLocal(7),14386))) {
    TraceOperation 026436 (Store (Con 177) (Con 1));
    SetByte 008230 0;
    SetByte 008231 1;
    TraceOperation 026439 (Je [Var (Local 8),Con 17417] (Branch F (Dloc 026691)));
    if (Equal(GetLocal(8),17417)) {
      TraceOperation 026446 (Add (Var (Local 1)) (Con 4) (Local 1));
      SetLocal 1 Add(GetLocal(1),4);
      TraceOperation 026450 (Jump 026691);
      Jump: 026691
    } else {
      Jump: 026691
    }
  } else {
    Jump: 026453
  }
LocOp 026453:
  TraceOperation 026453 (Je [Var (Local 7),Con 14505,Con 15499] (Branch F (Dloc 026493)));
  if (LogOr(Equal(GetLocal(7),14505),Equal(GetLocal(7),15499))) {
    TraceOperation 026461 (Jz (Var (Local 4)) (Branch T (Dloc 026470)));
    if (IsZero(GetLocal(4))) {
      Jump: 026470
    } else {
      TraceOperation 026464 (Push (Var (Local 4)));
      PushStack GetLocal(4);
      TraceOperation 026467 (Jump 026473);
      Jump: 026473
    }
  } else {
    Jump: 026493
  }
LocOp 026470:
  TraceOperation 026470 (Push (Var (Local 3)));
  PushStack GetLocal(3);
  Jump: 026473
LocOp 026473:
  TraceOperation 026473 (Call (Floc 026722) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 026473;
  SetLocal 1 popped1;
  JumpCall: 026722, #actuals: 1
LocReturn 026473:
  PushStack call_result;
  TraceOperation 026479 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 026482 (Store (Con 4) (Var (Global 165)));
    Let b3 = M[008238];
    Let b4 = M[008239];
    SetLocal 4 MakeHiLo(b3,b4);
    TraceOperation 026485 (Storew (Var (Local 4)) (Var (Global 162)) (Con 0));
    Let b5 = M[008232];
    Let b6 = M[008233];
    SetByte Offset(Address(GetLocal(4)),Mul(2,MakeHiLo(b5,b6))) 0;
    SetByte Offset(Offset(Address(GetLocal(4)),Mul(2,MakeHiLo(b5,b6))),1) 0;
    TraceOperation 026490 (Jump 026691);
    Jump: 026691
  }
LocOp 026493:
  TraceOperation 026493 (Je [Var (Local 7),Con 13693,Con 17473] (Branch F (Dloc 026551)));
  if (LogOr(Equal(GetLocal(7),13693),Equal(GetLocal(7),17473))) {
    TraceOperation 026501 (Jz (Var (Global 170)) (Branch F (Dloc 026521)));
    Let b1 = M[008248];
    Let b2 = M[008249];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 026504 (Store (Con 177) (Con 2));
      SetByte 008230 0;
      SetByte 008231 2;
      TraceOperation 026507 (Je [Var (Local 8),Con 17417] (Branch F (Dloc 026691)));
      if (Equal(GetLocal(8),17417)) {
        TraceOperation 026514 (Add (Var (Local 1)) (Con 4) (Local 1));
        SetLocal 1 Add(GetLocal(1),4);
        TraceOperation 026518 (Jump 026691);
        Jump: 026691
      } else {
        Jump: 026691
      }
    } else {
      Jump: 026521
    }
  } else {
    Jump: 026551
  }
LocOp 026521:
  TraceOperation 026521 (Store (Con 187) (Var (Global 199)));
  Let b1 = M[008306];
  Let b2 = M[008307];
  SetByte 008250 b1;
  SetByte 008251 b2;
  TraceOperation 026524 (Jz (Var (Local 4)) (Branch T (Dloc 026533)));
  if (IsZero(GetLocal(4))) {
    Jump: 026533
  } else {
    TraceOperation 026527 (Push (Var (Local 4)));
    PushStack GetLocal(4);
    TraceOperation 026530 (Jump 026536);
    Jump: 026536
  }
LocOp 026533:
  TraceOperation 026533 (Push (Var (Local 3)));
  PushStack GetLocal(3);
  Jump: 026536
LocOp 026536:
  TraceOperation 026536 (Call (Floc 026722) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 026536;
  SetLocal 1 popped1;
  JumpCall: 026722, #actuals: 1
LocReturn 026536:
  PushStack call_result;
  TraceOperation 026542 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 026545 (Jz (Var (Local 8)) (Branch T Dtrue));
    if (IsZero(GetLocal(8))) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    } else {
      TraceOperation 026548 (Jump 026691);
      Jump: 026691
    }
  }
LocOp 026551:
  TraceOperation 026551 (Je [Var (Local 7),Con 13833,Con 13672] (Branch F (Dloc 026593)));
  if (LogOr(Equal(GetLocal(7),13833),Equal(GetLocal(7),13672))) {
    TraceOperation 026559 (Je [Var (Local 8),Con 13833,Con 13672] (Branch T (Dloc 026593)));
    if (LogOr(Equal(GetLocal(8),13833),Equal(GetLocal(8),13672))) {
      Jump: 026593
    } else {
      TraceOperation 026567 (Store (Con 221) (Con 1));
      SetByte 008318 0;
      SetByte 008319 1;
      TraceOperation 026570 (Jz (Var (Local 4)) (Branch T (Dloc 026579)));
      if (IsZero(GetLocal(4))) {
        Jump: 026579
      } else {
        TraceOperation 026573 (Push (Var (Local 4)));
        PushStack GetLocal(4);
        TraceOperation 026576 (Jump 026582);
        Jump: 026582
      }
    }
  } else {
    Jump: 026593
  }
LocOp 026579:
  TraceOperation 026579 (Push (Var (Local 3)));
  PushStack GetLocal(3);
  Jump: 026582
LocOp 026582:
  TraceOperation 026582 (Call (Floc 026722) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 026582;
  SetLocal 1 popped1;
  JumpCall: 026722, #actuals: 1
LocReturn 026582:
  PushStack call_result;
  TraceOperation 026588 (Jz (Var Sp) (Branch F (Dloc 026691)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 026592 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    Jump: 026691
  }
LocOp 026593:
  TraceOperation 026593 (Call (Floc 023466) [Var (Local 7),Con 4] Sp);
  PushFrame 026593;
  SetLocal 1 GetLocal(7);
  SetLocal 2 4;
  JumpCall: 023466, #actuals: 2
LocReturn 026593:
  PushStack call_result;
  TraceOperation 026600 (Jz (Var Sp) (Branch T (Dloc 026606)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026606
  } else {
    TraceOperation 026603 (Jump 026691);
    Jump: 026691
  }
LocOp 026606:
  TraceOperation 026606 (Je [Var (Local 7),Con 13833,Con 13672] (Branch F (Dloc 026617)));
  if (LogOr(Equal(GetLocal(7),13833),Equal(GetLocal(7),13672))) {
    TraceOperation 026614 (Jump 026691);
    Jump: 026691
  } else {
    Jump: 026617
  }
LocOp 026617:
  TraceOperation 026617 (Je [Var (Local 7),Con 17417] (Branch F (Dloc 026633)));
  if (Equal(GetLocal(7),17417)) {
    TraceOperation 026623 (Jz (Var (Global 161)) (Branch F (Dloc 026691)));
    Let b1 = M[008230];
    Let b2 = M[008231];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 026627 (Store (Con 177) (Con 4));
      SetByte 008230 0;
      SetByte 008231 4;
      TraceOperation 026630 (Jump 026691);
      Jump: 026691
    } else {
      Jump: 026691
    }
  } else {
    Jump: 026633
  }
LocOp 026633:
  TraceOperation 026633 (Call (Floc 023466) [Var (Local 7),Con 32,Con 2] (Local 6));
  PushFrame 026633;
  SetLocal 1 GetLocal(7);
  SetLocal 2 32;
  SetLocal 3 2;
  JumpCall: 023466, #actuals: 3
LocReturn 026633:
  SetLocal 6 call_result;
  TraceOperation 026641 (Jz (Var (Local 6)) (Branch T (Dloc 026674)));
  if (IsZero(GetLocal(6))) {
    Jump: 026674
  } else {
    TraceOperation 026644 (Call (Floc 026706) [Var (Local 7)] Sp);
    PushFrame 026644;
    SetLocal 1 GetLocal(7);
    JumpCall: 026706, #actuals: 1
  }
LocReturn 026644:
  PushStack call_result;
  TraceOperation 026650 (Jz (Var Sp) (Branch T (Dloc 026674)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026674
  } else {
    TraceOperation 026653 (Je [Var (Local 7),Con 19503] (Branch F (Dloc 026665)));
    if (Equal(GetLocal(7),19503)) {
      TraceOperation 026659 (Je [Var (Global 171),Con 14911] (Branch T (Dloc 026674)));
      Let b2 = M[008250];
      Let b3 = M[008251];
      if (Equal(MakeHiLo(b2,b3),14911)) {
        Jump: 026674
      } else {
        Jump: 026665
      }
    } else {
      Jump: 026665
    }
  }
LocOp 026665:
  TraceOperation 026665 (Store (Con 186) (Var (Local 6)));
  SetByte 008248 HiByte(GetLocal(6));
  SetByte 008249 LoByte(GetLocal(6));
  TraceOperation 026668 (Store (Con 184) (Var (Local 7)));
  SetByte 008244 HiByte(GetLocal(7));
  SetByte 008245 LoByte(GetLocal(7));
  TraceOperation 026671 (Jump 026691);
  Jump: 026691
LocOp 026674:
  TraceOperation 026674 (Call (Floc 023466) [Var (Local 7),Con 128,Con 0] Sp);
  PushFrame 026674;
  SetLocal 1 GetLocal(7);
  SetLocal 2 128;
  SetLocal 3 0;
  JumpCall: 023466, #actuals: 3
LocReturn 026674:
  PushStack call_result;
  TraceOperation 026682 (Jz (Var Sp) (Branch T (Dloc 026691)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026691
  } else {
    TraceOperation 026685 (Store (Con 187) (Var (Local 7)));
    SetByte 008250 HiByte(GetLocal(7));
    SetByte 008251 LoByte(GetLocal(7));
    TraceOperation 026688 (Store (Con 215) (Var (Local 7)));
    SetByte 008306 HiByte(GetLocal(7));
    SetByte 008307 LoByte(GetLocal(7));
    Jump: 026691
  }
LocOp 026691:
  TraceOperation 026691 (Je [Var (Local 1),Var (Local 2)] (Branch T (Dloc 026394)));
  if (Equal(GetLocal(1),GetLocal(2))) {
    Jump: 026394
  } else {
    TraceOperation 026696 (Add (Var (Local 1)) (Con 4) (Local 1));
    SetLocal 1 Add(GetLocal(1),4);
    TraceOperation 026700 (Store (Con 7) (Var (Local 8)));
    SetLocal 7 GetLocal(8);
    TraceOperation 026703 (Jump 026394);
    Jump: 026394
  }
--[58]--------------------------------------------------
LocRoutine 026706:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 026709
LocOp 026709:
  TraceOperation 026709 (Jz (Var (Global 170)) (Branch T Dtrue));
  Let b1 = M[008248];
  Let b2 = M[008249];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 026712 (Je [Var (Local 1),Con 16514,Con 17529] (Branch T Dtrue));
    if (LogOr(Equal(GetLocal(1),16514),Equal(GetLocal(1),17529))) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      TraceOperation 026720 Rfalse;
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  }
--[59]--------------------------------------------------
LocRoutine 026722:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 1;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 026743
LocOp 026743:
  TraceOperation 026743 (Store (Con 6) (Var (Global 173)));
  Let b1 = M[008254];
  Let b2 = M[008255];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 026746 (Loadw (Var (Local 1)) (Var (Global 162)) (Local 7));
  Let b3 = M[008232];
  Let b4 = M[008233];
  Let b5 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b3,b4))),1)];
  SetLocal 7 MakeHiLo(b5,b6);
  TraceOperation 026750 (Test (Var (Global 161)) (Con 4) (Branch T Dtrue));
  Let b7 = M[008230];
  Let b8 = M[008231];
  if (Equal(And(MakeHiLo(b7,b8),4),4)) {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  } else {
    TraceOperation 026754 (Jz (Var (Global 171)) (Branch F (Dloc 026777)));
    Let b10 = M[008250];
    Let b11 = M[008251];
    if (IsZero(MakeHiLo(b10,b11))) {
      TraceOperation 026757 (Jz (Var (Global 170)) (Branch T (Dloc 026777)));
      Let b12 = M[008248];
      Let b13 = M[008249];
      if (IsZero(MakeHiLo(b12,b13))) {
        Jump: 026777
      } else {
        TraceOperation 026760 (Call (Floc 023466) [Var (Global 168),Con 128,Con 0] Sp);
        Let b14 = M[008244];
        Let b15 = M[008245];
        PushFrame 026760;
        SetLocal 1 MakeHiLo(b14,b15);
        SetLocal 2 128;
        SetLocal 3 0;
        JumpCall: 023466, #actuals: 3
      }
    } else {
      Jump: 026777
    }
  }
LocReturn 026760:
  PushStack call_result;
  TraceOperation 026768 (Jz (Var Sp) (Branch T (Dloc 026777)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026777
  } else {
    TraceOperation 026771 (Store (Con 187) (Var (Global 168)));
    Let b2 = M[008244];
    Let b3 = M[008245];
    SetByte 008250 b2;
    SetByte 008251 b3;
    TraceOperation 026774 (Store (Con 186) (Con 0));
    SetByte 008248 0;
    SetByte 008249 0;
    Jump: 026777
  }
LocOp 026777:
  TraceOperation 026777 (Jz (Var (Global 171)) (Branch F (Dloc 026797)));
  Let b1 = M[008250];
  Let b2 = M[008251];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 026780 (Jz (Var (Global 170)) (Branch F (Dloc 026797)));
    Let b3 = M[008248];
    Let b4 = M[008249];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 026783 (Je [Var (Global 161),Con 1] (Branch T (Dloc 026797)));
      Let b5 = M[008230];
      Let b6 = M[008231];
      if (Equal(MakeHiLo(b5,b6),1)) {
        Jump: 026797
      } else {
        TraceOperation 026787 (Jz (Var (Global 172)) (Branch F (Dloc 026797)));
        Let b7 = M[008252];
        Let b8 = M[008253];
        if (IsZero(MakeHiLo(b7,b8))) {
          TraceOperation 026790 (Jz (Var (Local 2)) (Branch T Dfalse));
          if (IsZero(GetLocal(2))) {
            PopFrame return_address_9;
            JumpReturn: return_address_9, result: 0
          } else {
            TraceOperation 026793 (Print_paddr (Var (Global 158)));
            Let b10 = M[008224];
            Let b11 = M[008225];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
            TraceOperation 026795 New_line;
            GamePrint "\n";
            TraceOperation 026796 Rfalse;
            PopFrame return_address_12;
            JumpReturn: return_address_12, result: 0
          }
        } else {
          Jump: 026797
        }
      }
    } else {
      Jump: 026797
    }
  } else {
    Jump: 026797
  }
LocOp 026797:
  TraceOperation 026797 (Je [Var (Global 161),Con 1] (Branch F (Dloc 026804)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 026801 (Jz (Var (Global 173)) (Branch F (Dloc 026809)));
    Let b3 = M[008254];
    Let b4 = M[008255];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 026804
    } else {
      Jump: 026809
    }
  } else {
    Jump: 026804
  }
LocOp 026804:
  TraceOperation 026804 (Store (Con 189) (Con -1));
  SetByte 008254 255;
  SetByte 008255 255;
  Jump: 026809
LocOp 026809:
  TraceOperation 026809 (Store (Con 216) (Var (Local 1)));
  SetByte 008308 HiByte(GetLocal(1));
  SetByte 008309 LoByte(GetLocal(1));
  Jump: 026812
LocOp 026812:
  TraceOperation 026812 (Jz (Var (Local 8)) (Branch T (Dloc 026824)));
  if (IsZero(GetLocal(8))) {
    Jump: 026824
  } else {
    TraceOperation 026815 (Call (Floc 027432) [Var (Local 1)] Sp);
    PushFrame 026815;
    SetLocal 1 GetLocal(1);
    JumpCall: 027432, #actuals: 1
  }
LocReturn 026815:
  PushStack call_result;
  TraceOperation 026821 (Jump 026849);
  Jump: 026849
LocOp 026824:
  TraceOperation 026824 (Jz (Var (Global 85)) (Branch T (Dloc 026841)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 026841
  } else {
    TraceOperation 026827 (Clear_attr (Var (Global 235)) (Con 17));
    Let b3 = M[008378];
    Let b4 = M[008379];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),2)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),2) ClearBit(b5,6);
    TraceOperation 026830 (Call (Floc 027620) [Var (Global 0),Con 16,Con 32] Sp);
    Let b6 = M[007908];
    Let b7 = M[007909];
    PushFrame 026830;
    SetLocal 1 MakeHiLo(b6,b7);
    SetLocal 2 16;
    SetLocal 3 32;
    JumpCall: 027620, #actuals: 3
  }
LocReturn 026830:
  PushStack call_result;
  TraceOperation 026838 (Set_attr (Var (Global 235)) (Con 17));
  Let b1 = M[008378];
  Let b2 = M[008379];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2) SetBit(b3,6);
  Jump: 026841
LocOp 026841:
  TraceOperation 026841 (Call (Floc 027620) [Var (Global 235),Con 128,Con 64] Sp);
  Let b1 = M[008378];
  Let b2 = M[008379];
  PushFrame 026841;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 128;
  SetLocal 3 64;
  JumpCall: 027620, #actuals: 3
LocReturn 026841:
  PushStack call_result;
  Jump: 026849
LocOp 026849:
  TraceOperation 026849 (Loadw (Var (Local 1)) (Var (Global 162)) Sp);
  Let b1 = M[008232];
  Let b2 = M[008233];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 026853 (Sub (Var Sp) (Var (Local 7)) (Local 5));
  PopStack popped5;
  SetLocal 5 Sub(popped5,GetLocal(7));
  TraceOperation 026857 (Test (Var (Global 161)) (Con 1) (Branch F (Dloc 026864)));
  Let b6 = M[008230];
  Let b7 = M[008231];
  if (Equal(And(MakeHiLo(b6,b7),1),1)) {
    TraceOperation 026861 (Jump 027209);
    Jump: 027209
  } else {
    Jump: 026864
  }
LocOp 026864:
  TraceOperation 026864 (Test (Var (Global 161)) (Con 2) (Branch F (Dloc 026917)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(And(MakeHiLo(b1,b2),2),2)) {
    TraceOperation 026868 (Jz (Var (Local 5)) (Branch T (Dloc 026917)));
    if (IsZero(GetLocal(5))) {
      Jump: 026917
    } else {
      TraceOperation 026871 (Je [Var (Local 5),Con 1] (Branch T (Dloc 026909)));
      if (Equal(GetLocal(5),1)) {
        Jump: 026909
      } else {
        TraceOperation 026875 (Random (Var (Local 5)) Sp);
        LetRandom random3 GetLocal(5);
        PushStack random3;
        TraceOperation 026879 (Loadw (Var (Local 1)) (Var Sp) Sp);
        PopStack popped4;
        Let b5 = M[Offset(Address(GetLocal(1)),Mul(2,popped4))];
        Let b6 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,popped4)),1)];
        PushStack MakeHiLo(b5,b6);
        TraceOperation 026883 (Storew (Var (Local 1)) (Con 1) (Var Sp));
        PopStack popped7;
        SetByte Offset(Address(GetLocal(1)),2) HiByte(popped7);
        SetByte Offset(Offset(Address(GetLocal(1)),2),1) LoByte(popped7);
        TraceOperation 026888 (Print "(How about the ");
        GamePrint "(How about the ";
        TraceOperation 026897 (Loadw (Var (Local 1)) (Con 1) Sp);
        Let b8 = M[Offset(Address(GetLocal(1)),2)];
        Let b9 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
        PushStack MakeHiLo(b8,b9);
        TraceOperation 026901 (Print_obj (Var Sp));
        PopStack popped10;
        Let b11 = M[Offset(Offset(000751,Mul(popped10,9)),7)];
        Let b12 = M[Offset(Offset(Offset(000751,Mul(popped10,9)),7),1)];
        Let b13 = M[Address(MakeHiLo(b11,b12))];
        if (IsZeroByte(b13)) {
          GamePrint "";
          TraceOperation 026903 (Print "?)");
          GamePrint "?)";
          TraceOperation 026908 New_line;
          GamePrint "\n";
          Jump: 026909
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
          TraceOperation 026903 (Print "?)");
          GamePrint "?)";
          TraceOperation 026908 New_line;
          GamePrint "\n";
          Jump: 026909
        }
      }
    }
  } else {
    Jump: 026917
  }
LocOp 026909:
  TraceOperation 026909 (Storew (Var (Local 1)) (Var (Global 162)) (Con 1));
  Let b1 = M[008232];
  Let b2 = M[008233];
  SetByte Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1) 1;
  TraceOperation 026914 (Jump 027209);
  Jump: 027209
LocOp 026917:
  TraceOperation 026917 (Jg (Var (Local 5)) (Con 1) (Branch T (Dloc 026932)));
  if (GreaterThan(GetLocal(5),1)) {
    Jump: 026932
  } else {
    TraceOperation 026921 (Jz (Var (Local 5)) (Branch F (Dloc 027137)));
    if (IsZero(GetLocal(5))) {
      TraceOperation 026925 (Je [Var (Global 173),Con -1] (Branch T (Dloc 027137)));
      Let b1 = M[008254];
      Let b2 = M[008255];
      if (Equal(MakeHiLo(b1,b2),-1)) {
        Jump: 027137
      } else {
        Jump: 026932
      }
    } else {
      Jump: 027137
    }
  }
LocOp 026932:
  TraceOperation 026932 (Je [Var (Global 173),Con -1] (Branch F (Dloc 026960)));
  Let b1 = M[008254];
  Let b2 = M[008255];
  if (Equal(MakeHiLo(b1,b2),-1)) {
    TraceOperation 026938 (Store (Con 189) (Var (Local 6)));
    SetByte 008254 HiByte(GetLocal(6));
    SetByte 008255 LoByte(GetLocal(6));
    TraceOperation 026941 (Store (Con 9) (Var (Local 5)));
    SetLocal 9 GetLocal(5);
    TraceOperation 026944 (Loadw (Var (Local 1)) (Var (Global 162)) Sp);
    Let b3 = M[008232];
    Let b4 = M[008233];
    Let b5 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b3,b4)))];
    Let b6 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b3,b4))),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 026948 (Sub (Var Sp) (Var (Local 5)) Sp);
    PopStack popped7;
    PushStack Sub(popped7,GetLocal(5));
    TraceOperation 026952 (Storew (Var (Local 1)) (Var (Global 162)) (Var Sp));
    Let b8 = M[008232];
    Let b9 = M[008233];
    PopStack popped10;
    SetByte Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b8,b9))) HiByte(popped10);
    SetByte Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b8,b9))),1) LoByte(popped10);
    TraceOperation 026957 (Jump 026812);
    Jump: 026812
  } else {
    Jump: 026960
  }
LocOp 026960:
  TraceOperation 026960 (Jz (Var (Local 5)) (Branch F (Dloc 026966)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 026963 (Store (Con 5) (Var (Local 9)));
    SetLocal 5 GetLocal(9);
    Jump: 026966
  } else {
    Jump: 026966
  }
LocOp 026966:
  TraceOperation 026966 (Jg (Var (Local 5)) (Con 1) (Branch F (Dloc 027056)));
  if (GreaterThan(GetLocal(5),1)) {
    TraceOperation 026971 (Je [Var (Global 203),Con 174,Con 22] (Branch F (Dloc 027056)));
    Let b1 = M[008314];
    Let b2 = M[008315];
    if (LogOr(Equal(MakeHiLo(b1,b2),174),Equal(MakeHiLo(b1,b2),22))) {
      TraceOperation 026978 (Je [Var (Global 171),Con 15695,Con 15345] (Branch F (Dloc 026989)));
      Let b3 = M[008250];
      Let b4 = M[008251];
      if (LogOr(Equal(MakeHiLo(b3,b4),15695),Equal(MakeHiLo(b3,b4),15345))) {
        TraceOperation 026986 (Jz (Var (Global 170)) (Branch T (Dloc 027015)));
        Let b5 = M[008248];
        Let b6 = M[008249];
        if (IsZero(MakeHiLo(b5,b6))) {
          Jump: 027015
        } else {
          Jump: 026989
        }
      } else {
        Jump: 026989
      }
    } else {
      Jump: 027056
    }
  } else {
    Jump: 027056
  }
LocOp 026989:
  TraceOperation 026989 (Je [Var (Global 171),Con 19699,Con 19685] (Branch F (Dloc 027003)));
  Let b1 = M[008250];
  Let b2 = M[008251];
  if (LogOr(Equal(MakeHiLo(b1,b2),19699),Equal(MakeHiLo(b1,b2),19685))) {
    TraceOperation 026997 (Je [Var (Global 168),Con 17998] (Branch T (Dloc 027015)));
    Let b3 = M[008244];
    Let b4 = M[008245];
    if (Equal(MakeHiLo(b3,b4),17998)) {
      Jump: 027015
    } else {
      Jump: 027003
    }
  } else {
    Jump: 027003
  }
LocOp 027003:
  TraceOperation 027003 (Je [Var (Global 171),Con 15345] (Branch F (Dloc 027056)));
  Let b1 = M[008250];
  Let b2 = M[008251];
  if (Equal(MakeHiLo(b1,b2),15345)) {
    TraceOperation 027009 (Je [Var (Global 168),Con 16465] (Branch F (Dloc 027056)));
    Let b3 = M[008244];
    Let b4 = M[008245];
    if (Equal(MakeHiLo(b3,b4),16465)) {
      Jump: 027015
    } else {
      Jump: 027056
    }
  } else {
    Jump: 027056
  }
LocOp 027015:
  TraceOperation 027015 (Loadw (Var (Local 1)) (Var (Local 5)) Sp);
  Let b1 = M[Offset(Address(GetLocal(1)),Mul(2,GetLocal(5)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,GetLocal(5))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 027019 (Get_prop (Var Sp) (Con 15) (Local 3));
  PopStack popped3;
  Let b4 = M[Offset(Offset(000751,Mul(popped3,9)),7)];
  Let b5 = M[Offset(Offset(Offset(000751,Mul(popped3,9)),7),1)];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Error: getPropsA
LocOp 027056:
  TraceOperation 027056 (Jz (Var (Local 2)) (Branch T (Dloc 027075)));
  if (IsZero(GetLocal(2))) {
    Jump: 027075
  } else {
    TraceOperation 027059 (Je [Var (Global 195),Con 31] (Branch T (Dloc 027075)));
    Let b1 = M[008298];
    Let b2 = M[008299];
    if (Equal(MakeHiLo(b1,b2),31)) {
      Jump: 027075
    } else {
      TraceOperation 027063 (Call (Floc 025324) [] Sp);
      PushFrame 027063;
      JumpCall: 025324, #actuals: 0
    }
  }
LocReturn 027063:
  PushStack call_result;
  TraceOperation 027068 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027071 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027074 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 027075:
  TraceOperation 027075 (Jz (Var (Local 2)) (Branch T (Dloc 027124)));
  if (IsZero(GetLocal(2))) {
    Jump: 027124
  } else {
    TraceOperation 027078 (Jz (Var (Global 171)) (Branch T (Dloc 027124)));
    Let b1 = M[008250];
    Let b2 = M[008251];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 027124
    } else {
      TraceOperation 027081 (Call (Floc 027314) [Var (Local 7),Var (Local 5),Var (Local 1)] Sp);
      PushFrame 027081;
      SetLocal 1 GetLocal(7);
      SetLocal 2 GetLocal(5);
      SetLocal 3 GetLocal(1);
      JumpCall: 027314, #actuals: 3
    }
  }
LocReturn 027081:
  PushStack call_result;
  TraceOperation 027089 (Je [Var (Local 1),Var (Global 167)] (Branch F (Dloc 027099)));
  Let b1 = M[008242];
  Let b2 = M[008243];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 027093 (Push (Con 6));
    PushStack 6;
    TraceOperation 027096 (Jump 027102);
    Jump: 027102
  } else {
    Jump: 027099
  }
LocOp 027099:
  TraceOperation 027099 (Push (Con 8));
  PushStack 8;
  Jump: 027102
LocOp 027102:
  TraceOperation 027102 (Store (Con 203) (Var Sp));
  PopStack popped1;
  SetByte 008282 HiByte(popped1);
  SetByte 008283 LoByte(popped1);
  TraceOperation 027105 (Store (Con 201) (Var (Global 170)));
  Let b2 = M[008248];
  Let b3 = M[008249];
  SetByte 008278 b2;
  SetByte 008279 b3;
  TraceOperation 027108 (Store (Con 202) (Var (Global 171)));
  Let b4 = M[008250];
  Let b5 = M[008251];
  SetByte 008280 b4;
  SetByte 008281 b5;
  TraceOperation 027111 (Call (Floc 025378) [Con 0,Con 0] Sp);
  PushFrame 027111;
  SetLocal 1 0;
  SetLocal 2 0;
  JumpCall: 025378, #actuals: 2
LocReturn 027111:
  PushStack call_result;
  TraceOperation 027118 (Store (Con 205) (Con 1));
  SetByte 008286 0;
  SetByte 008287 1;
  TraceOperation 027121 (Jump 027130);
  Jump: 027130
LocOp 027124:
  TraceOperation 027124 (Jz (Var (Local 2)) (Branch T (Dloc 027130)));
  if (IsZero(GetLocal(2))) {
    Jump: 027130
  } else {
    TraceOperation 027127 (Print_paddr (Var (Global 158)));
    Let b1 = M[008224];
    Let b2 = M[008225];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
    TraceOperation 027129 New_line;
    GamePrint "\n";
    Jump: 027130
  }
LocOp 027130:
  TraceOperation 027130 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027133 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027136 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 027137:
  TraceOperation 027137 (Jz (Var (Local 5)) (Branch F (Dloc 027200)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 027141 (Jz (Var (Local 8)) (Branch T (Dloc 027200)));
    if (IsZero(GetLocal(8))) {
      Jump: 027200
    } else {
      TraceOperation 027144 (Jz (Var (Local 2)) (Branch T (Dloc 027193)));
      if (IsZero(GetLocal(2))) {
        Jump: 027193
      } else {
        TraceOperation 027147 (Store (Con 189) (Var (Local 6)));
        SetByte 008254 HiByte(GetLocal(6));
        SetByte 008255 LoByte(GetLocal(6));
        TraceOperation 027150 (Jz (Var (Global 85)) (Branch F (Dloc 027164)));
        Let b1 = M[008078];
        Let b2 = M[008079];
        if (IsZero(MakeHiLo(b1,b2))) {
          TraceOperation 027153 (Je [Var (Global 203),Con 15] (Branch T (Dloc 027164)));
          Let b3 = M[008314];
          Let b4 = M[008315];
          if (Equal(MakeHiLo(b3,b4),15)) {
            Jump: 027164
          } else {
            TraceOperation 027157 (Je [Var (Global 203),Con 177,Con 174,Con 178] (Branch F (Dloc 027190)));
            Let b5 = M[008314];
            Let b6 = M[008315];
            if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),177),Equal(MakeHiLo(b5,b6),174)),Equal(MakeHiLo(b5,b6),178))) {
              Jump: 027164
            } else {
              Jump: 027190
            }
          }
        } else {
          Jump: 027164
        }
      }
    }
  } else {
    Jump: 027200
  }
LocOp 027164:
  TraceOperation 027164 (Call (Floc 027780) [Con 46,Var (Local 1)] Sp);
  PushFrame 027164;
  SetLocal 1 46;
  SetLocal 2 GetLocal(1);
  JumpCall: 027780, #actuals: 2
LocReturn 027164:
  PushStack call_result;
  TraceOperation 027171 (Store (Con 171) (Var (Global 171)));
  Let b1 = M[008250];
  Let b2 = M[008251];
  SetByte 008218 b1;
  SetByte 008219 b2;
  TraceOperation 027174 (Store (Con 170) (Var (Global 170)));
  Let b3 = M[008248];
  Let b4 = M[008249];
  SetByte 008216 b3;
  SetByte 008217 b4;
  TraceOperation 027177 (Store (Con 169) (Var (Global 168)));
  Let b5 = M[008244];
  Let b6 = M[008245];
  SetByte 008214 b5;
  SetByte 008215 b6;
  TraceOperation 027180 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027183 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027186 (Store (Con 184) (Con 0));
  SetByte 008244 0;
  SetByte 008245 0;
  TraceOperation 027189 Rtrue;
  PopFrame return_address_7;
  JumpReturn: return_address_7, result: 1
LocOp 027190:
  TraceOperation 027190 (Print_paddr (Var (Global 56)));
  Let b1 = M[008020];
  Let b2 = M[008021];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 027192 New_line;
  GamePrint "\n";
  Jump: 027193
LocOp 027193:
  TraceOperation 027193 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027196 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027199 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 027200:
  TraceOperation 027200 (Jz (Var (Local 5)) (Branch F (Dloc 027209)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 027203 (Store (Con 8) (Con 1));
    SetLocal 8 1;
    TraceOperation 027206 (Jump 026812);
    Jump: 026812
  } else {
    Jump: 027209
  }
LocOp 027209:
  TraceOperation 027209 (Store (Con 189) (Var (Local 6)));
  SetByte 008254 HiByte(GetLocal(6));
  SetByte 008255 LoByte(GetLocal(6));
  TraceOperation 027212 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027215 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027218 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[60]--------------------------------------------------
LocRoutine 027220:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 027227
LocOp 027227:
  TraceOperation 027227 (Store (Con 172) (Con 1));
  SetByte 008220 0;
  SetByte 008221 1;
  TraceOperation 027230 (Store (Con 189) (Con -1));
  SetByte 008254 255;
  SetByte 008255 255;
  TraceOperation 027235 (Store (Con 216) (Var (Local 1)));
  SetByte 008308 HiByte(GetLocal(1));
  SetByte 008309 LoByte(GetLocal(1));
  TraceOperation 027238 (Store (Con 187) (Var (Global 155)));
  Let b1 = M[008218];
  Let b2 = M[008219];
  SetByte 008250 b1;
  SetByte 008251 b2;
  TraceOperation 027241 (Store (Con 186) (Var (Global 154)));
  Let b3 = M[008216];
  Let b4 = M[008217];
  SetByte 008248 b3;
  SetByte 008249 b4;
  TraceOperation 027244 (Storew (Var (Local 1)) (Var (Global 162)) (Con 0));
  Let b5 = M[008232];
  Let b6 = M[008233];
  SetByte Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b5,b6))) 0;
  SetByte Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b5,b6))),1) 0;
  TraceOperation 027249 (Get_child (Con 217) (Local 2) (Branch T (Dloc 027253)));
  Let b7 = M[002710];
  SetLocal 2 Widen(b7);
  if (IsZero(Widen(b7))) {
    Jump: 027253
  } else {
    Jump: 027253
  }
LocOp 027253:
  TraceOperation 027253 (Jz (Var (Local 2)) (Branch F (Dloc 027259)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 027256 (Jump 027274);
    Jump: 027274
  } else {
    Jump: 027259
  }
LocOp 027259:
  TraceOperation 027259 (Call (Floc 027672) [Var (Local 2),Var (Local 1),Con 1] Sp);
  PushFrame 027259;
  SetLocal 1 GetLocal(2);
  SetLocal 2 GetLocal(1);
  SetLocal 3 1;
  JumpCall: 027672, #actuals: 3
LocReturn 027259:
  PushStack call_result;
  TraceOperation 027267 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 027271)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),5)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 027271 (Jump 027253);
    Jump: 027253
  } else {
    TraceOperation 027271 (Jump 027253);
    Jump: 027253
  }
LocOp 027274:
  TraceOperation 027274 (Call (Floc 027620) [Con 219,Con 1,Con 1] Sp);
  PushFrame 027274;
  SetLocal 1 219;
  SetLocal 2 1;
  SetLocal 3 1;
  JumpCall: 027620, #actuals: 3
LocReturn 027274:
  PushStack call_result;
  TraceOperation 027282 (Call (Floc 027672) [Con 217,Var (Local 1),Con 0] Sp);
  PushFrame 027282;
  SetLocal 1 217;
  SetLocal 2 GetLocal(1);
  SetLocal 3 0;
  JumpCall: 027672, #actuals: 3
LocReturn 027282:
  PushStack call_result;
  TraceOperation 027290 (Loadw (Var (Local 1)) (Var (Global 162)) (Local 3));
  Let b1 = M[008232];
  Let b2 = M[008233];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 027294 (Je [Var (Local 3),Con 1] (Branch F (Dloc 027302)));
  if (Equal(GetLocal(3),1)) {
    TraceOperation 027298 (Loadw (Var (Local 1)) (Con 1) (Global 157));
    Let b5 = M[Offset(Address(GetLocal(1)),2)];
    Let b6 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
    SetByte 008222 b5;
    SetByte 008223 b6;
    Jump: 027302
  } else {
    Jump: 027302
  }
LocOp 027302:
  TraceOperation 027302 (Store (Con 172) (Con 0));
  SetByte 008220 0;
  SetByte 008221 0;
  TraceOperation 027305 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027308 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027311 (Ret (Var (Local 3)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(3)
--[61]--------------------------------------------------
LocRoutine 027314:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 027325
LocOp 027325:
  TraceOperation 027325 (Store (Con 5) (Var (Local 2)));
  SetLocal 5 GetLocal(2);
  TraceOperation 027328 (Print "Which");
  GamePrint "Which";
  TraceOperation 027333 (Jz (Var (Global 189)) (Branch F (Dloc 027342)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 027336 (Jz (Var (Global 188)) (Branch F (Dloc 027342)));
    Let b3 = M[008284];
    Let b4 = M[008285];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 027339 (Jz (Var (Global 205)) (Branch T (Dloc 027350)));
      Let b5 = M[008318];
      Let b6 = M[008319];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 027350
      } else {
        Jump: 027342
      }
    } else {
      Jump: 027342
    }
  } else {
    Jump: 027342
  }
LocOp 027342:
  TraceOperation 027342 (Print " ");
  GamePrint " ";
  TraceOperation 027345 (Print_addr (Var (Global 171)));
  Let b1 = M[008250];
  Let b2 = M[008251];
  GamePrint GetText(Address(MakeHiLo(b1,b2)));
  TraceOperation 027347 (Jump 027373);
  Jump: 027373
LocOp 027350:
  TraceOperation 027350 (Je [Var (Local 3),Var (Global 167)] (Branch F (Dloc 027365)));
  Let b1 = M[008242];
  Let b2 = M[008243];
  if (Equal(GetLocal(3),MakeHiLo(b1,b2))) {
    TraceOperation 027354 (Call (Floc 025538) [Con 6,Con 7,Con 0] Sp);
    PushFrame 027354;
    SetLocal 1 6;
    SetLocal 2 7;
    SetLocal 3 0;
    JumpCall: 025538, #actuals: 3
  } else {
    Jump: 027365
  }
LocReturn 027354:
  PushStack call_result;
  TraceOperation 027362 (Jump 027373);
  Jump: 027373
LocOp 027365:
  TraceOperation 027365 (Call (Floc 025538) [Con 8,Con 9,Con 0] Sp);
  PushFrame 027365;
  SetLocal 1 8;
  SetLocal 2 9;
  SetLocal 3 0;
  JumpCall: 025538, #actuals: 3
LocReturn 027365:
  PushStack call_result;
  Jump: 027373
LocOp 027373:
  TraceOperation 027373 (Print " do you mean, ");
  GamePrint " do you mean, ";
  Jump: 027382
LocOp 027382:
  TraceOperation 027382 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 027384 (Loadw (Var (Local 3)) (Var (Local 1)) (Local 4));
  Let b1 = M[Offset(Address(GetLocal(3)),Mul(2,GetLocal(1)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(3)),Mul(2,GetLocal(1))),1)];
  SetLocal 4 MakeHiLo(b1,b2);
  TraceOperation 027388 (Test_attr (Var (Local 4)) (Con 31) (Branch T (Dloc 027395)));
  Let b3 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),3)];
  if (TestBit(b3,0)) {
    Jump: 027395
  } else {
    TraceOperation 027392 (Print "the ");
    GamePrint "the ";
    Jump: 027395
  }
LocOp 027395:
  TraceOperation 027395 (Print_obj (Var (Local 4)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(4),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 027397 (Je [Var (Local 2),Con 2] (Branch F (Dloc 027416)));
    if (Equal(GetLocal(2),2)) {
      TraceOperation 027401 (Je [Var (Local 5),Con 2] (Branch T (Dloc 027408)));
      if (Equal(GetLocal(5),2)) {
        Jump: 027408
      } else {
        TraceOperation 027405 (Print ",");
        GamePrint ",";
        Jump: 027408
      }
    } else {
      Jump: 027416
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 027397 (Je [Var (Local 2),Con 2] (Branch F (Dloc 027416)));
    if (Equal(GetLocal(2),2)) {
      TraceOperation 027401 (Je [Var (Local 5),Con 2] (Branch T (Dloc 027408)));
      if (Equal(GetLocal(5),2)) {
        Jump: 027408
      } else {
        TraceOperation 027405 (Print ",");
        GamePrint ",";
        Jump: 027408
      }
    } else {
      Jump: 027416
    }
  }
LocOp 027408:
  TraceOperation 027408 (Print " or ");
  GamePrint " or ";
  TraceOperation 027413 (Jump 027423);
  Jump: 027423
LocOp 027416:
  TraceOperation 027416 (Jg (Var (Local 2)) (Con 2) (Branch F (Dloc 027423)));
  if (GreaterThan(GetLocal(2),2)) {
    TraceOperation 027420 (Print ", ");
    GamePrint ", ";
    Jump: 027423
  } else {
    Jump: 027423
  }
LocOp 027423:
  TraceOperation 027423 (Dec_chk (Con 2) (Con 1) (Branch F (Dloc 027382)));
  if (LessThanEqual(GetLocal(2),1)) {
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 027428 (Print_ret "?");
    GamePrint "?\n";
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    SetLocal 2 Sub(GetLocal(2),1);
    Jump: 027382
  }
--[62]--------------------------------------------------
LocRoutine 027432:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 027449
LocOp 027449:
  TraceOperation 027449 (Loadw (Var (Local 1)) (Var (Global 162)) (Local 2));
  Let b1 = M[008232];
  Let b2 = M[008233];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 027453 (Store (Con 7) (Var (Global 173)));
  Let b5 = M[008254];
  Let b6 = M[008255];
  SetLocal 7 MakeHiLo(b5,b6);
  TraceOperation 027456 (Get_prop_addr (Var (Global 0)) (Con 24) (Local 3));
  Let b7 = M[007908];
  Let b8 = M[007909];
  Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),7)];
  Let b10 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),7),1)];
  Let b11 = M[Address(MakeHiLo(b9,b10))];
  Error: getPropsA
LocOp 027470:
  TraceOperation 027470 (Loadb (Var (Local 3)) (Var (Local 5)) (Local 6));
  Let b1 = M[Offset(Address(GetLocal(3)),GetLocal(5))];
  SetLocal 6 Widen(b1);
  TraceOperation 027474 (Call (Floc 028496) [Var (Local 6),Var (Local 1)] Sp);
  PushFrame 027474;
  SetLocal 1 GetLocal(6);
  SetLocal 2 GetLocal(1);
  JumpCall: 028496, #actuals: 2
LocReturn 027474:
  PushStack call_result;
  TraceOperation 027481 (Jz (Var Sp) (Branch T (Dloc 027491)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 027491
  } else {
    TraceOperation 027484 (Call (Floc 027780) [Var (Local 6),Var (Local 1)] Sp);
    PushFrame 027484;
    SetLocal 1 GetLocal(6);
    SetLocal 2 GetLocal(1);
    JumpCall: 027780, #actuals: 2
  }
LocReturn 027484:
  PushStack call_result;
  Jump: 027491
LocOp 027491:
  TraceOperation 027491 (Inc_chk (Con 5) (Var (Local 4)) (Branch F (Dloc 027470)));
  SetLocal 5 Add(GetLocal(5),1);
  if (GreaterThanEqual(GetLocal(5),GetLocal(4))) {
    Jump: 027496
  } else {
    Jump: 027470
  }
LocOp 027496:
  TraceOperation 027496 (Get_prop_addr (Var (Global 0)) (Con 25) (Local 3));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocOp 027518:
  TraceOperation 027518 (Mul (Var (Local 5)) (Con 2) Sp);
  PushStack Mul(GetLocal(5),2);
  TraceOperation 027522 (Loadw (Var (Local 3)) (Var Sp) Sp);
  PopStack popped1;
  Let b2 = M[Offset(Address(GetLocal(3)),Mul(2,popped1))];
  Let b3 = M[Offset(Offset(Address(GetLocal(3)),Mul(2,popped1)),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 027526 (Je [Var (Global 171),Var Sp] (Branch F (Dloc 027586)));
  Let b4 = M[008250];
  Let b5 = M[008251];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 027530 (Store (Con 206) (Var (Global 0)));
    Let b7 = M[007908];
    Let b8 = M[007909];
    SetByte 008288 b7;
    SetByte 008289 b8;
    TraceOperation 027533 (Mul (Var (Local 5)) (Con 2) Sp);
    PushStack Mul(GetLocal(5),2);
    TraceOperation 027537 (Add (Var Sp) (Con 1) Sp);
    PopStack popped9;
    PushStack Add(popped9,1);
    TraceOperation 027541 (Loadw (Var (Local 3)) (Var Sp) Sp);
    PopStack popped10;
    Let b11 = M[Offset(Address(GetLocal(3)),Mul(2,popped10))];
    Let b12 = M[Offset(Offset(Address(GetLocal(3)),Mul(2,popped10)),1)];
    PushStack MakeHiLo(b11,b12);
    TraceOperation 027545 (Put_prop (Con 48) (Con 29) (Var Sp));
    PopStack popped13;
    Let b14 = M[001190];
    Let b15 = M[001191];
    Let b16 = M[Address(MakeHiLo(b14,b15))];
    Error: getPropsA
  } else {
    Jump: 027586
  }
LocReturn 027576:
  PushStack call_result;
  TraceOperation 027583 (Jump 027591);
  Jump: 027591
LocOp 027586:
  TraceOperation 027586 (Inc_chk (Con 5) (Var (Local 4)) (Branch F (Dloc 027518)));
  SetLocal 5 Add(GetLocal(5),1);
  if (GreaterThanEqual(GetLocal(5),GetLocal(4))) {
    Jump: 027591
  } else {
    Jump: 027518
  }
LocOp 027591:
  TraceOperation 027591 (Loadw (Var (Local 1)) (Var (Global 162)) Sp);
  Let b1 = M[008232];
  Let b2 = M[008233];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 027595 (Je [Var Sp,Var (Local 2)] (Branch F Dfalse));
  PopStack popped5;
  if (Equal(popped5,GetLocal(2))) {
    TraceOperation 027599 (Store (Con 189) (Con -1));
    SetByte 008254 255;
    SetByte 008255 255;
    TraceOperation 027604 (Store (Con 216) (Var (Local 1)));
    SetByte 008308 HiByte(GetLocal(1));
    SetByte 008309 LoByte(GetLocal(1));
    TraceOperation 027607 (Call (Floc 027620) [Con 169,Con 1,Con 1] Sp);
    PushFrame 027607;
    SetLocal 1 169;
    SetLocal 2 1;
    SetLocal 3 1;
    JumpCall: 027620, #actuals: 3
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 027607:
  PushStack call_result;
  TraceOperation 027615 (Store (Con 189) (Var (Local 7)));
  SetByte 008254 HiByte(GetLocal(7));
  SetByte 008255 LoByte(GetLocal(7));
  TraceOperation 027618 (Ret (Var (Global 173)));
  Let b1 = M[008254];
  Let b2 = M[008255];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[63]--------------------------------------------------
LocRoutine 027620:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 027629
LocOp 027629:
  TraceOperation 027629 (Add (Var (Local 2)) (Var (Local 3)) Sp);
  PushStack Add(GetLocal(2),GetLocal(3));
  TraceOperation 027633 (Test (Var (Global 173)) (Var Sp) (Branch F (Dloc 027646)));
  Let b1 = M[008254];
  Let b2 = M[008255];
  PopStack popped3;
  if (Equal(And(MakeHiLo(b1,b2),popped3),popped3)) {
    TraceOperation 027637 (Call (Floc 027672) [Var (Local 1),Var (Global 200),Con 1] Sp);
    Let b4 = M[008308];
    Let b5 = M[008309];
    PushFrame 027637;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b4,b5);
    SetLocal 3 1;
    JumpCall: 027672, #actuals: 3
  } else {
    Jump: 027646
  }
LocReturn 027637:
  PushStack call_result;
  TraceOperation 027645 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 027646:
  TraceOperation 027646 (Test (Var (Global 173)) (Var (Local 2)) (Branch F (Dloc 027659)));
  Let b1 = M[008254];
  Let b2 = M[008255];
  if (Equal(And(MakeHiLo(b1,b2),GetLocal(2)),GetLocal(2))) {
    TraceOperation 027650 (Call (Floc 027672) [Var (Local 1),Var (Global 200),Con 0] Sp);
    Let b3 = M[008308];
    Let b4 = M[008309];
    PushFrame 027650;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b3,b4);
    SetLocal 3 0;
    JumpCall: 027672, #actuals: 3
  } else {
    Jump: 027659
  }
LocReturn 027650:
  PushStack call_result;
  TraceOperation 027658 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 027659:
  TraceOperation 027659 (Test (Var (Global 173)) (Var (Local 3)) (Branch F Dtrue));
  Let b1 = M[008254];
  Let b2 = M[008255];
  if (Equal(And(MakeHiLo(b1,b2),GetLocal(3)),GetLocal(3))) {
    TraceOperation 027663 (Call (Floc 027672) [Var (Local 1),Var (Global 200),Con 2] Sp);
    Let b3 = M[008308];
    Let b4 = M[008309];
    PushFrame 027663;
    SetLocal 1 GetLocal(1);
    SetLocal 2 MakeHiLo(b3,b4);
    SetLocal 3 2;
    JumpCall: 027672, #actuals: 3
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocReturn 027663:
  PushStack call_result;
  TraceOperation 027671 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[64]--------------------------------------------------
LocRoutine 027672:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 027683
LocOp 027683:
  TraceOperation 027683 (Get_child (Var (Local 1)) (Local 1) (Branch F Dfalse));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
  SetLocal 1 Widen(b1);
  if (IsZero(Widen(b1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 027687 (Je [Var (Local 3),Con 2] (Branch T (Dloc 027715)));
    if (Equal(GetLocal(3),2)) {
      Jump: 027715
    } else {
      TraceOperation 027691 (Get_prop_addr (Var (Local 1)) (Con 31) Sp);
      Let b3 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
      Let b4 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Error: getPropsA
    }
  }
LocReturn 027698:
  PushStack call_result;
  TraceOperation 027705 (Jz (Var Sp) (Branch T (Dloc 027715)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 027715
  } else {
    TraceOperation 027708 (Call (Floc 027780) [Var (Local 1),Var (Local 2)] Sp);
    PushFrame 027708;
    SetLocal 1 GetLocal(1);
    SetLocal 2 GetLocal(2);
    JumpCall: 027780, #actuals: 2
  }
LocReturn 027708:
  PushStack call_result;
  Jump: 027715
LocOp 027715:
  TraceOperation 027715 (Je [Var (Local 3),Con 0] (Branch F (Dloc 027727)));
  if (Equal(GetLocal(3),0)) {
    TraceOperation 027719 (Test_attr (Var (Local 1)) (Con 18) (Branch T (Dloc 027727)));
    Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),2)];
    if (TestBit(b1,5)) {
      Jump: 027727
    } else {
      TraceOperation 027723 (Test_attr (Var (Local 1)) (Con 8) (Branch F (Dloc 027773)));
      Let b2 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),1)];
      if (TestBit(b2,7)) {
        Jump: 027727
      } else {
        Jump: 027773
      }
    }
  } else {
    Jump: 027727
  }
LocOp 027727:
  TraceOperation 027727 (Get_child (Var (Local 1)) (Local 5) (Branch F (Dloc 027773)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
  SetLocal 5 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 027773
  } else {
    TraceOperation 027731 (Test_attr (Var (Local 1)) (Con 23) (Branch T (Dloc 027742)));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),2)];
    if (TestBit(b2,0)) {
      Jump: 027742
    } else {
      TraceOperation 027735 (Test_attr (Var (Local 1)) (Con 17) (Branch T (Dloc 027742)));
      Let b3 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),2)];
      if (TestBit(b3,6)) {
        Jump: 027742
      } else {
        TraceOperation 027739 (Jz (Var (Global 156)) (Branch T (Dloc 027773)));
        Let b4 = M[008220];
        Let b5 = M[008221];
        if (IsZero(MakeHiLo(b4,b5))) {
          Jump: 027773
        } else {
          Jump: 027742
        }
      }
    }
  }
LocOp 027742:
  TraceOperation 027742 (Test_attr (Var (Local 1)) (Con 8) (Branch F (Dloc 027752)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),1)];
  if (TestBit(b1,7)) {
    TraceOperation 027746 (Push (Con 1));
    PushStack 1;
    TraceOperation 027749 (Jump 027765);
    Jump: 027765
  } else {
    Jump: 027752
  }
LocOp 027752:
  TraceOperation 027752 (Test_attr (Var (Local 1)) (Con 18) (Branch F (Dloc 027762)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),2)];
  if (TestBit(b1,5)) {
    TraceOperation 027756 (Push (Con 1));
    PushStack 1;
    TraceOperation 027759 (Jump 027765);
    Jump: 027765
  } else {
    Jump: 027762
  }
LocOp 027762:
  TraceOperation 027762 (Push (Con 0));
  PushStack 0;
  Jump: 027765
LocOp 027765:
  TraceOperation 027765 (Call (Floc 027672) [Var (Local 1),Var (Local 2),Var Sp] (Local 4));
  PopStack popped1;
  PushFrame 027765;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  SetLocal 3 popped1;
  JumpCall: 027672, #actuals: 3
LocReturn 027765:
  SetLocal 4 call_result;
  Jump: 027773
LocOp 027773:
  TraceOperation 027773 (Get_sibling (Var (Local 1)) (Local 1) (Branch T (Dloc 027687)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),5)];
  SetLocal 1 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 027778 Rtrue;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    TraceOperation 027687 (Je [Var (Local 3),Con 2] (Branch T (Dloc 027715)));
    if (Equal(GetLocal(3),2)) {
      Jump: 027715
    } else {
      TraceOperation 027691 (Get_prop_addr (Var (Local 1)) (Con 31) Sp);
      Let b3 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
      Let b4 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Error: getPropsA
    }
  }
--[65]--------------------------------------------------
LocRoutine 027780:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 027787
LocOp 027787:
  TraceOperation 027787 (Loadw (Var (Local 2)) (Var (Global 162)) (Local 3));
  Let b1 = M[008232];
  Let b2 = M[008233];
  Let b3 = M[Offset(Address(GetLocal(2)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 027791 (Add (Var (Local 3)) (Con 1) Sp);
  PushStack Add(GetLocal(3),1);
  TraceOperation 027795 (Storew (Var (Local 2)) (Var Sp) (Var (Local 1)));
  PopStack popped5;
  SetByte Offset(Address(GetLocal(2)),Mul(2,popped5)) HiByte(GetLocal(1));
  SetByte Offset(Offset(Address(GetLocal(2)),Mul(2,popped5)),1) LoByte(GetLocal(1));
  TraceOperation 027800 (Add (Var (Local 3)) (Con 1) Sp);
  PushStack Add(GetLocal(3),1);
  TraceOperation 027804 (Storew (Var (Local 2)) (Var (Global 162)) (Var Sp));
  Let b6 = M[008232];
  Let b7 = M[008233];
  PopStack popped8;
  SetByte Offset(Address(GetLocal(2)),Mul(2,MakeHiLo(b6,b7))) HiByte(popped8);
  SetByte Offset(Offset(Address(GetLocal(2)),Mul(2,MakeHiLo(b6,b7))),1) LoByte(popped8);
  TraceOperation 027809 Rtrue;
  PopFrame return_address_9;
  JumpReturn: return_address_9, result: 1
--[66]--------------------------------------------------
LocRoutine 027810:
  MakeRoutineFrame 0;
  Jump: 027811
LocOp 027811:
  TraceOperation 027811 (Loadb (Var (Global 198)) (Con 5) Sp);
  Let b1 = M[008304];
  Let b2 = M[008305];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),5)];
  PushStack Widen(b3);
  TraceOperation 027815 (Call (Floc 027838) [Var (Global 167),Var Sp] Sp);
  Let b4 = M[008242];
  Let b5 = M[008243];
  PopStack popped6;
  PushFrame 027815;
  SetLocal 1 MakeHiLo(b4,b5);
  SetLocal 2 popped6;
  JumpCall: 027838, #actuals: 2
LocReturn 027815:
  PushStack call_result;
  TraceOperation 027822 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 027825 (Loadb (Var (Global 198)) (Con 6) Sp);
    Let b3 = M[008304];
    Let b4 = M[008305];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),6)];
    PushStack Widen(b5);
    TraceOperation 027829 (Call (Floc 027838) [Var (Global 166),Var Sp] Sp);
    Let b6 = M[008240];
    Let b7 = M[008241];
    PopStack popped8;
    PushFrame 027829;
    SetLocal 1 MakeHiLo(b6,b7);
    SetLocal 2 popped8;
    JumpCall: 027838, #actuals: 2
  }
LocReturn 027829:
  PushStack call_result;
  TraceOperation 027836 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[67]--------------------------------------------------
LocRoutine 027838:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 027849
LocOp 027849:
  TraceOperation 027849 (Loadw (Var (Local 1)) (Var (Global 162)) (Local 3));
  Let b1 = M[008232];
  Let b2 = M[008233];
  Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
  Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 027853 (Jz (Var (Local 3)) (Branch T Dtrue));
  if (IsZero(GetLocal(3))) {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    TraceOperation 027856 (Test (Var (Local 2)) (Con 2) (Branch T (Dloc 027864)));
    if (Equal(And(GetLocal(2),2),2)) {
      Jump: 027864
    } else {
      TraceOperation 027860 (Test (Var (Local 2)) (Con 8) (Branch F Dtrue));
      if (Equal(And(GetLocal(2),8),8)) {
        Jump: 027864
      } else {
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      }
    }
  }
LocOp 027864:
  TraceOperation 027864 (Dec_chk (Con 3) (Con 0) (Branch T Dtrue));
  if (LessThanEqual(GetLocal(3),0)) {
    SetLocal 3 Sub(GetLocal(3),1);
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    SetLocal 3 Sub(GetLocal(3),1);
    TraceOperation 027868 (Add (Var (Local 3)) (Con 1) Sp);
    PushStack Add(GetLocal(3),1);
    TraceOperation 027872 (Loadw (Var (Local 1)) (Var Sp) (Local 4));
    PopStack popped2;
    Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,popped2))];
    Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,popped2)),1)];
    SetLocal 4 MakeHiLo(b3,b4);
    TraceOperation 027876 (Je [Var (Local 4),Con 47] (Branch F (Dloc 027896)));
    if (Equal(GetLocal(4),47)) {
      TraceOperation 027880 (Call (Floc 043298) [Var (Global 191)] Sp);
      Let b5 = M[008290];
      Let b6 = M[008291];
      PushFrame 027880;
      SetLocal 1 MakeHiLo(b5,b6);
      JumpCall: 043298, #actuals: 1
    } else {
      Jump: 027896
    }
  }
LocReturn 027880:
  PushStack call_result;
  TraceOperation 027886 (Jz (Var Sp) (Branch F (Dloc 027893)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 027889 (Print_paddr (Var (Global 51)));
    Let b2 = M[008010];
    Let b3 = M[008011];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 027891 New_line;
    GamePrint "\n";
    TraceOperation 027892 Rfalse;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  } else {
    Jump: 027893
  }
LocOp 027893:
  TraceOperation 027893 (Store (Con 4) (Var (Global 191)));
  Let b1 = M[008290];
  Let b2 = M[008291];
  SetLocal 4 MakeHiLo(b1,b2);
  Jump: 027896
LocOp 027896:
  TraceOperation 027896 (Call (Floc 043468) [Var (Local 4)] Sp);
  PushFrame 027896;
  SetLocal 1 GetLocal(4);
  JumpCall: 043468, #actuals: 1
LocReturn 027896:
  PushStack call_result;
  TraceOperation 027902 (Jz (Var Sp) (Branch F (Dloc 027864)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 027906 (Je [Var (Local 4),Con 36,Con 157,Con 43] (Branch T (Dloc 027864)));
    if (LogOr(LogOr(Equal(GetLocal(4),36),Equal(GetLocal(4),157)),Equal(GetLocal(4),43))) {
      Jump: 027864
    } else {
      TraceOperation 027914 (Je [Var (Local 4),Con 8] (Branch F (Dloc 027922)));
      if (Equal(GetLocal(4),8)) {
        TraceOperation 027918 (Jz (Var (Global 66)) (Branch F (Dloc 027864)));
        Let b2 = M[008040];
        Let b3 = M[008041];
        if (IsZero(MakeHiLo(b2,b3))) {
          Jump: 027922
        } else {
          Jump: 027864
        }
      } else {
        Jump: 027922
      }
    }
  } else {
    Jump: 027864
  }
LocOp 027922:
  TraceOperation 027922 (Je [Var (Local 4),Con 4] (Branch F (Dloc 027933)));
  if (Equal(GetLocal(4),4)) {
    TraceOperation 027926 (Je [Var (Global 203),Con 134] (Branch F (Dloc 027933)));
    Let b1 = M[008314];
    Let b2 = M[008315];
    if (Equal(MakeHiLo(b1,b2),134)) {
      TraceOperation 027930 (Jump 027864);
      Jump: 027864
    } else {
      Jump: 027933
    }
  } else {
    Jump: 027933
  }
LocOp 027933:
  TraceOperation 027933 (Store (Con 217) (Var (Local 4)));
  SetByte 008310 HiByte(GetLocal(4));
  SetByte 008311 LoByte(GetLocal(4));
  TraceOperation 027936 (Test_attr (Var (Local 4)) (Con 21) (Branch F (Dloc 027946)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),2)];
  if (TestBit(b1,2)) {
    TraceOperation 027940 (Store (Con 5) (Con 1));
    SetLocal 5 1;
    TraceOperation 027943 (Jump 027979);
    Jump: 027979
  } else {
    Jump: 027946
  }
LocOp 027946:
  TraceOperation 027946 (Je [Var (Global 195),Con 31] (Branch T (Dloc 027956)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),31)) {
    Jump: 027956
  } else {
    TraceOperation 027950 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    TraceOperation 027953 (Jump 027979);
    Jump: 027979
  }
LocOp 027956:
  TraceOperation 027956 (Test (Var (Local 2)) (Con 8) (Branch F (Dloc 027976)));
  if (Equal(And(GetLocal(2),8),8)) {
    TraceOperation 027960 (Call (Floc 040994) [Con 0] Sp);
    PushFrame 027960;
    SetLocal 1 0;
    JumpCall: 040994, #actuals: 1
  } else {
    Jump: 027976
  }
LocReturn 027960:
  PushStack call_result;
  TraceOperation 027966 (Je [Var Sp,Con 1] (Branch F (Dloc 027976)));
  PopStack popped1;
  if (Equal(popped1,1)) {
    TraceOperation 027970 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    TraceOperation 027973 (Jump 027979);
    Jump: 027979
  } else {
    Jump: 027976
  }
LocOp 027976:
  TraceOperation 027976 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 027979
LocOp 027979:
  TraceOperation 027979 (Jz (Var (Local 5)) (Branch T (Dloc 028079)));
  if (IsZero(GetLocal(5))) {
    Jump: 028079
  } else {
    TraceOperation 027983 (Test (Var (Local 2)) (Con 2) (Branch F (Dloc 028079)));
    if (Equal(And(GetLocal(2),2),2)) {
      TraceOperation 027988 (Loadw (Var (Local 1)) (Var (Global 162)) Sp);
      Let b1 = M[008232];
      Let b2 = M[008233];
      Let b3 = M[Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2)))];
      Let b4 = M[Offset(Offset(Address(GetLocal(1)),Mul(2,MakeHiLo(b1,b2))),1)];
      PushStack MakeHiLo(b3,b4);
      TraceOperation 027992 (Jl (Con 1) (Var Sp) (Branch F (Dloc 028013)));
      PopStack popped5;
      if (LessThan(1,popped5)) {
        TraceOperation 027996 (Print_paddr (Var (Global 24)));
        Let b6 = M[007956];
        Let b7 = M[007957];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
        TraceOperation 027998 (Print " all those things!");
        GamePrint " all those things!";
        TraceOperation 028011 New_line;
        GamePrint "\n";
        TraceOperation 028012 Rfalse;
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      } else {
        Jump: 028013
      }
    } else {
      Jump: 028079
    }
  }
LocOp 028013:
  TraceOperation 028013 (Je [Var (Local 4),Con 46] (Branch F (Dloc 028028)));
  if (Equal(GetLocal(4),46)) {
    TraceOperation 028017 (Print "You can't see that here!");
    GamePrint "You can't see that here!";
    TraceOperation 028026 New_line;
    GamePrint "\n";
    TraceOperation 028027 Rfalse;
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    Jump: 028028
  }
LocOp 028028:
  TraceOperation 028028 (Je [Var (Global 195),Con 31] (Branch F (Dloc 028037)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),31)) {
    TraceOperation 028032 (Print_paddr (Var (Global 24)));
    Let b3 = M[007956];
    Let b4 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 028034 (Jump 028064);
    Jump: 028064
  } else {
    Jump: 028037
  }
LocOp 028037:
  TraceOperation 028037 (Print "It doesn't look like");
  GamePrint "It doesn't look like";
  TraceOperation 028048 (Call (Floc 043738) [Var (Global 195),Con 1] Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  PushFrame 028048;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 028048:
  PushStack call_result;
  TraceOperation 028055 (Print " is holding");
  GamePrint " is holding";
  Jump: 028064
LocOp 028064:
  TraceOperation 028064 (Call (Floc 043738) [Var (Local 4),Con 1] Sp);
  PushFrame 028064;
  SetLocal 1 GetLocal(4);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 028064:
  PushStack call_result;
  TraceOperation 028071 (Store (Con 207) (Var (Local 4)));
  SetByte 008290 HiByte(GetLocal(4));
  SetByte 008291 LoByte(GetLocal(4));
  TraceOperation 028074 (Print ".");
  GamePrint ".";
  TraceOperation 028077 New_line;
  GamePrint "\n";
  TraceOperation 028078 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 028079:
  TraceOperation 028079 (Jz (Var (Local 5)) (Branch F (Dloc 027864)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 028083 (Je [Var (Global 195),Con 31] (Branch F (Dloc 027864)));
    Let b1 = M[008298];
    Let b2 = M[008299];
    if (Equal(MakeHiLo(b1,b2),31)) {
      TraceOperation 028088 (Print "(Taking");
      GamePrint "(Taking";
      TraceOperation 028095 (Call (Floc 043738) [Var (Local 4),Con 1] Sp);
      PushFrame 028095;
      SetLocal 1 GetLocal(4);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    } else {
      Jump: 027864
    }
  } else {
    Jump: 027864
  }
LocReturn 028095:
  PushStack call_result;
  TraceOperation 028102 (Print " first)");
  GamePrint " first)";
  TraceOperation 028109 New_line;
  GamePrint "\n";
  TraceOperation 028110 (Jump 027864);
  Jump: 027864
--[68]--------------------------------------------------
LocRoutine 028114:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 028121
LocOp 028121:
  TraceOperation 028121 (Loadw (Var (Global 167)) (Var (Global 162)) Sp);
  Let b1 = M[008242];
  Let b2 = M[008243];
  Let b3 = M[008232];
  Let b4 = M[008233];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 028125 (Jg (Var Sp) (Con 1) (Branch F (Dloc 028143)));
  PopStack popped7;
  if (GreaterThan(popped7,1)) {
    TraceOperation 028129 (Loadb (Var (Global 198)) (Con 5) Sp);
    Let b8 = M[008304];
    Let b9 = M[008305];
    Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),5)];
    PushStack Widen(b10);
    TraceOperation 028133 (Test (Var Sp) (Con 4) (Branch T (Dloc 028143)));
    PopStack popped11;
    if (Equal(And(popped11,4),4)) {
      Jump: 028143
    } else {
      TraceOperation 028137 (Store (Con 1) (Con 1));
      SetLocal 1 1;
      TraceOperation 028140 (Jump 028162);
      Jump: 028162
    }
  } else {
    Jump: 028143
  }
LocOp 028143:
  TraceOperation 028143 (Loadw (Var (Global 166)) (Var (Global 162)) Sp);
  Let b1 = M[008240];
  Let b2 = M[008241];
  Let b3 = M[008232];
  Let b4 = M[008233];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 028147 (Jg (Var Sp) (Con 1) (Branch F (Dloc 028162)));
  PopStack popped7;
  if (GreaterThan(popped7,1)) {
    TraceOperation 028151 (Loadb (Var (Global 198)) (Con 6) Sp);
    Let b8 = M[008304];
    Let b9 = M[008305];
    Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),6)];
    PushStack Widen(b10);
    TraceOperation 028155 (Test (Var Sp) (Con 4) (Branch T (Dloc 028162)));
    PopStack popped11;
    if (Equal(And(popped11,4),4)) {
      Jump: 028162
    } else {
      TraceOperation 028159 (Store (Con 1) (Con 2));
      SetLocal 1 2;
      Jump: 028162
    }
  } else {
    Jump: 028162
  }
LocOp 028162:
  TraceOperation 028162 (Jz (Var (Local 1)) (Branch T Dtrue));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 028165 (Print "You can't use multiple ");
    GamePrint "You can't use multiple ";
    TraceOperation 028178 (Je [Var (Local 1),Con 2] (Branch F (Dloc 028185)));
    if (Equal(GetLocal(1),2)) {
      TraceOperation 028182 (Print "in");
      GamePrint "in";
      Jump: 028185
    } else {
      Jump: 028185
    }
  }
LocOp 028185:
  TraceOperation 028185 (Print "direct objects with \"");
  GamePrint "direct objects with \"";
  TraceOperation 028200 (Loadw (Var (Global 184)) (Con 1) (Local 2));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 028204 (Jz (Var (Local 2)) (Branch F (Dloc 028215)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 028207 (Print "tell");
    GamePrint "tell";
    TraceOperation 028212 (Jump 028245);
    Jump: 028245
  } else {
    Jump: 028215
  }
LocOp 028215:
  TraceOperation 028215 (Jz (Var (Global 189)) (Branch F (Dloc 028221)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 028218 (Jz (Var (Global 188)) (Branch T (Dloc 028230)));
    Let b3 = M[008284];
    Let b4 = M[008285];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 028230
    } else {
      Jump: 028221
    }
  } else {
    Jump: 028221
  }
LocOp 028221:
  TraceOperation 028221 (Loadw (Var (Local 2)) (Con 0) Sp);
  Let b1 = M[Offset(Address(GetLocal(2)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 028225 (Print_addr (Var Sp));
  PopStack popped3;
  GamePrint GetText(Address(popped3));
  TraceOperation 028227 (Jump 028245);
  Jump: 028245
LocOp 028230:
  TraceOperation 028230 (Loadb (Var (Local 2)) (Con 2) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(2)),2)];
  SetLocal 3 Widen(b1);
  TraceOperation 028234 (Loadb (Var (Local 2)) (Con 3) Sp);
  Let b2 = M[Offset(Address(GetLocal(2)),3)];
  PushStack Widen(b2);
  TraceOperation 028238 (Call (Floc 024740) [Var (Local 3),Var Sp] Sp);
  PopStack popped3;
  PushFrame 028238;
  SetLocal 1 GetLocal(3);
  SetLocal 2 popped3;
  JumpCall: 024740, #actuals: 2
LocReturn 028238:
  PushStack call_result;
  Jump: 028245
LocOp 028245:
  TraceOperation 028245 (Print "\".");
  GamePrint "\".";
  TraceOperation 028250 New_line;
  GamePrint "\n";
  TraceOperation 028251 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[69]--------------------------------------------------
LocRoutine 028252:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 1;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -1;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 028261
LocOp 028261:
  TraceOperation 028261 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 028264 (Jl (Var (Local 3)) (Con 0) (Branch T (Dloc 028274)));
    if (LessThan(GetLocal(3),0)) {
      Jump: 028274
    } else {
      TraceOperation 028268 (Store (Con 4) (Con 0));
      SetLocal 4 0;
      TraceOperation 028271 (Jump 028278);
      Jump: 028278
    }
  }
LocOp 028274:
  TraceOperation 028274 (Loadw (Var (Local 2)) (Con 0) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(2)),0)];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),0),1)];
  SetLocal 3 MakeHiLo(b1,b2);
  Jump: 028278
LocOp 028278:
  TraceOperation 028278 (Loadw (Var (Local 2)) (Var (Local 4)) Sp);
  Let b1 = M[Offset(Address(GetLocal(2)),Mul(2,GetLocal(4)))];
  Let b2 = M[Offset(Offset(Address(GetLocal(2)),Mul(2,GetLocal(4))),1)];
  PushStack MakeHiLo(b1,b2);
  TraceOperation 028282 (Je [Var (Local 1),Var Sp] (Branch T Dtrue));
  PopStack popped3;
  if (Equal(GetLocal(1),popped3)) {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    TraceOperation 028286 (Inc_chk (Con 4) (Var (Local 3)) (Branch F (Dloc 028278)));
    SetLocal 4 Add(GetLocal(4),1);
    if (GreaterThanEqual(GetLocal(4),GetLocal(3))) {
      TraceOperation 028291 Rfalse;
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 028278
    }
  }
--[70]--------------------------------------------------
LocRoutine 028292:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 028301
LocOp 028301:
  TraceOperation 028301 (Loadb (Var (Local 2)) (Var (Local 4)) Sp);
  Let b1 = M[Offset(Address(GetLocal(2)),GetLocal(4))];
  PushStack Widen(b1);
  TraceOperation 028305 (Je [Var (Local 1),Var Sp] (Branch T Dtrue));
  PopStack popped2;
  if (Equal(GetLocal(1),popped2)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 028309 (Inc_chk (Con 4) (Var (Local 3)) (Branch F (Dloc 028301)));
    SetLocal 4 Add(GetLocal(4),1);
    if (GreaterThanEqual(GetLocal(4),GetLocal(3))) {
      TraceOperation 028314 Rfalse;
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      Jump: 028301
    }
  }
--[71]--------------------------------------------------
LocRoutine 028316:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 1;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 028325
LocOp 028325:
  TraceOperation 028325 (Store (Con 188) (Con 29));
  SetByte 008252 0;
  SetByte 008253 29;
  TraceOperation 028328 (Store (Con 3) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 028331 (Store (Con 16) (Var (Local 1)));
  SetByte 007908 HiByte(GetLocal(1));
  SetByte 007909 LoByte(GetLocal(1));
  TraceOperation 028334 (Jz (Var (Local 2)) (Branch T (Dloc 028347)));
  if (IsZero(GetLocal(2))) {
    Jump: 028347
  } else {
    TraceOperation 028337 (Test_attr (Var (Local 1)) (Con 29) (Branch F (Dloc 028347)));
    Let b3 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),3)];
    if (TestBit(b3,2)) {
      TraceOperation 028341 (Store (Con 4) (Con 1));
      SetLocal 4 1;
      TraceOperation 028344 (Jump 028407);
      Jump: 028407
    } else {
      Jump: 028347
    }
  }
LocOp 028347:
  TraceOperation 028347 (Storew (Var (Global 164)) (Var (Global 162)) (Con 0));
  Let b1 = M[008236];
  Let b2 = M[008237];
  Let b3 = M[008232];
  Let b4 = M[008233];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 0;
  TraceOperation 028352 (Store (Con 216) (Var (Global 164)));
  Let b5 = M[008236];
  Let b6 = M[008237];
  SetByte 008308 b5;
  SetByte 008309 b6;
  TraceOperation 028355 (Store (Con 189) (Con -1));
  SetByte 008254 255;
  SetByte 008255 255;
  TraceOperation 028360 (Je [Var (Local 3),Var (Local 1)] (Branch F (Dloc 028388)));
  if (Equal(GetLocal(3),GetLocal(1))) {
    TraceOperation 028364 (Call (Floc 027620) [Var (Global 195),Con 1,Con 1] Sp);
    Let b7 = M[008298];
    Let b8 = M[008299];
    PushFrame 028364;
    SetLocal 1 MakeHiLo(b7,b8);
    SetLocal 2 1;
    SetLocal 3 1;
    JumpCall: 027620, #actuals: 3
  } else {
    Jump: 028388
  }
LocReturn 028364:
  PushStack call_result;
  TraceOperation 028372 (Je [Var (Global 195),Var (Global 235)] (Branch T (Dloc 028388)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[008378];
  Let b4 = M[008379];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 028388
  } else {
    TraceOperation 028376 (Jin (Var (Global 235)) (Var (Local 1)) (Branch F (Dloc 028388)));
    Let b5 = M[008378];
    Let b6 = M[008379];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
    if (Equal(GetLocal(1),Widen(b7))) {
      TraceOperation 028380 (Call (Floc 027620) [Var (Global 235),Con 1,Con 1] Sp);
      Let b8 = M[008378];
      Let b9 = M[008379];
      PushFrame 028380;
      SetLocal 1 MakeHiLo(b8,b9);
      SetLocal 2 1;
      SetLocal 3 1;
      JumpCall: 027620, #actuals: 3
    } else {
      Jump: 028388
    }
  }
LocReturn 028380:
  PushStack call_result;
  Jump: 028388
LocOp 028388:
  TraceOperation 028388 (Call (Floc 027620) [Var (Local 1),Con 1,Con 1] Sp);
  PushFrame 028388;
  SetLocal 1 GetLocal(1);
  SetLocal 2 1;
  SetLocal 3 1;
  JumpCall: 027620, #actuals: 3
LocReturn 028388:
  PushStack call_result;
  TraceOperation 028396 (Loadw (Var (Global 200)) (Var (Global 162)) Sp);
  Let b1 = M[008308];
  Let b2 = M[008309];
  Let b3 = M[008232];
  Let b4 = M[008233];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 028400 (Jg (Var Sp) (Con 0) (Branch F (Dloc 028407)));
  PopStack popped7;
  if (GreaterThan(popped7,0)) {
    TraceOperation 028404 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 028407
  } else {
    Jump: 028407
  }
LocOp 028407:
  TraceOperation 028407 (Store (Con 16) (Var (Local 3)));
  SetByte 007908 HiByte(GetLocal(3));
  SetByte 007909 LoByte(GetLocal(3));
  TraceOperation 028410 (Store (Con 188) (Con 0));
  SetByte 008252 0;
  SetByte 008253 0;
  TraceOperation 028413 (Ret (Var (Local 4)));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: GetLocal(4)
--[72]--------------------------------------------------
LocRoutine 028416:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 028419
LocOp 028419:
  TraceOperation 028419 (Jz (Var (Global 188)) (Branch F (Dloc 028436)));
  Let b1 = M[008284];
  Let b2 = M[008285];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 028422 (Loadw (Var (Global 184)) (Con 6) (Local 1));
    Let b3 = M[008276];
    Let b4 = M[008277];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),12)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),12),1)];
    SetLocal 1 MakeHiLo(b5,b6);
    TraceOperation 028426 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b7 = M[Offset(Address(GetLocal(1)),0)];
    Let b8 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 028430 (Je [Var Sp,Con 16619] (Branch F (Dloc 028442)));
    PopStack popped9;
    if (Equal(popped9,16619)) {
      Jump: 028436
    } else {
      Jump: 028442
    }
  } else {
    Jump: 028436
  }
LocOp 028436:
  TraceOperation 028436 (Print " ");
  GamePrint " ";
  TraceOperation 028439 (Print_obj (Var (Global 201)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 028441 Rtrue;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 028441 Rtrue;
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 028442:
  TraceOperation 028442 (Loadw (Var (Global 184)) (Con 7) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),14)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),14),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 028446 (Call (Floc 025564) [Var (Local 1),Var Sp,Con 0] Sp);
  PopStack popped5;
  PushFrame 028446;
  SetLocal 1 GetLocal(1);
  SetLocal 2 popped5;
  SetLocal 3 0;
  JumpCall: 025564, #actuals: 3
LocReturn 028446:
  PushStack call_result;
  TraceOperation 028454 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[73]--------------------------------------------------
LocRoutine 028456:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 028459
LocOp 028459:
  TraceOperation 028459 (Jz (Var (Global 188)) (Branch F (Dloc 028476)));
  Let b1 = M[008284];
  Let b2 = M[008285];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 028462 (Loadw (Var (Global 184)) (Con 8) (Local 1));
    Let b3 = M[008276];
    Let b4 = M[008277];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),16)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),16),1)];
    SetLocal 1 MakeHiLo(b5,b6);
    TraceOperation 028466 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b7 = M[Offset(Address(GetLocal(1)),0)];
    Let b8 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 028470 (Je [Var Sp,Con 16619] (Branch F (Dloc 028482)));
    PopStack popped9;
    if (Equal(popped9,16619)) {
      Jump: 028476
    } else {
      Jump: 028482
    }
  } else {
    Jump: 028476
  }
LocOp 028476:
  TraceOperation 028476 (Print " ");
  GamePrint " ";
  TraceOperation 028479 (Print_obj (Var (Global 201)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 028481 Rtrue;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 028481 Rtrue;
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 028482:
  TraceOperation 028482 (Loadw (Var (Global 184)) (Con 9) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),18)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),18),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 028486 (Call (Floc 025564) [Var (Local 1),Var Sp,Con 0] Sp);
  PopStack popped5;
  PushFrame 028486;
  SetLocal 1 GetLocal(1);
  SetLocal 2 popped5;
  SetLocal 3 0;
  JumpCall: 025564, #actuals: 3
LocReturn 028486:
  PushStack call_result;
  TraceOperation 028494 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[74]--------------------------------------------------
LocRoutine 028496:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 028505
LocOp 028505:
  TraceOperation 028505 (Test_attr (Var (Local 1)) (Con 6) (Branch T Dfalse));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),0)];
  if (TestBit(b1,1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 028509 (Jz (Var (Global 171)) (Branch T (Dloc 028538)));
    Let b3 = M[008250];
    Let b4 = M[008251];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 028538
    } else {
      TraceOperation 028512 (Get_prop_addr (Var (Local 1)) (Con 31) (Local 3));
      Let b5 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
      Let b6 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Error: getPropsA
    }
  }
LocReturn 028527:
  PushStack call_result;
  TraceOperation 028535 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    Jump: 028538
  }
LocOp 028538:
  TraceOperation 028538 (Jz (Var (Global 170)) (Branch T (Dloc 028566)));
  Let b1 = M[008248];
  Let b2 = M[008249];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028566
  } else {
    TraceOperation 028541 (Get_prop_addr (Var (Local 1)) (Con 30) (Local 3));
    Let b3 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Error: getPropsA
  }
LocReturn 028555:
  PushStack call_result;
  TraceOperation 028563 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    Jump: 028566
  }
LocOp 028566:
  TraceOperation 028566 (Jz (Var (Global 172)) (Branch T Dtrue));
  Let b1 = M[008252];
  Let b2 = M[008253];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 028569 (Test_attr (Var (Local 1)) (Var (Global 172)) (Branch T Dtrue));
    Let b4 = M[008252];
    Let b5 = M[008253];
    Let b6 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),Div8(MakeHiLo(b4,b5)))];
    if (TestBit(b6,SevenMinus(LoByte(Mod(MakeHiLo(b4,b5),8))))) {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      TraceOperation 028573 Rfalse;
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 0
    }
  }
--[75]--------------------------------------------------
LocRoutine 028574:
  MakeRoutineFrame 0;
  Jump: 028575
LocOp 028575:
  TraceOperation 028575 (Store (Con 168) (Con 2));
  SetByte 008212 0;
  SetByte 008213 2;
  TraceOperation 028578 (Print "Maximum verbosity.");
  GamePrint "Maximum verbosity.";
  TraceOperation 028593 New_line;
  GamePrint "\n";
  TraceOperation 028594 New_line;
  GamePrint "\n";
  TraceOperation 028595 (Call (Floc 034400) [] Sp);
  PushFrame 028595;
  JumpCall: 034400, #actuals: 0
LocReturn 028595:
  PushStack call_result;
  TraceOperation 028600 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[76]--------------------------------------------------
LocRoutine 028602:
  MakeRoutineFrame 0;
  Jump: 028603
LocOp 028603:
  TraceOperation 028603 (Store (Con 168) (Con 1));
  SetByte 008212 0;
  SetByte 008213 1;
  TraceOperation 028606 (Print_ret "Brief descriptions.");
  GamePrint "Brief descriptions.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[77]--------------------------------------------------
LocRoutine 028622:
  MakeRoutineFrame 0;
  Jump: 028623
LocOp 028623:
  TraceOperation 028623 (Store (Con 168) (Con 0));
  SetByte 008212 0;
  SetByte 008213 0;
  TraceOperation 028626 (Print_ret "Super-brief descriptions.");
  GamePrint "Super-brief descriptions.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[78]--------------------------------------------------
LocRoutine 028648:
  MakeRoutineFrame 0;
  Jump: 028649
LocOp 028649:
  TraceOperation 028649 (Jz (Var (Global 144)) (Branch T (Dloc 028673)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028673
  } else {
    TraceOperation 028652 (Print_ret "You have a big blinding throbber.");
    GamePrint "You have a big blinding throbber.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 028673:
  TraceOperation 028673 (Jz (Var (Global 71)) (Branch T (Dloc 028687)));
  Let b1 = M[008050];
  Let b2 = M[008051];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028687
  } else {
    TraceOperation 028676 (Print_ret "You feel weak.");
    GamePrint "You feel weak.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 028687:
  TraceOperation 028687 (Je [Var (Global 120),Con 195] (Branch F (Dloc 028703)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),195)) {
    TraceOperation 028691 (Print "You have two ");
    GamePrint "You have two ";
    TraceOperation 028698 (Print_obj (Con 170));
    Let b3 = M[002288];
    Let b4 = M[002289];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 028700 (Print_ret "s.");
      GamePrint "s.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 028700 (Print_ret "s.");
      GamePrint "s.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 028703
  }
LocOp 028703:
  TraceOperation 028703 (Print_ret "You are in good health.");
  GamePrint "You are in good health.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[79]--------------------------------------------------
LocRoutine 028718:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 028721
LocOp 028721:
  TraceOperation 028721 (Test_attr (Con 186) (Con 27) (Branch F (Dloc 028734)));
  Let b1 = M[002428];
  if (TestBit(b1,4)) {
    TraceOperation 028725 (Store (Con 1) (Con 1));
    SetLocal 1 1;
    TraceOperation 028728 (Clear_attr (Con 186) (Con 27));
    Let b2 = M[002428];
    SetByte 002428 ClearBit(b2,4);
    TraceOperation 028731 (Jump 028737);
    Jump: 028737
  } else {
    Jump: 028734
  }
LocOp 028734:
  TraceOperation 028734 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  Jump: 028737
LocOp 028737:
  TraceOperation 028737 (Je [Var (Global 120),Con 123] (Branch T (Dloc 028764)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),123)) {
    Jump: 028764
  } else {
    TraceOperation 028741 (Get_child (Con 31) Sp (Branch T (Dloc 028764)));
    Let b3 = M[001036];
    PushStack Widen(b3);
    if (IsZero(Widen(b3))) {
      TraceOperation 028745 (Print "You are empty-handed.");
      GamePrint "You are empty-handed.";
      TraceOperation 028760 New_line;
      GamePrint "\n";
      TraceOperation 028761 (Jump 028816);
      Jump: 028816
    } else {
      Jump: 028764
    }
  }
LocOp 028764:
  TraceOperation 028764 (Print "You have:");
  GamePrint "You have:";
  TraceOperation 028771 New_line;
  GamePrint "\n";
  TraceOperation 028772 (Jz (Var (Global 144)) (Branch T (Dloc 028783)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028783
  } else {
    TraceOperation 028775 (Print "  a ");
    GamePrint "  a ";
    TraceOperation 028780 (Print_obj (Con 170));
    Let b3 = M[002288];
    Let b4 = M[002289];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 028782 New_line;
      GamePrint "\n";
      Jump: 028783
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 028782 New_line;
      GamePrint "\n";
      Jump: 028783
    }
  }
LocOp 028783:
  TraceOperation 028783 (Je [Var (Global 120),Con 123] (Branch F (Dloc 028810)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),123)) {
    TraceOperation 028787 (Jz (Var (Global 66)) (Branch F (Dloc 028799)));
    Let b3 = M[008040];
    Let b4 = M[008041];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 028790 (Call (Floc 043468) [Con 9] Sp);
      PushFrame 028790;
      SetLocal 1 9;
      JumpCall: 043468, #actuals: 1
    } else {
      Jump: 028799
    }
  } else {
    Jump: 028810
  }
LocReturn 028790:
  PushStack call_result;
  TraceOperation 028796 (Jz (Var Sp) (Branch F (Dloc 028810)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 028799
  } else {
    Jump: 028810
  }
LocOp 028799:
  TraceOperation 028799 (Store (Con 82) (Con 1));
  SetByte 008040 0;
  SetByte 008041 1;
  TraceOperation 028802 (Print "  no tea");
  GamePrint "  no tea";
  TraceOperation 028809 New_line;
  GamePrint "\n";
  Jump: 028810
LocOp 028810:
  TraceOperation 028810 (Call (Floc 042074) [Con 31] Sp);
  PushFrame 028810;
  SetLocal 1 31;
  JumpCall: 042074, #actuals: 1
LocReturn 028810:
  PushStack call_result;
  Jump: 028816
LocOp 028816:
  TraceOperation 028816 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 028819 (Set_attr (Con 186) (Con 27));
    Let b2 = M[002428];
    SetByte 002428 SetBit(b2,4);
    TraceOperation 028822 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[80]--------------------------------------------------
LocRoutine 028824:
  MakeRoutineFrame 0;
  Jump: 028825
LocOp 028825:
  TraceOperation 028825 (Call (Floc 029196) [] Sp);
  PushFrame 028825;
  JumpCall: 029196, #actuals: 0
LocReturn 028825:
  PushStack call_result;
  TraceOperation 028830 (Print "Do you wish to leave the game? (Y is affirmative): ");
  GamePrint "Do you wish to leave the game? (Y is affirmative): ";
  TraceOperation 028865 (Call (Floc 029140) [] Sp);
  PushFrame 028865;
  JumpCall: 029140, #actuals: 0
LocReturn 028865:
  PushStack call_result;
  TraceOperation 028870 (Jz (Var Sp) (Branch T (Dloc 028875)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 028875
  } else {
    TraceOperation 028873 Quit;
    Quit
  }
LocOp 028875:
  TraceOperation 028875 (Print_ret "Ok.");
  GamePrint "Ok.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[81]--------------------------------------------------
LocRoutine 028880:
  MakeRoutineFrame 0;
  Jump: 028881
LocOp 028881:
  TraceOperation 028881 (Call (Floc 029196) [Con 1] Sp);
  PushFrame 028881;
  SetLocal 1 1;
  JumpCall: 029196, #actuals: 1
LocReturn 028881:
  PushStack call_result;
  TraceOperation 028887 (Print "Do you wish to restart? (Y is affirmative): ");
  GamePrint "Do you wish to restart? (Y is affirmative): ";
  TraceOperation 028920 (Call (Floc 029140) [] Sp);
  PushFrame 028920;
  JumpCall: 029140, #actuals: 0
LocReturn 028920:
  PushStack call_result;
  TraceOperation 028925 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 028928 (Print "Restarting.");
    GamePrint "Restarting.";
    TraceOperation 028939 New_line;
    GamePrint "\n";
    TraceOperation 028940 Restart;
    Jump: 020735
  }
--[82]--------------------------------------------------
LocRoutine 028948:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 028951
LocOp 028951:
  TraceOperation 028951 New_line;
  GamePrint "\n";
  TraceOperation 028952 (Jz (Var (Local 1)) (Branch F (Dloc 028961)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 028955 (Call (Floc 029196) [] Sp);
    PushFrame 028955;
    JumpCall: 029196, #actuals: 0
  } else {
    Jump: 028961
  }
LocReturn 028955:
  PushStack call_result;
  TraceOperation 028960 New_line;
  GamePrint "\n";
  Jump: 028961
LocOp 028961:
  TraceOperation 028961 (Print "Would you like to start over, restore a saved position, or end this session of the game?\n(Type RESTART, RESTORE, or QUIT): >");
  GamePrint "Would you like to start over, restore a saved position, or end this session of the game?\n(Type RESTART, RESTORE, or QUIT): >";
  TraceOperation 029056 (Sread (Var (Global 193)) (Var (Global 194)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    Let b6 = M[007910];
    Let b7 = M[007911];
    Let b8 = M[007912];
    Let b9 = M[007913];
    ReadInputFromUser (Just (StatusInfo {room = "", score = MakeHiLo(b6,b7), turns = MakeHiLo(b8,b9)})) user_command_line_10;
    Let b11 = M[008294];
    Let b12 = M[008295];
    Let b13 = M[008296];
    Let b14 = M[008297];
    Tokenize user_command_line_10 (num_tokens_15,position_words_16,canonicalized17);
    StringBytes canonicalized17 string_bytes_18;
    ForeachB: (index19,byte20) in (string_bytes_18) {
      SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),1),index19) byte20;
    }
    SetByte Offset(Address(MakeHiLo(b13,b14)),1) num_tokens_15;
    ForeachB: (index21,pos22,word23) in (position_words_16) {
      Let lookee24 = LookupInDict(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),0) HiByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),1) LoByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),2) StringLength(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),3) pos22;
    }
    TraceOperation 029060 (Loadw (Var (Global 194)) (Con 1) Sp);
    Let b25 = M[008296];
    Let b26 = M[008297];
    Let b27 = M[Offset(Address(MakeHiLo(b25,b26)),2)];
    Let b28 = M[Offset(Offset(Address(MakeHiLo(b25,b26)),2),1)];
    PushStack MakeHiLo(b27,b28);
    TraceOperation 029064 (Je [Var Sp,Con 18285] (Branch F (Dloc 029086)));
    PopStack popped29;
    if (Equal(popped29,18285)) {
      TraceOperation 029070 Restart;
      Jump: 020735
    } else {
      Jump: 029086
    }
  } else {
    Let b30 = M[007910];
    Let b31 = M[007911];
    Let b32 = M[007912];
    Let b33 = M[007913];
    ReadInputFromUser (Just (StatusInfo {room = GetText(Offset(Address(MakeHiLo(b3,b4)),1)), score = MakeHiLo(b30,b31), turns = MakeHiLo(b32,b33)})) user_command_line_34;
    Let b35 = M[008294];
    Let b36 = M[008295];
    Let b37 = M[008296];
    Let b38 = M[008297];
    Tokenize user_command_line_34 (num_tokens_39,position_words_40,canonicalized41);
    StringBytes canonicalized41 string_bytes_42;
    ForeachB: (index43,byte44) in (string_bytes_42) {
      SetByte Offset(Offset(Address(MakeHiLo(b35,b36)),1),index43) byte44;
    }
    SetByte Offset(Address(MakeHiLo(b37,b38)),1) num_tokens_39;
    ForeachB: (index45,pos46,word47) in (position_words_40) {
      Let lookee48 = LookupInDict(word47);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b37,b38)),2),Mul(4,index45)),0) HiByte(DeAddress(lookee48));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b37,b38)),2),Mul(4,index45)),1) LoByte(DeAddress(lookee48));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b37,b38)),2),Mul(4,index45)),2) StringLength(word47);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b37,b38)),2),Mul(4,index45)),3) pos46;
    }
    TraceOperation 029060 (Loadw (Var (Global 194)) (Con 1) Sp);
    Let b49 = M[008296];
    Let b50 = M[008297];
    Let b51 = M[Offset(Address(MakeHiLo(b49,b50)),2)];
    Let b52 = M[Offset(Offset(Address(MakeHiLo(b49,b50)),2),1)];
    PushStack MakeHiLo(b51,b52);
    TraceOperation 029064 (Je [Var Sp,Con 18285] (Branch F (Dloc 029086)));
    PopStack popped53;
    if (Equal(popped53,18285)) {
      TraceOperation 029070 Restart;
      Jump: 020735
    } else {
      Jump: 029086
    }
  }
LocReturn 029079:
  PushStack call_result;
  TraceOperation 029085 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 029086:
  TraceOperation 029086 (Loadw (Var (Global 194)) (Con 1) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 029090 (Je [Var Sp,Con 18292] (Branch F (Dloc 029118)));
  PopStack popped5;
  if (Equal(popped5,18292)) {
    TraceOperation 029096 (Restore (Branch F (Dloc 029103)));
    Note "Restore (Branch F (Dloc 029103))";
    TraceOperation 029098 (Print_ret "Ok.");
    GamePrint "Ok.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    Jump: 029118
  }
--[83]--------------------------------------------------
LocRoutine 029116:
  MakeRoutineFrame 0;
  Jump: 029117
LocOp 029117:
  TraceOperation 029117 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[84]--------------------------------------------------
LocRoutine 029120:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 193;
  }
  Jump: 029123
LocOp 029123:
  TraceOperation 029123 (Get_parent (Con 70) (Global 195));
  Let b1 = M[001385];
  SetByte 008298 HiByte(Widen(b1));
  SetByte 008299 LoByte(Widen(b1));
  TraceOperation 029127 (Jin (Var (Global 167)) (Con 68) (Branch T (Dloc 027770)));
  Let b2 = M[008242];
  Let b3 = M[008243];
  Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),4)];
  if (Equal(68,Widen(b4))) {
    Jump: 027770
  } else {
    TraceOperation 029132 (Call (Floc 028948) [Con 1] Sp);
    PushFrame 029132;
    SetLocal 1 1;
    JumpCall: 028948, #actuals: 1
  }
LocReturn 029132:
  PushStack call_result;
  TraceOperation 029138 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[85]--------------------------------------------------
LocRoutine 029140:
  MakeRoutineFrame 0;
  Jump: 029141
LocOp 029141:
  TraceOperation 029141 (Print ">");
  GamePrint ">";
  TraceOperation 029146 (Sread (Var (Global 193)) (Var (Global 194)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    Let b6 = M[007910];
    Let b7 = M[007911];
    Let b8 = M[007912];
    Let b9 = M[007913];
    ReadInputFromUser (Just (StatusInfo {room = "", score = MakeHiLo(b6,b7), turns = MakeHiLo(b8,b9)})) user_command_line_10;
    Let b11 = M[008294];
    Let b12 = M[008295];
    Let b13 = M[008296];
    Let b14 = M[008297];
    Tokenize user_command_line_10 (num_tokens_15,position_words_16,canonicalized17);
    StringBytes canonicalized17 string_bytes_18;
    ForeachB: (index19,byte20) in (string_bytes_18) {
      SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),1),index19) byte20;
    }
    SetByte Offset(Address(MakeHiLo(b13,b14)),1) num_tokens_15;
    ForeachB: (index21,pos22,word23) in (position_words_16) {
      Let lookee24 = LookupInDict(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),0) HiByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),1) LoByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),2) StringLength(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),3) pos22;
    }
    TraceOperation 029150 (Loadw (Var (Global 194)) (Con 1) Sp);
    Let b25 = M[008296];
    Let b26 = M[008297];
    Let b27 = M[Offset(Address(MakeHiLo(b25,b26)),2)];
    Let b28 = M[Offset(Offset(Address(MakeHiLo(b25,b26)),2),1)];
    PushStack MakeHiLo(b27,b28);
    TraceOperation 029154 (Je [Var Sp,Con 20420,Con 20392] (Branch F Dfalse));
    PopStack popped29;
    if (LogOr(Equal(popped29,20420),Equal(popped29,20392))) {
      TraceOperation 029162 Rtrue;
      PopFrame return_address_30;
      JumpReturn: return_address_30, result: 1
    } else {
      PopFrame return_address_31;
      JumpReturn: return_address_31, result: 0
    }
  } else {
    Let b32 = M[007910];
    Let b33 = M[007911];
    Let b34 = M[007912];
    Let b35 = M[007913];
    ReadInputFromUser (Just (StatusInfo {room = GetText(Offset(Address(MakeHiLo(b3,b4)),1)), score = MakeHiLo(b32,b33), turns = MakeHiLo(b34,b35)})) user_command_line_36;
    Let b37 = M[008294];
    Let b38 = M[008295];
    Let b39 = M[008296];
    Let b40 = M[008297];
    Tokenize user_command_line_36 (num_tokens_41,position_words_42,canonicalized43);
    StringBytes canonicalized43 string_bytes_44;
    ForeachB: (index45,byte46) in (string_bytes_44) {
      SetByte Offset(Offset(Address(MakeHiLo(b37,b38)),1),index45) byte46;
    }
    SetByte Offset(Address(MakeHiLo(b39,b40)),1) num_tokens_41;
    ForeachB: (index47,pos48,word49) in (position_words_42) {
      Let lookee50 = LookupInDict(word49);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),0) HiByte(DeAddress(lookee50));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),1) LoByte(DeAddress(lookee50));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),2) StringLength(word49);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),3) pos48;
    }
    TraceOperation 029150 (Loadw (Var (Global 194)) (Con 1) Sp);
    Let b51 = M[008296];
    Let b52 = M[008297];
    Let b53 = M[Offset(Address(MakeHiLo(b51,b52)),2)];
    Let b54 = M[Offset(Offset(Address(MakeHiLo(b51,b52)),2),1)];
    PushStack MakeHiLo(b53,b54);
    TraceOperation 029154 (Je [Var Sp,Con 20420,Con 20392] (Branch F Dfalse));
    PopStack popped55;
    if (LogOr(Equal(popped55,20420),Equal(popped55,20392))) {
      TraceOperation 029162 Rtrue;
      PopFrame return_address_56;
      JumpReturn: return_address_56, result: 1
    } else {
      PopFrame return_address_57;
      JumpReturn: return_address_57, result: 0
    }
  }
--[86]--------------------------------------------------
LocRoutine 029164:
  MakeRoutineFrame 0;
  Jump: 029165
LocOp 029165:
  TraceOperation 029165 (Restore (Branch F (Dloc 029172)));
  Note "Restore (Branch F (Dloc 029172))";
  TraceOperation 029167 (Print_ret "Ok.");
  GamePrint "Ok.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[87]--------------------------------------------------
LocRoutine 029180:
  MakeRoutineFrame 0;
  Jump: 029181
LocOp 029181:
  TraceOperation 029181 (Save (Branch F (Dloc 029188)));
  Note "Save (Branch F (Dloc 029188))";
  TraceOperation 029183 (Print_ret "Ok.");
  GamePrint "Ok.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[88]--------------------------------------------------
LocRoutine 029196:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 1;
  }
  Jump: 029199
LocOp 029199:
  TraceOperation 029199 (Jl (Var (Global 1)) (Con 400) (Branch F (Dloc 029298)));
  Let b1 = M[007910];
  Let b2 = M[007911];
  if (LessThan(MakeHiLo(b1,b2),400)) {
    TraceOperation 029206 (Print "We are about to give you your score. Put on your peril-sensitive sunglasses now. (Hit RETURN or ENTER when ready.) ");
    GamePrint "We are about to give you your score. Put on your peril-sensitive sunglasses now. (Hit RETURN or ENTER when ready.) ";
    TraceOperation 029285 (Print ">");
    GamePrint ">";
    TraceOperation 029290 (Sread (Var (Global 193)) (Var (Global 194)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      Let b8 = M[007910];
      Let b9 = M[007911];
      Let b10 = M[007912];
      Let b11 = M[007913];
      ReadInputFromUser (Just (StatusInfo {room = "", score = MakeHiLo(b8,b9), turns = MakeHiLo(b10,b11)})) user_command_line_12;
      Let b13 = M[008294];
      Let b14 = M[008295];
      Let b15 = M[008296];
      Let b16 = M[008297];
      Tokenize user_command_line_12 (num_tokens_17,position_words_18,canonicalized19);
      StringBytes canonicalized19 string_bytes_20;
      ForeachB: (index21,byte22) in (string_bytes_20) {
        SetByte Offset(Offset(Address(MakeHiLo(b13,b14)),1),index21) byte22;
      }
      SetByte Offset(Address(MakeHiLo(b15,b16)),1) num_tokens_17;
      ForeachB: (index23,pos24,word25) in (position_words_18) {
        Let lookee26 = LookupInDict(word25);
        SetByte Offset(Offset(Offset(Address(MakeHiLo(b15,b16)),2),Mul(4,index23)),0) HiByte(DeAddress(lookee26));
        SetByte Offset(Offset(Offset(Address(MakeHiLo(b15,b16)),2),Mul(4,index23)),1) LoByte(DeAddress(lookee26));
        SetByte Offset(Offset(Offset(Address(MakeHiLo(b15,b16)),2),Mul(4,index23)),2) StringLength(word25);
        SetByte Offset(Offset(Offset(Address(MakeHiLo(b15,b16)),2),Mul(4,index23)),3) pos24;
      }
      TraceOperation 029294 (Store (Con 208) (Con 0));
      SetByte 008292 0;
      SetByte 008293 0;
      TraceOperation 029297 New_line;
      GamePrint "\n";
      Jump: 029298
    } else {
      Let b27 = M[007910];
      Let b28 = M[007911];
      Let b29 = M[007912];
      Let b30 = M[007913];
      ReadInputFromUser (Just (StatusInfo {room = GetText(Offset(Address(MakeHiLo(b5,b6)),1)), score = MakeHiLo(b27,b28), turns = MakeHiLo(b29,b30)})) user_command_line_31;
      Let b32 = M[008294];
      Let b33 = M[008295];
      Let b34 = M[008296];
      Let b35 = M[008297];
      Tokenize user_command_line_31 (num_tokens_36,position_words_37,canonicalized38);
      StringBytes canonicalized38 string_bytes_39;
      ForeachB: (index40,byte41) in (string_bytes_39) {
        SetByte Offset(Offset(Address(MakeHiLo(b32,b33)),1),index40) byte41;
      }
      SetByte Offset(Address(MakeHiLo(b34,b35)),1) num_tokens_36;
      ForeachB: (index42,pos43,word44) in (position_words_37) {
        Let lookee45 = LookupInDict(word44);
        SetByte Offset(Offset(Offset(Address(MakeHiLo(b34,b35)),2),Mul(4,index42)),0) HiByte(DeAddress(lookee45));
        SetByte Offset(Offset(Offset(Address(MakeHiLo(b34,b35)),2),Mul(4,index42)),1) LoByte(DeAddress(lookee45));
        SetByte Offset(Offset(Offset(Address(MakeHiLo(b34,b35)),2),Mul(4,index42)),2) StringLength(word44);
        SetByte Offset(Offset(Offset(Address(MakeHiLo(b34,b35)),2),Mul(4,index42)),3) pos43;
      }
      TraceOperation 029294 (Store (Con 208) (Con 0));
      SetByte 008292 0;
      SetByte 008293 0;
      TraceOperation 029297 New_line;
      GamePrint "\n";
      Jump: 029298
    }
  } else {
    Jump: 029298
  }
LocOp 029298:
  TraceOperation 029298 (Print "Your score is ");
  GamePrint "Your score is ";
  TraceOperation 029309 (Print_num (Var (Global 1)));
  Let b1 = M[007910];
  Let b2 = M[007911];
  GamePrint ShowNumber(MakeHiLo(b1,b2));
  TraceOperation 029312 (Print " of a possible 400, in ");
  GamePrint " of a possible 400, in ";
  TraceOperation 029329 (Print_num (Var (Global 2)));
  Let b3 = M[007912];
  Let b4 = M[007913];
  GamePrint ShowNumber(MakeHiLo(b3,b4));
  TraceOperation 029332 (Je [Var (Global 2),Con 1] (Branch F (Dloc 029346)));
  Let b5 = M[007912];
  Let b6 = M[007913];
  if (Equal(MakeHiLo(b5,b6),1)) {
    TraceOperation 029336 (Print " turn.");
    GamePrint " turn.";
    TraceOperation 029343 (Jump 029353);
    Jump: 029353
  } else {
    Jump: 029346
  }
LocOp 029346:
  TraceOperation 029346 (Print " turns.");
  GamePrint " turns.";
  Jump: 029353
LocOp 029353:
  TraceOperation 029353 New_line;
  GamePrint "\n";
  TraceOperation 029354 (Ret (Var (Global 1)));
  Let b1 = M[007910];
  Let b2 = M[007911];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[89]--------------------------------------------------
LocRoutine 029356:
  MakeRoutineFrame 0;
  Jump: 029357
LocOp 029357:
  TraceOperation 029357 (Loadw (Con 0) (Con 8) Sp);
  PushStack 0;
  TraceOperation 029361 (Or (Var Sp) (Con 1) Sp);
  PopStack popped1;
  PushStack Or(popped1,1);
  TraceOperation 029365 (Storew (Con 0) (Con 8) (Var Sp));
  PopStack popped2;
  SetByte 000016 HiByte(popped2);
  SetByte 000017 LoByte(popped2);
  TraceOperation 029370 (Call (Floc 029414) [Con -11788] Sp);
  PushFrame 029370;
  SetLocal 1 -11788;
  JumpCall: 029414, #actuals: 1
LocReturn 029370:
  PushStack call_result;
  TraceOperation 029377 (Call (Floc 029450) [] Sp);
  PushFrame 029377;
  JumpCall: 029450, #actuals: 0
LocReturn 029377:
  PushStack call_result;
  TraceOperation 029382 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[90]--------------------------------------------------
LocRoutine 029384:
  MakeRoutineFrame 0;
  Jump: 029385
LocOp 029385:
  TraceOperation 029385 (Call (Floc 029414) [Con -11786] Sp);
  PushFrame 029385;
  SetLocal 1 -11786;
  JumpCall: 029414, #actuals: 1
LocReturn 029385:
  PushStack call_result;
  TraceOperation 029392 (Call (Floc 029450) [] Sp);
  PushFrame 029392;
  JumpCall: 029450, #actuals: 0
LocReturn 029392:
  PushStack call_result;
  TraceOperation 029397 (Loadw (Con 0) (Con 8) Sp);
  PushStack 0;
  TraceOperation 029401 (And (Var Sp) (Con -2) Sp);
  PopStack popped1;
  PushStack And(popped1,-2);
  TraceOperation 029407 (Storew (Con 0) (Con 8) (Var Sp));
  PopStack popped2;
  SetByte 000016 HiByte(popped2);
  SetByte 000017 LoByte(popped2);
  TraceOperation 029412 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[91]--------------------------------------------------
LocRoutine 029414:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 029417
LocOp 029417:
  TraceOperation 029417 (Print "Here ");
  GamePrint "Here ";
  TraceOperation 029422 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z3(GetLocal(1)));
  TraceOperation 029424 (Print " a transcript of interaction with ");
  GamePrint " a transcript of interaction with ";
  TraceOperation 029445 (Print_paddr (Var (Global 37)));
  Let b1 = M[007982];
  Let b2 = M[007983];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 029447 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[92]--------------------------------------------------
LocRoutine 029450:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 17;
    }
  }
  Jump: 029455
LocOp 029455:
  TraceOperation 029455 (Loadw (Con 0) (Con 1) Sp);
  PushStack 59;
  TraceOperation 029459 (And (Var Sp) (Con 2047) (Local 2));
  PopStack popped1;
  SetLocal 2 And(popped1,2047);
  TraceOperation 029465 (Print "THE HITCHHIKER'S GUIDE TO THE GALAXY\nInfocom interactive fiction - a science fiction story\nCopyright (c) 1984 by Infocom, Inc. All rights reserved.\n");
  GamePrint "THE HITCHHIKER'S GUIDE TO THE GALAXY\nInfocom interactive fiction - a science fiction story\nCopyright (c) 1984 by Infocom, Inc. All rights reserved.\n";
  TraceOperation 029596 (Print "Release ");
  GamePrint "Release ";
  TraceOperation 029603 (Print_num (Var (Local 2)));
  GamePrint ShowNumber(GetLocal(2));
  TraceOperation 029606 (Print " / Serial number ");
  GamePrint " / Serial number ";
  Jump: 029621
LocOp 029621:
  TraceOperation 029621 (Inc_chk (Con 1) (Con 23) (Branch F (Dloc 029628)));
  SetLocal 1 Add(GetLocal(1),1);
  if (GreaterThanEqual(GetLocal(1),23)) {
    TraceOperation 029625 (Jump 029638);
    Jump: 029638
  } else {
    Jump: 029628
  }
LocOp 029628:
  TraceOperation 029628 (Loadb (Con 0) (Var (Local 1)) Sp);
  Let b1 = M[Offset(000000,GetLocal(1))];
  PushStack Widen(b1);
  TraceOperation 029632 (Print_char (Var Sp));
  PopStack popped2;
  GamePrint SingleChar(popped2);
  TraceOperation 029635 (Jump 029621);
  Jump: 029621
LocOp 029638:
  TraceOperation 029638 New_line;
  GamePrint "\n";
  TraceOperation 029639 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[93]--------------------------------------------------
LocRoutine 029640:
  MakeRoutineFrame 0;
  Jump: 029641
LocOp 029641:
  TraceOperation 029641 (Je [Var (Global 201),Con 49] (Branch F (Dloc 029657)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 029645 (Je [Var (Global 174),Con 469] (Branch F (Dloc 029657)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (Equal(MakeHiLo(b3,b4),469)) {
      TraceOperation 029651 (Print_num (Con 1));
      GamePrint "1";
      TraceOperation 029655 New_line;
      GamePrint "\n";
      TraceOperation 029656 Rtrue;
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 029657
    }
  } else {
    Jump: 029657
  }
LocOp 029657:
  TraceOperation 029657 (Print "Verifying...");
  GamePrint "Verifying...";
  TraceOperation 029670 New_line;
  GamePrint "\n";
  TraceOperation 029671 (Verify (Branch F (Dloc 029680)));
  Note "Verify (Branch F (Dloc 029680))";
  TraceOperation 029673 (Print_ret "Good.");
  GamePrint "Good.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[94]--------------------------------------------------
LocRoutine 029698:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029703
LocOp 029703:
  TraceOperation 029703 (Jz (Var (Global 229)) (Branch T (Dloc 029718)));
  Let b1 = M[008366];
  Let b2 = M[008367];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 029718
  } else {
    TraceOperation 029706 (Store (Con 192) (Con 1));
    SetByte 008260 0;
    SetByte 008261 1;
    TraceOperation 029709 (Store (Con 219) (Var (Global 232)));
    Let b3 = M[008372];
    Let b4 = M[008373];
    SetByte 008314 b3;
    SetByte 008315 b4;
    TraceOperation 029712 (Call (Floc 046754) [] Sp);
    PushFrame 029712;
    JumpCall: 046754, #actuals: 0
  }
LocReturn 029712:
  PushStack call_result;
  TraceOperation 029717 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 029718:
  TraceOperation 029718 (Jz (Var (Global 232)) (Branch F (Dloc 029736)));
  Let b1 = M[008372];
  Let b2 = M[008373];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 029721 (Print_ret "Not until you do something.");
    GamePrint "Not until you do something.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 029736
  }
LocOp 029736:
  TraceOperation 029736 (Je [Var (Global 232),Con 64,Con 69,Con 105] (Branch T (Dloc 029776)));
  Let b1 = M[008372];
  Let b2 = M[008373];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),64),Equal(MakeHiLo(b1,b2),69)),Equal(MakeHiLo(b1,b2),105))) {
    Jump: 029776
  } else {
    TraceOperation 029743 (Je [Var (Global 232),Con 174,Con 177,Con 178] (Branch T (Dloc 029776)));
    Let b3 = M[008372];
    Let b4 = M[008373];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),174),Equal(MakeHiLo(b3,b4),177)),Equal(MakeHiLo(b3,b4),178))) {
      Jump: 029776
    } else {
      TraceOperation 029750 (Je [Var (Global 232),Con 166,Con 21,Con 175] (Branch T (Dloc 029776)));
      Let b5 = M[008372];
      Let b6 = M[008373];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),166),Equal(MakeHiLo(b5,b6),21)),Equal(MakeHiLo(b5,b6),175))) {
        Jump: 029776
      } else {
        TraceOperation 029757 (Je [Var (Global 232),Con 22,Con 23,Con 5] (Branch T (Dloc 029776)));
        Let b7 = M[008372];
        Let b8 = M[008373];
        if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),22),Equal(MakeHiLo(b7,b8),23)),Equal(MakeHiLo(b7,b8),5))) {
          Jump: 029776
        } else {
          TraceOperation 029764 (Je [Var (Global 232),Con 101,Con 150,Con 106] (Branch T (Dloc 029776)));
          Let b9 = M[008372];
          Let b10 = M[008373];
          if (LogOr(LogOr(Equal(MakeHiLo(b9,b10),101),Equal(MakeHiLo(b9,b10),150)),Equal(MakeHiLo(b9,b10),106))) {
            Jump: 029776
          } else {
            TraceOperation 029771 (Je [Var (Global 232),Con 31] (Branch F (Dloc 029857)));
            Let b11 = M[008372];
            Let b12 = M[008373];
            if (Equal(MakeHiLo(b11,b12),31)) {
              Jump: 029776
            } else {
              Jump: 029857
            }
          }
        }
      }
    }
  }
LocOp 029776:
  TraceOperation 029776 (Print "Sorry, the Galactic Compendium on Interactive Fiction prohibits the use of AGAIN after your previous action.");
  GamePrint "Sorry, the Galactic Compendium on Interactive Fiction prohibits the use of AGAIN after your previous action.";
  TraceOperation 029851 New_line;
  GamePrint "\n";
  TraceOperation 029852 (Store (Con 219) (Con 0));
  SetByte 008314 0;
  SetByte 008315 0;
  TraceOperation 029855 (Ret (Var (Global 203)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
LocOp 029857:
  TraceOperation 029857 (Je [Con 46,Var (Global 231),Var (Global 230)] (Branch F (Dloc 029872)));
  Let b1 = M[008370];
  Let b2 = M[008371];
  Let b3 = M[008368];
  Let b4 = M[008369];
  if (LogOr(Equal(46,MakeHiLo(b1,b2)),Equal(46,MakeHiLo(b3,b4)))) {
    TraceOperation 029863 (Print_ret "You can't see that here.");
    GamePrint "You can't see that here.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 029872
  }
LocOp 029872:
  TraceOperation 029872 (Je [Var (Global 232),Con 169] (Branch F (Dloc 029883)));
  Let b1 = M[008372];
  Let b2 = M[008373];
  if (Equal(MakeHiLo(b1,b2),169)) {
    TraceOperation 029876 (Call (Floc 043620) [Var (Global 231)] Sp);
    Let b3 = M[008370];
    Let b4 = M[008371];
    PushFrame 029876;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 043620, #actuals: 1
  } else {
    Jump: 029883
  }
LocReturn 029876:
  PushStack call_result;
  TraceOperation 029882 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 029883:
  TraceOperation 029883 (Jz (Var (Global 231)) (Branch T (Dloc 029901)));
  Let b1 = M[008370];
  Let b2 = M[008371];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 029901
  } else {
    TraceOperation 029886 (Call (Floc 043370) [Var (Global 231)] Sp);
    Let b3 = M[008370];
    Let b4 = M[008371];
    PushFrame 029886;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 043370, #actuals: 1
  }
LocReturn 029886:
  PushStack call_result;
  TraceOperation 029892 (Jz (Var Sp) (Branch F (Dloc 029901)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 029895 (Push (Var (Global 231)));
    Let b2 = M[008370];
    Let b3 = M[008371];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 029898 (Jump 029922);
    Jump: 029922
  } else {
    Jump: 029901
  }
LocOp 029901:
  TraceOperation 029901 (Jz (Var (Global 230)) (Branch T (Dloc 029919)));
  Let b1 = M[008368];
  Let b2 = M[008369];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 029919
  } else {
    TraceOperation 029904 (Call (Floc 043370) [Var (Global 230)] Sp);
    Let b3 = M[008368];
    Let b4 = M[008369];
    PushFrame 029904;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 043370, #actuals: 1
  }
LocReturn 029904:
  PushStack call_result;
  TraceOperation 029910 (Jz (Var Sp) (Branch F (Dloc 029919)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 029913 (Push (Var (Global 230)));
    Let b2 = M[008368];
    Let b3 = M[008369];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 029916 (Jump 029922);
    Jump: 029922
  } else {
    Jump: 029919
  }
LocOp 029919:
  TraceOperation 029919 (Push (Con 0));
  PushStack 0;
  Jump: 029922
LocOp 029922:
  TraceOperation 029922 (Store (Con 1) (Var Sp));
  PopStack popped1;
  SetLocal 1 popped1;
  TraceOperation 029925 (Jz (Var (Local 1)) (Branch T (Dloc 029976)));
  if (IsZero(GetLocal(1))) {
    Jump: 029976
  } else {
    TraceOperation 029928 (Je [Var (Local 1),Con 217] (Branch T (Dloc 029976)));
    if (Equal(GetLocal(1),217)) {
      Jump: 029976
    } else {
      TraceOperation 029932 (Print "You can't see");
      GamePrint "You can't see";
      TraceOperation 029939 (Jz (Var (Local 2)) (Branch T (Dloc 029957)));
      if (IsZero(GetLocal(2))) {
        Jump: 029957
      } else {
        TraceOperation 029942 (Print " any ");
        GamePrint " any ";
        TraceOperation 029947 (Print_obj (Var (Local 1)));
        Let b2 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
        Let b3 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
        Let b4 = M[Address(MakeHiLo(b2,b3))];
        if (IsZeroByte(b4)) {
          GamePrint "";
          TraceOperation 029949 (Print " here.");
          GamePrint " here.";
          TraceOperation 029954 New_line;
          GamePrint "\n";
          TraceOperation 029955 (Ret (Con 2));
          PopFrame return_address_5;
          JumpReturn: return_address_5, result: 2
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
          TraceOperation 029949 (Print " here.");
          GamePrint " here.";
          TraceOperation 029954 New_line;
          GamePrint "\n";
          TraceOperation 029955 (Ret (Con 2));
          PopFrame return_address_6;
          JumpReturn: return_address_6, result: 2
        }
      }
    }
  }
LocOp 029957:
  TraceOperation 029957 (Call (Floc 043738) [Var (Local 1),Con 1] Sp);
  PushFrame 029957;
  SetLocal 1 GetLocal(1);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 029957:
  PushStack call_result;
  TraceOperation 029964 (Print " anymore.");
  GamePrint " anymore.";
  TraceOperation 029973 New_line;
  GamePrint "\n";
  TraceOperation 029974 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 029976:
  TraceOperation 029976 (Jz (Var (Global 228)) (Branch T (Dloc 029982)));
  Let b1 = M[008364];
  Let b2 = M[008365];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 029982
  } else {
    TraceOperation 029979 (Store (Con 220) (Con 1));
    SetByte 008316 0;
    SetByte 008317 1;
    Jump: 029982
  }
LocOp 029982:
  TraceOperation 029982 (Call (Floc 022042) [Var (Global 232),Var (Global 231),Var (Global 230)] Sp);
  Let b1 = M[008372];
  Let b2 = M[008373];
  Let b3 = M[008370];
  Let b4 = M[008371];
  Let b5 = M[008368];
  Let b6 = M[008369];
  PushFrame 029982;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 MakeHiLo(b5,b6);
  JumpCall: 022042, #actuals: 3
LocReturn 029982:
  PushStack call_result;
  TraceOperation 029990 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[95]--------------------------------------------------
LocRoutine 029992:
  MakeRoutineFrame 0;
  Jump: 029993
LocOp 029993:
  TraceOperation 029993 (Je [Var (Global 201),Con 217] (Branch F (Dloc 030005)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 029997 (Call (Floc 022042) [Con 167,Con 30] Sp);
    PushFrame 029997;
    SetLocal 1 167;
    SetLocal 2 30;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 030005
  }
LocReturn 029997:
  PushStack call_result;
  TraceOperation 030004 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 030005:
  TraceOperation 030005 (Print "I don't think");
  GamePrint "I don't think";
  TraceOperation 030012 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 030012;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 030012:
  PushStack call_result;
  TraceOperation 030019 (Print_ret " is sleeping.");
  GamePrint " is sleeping.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[96]--------------------------------------------------
LocRoutine 030030:
  MakeRoutineFrame 0;
  Jump: 030031
LocOp 030031:
  TraceOperation 030031 (Jz (Var (Global 213)) (Branch T (Dloc 030055)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 030055
  } else {
    TraceOperation 030034 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    Let b5 = M[008292];
    Let b6 = M[008293];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 030038 (Je [Var Sp,Con 20420] (Branch F (Dloc 030055)));
    PopStack popped9;
    if (Equal(popped9,20420)) {
      TraceOperation 030044 (Call (Floc 040748) [] Sp);
      PushFrame 030044;
      JumpCall: 040748, #actuals: 0
    } else {
      Jump: 030055
    }
  }
LocReturn 030044:
  PushStack call_result;
  TraceOperation 030049 (Call (Floc 043634) [] Sp);
  PushFrame 030049;
  JumpCall: 043634, #actuals: 0
LocReturn 030049:
  PushStack call_result;
  TraceOperation 030054 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 030055:
  TraceOperation 030055 (Jz (Var (Global 213)) (Branch T (Dloc 030079)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 030079
  } else {
    TraceOperation 030058 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    Let b5 = M[008292];
    Let b6 = M[008293];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 030062 (Je [Var Sp,Con 17333] (Branch F (Dloc 030079)));
    PopStack popped9;
    if (Equal(popped9,17333)) {
      TraceOperation 030068 (Call (Floc 035052) [] Sp);
      PushFrame 030068;
      JumpCall: 035052, #actuals: 0
    } else {
      Jump: 030079
    }
  }
LocReturn 030068:
  PushStack call_result;
  TraceOperation 030073 (Call (Floc 043634) [] Sp);
  PushFrame 030073;
  JumpCall: 043634, #actuals: 0
LocReturn 030073:
  PushStack call_result;
  TraceOperation 030078 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 030079:
  TraceOperation 030079 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 030094)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 030083 (Call (Floc 036558) [] Sp);
    PushFrame 030083;
    JumpCall: 036558, #actuals: 0
  } else {
    Jump: 030094
  }
LocReturn 030083:
  PushStack call_result;
  TraceOperation 030088 (Call (Floc 043634) [] Sp);
  PushFrame 030088;
  JumpCall: 043634, #actuals: 0
LocReturn 030088:
  PushStack call_result;
  TraceOperation 030093 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[97]--------------------------------------------------
LocRoutine 030120:
  MakeRoutineFrame 0;
  Jump: 030121
LocOp 030121:
  TraceOperation 030121 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[98]--------------------------------------------------
LocRoutine 030122:
  MakeRoutineFrame 0;
  Jump: 030123
LocOp 030123:
  TraceOperation 030123 (Call (Floc 020662) [Con -24890] Sp);
  PushFrame 030123;
  SetLocal 1 -24890;
  JumpCall: 020662, #actuals: 1
LocReturn 030123:
  PushStack call_result;
  TraceOperation 030130 (Jz (Var Sp) (Branch T (Dloc 030162)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 030162
  } else {
    TraceOperation 030133 (Print_ret "If you want to enjoy the poetry, just type that.");
    GamePrint "If you want to enjoy the poetry, just type that.\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 030162:
  TraceOperation 030162 (Print_ret "Thank you, thank you.");
  GamePrint "Thank you, thank you.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[99]--------------------------------------------------
LocRoutine 030178:
  MakeRoutineFrame 0;
  Jump: 030179
LocOp 030179:
  TraceOperation 030179 (Call (Floc 020662) [Con -24890] Sp);
  PushFrame 030179;
  SetLocal 1 -24890;
  JumpCall: 020662, #actuals: 1
LocReturn 030179:
  PushStack call_result;
  TraceOperation 030186 (Jz (Var Sp) (Branch T (Dloc 030195)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 030195
  } else {
    TraceOperation 030189 (Call (Floc 030122) [] Sp);
    PushFrame 030189;
    JumpCall: 030122, #actuals: 0
  }
LocReturn 030189:
  PushStack call_result;
  TraceOperation 030194 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 030195:
  TraceOperation 030195 (Print_ret "Hey, I never get any appreciation! There's absolutely no job satisfaction in being a computer.");
  GamePrint "Hey, I never get any appreciation! There's absolutely no job satisfaction in being a computer.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[100]--------------------------------------------------
LocRoutine 030256:
  MakeRoutineFrame 0;
  Jump: 030257
LocOp 030257:
  TraceOperation 030257 (Je [Var (Global 201),Con 30] (Branch F (Dloc 030269)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 030261 (Call (Floc 022042) [Con 15,Con 30] Sp);
    PushFrame 030261;
    SetLocal 1 15;
    SetLocal 2 30;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 030269
  }
LocReturn 030261:
  PushStack call_result;
  TraceOperation 030268 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 030269:
  TraceOperation 030269 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 030345)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 030274 (Print "A long silence tells you that");
    GamePrint "A long silence tells you that";
    TraceOperation 030295 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 030295;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 030345
  }
LocReturn 030295:
  PushStack call_result;
  TraceOperation 030302 (Print " isn't interested in talking about");
  GamePrint " isn't interested in talking about";
  TraceOperation 030323 (Jin (Var (Global 202)) (Con 217) (Branch F (Dloc 030335)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(217,Widen(b3))) {
    TraceOperation 030327 (Print " that");
    GamePrint " that";
    TraceOperation 030332 (Jump 030342);
    Jump: 030342
  } else {
    Jump: 030335
  }
--[101]--------------------------------------------------
LocRoutine 030340:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 179;
  }
  Jump: 030343
LocOp 030343:
  TraceOperation 030343 (Dec (Con 69));
  Let b1 = M[008014];
  Let b2 = M[008015];
  SetByte 008014 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 008015 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 030345 (Call (Floc 022042) [Con 15,Var (Global 201)] Sp);
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 030345;
  SetLocal 1 15;
  SetLocal 2 MakeHiLo(b3,b4);
  JumpCall: 022042, #actuals: 2
LocReturn 030345:
  PushStack call_result;
  TraceOperation 030352 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[102]--------------------------------------------------
LocRoutine 030354:
  MakeRoutineFrame 0;
  Jump: 030355
LocOp 030355:
  TraceOperation 030355 (Print "Unsurprisingly,");
  GamePrint "Unsurprisingly,";
  TraceOperation 030368 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 030368;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 030368:
  PushStack call_result;
  TraceOperation 030375 (Print_ret " doesn't oblige.");
  GamePrint " doesn't oblige.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[103]--------------------------------------------------
LocRoutine 030384:
  MakeRoutineFrame 0;
  Jump: 030385
LocOp 030385:
  TraceOperation 030385 (Call (Floc 043716) [Con -11784] Sp);
  PushFrame 030385;
  SetLocal 1 -11784;
  JumpCall: 043716, #actuals: 1
LocReturn 030385:
  PushStack call_result;
  TraceOperation 030392 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[104]--------------------------------------------------
LocRoutine 030394:
  MakeRoutineFrame 0;
  Jump: 030395
LocOp 030395:
  TraceOperation 030395 (Call (Floc 031422) [] Sp);
  PushFrame 030395;
  JumpCall: 031422, #actuals: 0
LocReturn 030395:
  PushStack call_result;
  TraceOperation 030400 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[105]--------------------------------------------------
LocRoutine 030402:
  MakeRoutineFrame 0;
  Jump: 030403
LocOp 030403:
  TraceOperation 030403 (Call (Floc 031422) [] Sp);
  PushFrame 030403;
  JumpCall: 031422, #actuals: 0
LocReturn 030403:
  PushStack call_result;
  TraceOperation 030408 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[106]--------------------------------------------------
LocRoutine 030410:
  MakeRoutineFrame 0;
  Jump: 030411
LocOp 030411:
  TraceOperation 030411 (Jz (Var (Global 204)) (Branch T (Dloc 030422)));
  Let b1 = M[008316];
  Let b2 = M[008317];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 030422
  } else {
    TraceOperation 030414 (Call (Floc 022042) [Con 144,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 030414;
    SetLocal 1 144;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 2
  }
LocReturn 030414:
  PushStack call_result;
  TraceOperation 030421 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 030422:
  TraceOperation 030422 (Get_parent (Con 31) Sp);
  Let b1 = M[001034];
  PushStack Widen(b1);
  TraceOperation 030425 (Je [Var (Global 201),Var Sp] (Branch F Dfalse));
  Let b2 = M[008310];
  Let b3 = M[008311];
  PopStack popped4;
  if (Equal(MakeHiLo(b2,b3),popped4)) {
    TraceOperation 030429 (Print_paddr (Var (Global 57)));
    Let b5 = M[008022];
    Let b6 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 030431 New_line;
    GamePrint "\n";
    TraceOperation 030432 Rtrue;
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
--[107]--------------------------------------------------
LocRoutine 030434:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 030437
LocOp 030437:
  TraceOperation 030437 (Test_attr (Var (Global 201)) (Con 12) (Branch F (Dloc 030481)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,3)) {
    TraceOperation 030441 (Print "You are now in");
    GamePrint "You are now in";
    TraceOperation 030450 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 030450;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 030481
  }
LocReturn 030450:
  PushStack call_result;
  TraceOperation 030457 (Print ".");
  GamePrint ".";
  TraceOperation 030460 New_line;
  GamePrint "\n";
  TraceOperation 030461 (Insert_obj (Var (Global 195)) (Var (Global 201)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[008310];
  Let b4 = M[008311];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 030464 (Je [Var (Global 0),Con 66] (Branch T (Dloc 030471)));
    Let b7 = M[007908];
    Let b8 = M[007909];
    if (Equal(MakeHiLo(b7,b8),66)) {
      Jump: 030471
    } else {
      TraceOperation 030468 (Store (Con 102) (Con 1));
      SetByte 008080 0;
      SetByte 008081 1;
      Jump: 030471
    }
  } else {
    Let b9 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b9),MakeHiLo(b1,b2))) {
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b10));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b11));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 030464 (Je [Var (Global 0),Con 66] (Branch T (Dloc 030471)));
      Let b12 = M[007908];
      Let b13 = M[007909];
      if (Equal(MakeHiLo(b12,b13),66)) {
        Jump: 030471
      } else {
        TraceOperation 030468 (Store (Con 102) (Con 1));
        SetByte 008080 0;
        SetByte 008081 1;
        Jump: 030471
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 030471:
  TraceOperation 030471 (Get_prop (Var (Global 201)) (Con 29) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocReturn 030475:
  PushStack call_result;
  TraceOperation 030480 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 030481:
  TraceOperation 030481 (Print "You can't get into");
  GamePrint "You can't get into";
  TraceOperation 030490 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 030490;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 030490:
  PushStack call_result;
  TraceOperation 030497 (Print_ret "!");
  GamePrint "!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[108]--------------------------------------------------
LocRoutine 030500:
  MakeRoutineFrame 0;
  Jump: 030501
LocOp 030501:
  TraceOperation 030501 (Jz (Var (Global 202)) (Branch F (Dloc 030558)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 030504 (Call (Floc 043468) [Con 19] Sp);
    PushFrame 030504;
    SetLocal 1 19;
    JumpCall: 043468, #actuals: 1
  } else {
    Jump: 030558
  }
LocReturn 030504:
  PushStack call_result;
  TraceOperation 030510 (Jz (Var Sp) (Branch T (Dloc 030533)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 030533
  } else {
    TraceOperation 030513 (Print "(with the ");
    GamePrint "(with the ";
    TraceOperation 030518 (Print_obj (Con 19));
    Let b2 = M[000929];
    Let b3 = M[000930];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 030520 (Print ")");
      GamePrint ")";
      TraceOperation 030523 New_line;
      GamePrint "\n";
      TraceOperation 030524 (Call (Floc 022042) [Con 29,Var (Global 201),Con 19] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame 030524;
      SetLocal 1 29;
      SetLocal 2 MakeHiLo(b5,b6);
      SetLocal 3 19;
      JumpCall: 022042, #actuals: 3
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 030520 (Print ")");
      GamePrint ")";
      TraceOperation 030523 New_line;
      GamePrint "\n";
      TraceOperation 030524 (Call (Floc 022042) [Con 29,Var (Global 201),Con 19] Sp);
      Let b7 = M[008310];
      Let b8 = M[008311];
      PushFrame 030524;
      SetLocal 1 29;
      SetLocal 2 MakeHiLo(b7,b8);
      SetLocal 3 19;
      JumpCall: 022042, #actuals: 3
    }
  }
LocReturn 030524:
  PushStack call_result;
  TraceOperation 030532 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 030533:
  TraceOperation 030533 (Print "You have nothing to brush");
  GamePrint "You have nothing to brush";
  TraceOperation 030544 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 030544;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 030544:
  PushStack call_result;
  TraceOperation 030551 (Print_ret " with.");
  GamePrint " with.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 030558:
  TraceOperation 030558 (Je [Var (Global 202),Con 19] (Branch T (Dloc 030576)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),19)) {
    Jump: 030576
  } else {
    TraceOperation 030562 (Print "With");
    GamePrint "With";
    TraceOperation 030567 (Call (Floc 043738) [Var (Global 202)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame 030567;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 043738, #actuals: 1
  }
LocReturn 030567:
  PushStack call_result;
  TraceOperation 030573 (Print_ret "!");
  GamePrint "!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 030576:
  TraceOperation 030576 (Je [Var (Global 201),Con 35] (Branch T (Dloc 030608)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),35)) {
    Jump: 030608
  } else {
    TraceOperation 030580 (Print "In general, ");
    GamePrint "In general, ";
    TraceOperation 030591 (Print_obj (Con 19));
    Let b3 = M[000929];
    Let b4 = M[000930];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 030593 (Print_ret "es are meant for teeth.");
      GamePrint "es are meant for teeth.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 030593 (Print_ret "es are meant for teeth.");
      GamePrint "es are meant for teeth.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  }
LocOp 030608:
  TraceOperation 030608 (Print_ret "Congratulations on your fine dental hygiene.");
  GamePrint "Congratulations on your fine dental hygiene.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[109]--------------------------------------------------
LocRoutine 030638:
  MakeRoutineFrame 0;
  Jump: 030639
LocOp 030639:
  TraceOperation 030639 (Print "Sorry,");
  GamePrint "Sorry,";
  TraceOperation 030646 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 030646;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 030646:
  PushStack call_result;
  TraceOperation 030653 (Print_ret " isn't for sale.");
  GamePrint " isn't for sale.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[110]--------------------------------------------------
LocRoutine 030662:
  MakeRoutineFrame 0;
  Jump: 030663
LocOp 030663:
  TraceOperation 030663 (Je [Var (Global 0),Con 168] (Branch T (Dloc 030678)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    Jump: 030678
  } else {
    TraceOperation 030667 (Print_ret "There's no phone here!");
    GamePrint "There's no phone here!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 030678:
  TraceOperation 030678 (Jz (Var (Global 144)) (Branch T (Dloc 030708)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 030708
  } else {
    TraceOperation 030681 (Print "You reach for the receiver. ");
    GamePrint "You reach for the receiver. ";
    TraceOperation 030698 (Call (Floc 020718) [Var (Global 150)] Sp);
    Let b3 = M[008208];
    Let b4 = M[008209];
    PushFrame 030698;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 020718, #actuals: 1
  }
LocReturn 030698:
  PushStack call_result;
  TraceOperation 030704 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 030706 New_line;
  GamePrint "\n";
  TraceOperation 030707 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 030708:
  TraceOperation 030708 (Test_attr (Con 162) (Con 5) (Branch F (Dloc 030731)));
  Let b1 = M[002209];
  if (TestBit(b1,2)) {
    TraceOperation 030712 (Print_ret "The cable is down, remember?");
    GamePrint "The cable is down, remember?\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    Jump: 030731
  }
LocOp 030731:
  TraceOperation 030731 (Je [Var (Global 201),Con 54] (Branch F (Dloc 030833)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 030736 (Set_attr (Con 162) (Con 5));
    Let b3 = M[002209];
    SetByte 002209 SetBit(b3,2);
    TraceOperation 030739 (Print "You explain your situation. The desk sergeant promises to send someone over soon, and says not to try anything crazy in the meantime, like lying down in front of the ");
    GamePrint "You explain your situation. The desk sergeant promises to send someone over soon, and says not to try anything crazy in the meantime, like lying down in front of the ";
    TraceOperation 030824 (Print_obj (Con 166));
    Let b4 = M[002252];
    Let b5 = M[002253];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 030826 (Print ".");
      GamePrint ".";
      TraceOperation 030829 (Print_paddr (Var (Global 22)));
      Let b7 = M[007952];
      Let b8 = M[007953];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
      TraceOperation 030831 New_line;
      GamePrint "\n";
      TraceOperation 030832 Rtrue;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 030826 (Print ".");
      GamePrint ".";
      TraceOperation 030829 (Print_paddr (Var (Global 22)));
      Let b10 = M[007952];
      Let b11 = M[007953];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
      TraceOperation 030831 New_line;
      GamePrint "\n";
      TraceOperation 030832 Rtrue;
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    }
  } else {
    Jump: 030833
  }
LocOp 030833:
  TraceOperation 030833 (Je [Var (Global 201),Con 173] (Branch F (Dloc 030858)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),173)) {
    TraceOperation 030837 (Print_ret "Who do you think you are, E.T.?");
    GamePrint "Who do you think you are, E.T.?\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 030858
  }
LocOp 030858:
  TraceOperation 030858 (Je [Var (Global 201),Con 81] (Branch F (Dloc 030868)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),81)) {
    TraceOperation 030862 (Call (Floc 033832) [] Sp);
    PushFrame 030862;
    JumpCall: 033832, #actuals: 0
  } else {
    Jump: 030868
  }
LocReturn 030862:
  PushStack call_result;
  TraceOperation 030867 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 030868:
  TraceOperation 030868 (Print_ret "You don't know the number.");
  GamePrint "You don't know the number.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[111]--------------------------------------------------
LocRoutine 030884:
  MakeRoutineFrame 0;
  Jump: 030885
LocOp 030885:
  TraceOperation 030885 (Je [Var (Global 202),Con 162] (Branch T (Dloc 030912)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),162)) {
    Jump: 030912
  } else {
    TraceOperation 030889 (Print "You can't use");
    GamePrint "You can't use";
    TraceOperation 030896 (Call (Floc 043738) [Var (Global 202)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame 030896;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 043738, #actuals: 1
  }
LocReturn 030896:
  PushStack call_result;
  TraceOperation 030902 (Print " as a ");
  GamePrint " as a ";
  TraceOperation 030907 (Print_obj (Con 162));
  Let b1 = M[002216];
  Let b2 = M[002217];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 030909 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 030909 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 030912:
  TraceOperation 030912 (Call (Floc 022042) [Con 105,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 030912;
  SetLocal 1 105;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022042, #actuals: 2
LocReturn 030912:
  PushStack call_result;
  TraceOperation 030919 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[112]--------------------------------------------------
LocRoutine 030920:
  MakeRoutineFrame 0;
  Jump: 030921
LocOp 030921:
  TraceOperation 030921 (Call (Floc 043468) [Con 96] Sp);
  PushFrame 030921;
  SetLocal 1 96;
  JumpCall: 043468, #actuals: 1
LocReturn 030921:
  PushStack call_result;
  TraceOperation 030927 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 030930 (Print_ret "You have no carving instrument.");
    GamePrint "You have no carving instrument.\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
--[113]--------------------------------------------------
LocRoutine 030950:
  MakeRoutineFrame 0;
  Jump: 030951
LocOp 030951:
  TraceOperation 030951 (Call (Floc 020718) [Var (Global 148)] Sp);
  Let b1 = M[008204];
  Let b2 = M[008205];
  PushFrame 030951;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020718, #actuals: 1
LocReturn 030951:
  PushStack call_result;
  TraceOperation 030957 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 030959 New_line;
  GamePrint "\n";
  TraceOperation 030960 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[114]--------------------------------------------------
LocRoutine 030962:
  MakeRoutineFrame 0;
  Jump: 030963
LocOp 030963:
  TraceOperation 030963 (Je [Var (Global 0),Con 98] (Branch F (Dloc 031012)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),98)) {
    TraceOperation 030967 (Je [Var (Global 202),Con 96] (Branch F (Dloc 030980)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),96)) {
      TraceOperation 030971 (Call (Floc 022042) [Con 31,Var (Global 201),Con 97] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame 030971;
      SetLocal 1 31;
      SetLocal 2 MakeHiLo(b5,b6);
      SetLocal 3 97;
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 030980
    }
  } else {
    Jump: 031012
  }
LocReturn 030971:
  PushStack call_result;
  TraceOperation 030979 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 030980:
  TraceOperation 030980 (Print "No luck;");
  GamePrint "No luck;";
  TraceOperation 030989 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 030989;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 030989:
  PushStack call_result;
  TraceOperation 030996 (Print " doesn't even scratch the ");
  GamePrint " doesn't even scratch the ";
  TraceOperation 031007 (Print_obj (Con 97));
  Let b1 = M[001631];
  Let b2 = M[001632];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 031009 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 031009 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 031012:
  TraceOperation 031012 (Print_ret "Huh?");
  GamePrint "Huh?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[115]--------------------------------------------------
LocRoutine 031018:
  MakeRoutineFrame 0;
  Jump: 031019
LocOp 031019:
  TraceOperation 031019 (Print_ret "Use prepositions to indicate precisely what you want to do: LOOK AT the object, LOOK INSIDE it, LOOK UNDER it, etc.");
  GamePrint "Use prepositions to indicate precisely what you want to do: LOOK AT the object, LOOK INSIDE it, LOOK UNDER it, etc.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[116]--------------------------------------------------
LocRoutine 031110:
  MakeRoutineFrame 0;
  Jump: 031111
LocOp 031111:
  TraceOperation 031111 (Je [Var (Global 201),Con 29,Con 217] (Branch F (Dloc 031150)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(Equal(MakeHiLo(b1,b2),29),Equal(MakeHiLo(b1,b2),217))) {
    TraceOperation 031117 (Je [Var (Global 0),Con 168] (Branch F (Dloc 031150)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),168)) {
      TraceOperation 031121 (Print "Just as you've got it all spick and span");
      GamePrint "Just as you've got it all spick and span";
      TraceOperation 031144 (Call (Floc 058488) [] Sp);
      PushFrame 031144;
      JumpCall: 058488, #actuals: 0
    } else {
      Jump: 031150
    }
  } else {
    Jump: 031150
  }
LocReturn 031144:
  PushStack call_result;
  TraceOperation 031149 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 031150:
  TraceOperation 031150 (Je [Var (Global 201),Con 35] (Branch F (Dloc 031162)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),35)) {
    TraceOperation 031154 (Call (Floc 022042) [Con 29,Con 35] Sp);
    PushFrame 031154;
    SetLocal 1 29;
    SetLocal 2 35;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 031162
  }
LocReturn 031154:
  PushStack call_result;
  TraceOperation 031161 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031162:
  TraceOperation 031162 (Je [Var (Global 201),Con 139] (Branch F (Dloc 031169)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 031166 (Store (Con 148) (Con 0));
    SetByte 008172 0;
    SetByte 008173 0;
    Jump: 031169
  } else {
    Jump: 031169
  }
LocOp 031169:
  TraceOperation 031169 (Print_ret "It is now much cleaner.");
  GamePrint "It is now much cleaner.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[117]--------------------------------------------------
LocRoutine 031186:
  MakeRoutineFrame 0;
  Jump: 031187
LocOp 031187:
  TraceOperation 031187 (Je [Var (Global 201),Con 217] (Branch F (Dloc 031198)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 031191 (Call (Floc 043620) [Con 20] Sp);
    PushFrame 031191;
    SetLocal 1 20;
    JumpCall: 043620, #actuals: 1
  } else {
    Jump: 031198
  }
LocReturn 031191:
  PushStack call_result;
  TraceOperation 031197 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 031198:
  TraceOperation 031198 (Call (Floc 030950) [] Sp);
  PushFrame 031198;
  JumpCall: 030950, #actuals: 0
LocReturn 031198:
  PushStack call_result;
  TraceOperation 031203 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[118]--------------------------------------------------
LocRoutine 031204:
  MakeRoutineFrame 0;
  Jump: 031205
LocOp 031205:
  TraceOperation 031205 (Je [Var (Global 201),Con 217] (Branch F (Dloc 031216)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 031209 (Call (Floc 043620) [Con 18] Sp);
    PushFrame 031209;
    SetLocal 1 18;
    JumpCall: 043620, #actuals: 1
  } else {
    Jump: 031216
  }
LocReturn 031209:
  PushStack call_result;
  TraceOperation 031215 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 031216:
  TraceOperation 031216 (Call (Floc 030950) [] Sp);
  PushFrame 031216;
  JumpCall: 030950, #actuals: 0
LocReturn 031216:
  PushStack call_result;
  TraceOperation 031221 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[119]--------------------------------------------------
LocRoutine 031222:
  MakeRoutineFrame 0;
  Jump: 031223
LocOp 031223:
  TraceOperation 031223 (Test_attr (Var (Global 201)) (Con 12) (Branch F (Dloc 031235)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,3)) {
    TraceOperation 031227 (Call (Floc 022042) [Con 28,Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 031227;
    SetLocal 1 28;
    SetLocal 2 MakeHiLo(b4,b5);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 031235
  }
LocReturn 031227:
  PushStack call_result;
  TraceOperation 031234 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031235:
  TraceOperation 031235 (Print "You can't climb onto");
  GamePrint "You can't climb onto";
  TraceOperation 031246 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 031246;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 031246:
  PushStack call_result;
  TraceOperation 031253 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[120]--------------------------------------------------
LocRoutine 031256:
  MakeRoutineFrame 0;
  Jump: 031257
LocOp 031257:
  TraceOperation 031257 (Call (Floc 030950) [] Sp);
  PushFrame 031257;
  JumpCall: 030950, #actuals: 0
LocReturn 031257:
  PushStack call_result;
  TraceOperation 031262 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[121]--------------------------------------------------
LocRoutine 031264:
  MakeRoutineFrame 0;
  Jump: 031265
LocOp 031265:
  TraceOperation 031265 (Je [Var (Global 201),Con 217] (Branch F (Dloc 031276)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 031269 (Call (Floc 043620) [Con 18] Sp);
    PushFrame 031269;
    SetLocal 1 18;
    JumpCall: 043620, #actuals: 1
  } else {
    Jump: 031276
  }
LocReturn 031269:
  PushStack call_result;
  TraceOperation 031275 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 031276:
  TraceOperation 031276 (Call (Floc 030950) [] Sp);
  PushFrame 031276;
  JumpCall: 030950, #actuals: 0
LocReturn 031276:
  PushStack call_result;
  TraceOperation 031281 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[122]--------------------------------------------------
LocRoutine 031282:
  MakeRoutineFrame 0;
  Jump: 031283
LocOp 031283:
  TraceOperation 031283 (Test_attr (Var (Global 201)) (Con 8) (Branch F (Dloc 031293)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,7)) {
    TraceOperation 031287 (Call (Floc 031360) [] Sp);
    PushFrame 031287;
    JumpCall: 031360, #actuals: 0
  } else {
    Jump: 031293
  }
LocReturn 031287:
  PushStack call_result;
  TraceOperation 031292 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 031293:
  TraceOperation 031293 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 031309)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 031297 (Je [Var (Global 201),Con 216,Con 209] (Branch T (Dloc 031309)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (LogOr(Equal(MakeHiLo(b4,b5),216),Equal(MakeHiLo(b4,b5),209))) {
      Jump: 031309
    } else {
      TraceOperation 031303 (Call (Floc 031360) [] Sp);
      PushFrame 031303;
      JumpCall: 031360, #actuals: 0
    }
  } else {
    Jump: 031309
  }
LocReturn 031303:
  PushStack call_result;
  TraceOperation 031308 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 031309:
  TraceOperation 031309 (Test_attr (Var (Global 201)) (Con 28) (Branch T (Dloc 031317)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    Jump: 031317
  } else {
    TraceOperation 031313 (Test_attr (Var (Global 201)) (Con 24) (Branch F (Dloc 031353)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,7)) {
      Jump: 031317
    } else {
      Jump: 031353
    }
  }
LocOp 031317:
  TraceOperation 031317 (Test_attr (Var (Global 201)) (Con 23) (Branch F (Dloc 031349)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    TraceOperation 031321 (Print "Okay,");
    GamePrint "Okay,";
    TraceOperation 031328 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 031328;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 031349
  }
LocReturn 031328:
  PushStack call_result;
  TraceOperation 031335 (Print " is now closed.");
  GamePrint " is now closed.";
  TraceOperation 031344 New_line;
  GamePrint "\n";
  TraceOperation 031345 (Clear_attr (Var (Global 201)) (Con 23));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2) ClearBit(b3,0);
  TraceOperation 031348 Rtrue;
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: 1
LocOp 031349:
  TraceOperation 031349 (Print_paddr (Var (Global 52)));
  Let b1 = M[008012];
  Let b2 = M[008013];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 031351 New_line;
  GamePrint "\n";
  TraceOperation 031352 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
LocOp 031353:
  TraceOperation 031353 (Call (Floc 057650) [] Sp);
  PushFrame 031353;
  JumpCall: 057650, #actuals: 0
LocReturn 031353:
  PushStack call_result;
  TraceOperation 031358 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[123]--------------------------------------------------
LocRoutine 031360:
  MakeRoutineFrame 0;
  Jump: 031361
LocOp 031361:
  TraceOperation 031361 (Call (Floc 020718) [Var (Global 147)] Sp);
  Let b1 = M[008202];
  Let b2 = M[008203];
  PushFrame 031361;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020718, #actuals: 1
LocReturn 031361:
  PushStack call_result;
  TraceOperation 031367 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 031369 New_line;
  GamePrint "\n";
  TraceOperation 031370 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[124]--------------------------------------------------
LocRoutine 031372:
  MakeRoutineFrame 0;
  Jump: 031373
LocOp 031373:
  TraceOperation 031373 (Jz (Var (Global 202)) (Branch F (Dloc 031382)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 031376 (Call (Floc 030950) [] Sp);
    PushFrame 031376;
    JumpCall: 030950, #actuals: 0
  } else {
    Jump: 031382
  }
LocReturn 031376:
  PushStack call_result;
  TraceOperation 031381 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 031382:
  TraceOperation 031382 (Print "I doubt that the \"cutting edge\" of");
  GamePrint "I doubt that the \"cutting edge\" of";
  TraceOperation 031405 (Call (Floc 043738) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 031405;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 031405:
  PushStack call_result;
  TraceOperation 031411 (Print_ret " is adequate.");
  GamePrint " is adequate.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[125]--------------------------------------------------
LocRoutine 031422:
  MakeRoutineFrame 0;
  Jump: 031423
LocOp 031423:
  TraceOperation 031423 (Call (Floc 020718) [Var (Global 146)] Sp);
  Let b1 = M[008200];
  Let b2 = M[008201];
  PushFrame 031423;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020718, #actuals: 1
LocReturn 031423:
  PushStack call_result;
  TraceOperation 031429 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 031431 New_line;
  GamePrint "\n";
  TraceOperation 031432 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[126]--------------------------------------------------
LocRoutine 031434:
  MakeRoutineFrame 0;
  Jump: 031435
LocOp 031435:
  TraceOperation 031435 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 031465)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,6)) {
    TraceOperation 031439 (Call (Floc 043406) [Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 031439;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 043406, #actuals: 1
  } else {
    Jump: 031465
  }
LocReturn 031439:
  PushStack call_result;
  TraceOperation 031445 (Je [Var Sp,Var (Global 0)] (Branch F (Dloc 031465)));
  PopStack popped1;
  Let b2 = M[007908];
  Let b3 = M[007909];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    TraceOperation 031449 (Jin (Var (Global 201)) (Var (Global 0)) (Branch T (Dloc 031465)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[007908];
    Let b7 = M[007909];
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
    if (Equal(MakeHiLo(b6,b7),Widen(b8))) {
      Jump: 031465
    } else {
      TraceOperation 031453 (Jin (Var (Global 201)) (Con 31) (Branch T (Dloc 031465)));
      Let b9 = M[008310];
      Let b10 = M[008311];
      Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),4)];
      if (Equal(31,Widen(b11))) {
        Jump: 031465
      } else {
        TraceOperation 031457 (Call (Floc 022042) [Con 124,Var (Global 201)] Sp);
        Let b12 = M[008310];
        Let b13 = M[008311];
        PushFrame 031457;
        SetLocal 1 124;
        SetLocal 2 MakeHiLo(b12,b13);
        JumpCall: 022042, #actuals: 2
      }
    }
  } else {
    Jump: 031465
  }
LocReturn 031457:
  PushStack call_result;
  TraceOperation 031464 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031465:
  TraceOperation 031465 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 031468 (Je [Var Sp,Var (Global 201)] (Branch T (Dloc 031477)));
  PopStack popped4;
  Let b5 = M[008310];
  Let b6 = M[008311];
  if (Equal(popped4,MakeHiLo(b5,b6))) {
    Jump: 031477
  } else {
    TraceOperation 031472 (Print_paddr (Var (Global 57)));
    Let b7 = M[008022];
    Let b8 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 031474 New_line;
    GamePrint "\n";
    TraceOperation 031475 (Ret (Con 2));
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 2
  }
LocOp 031477:
  TraceOperation 031477 (Call (Floc 058110) [] Sp);
  PushFrame 031477;
  JumpCall: 058110, #actuals: 0
LocReturn 031477:
  PushStack call_result;
  TraceOperation 031482 (Store (Con 102) (Con 0));
  SetByte 008080 0;
  SetByte 008081 0;
  TraceOperation 031485 (Insert_obj (Var (Global 195)) (Var (Global 0)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 031488 Rtrue;
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    Let b8 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b8),MakeHiLo(b1,b2))) {
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b9));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b10));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 031488 Rtrue;
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    } else {
      Error: unlink/loop
    }
  }
--[127]--------------------------------------------------
LocRoutine 031490:
  MakeRoutineFrame 0;
  Jump: 031491
LocOp 031491:
  TraceOperation 031491 (Print "You doze for several minutes. ");
  GamePrint "You doze for several minutes. ";
  TraceOperation 031510 (Call (Floc 040434) [] Sp);
  PushFrame 031510;
  JumpCall: 040434, #actuals: 0
LocReturn 031510:
  PushStack call_result;
  TraceOperation 031515 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[128]--------------------------------------------------
LocRoutine 031516:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 031519
LocOp 031519:
  TraceOperation 031519 (Print_ret "You can't drink that!");
  GamePrint "You can't drink that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[129]--------------------------------------------------
LocRoutine 031532:
  MakeRoutineFrame 0;
  Jump: 031533
LocOp 031533:
  TraceOperation 031533 (Call (Floc 031360) [] Sp);
  PushFrame 031533;
  JumpCall: 031360, #actuals: 0
LocReturn 031533:
  PushStack call_result;
  TraceOperation 031538 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[130]--------------------------------------------------
LocRoutine 031540:
  MakeRoutineFrame 0;
  Jump: 031541
LocOp 031541:
  TraceOperation 031541 (Call (Floc 041208) [] Sp);
  PushFrame 031541;
  JumpCall: 041208, #actuals: 0
LocReturn 031541:
  PushStack call_result;
  TraceOperation 031546 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 031549 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[131]--------------------------------------------------
LocRoutine 031550:
  MakeRoutineFrame 0;
  Jump: 031551
LocOp 031551:
  TraceOperation 031551 (Je [Var (Global 0),Con 81] (Branch F (Dloc 031608)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),81)) {
    TraceOperation 031555 (Je [Var (Global 201),Con 156] (Branch T (Dloc 031562)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),156)) {
      Jump: 031562
    } else {
      TraceOperation 031559 (Store (Con 113) (Var (Global 201)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      SetByte 008102 b5;
      SetByte 008103 b6;
      Jump: 031562
    }
  } else {
    Jump: 031608
  }
LocOp 031562:
  TraceOperation 031562 (Insert_obj (Var (Global 201)) (Con 219));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 219;
    Let b4 = M[002728];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b4));
    SetByte 002728 b2;
    TraceOperation 031565 (Print "As you release");
    GamePrint "As you release";
    TraceOperation 031576 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b5 = M[008310];
    Let b6 = M[008311];
    PushFrame 031576;
    SetLocal 1 MakeHiLo(b5,b6);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Let b7 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b7),MakeHiLo(b1,b2))) {
      Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b8));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 219;
      Let b9 = M[002728];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b9));
      SetByte 002728 b2;
      TraceOperation 031565 (Print "As you release");
      GamePrint "As you release";
      TraceOperation 031576 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
      Let b10 = M[008310];
      Let b11 = M[008311];
      PushFrame 031576;
      SetLocal 1 MakeHiLo(b10,b11);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    } else {
      Error: unlink/loop
    }
  }
LocReturn 031576:
  PushStack call_result;
  TraceOperation 031583 (Print_ret ", it vanishes into the maze of synapses.");
  GamePrint ", it vanishes into the maze of synapses.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031608:
  TraceOperation 031608 (Je [Var (Global 0),Con 175] (Branch F (Dloc 031670)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),175)) {
    TraceOperation 031612 (Insert_obj (Var (Global 201)) (Con 219));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
    if (IsZero(Widen(b5))) {
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) 219;
      Let b6 = M[002728];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b6));
      SetByte 002728 b4;
      TraceOperation 031615 (Print "If you recall, the floor is just an open mesh, and");
      GamePrint "If you recall, the floor is just an open mesh, and";
      TraceOperation 031646 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
      Let b7 = M[008310];
      Let b8 = M[008311];
      PushFrame 031646;
      SetLocal 1 MakeHiLo(b7,b8);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    } else {
      Let b9 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b9),MakeHiLo(b3,b4))) {
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b10));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) 219;
        Let b11 = M[002728];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b11));
        SetByte 002728 b4;
        TraceOperation 031615 (Print "If you recall, the floor is just an open mesh, and");
        GamePrint "If you recall, the floor is just an open mesh, and";
        TraceOperation 031646 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
        Let b12 = M[008310];
        Let b13 = M[008311];
        PushFrame 031646;
        SetLocal 1 MakeHiLo(b12,b13);
        SetLocal 2 1;
        JumpCall: 043738, #actuals: 2
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 031670
  }
LocReturn 031646:
  PushStack call_result;
  TraceOperation 031653 (Print_ret " drops through and disappears.");
  GamePrint " drops through and disappears.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031670:
  TraceOperation 031670 (Insert_obj (Var (Global 201)) (Var (Global 0)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 031673 (Print_ret "Dropped.");
    GamePrint "Dropped.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    Let b8 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b8),MakeHiLo(b1,b2))) {
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b9));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b10));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 031673 (Print_ret "Dropped.");
      GamePrint "Dropped.\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    } else {
      Error: unlink/loop
    }
  }
--[132]--------------------------------------------------
LocRoutine 031682:
  MakeRoutineFrame 0;
  Jump: 031683
LocOp 031683:
  TraceOperation 031683 (Print "Stuffing");
  GamePrint "Stuffing";
  TraceOperation 031690 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 031690;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 031690:
  PushStack call_result;
  TraceOperation 031697 (Print_ret " in your mouth would do little to help at this point.");
  GamePrint " in your mouth would do little to help at this point.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[133]--------------------------------------------------
LocRoutine 031722:
  MakeRoutineFrame 0;
  Jump: 031723
LocOp 031723:
  TraceOperation 031723 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 031733)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 031727 (Call (Floc 034084) [] Sp);
    PushFrame 031727;
    JumpCall: 034084, #actuals: 0
  } else {
    Jump: 031733
  }
LocReturn 031727:
  PushStack call_result;
  TraceOperation 031732 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 031733:
  TraceOperation 031733 (Print "Not difficult at all, considering how enjoyable");
  GamePrint "Not difficult at all, considering how enjoyable";
  TraceOperation 031766 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 031766;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 031766:
  PushStack call_result;
  TraceOperation 031773 (Print_ret " is.");
  GamePrint " is.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[134]--------------------------------------------------
LocRoutine 031778:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 031781
LocOp 031781:
  TraceOperation 031781 (Call (Floc 043552) [Var (Global 0),Con 12] (Local 1));
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame 031781;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 12;
  JumpCall: 043552, #actuals: 2
LocReturn 031781:
  SetLocal 1 call_result;
  TraceOperation 031788 (Jz (Var (Local 1)) (Branch T (Dloc 031799)));
  if (IsZero(GetLocal(1))) {
    Jump: 031799
  } else {
    TraceOperation 031791 (Call (Floc 022042) [Con 28,Var (Local 1)] Sp);
    PushFrame 031791;
    SetLocal 1 28;
    SetLocal 2 GetLocal(1);
    JumpCall: 022042, #actuals: 2
  }
LocReturn 031791:
  PushStack call_result;
  TraceOperation 031798 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031799:
  TraceOperation 031799 (Call (Floc 043620) [Con 8] Sp);
  PushFrame 031799;
  SetLocal 1 8;
  JumpCall: 043620, #actuals: 1
LocReturn 031799:
  PushStack call_result;
  TraceOperation 031805 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[135]--------------------------------------------------
LocRoutine 031806:
  MakeRoutineFrame 0;
  Jump: 031807
LocOp 031807:
  TraceOperation 031807 (Store (Con 91) (Con 0));
  SetByte 008058 0;
  SetByte 008059 0;
  TraceOperation 031810 (Print "You are so keen on escape that you literally leap through the fabric of the space-time continuum. You wake up in a shack on tenth-century Earth. A dressing gown, a ");
  GamePrint "You are so keen on escape that you literally leap through the fabric of the space-time continuum. You wake up in a shack on tenth-century Earth. A dressing gown, a ";
  TraceOperation 031907 (Print_obj (Con 19));
  Let b1 = M[000929];
  Let b2 = M[000930];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 031909 (Call (Floc 042734) [Con -11781] Sp);
    PushFrame 031909;
    SetLocal 1 -11781;
    JumpCall: 042734, #actuals: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 031909 (Call (Floc 042734) [Con -11781] Sp);
    PushFrame 031909;
    SetLocal 1 -11781;
    JumpCall: 042734, #actuals: 1
  }
LocReturn 031909:
  PushStack call_result;
  TraceOperation 031916 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[136]--------------------------------------------------
LocRoutine 031918:
  MakeRoutineFrame 0;
  Jump: 031919
LocOp 031919:
  TraceOperation 031919 (Test_attr (Var (Global 201)) (Con 28) (Branch F (Dloc 031929)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    TraceOperation 031923 (Call (Floc 034480) [] Sp);
    PushFrame 031923;
    JumpCall: 034480, #actuals: 0
  } else {
    Jump: 031929
  }
LocReturn 031923:
  PushStack call_result;
  TraceOperation 031928 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 031929:
  TraceOperation 031929 (Test_attr (Var (Global 201)) (Con 24) (Branch F (Dloc 031952)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,7)) {
    TraceOperation 031933 (Test_attr (Var (Global 201)) (Con 26) (Branch T (Dloc 031952)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,5)) {
      Jump: 031952
    } else {
      TraceOperation 031937 (Test_attr (Var (Global 201)) (Con 23) (Branch F (Dloc 031947)));
      Let b7 = M[008310];
      Let b8 = M[008311];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),2)];
      if (TestBit(b9,0)) {
        TraceOperation 031941 (Call (Floc 034480) [] Sp);
        PushFrame 031941;
        JumpCall: 034480, #actuals: 0
      } else {
        Jump: 031947
      }
    }
  } else {
    Jump: 031952
  }
LocReturn 031941:
  PushStack call_result;
  TraceOperation 031946 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 031947:
  TraceOperation 031947 (Print_ret "It's closed.");
  GamePrint "It's closed.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031952:
  TraceOperation 031952 (Get_prop (Var (Global 201)) (Con 13) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocReturn 031959:
  PushStack call_result;
  TraceOperation 031966 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031967:
  TraceOperation 031967 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 031979)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008324];
  Let b4 = M[008325];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 031971 (Call (Floc 022042) [Con 61,Con 179] Sp);
    PushFrame 031971;
    SetLocal 1 61;
    SetLocal 2 179;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 031979
  }
LocReturn 031971:
  PushStack call_result;
  TraceOperation 031978 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 031979:
  TraceOperation 031979 (Test_attr (Var (Global 201)) (Con 2) (Branch F (Dloc 032007)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,5)) {
    TraceOperation 031983 (Print_paddr (Var (Global 46)));
    Let b4 = M[008000];
    Let b5 = M[008001];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 031985 (Print " every other ");
    GamePrint " every other ";
    TraceOperation 031994 (Print_obj (Var (Global 201)));
    Let b6 = M[008310];
    Let b7 = M[008311];
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),7)];
    Let b9 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),7),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    if (IsZeroByte(b10)) {
      GamePrint "";
      TraceOperation 031996 (Print_ret " you've ever seen.");
      GamePrint " you've ever seen.\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
      TraceOperation 031996 (Print_ret " you've ever seen.");
      GamePrint " you've ever seen.\n";
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    }
  } else {
    Jump: 032007
  }
LocOp 032007:
  TraceOperation 032007 (Je [Var (Global 201),Con 34,Con 35,Con 33] (Branch T (Dloc 032018)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),34),Equal(MakeHiLo(b1,b2),35)),Equal(MakeHiLo(b1,b2),33))) {
    Jump: 032018
  } else {
    TraceOperation 032014 (Je [Var (Global 201),Con 32] (Branch F (Dloc 032043)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),32)) {
      Jump: 032018
    } else {
      Jump: 032043
    }
  }
LocOp 032018:
  TraceOperation 032018 (Print_ret "That would involve quite a contortion.");
  GamePrint "That would involve quite a contortion.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 032043:
  TraceOperation 032043 (Print "You see nothing special about");
  GamePrint "You see nothing special about";
  TraceOperation 032058 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 032058;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 032058:
  PushStack call_result;
  TraceOperation 032065 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[137]--------------------------------------------------
LocRoutine 032068:
  MakeRoutineFrame 0;
  Jump: 032069
LocOp 032069:
  TraceOperation 032069 (Print_ret "This reveals nothing new.");
  GamePrint "This reveals nothing new.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[138]--------------------------------------------------
LocRoutine 032082:
  MakeRoutineFrame 0;
  Jump: 032083
LocOp 032083:
  TraceOperation 032083 (Test_attr (Var (Global 201)) (Con 12) (Branch F (Dloc 032095)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,3)) {
    TraceOperation 032087 (Call (Floc 022042) [Con 48,Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 032087;
    SetLocal 1 48;
    SetLocal 2 MakeHiLo(b4,b5);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 032095
  }
LocReturn 032087:
  PushStack call_result;
  TraceOperation 032094 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 032095:
  TraceOperation 032095 (Call (Floc 043620) [Con 26] Sp);
  PushFrame 032095;
  SetLocal 1 26;
  JumpCall: 043620, #actuals: 1
LocReturn 032095:
  PushStack call_result;
  TraceOperation 032101 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[139]--------------------------------------------------
LocRoutine 032102:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 032105
LocOp 032105:
  TraceOperation 032105 (Call (Floc 043552) [Con 31,Con 20] (Local 1));
  PushFrame 032105;
  SetLocal 1 31;
  SetLocal 2 20;
  JumpCall: 043552, #actuals: 2
LocReturn 032105:
  SetLocal 1 call_result;
  TraceOperation 032112 (Jz (Var (Local 1)) (Branch T (Dloc 032135)));
  if (IsZero(GetLocal(1))) {
    Jump: 032135
  } else {
    TraceOperation 032115 (Print "(the ");
    GamePrint "(the ";
    TraceOperation 032120 (Print_obj (Var (Local 1)));
    Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 032122 (Print ")");
      GamePrint ")";
      TraceOperation 032125 New_line;
      GamePrint "\n";
      TraceOperation 032126 (Call (Floc 022042) [Con 66,Var (Local 1),Var (Global 201)] Sp);
      Let b4 = M[008310];
      Let b5 = M[008311];
      PushFrame 032126;
      SetLocal 1 66;
      SetLocal 2 GetLocal(1);
      SetLocal 3 MakeHiLo(b4,b5);
      JumpCall: 022042, #actuals: 3
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 032122 (Print ")");
      GamePrint ")";
      TraceOperation 032125 New_line;
      GamePrint "\n";
      TraceOperation 032126 (Call (Floc 022042) [Con 66,Var (Local 1),Var (Global 201)] Sp);
      Let b6 = M[008310];
      Let b7 = M[008311];
      PushFrame 032126;
      SetLocal 1 66;
      SetLocal 2 GetLocal(1);
      SetLocal 3 MakeHiLo(b6,b7);
      JumpCall: 022042, #actuals: 3
    }
  }
LocReturn 032126:
  PushStack call_result;
  TraceOperation 032134 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 032135:
  TraceOperation 032135 (Print "You have nothing to feed");
  GamePrint "You have nothing to feed";
  TraceOperation 032144 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 032144;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 032144:
  PushStack call_result;
  TraceOperation 032151 (Print_ret " with.");
  GamePrint " with.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[140]--------------------------------------------------
LocRoutine 032158:
  MakeRoutineFrame 0;
  Jump: 032159
LocOp 032159:
  TraceOperation 032159 (Print_ret "Phil who?");
  GamePrint "Phil who?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[141]--------------------------------------------------
LocRoutine 032168:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 032173
LocOp 032173:
  TraceOperation 032173 (Get_parent (Var (Global 201)) (Local 2));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  SetLocal 2 Widen(b3);
  TraceOperation 032176 (Je [Var (Global 201),Con 32,Con 34,Con 36] (Branch T (Dloc 032189)));
  Let b4 = M[008310];
  Let b5 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),32),Equal(MakeHiLo(b4,b5),34)),Equal(MakeHiLo(b4,b5),36))) {
    Jump: 032189
  } else {
    TraceOperation 032183 (Je [Var (Global 201),Con 33,Con 35] (Branch F (Dloc 032212)));
    Let b6 = M[008310];
    Let b7 = M[008311];
    if (LogOr(Equal(MakeHiLo(b6,b7),33),Equal(MakeHiLo(b6,b7),35))) {
      Jump: 032189
    } else {
      Jump: 032212
    }
  }
LocOp 032189:
  TraceOperation 032189 (Print "Are you sure");
  GamePrint "Are you sure";
  TraceOperation 032198 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 032198;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 032198:
  PushStack call_result;
  TraceOperation 032205 (Print_ret " is lost?");
  GamePrint " is lost?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 032212:
  TraceOperation 032212 (Je [Var (Global 201),Con 30] (Branch F (Dloc 032231)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 032216 (Print "You're in");
    GamePrint "You're in";
    TraceOperation 032221 (Call (Floc 043738) [Var (Global 0),Con 1] Sp);
    Let b3 = M[007908];
    Let b4 = M[007909];
    PushFrame 032221;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 032231
  }
LocReturn 032221:
  PushStack call_result;
  TraceOperation 032228 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 032231:
  TraceOperation 032231 (Jin (Var (Global 201)) (Con 31) (Branch F (Dloc 032242)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(31,Widen(b3))) {
    TraceOperation 032235 (Print_ret "You have it!");
    GamePrint "You have it!\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 032242
  }
--[142]--------------------------------------------------
LocRoutine 032340:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 223;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 160;
    }
  }
  Jump: 032345
LocOp 032345:
  TraceOperation 032345 (Print "As far as you can tell,");
  GamePrint "As far as you can tell,";
  TraceOperation 032360 (Call (Floc 043738) [Var (Local 2),Con 1] Sp);
  PushFrame 032360;
  SetLocal 1 GetLocal(2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 032360:
  PushStack call_result;
  TraceOperation 032367 (Print_ret " has it.");
  GamePrint " has it.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[143]--------------------------------------------------
LocRoutine 032396:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 -19562;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 256;
    }
  }
  Jump: 032401
LocOp 032401:
  TraceOperation 032401 (Inc_chk (Var (Global 144)) (Con 1) (Branch T (Dloc 032414)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZeroByte(b2)) {
    PopStack popped3;
    PushStack Add(popped3,1);
    if (GreaterThanEqual(popped3,1)) {
      Jump: 032414
    } else {
      TraceOperation 032405 (Print_ret "Beats me.");
      GamePrint "Beats me.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    }
  } else {
    if (LessThanByte(b2,16)) {
      SetLocal b2 Add(GetLocal(b2),1);
      if (GreaterThanEqual(GetLocal(b2),1)) {
        Jump: 032414
      } else {
        TraceOperation 032405 (Print_ret "Beats me.");
        GamePrint "Beats me.\n";
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 1
      }
    } else {
      Let b6 = M[Offset(007908,Mul(2,Widen(MinusByte(b2,16))))];
      Let b7 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2,16)))),1)];
      SetByte Offset(007908,Mul(2,Widen(MinusByte(b2,16)))) HiByte(Add(MakeHiLo(b6,b7),1));
      SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b2,16)))),1) LoByte(Add(MakeHiLo(b6,b7),1));
      if (GreaterThanEqual(MakeHiLo(b6,b7),1)) {
        Jump: 032414
      } else {
        TraceOperation 032405 (Print_ret "Beats me.");
        GamePrint "Beats me.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      }
    }
  }
LocOp 032414:
  TraceOperation 032414 (Print_ret "You'll have to do that yourself.");
  GamePrint "You'll have to do that yourself.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[144]--------------------------------------------------
LocRoutine 032434:
  MakeRoutineFrame 0;
  Jump: 032435
LocOp 032435:
  TraceOperation 032435 (Call (Floc 041564) [] Sp);
  PushFrame 032435;
  JumpCall: 041564, #actuals: 0
LocReturn 032435:
  PushStack call_result;
  TraceOperation 032440 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 032443 (Je [Var (Global 152),Con 1,Con 2] (Branch F Dfalse));
    Let b3 = M[008212];
    Let b4 = M[008213];
    if (LogOr(Equal(MakeHiLo(b3,b4),1),Equal(MakeHiLo(b3,b4),2))) {
      TraceOperation 032449 (Call (Floc 041740) [] Sp);
      PushFrame 032449;
      JumpCall: 041740, #actuals: 0
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  }
LocReturn 032449:
  PushStack call_result;
  TraceOperation 032454 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[145]--------------------------------------------------
LocRoutine 032456:
  MakeRoutineFrame 0;
  Jump: 032457
LocOp 032457:
  TraceOperation 032457 (Test_attr (Var (Global 201)) (Con 16) (Branch F (Dloc 032486)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,7)) {
    TraceOperation 032461 (Je [Var (Global 202),Con 49] (Branch F (Dloc 032486)));
    Let b4 = M[008312];
    Let b5 = M[008313];
    if (Equal(MakeHiLo(b4,b5),49)) {
      TraceOperation 032465 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 032486)));
      Let b6 = M[008256];
      Let b7 = M[008257];
      if (LessThan(MakeHiLo(b6,b7),9)) {
        TraceOperation 032469 (Call (Floc 043370) [Con 206] Sp);
        PushFrame 032469;
        SetLocal 1 206;
        JumpCall: 043370, #actuals: 1
      } else {
        Jump: 032486
      }
    } else {
      Jump: 032486
    }
  } else {
    Jump: 032486
  }
LocReturn 032469:
  PushStack call_result;
  TraceOperation 032475 (Jz (Var Sp) (Branch T (Dloc 032486)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 032486
  } else {
    TraceOperation 032478 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame 032478;
    SetLocal 1 145;
    SetLocal 2 205;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 032478:
  PushStack call_result;
  TraceOperation 032485 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 032486:
  TraceOperation 032486 (Call (Floc 039060) [] Sp);
  PushFrame 032486;
  JumpCall: 039060, #actuals: 0
LocReturn 032486:
  PushStack call_result;
  TraceOperation 032491 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[146]--------------------------------------------------
LocRoutine 032492:
  MakeRoutineFrame 0;
  Jump: 032493
LocOp 032493:
  TraceOperation 032493 (Jin (Var (Global 201)) (Var (Global 0)) (Branch F (Dloc 032520)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 032497 (Print "But");
    GamePrint "But";
    TraceOperation 032502 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b6 = M[008310];
    Let b7 = M[008311];
    PushFrame 032502;
    SetLocal 1 MakeHiLo(b6,b7);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 032520
  }
LocReturn 032502:
  PushStack call_result;
  TraceOperation 032509 (Print_ret " is right here!");
  GamePrint " is right here!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[147]--------------------------------------------------
LocRoutine 032528:
  MakeRoutineFrame 0;
  Jump: 032529
LocOp 032529:
  TraceOperation 032529 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[148]--------------------------------------------------
LocRoutine 032554:
  MakeRoutineFrame 0;
  Jump: 032555
LocOp 032555:
  TraceOperation 032555 (Store (Con 167) (Con 0));
  SetByte 008210 0;
  SetByte 008211 0;
  TraceOperation 032558 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[149]--------------------------------------------------
LocRoutine 032560:
  MakeRoutineFrame 0;
  Jump: 032561
LocOp 032561:
  TraceOperation 032561 (Jz (Var (Global 201)) (Branch T (Dloc 032568)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 032568
  } else {
    TraceOperation 032564 (Je [Var (Global 201),Con 49] (Branch T (Dloc 032603)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),49)) {
      Jump: 032603
    } else {
      Jump: 032568
    }
  }
LocOp 032568:
  TraceOperation 032568 (Print_ret "Specify a number, as in \"FOOTNOTE 6.\"");
  GamePrint "Specify a number, as in \"FOOTNOTE 6.\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 032603:
  TraceOperation 032603 (Je [Var (Global 174),Con 1] (Branch F (Dloc 032723)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 032608 (Print_ret "In case anyone is interested, this quotation is from a letter written by John Keats, and thus he becomes the first major 19th Century British poet to feature in a computer game.");
    GamePrint "In case anyone is interested, this quotation is from a letter written by John Keats, and thus he becomes the first major 19th Century British poet to feature in a computer game.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 032723
  }
LocOp 032723:
  TraceOperation 032723 (Je [Var (Global 174),Con 2] (Branch F (Dloc 032744)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 032727 (Print_ret "Bob Dylan, 1969.");
    GamePrint "Bob Dylan, 1969.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 032744
  }
LocOp 032744:
  TraceOperation 032744 (Je [Var (Global 174),Con 3] (Branch F (Dloc 032769)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 032748 (Print_ret "A meaningless coincidence.");
    GamePrint "A meaningless coincidence.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 032769
  }
LocOp 032769:
  TraceOperation 032769 (Je [Var (Global 174),Con 4] (Branch F (Dloc 032835)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 032774 (Print_ret "The first single they recorded on their own Apple label, and one of their most successful songs ever.");
    GamePrint "The first single they recorded on their own Apple label, and one of their most successful songs ever.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 032835
  }
LocOp 032835:
  TraceOperation 032835 (Je [Var (Global 174),Con 5] (Branch F (Dloc 032899)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 032839 (Print "Peacefully for a ");
    GamePrint "Peacefully for a ";
    TraceOperation 032852 (Print_obj (Con 95));
    Let b3 = M[001613];
    Let b4 = M[001614];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 032854 (Print_ret " that is. Now and then it snorts or rolls over, and the walls shake a bit.");
      GamePrint " that is. Now and then it snorts or rolls over, and the walls shake a bit.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 032854 (Print_ret " that is. Now and then it snorts or rolls over, and the walls shake a bit.");
      GamePrint " that is. Now and then it snorts or rolls over, and the walls shake a bit.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 032899
  }
LocOp 032899:
  TraceOperation 032899 (Je [Var (Global 174),Con 6] (Branch F (Dloc 032920)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 032903 (Print_ret "That was just an example.");
    GamePrint "That was just an example.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 032920
  }
LocOp 032920:
  TraceOperation 032920 (Je [Var (Global 174),Con 7] (Branch F (Dloc 032948)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 032924 (Store (Con 229) (Con 13));
    SetByte 008334 0;
    SetByte 008335 13;
    TraceOperation 032927 (Call (Floc 022320) [Con -14349,Con 1] Sp);
    PushFrame 032927;
    SetLocal 1 -14349;
    SetLocal 2 1;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 032948
  }
LocReturn 032927:
  PushStack call_result;
  TraceOperation 032935 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 032940 (Call (Floc 057748) [Con -11710] Sp);
  PushFrame 032940;
  SetLocal 1 -11710;
  JumpCall: 057748, #actuals: 1
LocReturn 032940:
  PushStack call_result;
  TraceOperation 032947 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 032948:
  TraceOperation 032948 (Je [Var (Global 174),Con 8] (Branch F (Dloc 032976)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 032952 (Store (Con 229) (Con 13));
    SetByte 008334 0;
    SetByte 008335 13;
    TraceOperation 032955 (Call (Floc 022320) [Con -14349,Con 1] Sp);
    PushFrame 032955;
    SetLocal 1 -14349;
    SetLocal 2 1;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 032976
  }
LocReturn 032955:
  PushStack call_result;
  TraceOperation 032963 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 032968 (Call (Floc 057748) [Con -11709] Sp);
  PushFrame 032968;
  SetLocal 1 -11709;
  JumpCall: 057748, #actuals: 1
LocReturn 032968:
  PushStack call_result;
  TraceOperation 032975 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 032976:
  TraceOperation 032976 (Je [Var (Global 174),Con 9] (Branch F (Dloc 033023)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 032980 (Print_ret "Unfortunately, you couldn't hear a word of it, because sound doesn't travel in a vacuum.");
    GamePrint "Unfortunately, you couldn't hear a word of it, because sound doesn't travel in a vacuum.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 033023
  }
LocOp 033023:
  TraceOperation 033023 (Je [Var (Global 174),Con 10] (Branch F (Dloc 033058)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 033027 (Print_ret "I guess it isn't all that dangerous a place after all.");
    GamePrint "I guess it isn't all that dangerous a place after all.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 033058
  }
LocOp 033058:
  TraceOperation 033058 (Je [Var (Global 174),Con 11] (Branch F (Dloc 033105)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 033062 (Store (Con 229) (Con 14));
    SetByte 008334 0;
    SetByte 008335 14;
    TraceOperation 033065 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame 033065;
    SetLocal 1 -14349;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 033105
  }
LocReturn 033065:
  PushStack call_result;
  TraceOperation 033073 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 033078 (Print_ret "Isn't it fun reading through all the footnotes?");
  GamePrint "Isn't it fun reading through all the footnotes?\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 033105:
  TraceOperation 033105 (Je [Var (Global 174),Con 12] (Branch F (Dloc 033140)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 033109 (Print_ret "This is the famous recursive footnote (Footnote 12).");
    GamePrint "This is the famous recursive footnote (Footnote 12).\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 033140
  }
LocOp 033140:
  TraceOperation 033140 (Je [Var (Global 174),Con 13] (Branch F (Dloc 033168)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),13)) {
    TraceOperation 033144 (Store (Con 229) (Con 13));
    SetByte 008334 0;
    SetByte 008335 13;
    TraceOperation 033147 (Call (Floc 022320) [Con -14349,Con 1] Sp);
    PushFrame 033147;
    SetLocal 1 -14349;
    SetLocal 2 1;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 033168
  }
LocReturn 033147:
  PushStack call_result;
  TraceOperation 033155 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 033160 (Call (Floc 057748) [Con -11707] Sp);
  PushFrame 033160;
  SetLocal 1 -11707;
  JumpCall: 057748, #actuals: 1
LocReturn 033160:
  PushStack call_result;
  TraceOperation 033167 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 033168:
  TraceOperation 033168 (Je [Var (Global 174),Con 14] (Branch F (Dloc 033244)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 033173 (Print_paddr (Var (Global 37)));
    Let b3 = M[007982];
    Let b4 = M[007983];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 033175 (Print " is also the name of a terrific work of interactive fiction by Douglas Adams and S. Eric Meretzky.");
    GamePrint " is also the name of a terrific work of interactive fiction by Douglas Adams and S. Eric Meretzky.";
    TraceOperation 033240 (Print_paddr (Var (Global 36)));
    Let b5 = M[007980];
    Let b6 = M[007981];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 033242 New_line;
    GamePrint "\n";
    TraceOperation 033243 Rtrue;
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    Jump: 033244
  }
LocOp 033244:
  TraceOperation 033244 (Je [Var (Global 174),Con 15] (Branch F (Dloc 033272)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 033248 (Store (Con 229) (Con 13));
    SetByte 008334 0;
    SetByte 008335 13;
    TraceOperation 033251 (Call (Floc 022320) [Con -14349,Con 1] Sp);
    PushFrame 033251;
    SetLocal 1 -14349;
    SetLocal 2 1;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 033272
  }
LocReturn 033251:
  PushStack call_result;
  TraceOperation 033259 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 033264 (Call (Floc 057748) [Con -11704] Sp);
  PushFrame 033264;
  SetLocal 1 -11704;
  JumpCall: 057748, #actuals: 1
LocReturn 033264:
  PushStack call_result;
  TraceOperation 033271 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 033272:
  TraceOperation 033272 (Print "There is no Footnote ");
  GamePrint "There is no Footnote ";
  TraceOperation 033279 (Print_num (Var (Global 174)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  GamePrint ShowNumber(MakeHiLo(b1,b2));
  TraceOperation 033282 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[150]--------------------------------------------------
LocRoutine 033286:
  MakeRoutineFrame 0;
  Jump: 033287
LocOp 033287:
  TraceOperation 033287 (Print_ret "Aaaaaaarggggghhhhhh!");
  GamePrint "Aaaaaaarggggghhhhhh!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[151]--------------------------------------------------
LocRoutine 033304:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 033307
LocOp 033307:
  TraceOperation 033307 (Je [Var (Global 201),Con 217] (Branch F (Dloc 033374)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 033312 (Je [Var (Global 120),Con 123] (Branch F (Dloc 033320)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 033316 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 033327)));
      Let b5 = M[002174];
      if (TestBit(b5,6)) {
        Jump: 033320
      } else {
        Jump: 033327
      }
    } else {
      Jump: 033320
    }
  } else {
    Jump: 033374
  }
LocOp 033320:
  TraceOperation 033320 (Print_ret "You are!");
  GamePrint "You are!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 033327:
  TraceOperation 033327 (Call (Floc 043468) [Con 158] Sp);
  PushFrame 033327;
  SetLocal 1 158;
  JumpCall: 043468, #actuals: 1
LocReturn 033327:
  PushStack call_result;
  TraceOperation 033333 (Jz (Var Sp) (Branch T (Dloc 033344)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 033344
  } else {
    TraceOperation 033336 (Call (Floc 022042) [Con 116,Con 158] Sp);
    PushFrame 033336;
    SetLocal 1 116;
    SetLocal 2 158;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 033336:
  PushStack call_result;
  TraceOperation 033343 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 033344:
  TraceOperation 033344 (Call (Floc 043370) [Con 158] Sp);
  PushFrame 033344;
  SetLocal 1 158;
  JumpCall: 043370, #actuals: 1
LocReturn 033344:
  PushStack call_result;
  TraceOperation 033350 (Jz (Var Sp) (Branch T (Dloc 033363)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 033363
  } else {
    TraceOperation 033353 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 033355 (Print " ");
    GamePrint " ";
    TraceOperation 033358 (Print_obj (Con 158));
    Let b4 = M[002180];
    Let b5 = M[002181];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 033360 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 033360 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  }
LocOp 033363:
  TraceOperation 033363 (Print_ret "There's nothing to wear here.");
  GamePrint "There's nothing to wear here.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 033374:
  TraceOperation 033374 (Call (Floc 039060) [] Sp);
  PushFrame 033374;
  JumpCall: 039060, #actuals: 0
LocReturn 033374:
  PushStack call_result;
  TraceOperation 033379 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[152]--------------------------------------------------
LocRoutine 033380:
  MakeRoutineFrame 0;
  Jump: 033381
LocOp 033381:
  TraceOperation 033381 (Je [Var (Global 201),Con 217] (Branch F (Dloc 033624)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 033386 (Je [Var (Global 0),Con 134] (Branch F (Dloc 033596)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),134)) {
      TraceOperation 033391 (Print "You get drunk and have a terrific time for twelve minutes, are the life and soul of the Pub, tell some really great stories, make everyone laugh a lot, and they all clap you on the back and tell you what a great chap you are and then the Earth gets unexpectedly demolished");
      GamePrint "You get drunk and have a terrific time for twelve minutes, are the life and soul of the Pub, tell some really great stories, make everyone laugh a lot, and they all clap you on the back and tell you what a great chap you are and then the Earth gets unexpectedly demolished";
      TraceOperation 033544 (Je [Var (Global 120),Con 123] (Branch F (Dloc 033588)));
      Let b5 = M[008148];
      Let b6 = M[008149];
      if (Equal(MakeHiLo(b5,b6),123)) {
        TraceOperation 033548 (Print ". You wake up with a hangover which lasts for all eternity.");
        GamePrint ". You wake up with a hangover which lasts for all eternity.";
        TraceOperation 033581 New_line;
        GamePrint "\n";
        TraceOperation 033582 (Call (Floc 028948) [] Sp);
        PushFrame 033582;
        JumpCall: 028948, #actuals: 0
      } else {
        Jump: 033588
      }
    } else {
      Jump: 033596
    }
  } else {
    Jump: 033624
  }
LocReturn 033582:
  PushStack call_result;
  TraceOperation 033587 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 033588:
  TraceOperation 033588 (Call (Floc 042734) [Con -11702] Sp);
  PushFrame 033588;
  SetLocal 1 -11702;
  JumpCall: 042734, #actuals: 1
LocReturn 033588:
  PushStack call_result;
  TraceOperation 033595 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 033596:
  TraceOperation 033596 (Je [Var (Global 0),Con 76,Con 74,Con 73] (Branch F (Dloc 033607)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),76),Equal(MakeHiLo(b1,b2),74)),Equal(MakeHiLo(b1,b2),73))) {
    TraceOperation 033603 (Print_paddr (Var (Global 54)));
    Let b3 = M[008016];
    Let b4 = M[008017];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 033605 New_line;
    GamePrint "\n";
    TraceOperation 033606 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 033607
  }
LocOp 033607:
  TraceOperation 033607 (Print_ret "You can't see any alcohol here!");
  GamePrint "You can't see any alcohol here!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 033624:
  TraceOperation 033624 (Call (Floc 039060) [] Sp);
  PushFrame 033624;
  JumpCall: 039060, #actuals: 0
LocReturn 033624:
  PushStack call_result;
  TraceOperation 033629 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[153]--------------------------------------------------
LocRoutine 033630:
  MakeRoutineFrame 0;
  Jump: 033631
LocOp 033631:
  TraceOperation 033631 (Jz (Var (Global 201)) (Branch F (Dloc 033637)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 033634 (Store (Con 217) (Con 217));
    SetByte 008310 0;
    SetByte 008311 217;
    Jump: 033637
  } else {
    Jump: 033637
  }
LocOp 033637:
  TraceOperation 033637 (Je [Var (Global 201),Con 217] (Branch F (Dloc 033674)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 033641 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 033653)));
    Let b3 = M[002174];
    if (TestBit(b3,6)) {
      TraceOperation 033645 (Call (Floc 022042) [Con 148,Con 158] Sp);
      PushFrame 033645;
      SetLocal 1 148;
      SetLocal 2 158;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 033653
    }
  } else {
    Jump: 033674
  }
LocReturn 033645:
  PushStack call_result;
  TraceOperation 033652 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 033653:
  TraceOperation 033653 (Je [Var (Global 120),Con 123] (Branch F (Dloc 033670)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),123)) {
    TraceOperation 033657 (Print_ret "You're not wearing anything!");
    GamePrint "You're not wearing anything!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 033670
  }
LocOp 033670:
  TraceOperation 033670 (Print_paddr (Var (Global 19)));
  Let b1 = M[007946];
  Let b2 = M[007947];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 033672 New_line;
  GamePrint "\n";
  TraceOperation 033673 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
LocOp 033674:
  TraceOperation 033674 (Call (Floc 039060) [] Sp);
  PushFrame 033674;
  JumpCall: 039060, #actuals: 0
LocReturn 033674:
  PushStack call_result;
  TraceOperation 033679 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[154]--------------------------------------------------
LocRoutine 033680:
  MakeRoutineFrame 0;
  Jump: 033681
LocOp 033681:
  TraceOperation 033681 (Call (Floc 041208) [] Sp);
  PushFrame 033681;
  JumpCall: 041208, #actuals: 0
LocReturn 033681:
  PushStack call_result;
  TraceOperation 033686 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 033689 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[155]--------------------------------------------------
LocRoutine 033690:
  MakeRoutineFrame 0;
  Jump: 033691
LocOp 033691:
  TraceOperation 033691 (Test_attr (Var (Global 202)) (Con 26) (Branch F (Dloc 033724)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 033695 (Print "Politely,");
    GamePrint "Politely,";
    TraceOperation 033704 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
    Let b4 = M[008312];
    Let b5 = M[008313];
    PushFrame 033704;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 033724
  }
LocReturn 033704:
  PushStack call_result;
  TraceOperation 033711 (Print_ret " refuses your offer.");
  GamePrint " refuses your offer.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 033724:
  TraceOperation 033724 (Print "You can't give");
  GamePrint "You can't give";
  TraceOperation 033731 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 033731;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 033731:
  PushStack call_result;
  TraceOperation 033737 (Print " to");
  GamePrint " to";
  TraceOperation 033740 (Call (Floc 043738) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 033740;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 033740:
  PushStack call_result;
  TraceOperation 033746 (Print_ret "!");
  GamePrint "!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[156]--------------------------------------------------
LocRoutine 033750:
  MakeRoutineFrame 0;
  Jump: 033751
LocOp 033751:
  TraceOperation 033751 (Je [Var (Global 201),Con 217] (Branch F (Dloc 033761)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 033755 (Call (Floc 028824) [] Sp);
    PushFrame 033755;
    JumpCall: 028824, #actuals: 0
  } else {
    Jump: 033761
  }
LocReturn 033755:
  PushStack call_result;
  TraceOperation 033760 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 033761:
  TraceOperation 033761 (Call (Floc 039060) [] Sp);
  PushFrame 033761;
  JumpCall: 039060, #actuals: 0
LocReturn 033761:
  PushStack call_result;
  TraceOperation 033766 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[157]--------------------------------------------------
LocRoutine 033768:
  MakeRoutineFrame 0;
  Jump: 033769
LocOp 033769:
  TraceOperation 033769 (Print "You can't hang something from");
  GamePrint "You can't hang something from";
  TraceOperation 033780 (Call (Floc 043738) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 033780;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 033780:
  PushStack call_result;
  TraceOperation 033786 (Print_ret "!");
  GamePrint "!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[158]--------------------------------------------------
LocRoutine 033790:
  MakeRoutineFrame 0;
  Jump: 033791
LocOp 033791:
  TraceOperation 033791 (Jz (Var (Global 201)) (Branch T (Dloc 033813)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 033813
  } else {
    TraceOperation 033794 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 033813)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,5)) {
      TraceOperation 033798 (Print_ret "\"Hello to you too.\"");
      GamePrint "\"Hello to you too.\"\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      Jump: 033813
    }
  }
LocOp 033813:
  TraceOperation 033813 (Jz (Var (Global 201)) (Branch T (Dloc 033824)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 033824
  } else {
    TraceOperation 033816 (Call (Floc 022042) [Con 15,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 033816;
    SetLocal 1 15;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 2
  }
LocReturn 033816:
  PushStack call_result;
  TraceOperation 033823 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 033824:
  TraceOperation 033824 (Call (Floc 022042) [Con 15,Con 30] Sp);
  PushFrame 033824;
  SetLocal 1 15;
  SetLocal 2 30;
  JumpCall: 022042, #actuals: 2
LocReturn 033824:
  PushStack call_result;
  TraceOperation 033831 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[159]--------------------------------------------------
LocRoutine 033832:
  MakeRoutineFrame 0;
  Jump: 033833
LocOp 033833:
  TraceOperation 033833 (Print_ret "If you're really stuck, a complete map and InvisiClues Hint Booklet are available from your dealer, or via mail order with the form that came in your package.");
  GamePrint "If you're really stuck, a complete map and InvisiClues Hint Booklet are available from your dealer, or via mail order with the form that came in your package.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[160]--------------------------------------------------
LocRoutine 033926:
  MakeRoutineFrame 0;
  Jump: 033927
LocOp 033927:
  TraceOperation 033927 (Print_ret "There's no place to hide here.");
  GamePrint "There's no place to hide here.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[161]--------------------------------------------------
LocRoutine 033944:
  MakeRoutineFrame 0;
  Jump: 033945
LocOp 033945:
  TraceOperation 033945 (Call (Floc 022042) [Con 114,Con 5] Sp);
  PushFrame 033945;
  SetLocal 1 114;
  SetLocal 2 5;
  JumpCall: 022042, #actuals: 2
LocReturn 033945:
  PushStack call_result;
  TraceOperation 033952 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[162]--------------------------------------------------
LocRoutine 033954:
  MakeRoutineFrame 0;
  Jump: 033955
LocOp 033955:
  TraceOperation 033955 (Print_ret "Pleased to meet you. I'm your computer.");
  GamePrint "Pleased to meet you. I'm your computer.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[163]--------------------------------------------------
LocRoutine 033980:
  MakeRoutineFrame 0;
  Jump: 033981
LocOp 033981:
  TraceOperation 033981 (Call (Floc 022042) [Con 15,Con 30] Sp);
  PushFrame 033981;
  SetLocal 1 15;
  SetLocal 2 30;
  JumpCall: 022042, #actuals: 2
LocReturn 033981:
  PushStack call_result;
  TraceOperation 033988 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[164]--------------------------------------------------
LocRoutine 033990:
  MakeRoutineFrame 0;
  Jump: 033991
LocOp 033991:
  TraceOperation 033991 (Call (Floc 043716) [Con -11701] Sp);
  PushFrame 033991;
  SetLocal 1 -11701;
  JumpCall: 043716, #actuals: 1
LocReturn 033991:
  PushStack call_result;
  TraceOperation 033998 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[165]--------------------------------------------------
LocRoutine 034000:
  MakeRoutineFrame 0;
  Jump: 034001
LocOp 034001:
  TraceOperation 034001 (Print_ret "You are obviously letting things get to you. You should learn to relax a little.");
  GamePrint "You are obviously letting things get to you. You should learn to relax a little.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[166]--------------------------------------------------
LocRoutine 034050:
  MakeRoutineFrame 0;
  Jump: 034051
LocOp 034051:
  TraceOperation 034051 (Call (Floc 038896) [] Sp);
  PushFrame 034051;
  JumpCall: 038896, #actuals: 0
LocReturn 034051:
  PushStack call_result;
  TraceOperation 034056 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[167]--------------------------------------------------
LocRoutine 034058:
  MakeRoutineFrame 0;
  Jump: 034059
LocOp 034059:
  TraceOperation 034059 (Test_attr (Var (Global 201)) (Con 28) (Branch F (Dloc 034076)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    TraceOperation 034063 (Print_ret "Nobody's home.");
    GamePrint "Nobody's home.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 034076
  }
LocOp 034076:
  TraceOperation 034076 (Call (Floc 043716) [Con -11698] Sp);
  PushFrame 034076;
  SetLocal 1 -11698;
  JumpCall: 043716, #actuals: 1
LocReturn 034076:
  PushStack call_result;
  TraceOperation 034083 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[168]--------------------------------------------------
LocRoutine 034084:
  MakeRoutineFrame 0;
  Jump: 034085
LocOp 034085:
  TraceOperation 034085 (Print_ret "This is family entertainment, not a video nasty.");
  GamePrint "This is family entertainment, not a video nasty.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[169]--------------------------------------------------
LocRoutine 034116:
  MakeRoutineFrame 0;
  Jump: 034117
LocOp 034117:
  TraceOperation 034117 (Test_attr (Var (Global 201)) (Con 19) (Branch F (Dloc 034134)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,4)) {
    TraceOperation 034121 (Test_attr (Var (Global 201)) (Con 29) (Branch T (Dloc 034134)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,2)) {
      Jump: 034134
    } else {
      TraceOperation 034125 (Print_ret "It is already off.");
      GamePrint "It is already off.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 034134
  }
LocOp 034134:
  TraceOperation 034134 (Je [Var (Global 201),Con 49] (Branch F (Dloc 034159)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 034138 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 034159)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 034142 (Call (Floc 043298) [Con 206] Sp);
      PushFrame 034142;
      SetLocal 1 206;
      JumpCall: 043298, #actuals: 1
    } else {
      Jump: 034159
    }
  } else {
    Jump: 034159
  }
LocReturn 034142:
  PushStack call_result;
  TraceOperation 034148 (Jz (Var Sp) (Branch T (Dloc 034159)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 034159
  } else {
    TraceOperation 034151 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame 034151;
    SetLocal 1 145;
    SetLocal 2 205;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 034151:
  PushStack call_result;
  TraceOperation 034158 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034159:
  TraceOperation 034159 (Print_ret "You can't turn that off.");
  GamePrint "You can't turn that off.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[170]--------------------------------------------------
LocRoutine 034172:
  MakeRoutineFrame 0;
  Jump: 034173
LocOp 034173:
  TraceOperation 034173 (Test_attr (Var (Global 201)) (Con 19) (Branch F (Dloc 034190)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,4)) {
    TraceOperation 034177 (Test_attr (Var (Global 201)) (Con 29) (Branch F (Dloc 034190)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,2)) {
      TraceOperation 034181 (Print_ret "It is already on.");
      GamePrint "It is already on.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 034190
    }
  } else {
    Jump: 034190
  }
LocOp 034190:
  TraceOperation 034190 (Je [Var (Global 201),Con 49] (Branch F (Dloc 034215)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 034194 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 034215)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 034198 (Call (Floc 043298) [Con 206] Sp);
      PushFrame 034198;
      SetLocal 1 206;
      JumpCall: 043298, #actuals: 1
    } else {
      Jump: 034215
    }
  } else {
    Jump: 034215
  }
LocReturn 034198:
  PushStack call_result;
  TraceOperation 034204 (Jz (Var Sp) (Branch T (Dloc 034215)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 034215
  } else {
    TraceOperation 034207 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame 034207;
    SetLocal 1 145;
    SetLocal 2 205;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 034207:
  PushStack call_result;
  TraceOperation 034214 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034215:
  TraceOperation 034215 (Print_ret "You can't turn that on.");
  GamePrint "You can't turn that on.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[171]--------------------------------------------------
LocRoutine 034226:
  MakeRoutineFrame 0;
  Jump: 034227
LocOp 034227:
  TraceOperation 034227 (Jz (Var (Global 86)) (Branch T (Dloc 034234)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 034234
  } else {
    TraceOperation 034230 (Print_paddr (Var (Global 50)));
    Let b3 = M[008008];
    Let b4 = M[008009];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 034232 New_line;
    GamePrint "\n";
    TraceOperation 034233 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 034234:
  TraceOperation 034234 (Je [Var (Global 0),Con 108] (Branch F (Dloc 034244)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 034238 (Call (Floc 037874) [] Sp);
    PushFrame 034238;
    JumpCall: 037874, #actuals: 0
  } else {
    Jump: 034244
  }
LocReturn 034238:
  PushStack call_result;
  TraceOperation 034243 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 034244:
  TraceOperation 034244 (Jz (Var (Global 201)) (Branch T (Dloc 034257)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 034257
  } else {
    TraceOperation 034247 (Jin (Var (Global 201)) (Var (Global 0)) (Branch T (Dloc 034257)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[007908];
    Let b6 = M[007909];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
    if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
      Jump: 034257
    } else {
      TraceOperation 034251 (Call (Floc 031360) [] Sp);
      PushFrame 034251;
      JumpCall: 031360, #actuals: 0
    }
  }
LocReturn 034251:
  PushStack call_result;
  TraceOperation 034256 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 034257:
  TraceOperation 034257 (Jz (Var (Global 201)) (Branch F (Dloc 034268)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 034260 (Je [Var (Global 0),Con 66] (Branch F (Dloc 034268)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),66)) {
      TraceOperation 034264 (Print_paddr (Var (Global 16)));
      Let b5 = M[007940];
      Let b6 = M[007941];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 034266 New_line;
      GamePrint "\n";
      TraceOperation 034267 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 034268
    }
  } else {
    Jump: 034268
  }
LocOp 034268:
  TraceOperation 034268 (Call (Floc 037638) [] Sp);
  PushFrame 034268;
  JumpCall: 037638, #actuals: 0
LocReturn 034268:
  PushStack call_result;
  TraceOperation 034273 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[172]--------------------------------------------------
LocRoutine 034274:
  MakeRoutineFrame 0;
  Jump: 034275
LocOp 034275:
  TraceOperation 034275 (Jz (Var (Global 201)) (Branch F (Dloc 034281)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 034278 (Store (Con 217) (Con 217));
    SetByte 008310 0;
    SetByte 008311 217;
    Jump: 034281
  } else {
    Jump: 034281
  }
LocOp 034281:
  TraceOperation 034281 (Je [Var (Global 201),Con 217] (Branch F (Dloc 034292)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 034285 (Call (Floc 043620) [Con 26] Sp);
    PushFrame 034285;
    SetLocal 1 26;
    JumpCall: 043620, #actuals: 1
  } else {
    Jump: 034292
  }
LocReturn 034285:
  PushStack call_result;
  TraceOperation 034291 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 034292:
  TraceOperation 034292 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 034295 (Je [Var (Global 201),Var Sp] (Branch F (Dloc 034307)));
  Let b4 = M[008310];
  Let b5 = M[008311];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 034299 (Call (Floc 022042) [Con 48,Var (Global 201)] Sp);
    Let b7 = M[008310];
    Let b8 = M[008311];
    PushFrame 034299;
    SetLocal 1 48;
    SetLocal 2 MakeHiLo(b7,b8);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 034307
  }
LocReturn 034299:
  PushStack call_result;
  TraceOperation 034306 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034307:
  TraceOperation 034307 (Call (Floc 022042) [Con 53,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 034307;
  SetLocal 1 53;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022042, #actuals: 2
LocReturn 034307:
  PushStack call_result;
  TraceOperation 034314 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[173]--------------------------------------------------
LocRoutine 034316:
  MakeRoutineFrame 0;
  Jump: 034317
LocOp 034317:
  TraceOperation 034317 (Je [Var (Global 0),Con 108] (Branch F (Dloc 034327)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 034321 (Call (Floc 037874) [] Sp);
    PushFrame 034321;
    JumpCall: 037874, #actuals: 0
  } else {
    Jump: 034327
  }
LocReturn 034321:
  PushStack call_result;
  TraceOperation 034326 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 034327:
  TraceOperation 034327 (Je [Var (Global 201),Con 217] (Branch F (Dloc 034351)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 034331 (Je [Var (Global 0),Con 168] (Branch F (Dloc 034343)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),168)) {
      TraceOperation 034335 (Call (Floc 022042) [Con 87,Con 161] Sp);
      PushFrame 034335;
      SetLocal 1 87;
      SetLocal 2 161;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 034343
    }
  } else {
    Jump: 034351
  }
LocReturn 034335:
  PushStack call_result;
  TraceOperation 034342 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034343:
  TraceOperation 034343 (Call (Floc 022042) [Con 87,Con 42] Sp);
  PushFrame 034343;
  SetLocal 1 87;
  SetLocal 2 42;
  JumpCall: 022042, #actuals: 2
LocReturn 034343:
  PushStack call_result;
  TraceOperation 034350 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034351:
  TraceOperation 034351 (Call (Floc 022042) [Con 28,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 034351;
  SetLocal 1 28;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022042, #actuals: 2
LocReturn 034351:
  PushStack call_result;
  TraceOperation 034358 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[174]--------------------------------------------------
LocRoutine 034360:
  MakeRoutineFrame 0;
  Jump: 034361
LocOp 034361:
  TraceOperation 034361 (Print "At the moment,");
  GamePrint "At the moment,";
  TraceOperation 034372 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 034372;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 034372:
  PushStack call_result;
  TraceOperation 034379 (Print_ret " makes no sound.");
  GamePrint " makes no sound.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[175]--------------------------------------------------
LocRoutine 034392:
  MakeRoutineFrame 0;
  Jump: 034393
LocOp 034393:
  TraceOperation 034393 (Call (Floc 030950) [] Sp);
  PushFrame 034393;
  JumpCall: 030950, #actuals: 0
LocReturn 034393:
  PushStack call_result;
  TraceOperation 034398 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[176]--------------------------------------------------
LocRoutine 034400:
  MakeRoutineFrame 0;
  Jump: 034401
LocOp 034401:
  TraceOperation 034401 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 034416)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 034405 (Print_ret "You see a towel.");
    GamePrint "You see a towel.\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    Jump: 034416
  }
LocOp 034416:
  TraceOperation 034416 (Call (Floc 041564) [Con 1] Sp);
  PushFrame 034416;
  SetLocal 1 1;
  JumpCall: 041564, #actuals: 1
LocReturn 034416:
  PushStack call_result;
  TraceOperation 034422 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 034425 (Call (Floc 041740) [Con 1] Sp);
    PushFrame 034425;
    SetLocal 1 1;
    JumpCall: 041740, #actuals: 1
  }
LocReturn 034425:
  PushStack call_result;
  TraceOperation 034431 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[177]--------------------------------------------------
LocRoutine 034432:
  MakeRoutineFrame 0;
  Jump: 034433
LocOp 034433:
  TraceOperation 034433 (Print "There is nothing behind");
  GamePrint "There is nothing behind";
  TraceOperation 034442 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 034442;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 034442:
  PushStack call_result;
  TraceOperation 034449 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[178]--------------------------------------------------
LocRoutine 034452:
  MakeRoutineFrame 0;
  Jump: 034453
LocOp 034453:
  TraceOperation 034453 (Jz (Var (Global 85)) (Branch F (Dloc 034460)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 034456 (Print_paddr (Var (Global 56)));
    Let b3 = M[008020];
    Let b4 = M[008021];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 034458 New_line;
    GamePrint "\n";
    TraceOperation 034459 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 034460
  }
LocOp 034460:
  TraceOperation 034460 (Je [Var (Global 201),Con 217] (Branch F (Dloc 034472)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 034464 (Call (Floc 022042) [Con 61,Con 42] Sp);
    PushFrame 034464;
    SetLocal 1 61;
    SetLocal 2 42;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 034472
  }
LocReturn 034464:
  PushStack call_result;
  TraceOperation 034471 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034472:
  TraceOperation 034472 (Call (Floc 022042) [Con 63,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 034472;
  SetLocal 1 63;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022042, #actuals: 2
LocReturn 034472:
  PushStack call_result;
  TraceOperation 034479 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[179]--------------------------------------------------
LocRoutine 034480:
  MakeRoutineFrame 0;
  Jump: 034481
LocOp 034481:
  TraceOperation 034481 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 034506)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 034485 (Je [Var (Global 201),Con 216] (Branch T (Dloc 034506)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (Equal(MakeHiLo(b4,b5),216)) {
      Jump: 034506
    } else {
      TraceOperation 034489 (Print_ret "There is nothing special to be seen.");
      GamePrint "There is nothing special to be seen.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 034506
  }
LocOp 034506:
  TraceOperation 034506 (Je [Var (Global 201),Con 182,Con 7,Con 186] (Branch F (Dloc 034524)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),182),Equal(MakeHiLo(b1,b2),7)),Equal(MakeHiLo(b1,b2),186))) {
    TraceOperation 034513 (Print_ret "You can't do that.");
    GamePrint "You can't do that.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 034524
  }
LocOp 034524:
  TraceOperation 034524 (Test_attr (Var (Global 201)) (Con 8) (Branch F (Dloc 034569)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,7)) {
    TraceOperation 034528 (Get_parent (Var (Global 195)) Sp);
    Let b4 = M[008298];
    Let b5 = M[008299];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
    PushStack Widen(b6);
    TraceOperation 034531 (Je [Var (Global 201),Var Sp] (Branch F (Dloc 034541)));
    Let b7 = M[008310];
    Let b8 = M[008311];
    PopStack popped9;
    if (Equal(MakeHiLo(b7,b8),popped9)) {
      TraceOperation 034535 (Call (Floc 042532) [] Sp);
      PushFrame 034535;
      JumpCall: 042532, #actuals: 0
    } else {
      Jump: 034541
    }
  } else {
    Jump: 034569
  }
LocReturn 034535:
  PushStack call_result;
  TraceOperation 034540 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034541:
  TraceOperation 034541 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 034552)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  PushStack Widen(b3);
  if (IsZero(Widen(b3))) {
    Jump: 034552
  } else {
    TraceOperation 034545 (Call (Floc 042074) [Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 034545;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 042074, #actuals: 1
  }
LocReturn 034545:
  PushStack call_result;
  TraceOperation 034551 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[180]--------------------------------------------------
LocRoutine 034564:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 179;
  }
  Jump: 034567
LocOp 034567:
  TraceOperation 034567 (Dec (Con 69));
  Let b1 = M[008014];
  Let b2 = M[008015];
  SetByte 008014 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 008015 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 034569 (Test_attr (Var (Global 201)) (Con 28) (Branch F (Dloc 034625)));
  Let b3 = M[008310];
  Let b4 = M[008311];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),3)];
  if (TestBit(b5,3)) {
    TraceOperation 034573 (Print "All you can tell is that");
    GamePrint "All you can tell is that";
    TraceOperation 034588 (Test_attr (Var (Global 201)) (Con 23) (Branch F (Dloc 034609)));
    Let b6 = M[008310];
    Let b7 = M[008311];
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),2)];
    if (TestBit(b8,0)) {
      TraceOperation 034592 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
      Let b9 = M[008310];
      Let b10 = M[008311];
      PushFrame 034592;
      SetLocal 1 MakeHiLo(b9,b10);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    } else {
      Jump: 034609
    }
  } else {
    Jump: 034625
  }
LocReturn 034592:
  PushStack call_result;
  TraceOperation 034599 (Print " is open.");
  GamePrint " is open.";
  TraceOperation 034606 (Jump 034623);
  Jump: 034623
LocOp 034609:
  TraceOperation 034609 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 034609;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 034609:
  PushStack call_result;
  TraceOperation 034616 (Print " is closed.");
  GamePrint " is closed.";
  Jump: 034623
LocOp 034623:
  TraceOperation 034623 New_line;
  GamePrint "\n";
  TraceOperation 034624 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034625:
  TraceOperation 034625 (Test_attr (Var (Global 201)) (Con 24) (Branch F (Dloc 034707)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,7)) {
    TraceOperation 034630 (Get_parent (Var (Global 195)) Sp);
    Let b4 = M[008298];
    Let b5 = M[008299];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
    PushStack Widen(b6);
    TraceOperation 034633 (Je [Var (Global 201),Var Sp] (Branch F (Dloc 034643)));
    Let b7 = M[008310];
    Let b8 = M[008311];
    PopStack popped9;
    if (Equal(MakeHiLo(b7,b8),popped9)) {
      TraceOperation 034637 (Call (Floc 042532) [] Sp);
      PushFrame 034637;
      JumpCall: 042532, #actuals: 0
    } else {
      Jump: 034643
    }
  } else {
    Jump: 034707
  }
LocReturn 034637:
  PushStack call_result;
  TraceOperation 034642 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034643:
  TraceOperation 034643 (Call (Floc 043506) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 034643;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043506, #actuals: 1
LocReturn 034643:
  PushStack call_result;
  TraceOperation 034649 (Jz (Var Sp) (Branch T (Dloc 034670)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 034670
  } else {
    TraceOperation 034652 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 034663)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    PushStack Widen(b4);
    if (IsZero(Widen(b4))) {
      Jump: 034663
    } else {
      TraceOperation 034656 (Call (Floc 042074) [Var (Global 201)] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame 034656;
      SetLocal 1 MakeHiLo(b5,b6);
      JumpCall: 042074, #actuals: 1
    }
  }
LocReturn 034656:
  PushStack call_result;
  TraceOperation 034662 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[181]--------------------------------------------------
LocRoutine 034684:
  MakeRoutineFrame 0;
  Jump: 034685
LocOp 034685:
  TraceOperation 034685 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[182]--------------------------------------------------
LocRoutine 034708:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 9672;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 11547;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 13315;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 16689;
        }
      }
    }
  }
  Jump: 034717
LocOp 034717:
  TraceOperation 034717 (Inc (Var Sp));
  PopStack popped1;
  if (IsZeroByte(LoByte(popped1))) {
    PopStack popped2;
    PushStack Add(popped2,1);
    TraceOperation 034719 (Call (Floc 043468) [Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 034719;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 043468, #actuals: 1
  } else {
    if (LessThanByte(LoByte(popped1),16)) {
      SetLocal LoByte(popped1) Add(GetLocal(LoByte(popped1)),1);
      TraceOperation 034719 (Call (Floc 043468) [Var (Global 201)] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame 034719;
      SetLocal 1 MakeHiLo(b5,b6);
      JumpCall: 043468, #actuals: 1
    } else {
      Let b7 = M[Offset(007908,Mul(2,Widen(MinusByte(LoByte(popped1),16))))];
      Let b8 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(LoByte(popped1),16)))),1)];
      SetByte Offset(007908,Mul(2,Widen(MinusByte(LoByte(popped1),16)))) HiByte(Add(MakeHiLo(b7,b8),1));
      SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(LoByte(popped1),16)))),1) LoByte(Add(MakeHiLo(b7,b8),1));
      TraceOperation 034719 (Call (Floc 043468) [Var (Global 201)] Sp);
      Let b9 = M[008310];
      Let b10 = M[008311];
      PushFrame 034719;
      SetLocal 1 MakeHiLo(b9,b10);
      JumpCall: 043468, #actuals: 1
    }
  }
LocReturn 034719:
  PushStack call_result;
  TraceOperation 034725 (Jz (Var Sp) (Branch T (Dloc 034750)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 034750
  } else {
    TraceOperation 034728 (Test_attr (Var (Global 201)) (Con 9) (Branch F (Dloc 034743)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),1)];
    if (TestBit(b4,6)) {
      TraceOperation 034732 (Print_ret "You're wearing it!");
      GamePrint "You're wearing it!\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 034743
    }
  }
LocOp 034743:
  TraceOperation 034743 (Print_ret "You're holding it!");
  GamePrint "You're holding it!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034750:
  TraceOperation 034750 (Print "There is nothing but ");
  GamePrint "There is nothing but ";
  TraceOperation 034757 (Je [Var (Global 201),Con 114] (Branch F (Dloc 034769)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),114)) {
    TraceOperation 034761 (Print "a ");
    GamePrint "a ";
    TraceOperation 034764 (Print_obj (Con 115));
    Let b3 = M[001793];
    Let b4 = M[001794];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 034766 (Jump 034804);
      Jump: 034804
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 034766 (Jump 034804);
      Jump: 034804
    }
  } else {
    Jump: 034769
  }
LocOp 034769:
  TraceOperation 034769 (Je [Var (Global 201),Con 64] (Branch F (Dloc 034781)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 034773 (Print "water");
    GamePrint "water";
    TraceOperation 034778 (Jump 034804);
    Jump: 034804
  } else {
    Jump: 034781
  }
LocOp 034781:
  TraceOperation 034781 (Je [Var (Global 201),Con 139] (Branch F (Dloc 034799)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 034785 (Test_attr (Con 139) (Con 8) (Branch F (Dloc 034799)));
    Let b3 = M[002003];
    if (TestBit(b3,7)) {
      TraceOperation 034789 (Print "a drain");
      GamePrint "a drain";
      TraceOperation 034796 (Jump 034804);
      Jump: 034804
    } else {
      Jump: 034799
    }
  } else {
    Jump: 034799
  }
LocOp 034799:
  TraceOperation 034799 (Print "dust");
  GamePrint "dust";
  Jump: 034804
LocOp 034804:
  TraceOperation 034804 (Print_ret " there.");
  GamePrint " there.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[183]--------------------------------------------------
LocRoutine 034810:
  MakeRoutineFrame 0;
  Jump: 034811
LocOp 034811:
  TraceOperation 034811 (Jz (Var (Global 85)) (Branch F (Dloc 034818)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 034814 (Print_paddr (Var (Global 56)));
    Let b3 = M[008020];
    Let b4 = M[008021];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 034816 New_line;
    GamePrint "\n";
    TraceOperation 034817 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 034818
  }
LocOp 034818:
  TraceOperation 034818 (Je [Var (Global 201),Con 217] (Branch F (Dloc 034842)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 034822 (Test_attr (Var (Global 0)) (Con 7) (Branch F (Dloc 034834)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),0)];
    if (TestBit(b5,0)) {
      TraceOperation 034826 (Call (Floc 022042) [Con 61,Con 38] Sp);
      PushFrame 034826;
      SetLocal 1 61;
      SetLocal 2 38;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 034834
    }
  } else {
    Jump: 034842
  }
LocReturn 034826:
  PushStack call_result;
  TraceOperation 034833 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034834:
  TraceOperation 034834 (Call (Floc 022042) [Con 61,Con 40] Sp);
  PushFrame 034834;
  SetLocal 1 61;
  SetLocal 2 40;
  JumpCall: 022042, #actuals: 2
LocReturn 034834:
  PushStack call_result;
  TraceOperation 034841 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034842:
  TraceOperation 034842 (Call (Floc 022042) [Con 63,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 034842;
  SetLocal 1 63;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022042, #actuals: 2
LocReturn 034842:
  PushStack call_result;
  TraceOperation 034849 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[184]--------------------------------------------------
LocRoutine 034850:
  MakeRoutineFrame 0;
  Jump: 034851
LocOp 034851:
  TraceOperation 034851 (Call (Floc 036246) [] Sp);
  PushFrame 034851;
  JumpCall: 036246, #actuals: 0
LocReturn 034851:
  PushStack call_result;
  TraceOperation 034856 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[185]--------------------------------------------------
LocRoutine 034858:
  MakeRoutineFrame 0;
  Jump: 034859
LocOp 034859:
  TraceOperation 034859 (Print "You can't make");
  GamePrint "You can't make";
  TraceOperation 034866 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 034866;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 034866:
  PushStack call_result;
  TraceOperation 034872 (Print_ret "!");
  GamePrint "!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[186]--------------------------------------------------
LocRoutine 034876:
  MakeRoutineFrame 0;
  Jump: 034877
LocOp 034877:
  TraceOperation 034877 (Call (Floc 043468) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 034877;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043468, #actuals: 1
LocReturn 034877:
  PushStack call_result;
  TraceOperation 034883 (Jz (Var Sp) (Branch T (Dloc 034901)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 034901
  } else {
    TraceOperation 034886 (Print_ret "Why juggle objects?");
    GamePrint "Why juggle objects?\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 034901:
  TraceOperation 034901 (Je [Var (Global 201),Var (Global 116)] (Branch F (Dloc 034932)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008140];
  Let b4 = M[008141];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 034905 (Store (Con 132) (Con 0));
    SetByte 008140 0;
    SetByte 008141 0;
    TraceOperation 034908 (Print "Okay, it's no longer in front of the ");
    GamePrint "Okay, it's no longer in front of the ";
    TraceOperation 034927 (Print_obj (Con 112));
    Let b5 = M[001766];
    Let b6 = M[001767];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 034929 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 034929 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    Jump: 034932
  }
LocOp 034932:
  TraceOperation 034932 (Test_attr (Var (Global 201)) (Con 22) (Branch F (Dloc 034942)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,1)) {
    TraceOperation 034936 (Call (Floc 057842) [] Sp);
    PushFrame 034936;
    JumpCall: 057842, #actuals: 0
  } else {
    Jump: 034942
  }
LocReturn 034936:
  PushStack call_result;
  TraceOperation 034941 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 034942:
  TraceOperation 034942 (Call (Floc 043578) [] Sp);
  PushFrame 034942;
  JumpCall: 043578, #actuals: 0
LocReturn 034942:
  PushStack call_result;
  TraceOperation 034947 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 034950 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 034981)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),3)];
    if (TestBit(b4,6)) {
      TraceOperation 034954 (Print "Moving");
      GamePrint "Moving";
      TraceOperation 034961 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame 034961;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    } else {
      Jump: 034981
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocReturn 034961:
  PushStack call_result;
  TraceOperation 034968 (Print_ret " reveals nothing.");
  GamePrint " reveals nothing.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 034981:
  TraceOperation 034981 (Je [Var (Global 201),Con 49] (Branch F (Dloc 035006)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 034985 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 035006)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 034989 (Call (Floc 043298) [Con 206] Sp);
      PushFrame 034989;
      SetLocal 1 206;
      JumpCall: 043298, #actuals: 1
    } else {
      Jump: 035006
    }
  } else {
    Jump: 035006
  }
LocReturn 034989:
  PushStack call_result;
  TraceOperation 034995 (Jz (Var Sp) (Branch T (Dloc 035006)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035006
  } else {
    TraceOperation 034998 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame 034998;
    SetLocal 1 145;
    SetLocal 2 205;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 034998:
  PushStack call_result;
  TraceOperation 035005 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035006:
  TraceOperation 035006 (Print "You can't move");
  GamePrint "You can't move";
  TraceOperation 035013 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 035013;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 035013:
  PushStack call_result;
  TraceOperation 035020 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[187]--------------------------------------------------
LocRoutine 035024:
  MakeRoutineFrame 0;
  Jump: 035025
LocOp 035025:
  TraceOperation 035025 (Call (Floc 043716) [Con -11694] Sp);
  PushFrame 035025;
  SetLocal 1 -11694;
  JumpCall: 043716, #actuals: 1
LocReturn 035025:
  PushStack call_result;
  TraceOperation 035032 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[188]--------------------------------------------------
LocRoutine 035034:
  MakeRoutineFrame 0;
  Jump: 035035
LocOp 035035:
  TraceOperation 035035 (Je [Var (Global 201),Con 94] (Branch F (Dloc 035045)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),94)) {
    TraceOperation 035039 (Call (Floc 033954) [] Sp);
    PushFrame 035039;
    JumpCall: 033954, #actuals: 0
  } else {
    Jump: 035045
  }
LocReturn 035039:
  PushStack call_result;
  TraceOperation 035044 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035045:
  TraceOperation 035045 (Call (Floc 039060) [] Sp);
  PushFrame 035045;
  JumpCall: 039060, #actuals: 0
LocReturn 035045:
  PushStack call_result;
  TraceOperation 035050 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[189]--------------------------------------------------
LocRoutine 035052:
  MakeRoutineFrame 0;
  Jump: 035053
LocOp 035053:
  TraceOperation 035053 (Je [Var (Global 213),Con 1] (Branch T Dfalse));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),1)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 035057 (Je [Var (Global 213),Con 2] (Branch F (Dloc 035068)));
    Let b4 = M[008334];
    Let b5 = M[008335];
    if (Equal(MakeHiLo(b4,b5),2)) {
      TraceOperation 035061 (Call (Floc 043620) [Con 16] Sp);
      PushFrame 035061;
      SetLocal 1 16;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 035068
    }
  }
LocReturn 035061:
  PushStack call_result;
  TraceOperation 035067 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035068:
  TraceOperation 035068 (Je [Var (Global 213),Con 3,Con 10] (Branch F (Dloc 035087)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),3),Equal(MakeHiLo(b1,b2),10))) {
    TraceOperation 035074 (Print_ret "I should think not.");
    GamePrint "I should think not.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 035087
  }
LocOp 035087:
  TraceOperation 035087 (Je [Var (Global 213),Con 4] (Branch F (Dloc 035124)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 035091 (Print_ret "The word \"no\" is not in our hostess' vocabulary.");
    GamePrint "The word \"no\" is not in our hostess' vocabulary.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 035124
  }
LocOp 035124:
  TraceOperation 035124 (Je [Var (Global 213),Con 5] (Branch F (Dloc 035137)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 035128 (Store (Con 229) (Con 3));
    SetByte 008334 0;
    SetByte 008335 3;
    TraceOperation 035131 (Call (Floc 040748) [] Sp);
    PushFrame 035131;
    JumpCall: 040748, #actuals: 0
  } else {
    Jump: 035137
  }
LocReturn 035131:
  PushStack call_result;
  TraceOperation 035136 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035137:
  TraceOperation 035137 (Je [Var (Global 213),Con 6,Con 11] (Branch F (Dloc 035152)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),6),Equal(MakeHiLo(b1,b2),11))) {
    TraceOperation 035143 (Store (Con 229) (Con 6));
    SetByte 008334 0;
    SetByte 008335 6;
    TraceOperation 035146 (Call (Floc 040748) [] Sp);
    PushFrame 035146;
    JumpCall: 040748, #actuals: 0
  } else {
    Jump: 035152
  }
LocReturn 035146:
  PushStack call_result;
  TraceOperation 035151 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035152:
  TraceOperation 035152 (Je [Var (Global 213),Con 7,Con 8] (Branch T (Dloc 035164)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),7),Equal(MakeHiLo(b1,b2),8))) {
    Jump: 035164
  } else {
    TraceOperation 035158 (Je [Var (Global 213),Con 13,Con 15] (Branch F (Dloc 035173)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (LogOr(Equal(MakeHiLo(b3,b4),13),Equal(MakeHiLo(b3,b4),15))) {
      Jump: 035164
    } else {
      Jump: 035173
    }
  }
LocOp 035164:
  TraceOperation 035164 (Store (Con 229) (Con 3));
  SetByte 008334 0;
  SetByte 008335 3;
  TraceOperation 035167 (Call (Floc 040748) [] Sp);
  PushFrame 035167;
  JumpCall: 040748, #actuals: 0
LocReturn 035167:
  PushStack call_result;
  TraceOperation 035172 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035173:
  TraceOperation 035173 (Je [Var (Global 213),Con 9] (Branch F (Dloc 035186)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 035177 (Print_ret "I disagree.");
    GamePrint "I disagree.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 035186
  }
LocOp 035186:
  TraceOperation 035186 (Je [Var (Global 213),Con 12] (Branch F (Dloc 035256)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 035191 (Call (Floc 052048) [] Sp);
    PushFrame 035191;
    JumpCall: 052048, #actuals: 0
  } else {
    Jump: 035256
  }
LocReturn 035191:
  PushStack call_result;
  TraceOperation 035196 (Print "\"Think you're funny, huh?\" The ");
  GamePrint "\"Think you're funny, huh?\" The ";
  TraceOperation 035217 (Print_obj (Con 3));
  Let b1 = M[000785];
  Let b2 = M[000786];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 035219 (Print_paddr (Var (Global 59)));
    Let b4 = M[008026];
    Let b5 = M[008027];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 035221 (Print_ret ", making sure to spray you with his Sub-Ethon exhaust.");
    GamePrint ", making sure to spray you with his Sub-Ethon exhaust.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 035219 (Print_paddr (Var (Global 59)));
    Let b7 = M[008026];
    Let b8 = M[008027];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 035221 (Print_ret ", making sure to spray you with his Sub-Ethon exhaust.");
    GamePrint ", making sure to spray you with his Sub-Ethon exhaust.\n";
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  }
LocOp 035256:
  TraceOperation 035256 (Je [Var (Global 213),Con 14] (Branch F (Dloc 035269)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 035260 (Print_ret "Then stop.");
    GamePrint "Then stop.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 035269
  }
LocOp 035269:
  TraceOperation 035269 (Je [Var (Global 213),Con 16] (Branch F (Dloc 035286)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 035273 (Print_ret "I didn't think so.");
    GamePrint "I didn't think so.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 035286
  }
LocOp 035286:
  TraceOperation 035286 (Je [Var (Global 213),Con 18,Con 19] (Branch F (Dloc 035298)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),18),Equal(MakeHiLo(b1,b2),19))) {
    TraceOperation 035292 (Call (Floc 040748) [] Sp);
    PushFrame 035292;
    JumpCall: 040748, #actuals: 0
  } else {
    Jump: 035298
  }
LocReturn 035292:
  PushStack call_result;
  TraceOperation 035297 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035298:
  TraceOperation 035298 (Print_ret "You sound rather negative.");
  GamePrint "You sound rather negative.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[190]--------------------------------------------------
LocRoutine 035318:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 035323
LocOp 035323:
  TraceOperation 035323 (Test_attr (Var (Global 201)) (Con 8) (Branch F (Dloc 035333)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,7)) {
    TraceOperation 035327 (Call (Floc 031360) [] Sp);
    PushFrame 035327;
    JumpCall: 031360, #actuals: 0
  } else {
    Jump: 035333
  }
LocReturn 035327:
  PushStack call_result;
  TraceOperation 035332 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035333:
  TraceOperation 035333 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 035347)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 035337 (Je [Var (Global 201),Con 209] (Branch T (Dloc 035347)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (Equal(MakeHiLo(b4,b5),209)) {
      Jump: 035347
    } else {
      TraceOperation 035341 (Call (Floc 031360) [] Sp);
      PushFrame 035341;
      JumpCall: 031360, #actuals: 0
    }
  } else {
    Jump: 035347
  }
LocReturn 035341:
  PushStack call_result;
  TraceOperation 035346 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 035347:
  TraceOperation 035347 (Test_attr (Var (Global 201)) (Con 24) (Branch F (Dloc 035411)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,7)) {
    TraceOperation 035352 (Test_attr (Var (Global 201)) (Con 23) (Branch F (Dloc 035360)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,0)) {
      TraceOperation 035356 (Print_paddr (Var (Global 53)));
      Let b7 = M[008014];
      Let b8 = M[008015];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
      TraceOperation 035358 New_line;
      GamePrint "\n";
      TraceOperation 035359 Rtrue;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Jump: 035360
    }
  } else {
    Jump: 035411
  }
LocOp 035360:
  TraceOperation 035360 (Set_attr (Var (Global 201)) (Con 23));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2) SetBit(b3,0);
  TraceOperation 035363 (Set_attr (Var (Global 201)) (Con 5));
  Let b4 = M[008310];
  Let b5 = M[008311];
  Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),0)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),0) SetBit(b6,2);
  TraceOperation 035366 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 035374)));
  Let b7 = M[008310];
  Let b8 = M[008311];
  Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
  PushStack Widen(b9);
  if (IsZero(Widen(b9))) {
    TraceOperation 035374 (Print_ret "Opened.");
    GamePrint "Opened.\n";
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 1
  } else {
    TraceOperation 035370 (Test_attr (Var (Global 201)) (Con 17) (Branch F (Dloc 035381)));
    Let b11 = M[008310];
    Let b12 = M[008311];
    Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),2)];
    if (TestBit(b13,6)) {
      TraceOperation 035374 (Print_ret "Opened.");
      GamePrint "Opened.\n";
      PopFrame return_address_14;
      JumpReturn: return_address_14, result: 1
    } else {
      Jump: 035381
    }
  }
LocOp 035381:
  TraceOperation 035381 (Print "Opening");
  GamePrint "Opening";
  TraceOperation 035388 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 035388;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 035388:
  PushStack call_result;
  TraceOperation 035395 (Print " reveals");
  GamePrint " reveals";
  TraceOperation 035402 (Call (Floc 042360) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 035402;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 042360, #actuals: 1
LocReturn 035402:
  PushStack call_result;
  TraceOperation 035408 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035411:
  TraceOperation 035411 (Test_attr (Var (Global 201)) (Con 28) (Branch F (Dloc 035453)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    TraceOperation 035415 (Test_attr (Var (Global 201)) (Con 23) (Branch F (Dloc 035423)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,0)) {
      TraceOperation 035419 (Print_paddr (Var (Global 53)));
      Let b7 = M[008014];
      Let b8 = M[008015];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
      TraceOperation 035421 New_line;
      GamePrint "\n";
      TraceOperation 035422 Rtrue;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Jump: 035423
    }
  } else {
    Jump: 035453
  }
LocOp 035423:
  TraceOperation 035423 (Print "Okay,");
  GamePrint "Okay,";
  TraceOperation 035430 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 035430;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 035430:
  PushStack call_result;
  TraceOperation 035437 (Print " is now open.");
  GamePrint " is now open.";
  TraceOperation 035448 New_line;
  GamePrint "\n";
  TraceOperation 035449 (Set_attr (Var (Global 201)) (Con 23));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2) SetBit(b3,0);
  TraceOperation 035452 Rtrue;
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: 1
LocOp 035453:
  TraceOperation 035453 (Call (Floc 057650) [] Sp);
  PushFrame 035453;
  JumpCall: 057650, #actuals: 0
LocReturn 035453:
  PushStack call_result;
  TraceOperation 035458 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[191]--------------------------------------------------
LocRoutine 035460:
  MakeRoutineFrame 0;
  Jump: 035461
LocOp 035461:
  TraceOperation 035461 (Print_ret "Not surprised.");
  GamePrint "Not surprised.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[192]--------------------------------------------------
LocRoutine 035474:
  MakeRoutineFrame 0;
  Jump: 035475
LocOp 035475:
  TraceOperation 035475 (Call (Floc 031360) [] Sp);
  PushFrame 035475;
  JumpCall: 031360, #actuals: 0
LocReturn 035475:
  PushStack call_result;
  TraceOperation 035480 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[193]--------------------------------------------------
LocRoutine 035482:
  MakeRoutineFrame 0;
  Jump: 035483
LocOp 035483:
  TraceOperation 035483 (Call (Floc 022042) [Con 124,Var (Global 201),Var (Global 202)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008312];
  Let b4 = M[008313];
  PushFrame 035483;
  SetLocal 1 124;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  JumpCall: 022042, #actuals: 3
LocReturn 035483:
  PushStack call_result;
  TraceOperation 035491 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[194]--------------------------------------------------
LocRoutine 035492:
  MakeRoutineFrame 0;
  Jump: 035493
LocOp 035493:
  TraceOperation 035493 (Je [Var (Global 202),Con 214] (Branch F (Dloc 035506)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),214)) {
    TraceOperation 035497 (Call (Floc 022042) [Con 46,Var (Global 201),Var (Global 202)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[008312];
    Let b6 = M[008313];
    PushFrame 035497;
    SetLocal 1 46;
    SetLocal 2 MakeHiLo(b3,b4);
    SetLocal 3 MakeHiLo(b5,b6);
    JumpCall: 022042, #actuals: 3
  } else {
    Jump: 035506
  }
LocReturn 035497:
  PushStack call_result;
  TraceOperation 035505 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035506:
  TraceOperation 035506 (Print "You can't plant something in");
  GamePrint "You can't plant something in";
  TraceOperation 035517 (Call (Floc 043738) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 035517;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 035517:
  PushStack call_result;
  TraceOperation 035523 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[195]--------------------------------------------------
LocRoutine 035526:
  MakeRoutineFrame 0;
  Jump: 035527
LocOp 035527:
  TraceOperation 035527 (Print "You can't seem to plug");
  GamePrint "You can't seem to plug";
  TraceOperation 035538 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 035538;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 035538:
  PushStack call_result;
  TraceOperation 035545 (Print " into");
  GamePrint " into";
  TraceOperation 035550 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 035550;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 035550:
  PushStack call_result;
  TraceOperation 035557 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[196]--------------------------------------------------
LocRoutine 035560:
  MakeRoutineFrame 0;
  Jump: 035561
LocOp 035561:
  TraceOperation 035561 (Je [Var (Global 0),Con 66] (Branch F (Dloc 035574)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 035565 (Call (Floc 022042) [Con 111,Con 64,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 035565;
    SetLocal 1 111;
    SetLocal 2 64;
    SetLocal 3 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 3
  } else {
    Jump: 035574
  }
LocReturn 035565:
  PushStack call_result;
  TraceOperation 035573 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035574:
  TraceOperation 035574 (Call (Floc 038194) [] Sp);
  PushFrame 035574;
  JumpCall: 038194, #actuals: 0
LocReturn 035574:
  PushStack call_result;
  TraceOperation 035579 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[197]--------------------------------------------------
LocRoutine 035580:
  MakeRoutineFrame 0;
  Jump: 035581
LocOp 035581:
  TraceOperation 035581 (Call (Floc 030950) [] Sp);
  PushFrame 035581;
  JumpCall: 030950, #actuals: 0
LocReturn 035581:
  PushStack call_result;
  TraceOperation 035586 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[198]--------------------------------------------------
LocRoutine 035588:
  MakeRoutineFrame 0;
  Jump: 035589
LocOp 035589:
  TraceOperation 035589 (Je [Var (Global 0),Con 149] (Branch F (Dloc 035647)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),149)) {
    TraceOperation 035593 (Call (Floc 020662) [Con 30621] Sp);
    PushFrame 035593;
    SetLocal 1 30621;
    JumpCall: 020662, #actuals: 1
  } else {
    Jump: 035647
  }
LocReturn 035593:
  PushStack call_result;
  TraceOperation 035600 (Jz (Var Sp) (Branch T (Dloc 035647)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035647
  } else {
    TraceOperation 035603 (Print "Prosser says \"I wouldn't stop the ");
    GamePrint "Prosser says \"I wouldn't stop the ";
    TraceOperation 035622 (Print_obj (Con 166));
    Let b2 = M[002252];
    Let b3 = M[002253];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 035624 (Print_ret " even if you were lying in front of it!\"");
      GamePrint " even if you were lying in front of it!\"\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 035624 (Print_ret " even if you were lying in front of it!\"");
      GamePrint " even if you were lying in front of it!\"\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  }
LocOp 035647:
  TraceOperation 035647 (Print_ret "To whom? About what? Why?");
  GamePrint "To whom? About what? Why?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[199]--------------------------------------------------
LocRoutine 035668:
  MakeRoutineFrame 0;
  Jump: 035669
LocOp 035669:
  TraceOperation 035669 (Call (Floc 039060) [] Sp);
  PushFrame 035669;
  JumpCall: 039060, #actuals: 0
LocReturn 035669:
  PushStack call_result;
  TraceOperation 035674 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[200]--------------------------------------------------
LocRoutine 035676:
  MakeRoutineFrame 0;
  Jump: 035677
LocOp 035677:
  TraceOperation 035677 (Je [Var (Global 201),Con 49] (Branch F (Dloc 035702)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 035681 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 035702)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 035685 (Call (Floc 043298) [Con 206] Sp);
      PushFrame 035685;
      SetLocal 1 206;
      JumpCall: 043298, #actuals: 1
    } else {
      Jump: 035702
    }
  } else {
    Jump: 035702
  }
LocReturn 035685:
  PushStack call_result;
  TraceOperation 035691 (Jz (Var Sp) (Branch T (Dloc 035702)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035702
  } else {
    TraceOperation 035694 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame 035694;
    SetLocal 1 145;
    SetLocal 2 205;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 035694:
  PushStack call_result;
  TraceOperation 035701 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035702:
  TraceOperation 035702 (Call (Floc 043716) [Con -11689] Sp);
  PushFrame 035702;
  SetLocal 1 -11689;
  JumpCall: 043716, #actuals: 1
LocReturn 035702:
  PushStack call_result;
  TraceOperation 035709 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[201]--------------------------------------------------
LocRoutine 035710:
  MakeRoutineFrame 0;
  Jump: 035711
LocOp 035711:
  TraceOperation 035711 (Je [Var (Global 202),Con 42] (Branch F (Dloc 035723)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),42)) {
    TraceOperation 035715 (Call (Floc 022042) [Con 53,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 035715;
    SetLocal 1 53;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 035723
  }
LocReturn 035715:
  PushStack call_result;
  TraceOperation 035722 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035723:
  TraceOperation 035723 (Call (Floc 043468) [Var (Global 202),Var (Global 201)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 035723;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  JumpCall: 043468, #actuals: 2
LocReturn 035723:
  PushStack call_result;
  TraceOperation 035730 (Jz (Var Sp) (Branch T (Dloc 035786)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035786
  } else {
    TraceOperation 035733 (Print "You can't put");
    GamePrint "You can't put";
    TraceOperation 035740 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b2 = M[008310];
    Let b3 = M[008311];
    PushFrame 035740;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  }
LocReturn 035740:
  PushStack call_result;
  TraceOperation 035747 (Print " in");
  GamePrint " in";
  TraceOperation 035750 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 035750;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 035750:
  PushStack call_result;
  TraceOperation 035757 (Print " when");
  GamePrint " when";
  TraceOperation 035762 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 035762;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 035762:
  PushStack call_result;
  TraceOperation 035769 (Print " is already in");
  GamePrint " is already in";
  TraceOperation 035776 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 035776;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 035776:
  PushStack call_result;
  TraceOperation 035783 (Print_ret "!");
  GamePrint "!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035786:
  TraceOperation 035786 (Call (Floc 041208) [] Sp);
  PushFrame 035786;
  JumpCall: 041208, #actuals: 0
LocReturn 035786:
  PushStack call_result;
  TraceOperation 035791 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 035794 (Jz (Var (Global 204)) (Branch T (Dloc 035806)));
    Let b2 = M[008316];
    Let b3 = M[008317];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 035806
    } else {
      TraceOperation 035797 (Call (Floc 022042) [Con 54,Var (Global 201),Var (Global 202)] Sp);
      Let b4 = M[008310];
      Let b5 = M[008311];
      Let b6 = M[008312];
      Let b7 = M[008313];
      PushFrame 035797;
      SetLocal 1 54;
      SetLocal 2 MakeHiLo(b4,b5);
      SetLocal 3 MakeHiLo(b6,b7);
      JumpCall: 022042, #actuals: 3
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  }
LocReturn 035797:
  PushStack call_result;
  TraceOperation 035805 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035806:
  TraceOperation 035806 (Je [Var (Global 201),Con 9] (Branch F (Dloc 035819)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 035810 (Call (Floc 022042) [Con 112,Con 9,Var (Global 202)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame 035810;
    SetLocal 1 112;
    SetLocal 2 9;
    SetLocal 3 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 3
  } else {
    Jump: 035819
  }
LocReturn 035810:
  PushStack call_result;
  TraceOperation 035818 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035819:
  TraceOperation 035819 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 035832)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008324];
  Let b4 = M[008325];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 035823 (Store (Con 224) (Con 0));
    SetByte 008324 0;
    SetByte 008325 0;
    TraceOperation 035826 (Call (Floc 057820) [] Sp);
    PushFrame 035826;
    JumpCall: 057820, #actuals: 0
  } else {
    Jump: 035832
  }
LocReturn 035826:
  PushStack call_result;
  TraceOperation 035831 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 035832:
  TraceOperation 035832 (Je [Var (Global 201),Con 182] (Branch F (Dloc 035848)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),182)) {
    TraceOperation 035836 (Jz (Var (Global 208)) (Branch T (Dloc 035848)));
    Let b3 = M[008324];
    Let b4 = M[008325];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 035848
    } else {
      TraceOperation 035839 (Store (Con 224) (Con 0));
      SetByte 008324 0;
      SetByte 008325 0;
      TraceOperation 035842 (Call (Floc 057820) [] Sp);
      PushFrame 035842;
      JumpCall: 057820, #actuals: 0
    }
  } else {
    Jump: 035848
  }
LocReturn 035842:
  PushStack call_result;
  TraceOperation 035847 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 035848:
  TraceOperation 035848 (Je [Var (Global 201),Con 182] (Branch F (Dloc 035855)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),182)) {
    TraceOperation 035852 (Jz (Var (Global 209)) (Branch F (Dloc 035869)));
    Let b3 = M[008326];
    Let b4 = M[008327];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 035855
    } else {
      Jump: 035869
    }
  } else {
    Jump: 035855
  }
LocOp 035855:
  TraceOperation 035855 (Je [Var (Global 201),Con 186] (Branch F (Dloc 035862)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),186)) {
    TraceOperation 035859 (Jz (Var (Global 209)) (Branch F (Dloc 035869)));
    Let b3 = M[008326];
    Let b4 = M[008327];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 035862
    } else {
      Jump: 035869
    }
  } else {
    Jump: 035862
  }
LocOp 035862:
  TraceOperation 035862 (Je [Var (Global 201),Con 186] (Branch F Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),186)) {
    TraceOperation 035866 (Jz (Var (Global 210)) (Branch T Dfalse));
    Let b3 = M[008328];
    Let b4 = M[008329];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 035869
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 035869:
  TraceOperation 035869 (Print_ret "You'll have to unplug it first.");
  GamePrint "You'll have to unplug it first.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[202]--------------------------------------------------
LocRoutine 035890:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 035893
LocOp 035893:
  TraceOperation 035893 (Test_attr (Var (Global 202)) (Con 23) (Branch T (Dloc 035939)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    Jump: 035939
  } else {
    TraceOperation 035897 (Test_attr (Var (Global 202)) (Con 28) (Branch T (Dloc 035939)));
    Let b4 = M[008312];
    Let b5 = M[008313];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,3)) {
      Jump: 035939
    } else {
      TraceOperation 035901 (Test_attr (Var (Global 202)) (Con 24) (Branch T (Dloc 035939)));
      Let b7 = M[008312];
      Let b8 = M[008313];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),3)];
      if (TestBit(b9,7)) {
        Jump: 035939
      } else {
        TraceOperation 035905 (Test_attr (Var (Global 202)) (Con 8) (Branch T (Dloc 035939)));
        Let b10 = M[008312];
        Let b11 = M[008313];
        Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),1)];
        if (TestBit(b12,7)) {
          Jump: 035939
        } else {
          TraceOperation 035909 (Test_attr (Var (Global 202)) (Con 12) (Branch T (Dloc 035939)));
          Let b13 = M[008312];
          Let b14 = M[008313];
          Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),1)];
          if (TestBit(b15,3)) {
            Jump: 035939
          } else {
            TraceOperation 035913 (Print "You can't put");
            GamePrint "You can't put";
            TraceOperation 035920 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
            Let b16 = M[008310];
            Let b17 = M[008311];
            PushFrame 035920;
            SetLocal 1 MakeHiLo(b16,b17);
            SetLocal 2 1;
            JumpCall: 043738, #actuals: 2
          }
        }
      }
    }
  }
LocReturn 035920:
  PushStack call_result;
  TraceOperation 035927 (Print " in");
  GamePrint " in";
  TraceOperation 035930 (Call (Floc 043738) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 035930;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 035930:
  PushStack call_result;
  TraceOperation 035936 (Print_ret "!");
  GamePrint "!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035939:
  TraceOperation 035939 (Je [Var (Global 202),Var (Global 201)] (Branch T (Dloc 035963)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 035963
  } else {
    TraceOperation 035943 (Call (Floc 043468) [Var (Global 201)] Sp);
    Let b5 = M[008310];
    Let b6 = M[008311];
    PushFrame 035943;
    SetLocal 1 MakeHiLo(b5,b6);
    JumpCall: 043468, #actuals: 1
  }
LocReturn 035943:
  PushStack call_result;
  TraceOperation 035949 (Jz (Var Sp) (Branch T (Dloc 035956)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035956
  } else {
    TraceOperation 035952 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 035963)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),3)];
    if (TestBit(b4,6)) {
      Jump: 035956
    } else {
      Jump: 035963
    }
  }
LocOp 035956:
  TraceOperation 035956 (Je [Var (Global 202),Con 182,Con 7,Con 186] (Branch F (Dloc 035976)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),182),Equal(MakeHiLo(b1,b2),7)),Equal(MakeHiLo(b1,b2),186))) {
    Jump: 035963
  } else {
    Jump: 035976
  }
LocOp 035963:
  TraceOperation 035963 (Print_ret "How can you do that?");
  GamePrint "How can you do that?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 035976:
  TraceOperation 035976 (Test_attr (Var (Global 202)) (Con 23) (Branch T (Dloc 036021)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    Jump: 036021
  } else {
    TraceOperation 035980 (Test_attr (Var (Global 202)) (Con 8) (Branch T (Dloc 036021)));
    Let b4 = M[008312];
    Let b5 = M[008313];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),1)];
    if (TestBit(b6,7)) {
      Jump: 036021
    } else {
      TraceOperation 035984 (Print "Inspection reveals that");
      GamePrint "Inspection reveals that";
      TraceOperation 036001 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame 036001;
      SetLocal 1 MakeHiLo(b7,b8);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    }
  }
LocReturn 036001:
  PushStack call_result;
  TraceOperation 036008 (Print " isn't open.");
  GamePrint " isn't open.";
  TraceOperation 036015 New_line;
  GamePrint "\n";
  TraceOperation 036016 (Store (Con 207) (Var (Global 202)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  SetByte 008290 b1;
  SetByte 008291 b2;
  TraceOperation 036019 (Ret (Var (Global 191)));
  Let b3 = M[008290];
  Let b4 = M[008291];
  PopFrame return_address_5;
  JumpReturn: return_address_5, result: MakeHiLo(b3,b4)
LocOp 036021:
  TraceOperation 036021 (Jin (Var (Global 201)) (Var (Global 202)) (Branch F (Dloc 036056)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008312];
  Let b4 = M[008313];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 036025 (Print "I think");
    GamePrint "I think";
    TraceOperation 036032 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b6 = M[008310];
    Let b7 = M[008311];
    PushFrame 036032;
    SetLocal 1 MakeHiLo(b6,b7);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 036056
  }
LocReturn 036032:
  PushStack call_result;
  TraceOperation 036039 (Print " is already in");
  GamePrint " is already in";
  TraceOperation 036046 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 036046;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 036046:
  PushStack call_result;
  TraceOperation 036053 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[203]--------------------------------------------------
LocRoutine 036094:
  MakeRoutineFrame 0;
  Jump: 036095
LocOp 036095:
  TraceOperation 036095 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[204]--------------------------------------------------
LocRoutine 036110:
  MakeRoutineFrame 0;
  Jump: 036111
LocOp 036111:
  TraceOperation 036111 (Jz (Var Sp) (Branch F (Dloc 036125)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 036114 (Call (Floc 040994) [] Sp);
    PushFrame 036114;
    JumpCall: 040994, #actuals: 0
  } else {
    Jump: 036125
  }
LocReturn 036114:
  PushStack call_result;
  TraceOperation 036119 (Je [Var Sp,Con 2,Con 0] (Branch T Dtrue));
  PopStack popped1;
  if (LogOr(Equal(popped1,2),Equal(popped1,0))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    Jump: 036125
  }
LocOp 036125:
  TraceOperation 036125 (Insert_obj (Var (Global 201)) (Var (Global 202)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008312];
  Let b4 = M[008313];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 036128 (Set_attr (Var (Global 201)) (Con 5));
    Let b7 = M[008310];
    Let b8 = M[008311];
    Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),0)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),0) SetBit(b9,2);
    TraceOperation 036131 (Print_ret "Done.");
    GamePrint "Done.\n";
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 1
  } else {
    Let b11 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b11),MakeHiLo(b1,b2))) {
      Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b12));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b13));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 036128 (Set_attr (Var (Global 201)) (Con 5));
      Let b14 = M[008310];
      Let b15 = M[008311];
      Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),0)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),0) SetBit(b16,2);
      TraceOperation 036131 (Print_ret "Done.");
      GamePrint "Done.\n";
      PopFrame return_address_17;
      JumpReturn: return_address_17, result: 1
    } else {
      Error: unlink/loop
    }
  }
--[205]--------------------------------------------------
LocRoutine 036138:
  MakeRoutineFrame 0;
  Jump: 036139
LocOp 036139:
  TraceOperation 036139 (Call (Floc 031422) [] Sp);
  PushFrame 036139;
  JumpCall: 031422, #actuals: 0
LocReturn 036139:
  PushStack call_result;
  TraceOperation 036144 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[206]--------------------------------------------------
LocRoutine 036146:
  MakeRoutineFrame 0;
  Jump: 036147
LocOp 036147:
  TraceOperation 036147 (Call (Floc 031422) [] Sp);
  PushFrame 036147;
  JumpCall: 031422, #actuals: 0
LocReturn 036147:
  PushStack call_result;
  TraceOperation 036152 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[207]--------------------------------------------------
LocRoutine 036154:
  MakeRoutineFrame 0;
  Jump: 036155
LocOp 036155:
  TraceOperation 036155 (Je [Var (Global 202),Con 30] (Branch F (Dloc 036167)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 036159 (Call (Floc 022042) [Con 116,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 036159;
    SetLocal 1 116;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 036167
  }
LocReturn 036159:
  PushStack call_result;
  TraceOperation 036166 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 036167:
  TraceOperation 036167 (Test_attr (Var (Global 202)) (Con 8) (Branch F (Dloc 036177)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,7)) {
    TraceOperation 036171 (Call (Floc 035890) [] Sp);
    PushFrame 036171;
    JumpCall: 035890, #actuals: 0
  } else {
    Jump: 036177
  }
LocReturn 036171:
  PushStack call_result;
  TraceOperation 036176 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 036177:
  TraceOperation 036177 (Je [Var (Global 202),Con 33,Con 34] (Branch F (Dloc 036204)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),33),Equal(MakeHiLo(b1,b2),34))) {
    TraceOperation 036183 (Print "You can't cover");
    GamePrint "You can't cover";
    TraceOperation 036190 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame 036190;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 036204
  }
LocReturn 036190:
  PushStack call_result;
  TraceOperation 036197 (Print_ret " with that.");
  GamePrint " with that.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 036204:
  TraceOperation 036204 (Print "There's no good surface on");
  GamePrint "There's no good surface on";
  TraceOperation 036219 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 036219;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 036219:
  PushStack call_result;
  TraceOperation 036226 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[208]--------------------------------------------------
LocRoutine 036230:
  MakeRoutineFrame 0;
  Jump: 036231
LocOp 036231:
  TraceOperation 036231 (Call (Floc 031422) [] Sp);
  PushFrame 036231;
  JumpCall: 031422, #actuals: 0
LocReturn 036231:
  PushStack call_result;
  TraceOperation 036236 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[209]--------------------------------------------------
LocRoutine 036238:
  MakeRoutineFrame 0;
  Jump: 036239
LocOp 036239:
  TraceOperation 036239 (Call (Floc 034084) [] Sp);
  PushFrame 036239;
  JumpCall: 034084, #actuals: 0
LocReturn 036239:
  PushStack call_result;
  TraceOperation 036244 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[210]--------------------------------------------------
LocRoutine 036246:
  MakeRoutineFrame 0;
  Jump: 036247
LocOp 036247:
  TraceOperation 036247 (Call (Floc 043716) [Con -11686] Sp);
  PushFrame 036247;
  SetLocal 1 -11686;
  JumpCall: 043716, #actuals: 1
LocReturn 036247:
  PushStack call_result;
  TraceOperation 036254 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[211]--------------------------------------------------
LocRoutine 036256:
  MakeRoutineFrame 0;
  Jump: 036257
LocOp 036257:
  TraceOperation 036257 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 036269)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 036261 (Je [Var (Global 201),Con 139] (Branch T (Dloc 036269)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    if (Equal(MakeHiLo(b2,b3),139)) {
      Jump: 036269
    } else {
      TraceOperation 036265 (Print_paddr (Var (Global 49)));
      Let b4 = M[008006];
      Let b5 = M[008007];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 036267 New_line;
      GamePrint "\n";
      TraceOperation 036268 Rtrue;
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 036269
  }
LocOp 036269:
  TraceOperation 036269 (Jz (Var (Global 85)) (Branch F (Dloc 036280)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 036272 (Je [Var (Global 201),Con 170] (Branch T (Dloc 036280)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),170)) {
      Jump: 036280
    } else {
      TraceOperation 036276 (Print_paddr (Var (Global 56)));
      Let b5 = M[008020];
      Let b6 = M[008021];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 036278 New_line;
      GamePrint "\n";
      TraceOperation 036279 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 036280
  }
LocOp 036280:
  TraceOperation 036280 (Jz (Var (Global 202)) (Branch T Dfalse));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 036283 (Test_attr (Var (Global 202)) (Con 17) (Branch T Dfalse));
    Let b4 = M[008312];
    Let b5 = M[008313];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,6)) {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    } else {
      TraceOperation 036287 (Print "How does one look through");
      GamePrint "How does one look through";
      TraceOperation 036306 (Call (Floc 043738) [Var (Global 202)] Sp);
      Let b8 = M[008312];
      Let b9 = M[008313];
      PushFrame 036306;
      SetLocal 1 MakeHiLo(b8,b9);
      JumpCall: 043738, #actuals: 1
    }
  }
LocReturn 036306:
  PushStack call_result;
  TraceOperation 036312 (Print_ret "?");
  GamePrint "?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[212]--------------------------------------------------
LocRoutine 036316:
  MakeRoutineFrame 0;
  Jump: 036317
LocOp 036317:
  TraceOperation 036317 (Test_attr (Var (Global 201)) (Con 13) (Branch F (Dloc 036329)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,2)) {
    TraceOperation 036321 (Get_prop (Var (Global 201)) (Con 13) Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Error: getPropsA
  } else {
    Jump: 036329
  }
LocOp 036329:
  TraceOperation 036329 (Print "How can you read");
  GamePrint "How can you read";
  TraceOperation 036340 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 036340;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 036340:
  PushStack call_result;
  TraceOperation 036346 (Print_ret "?");
  GamePrint "?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[213]--------------------------------------------------
LocRoutine 036350:
  MakeRoutineFrame 0;
  Jump: 036351
LocOp 036351:
  TraceOperation 036351 (Store (Con 219) (Con 124));
  SetByte 008314 0;
  SetByte 008315 124;
  TraceOperation 036354 (Call (Floc 046754) [] Sp);
  PushFrame 036354;
  JumpCall: 046754, #actuals: 0
LocReturn 036354:
  PushStack call_result;
  TraceOperation 036359 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[214]--------------------------------------------------
LocRoutine 036360:
  MakeRoutineFrame 0;
  Jump: 036361
LocOp 036361:
  TraceOperation 036361 (Print_paddr (Var (Global 48)));
  Let b1 = M[008004];
  Let b2 = M[008005];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 036363 New_line;
  GamePrint "\n";
  TraceOperation 036364 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[215]--------------------------------------------------
LocRoutine 036366:
  MakeRoutineFrame 0;
  Jump: 036367
LocOp 036367:
  TraceOperation 036367 (Test_attr (Var (Global 201)) (Con 10) (Branch F (Dloc 036379)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,5)) {
    TraceOperation 036371 (Call (Floc 022042) [Con 148,Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 036371;
    SetLocal 1 148;
    SetLocal 2 MakeHiLo(b4,b5);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 036379
  }
LocReturn 036371:
  PushStack call_result;
  TraceOperation 036378 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 036379:
  TraceOperation 036379 (Call (Floc 022042) [Con 124,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 036379;
  SetLocal 1 124;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022042, #actuals: 2
LocReturn 036379:
  PushStack call_result;
  TraceOperation 036386 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[216]--------------------------------------------------
LocRoutine 036388:
  MakeRoutineFrame 0;
  Jump: 036389
LocOp 036389:
  TraceOperation 036389 (Print_ret "It's not in need of replacement.");
  GamePrint "It's not in need of replacement.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[217]--------------------------------------------------
LocRoutine 036408:
  MakeRoutineFrame 0;
  Jump: 036409
LocOp 036409:
  TraceOperation 036409 (Je [Var (Global 201),Con 7] (Branch F (Dloc 036417)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 036413 (Test_attr (Con 7) (Con 3) (Branch T (Dloc 036424)));
    Let b3 = M[000814];
    if (TestBit(b3,4)) {
      Jump: 036424
    } else {
      Jump: 036417
    }
  } else {
    Jump: 036417
  }
LocOp 036417:
  TraceOperation 036417 (Je [Var (Global 201),Con 177] (Branch F (Dloc 036451)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),177)) {
    TraceOperation 036421 (Jz (Var (Global 214)) (Branch T (Dloc 036451)));
    Let b3 = M[008336];
    Let b4 = M[008337];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 036451
    } else {
      Jump: 036424
    }
  } else {
    Jump: 036451
  }
LocOp 036424:
  TraceOperation 036424 (Print_ret "You have neither the tools nor the expertise.");
  GamePrint "You have neither the tools nor the expertise.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 036451:
  TraceOperation 036451 (Print_ret "I'm not sure it's broken.");
  GamePrint "I'm not sure it's broken.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[218]--------------------------------------------------
LocRoutine 036466:
  MakeRoutineFrame 0;
  Jump: 036467
LocOp 036467:
  TraceOperation 036467 (Print "It is hardly likely that");
  GamePrint "It is hardly likely that";
  TraceOperation 036484 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 036484;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 036484:
  PushStack call_result;
  TraceOperation 036491 (Print " is interested.");
  GamePrint " is interested.";
  TraceOperation 036502 New_line;
  GamePrint "\n";
  TraceOperation 036503 (Call (Floc 043634) [] Sp);
  PushFrame 036503;
  JumpCall: 043634, #actuals: 0
LocReturn 036503:
  PushStack call_result;
  TraceOperation 036508 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[219]--------------------------------------------------
LocRoutine 036510:
  MakeRoutineFrame 0;
  Jump: 036511
LocOp 036511:
  TraceOperation 036511 (Call (Floc 043578) [] Sp);
  PushFrame 036511;
  JumpCall: 043578, #actuals: 0
LocReturn 036511:
  PushStack call_result;
  TraceOperation 036516 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 036519 (Call (Floc 043716) [Con -11679] Sp);
    PushFrame 036519;
    SetLocal 1 -11679;
    JumpCall: 043716, #actuals: 1
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocReturn 036519:
  PushStack call_result;
  TraceOperation 036526 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[220]--------------------------------------------------
LocRoutine 036528:
  MakeRoutineFrame 0;
  Jump: 036529
LocOp 036529:
  TraceOperation 036529 (Print "Sorry, but");
  GamePrint "Sorry, but";
  TraceOperation 036538 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 036538;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 036538:
  PushStack call_result;
  TraceOperation 036545 (Print_ret " is beyond help.");
  GamePrint " is beyond help.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[221]--------------------------------------------------
LocRoutine 036558:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 036561
LocOp 036561:
  TraceOperation 036561 (Jz (Var (Global 213)) (Branch T (Dloc 036585)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 036585
  } else {
    TraceOperation 036564 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    Let b5 = M[008292];
    Let b6 = M[008293];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 036568 (Je [Var Sp,Con 20420] (Branch F (Dloc 036585)));
    PopStack popped9;
    if (Equal(popped9,20420)) {
      TraceOperation 036574 (Call (Floc 040748) [] Sp);
      PushFrame 036574;
      JumpCall: 040748, #actuals: 0
    } else {
      Jump: 036585
    }
  }
LocReturn 036574:
  PushStack call_result;
  TraceOperation 036579 (Call (Floc 043634) [] Sp);
  PushFrame 036579;
  JumpCall: 043634, #actuals: 0
LocReturn 036579:
  PushStack call_result;
  TraceOperation 036584 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 036585:
  TraceOperation 036585 (Jz (Var (Global 213)) (Branch T (Dloc 036609)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 036609
  } else {
    TraceOperation 036588 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    Let b5 = M[008292];
    Let b6 = M[008293];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 036592 (Je [Var Sp,Con 17333] (Branch F (Dloc 036609)));
    PopStack popped9;
    if (Equal(popped9,17333)) {
      TraceOperation 036598 (Call (Floc 035052) [] Sp);
      PushFrame 036598;
      JumpCall: 035052, #actuals: 0
    } else {
      Jump: 036609
    }
  }
LocReturn 036598:
  PushStack call_result;
  TraceOperation 036603 (Call (Floc 043634) [] Sp);
  PushFrame 036603;
  JumpCall: 043634, #actuals: 0
LocReturn 036603:
  PushStack call_result;
  TraceOperation 036608 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 036609:
  TraceOperation 036609 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 036628)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 036613 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 036628)));
    Let b4 = M[002003];
    if (TestBit(b4,6)) {
      TraceOperation 036617 (Call (Floc 036802) [] Sp);
      PushFrame 036617;
      JumpCall: 036802, #actuals: 0
    } else {
      Jump: 036628
    }
  } else {
    Jump: 036628
  }
LocReturn 036617:
  PushStack call_result;
  TraceOperation 036622 (Call (Floc 043634) [] Sp);
  PushFrame 036622;
  JumpCall: 043634, #actuals: 0
LocReturn 036622:
  PushStack call_result;
  TraceOperation 036627 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 036628:
  TraceOperation 036628 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 036643)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 036632 (Jz (Var (Global 192)) (Branch F (Dloc 036643)));
    Let b4 = M[008292];
    Let b5 = M[008293];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 036635 (Call (Floc 022042) [Con 15,Con 95] Sp);
      PushFrame 036635;
      SetLocal 1 15;
      SetLocal 2 95;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 036643
    }
  } else {
    Jump: 036643
  }
LocReturn 036635:
  PushStack call_result;
  TraceOperation 036642 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 036643:
  TraceOperation 036643 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 036668)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 036647 (Call (Floc 036742) [] Sp);
    PushFrame 036647;
    JumpCall: 036742, #actuals: 0
  } else {
    Jump: 036668
  }
LocReturn 036647:
  PushStack call_result;
  TraceOperation 036652 (Jz (Var Sp) (Branch T (Dloc 036668)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 036668
  } else {
    TraceOperation 036655 (Call (Floc 022042) [Con 127,Con 92] Sp);
    PushFrame 036655;
    SetLocal 1 127;
    SetLocal 2 92;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 036655:
  PushStack call_result;
  TraceOperation 036662 (Call (Floc 043634) [] Sp);
  PushFrame 036662;
  JumpCall: 043634, #actuals: 0
LocReturn 036662:
  PushStack call_result;
  TraceOperation 036667 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 036668:
  TraceOperation 036668 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 036685)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 036672 (Call (Floc 022042) [Con 127,Con 91] Sp);
    PushFrame 036672;
    SetLocal 1 127;
    SetLocal 2 91;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 036685
  }
LocReturn 036672:
  PushStack call_result;
  TraceOperation 036679 (Call (Floc 043634) [] Sp);
  PushFrame 036679;
  JumpCall: 043634, #actuals: 0
LocReturn 036679:
  PushStack call_result;
  TraceOperation 036684 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[222]--------------------------------------------------
LocRoutine 036710:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 256;
  }
  Jump: 036713
LocOp 036713:
  TraceOperation 036713 (Print " directly.");
  GamePrint " directly.";
  TraceOperation 036722 New_line;
  GamePrint "\n";
  TraceOperation 036723 (Call (Floc 043634) [] Sp);
  PushFrame 036723;
  JumpCall: 043634, #actuals: 0
LocReturn 036723:
  PushStack call_result;
  TraceOperation 036728 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[223]--------------------------------------------------
LocRoutine 036740:
  MakeRoutineFrame 0;
  Jump: 036741
LocOp 036741:
  TraceOperation 036741 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[224]--------------------------------------------------
LocRoutine 036742:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 036749
LocOp 036749:
  TraceOperation 036749 (Store (Con 1) (Var (Global 192)));
  Let b1 = M[008292];
  Let b2 = M[008293];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 036752 (Store (Con 2) (Var (Global 196)));
  Let b3 = M[008300];
  Let b4 = M[008301];
  SetLocal 2 MakeHiLo(b3,b4);
  Jump: 036755
LocOp 036755:
  TraceOperation 036755 (Dec_chk (Con 2) (Con 0) (Branch T Dfalse));
  if (LessThanEqual(GetLocal(2),0)) {
    SetLocal 2 Sub(GetLocal(2),1);
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    SetLocal 2 Sub(GetLocal(2),1);
    TraceOperation 036759 (Loadw (Var (Global 194)) (Var (Local 1)) (Local 3));
    Let b2 = M[008296];
    Let b3 = M[008297];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,GetLocal(1)))];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,GetLocal(1))),1)];
    SetLocal 3 MakeHiLo(b4,b5);
    TraceOperation 036763 (Je [Var (Local 3),Con 17256,Con 17277,Con 16605] (Branch T (Dloc 036795)));
    if (LogOr(LogOr(Equal(GetLocal(3),17256),Equal(GetLocal(3),17277)),Equal(GetLocal(3),16605))) {
      Jump: 036795
    } else {
      TraceOperation 036773 (Je [Var (Local 3),Con 16430,Con 13812,Con 16437] (Branch F (Dloc 036786)));
      if (LogOr(LogOr(Equal(GetLocal(3),16430),Equal(GetLocal(3),13812)),Equal(GetLocal(3),16437))) {
        TraceOperation 036783 (Jump 036795);
        Jump: 036795
      } else {
        Jump: 036786
      }
    }
  }
LocOp 036786:
  TraceOperation 036786 (Je [Var (Local 3),Con 13924,Con 15065] (Branch F Dfalse));
  if (LogOr(Equal(GetLocal(3),13924),Equal(GetLocal(3),15065))) {
    TraceOperation 036794 Rtrue;
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocOp 036795:
  TraceOperation 036795 (Add (Var (Local 1)) (Con 2) (Local 1));
  SetLocal 1 Add(GetLocal(1),2);
  TraceOperation 036799 (Jump 036755);
  Jump: 036755
--[225]--------------------------------------------------
LocRoutine 036802:
  MakeRoutineFrame 0;
  Jump: 036803
LocOp 036803:
  TraceOperation 036803 (Print "The Beast is puzzled by a voice coming from something it can't see.");
  GamePrint "The Beast is puzzled by a voice coming from something it can't see.";
  TraceOperation 036834 (Print_paddr (Var (Global 12)));
  Let b1 = M[007932];
  Let b2 = M[007933];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 036836 New_line;
  GamePrint "\n";
  TraceOperation 036837 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[226]--------------------------------------------------
LocRoutine 036838:
  MakeRoutineFrame 0;
  Jump: 036839
LocOp 036839:
  TraceOperation 036839 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 037088)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 036844 (Jz (Var (Global 103)) (Branch T (Dloc 036862)));
    Let b4 = M[008114];
    Let b5 = M[008115];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 036862
    } else {
      TraceOperation 036847 (Print_ret "You already told the Beast your name.");
      GamePrint "You already told the Beast your name.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 037088
  }
LocOp 036862:
  TraceOperation 036862 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 036872)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 036866 (Call (Floc 036802) [] Sp);
    PushFrame 036866;
    JumpCall: 036802, #actuals: 0
  } else {
    Jump: 036872
  }
LocReturn 036866:
  PushStack call_result;
  TraceOperation 036871 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 036872:
  TraceOperation 036872 (Je [Var (Global 201),Con 94,Con 123,Con 92] (Branch T (Dloc 036884)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),94),Equal(MakeHiLo(b1,b2),123)),Equal(MakeHiLo(b1,b2),92))) {
    Jump: 036884
  } else {
    TraceOperation 036879 (Je [Var (Global 201),Con 30] (Branch F (Dloc 036969)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      Jump: 036884
    } else {
      Jump: 036969
    }
  }
LocOp 036884:
  TraceOperation 036884 (Call (Floc 022320) [Con -22735,Con 2] Sp);
  PushFrame 036884;
  SetLocal 1 -22735;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 036884:
  PushStack call_result;
  TraceOperation 036892 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 036897 (Store (Con 119) (Con 1));
  SetByte 008114 0;
  SetByte 008115 1;
  TraceOperation 036900 (Print_ret "The Beast roars your name with relish, and explains that once it has eaten you, your name will be added to its list of remembrance.");
  GamePrint "The Beast roars your name with relish, and explains that once it has eaten you, your name will be added to its list of remembrance.\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 036969:
  TraceOperation 036969 (Print_ret "There's something about detecting insincerity that transcends even the vast gulf between Humanity and Bugblatter Bestiality. The Beast bellows, obviously convinced that you were lying and that isn't your name nor anything remotely like it.");
  GamePrint "There's something about detecting insincerity that transcends even the vast gulf between Humanity and Bugblatter Bestiality. The Beast bellows, obviously convinced that you were lying and that isn't your name nor anything remotely like it.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[227]--------------------------------------------------
LocRoutine 037110:
  MakeRoutineFrame 0;
  Jump: 037111
LocOp 037111:
  TraceOperation 037111 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 037134)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 037115 (Print_ret "That wouldn't be polite.");
    GamePrint "That wouldn't be polite.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 037134
  }
LocOp 037134:
  TraceOperation 037134 (Test_attr (Var (Global 201)) (Con 24) (Branch F (Dloc 037203)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,7)) {
    TraceOperation 037139 (Get_parent (Var (Global 195)) Sp);
    Let b4 = M[008298];
    Let b5 = M[008299];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
    PushStack Widen(b6);
    TraceOperation 037142 (Je [Var (Global 201),Var Sp] (Branch F (Dloc 037152)));
    Let b7 = M[008310];
    Let b8 = M[008311];
    PopStack popped9;
    if (Equal(MakeHiLo(b7,b8),popped9)) {
      TraceOperation 037146 (Call (Floc 042532) [] Sp);
      PushFrame 037146;
      JumpCall: 042532, #actuals: 0
    } else {
      Jump: 037152
    }
  } else {
    Jump: 037203
  }
LocReturn 037146:
  PushStack call_result;
  TraceOperation 037151 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037152:
  TraceOperation 037152 (Test_attr (Var (Global 201)) (Con 23) (Branch T (Dloc 037175)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    Jump: 037175
  } else {
    TraceOperation 037156 (Print_ret "You'll have to open it first.");
    GamePrint "You'll have to open it first.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
LocOp 037175:
  TraceOperation 037175 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 037203)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  PushStack Widen(b3);
  if (IsZero(Widen(b3))) {
    Jump: 037203
  } else {
    TraceOperation 037179 (Get_child (Var (Global 201)) Sp (Branch T (Dloc 037189)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
    PushStack Widen(b6);
    if (IsZero(Widen(b6))) {
      TraceOperation 037183 (Push (Con 0));
      PushStack 0;
      TraceOperation 037186 (Jump 037192);
      Jump: 037192
    } else {
      Jump: 037189
    }
  }
--[228]--------------------------------------------------
LocRoutine 037216:
  MakeRoutineFrame 0;
  Jump: 037217
LocOp 037217:
  TraceOperation 037217 (Call (Floc 022042) [Con 66,Var (Global 202),Var (Global 201)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 037217;
  SetLocal 1 66;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  JumpCall: 022042, #actuals: 3
LocReturn 037217:
  PushStack call_result;
  TraceOperation 037225 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[229]--------------------------------------------------
LocRoutine 037226:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 037229
LocOp 037229:
  TraceOperation 037229 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 037242)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 037233 (Print_ret "Be real.");
    GamePrint "Be real.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 037242
  }
LocOp 037242:
  TraceOperation 037242 (Call (Floc 043716) [Con -11674] Sp);
  PushFrame 037242;
  SetLocal 1 -11674;
  JumpCall: 043716, #actuals: 1
LocReturn 037242:
  PushStack call_result;
  TraceOperation 037249 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[230]--------------------------------------------------
LocRoutine 037250:
  MakeRoutineFrame 0;
  Jump: 037251
LocOp 037251:
  TraceOperation 037251 (Je [Var (Global 201),Con 36] (Branch T (Dloc 037261)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),36)) {
    Jump: 037261
  } else {
    TraceOperation 037255 (Call (Floc 039060) [] Sp);
    PushFrame 037255;
    JumpCall: 039060, #actuals: 0
  }
LocReturn 037255:
  PushStack call_result;
  TraceOperation 037260 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 037261:
  TraceOperation 037261 (Test_attr (Var (Global 202)) (Con 26) (Branch T (Dloc 037288)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    Jump: 037288
  } else {
    TraceOperation 037265 (Print "I don't think");
    GamePrint "I don't think";
    TraceOperation 037272 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
    Let b4 = M[008312];
    Let b5 = M[008313];
    PushFrame 037272;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  }
LocReturn 037272:
  PushStack call_result;
  TraceOperation 037279 (Print_ret " even has hands.");
  GamePrint " even has hands.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037288:
  TraceOperation 037288 (Call (Floc 022042) [Con 153,Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 037288;
  SetLocal 1 153;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022042, #actuals: 2
LocReturn 037288:
  PushStack call_result;
  TraceOperation 037295 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[231]--------------------------------------------------
LocRoutine 037296:
  MakeRoutineFrame 0;
  Jump: 037297
LocOp 037297:
  TraceOperation 037297 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 037305)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 037301 (Print_paddr (Var (Global 49)));
    Let b2 = M[008006];
    Let b3 = M[008007];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 037303 New_line;
    GamePrint "\n";
    TraceOperation 037304 Rtrue;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 037305
  }
LocOp 037305:
  TraceOperation 037305 (Jz (Var (Global 201)) (Branch F (Dloc 037359)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 037308 (Call (Floc 043468) [Con 202] Sp);
    PushFrame 037308;
    SetLocal 1 202;
    JumpCall: 043468, #actuals: 1
  } else {
    Jump: 037359
  }
LocReturn 037308:
  PushStack call_result;
  TraceOperation 037314 (Jz (Var Sp) (Branch T (Dloc 037323)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037323
  } else {
    TraceOperation 037317 (Store (Con 217) (Con 202));
    SetByte 008310 0;
    SetByte 008311 202;
    TraceOperation 037320 (Jump 037359);
    Jump: 037359
  }
LocOp 037323:
  TraceOperation 037323 (Call (Floc 043468) [Con 52] Sp);
  PushFrame 037323;
  SetLocal 1 52;
  JumpCall: 043468, #actuals: 1
LocReturn 037323:
  PushStack call_result;
  TraceOperation 037329 (Jz (Var Sp) (Branch T (Dloc 037338)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037338
  } else {
    TraceOperation 037332 (Store (Con 217) (Con 52));
    SetByte 008310 0;
    SetByte 008311 52;
    TraceOperation 037335 (Jump 037359);
    Jump: 037359
  }
LocOp 037338:
  TraceOperation 037338 (Print_ret "With what? At whom? Why?");
  GamePrint "With what? At whom? Why?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037359:
  TraceOperation 037359 (Jz (Var (Global 202)) (Branch F (Dloc 037451)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 037363 (Je [Var (Global 201),Con 52,Con 202] (Branch F (Dloc 037390)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),52),Equal(MakeHiLo(b3,b4),202))) {
      TraceOperation 037369 (Print_ret "Some rays shoot out of the gun.");
      GamePrint "Some rays shoot out of the gun.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 037390
    }
  } else {
    Jump: 037451
  }
LocOp 037390:
  TraceOperation 037390 (Call (Floc 043468) [Con 202] Sp);
  PushFrame 037390;
  SetLocal 1 202;
  JumpCall: 043468, #actuals: 1
LocReturn 037390:
  PushStack call_result;
  TraceOperation 037396 (Jz (Var Sp) (Branch T (Dloc 037408)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037408
  } else {
    TraceOperation 037399 (Call (Floc 022042) [Con 132,Var (Global 201),Con 202] Sp);
    Let b2 = M[008310];
    Let b3 = M[008311];
    PushFrame 037399;
    SetLocal 1 132;
    SetLocal 2 MakeHiLo(b2,b3);
    SetLocal 3 202;
    JumpCall: 022042, #actuals: 3
  }
LocReturn 037399:
  PushStack call_result;
  TraceOperation 037407 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037408:
  TraceOperation 037408 (Call (Floc 043468) [Con 52] Sp);
  PushFrame 037408;
  SetLocal 1 52;
  JumpCall: 043468, #actuals: 1
LocReturn 037408:
  PushStack call_result;
  TraceOperation 037414 (Jz (Var Sp) (Branch T (Dloc 037426)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037426
  } else {
    TraceOperation 037417 (Call (Floc 022042) [Con 132,Var (Global 201),Con 52] Sp);
    Let b2 = M[008310];
    Let b3 = M[008311];
    PushFrame 037417;
    SetLocal 1 132;
    SetLocal 2 MakeHiLo(b2,b3);
    SetLocal 3 52;
    JumpCall: 022042, #actuals: 3
  }
LocReturn 037417:
  PushStack call_result;
  TraceOperation 037425 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037426:
  TraceOperation 037426 (Print "You have nothing to shoot");
  GamePrint "You have nothing to shoot";
  TraceOperation 037437 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 037437;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 037437:
  PushStack call_result;
  TraceOperation 037444 (Print_ret " with.");
  GamePrint " with.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037451:
  TraceOperation 037451 (Je [Var (Global 202),Con 202] (Branch F (Dloc 037541)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),202)) {
    TraceOperation 037456 (Print "Some rays from the gun strike");
    GamePrint "Some rays from the gun strike";
    TraceOperation 037475 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 037475;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 037541
  }
LocReturn 037475:
  PushStack call_result;
  TraceOperation 037482 (Print ", but ");
  GamePrint ", but ";
  TraceOperation 037487 (Je [Var (Global 201),Con 95] (Branch F (Dloc 037528)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),95)) {
    TraceOperation 037491 (Test_attr (Con 95) (Con 3) (Branch T (Dloc 037528)));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      Jump: 037528
    } else {
      TraceOperation 037495 (Inc (Con 232));
      Let b4 = M[008340];
      Let b5 = M[008341];
      SetByte 008340 HiByte(Add(MakeHiLo(b4,b5),1));
      SetByte 008341 LoByte(Add(MakeHiLo(b4,b5),1));
      TraceOperation 037497 (Print "it only seems to make it madder");
      GamePrint "it only seems to make it madder";
      TraceOperation 037514 (Je [Var (Global 216),Con 3] (Branch F (Dloc 037525)));
      Let b6 = M[008340];
      Let b7 = M[008341];
      if (Equal(MakeHiLo(b6,b7),3)) {
        TraceOperation 037518 (Print " (Footnote 7)");
        GamePrint " (Footnote 7)";
        Jump: 037525
      } else {
        Jump: 037525
      }
    }
  } else {
    Jump: 037528
  }
LocOp 037525:
  TraceOperation 037525 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037528:
  TraceOperation 037528 (Print_ret "nothing else happens.");
  GamePrint "nothing else happens.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037541:
  TraceOperation 037541 (Print_ret "Don't ever bother applying for a job as an armaments expert.");
  GamePrint "Don't ever bother applying for a job as an armaments expert.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[232]--------------------------------------------------
LocRoutine 037584:
  MakeRoutineFrame 0;
  Jump: 037585
LocOp 037585:
  TraceOperation 037585 (Print "I doubt");
  GamePrint "I doubt";
  TraceOperation 037592 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 037592;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 037592:
  PushStack call_result;
  TraceOperation 037599 (Print_ret " is interested.");
  GamePrint " is interested.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[233]--------------------------------------------------
LocRoutine 037610:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 037613
LocOp 037613:
  TraceOperation 037613 (Call (Floc 043552) [Var (Global 0),Con 12] (Local 1));
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame 037613;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 12;
  JumpCall: 043552, #actuals: 2
LocReturn 037613:
  SetLocal 1 call_result;
  TraceOperation 037620 (Jz (Var (Local 1)) (Branch T (Dloc 037631)));
  if (IsZero(GetLocal(1))) {
    Jump: 037631
  } else {
    TraceOperation 037623 (Call (Floc 022042) [Con 28,Var (Local 1)] Sp);
    PushFrame 037623;
    SetLocal 1 28;
    SetLocal 2 GetLocal(1);
    JumpCall: 022042, #actuals: 2
  }
LocReturn 037623:
  PushStack call_result;
  TraceOperation 037630 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037631:
  TraceOperation 037631 (Call (Floc 031422) [] Sp);
  PushFrame 037631;
  JumpCall: 031422, #actuals: 0
LocReturn 037631:
  PushStack call_result;
  TraceOperation 037636 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[234]--------------------------------------------------
LocRoutine 037638:
  MakeRoutineFrame 0;
  Jump: 037639
LocOp 037639:
  TraceOperation 037639 (Store (Con 229) (Con 15));
  SetByte 008334 0;
  SetByte 008335 15;
  TraceOperation 037642 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame 037642;
  SetLocal 1 -14349;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 037642:
  PushStack call_result;
  TraceOperation 037650 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 037655 (Print_ret "Wasn't that fun?");
  GamePrint "Wasn't that fun?\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[235]--------------------------------------------------
LocRoutine 037668:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 037671
LocOp 037671:
  TraceOperation 037671 (Je [Var (Global 0),Con 168] (Branch F (Dloc 037716)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 037675 (Print "You nod off and are wakened briefly a few hours later as");
    GamePrint "You nod off and are wakened briefly a few hours later as";
    TraceOperation 037710 (Call (Floc 058488) [] Sp);
    PushFrame 037710;
    JumpCall: 058488, #actuals: 0
  } else {
    Jump: 037716
  }
LocReturn 037710:
  PushStack call_result;
  TraceOperation 037715 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 037716:
  TraceOperation 037716 (Je [Var (Global 0),Con 121] (Branch F (Dloc 037753)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 037720 (Print_ret "You try, but the grubby mattresses are too repulsive.");
    GamePrint "You try, but the grubby mattresses are too repulsive.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 037753
  }
LocOp 037753:
  TraceOperation 037753 (Print_ret "There's no bed here.");
  GamePrint "There's no bed here.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[236]--------------------------------------------------
LocRoutine 037764:
  MakeRoutineFrame 0;
  Jump: 037765
LocOp 037765:
  TraceOperation 037765 (Print "It smells just like");
  GamePrint "It smells just like";
  TraceOperation 037776 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 037776;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 037776:
  PushStack call_result;
  TraceOperation 037782 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[237]--------------------------------------------------
LocRoutine 037786:
  MakeRoutineFrame 0;
  Jump: 037787
LocOp 037787:
  TraceOperation 037787 (Je [Var (Global 0),Con 108] (Branch F (Dloc 037801)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 037791 (Jin (Con 105) (Var (Global 0)) (Branch F (Dloc 037801)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001700];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 037795 (Call (Floc 030122) [] Sp);
      PushFrame 037795;
      JumpCall: 030122, #actuals: 0
    } else {
      Jump: 037801
    }
  } else {
    Jump: 037801
  }
LocReturn 037795:
  PushStack call_result;
  TraceOperation 037800 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 037801:
  TraceOperation 037801 (Print_ret "How nice.");
  GamePrint "How nice.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[238]--------------------------------------------------
LocRoutine 037810:
  MakeRoutineFrame 0;
  Jump: 037811
LocOp 037811:
  TraceOperation 037811 (Print_ret "You can't spin that!");
  GamePrint "You can't spin that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[239]--------------------------------------------------
LocRoutine 037822:
  MakeRoutineFrame 0;
  Jump: 037823
LocOp 037823:
  TraceOperation 037823 (Je [Var (Global 201),Con 32] (Branch F (Dloc 037844)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),32)) {
    TraceOperation 037827 (Call (Floc 043370) [Con 105] Sp);
    PushFrame 037827;
    SetLocal 1 105;
    JumpCall: 043370, #actuals: 1
  } else {
    Jump: 037844
  }
LocReturn 037827:
  PushStack call_result;
  TraceOperation 037833 (Jz (Var Sp) (Branch T (Dloc 037844)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037844
  } else {
    TraceOperation 037836 (Call (Floc 022042) [Con 74,Con 105] Sp);
    PushFrame 037836;
    SetLocal 1 74;
    SetLocal 2 105;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 037836:
  PushStack call_result;
  TraceOperation 037843 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037844:
  TraceOperation 037844 (Call (Floc 022042) [Con 55,Var (Global 202),Var (Global 201)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 037844;
  SetLocal 1 55;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  JumpCall: 022042, #actuals: 3
LocReturn 037844:
  PushStack call_result;
  TraceOperation 037852 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[240]--------------------------------------------------
LocRoutine 037854:
  MakeRoutineFrame 0;
  Jump: 037855
LocOp 037855:
  TraceOperation 037855 (Call (Floc 022042) [Con 132,Var (Global 202),Var (Global 201)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 037855;
  SetLocal 1 132;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  JumpCall: 022042, #actuals: 3
LocReturn 037855:
  PushStack call_result;
  TraceOperation 037863 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[241]--------------------------------------------------
LocRoutine 037864:
  MakeRoutineFrame 0;
  Jump: 037865
LocOp 037865:
  TraceOperation 037865 (Call (Floc 022042) [Con 134,Var (Global 202),Var (Global 201)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 037865;
  SetLocal 1 134;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  JumpCall: 022042, #actuals: 3
LocReturn 037865:
  PushStack call_result;
  TraceOperation 037873 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[242]--------------------------------------------------
LocRoutine 037874:
  MakeRoutineFrame 0;
  Jump: 037875
LocOp 037875:
  TraceOperation 037875 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 037878 (Test_attr (Var Sp) (Con 12) (Branch F (Dloc 037893)));
  PopStack popped4;
  Let b5 = M[Offset(Offset(000751,Mul(popped4,9)),1)];
  if (TestBit(b5,3)) {
    TraceOperation 037882 (Get_parent (Var (Global 195)) Sp);
    Let b6 = M[008298];
    Let b7 = M[008299];
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),4)];
    PushStack Widen(b8);
    TraceOperation 037885 (Call (Floc 022042) [Con 48,Var Sp] Sp);
    PopStack popped9;
    PushFrame 037885;
    SetLocal 1 48;
    SetLocal 2 popped9;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 037893
  }
LocReturn 037885:
  PushStack call_result;
  TraceOperation 037892 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 037893:
  TraceOperation 037893 (Jz (Var (Global 86)) (Branch T (Dloc 038034)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 038034
  } else {
    TraceOperation 037897 (Store (Con 102) (Con 0));
    SetByte 008080 0;
    SetByte 008081 0;
    TraceOperation 037900 (Call (Floc 020662) [Con 31225] Sp);
    PushFrame 037900;
    SetLocal 1 31225;
    JumpCall: 020662, #actuals: 1
  }
LocReturn 037900:
  PushStack call_result;
  TraceOperation 037907 (Jz (Var Sp) (Branch T (Dloc 037970)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037970
  } else {
    TraceOperation 037910 (Print "You are safe! Prosser heaves a visible sigh of relief, shakes his head and wipes his brow. ");
    GamePrint "You are safe! Prosser heaves a visible sigh of relief, shakes his head and wipes his brow. ";
    TraceOperation 037961 (Print_paddr (Var (Global 47)));
    Let b2 = M[008002];
    Let b3 = M[008003];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 037963 New_line;
    GamePrint "\n";
    TraceOperation 037964 (Call (Floc 061320) [] Sp);
    PushFrame 037964;
    JumpCall: 061320, #actuals: 0
  }
LocReturn 037964:
  PushStack call_result;
  TraceOperation 037969 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 037970:
  TraceOperation 037970 (Je [Var (Global 0),Con 149] (Branch F (Dloc 038028)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),149)) {
    TraceOperation 037974 (Jz (Var (Global 139)) (Branch F (Dloc 038028)));
    Let b3 = M[008186];
    Let b4 = M[008187];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 037977 (Jin (Con 124) (Var (Global 0)) (Branch T (Dloc 038028)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[001871];
      if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
        Jump: 038028
      } else {
        TraceOperation 037981 (Print "The ");
        GamePrint "The ";
        TraceOperation 037984 (Print_obj (Con 146));
        Let b8 = M[002072];
        Let b9 = M[002073];
        Let b10 = M[Address(MakeHiLo(b8,b9))];
        if (IsZeroByte(b10)) {
          GamePrint "";
          TraceOperation 037986 (Print " gives a quick chew of his gum and slams in the clutch. ");
          GamePrint " gives a quick chew of his gum and slams in the clutch. ";
          TraceOperation 038019 (Print_paddr (Var (Global 47)));
          Let b11 = M[008002];
          Let b12 = M[008003];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
          TraceOperation 038021 New_line;
          GamePrint "\n";
          TraceOperation 038022 (Call (Floc 061320) [] Sp);
          PushFrame 038022;
          JumpCall: 061320, #actuals: 0
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
          TraceOperation 037986 (Print " gives a quick chew of his gum and slams in the clutch. ");
          GamePrint " gives a quick chew of his gum and slams in the clutch. ";
          TraceOperation 038019 (Print_paddr (Var (Global 47)));
          Let b13 = M[008002];
          Let b14 = M[008003];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b13,b14)));
          TraceOperation 038021 New_line;
          GamePrint "\n";
          TraceOperation 038022 (Call (Floc 061320) [] Sp);
          PushFrame 038022;
          JumpCall: 061320, #actuals: 0
        }
      }
    } else {
      Jump: 038028
    }
  } else {
    Jump: 038028
  }
LocReturn 038022:
  PushStack call_result;
  TraceOperation 038027 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 038028:
  TraceOperation 038028 (Call (Floc 058110) [] Sp);
  PushFrame 038028;
  JumpCall: 058110, #actuals: 0
LocReturn 038028:
  PushStack call_result;
  TraceOperation 038033 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 038034:
  TraceOperation 038034 (Jz (Var (Global 201)) (Branch T (Dloc 038047)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 038047
  } else {
    TraceOperation 038037 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 038047)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,6)) {
      TraceOperation 038041 (Call (Floc 031422) [] Sp);
      PushFrame 038041;
      JumpCall: 031422, #actuals: 0
    } else {
      Jump: 038047
    }
  }
LocReturn 038041:
  PushStack call_result;
  TraceOperation 038046 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 038047:
  TraceOperation 038047 (Print_ret "You are already standing.");
  GamePrint "You are already standing.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[243]--------------------------------------------------
LocRoutine 038060:
  MakeRoutineFrame 0;
  Jump: 038061
LocOp 038061:
  TraceOperation 038061 (Je [Var (Global 201),Con 117] (Branch F (Dloc 038088)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),117)) {
    TraceOperation 038065 (Print_ret "The slot is too wide to block that way.");
    GamePrint "The slot is too wide to block that way.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 038088
  }
LocOp 038088:
  TraceOperation 038088 (Je [Var (Global 201),Con 114,Con 112,Con 115] (Branch F (Dloc 038129)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),114),Equal(MakeHiLo(b1,b2),112)),Equal(MakeHiLo(b1,b2),115))) {
    TraceOperation 038095 (Print "You'd never be able to push the ");
    GamePrint "You'd never be able to push the ";
    TraceOperation 038116 (Print_obj (Con 116));
    Let b3 = M[001802];
    Let b4 = M[001803];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 038118 (Print " from there.");
      GamePrint " from there.";
      TraceOperation 038125 (Print_paddr (Var (Global 30)));
      Let b6 = M[007968];
      Let b7 = M[007969];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 038127 New_line;
      GamePrint "\n";
      TraceOperation 038128 Rtrue;
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 038118 (Print " from there.");
      GamePrint " from there.";
      TraceOperation 038125 (Print_paddr (Var (Global 30)));
      Let b9 = M[007968];
      Let b10 = M[007969];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
      TraceOperation 038127 New_line;
      GamePrint "\n";
      TraceOperation 038128 Rtrue;
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    }
  } else {
    Jump: 038129
  }
LocOp 038129:
  TraceOperation 038129 (Je [Var (Global 201),Con 173,Con 172,Con 166] (Branch F (Dloc 038170)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),173),Equal(MakeHiLo(b1,b2),172)),Equal(MakeHiLo(b1,b2),166))) {
    TraceOperation 038136 (Je [Var (Global 120),Con 123] (Branch F (Dloc 038170)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 038140 (Print "The ");
      GamePrint "The ";
      TraceOperation 038143 (Print_obj (Con 166));
      Let b5 = M[002252];
      Let b6 = M[002253];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 038145 (Print " could easily maneuver around you.");
        GamePrint " could easily maneuver around you.";
        TraceOperation 038166 (Print_paddr (Var (Global 30)));
        Let b8 = M[007968];
        Let b9 = M[007969];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b8,b9)));
        TraceOperation 038168 New_line;
        GamePrint "\n";
        TraceOperation 038169 Rtrue;
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 038145 (Print " could easily maneuver around you.");
        GamePrint " could easily maneuver around you.";
        TraceOperation 038166 (Print_paddr (Var (Global 30)));
        Let b11 = M[007968];
        Let b12 = M[007969];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
        TraceOperation 038168 New_line;
        GamePrint "\n";
        TraceOperation 038169 Rtrue;
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      }
    } else {
      Jump: 038170
    }
  } else {
    Jump: 038170
  }
LocOp 038170:
  TraceOperation 038170 (Call (Floc 031422) [] Sp);
  PushFrame 038170;
  JumpCall: 031422, #actuals: 0
LocReturn 038170:
  PushStack call_result;
  TraceOperation 038175 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[244]--------------------------------------------------
LocRoutine 038176:
  MakeRoutineFrame 0;
  Jump: 038177
LocOp 038177:
  TraceOperation 038177 (Jz (Var (Global 204)) (Branch T (Dloc 038188)));
  Let b1 = M[008316];
  Let b2 = M[008317];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 038188
  } else {
    TraceOperation 038180 (Call (Floc 022042) [Con 144,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 038180;
    SetLocal 1 144;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 2
  }
LocReturn 038180:
  PushStack call_result;
  TraceOperation 038187 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038188:
  TraceOperation 038188 (Call (Floc 031422) [] Sp);
  PushFrame 038188;
  JumpCall: 031422, #actuals: 0
LocReturn 038188:
  PushStack call_result;
  TraceOperation 038193 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[245]--------------------------------------------------
LocRoutine 038194:
  MakeRoutineFrame 0;
  Jump: 038195
LocOp 038195:
  TraceOperation 038195 (Print_ret "That would be pointless.");
  GamePrint "That would be pointless.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[246]--------------------------------------------------
LocRoutine 038210:
  MakeRoutineFrame 0;
  Jump: 038211
LocOp 038211:
  TraceOperation 038211 (Je [Var (Global 201),Con 158] (Branch F (Dloc 038221)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),158)) {
    TraceOperation 038215 (Jz (Var (Global 117)) (Branch T (Dloc 038221)));
    Let b3 = M[008142];
    Let b4 = M[008143];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 038221
    } else {
      TraceOperation 038218 (Jz (Var (Global 86)) (Branch F (Dloc 038232)));
      Let b5 = M[008080];
      Let b6 = M[008081];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 038221
      } else {
        Jump: 038232
      }
    }
  } else {
    Jump: 038221
  }
LocOp 038221:
  TraceOperation 038221 (Je [Var (Global 201),Con 139] (Branch F (Dloc 038236)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 038225 (Test_attr (Con 139) (Con 8) (Branch F (Dloc 038236)));
    Let b3 = M[002003];
    if (TestBit(b3,7)) {
      TraceOperation 038229 (Jz (Var (Global 86)) (Branch T (Dloc 038236)));
      Let b4 = M[008080];
      Let b5 = M[008081];
      if (IsZero(MakeHiLo(b4,b5))) {
        Jump: 038236
      } else {
        Jump: 038232
      }
    } else {
      Jump: 038236
    }
  } else {
    Jump: 038236
  }
LocOp 038232:
  TraceOperation 038232 (Print_paddr (Var (Global 50)));
  Let b1 = M[008008];
  Let b2 = M[008009];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 038234 New_line;
  GamePrint "\n";
  TraceOperation 038235 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
LocOp 038236:
  TraceOperation 038236 (Je [Var (Global 201),Con 111] (Branch T Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),111)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 038240 (Call (Floc 043578) [] Sp);
    PushFrame 038240;
    JumpCall: 043578, #actuals: 0
  }
LocReturn 038240:
  PushStack call_result;
  TraceOperation 038245 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 038248 (Je [Var (Global 201),Con 179] (Branch F (Dloc 038259)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    if (Equal(MakeHiLo(b2,b3),179)) {
      TraceOperation 038252 (Je [Var (Global 202),Var (Global 208)] (Branch F (Dloc 038259)));
      Let b4 = M[008312];
      Let b5 = M[008313];
      Let b6 = M[008324];
      Let b7 = M[008325];
      if (Equal(MakeHiLo(b4,b5),MakeHiLo(b6,b7))) {
        TraceOperation 038256 (Jz (Var (Global 202)) (Branch F (Dloc 038285)));
        Let b8 = M[008312];
        Let b9 = M[008313];
        if (IsZero(MakeHiLo(b8,b9))) {
          Jump: 038259
        } else {
          Jump: 038285
        }
      } else {
        Jump: 038259
      }
    } else {
      Jump: 038259
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 1
  }
LocOp 038259:
  TraceOperation 038259 (Je [Var (Global 201),Con 184] (Branch F (Dloc 038272)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),184)) {
    TraceOperation 038263 (Je [Var (Global 202),Con 180,Con 182] (Branch F (Dloc 038272)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),180),Equal(MakeHiLo(b3,b4),182))) {
      TraceOperation 038269 (Jz (Var (Global 209)) (Branch F (Dloc 038285)));
      Let b5 = M[008326];
      Let b6 = M[008327];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 038272
      } else {
        Jump: 038285
      }
    } else {
      Jump: 038272
    }
  } else {
    Jump: 038272
  }
LocOp 038272:
  TraceOperation 038272 (Je [Var (Global 201),Con 185] (Branch F (Dloc 038293)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),185)) {
    TraceOperation 038276 (Je [Var (Global 202),Con 197,Con 199] (Branch F (Dloc 038293)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),197),Equal(MakeHiLo(b3,b4),199))) {
      TraceOperation 038282 (Jz (Var (Global 210)) (Branch T (Dloc 038293)));
      Let b5 = M[008328];
      Let b6 = M[008329];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 038293
      } else {
        Jump: 038285
      }
    } else {
      Jump: 038293
    }
  } else {
    Jump: 038293
  }
LocOp 038285:
  TraceOperation 038285 (Call (Floc 022042) [Con 123,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 038285;
  SetLocal 1 123;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022042, #actuals: 2
LocReturn 038285:
  PushStack call_result;
  TraceOperation 038292 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038293:
  TraceOperation 038293 (Test_attr (Var (Global 201)) (Con 22) (Branch F (Dloc 038304)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,1)) {
    TraceOperation 038297 (Get_parent (Var (Global 201)) Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
    PushStack Widen(b6);
    TraceOperation 038300 (Je [Var (Global 202),Var Sp] (Branch T Dfalse));
    Let b7 = M[008312];
    Let b8 = M[008313];
    PopStack popped9;
    if (Equal(MakeHiLo(b7,b8),popped9)) {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 0
    } else {
      Jump: 038304
    }
  } else {
    Jump: 038304
  }
LocOp 038304:
  TraceOperation 038304 (Jin (Var (Global 201)) (Con 31) (Branch T (Dloc 038321)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(31,Widen(b3))) {
    TraceOperation 038321 (Test_attr (Var (Global 201)) (Con 9) (Branch F (Dloc 038338)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),1)];
    if (TestBit(b6,6)) {
      TraceOperation 038325 (Print_ret "You are already wearing it.");
      GamePrint "You are already wearing it.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 038338
    }
  } else {
    TraceOperation 038308 (Call (Floc 043468) [Var (Global 201)] Sp);
    Let b8 = M[008310];
    Let b9 = M[008311];
    PushFrame 038308;
    SetLocal 1 MakeHiLo(b8,b9);
    JumpCall: 043468, #actuals: 1
  }
LocReturn 038308:
  PushStack call_result;
  TraceOperation 038314 (Jz (Var Sp) (Branch T (Dloc 038347)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 038347
  } else {
    TraceOperation 038317 (Test_attr (Var (Global 201)) (Con 25) (Branch T (Dloc 038347)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),3)];
    if (TestBit(b4,6)) {
      Jump: 038347
    } else {
      TraceOperation 038321 (Test_attr (Var (Global 201)) (Con 9) (Branch F (Dloc 038338)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),1)];
      if (TestBit(b7,6)) {
        TraceOperation 038325 (Print_ret "You are already wearing it.");
        GamePrint "You are already wearing it.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        Jump: 038338
      }
    }
  }
LocOp 038338:
  TraceOperation 038338 (Print_ret "You already have it.");
  GamePrint "You already have it.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038347:
  TraceOperation 038347 (Jz (Var (Global 202)) (Branch T (Dloc 038453)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 038453
  } else {
    TraceOperation 038351 (Je [Var (Global 201),Con 30] (Branch F (Dloc 038363)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 038355 (Call (Floc 022042) [Con 53,Var (Global 202)] Sp);
      Let b5 = M[008312];
      Let b6 = M[008313];
      PushFrame 038355;
      SetLocal 1 53;
      SetLocal 2 MakeHiLo(b5,b6);
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 038363
    }
  }
LocReturn 038355:
  PushStack call_result;
  TraceOperation 038362 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038363:
  TraceOperation 038363 (Je [Var (Global 201),Var (Global 115)] (Branch F (Dloc 038371)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008138];
  Let b4 = M[008139];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 038367 (Je [Var (Global 202),Con 141] (Branch T Dfalse));
    Let b5 = M[008312];
    Let b6 = M[008313];
    if (Equal(MakeHiLo(b5,b6),141)) {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    } else {
      Jump: 038371
    }
  } else {
    Jump: 038371
  }
LocOp 038371:
  TraceOperation 038371 (Je [Var (Global 201),Var (Global 96)] (Branch F (Dloc 038379)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008100];
  Let b4 = M[008101];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 038375 (Je [Var (Global 202),Con 70] (Branch T Dfalse));
    Let b5 = M[008312];
    Let b6 = M[008313];
    if (Equal(MakeHiLo(b5,b6),70)) {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    } else {
      Jump: 038379
    }
  } else {
    Jump: 038379
  }
LocOp 038379:
  TraceOperation 038379 (Get_parent (Var (Global 201)) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 038382 (Je [Var (Global 202),Var Sp] (Branch T (Dloc 038449)));
  Let b4 = M[008312];
  Let b5 = M[008313];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    Jump: 038449
  } else {
    TraceOperation 038387 (Print "But");
    GamePrint "But";
    TraceOperation 038392 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b7 = M[008310];
    Let b8 = M[008311];
    PushFrame 038392;
    SetLocal 1 MakeHiLo(b7,b8);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  }
LocReturn 038392:
  PushStack call_result;
  TraceOperation 038399 (Print " isn't ");
  GamePrint " isn't ";
  TraceOperation 038402 (Test_attr (Var (Global 202)) (Con 26) (Branch F (Dloc 038426)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 038406 (Je [Var (Global 202),Con 216,Con 209] (Branch T (Dloc 038426)));
    Let b4 = M[008312];
    Let b5 = M[008313];
    if (LogOr(Equal(MakeHiLo(b4,b5),216),Equal(MakeHiLo(b4,b5),209))) {
      Jump: 038426
    } else {
      TraceOperation 038412 (Print "being held by");
      GamePrint "being held by";
      TraceOperation 038423 (Jump 038439);
      Jump: 038439
    }
  } else {
    Jump: 038426
  }
LocOp 038426:
  TraceOperation 038426 (Test_attr (Var (Global 202)) (Con 8) (Branch F (Dloc 038436)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,7)) {
    TraceOperation 038430 (Print "on");
    GamePrint "on";
    TraceOperation 038433 (Jump 038439);
    Jump: 038439
  } else {
    Jump: 038436
  }
LocOp 038436:
  TraceOperation 038436 (Print "in");
  GamePrint "in";
  Jump: 038439
LocOp 038439:
  TraceOperation 038439 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 038439;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 038439:
  PushStack call_result;
  TraceOperation 038446 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038449:
  TraceOperation 038449 (Store (Con 218) (Con 0));
  SetByte 008312 0;
  SetByte 008313 0;
  TraceOperation 038452 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 038453:
  TraceOperation 038453 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 038456 (Je [Var (Global 201),Var Sp] (Branch F (Dloc 038469)));
  Let b4 = M[008310];
  Let b5 = M[008311];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 038460 (Print_ret "You are in it!");
    GamePrint "You are in it!\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    Jump: 038469
  }
LocOp 038469:
  TraceOperation 038469 (Jz (Var (Global 144)) (Branch T Dfalse));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 038472 (Je [Var (Global 201),Con 158] (Branch T Dfalse));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (Equal(MakeHiLo(b4,b5),158)) {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      TraceOperation 038476 (Test_attr (Var (Global 201)) (Con 25) (Branch F Dfalse));
      Let b7 = M[008310];
      Let b8 = M[008311];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),3)];
      if (TestBit(b9,6)) {
        TraceOperation 038480 (Call (Floc 043468) [Var (Global 201)] Sp);
        Let b10 = M[008310];
        Let b11 = M[008311];
        PushFrame 038480;
        SetLocal 1 MakeHiLo(b10,b11);
        JumpCall: 043468, #actuals: 1
      } else {
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 0
      }
    }
  }
LocReturn 038480:
  PushStack call_result;
  TraceOperation 038486 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 038489 (Call (Floc 020718) [Var (Global 150)] Sp);
    Let b2 = M[008208];
    Let b3 = M[008209];
    PushFrame 038489;
    SetLocal 1 MakeHiLo(b2,b3);
    JumpCall: 020718, #actuals: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocReturn 038489:
  PushStack call_result;
  TraceOperation 038495 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 038497 New_line;
  GamePrint "\n";
  TraceOperation 038498 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[247]--------------------------------------------------
LocRoutine 038500:
  MakeRoutineFrame 0;
  Jump: 038501
LocOp 038501:
  TraceOperation 038501 (Call (Floc 040994) [] Sp);
  PushFrame 038501;
  JumpCall: 040994, #actuals: 0
LocReturn 038501:
  PushStack call_result;
  TraceOperation 038506 (Je [Var Sp,Con 1] (Branch F Dfalse));
  PopStack popped1;
  if (Equal(popped1,1)) {
    TraceOperation 038510 (Je [Var (Global 201),Con 69] (Branch F (Dloc 038693)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    if (Equal(MakeHiLo(b2,b3),69)) {
      TraceOperation 038515 (Test_attr (Con 69) (Con 21) (Branch F (Dloc 038693)));
      Let b4 = M[001374];
      if (TestBit(b4,2)) {
        TraceOperation 038520 (Clear_attr (Con 69) (Con 21));
        Let b5 = M[001374];
        SetByte 001374 ClearBit(b5,2);
        TraceOperation 038523 (Clear_attr (Con 69) (Con 27));
        Let b6 = M[001375];
        SetByte 001375 ClearBit(b6,4);
        TraceOperation 038526 (Store (Con 111) (Con 1));
        SetByte 008098 0;
        SetByte 008099 1;
        TraceOperation 038529 (Call (Floc 022320) [Con -14685,Con 6] Sp);
        PushFrame 038529;
        SetLocal 1 -14685;
        SetLocal 2 6;
        JumpCall: 022320, #actuals: 2
      } else {
        Jump: 038693
      }
    } else {
      Jump: 038693
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocReturn 038529:
  PushStack call_result;
  TraceOperation 038537 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 038542 (Call (Floc 022320) [Con -27122,Con 2] Sp);
  PushFrame 038542;
  SetLocal 1 -27122;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 038542:
  PushStack call_result;
  TraceOperation 038550 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 038555 (Print "You remove the ");
  GamePrint "You remove the ";
  TraceOperation 038564 (Print_obj (Con 69));
  Let b2 = M[001379];
  Let b3 = M[001380];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 038566 (Print_ret ", improving Arthur's appearance greatly. He is clearly touched, and starts happily to chat away to you. You discover that he is only slightly more interesting to talk to than an averagely interesting wall.");
    GamePrint ", improving Arthur's appearance greatly. He is clearly touched, and starts happily to chat away to you. You discover that he is only slightly more interesting to talk to than an averagely interesting wall.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 038566 (Print_ret ", improving Arthur's appearance greatly. He is clearly touched, and starts happily to chat away to you. You discover that he is only slightly more interesting to talk to than an averagely interesting wall.");
    GamePrint ", improving Arthur's appearance greatly. He is clearly touched, and starts happily to chat away to you. You discover that he is only slightly more interesting to talk to than an averagely interesting wall.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
LocOp 038693:
  TraceOperation 038693 (Je [Var (Global 201),Var (Global 96)] (Branch F (Dloc 038764)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008100];
  Let b4 = M[008101];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 038698 (Clear_attr (Var (Global 96)) (Con 27));
    Let b5 = M[008100];
    Let b6 = M[008101];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),3)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),3) ClearBit(b7,4);
    TraceOperation 038701 (Call (Floc 043468) [Con 72] Sp);
    PushFrame 038701;
    SetLocal 1 72;
    JumpCall: 043468, #actuals: 1
  } else {
    Jump: 038764
  }
LocReturn 038701:
  PushStack call_result;
  TraceOperation 038707 (Jz (Var Sp) (Branch F (Dloc 038719)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 038710 (Store (Con 112) (Con 72));
    SetByte 008100 0;
    SetByte 008101 72;
    TraceOperation 038713 (Clear_attr (Con 70) (Con 5));
    Let b2 = M[001381];
    SetByte 001381 ClearBit(b2,2);
    TraceOperation 038716 (Jump 038799);
    Jump: 038799
  } else {
    Jump: 038719
  }
LocOp 038719:
  TraceOperation 038719 (Call (Floc 043468) [Con 193] Sp);
  PushFrame 038719;
  SetLocal 1 193;
  JumpCall: 043468, #actuals: 1
LocReturn 038719:
  PushStack call_result;
  TraceOperation 038725 (Jz (Var Sp) (Branch F (Dloc 038737)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 038728 (Store (Con 112) (Con 193));
    SetByte 008100 0;
    SetByte 008101 193;
    TraceOperation 038731 (Clear_attr (Con 70) (Con 5));
    Let b2 = M[001381];
    SetByte 001381 ClearBit(b2,2);
    TraceOperation 038734 (Jump 038799);
    Jump: 038799
  } else {
    Jump: 038737
  }
LocOp 038737:
  TraceOperation 038737 (Call (Floc 043468) [Con 71] Sp);
  PushFrame 038737;
  SetLocal 1 71;
  JumpCall: 043468, #actuals: 1
LocReturn 038737:
  PushStack call_result;
  TraceOperation 038743 (Jz (Var Sp) (Branch F (Dloc 038755)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 038746 (Store (Con 112) (Con 71));
    SetByte 008100 0;
    SetByte 008101 71;
    TraceOperation 038749 (Clear_attr (Con 70) (Con 5));
    Let b2 = M[001381];
    SetByte 001381 ClearBit(b2,2);
    TraceOperation 038752 (Jump 038799);
    Jump: 038799
  } else {
    Jump: 038755
  }
LocOp 038755:
  TraceOperation 038755 (Store (Con 112) (Con 0));
  SetByte 008100 0;
  SetByte 008101 0;
  TraceOperation 038758 (Clear_attr (Con 70) (Con 27));
  Let b1 = M[001384];
  SetByte 001384 ClearBit(b1,4);
  TraceOperation 038761 (Jump 038799);
  Jump: 038799
LocOp 038764:
  TraceOperation 038764 (Je [Var (Global 201),Con 158] (Branch F (Dloc 038786)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),158)) {
    TraceOperation 038768 (Jz (Var (Global 117)) (Branch T (Dloc 038786)));
    Let b3 = M[008142];
    Let b4 = M[008143];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 038786
    } else {
      TraceOperation 038771 (Clear_attr (Con 158) (Con 21));
      Let b5 = M[002175];
      SetByte 002175 ClearBit(b5,2);
      TraceOperation 038774 (Clear_attr (Con 158) (Con 27));
      Let b6 = M[002176];
      SetByte 002176 ClearBit(b6,4);
      TraceOperation 038777 (Set_attr (Con 158) (Con 23));
      Let b7 = M[002175];
      SetByte 002175 SetBit(b7,0);
      TraceOperation 038780 (Store (Con 133) (Con 0));
      SetByte 008142 0;
      SetByte 008143 0;
      TraceOperation 038783 (Jump 038799);
      Jump: 038799
    }
  } else {
    Jump: 038786
  }
LocOp 038786:
  TraceOperation 038786 (Je [Var (Global 201),Var (Global 116)] (Branch F (Dloc 038799)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008140];
  Let b4 = M[008141];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 038790 (Store (Con 132) (Con 0));
    SetByte 008140 0;
    SetByte 008141 0;
    TraceOperation 038793 (Clear_attr (Var (Global 201)) (Con 21));
    Let b5 = M[008310];
    Let b6 = M[008311];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),2)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),2) ClearBit(b7,2);
    TraceOperation 038796 (Clear_attr (Var (Global 201)) (Con 27));
    Let b8 = M[008310];
    Let b9 = M[008311];
    Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),3)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),3) ClearBit(b10,4);
    Jump: 038799
  } else {
    Jump: 038799
  }
LocOp 038799:
  TraceOperation 038799 (Je [Var (Global 201),Con 141] (Branch F (Dloc 038821)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),141)) {
    TraceOperation 038803 (Jz (Var (Global 115)) (Branch T (Dloc 038821)));
    Let b3 = M[008138];
    Let b4 = M[008139];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 038821
    } else {
      TraceOperation 038806 (Insert_obj (Var (Global 115)) (Var (Global 0)));
      Let b5 = M[008138];
      Let b6 = M[008139];
      Let b7 = M[007908];
      Let b8 = M[007909];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      if (IsZero(Widen(b9))) {
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) b8;
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b10));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) b6;
        TraceOperation 038809 (Clear_attr (Var (Global 115)) (Con 27));
        Let b11 = M[008138];
        Let b12 = M[008139];
        Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),3)];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),3) ClearBit(b13,4);
        TraceOperation 038812 (Clear_attr (Var (Global 115)) (Con 21));
        Let b14 = M[008138];
        Let b15 = M[008139];
        Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),2)];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),2) ClearBit(b16,2);
        TraceOperation 038815 (Store (Con 131) (Con 0));
        SetByte 008138 0;
        SetByte 008139 0;
        TraceOperation 038818 (Jump 038834);
        Jump: 038834
      } else {
        Let b17 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
        if (Equal(Widen(b17),MakeHiLo(b5,b6))) {
          Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b18));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) b8;
          Let b19 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b19));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) b6;
          TraceOperation 038809 (Clear_attr (Var (Global 115)) (Con 27));
          Let b20 = M[008138];
          Let b21 = M[008139];
          Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b20,b21),9)),3)];
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b20,b21),9)),3) ClearBit(b22,4);
          TraceOperation 038812 (Clear_attr (Var (Global 115)) (Con 21));
          Let b23 = M[008138];
          Let b24 = M[008139];
          Let b25 = M[Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),2)];
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),2) ClearBit(b25,2);
          TraceOperation 038815 (Store (Con 131) (Con 0));
          SetByte 008138 0;
          SetByte 008139 0;
          TraceOperation 038818 (Jump 038834);
          Jump: 038834
        } else {
          Error: unlink/loop
        }
      }
    }
  } else {
    Jump: 038821
  }
LocOp 038821:
  TraceOperation 038821 (Je [Var (Global 201),Var (Global 115)] (Branch F (Dloc 038834)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008138];
  Let b4 = M[008139];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 038825 (Clear_attr (Var (Global 115)) (Con 27));
    Let b5 = M[008138];
    Let b6 = M[008139];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),3)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),3) ClearBit(b7,4);
    TraceOperation 038828 (Clear_attr (Var (Global 115)) (Con 21));
    Let b8 = M[008138];
    Let b9 = M[008139];
    Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),2)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),2) ClearBit(b10,2);
    TraceOperation 038831 (Store (Con 131) (Con 0));
    SetByte 008138 0;
    SetByte 008139 0;
    Jump: 038834
  } else {
    Jump: 038834
  }
LocOp 038834:
  TraceOperation 038834 (Print_ret "Taken.");
  GamePrint "Taken.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[248]--------------------------------------------------
LocRoutine 038842:
  MakeRoutineFrame 0;
  Jump: 038843
LocOp 038843:
  TraceOperation 038843 (Test_attr (Var (Global 201)) (Con 9) (Branch F (Dloc 038879)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,6)) {
    TraceOperation 038847 (Clear_attr (Var (Global 201)) (Con 9));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),1)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),1) ClearBit(b6,6);
    TraceOperation 038850 (Print "Okay, you're no longer wearing");
    GamePrint "Okay, you're no longer wearing";
    TraceOperation 038869 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b7 = M[008310];
    Let b8 = M[008311];
    PushFrame 038869;
    SetLocal 1 MakeHiLo(b7,b8);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 038879
  }
LocReturn 038869:
  PushStack call_result;
  TraceOperation 038876 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038879:
  TraceOperation 038879 (Print_ret "You aren't wearing that!");
  GamePrint "You aren't wearing that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[249]--------------------------------------------------
LocRoutine 038896:
  MakeRoutineFrame 0;
  Jump: 038897
LocOp 038897:
  TraceOperation 038897 (Print_ret "You can't. At least, not in this game you can't.");
  GamePrint "You can't. At least, not in this game you can't.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[250]--------------------------------------------------
LocRoutine 038926:
  MakeRoutineFrame 0;
  Jump: 038927
LocOp 038927:
  TraceOperation 038927 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 038993)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 038932 (Jz (Var (Global 192)) (Branch T (Dloc 038942)));
    Let b4 = M[008292];
    Let b5 = M[008293];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 038942
    } else {
      TraceOperation 038935 (Store (Con 211) (Var (Global 201)));
      Let b6 = M[008310];
      Let b7 = M[008311];
      SetByte 008298 b6;
      SetByte 008299 b7;
      TraceOperation 038938 (Get_parent (Var (Global 195)) (Global 0));
      Let b8 = M[008298];
      Let b9 = M[008299];
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),4)];
      SetByte 007908 HiByte(Widen(b10));
      SetByte 007909 LoByte(Widen(b10));
      TraceOperation 038941 Rtrue;
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    }
  } else {
    Jump: 038993
  }
LocOp 038942:
  TraceOperation 038942 (Print "Hmmm ...");
  GamePrint "Hmmm ...";
  TraceOperation 038951 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 038951;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 038951:
  PushStack call_result;
  TraceOperation 038958 (Print_ret " looks at you expectantly, as if you seemed to be about to talk.");
  GamePrint " looks at you expectantly, as if you seemed to be about to talk.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 038993:
  TraceOperation 038993 (Print "You can't talk to");
  GamePrint "You can't talk to";
  TraceOperation 039002 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 039002;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 039002:
  PushStack call_result;
  TraceOperation 039008 (Print "!");
  GamePrint "!";
  TraceOperation 039011 New_line;
  GamePrint "\n";
  TraceOperation 039012 (Call (Floc 043634) [] Sp);
  PushFrame 039012;
  JumpCall: 043634, #actuals: 0
LocReturn 039012:
  PushStack call_result;
  TraceOperation 039017 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[251]--------------------------------------------------
LocRoutine 039018:
  MakeRoutineFrame 0;
  Jump: 039019
LocOp 039019:
  TraceOperation 039019 (Je [Var (Global 201),Con 30] (Branch F (Dloc 039031)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 039023 (Call (Floc 022042) [Con 174,Var (Global 202)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame 039023;
    SetLocal 1 174;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 039031
  }
LocReturn 039023:
  PushStack call_result;
  TraceOperation 039030 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039031:
  TraceOperation 039031 (Print "It doesn't look like");
  GamePrint "It doesn't look like";
  TraceOperation 039042 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 039042;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 039042:
  PushStack call_result;
  TraceOperation 039049 (Print_ret " is interested.");
  GamePrint " is interested.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[252]--------------------------------------------------
LocRoutine 039060:
  MakeRoutineFrame 0;
  Jump: 039061
LocOp 039061:
  TraceOperation 039061 (Print_ret "That sentence isn't one I recognise.");
  GamePrint "That sentence isn't one I recognise.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[253]--------------------------------------------------
LocRoutine 039084:
  MakeRoutineFrame 0;
  Jump: 039085
LocOp 039085:
  TraceOperation 039085 (Call (Floc 039060) [] Sp);
  PushFrame 039085;
  JumpCall: 039060, #actuals: 0
LocReturn 039085:
  PushStack call_result;
  TraceOperation 039090 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[254]--------------------------------------------------
LocRoutine 039092:
  MakeRoutineFrame 0;
  Jump: 039093
LocOp 039093:
  TraceOperation 039093 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 039130)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 039097 (Print "You do so, but");
    GamePrint "You do so, but";
    TraceOperation 039106 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 039106;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 039130
  }
LocReturn 039106:
  PushStack call_result;
  TraceOperation 039113 (Print_ret " seems less than overjoyed.");
  GamePrint " seems less than overjoyed.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039130:
  TraceOperation 039130 (Call (Floc 030950) [] Sp);
  PushFrame 039130;
  JumpCall: 030950, #actuals: 0
LocReturn 039130:
  PushStack call_result;
  TraceOperation 039135 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[255]--------------------------------------------------
LocRoutine 039136:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 039139
LocOp 039139:
  TraceOperation 039139 (Test_attr (Var (Global 201)) (Con 28) (Branch F (Dloc 039156)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    TraceOperation 039143 (Call (Floc 043430) [Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 039143;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 043430, #actuals: 1
  } else {
    Jump: 039156
  }
LocReturn 039143:
  PushStack call_result;
  TraceOperation 039149 (Call (Floc 043620) [Var Sp] Sp);
  PopStack popped1;
  PushFrame 039149;
  SetLocal 1 popped1;
  JumpCall: 043620, #actuals: 1
LocReturn 039149:
  PushStack call_result;
  TraceOperation 039155 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039156:
  TraceOperation 039156 (Test_attr (Var (Global 201)) (Con 12) (Branch F (Dloc 039168)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,3)) {
    TraceOperation 039160 (Call (Floc 022042) [Con 28,Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 039160;
    SetLocal 1 28;
    SetLocal 2 MakeHiLo(b4,b5);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 039168
  }
LocReturn 039160:
  PushStack call_result;
  TraceOperation 039167 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039168:
  TraceOperation 039168 (Test_attr (Var (Global 201)) (Con 25) (Branch T (Dloc 039211)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,6)) {
    Jump: 039211
  } else {
    TraceOperation 039172 (Print "You hit your head against");
    GamePrint "You hit your head against";
    TraceOperation 039187 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 039187;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  }
LocReturn 039187:
  PushStack call_result;
  TraceOperation 039194 (Print_ret " as you attempt this feat.");
  GamePrint " as you attempt this feat.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039211:
  TraceOperation 039211 (Jin (Var (Global 201)) (Var (Global 195)) (Branch F (Dloc 039223)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008298];
  Let b4 = M[008299];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 039215 (Call (Floc 022042) [Con 61,Con 33] Sp);
    PushFrame 039215;
    SetLocal 1 61;
    SetLocal 2 33;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 039223
  }
LocReturn 039215:
  PushStack call_result;
  TraceOperation 039222 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[256]--------------------------------------------------
LocRoutine 039230:
  MakeRoutineFrame 0;
  Jump: 039231
LocOp 039231:
  TraceOperation 039231 (Je [Var (Global 201),Con 49] (Branch F (Dloc 039256)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 039235 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 039256)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 039239 (Call (Floc 043298) [Con 206] Sp);
      PushFrame 039239;
      SetLocal 1 206;
      JumpCall: 043298, #actuals: 1
    } else {
      Jump: 039256
    }
  } else {
    Jump: 039256
  }
LocReturn 039239:
  PushStack call_result;
  TraceOperation 039245 (Jz (Var Sp) (Branch T (Dloc 039256)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 039256
  } else {
    TraceOperation 039248 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame 039248;
    SetLocal 1 145;
    SetLocal 2 205;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 039248:
  PushStack call_result;
  TraceOperation 039255 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039256:
  TraceOperation 039256 (Test_attr (Var (Global 201)) (Con 16) (Branch T Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,7)) {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  } else {
    TraceOperation 039260 (Call (Floc 041208) [] Sp);
    PushFrame 039260;
    JumpCall: 041208, #actuals: 0
  }
LocReturn 039260:
  PushStack call_result;
  TraceOperation 039265 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 039268 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[257]--------------------------------------------------
LocRoutine 039270:
  MakeRoutineFrame 0;
  Jump: 039271
LocOp 039271:
  TraceOperation 039271 (Je [Var (Global 0),Con 121] (Branch F (Dloc 039315)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 039275 (Insert_obj (Var (Global 201)) (Con 219));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
    if (IsZero(Widen(b5))) {
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) 219;
      Let b6 = M[002728];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b6));
      SetByte 002728 b4;
      TraceOperation 039278 (Print_paddr (Var (Global 9)));
      Let b7 = M[007926];
      Let b8 = M[007927];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
      TraceOperation 039280 (Print "collects");
      GamePrint "collects";
      TraceOperation 039287 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
      Let b9 = M[008310];
      Let b10 = M[008311];
      PushFrame 039287;
      SetLocal 1 MakeHiLo(b9,b10);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    } else {
      Let b11 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b11),MakeHiLo(b3,b4))) {
        Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b12));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) 219;
        Let b13 = M[002728];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b13));
        SetByte 002728 b4;
        TraceOperation 039278 (Print_paddr (Var (Global 9)));
        Let b14 = M[007926];
        Let b15 = M[007927];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b14,b15)));
        TraceOperation 039280 (Print "collects");
        GamePrint "collects";
        TraceOperation 039287 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
        Let b16 = M[008310];
        Let b17 = M[008311];
        PushFrame 039287;
        SetLocal 1 MakeHiLo(b16,b17);
        SetLocal 2 1;
        JumpCall: 043738, #actuals: 2
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 039315
  }
LocReturn 039287:
  PushStack call_result;
  TraceOperation 039294 (Print_ret " in mid-air, and flashes away.");
  GamePrint " in mid-air, and flashes away.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039315:
  TraceOperation 039315 (Je [Var (Global 0),Con 81,Con 175] (Branch F (Dloc 039329)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(Equal(MakeHiLo(b1,b2),81),Equal(MakeHiLo(b1,b2),175))) {
    TraceOperation 039321 (Call (Floc 022042) [Con 53,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 039321;
    SetLocal 1 53;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 039329
  }
LocReturn 039321:
  PushStack call_result;
  TraceOperation 039328 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039329:
  TraceOperation 039329 (Jz (Var (Global 202)) (Branch T (Dloc 039344)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 039344
  } else {
    TraceOperation 039332 (Insert_obj (Var (Global 201)) (Var (Global 0)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[007908];
    Let b6 = M[007909];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
    if (IsZero(Widen(b7))) {
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) b6;
      Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b8));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) b4;
      TraceOperation 039335 (Print_ret "You missed.");
      GamePrint "You missed.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Let b10 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b10),MakeHiLo(b3,b4))) {
        Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b11));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) b6;
        Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b12));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) b4;
        TraceOperation 039335 (Print_ret "You missed.");
        GamePrint "You missed.\n";
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 039344:
  TraceOperation 039344 (Insert_obj (Var (Global 201)) (Var (Global 0)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 039347 (Print_ret "Thrown.");
    GamePrint "Thrown.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    Let b8 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b8),MakeHiLo(b1,b2))) {
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b9));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b10));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 039347 (Print_ret "Thrown.");
      GamePrint "Thrown.\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    } else {
      Error: unlink/loop
    }
  }
--[258]--------------------------------------------------
LocRoutine 039354:
  MakeRoutineFrame 0;
  Jump: 039355
LocOp 039355:
  TraceOperation 039355 (Print_ret "You can't do that!");
  GamePrint "You can't do that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[259]--------------------------------------------------
LocRoutine 039366:
  MakeRoutineFrame 0;
  Jump: 039367
LocOp 039367:
  TraceOperation 039367 (Je [Var (Global 201),Con 139] (Branch F (Dloc 039377)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 039371 (Call (Floc 028824) [] Sp);
    PushFrame 039371;
    JumpCall: 028824, #actuals: 0
  } else {
    Jump: 039377
  }
LocReturn 039371:
  PushStack call_result;
  TraceOperation 039376 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039377:
  TraceOperation 039377 (Call (Floc 039060) [] Sp);
  PushFrame 039377;
  JumpCall: 039060, #actuals: 0
LocReturn 039377:
  PushStack call_result;
  TraceOperation 039382 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[260]--------------------------------------------------
LocRoutine 039384:
  MakeRoutineFrame 0;
  Jump: 039385
LocOp 039385:
  TraceOperation 039385 (Print "You can't tie");
  GamePrint "You can't tie";
  TraceOperation 039392 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 039392;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 039392:
  PushStack call_result;
  TraceOperation 039398 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[261]--------------------------------------------------
LocRoutine 039402:
  MakeRoutineFrame 0;
  Jump: 039403
LocOp 039403:
  TraceOperation 039403 (Je [Var (Global 201),Con 157] (Branch F (Dloc 039415)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),157)) {
    TraceOperation 039407 (Call (Floc 022042) [Con 157,Con 157] Sp);
    PushFrame 039407;
    SetLocal 1 157;
    SetLocal 2 157;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 039415
  }
LocReturn 039407:
  PushStack call_result;
  TraceOperation 039414 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039415:
  TraceOperation 039415 (Call (Floc 039060) [] Sp);
  PushFrame 039415;
  JumpCall: 039060, #actuals: 0
LocReturn 039415:
  PushStack call_result;
  TraceOperation 039420 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[262]--------------------------------------------------
LocRoutine 039422:
  MakeRoutineFrame 0;
  Jump: 039423
LocOp 039423:
  TraceOperation 039423 (Je [Var (Global 201),Con 64] (Branch F (Dloc 039460)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 039427 (Print_ret "Try: STEER BOAT TOWARD (something).");
    GamePrint "Try: STEER BOAT TOWARD (something).\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 039460
  }
LocOp 039460:
  TraceOperation 039460 (Je [Var (Global 201),Con 217,Con 30] (Branch F (Dloc 039472)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(Equal(MakeHiLo(b1,b2),217),Equal(MakeHiLo(b1,b2),30))) {
    TraceOperation 039466 (Call (Floc 037638) [] Sp);
    PushFrame 039466;
    JumpCall: 037638, #actuals: 0
  } else {
    Jump: 039472
  }
LocReturn 039466:
  PushStack call_result;
  TraceOperation 039471 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039472:
  TraceOperation 039472 (Je [Var (Global 201),Con 49] (Branch F (Dloc 039497)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 039476 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 039497)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 039480 (Call (Floc 043298) [Con 206] Sp);
      PushFrame 039480;
      SetLocal 1 206;
      JumpCall: 043298, #actuals: 1
    } else {
      Jump: 039497
    }
  } else {
    Jump: 039497
  }
LocReturn 039480:
  PushStack call_result;
  TraceOperation 039486 (Jz (Var Sp) (Branch T (Dloc 039497)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 039497
  } else {
    TraceOperation 039489 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame 039489;
    SetLocal 1 145;
    SetLocal 2 205;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 039489:
  PushStack call_result;
  TraceOperation 039496 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039497:
  TraceOperation 039497 (Print_ret "This has no effect.");
  GamePrint "This has no effect.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[263]--------------------------------------------------
LocRoutine 039508:
  MakeRoutineFrame 0;
  Jump: 039509
LocOp 039509:
  TraceOperation 039509 (Je [Var (Global 0),Con 121] (Branch T (Dloc 039536)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    Jump: 039536
  } else {
    TraceOperation 039513 (Print "There's no ");
    GamePrint "There's no ";
    TraceOperation 039518 (Print_obj (Con 110));
    Let b3 = M[001748];
    Let b4 = M[001749];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 039520 (Print " in sight.");
      GamePrint " in sight.";
      TraceOperation 039529 New_line;
      GamePrint "\n";
      TraceOperation 039530 (Call (Floc 043634) [] Sp);
      PushFrame 039530;
      JumpCall: 043634, #actuals: 0
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 039520 (Print " in sight.");
      GamePrint " in sight.";
      TraceOperation 039529 New_line;
      GamePrint "\n";
      TraceOperation 039530 (Call (Floc 043634) [] Sp);
      PushFrame 039530;
      JumpCall: 043634, #actuals: 0
    }
  }
LocReturn 039530:
  PushStack call_result;
  TraceOperation 039535 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039536:
  TraceOperation 039536 (Jz (Var (Global 105)) (Branch F (Dloc 039550)));
  Let b1 = M[008118];
  Let b2 = M[008119];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 039539 (Jz (Var (Global 192)) (Branch T (Dloc 039550)));
    Let b3 = M[008292];
    Let b4 = M[008293];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 039550
    } else {
      TraceOperation 039542 (Call (Floc 022042) [Con 45,Con 181] Sp);
      PushFrame 039542;
      SetLocal 1 45;
      SetLocal 2 181;
      JumpCall: 022042, #actuals: 2
    }
  } else {
    Jump: 039550
  }
LocReturn 039542:
  PushStack call_result;
  TraceOperation 039549 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 039550:
  TraceOperation 039550 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039554 (Je [Var Sp,Con 15814] (Branch F (Dloc 039576)));
  PopStack popped7;
  if (Equal(popped7,15814)) {
    TraceOperation 039560 (Je [Var (Global 107),Con 1,Con 2] (Branch F (Dloc 039576)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),1),Equal(MakeHiLo(b8,b9),2))) {
      TraceOperation 039566 (Je [Var (Global 106),Con 1] (Branch F (Dloc 039576)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),1)) {
        TraceOperation 039570 (Call (Floc 080304) [] Sp);
        PushFrame 039570;
        JumpCall: 080304, #actuals: 0
      } else {
        Jump: 039576
      }
    } else {
      Jump: 039576
    }
  } else {
    Jump: 039576
  }
LocReturn 039570:
  PushStack call_result;
  TraceOperation 039575 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039576:
  TraceOperation 039576 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039580 (Je [Var Sp,Con 16955] (Branch F (Dloc 039602)));
  PopStack popped7;
  if (Equal(popped7,16955)) {
    TraceOperation 039586 (Je [Var (Global 107),Con 1,Con 2] (Branch F (Dloc 039602)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),1),Equal(MakeHiLo(b8,b9),2))) {
      TraceOperation 039592 (Je [Var (Global 106),Con 2] (Branch F (Dloc 039602)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),2)) {
        TraceOperation 039596 (Call (Floc 080304) [] Sp);
        PushFrame 039596;
        JumpCall: 080304, #actuals: 0
      } else {
        Jump: 039602
      }
    } else {
      Jump: 039602
    }
  } else {
    Jump: 039602
  }
LocReturn 039596:
  PushStack call_result;
  TraceOperation 039601 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039602:
  TraceOperation 039602 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039606 (Je [Var Sp,Con 20308] (Branch F (Dloc 039628)));
  PopStack popped7;
  if (Equal(popped7,20308)) {
    TraceOperation 039612 (Je [Var (Global 107),Con 1,Con 2] (Branch F (Dloc 039628)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),1),Equal(MakeHiLo(b8,b9),2))) {
      TraceOperation 039618 (Je [Var (Global 106),Con 3] (Branch F (Dloc 039628)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),3)) {
        TraceOperation 039622 (Call (Floc 080304) [] Sp);
        PushFrame 039622;
        JumpCall: 080304, #actuals: 0
      } else {
        Jump: 039628
      }
    } else {
      Jump: 039628
    }
  } else {
    Jump: 039628
  }
LocReturn 039622:
  PushStack call_result;
  TraceOperation 039627 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039628:
  TraceOperation 039628 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039632 (Je [Var Sp,Con 15926] (Branch F (Dloc 039654)));
  PopStack popped7;
  if (Equal(popped7,15926)) {
    TraceOperation 039638 (Je [Var (Global 107),Con 3,Con 4] (Branch F (Dloc 039654)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),3),Equal(MakeHiLo(b8,b9),4))) {
      TraceOperation 039644 (Je [Var (Global 106),Con 1] (Branch F (Dloc 039654)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),1)) {
        TraceOperation 039648 (Call (Floc 080304) [] Sp);
        PushFrame 039648;
        JumpCall: 080304, #actuals: 0
      } else {
        Jump: 039654
      }
    } else {
      Jump: 039654
    }
  } else {
    Jump: 039654
  }
LocReturn 039648:
  PushStack call_result;
  TraceOperation 039653 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039654:
  TraceOperation 039654 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039658 (Je [Var Sp,Con 17200] (Branch F (Dloc 039680)));
  PopStack popped7;
  if (Equal(popped7,17200)) {
    TraceOperation 039664 (Je [Var (Global 107),Con 3,Con 4] (Branch F (Dloc 039680)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),3),Equal(MakeHiLo(b8,b9),4))) {
      TraceOperation 039670 (Je [Var (Global 106),Con 2] (Branch F (Dloc 039680)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),2)) {
        TraceOperation 039674 (Call (Floc 080304) [] Sp);
        PushFrame 039674;
        JumpCall: 080304, #actuals: 0
      } else {
        Jump: 039680
      }
    } else {
      Jump: 039680
    }
  } else {
    Jump: 039680
  }
LocReturn 039674:
  PushStack call_result;
  TraceOperation 039679 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039680:
  TraceOperation 039680 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039684 (Je [Var Sp,Con 19594] (Branch F (Dloc 039706)));
  PopStack popped7;
  if (Equal(popped7,19594)) {
    TraceOperation 039690 (Je [Var (Global 107),Con 3,Con 4] (Branch F (Dloc 039706)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),3),Equal(MakeHiLo(b8,b9),4))) {
      TraceOperation 039696 (Je [Var (Global 106),Con 3] (Branch F (Dloc 039706)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),3)) {
        TraceOperation 039700 (Call (Floc 080304) [] Sp);
        PushFrame 039700;
        JumpCall: 080304, #actuals: 0
      } else {
        Jump: 039706
      }
    } else {
      Jump: 039706
    }
  } else {
    Jump: 039706
  }
LocReturn 039700:
  PushStack call_result;
  TraceOperation 039705 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039706:
  TraceOperation 039706 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039710 (Je [Var Sp,Con 14302] (Branch F (Dloc 039732)));
  PopStack popped7;
  if (Equal(popped7,14302)) {
    TraceOperation 039716 (Je [Var (Global 107),Con 5,Con 6] (Branch F (Dloc 039732)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),5),Equal(MakeHiLo(b8,b9),6))) {
      TraceOperation 039722 (Je [Var (Global 106),Con 1] (Branch F (Dloc 039732)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),1)) {
        TraceOperation 039726 (Call (Floc 080304) [] Sp);
        PushFrame 039726;
        JumpCall: 080304, #actuals: 0
      } else {
        Jump: 039732
      }
    } else {
      Jump: 039732
    }
  } else {
    Jump: 039732
  }
LocReturn 039726:
  PushStack call_result;
  TraceOperation 039731 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039732:
  TraceOperation 039732 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039736 (Je [Var Sp,Con 17151] (Branch F (Dloc 039758)));
  PopStack popped7;
  if (Equal(popped7,17151)) {
    TraceOperation 039742 (Je [Var (Global 107),Con 5,Con 6] (Branch F (Dloc 039758)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),5),Equal(MakeHiLo(b8,b9),6))) {
      TraceOperation 039748 (Je [Var (Global 106),Con 2] (Branch F (Dloc 039758)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),2)) {
        TraceOperation 039752 (Call (Floc 080304) [] Sp);
        PushFrame 039752;
        JumpCall: 080304, #actuals: 0
      } else {
        Jump: 039758
      }
    } else {
      Jump: 039758
    }
  } else {
    Jump: 039758
  }
LocReturn 039752:
  PushStack call_result;
  TraceOperation 039757 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039758:
  TraceOperation 039758 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039762 (Je [Var Sp,Con 20028] (Branch F (Dloc 039784)));
  PopStack popped7;
  if (Equal(popped7,20028)) {
    TraceOperation 039768 (Je [Var (Global 107),Con 5,Con 6] (Branch F (Dloc 039784)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),5),Equal(MakeHiLo(b8,b9),6))) {
      TraceOperation 039774 (Je [Var (Global 106),Con 3] (Branch F (Dloc 039784)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),3)) {
        TraceOperation 039778 (Call (Floc 080304) [] Sp);
        PushFrame 039778;
        JumpCall: 080304, #actuals: 0
      } else {
        Jump: 039784
      }
    } else {
      Jump: 039784
    }
  } else {
    Jump: 039784
  }
LocReturn 039778:
  PushStack call_result;
  TraceOperation 039783 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039784:
  TraceOperation 039784 (Jz (Var (Global 192)) (Branch F (Dloc 039814)));
  Let b1 = M[008292];
  Let b2 = M[008293];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 039787 (Print_ret "You didn't specify what you wanted to type.");
    GamePrint "You didn't specify what you wanted to type.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 039814
  }
LocOp 039814:
  TraceOperation 039814 (Call (Floc 022042) [Con 45,Con 181] Sp);
  PushFrame 039814;
  SetLocal 1 45;
  SetLocal 2 181;
  JumpCall: 022042, #actuals: 2
LocReturn 039814:
  PushStack call_result;
  TraceOperation 039821 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
--[264]--------------------------------------------------
LocRoutine 039824:
  MakeRoutineFrame 0;
  Jump: 039825
LocOp 039825:
  TraceOperation 039825 (Je [Var (Global 201),Con 110] (Branch F (Dloc 039838)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),110)) {
    TraceOperation 039829 (Store (Con 208) (Con 0));
    SetByte 008292 0;
    SetByte 008293 0;
    TraceOperation 039832 (Call (Floc 039508) [] Sp);
    PushFrame 039832;
    JumpCall: 039508, #actuals: 0
  } else {
    Jump: 039838
  }
LocReturn 039832:
  PushStack call_result;
  TraceOperation 039837 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 039838:
  TraceOperation 039838 (Print_ret "You can't type on that!");
  GamePrint "You can't type on that!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[265]--------------------------------------------------
LocRoutine 039852:
  MakeRoutineFrame 0;
  Jump: 039853
LocOp 039853:
  TraceOperation 039853 (Call (Floc 030950) [] Sp);
  PushFrame 039853;
  JumpCall: 030950, #actuals: 0
LocReturn 039853:
  PushStack call_result;
  TraceOperation 039858 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[266]--------------------------------------------------
LocRoutine 039860:
  MakeRoutineFrame 0;
  Jump: 039861
LocOp 039861:
  TraceOperation 039861 (Je [Var (Global 201),Con 184,Con 185,Con 186] (Branch T (Dloc 039872)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),184),Equal(MakeHiLo(b1,b2),185)),Equal(MakeHiLo(b1,b2),186))) {
    Jump: 039872
  } else {
    TraceOperation 039868 (Je [Var (Global 201),Con 182] (Branch F (Dloc 039876)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),182)) {
      Jump: 039872
    } else {
      Jump: 039876
    }
  }
LocOp 039872:
  TraceOperation 039872 (Print_paddr (Var (Global 61)));
  Let b1 = M[008030];
  Let b2 = M[008031];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 039874 New_line;
  GamePrint "\n";
  TraceOperation 039875 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
LocOp 039876:
  TraceOperation 039876 (Call (Floc 031360) [] Sp);
  PushFrame 039876;
  JumpCall: 031360, #actuals: 0
LocReturn 039876:
  PushStack call_result;
  TraceOperation 039881 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[267]--------------------------------------------------
LocRoutine 039882:
  MakeRoutineFrame 0;
  Jump: 039883
LocOp 039883:
  TraceOperation 039883 (Call (Floc 030950) [] Sp);
  PushFrame 039883;
  JumpCall: 030950, #actuals: 0
LocReturn 039883:
  PushStack call_result;
  TraceOperation 039888 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[268]--------------------------------------------------
LocRoutine 039890:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 039901
LocOp 039901:
  TraceOperation 039901 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 039926)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001871];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 039905 (Je [Var (Global 201),Con 20,Con 18] (Branch T (Dloc 039926)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (LogOr(Equal(MakeHiLo(b4,b5),20),Equal(MakeHiLo(b4,b5),18))) {
      Jump: 039926
    } else {
      TraceOperation 039911 (Print_ret "You would be no safer there.");
      GamePrint "You would be no safer there.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 039926
  }
LocOp 039926:
  TraceOperation 039926 (Jz (Var (Global 86)) (Branch T (Dloc 039933)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 039933
  } else {
    TraceOperation 039929 (Print_paddr (Var (Global 50)));
    Let b3 = M[008008];
    Let b4 = M[008009];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 039931 New_line;
    GamePrint "\n";
    TraceOperation 039932 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 039933:
  TraceOperation 039933 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 040033)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 039938 (Store (Con 118) (Con 1));
    SetByte 008112 0;
    SetByte 008113 1;
    TraceOperation 039941 (Print "You stumble in that direction, but as you can't see where you're going you wander around in circles.");
    GamePrint "You stumble in that direction, but as you can't see where you're going you wander around in circles.";
    TraceOperation 039986 (Test_attr (Con 95) (Con 3) (Branch T (Dloc 040031)));
    Let b2 = M[001606];
    if (TestBit(b2,4)) {
      Jump: 040031
    } else {
      TraceOperation 039990 (Print " The Beast is getting puzzled that something it can't see is stumbling around its lair.");
      GamePrint " The Beast is getting puzzled that something it can't see is stumbling around its lair.";
      TraceOperation 040029 (Print_paddr (Var (Global 12)));
      Let b3 = M[007932];
      Let b4 = M[007933];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
      Jump: 040031
    }
  } else {
    Jump: 040033
  }
LocOp 040031:
  TraceOperation 040031 New_line;
  GamePrint "\n";
  TraceOperation 040032 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040033:
  TraceOperation 040033 (Je [Var (Global 0),Con 81] (Branch T (Dloc 040128)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),81)) {
    Jump: 040128
  } else {
    TraceOperation 040038 (Je [Var (Global 120),Con 123] (Branch F (Dloc 040128)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 040043 (Jz (Var (Global 97)) (Branch T (Dloc 040128)));
      Let b5 = M[008102];
      Let b6 = M[008103];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 040128
      } else {
        TraceOperation 040047 (Random (Con 100) Sp);
        LetRandom random7 100;
        PushStack random7;
        TraceOperation 040051 (Jl (Con 30) (Var Sp) (Branch T (Dloc 040128)));
        PopStack popped8;
        if (LessThan(30,popped8)) {
          Jump: 040128
        } else {
          TraceOperation 040056 (Print "You notice that you can't remember how to walk. Oddly, as you think about walking, all that comes to mind is an image of");
          GamePrint "You notice that you can't remember how to walk. Oddly, as you think about walking, all that comes to mind is an image of";
          TraceOperation 040119 (Call (Floc 043738) [Var (Global 97)] Sp);
          Let b9 = M[008102];
          Let b10 = M[008103];
          PushFrame 040119;
          SetLocal 1 MakeHiLo(b9,b10);
          JumpCall: 043738, #actuals: 1
        }
      }
    } else {
      Jump: 040128
    }
  }
LocReturn 040119:
  PushStack call_result;
  TraceOperation 040125 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040128:
  TraceOperation 040128 (Jz (Var (Global 175)) (Branch F (Dloc 040139)));
  Let b1 = M[008258];
  Let b2 = M[008259];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 040131 (Call (Floc 022042) [Con 21,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 040131;
    SetLocal 1 21;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 040139
  }
LocReturn 040131:
  PushStack call_result;
  TraceOperation 040138 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040139:
  TraceOperation 040139 (Get_prop_addr (Var (Global 0)) (Var (Global 201)) (Local 1));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[008310];
  Let b4 = M[008311];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Error: getPropsA
LocReturn 040158:
  PushStack call_result;
  TraceOperation 040164 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 040165:
  TraceOperation 040165 (Je [Var (Local 2),Con 2] (Branch F (Dloc 040178)));
  if (Equal(GetLocal(2),2)) {
    TraceOperation 040169 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),0)];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 040173 (Print_paddr (Var Sp));
    PopStack popped3;
    GamePrint GetText(PackedAddress Z3(popped3));
    TraceOperation 040175 New_line;
    GamePrint "\n";
    TraceOperation 040176 (Ret (Con 2));
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 2
  } else {
    Jump: 040178
  }
LocOp 040178:
  TraceOperation 040178 (Je [Var (Local 2),Con 3] (Branch F (Dloc 040210)));
  if (Equal(GetLocal(2),3)) {
    TraceOperation 040182 (Loadw (Var (Local 1)) (Con 0) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),0)];
    Let b2 = M[Offset(Offset(Address(GetLocal(1)),0),1)];
    PushStack MakeHiLo(b1,b2);
    TraceOperation 040186 (Call (Fvar Sp) [] (Local 5));
    PopStack popped3;
    if (IsZeroAddress(PackedAddress Z3(popped3))) {
      SetLocal 5 0;
      TraceOperation 040190 (Jz (Var (Local 5)) (Branch T (Dloc 040200)));
      if (IsZero(GetLocal(5))) {
        Jump: 040200
      } else {
        TraceOperation 040193 (Call (Floc 042574) [Var (Local 5)] Sp);
        PushFrame 040193;
        SetLocal 1 GetLocal(5);
        JumpCall: 042574, #actuals: 1
      }
    } else {
      PushFrame 040186;
      JumpCall: PackedAddress Z3(popped3), #actuals: 0
    }
  } else {
    Jump: 040210
  }
LocReturn 040186:
  SetLocal 5 call_result;
  TraceOperation 040190 (Jz (Var (Local 5)) (Branch T (Dloc 040200)));
  if (IsZero(GetLocal(5))) {
    Jump: 040200
  } else {
    TraceOperation 040193 (Call (Floc 042574) [Var (Local 5)] Sp);
    PushFrame 040193;
    SetLocal 1 GetLocal(5);
    JumpCall: 042574, #actuals: 1
  }
LocReturn 040193:
  PushStack call_result;
  TraceOperation 040199 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 040200:
  TraceOperation 040200 (Je [Var (Global 0),Con 201] (Branch F (Dloc 040208)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),201)) {
    TraceOperation 040204 (Je [Var (Global 175),Con 19] (Branch T Dtrue));
    Let b3 = M[008258];
    Let b4 = M[008259];
    if (Equal(MakeHiLo(b3,b4),19)) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 040208
    }
  } else {
    Jump: 040208
  }
LocOp 040208:
  TraceOperation 040208 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 040210:
  TraceOperation 040210 (Je [Var (Local 2),Con 4] (Branch F (Dloc 040252)));
  if (Equal(GetLocal(2),4)) {
    TraceOperation 040214 (Loadb (Var (Local 1)) (Con 1) Sp);
    Let b1 = M[Offset(Address(GetLocal(1)),1)];
    PushStack Widen(b1);
    TraceOperation 040218 (Load (Var Sp) Sp);
    PopStack popped2;
    if (IsZeroByte(LoByte(popped2))) {
      PopStack popped3;
      PushStack popped3;
      PushStack popped3;
      TraceOperation 040221 (Jz (Var Sp) (Branch T (Dloc 040235)));
      PopStack popped4;
      if (IsZero(popped4)) {
        Jump: 040235
      } else {
        TraceOperation 040224 (Loadb (Var (Local 1)) (Con 0) Sp);
        Let b5 = M[Offset(Address(GetLocal(1)),0)];
        PushStack Widen(b5);
        TraceOperation 040228 (Call (Floc 042574) [Var Sp] Sp);
        PopStack popped6;
        PushFrame 040228;
        SetLocal 1 popped6;
        JumpCall: 042574, #actuals: 1
      }
    } else {
      if (LessThanByte(LoByte(popped2),16)) {
        PushStack GetLocal(LoByte(popped2));
        TraceOperation 040221 (Jz (Var Sp) (Branch T (Dloc 040235)));
        PopStack popped7;
        if (IsZero(popped7)) {
          Jump: 040235
        } else {
          TraceOperation 040224 (Loadb (Var (Local 1)) (Con 0) Sp);
          Let b8 = M[Offset(Address(GetLocal(1)),0)];
          PushStack Widen(b8);
          TraceOperation 040228 (Call (Floc 042574) [Var Sp] Sp);
          PopStack popped9;
          PushFrame 040228;
          SetLocal 1 popped9;
          JumpCall: 042574, #actuals: 1
        }
      } else {
        Let b10 = M[Offset(007908,Mul(2,Widen(MinusByte(LoByte(popped2),16))))];
        Let b11 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(LoByte(popped2),16)))),1)];
        PushStack MakeHiLo(b10,b11);
        TraceOperation 040221 (Jz (Var Sp) (Branch T (Dloc 040235)));
        PopStack popped12;
        if (IsZero(popped12)) {
          Jump: 040235
        } else {
          TraceOperation 040224 (Loadb (Var (Local 1)) (Con 0) Sp);
          Let b13 = M[Offset(Address(GetLocal(1)),0)];
          PushStack Widen(b13);
          TraceOperation 040228 (Call (Floc 042574) [Var Sp] Sp);
          PopStack popped14;
          PushFrame 040228;
          SetLocal 1 popped14;
          JumpCall: 042574, #actuals: 1
        }
      }
    }
  } else {
    Jump: 040252
  }
LocReturn 040228:
  PushStack call_result;
  TraceOperation 040234 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 040235:
  TraceOperation 040235 (Loadw (Var (Local 1)) (Con 1) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(1)),2)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 040239 (Jz (Var (Local 3)) (Branch T (Dloc 040247)));
  if (IsZero(GetLocal(3))) {
    Jump: 040247
  } else {
    TraceOperation 040242 (Print_paddr (Var (Local 3)));
    GamePrint GetText(PackedAddress Z3(GetLocal(3)));
    TraceOperation 040244 New_line;
    GamePrint "\n";
    TraceOperation 040245 (Ret (Con 2));
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 2
  }
LocOp 040247:
  TraceOperation 040247 (Print_paddr (Var (Global 55)));
  Let b1 = M[008018];
  Let b2 = M[008019];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 040249 New_line;
  GamePrint "\n";
  TraceOperation 040250 (Ret (Con 2));
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 2
LocOp 040252:
  TraceOperation 040252 (Je [Var (Local 2),Con 5] (Branch F Dfalse));
  if (Equal(GetLocal(2),5)) {
    TraceOperation 040256 (Loadb (Var (Local 1)) (Con 1) (Local 4));
    Let b1 = M[Offset(Address(GetLocal(1)),1)];
    SetLocal 4 Widen(b1);
    TraceOperation 040260 (Test_attr (Var (Local 4)) (Con 23) (Branch F (Dloc 040275)));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),2)];
    if (TestBit(b2,0)) {
      TraceOperation 040264 (Loadb (Var (Local 1)) (Con 0) Sp);
      Let b3 = M[Offset(Address(GetLocal(1)),0)];
      PushStack Widen(b3);
      TraceOperation 040268 (Call (Floc 042574) [Var Sp] Sp);
      PopStack popped4;
      PushFrame 040268;
      SetLocal 1 popped4;
      JumpCall: 042574, #actuals: 1
    } else {
      Jump: 040275
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 040268:
  PushStack call_result;
  TraceOperation 040274 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 040275:
  TraceOperation 040275 (Loadw (Var (Local 1)) (Con 1) (Local 3));
  Let b1 = M[Offset(Address(GetLocal(1)),2)];
  Let b2 = M[Offset(Offset(Address(GetLocal(1)),2),1)];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 040279 (Jz (Var (Local 3)) (Branch T (Dloc 040290)));
  if (IsZero(GetLocal(3))) {
    Jump: 040290
  } else {
    TraceOperation 040282 (Print_paddr (Var (Local 3)));
    GamePrint GetText(PackedAddress Z3(GetLocal(3)));
    TraceOperation 040284 New_line;
    GamePrint "\n";
    TraceOperation 040285 (Store (Con 207) (Var (Local 4)));
    SetByte 008290 HiByte(GetLocal(4));
    SetByte 008291 LoByte(GetLocal(4));
    TraceOperation 040288 (Ret (Con 2));
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 2
  }
LocOp 040290:
  TraceOperation 040290 (Print "The ");
  GamePrint "The ";
  TraceOperation 040293 (Print_obj (Var (Local 4)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(4),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 040295 (Print " is closed.");
    GamePrint " is closed.";
    TraceOperation 040302 New_line;
    GamePrint "\n";
    TraceOperation 040303 (Store (Con 207) (Var (Local 4)));
    SetByte 008290 HiByte(GetLocal(4));
    SetByte 008291 LoByte(GetLocal(4));
    TraceOperation 040306 (Ret (Con 2));
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 2
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 040295 (Print " is closed.");
    GamePrint " is closed.";
    TraceOperation 040302 New_line;
    GamePrint "\n";
    TraceOperation 040303 (Store (Con 207) (Var (Local 4)));
    SetByte 008290 HiByte(GetLocal(4));
    SetByte 008291 LoByte(GetLocal(4));
    TraceOperation 040306 (Ret (Con 2));
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 2
  }
LocOp 040308:
  TraceOperation 040308 (Je [Var (Global 201),Con 8,Con 26] (Branch F (Dloc 040321)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),26))) {
    TraceOperation 040314 (Call (Floc 040326) [] Sp);
    PushFrame 040314;
    JumpCall: 040326, #actuals: 0
  } else {
    Jump: 040321
  }
LocReturn 040314:
  PushStack call_result;
  TraceOperation 040319 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 040321:
  TraceOperation 040321 (Print_paddr (Var (Global 55)));
  Let b1 = M[008018];
  Let b2 = M[008019];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 040323 New_line;
  GamePrint "\n";
  TraceOperation 040324 (Ret (Con 2));
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 2
--[269]--------------------------------------------------
LocRoutine 040326:
  MakeRoutineFrame 0;
  Jump: 040327
LocOp 040327:
  TraceOperation 040327 (Store (Con 229) (Con 16));
  SetByte 008334 0;
  SetByte 008335 16;
  TraceOperation 040330 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame 040330;
  SetLocal 1 -14349;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 040330:
  PushStack call_result;
  TraceOperation 040338 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 040343 (Print_ret "Did you have any particular direction in mind?");
  GamePrint "Did you have any particular direction in mind?\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[270]--------------------------------------------------
LocRoutine 040372:
  MakeRoutineFrame 0;
  Jump: 040373
LocOp 040373:
  TraceOperation 040373 (Jin (Var (Global 201)) (Var (Global 0)) (Branch T (Dloc 040387)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 040387 (Je [Var (Global 201),Con 70,Con 194] (Branch F (Dloc 040401)));
    Let b6 = M[008310];
    Let b7 = M[008311];
    if (LogOr(Equal(MakeHiLo(b6,b7),70),Equal(MakeHiLo(b6,b7),194))) {
      TraceOperation 040393 (Print "She");
      GamePrint "She";
      TraceOperation 040398 (Jump 040421);
      Jump: 040421
    } else {
      Jump: 040401
    }
  } else {
    TraceOperation 040377 (Call (Floc 043522) [Var (Global 201),Var (Global 0)] Sp);
    Let b8 = M[008310];
    Let b9 = M[008311];
    Let b10 = M[007908];
    Let b11 = M[007909];
    PushFrame 040377;
    SetLocal 1 MakeHiLo(b8,b9);
    SetLocal 2 MakeHiLo(b10,b11);
    JumpCall: 043522, #actuals: 2
  }
LocReturn 040377:
  PushStack call_result;
  TraceOperation 040384 (Jz (Var Sp) (Branch T (Dloc 040428)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 040428
  } else {
    TraceOperation 040387 (Je [Var (Global 201),Con 70,Con 194] (Branch F (Dloc 040401)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    if (LogOr(Equal(MakeHiLo(b2,b3),70),Equal(MakeHiLo(b2,b3),194))) {
      TraceOperation 040393 (Print "She");
      GamePrint "She";
      TraceOperation 040398 (Jump 040421);
      Jump: 040421
    } else {
      Jump: 040401
    }
  }
LocOp 040401:
  TraceOperation 040401 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 040418)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 040405 (Je [Var (Global 201),Con 95,Con 216,Con 209] (Branch T (Dloc 040418)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),95),Equal(MakeHiLo(b4,b5),216)),Equal(MakeHiLo(b4,b5),209))) {
      Jump: 040418
    } else {
      TraceOperation 040412 (Print "He");
      GamePrint "He";
      TraceOperation 040415 (Jump 040421);
      Jump: 040421
    }
  } else {
    Jump: 040418
  }
LocOp 040418:
  TraceOperation 040418 (Print "It");
  GamePrint "It";
  Jump: 040421
LocOp 040421:
  TraceOperation 040421 (Print_ret "'s here!");
  GamePrint "'s here!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040428:
  TraceOperation 040428 (Call (Floc 040326) [] Sp);
  PushFrame 040428;
  JumpCall: 040326, #actuals: 0
LocReturn 040428:
  PushStack call_result;
  TraceOperation 040433 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[271]--------------------------------------------------
LocRoutine 040434:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 3;
  }
  Jump: 040437
LocOp 040437:
  TraceOperation 040437 (Print "Time passes...");
  GamePrint "Time passes...";
  TraceOperation 040450 New_line;
  GamePrint "\n";
  Jump: 040451
LocOp 040451:
  TraceOperation 040451 (Dec_chk (Con 1) (Con 0) (Branch F (Dloc 040458)));
  if (LessThanEqual(GetLocal(1),0)) {
    SetLocal 1 Sub(GetLocal(1),1);
    TraceOperation 040455 (Jump 040467);
    Jump: 040467
  } else {
    SetLocal 1 Sub(GetLocal(1),1);
    Jump: 040458
  }
LocOp 040458:
  TraceOperation 040458 (Call (Floc 022394) [] Sp);
  PushFrame 040458;
  JumpCall: 022394, #actuals: 0
LocReturn 040458:
  PushStack call_result;
  TraceOperation 040463 (Jz (Var Sp) (Branch T (Dloc 040451)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 040451
  } else {
    Jump: 040467
  }
LocOp 040467:
  TraceOperation 040467 (Store (Con 241) (Con 1));
  SetByte 008358 0;
  SetByte 008359 1;
  TraceOperation 040470 (Ret (Var (Global 225)));
  Let b1 = M[008358];
  Let b2 = M[008359];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[272]--------------------------------------------------
LocRoutine 040472:
  MakeRoutineFrame 0;
  Jump: 040473
LocOp 040473:
  TraceOperation 040473 (Print_ret "You may be waiting quite a while.");
  GamePrint "You may be waiting quite a while.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[273]--------------------------------------------------
LocRoutine 040496:
  MakeRoutineFrame 0;
  Jump: 040497
LocOp 040497:
  TraceOperation 040497 (Print_ret "It doesn't need watering.");
  GamePrint "It doesn't need watering.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[274]--------------------------------------------------
LocRoutine 040512:
  MakeRoutineFrame 0;
  Jump: 040513
LocOp 040513:
  TraceOperation 040513 (Call (Floc 030950) [] Sp);
  PushFrame 040513;
  JumpCall: 030950, #actuals: 0
LocReturn 040513:
  PushStack call_result;
  TraceOperation 040518 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[275]--------------------------------------------------
LocRoutine 040520:
  MakeRoutineFrame 0;
  Jump: 040521
LocOp 040521:
  TraceOperation 040521 (Jz (Var (Global 201)) (Branch F (Dloc 040530)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 040524 (Call (Floc 037786) [] Sp);
    PushFrame 040524;
    JumpCall: 037786, #actuals: 0
  } else {
    Jump: 040530
  }
LocReturn 040524:
  PushStack call_result;
  TraceOperation 040529 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 040530:
  TraceOperation 040530 (Print "Despite your friendly nature,");
  GamePrint "Despite your friendly nature,";
  TraceOperation 040551 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 040551;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 040551:
  PushStack call_result;
  TraceOperation 040558 (Print_ret " isn't likely to respond.");
  GamePrint " isn't likely to respond.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[276]--------------------------------------------------
LocRoutine 040574:
  MakeRoutineFrame 0;
  Jump: 040575
LocOp 040575:
  TraceOperation 040575 (Test_attr (Var (Global 201)) (Con 10) (Branch T (Dloc 040596)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,5)) {
    Jump: 040596
  } else {
    TraceOperation 040579 (Print "You can't wear");
    GamePrint "You can't wear";
    TraceOperation 040586 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 040586;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  }
LocReturn 040586:
  PushStack call_result;
  TraceOperation 040593 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040596:
  TraceOperation 040596 (Test_attr (Var (Global 201)) (Con 9) (Branch F (Dloc 040619)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,6)) {
    TraceOperation 040600 (Print "You're already wearing");
    GamePrint "You're already wearing";
    TraceOperation 040609 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 040609;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 040619
  }
LocReturn 040609:
  PushStack call_result;
  TraceOperation 040616 (Print_ret "!");
  GamePrint "!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040619:
  TraceOperation 040619 (Insert_obj (Var (Global 201)) (Con 31));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 31;
    Let b4 = M[001036];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b4));
    SetByte 001036 b2;
    TraceOperation 040622 (Set_attr (Var (Global 201)) (Con 9));
    Let b5 = M[008310];
    Let b6 = M[008311];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),1)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),1) SetBit(b7,6);
    TraceOperation 040625 (Print "You are now wearing");
    GamePrint "You are now wearing";
    TraceOperation 040636 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b8 = M[008310];
    Let b9 = M[008311];
    PushFrame 040636;
    SetLocal 1 MakeHiLo(b8,b9);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Let b10 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
      Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b11));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 31;
      Let b12 = M[001036];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
      SetByte 001036 b2;
      TraceOperation 040622 (Set_attr (Var (Global 201)) (Con 9));
      Let b13 = M[008310];
      Let b14 = M[008311];
      Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),1)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),1) SetBit(b15,6);
      TraceOperation 040625 (Print "You are now wearing");
      GamePrint "You are now wearing";
      TraceOperation 040636 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
      Let b16 = M[008310];
      Let b17 = M[008311];
      PushFrame 040636;
      SetLocal 1 MakeHiLo(b16,b17);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    } else {
      Error: unlink/loop
    }
  }
LocReturn 040636:
  PushStack call_result;
  TraceOperation 040643 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[277]--------------------------------------------------
LocRoutine 040646:
  MakeRoutineFrame 0;
  Jump: 040647
LocOp 040647:
  TraceOperation 040647 (Print_ret "Good question.");
  GamePrint "Good question.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[278]--------------------------------------------------
LocRoutine 040660:
  MakeRoutineFrame 0;
  Jump: 040661
LocOp 040661:
  TraceOperation 040661 (Print_ret "Well, what about it?");
  GamePrint "Well, what about it?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[279]--------------------------------------------------
LocRoutine 040672:
  MakeRoutineFrame 0;
  Jump: 040673
LocOp 040673:
  TraceOperation 040673 (Call (Floc 039060) [] Sp);
  PushFrame 040673;
  JumpCall: 039060, #actuals: 0
LocReturn 040673:
  PushStack call_result;
  TraceOperation 040678 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[280]--------------------------------------------------
LocRoutine 040680:
  MakeRoutineFrame 0;
  Jump: 040681
LocOp 040681:
  TraceOperation 040681 (Call (Floc 032168) [Con 1] Sp);
  PushFrame 040681;
  SetLocal 1 1;
  JumpCall: 032168, #actuals: 1
LocReturn 040681:
  PushStack call_result;
  TraceOperation 040687 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[281]--------------------------------------------------
LocRoutine 040688:
  MakeRoutineFrame 0;
  Jump: 040689
LocOp 040689:
  TraceOperation 040689 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 040701)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 040693 (Call (Floc 022042) [Con 174,Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame 040693;
    SetLocal 1 174;
    SetLocal 2 MakeHiLo(b4,b5);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 040701
  }
LocReturn 040693:
  PushStack call_result;
  TraceOperation 040700 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040701:
  TraceOperation 040701 (Print_ret "That's not a person!");
  GamePrint "That's not a person!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[282]--------------------------------------------------
LocRoutine 040716:
  MakeRoutineFrame 0;
  Jump: 040717
LocOp 040717:
  TraceOperation 040717 (Print_ret "Why not?");
  GamePrint "Why not?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[283]--------------------------------------------------
LocRoutine 040726:
  MakeRoutineFrame 0;
  Jump: 040727
LocOp 040727:
  TraceOperation 040727 (Print_ret "You begin to get a sore throat.");
  GamePrint "You begin to get a sore throat.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[284]--------------------------------------------------
LocRoutine 040748:
  MakeRoutineFrame 0;
  Jump: 040749
LocOp 040749:
  TraceOperation 040749 (Je [Var (Global 213),Con 1] (Branch F (Dloc 040760)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 040753 (Call (Floc 043620) [Con 16] Sp);
    PushFrame 040753;
    SetLocal 1 16;
    JumpCall: 043620, #actuals: 1
  } else {
    Jump: 040760
  }
LocReturn 040753:
  PushStack call_result;
  TraceOperation 040759 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 040760:
  TraceOperation 040760 (Je [Var (Global 213),Con 2] (Branch T Dfalse));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),2)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 040764 (Je [Var (Global 213),Con 3] (Branch F (Dloc 040779)));
    Let b4 = M[008334];
    Let b5 = M[008335];
    if (Equal(MakeHiLo(b4,b5),3)) {
      TraceOperation 040768 (Print_ret "Well, tough.");
      GamePrint "Well, tough.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      Jump: 040779
    }
  }
LocOp 040779:
  TraceOperation 040779 (Je [Var (Global 213),Con 4] (Branch F (Dloc 040791)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 040783 (Call (Floc 022042) [Con 124,Var (Global 96)] Sp);
    Let b3 = M[008100];
    Let b4 = M[008101];
    PushFrame 040783;
    SetLocal 1 124;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 040791
  }
LocReturn 040783:
  PushStack call_result;
  TraceOperation 040790 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040791:
  TraceOperation 040791 (Je [Var (Global 213),Con 5] (Branch F (Dloc 040804)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 040795 (Print_ret "So do I.");
    GamePrint "So do I.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 040804
  }
LocOp 040804:
  TraceOperation 040804 (Je [Var (Global 213),Con 6,Con 8,Con 11] (Branch T (Dloc 040818)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),6),Equal(MakeHiLo(b1,b2),8)),Equal(MakeHiLo(b1,b2),11))) {
    Jump: 040818
  } else {
    TraceOperation 040811 (Je [Var (Global 213),Con 13,Con 14,Con 15] (Branch F (Dloc 040843)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),13),Equal(MakeHiLo(b3,b4),14)),Equal(MakeHiLo(b3,b4),15))) {
      Jump: 040818
    } else {
      Jump: 040843
    }
  }
LocOp 040818:
  TraceOperation 040818 (Print_ret "That was just a rhetorical question.");
  GamePrint "That was just a rhetorical question.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040843:
  TraceOperation 040843 (Je [Var (Global 213),Con 7,Con 9] (Branch F (Dloc 040862)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),7),Equal(MakeHiLo(b1,b2),9))) {
    TraceOperation 040849 (Print_ret "Well, good for you!");
    GamePrint "Well, good for you!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 040862
  }
LocOp 040862:
  TraceOperation 040862 (Je [Var (Global 213),Con 10] (Branch F (Dloc 040874)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 040866 (Call (Floc 022042) [Con 57,Con 142] Sp);
    PushFrame 040866;
    SetLocal 1 57;
    SetLocal 2 142;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 040874
  }
LocReturn 040866:
  PushStack call_result;
  TraceOperation 040873 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 040874:
  TraceOperation 040874 (Je [Var (Global 213),Con 12] (Branch F (Dloc 040924)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 040878 (Call (Floc 022320) [Con 26048,Con 2] Sp);
    PushFrame 040878;
    SetLocal 1 26048;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 040924
  }
LocReturn 040878:
  PushStack call_result;
  TraceOperation 040886 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 040891 (Print_ret "\"Well, let's see the malfunctioning equipment.\"");
  GamePrint "\"Well, let's see the malfunctioning equipment.\"\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 040924:
  TraceOperation 040924 (Je [Var (Global 213),Con 16] (Branch F (Dloc 040939)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 040928 (Print_ret "Then type it.");
    GamePrint "Then type it.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 040939
  }
LocOp 040939:
  TraceOperation 040939 (Je [Var (Global 213),Con 18,Con 19] (Branch F (Dloc 040974)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),18),Equal(MakeHiLo(b1,b2),19))) {
    TraceOperation 040945 (Print_ret "\"Well, leave me alone then! I'm busy!\"");
    GamePrint "\"Well, leave me alone then! I'm busy!\"\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 040974
  }
LocOp 040974:
  TraceOperation 040974 (Print_ret "You sound rather positive.");
  GamePrint "You sound rather positive.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[285]--------------------------------------------------
LocRoutine 040994:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 1;
        }
      }
    }
  }
  Jump: 041003
LocOp 041003:
  TraceOperation 041003 (Test_attr (Var (Global 201)) (Con 22) (Branch F (Dloc 041017)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,1)) {
    TraceOperation 041007 (Jz (Var (Local 1)) (Branch T (Dloc 041015)));
    if (IsZero(GetLocal(1))) {
      Jump: 041015
    } else {
      TraceOperation 041010 (Call (Floc 057842) [] Sp);
      PushFrame 041010;
      JumpCall: 057842, #actuals: 0
    }
  } else {
    Jump: 041017
  }
LocReturn 041010:
  PushStack call_result;
  Jump: 041015
LocOp 041015:
  TraceOperation 041015 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 041017:
  TraceOperation 041017 (Test_attr (Var (Global 201)) (Con 25) (Branch T (Dloc 041031)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,6)) {
    Jump: 041031
  } else {
    TraceOperation 041021 (Jz (Var (Local 1)) (Branch T (Dloc 041029)));
    if (IsZero(GetLocal(1))) {
      Jump: 041029
    } else {
      TraceOperation 041024 (Call (Floc 030950) [] Sp);
      PushFrame 041024;
      JumpCall: 030950, #actuals: 0
    }
  }
LocReturn 041024:
  PushStack call_result;
  Jump: 041029
LocOp 041029:
  TraceOperation 041029 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 041031:
  TraceOperation 041031 (Je [Var (Global 120),Con 194] (Branch F (Dloc 041105)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),194)) {
    TraceOperation 041036 (Call (Floc 041458) [Con 31] Sp);
    PushFrame 041036;
    SetLocal 1 31;
    JumpCall: 041458, #actuals: 1
  } else {
    Jump: 041105
  }
LocReturn 041036:
  PushStack call_result;
  TraceOperation 041042 (Jg (Var Sp) (Con 2) (Branch F (Dloc 041105)));
  PopStack popped1;
  if (GreaterThan(popped1,2)) {
    TraceOperation 041046 (Jz (Var (Local 1)) (Branch T (Dloc 041103)));
    if (IsZero(GetLocal(1))) {
      Jump: 041103
    } else {
      TraceOperation 041049 (Print "As is the case so often at parties, you find that you are holding too much and can't pick up anything else.");
      GamePrint "As is the case so often at parties, you find that you are holding too much and can't pick up anything else.";
      TraceOperation 041102 New_line;
      GamePrint "\n";
      Jump: 041103
    }
  } else {
    Jump: 041105
  }
LocOp 041103:
  TraceOperation 041103 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 041105:
  TraceOperation 041105 (Get_parent (Var (Global 201)) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 041108 (Jin (Var Sp) (Var (Global 195)) (Branch T (Dloc 041201)));
  PopStack popped4;
  Let b5 = M[008298];
  Let b6 = M[008299];
  Let b7 = M[Offset(Offset(000751,Mul(popped4,9)),4)];
  if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
    Jump: 041201
  } else {
    TraceOperation 041113 (Call (Floc 041486) [Var (Global 201)] (Local 4));
    Let b8 = M[008310];
    Let b9 = M[008311];
    PushFrame 041113;
    SetLocal 1 MakeHiLo(b8,b9);
    JumpCall: 041486, #actuals: 1
  }
LocReturn 041113:
  SetLocal 4 call_result;
  TraceOperation 041119 (Call (Floc 041486) [Var (Global 195)] Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  PushFrame 041119;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 041486, #actuals: 1
LocReturn 041119:
  PushStack call_result;
  TraceOperation 041125 (Add (Var (Local 4)) (Var Sp) Sp);
  PopStack popped1;
  PushStack Add(GetLocal(4),popped1);
  TraceOperation 041129 (Jg (Var Sp) (Con 100) (Branch F (Dloc 041156)));
  PopStack popped2;
  if (GreaterThan(popped2,100)) {
    TraceOperation 041133 (Jz (Var (Local 1)) (Branch T (Dloc 041154)));
    if (IsZero(GetLocal(1))) {
      Jump: 041154
    } else {
      TraceOperation 041136 (Print "Your load is too heavy.");
      GamePrint "Your load is too heavy.";
      TraceOperation 041153 New_line;
      GamePrint "\n";
      Jump: 041154
    }
  } else {
    Jump: 041156
  }
LocOp 041154:
  TraceOperation 041154 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 041156:
  TraceOperation 041156 (Call (Floc 041458) [Var (Global 195)] (Local 2));
  Let b1 = M[008298];
  Let b2 = M[008299];
  PushFrame 041156;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 041458, #actuals: 1
LocReturn 041156:
  SetLocal 2 call_result;
  TraceOperation 041162 (Jg (Var (Local 2)) (Con 7) (Branch F (Dloc 041201)));
  if (GreaterThan(GetLocal(2),7)) {
    TraceOperation 041166 (Mul (Var (Local 2)) (Con 8) (Local 4));
    SetLocal 4 Mul(GetLocal(2),8);
    TraceOperation 041170 (Random (Con 100) Sp);
    LetRandom random1 100;
    PushStack random1;
    TraceOperation 041174 (Jl (Var (Local 4)) (Var Sp) (Branch T (Dloc 041201)));
    PopStack popped2;
    if (LessThan(GetLocal(4),popped2)) {
      Jump: 041201
    } else {
      TraceOperation 041178 (Jz (Var (Local 1)) (Branch T (Dloc 041199)));
      if (IsZero(GetLocal(1))) {
        Jump: 041199
      } else {
        TraceOperation 041181 (Print "You're holding too much already.");
        GamePrint "You're holding too much already.";
        TraceOperation 041198 New_line;
        GamePrint "\n";
        Jump: 041199
      }
    }
  } else {
    Jump: 041201
  }
LocOp 041199:
  TraceOperation 041199 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
LocOp 041201:
  TraceOperation 041201 (Insert_obj (Var (Global 201)) (Con 31));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 31;
    Let b4 = M[001036];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b4));
    SetByte 001036 b2;
    TraceOperation 041204 (Set_attr (Var (Global 201)) (Con 5));
    Let b5 = M[008310];
    Let b6 = M[008311];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),0)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),0) SetBit(b7,2);
    TraceOperation 041207 Rtrue;
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  } else {
    Let b9 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b9),MakeHiLo(b1,b2))) {
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b10));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 31;
      Let b11 = M[001036];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b11));
      SetByte 001036 b2;
      TraceOperation 041204 (Set_attr (Var (Global 201)) (Con 5));
      Let b12 = M[008310];
      Let b13 = M[008311];
      Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),0)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),0) SetBit(b14,2);
      TraceOperation 041207 Rtrue;
      PopFrame return_address_15;
      JumpReturn: return_address_15, result: 1
    } else {
      Error: unlink/loop
    }
  }
--[286]--------------------------------------------------
LocRoutine 041208:
  MakeRoutineFrame 0;
  Jump: 041209
LocOp 041209:
  TraceOperation 041209 (Je [Var (Global 201),Con 170] (Branch T Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),170)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 041213 (Je [Var (Global 201),Con 8] (Branch F (Dloc 041220)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (Equal(MakeHiLo(b4,b5),8)) {
      TraceOperation 041217 (Jz (Var (Global 66)) (Branch F Dfalse));
      Let b6 = M[008040];
      Let b7 = M[008041];
      if (IsZero(MakeHiLo(b6,b7))) {
        Jump: 041220
      } else {
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      }
    } else {
      Jump: 041220
    }
  }
LocOp 041220:
  TraceOperation 041220 (Je [Var (Global 201),Con 184,Con 185,Con 179] (Branch F (Dloc 041233)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),184),Equal(MakeHiLo(b1,b2),185)),Equal(MakeHiLo(b1,b2),179))) {
    TraceOperation 041227 (Je [Var (Global 203),Con 55,Con 46] (Branch T Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),55),Equal(MakeHiLo(b3,b4),46))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 041233
    }
  } else {
    Jump: 041233
  }
LocOp 041233:
  TraceOperation 041233 (Je [Var (Global 203),Con 66] (Branch F (Dloc 041241)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 041237 (Je [Var (Global 201),Con 43] (Branch T Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),43)) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 041241
    }
  } else {
    Jump: 041241
  }
LocOp 041241:
  TraceOperation 041241 (Je [Var (Global 201),Con 157] (Branch F (Dloc 041251)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),157)) {
    TraceOperation 041245 (Call (Floc 031422) [] Sp);
    PushFrame 041245;
    JumpCall: 031422, #actuals: 0
  } else {
    Jump: 041251
  }
LocReturn 041245:
  PushStack call_result;
  TraceOperation 041250 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 041251:
  TraceOperation 041251 (Je [Var (Global 201),Con 36,Con 32,Con 33] (Branch T (Dloc 041262)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),36),Equal(MakeHiLo(b1,b2),32)),Equal(MakeHiLo(b1,b2),33))) {
    Jump: 041262
  } else {
    TraceOperation 041258 (Je [Var (Global 201),Con 34] (Branch F (Dloc 041289)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),34)) {
      Jump: 041262
    } else {
      Jump: 041289
    }
  }
LocOp 041262:
  TraceOperation 041262 (Je [Var (Global 203),Con 66,Con 154,Con 53] (Branch F (Dloc 041275)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),66),Equal(MakeHiLo(b1,b2),154)),Equal(MakeHiLo(b1,b2),53))) {
    TraceOperation 041269 (Call (Floc 031360) [] Sp);
    PushFrame 041269;
    JumpCall: 031360, #actuals: 0
  } else {
    Jump: 041275
  }
LocReturn 041269:
  PushStack call_result;
  TraceOperation 041274 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 041275:
  TraceOperation 041275 (Je [Var (Global 203),Con 55] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 041279 (Je [Var (Global 202),Con 141] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),141)) {
      TraceOperation 041283 (Call (Floc 031360) [] Sp);
      PushFrame 041283;
      JumpCall: 031360, #actuals: 0
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 041283:
  PushStack call_result;
  TraceOperation 041288 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 041289:
  TraceOperation 041289 (Je [Var (Global 201),Con 186] (Branch F (Dloc 041304)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),186)) {
    TraceOperation 041293 (Je [Var (Global 202),Con 199,Con 180,Con 197] (Branch T Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),199),Equal(MakeHiLo(b3,b4),180)),Equal(MakeHiLo(b3,b4),197))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 041300 (Je [Var (Global 202),Con 182] (Branch T Dfalse));
      Let b6 = M[008312];
      Let b7 = M[008313];
      if (Equal(MakeHiLo(b6,b7),182)) {
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      } else {
        Jump: 041304
      }
    }
  } else {
    Jump: 041304
  }
LocOp 041304:
  TraceOperation 041304 (Call (Floc 043468) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 041304;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043468, #actuals: 1
LocReturn 041304:
  PushStack call_result;
  TraceOperation 041310 (Jz (Var Sp) (Branch F (Dloc 041352)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 041313 (Print "That's easy for you to say since you don't even have");
    GamePrint "That's easy for you to say since you don't even have";
    TraceOperation 041342 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b2 = M[008310];
    Let b3 = M[008311];
    PushFrame 041342;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 041352
  }
LocReturn 041342:
  PushStack call_result;
  TraceOperation 041349 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 041352:
  TraceOperation 041352 (Je [Var (Global 201),Con 212] (Branch F (Dloc 041364)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),212)) {
    TraceOperation 041356 (Call (Floc 022042) [Con 53,Con 214] Sp);
    PushFrame 041356;
    SetLocal 1 53;
    SetLocal 2 214;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 041364
  }
LocReturn 041356:
  PushStack call_result;
  TraceOperation 041363 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 041364:
  TraceOperation 041364 (Test_attr (Var (Global 201)) (Con 22) (Branch F (Dloc 041374)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,1)) {
    TraceOperation 041368 (Call (Floc 057842) [] Sp);
    PushFrame 041368;
    JumpCall: 057842, #actuals: 0
  } else {
    Jump: 041374
  }
LocReturn 041368:
  PushStack call_result;
  TraceOperation 041373 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 041374:
  TraceOperation 041374 (Jin (Var (Global 201)) (Var (Global 195)) (Branch T (Dloc 041424)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008298];
  Let b4 = M[008299];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    Jump: 041424
  } else {
    TraceOperation 041378 (Get_parent (Var (Global 201)) Sp);
    Let b6 = M[008310];
    Let b7 = M[008311];
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),4)];
    PushStack Widen(b8);
    TraceOperation 041381 (Test_attr (Var Sp) (Con 24) (Branch F (Dloc 041424)));
    PopStack popped9;
    Let b10 = M[Offset(Offset(000751,Mul(popped9,9)),3)];
    if (TestBit(b10,7)) {
      TraceOperation 041385 (Get_parent (Var (Global 201)) Sp);
      Let b11 = M[008310];
      Let b12 = M[008311];
      Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),4)];
      PushStack Widen(b13);
      TraceOperation 041388 (Test_attr (Var Sp) (Con 23) (Branch T (Dloc 041424)));
      PopStack popped14;
      Let b15 = M[Offset(Offset(000751,Mul(popped14,9)),2)];
      if (TestBit(b15,0)) {
        Jump: 041424
      } else {
        TraceOperation 041392 (Print "Impossible because");
        GamePrint "Impossible because";
        TraceOperation 041407 (Get_parent (Var (Global 201)) Sp);
        Let b16 = M[008310];
        Let b17 = M[008311];
        Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b16,b17),9)),4)];
        PushStack Widen(b18);
        TraceOperation 041410 (Call (Floc 043738) [Var Sp,Con 1] Sp);
        PopStack popped19;
        PushFrame 041410;
        SetLocal 1 popped19;
        SetLocal 2 1;
        JumpCall: 043738, #actuals: 2
      }
    } else {
      Jump: 041424
    }
  }
LocReturn 041410:
  PushStack call_result;
  TraceOperation 041417 (Print_ret " is closed.");
  GamePrint " is closed.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 041424:
  TraceOperation 041424 (Je [Var (Global 201),Con 111] (Branch F (Dloc 041432)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),111)) {
    TraceOperation 041428 (Je [Var (Global 203),Con 134] (Branch F (Dloc 041436)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),134)) {
      Jump: 041432
    } else {
      Jump: 041436
    }
  } else {
    Jump: 041432
  }
LocOp 041432:
  TraceOperation 041432 (Test_attr (Var (Global 201)) (Con 9) (Branch F Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,6)) {
    Jump: 041436
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 041436:
  TraceOperation 041436 (Print_ret "You'll have to remove it first.");
  GamePrint "You'll have to remove it first.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[287]--------------------------------------------------
LocRoutine 041458:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 041465
LocOp 041465:
  TraceOperation 041465 (Get_child (Var (Local 1)) (Local 3) (Branch F (Dloc 041484)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 041484 (Ret (Var (Local 2)));
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: GetLocal(2)
  } else {
    TraceOperation 041469 (Test_attr (Var (Local 3)) (Con 9) (Branch T (Dloc 041479)));
    Let b3 = M[Offset(Offset(000751,Mul(GetLocal(3),9)),1)];
    if (TestBit(b3,6)) {
      Jump: 041479
    } else {
      TraceOperation 041473 (Je [Var (Local 3),Con 111] (Branch T (Dloc 041479)));
      if (Equal(GetLocal(3),111)) {
        Jump: 041479
      } else {
        TraceOperation 041477 (Inc (Con 2));
        SetLocal 2 Add(GetLocal(2),1);
        Jump: 041479
      }
    }
  }
LocOp 041479:
  TraceOperation 041479 (Get_sibling (Var (Local 3)) (Local 3) (Branch T (Dloc 041469)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(3),9)),5)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 041484 (Ret (Var (Local 2)));
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: GetLocal(2)
  } else {
    TraceOperation 041469 (Test_attr (Var (Local 3)) (Con 9) (Branch T (Dloc 041479)));
    Let b3 = M[Offset(Offset(000751,Mul(GetLocal(3),9)),1)];
    if (TestBit(b3,6)) {
      Jump: 041479
    } else {
      TraceOperation 041473 (Je [Var (Local 3),Con 111] (Branch T (Dloc 041479)));
      if (Equal(GetLocal(3),111)) {
        Jump: 041479
      } else {
        TraceOperation 041477 (Inc (Con 2));
        SetLocal 2 Add(GetLocal(2),1);
        Jump: 041479
      }
    }
  }
--[288]--------------------------------------------------
LocRoutine 041486:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 041493
LocOp 041493:
  TraceOperation 041493 (Get_child (Var (Local 1)) (Local 2) (Branch F (Dloc 041555)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 041555 (Get_prop (Var (Local 1)) (Con 22) Sp);
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Error: getPropsA
  } else {
    TraceOperation 041498 (Je [Var (Local 1),Var (Global 235)] (Branch F (Dloc 041511)));
    Let b5 = M[008378];
    Let b6 = M[008379];
    if (Equal(GetLocal(1),MakeHiLo(b5,b6))) {
      TraceOperation 041502 (Test_attr (Var (Local 2)) (Con 9) (Branch F (Dloc 041511)));
      Let b7 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),1)];
      if (TestBit(b7,6)) {
        TraceOperation 041506 (Inc (Con 3));
        SetLocal 3 Add(GetLocal(3),1);
        TraceOperation 041508 (Jump 041550);
        Jump: 041550
      } else {
        Jump: 041511
      }
    } else {
      Jump: 041511
    }
  }
LocOp 041511:
  TraceOperation 041511 (Je [Var (Local 1),Var (Global 235)] (Branch F (Dloc 041527)));
  Let b1 = M[008378];
  Let b2 = M[008379];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 041515 (Get_parent (Var (Local 2)) Sp);
    Let b3 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),4)];
    PushStack Widen(b3);
    TraceOperation 041518 (Test_attr (Var Sp) (Con 9) (Branch F (Dloc 041527)));
    PopStack popped4;
    Let b5 = M[Offset(Offset(000751,Mul(popped4,9)),1)];
    if (TestBit(b5,6)) {
      TraceOperation 041522 (Inc (Con 3));
      SetLocal 3 Add(GetLocal(3),1);
      TraceOperation 041524 (Jump 041550);
      Jump: 041550
    } else {
      Jump: 041527
    }
  } else {
    Jump: 041527
  }
LocOp 041527:
  TraceOperation 041527 (Je [Var (Local 1),Var (Global 235)] (Branch F (Dloc 041540)));
  Let b1 = M[008378];
  Let b2 = M[008379];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 041531 (Je [Var (Local 2),Con 111] (Branch F (Dloc 041540)));
    if (Equal(GetLocal(2),111)) {
      TraceOperation 041535 (Inc (Con 3));
      SetLocal 3 Add(GetLocal(3),1);
      TraceOperation 041537 (Jump 041550);
      Jump: 041550
    } else {
      Jump: 041540
    }
  } else {
    Jump: 041540
  }
LocOp 041540:
  TraceOperation 041540 (Call (Floc 041486) [Var (Local 2)] Sp);
  PushFrame 041540;
  SetLocal 1 GetLocal(2);
  JumpCall: 041486, #actuals: 1
LocReturn 041540:
  PushStack call_result;
  TraceOperation 041546 (Add (Var (Local 3)) (Var Sp) (Local 3));
  PopStack popped1;
  SetLocal 3 Add(GetLocal(3),popped1);
  Jump: 041550
LocOp 041550:
  TraceOperation 041550 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 041498)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),5)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 041555 (Get_prop (Var (Local 1)) (Con 22) Sp);
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Error: getPropsA
  } else {
    TraceOperation 041498 (Je [Var (Local 1),Var (Global 235)] (Branch F (Dloc 041511)));
    Let b5 = M[008378];
    Let b6 = M[008379];
    if (Equal(GetLocal(1),MakeHiLo(b5,b6))) {
      TraceOperation 041502 (Test_attr (Var (Local 2)) (Con 9) (Branch F (Dloc 041511)));
      Let b7 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),1)];
      if (TestBit(b7,6)) {
        TraceOperation 041506 (Inc (Con 3));
        SetLocal 3 Add(GetLocal(3),1);
        TraceOperation 041508 (Jump 041550);
        Jump: 041550
      } else {
        Jump: 041511
      }
    } else {
      Jump: 041511
    }
  }
--[289]--------------------------------------------------
LocRoutine 041564:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 041573
LocOp 041573:
  TraceOperation 041573 (Jz (Var (Local 1)) (Branch T (Dloc 041582)));
  if (IsZero(GetLocal(1))) {
    Jump: 041582
  } else {
    TraceOperation 041576 (Push (Var (Local 1)));
    PushStack GetLocal(1);
    TraceOperation 041579 (Jump 041595);
    Jump: 041595
  }
LocOp 041582:
  TraceOperation 041582 (Je [Var (Global 152),Con 2] (Branch T (Dloc 041592)));
  Let b1 = M[008212];
  Let b2 = M[008213];
  if (Equal(MakeHiLo(b1,b2),2)) {
    Jump: 041592
  } else {
    TraceOperation 041586 (Push (Con 0));
    PushStack 0;
    TraceOperation 041589 (Jump 041595);
    Jump: 041595
  }
LocOp 041592:
  TraceOperation 041592 (Push (Con 1));
  PushStack 1;
  Jump: 041595
LocOp 041595:
  TraceOperation 041595 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 041598 (Jz (Var (Global 85)) (Branch F (Dloc 041617)));
  Let b2 = M[008078];
  Let b3 = M[008079];
  if (IsZero(MakeHiLo(b2,b3))) {
    TraceOperation 041601 (Print "It is pitch black.");
    GamePrint "It is pitch black.";
    TraceOperation 041614 New_line;
    GamePrint "\n";
    TraceOperation 041615 (Ret (Con 0));
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  } else {
    Jump: 041617
  }
LocOp 041617:
  TraceOperation 041617 (Test_attr (Var (Global 0)) (Con 5) (Branch T (Dloc 041627)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,2)) {
    Jump: 041627
  } else {
    TraceOperation 041621 (Set_attr (Var (Global 0)) (Con 5));
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),0)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),0) SetBit(b6,2);
    TraceOperation 041624 (Store (Con 2) (Con 1));
    SetLocal 2 1;
    Jump: 041627
  }
LocOp 041627:
  TraceOperation 041627 (Jin (Var (Global 0)) (Con 217) (Branch F (Dloc 041644)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(217,Widen(b3))) {
    TraceOperation 041631 (Print_obj (Var (Global 0)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 041633 (Get_parent (Var (Global 195)) (Local 4));
      Let b9 = M[008298];
      Let b10 = M[008299];
      Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),4)];
      SetLocal 4 Widen(b11);
      TraceOperation 041636 (Jz (Var (Global 86)) (Branch F (Dloc 041644)));
      Let b12 = M[008080];
      Let b13 = M[008081];
      if (IsZero(MakeHiLo(b12,b13))) {
        TraceOperation 041639 (Test_attr (Var (Local 4)) (Con 12) (Branch T (Dloc 041644)));
        Let b14 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),1)];
        if (TestBit(b14,3)) {
          Jump: 041644
        } else {
          TraceOperation 041643 New_line;
          GamePrint "\n";
          Jump: 041644
        }
      } else {
        Jump: 041644
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 041633 (Get_parent (Var (Global 195)) (Local 4));
      Let b15 = M[008298];
      Let b16 = M[008299];
      Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),4)];
      SetLocal 4 Widen(b17);
      TraceOperation 041636 (Jz (Var (Global 86)) (Branch F (Dloc 041644)));
      Let b18 = M[008080];
      Let b19 = M[008081];
      if (IsZero(MakeHiLo(b18,b19))) {
        TraceOperation 041639 (Test_attr (Var (Local 4)) (Con 12) (Branch T (Dloc 041644)));
        Let b20 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),1)];
        if (TestBit(b20,3)) {
          Jump: 041644
        } else {
          TraceOperation 041643 New_line;
          GamePrint "\n";
          Jump: 041644
        }
      } else {
        Jump: 041644
      }
    }
  } else {
    Jump: 041644
  }
LocOp 041644:
  TraceOperation 041644 (Jz (Var (Local 1)) (Branch F (Dloc 041653)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 041647 (Je [Var (Global 152),Con 1,Con 2] (Branch F Dtrue));
    Let b1 = M[008212];
    Let b2 = M[008213];
    if (LogOr(Equal(MakeHiLo(b1,b2),1),Equal(MakeHiLo(b1,b2),2))) {
      Jump: 041653
    } else {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    }
  } else {
    Jump: 041653
  }
LocOp 041653:
  TraceOperation 041653 (Test_attr (Var (Local 4)) (Con 12) (Branch F (Dloc 041668)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),1)];
  if (TestBit(b1,3)) {
    TraceOperation 041657 (Print ", in the ");
    GamePrint ", in the ";
    TraceOperation 041662 (Print_obj (Var (Local 4)));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000751,Mul(GetLocal(4),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 041664 New_line;
      GamePrint "\n";
      TraceOperation 041665 (Jump 041681);
      Jump: 041681
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 041664 New_line;
      GamePrint "\n";
      TraceOperation 041665 (Jump 041681);
      Jump: 041681
    }
  } else {
    Jump: 041668
  }
LocOp 041668:
  TraceOperation 041668 (Jz (Var (Global 86)) (Branch T (Dloc 041681)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 041681
  } else {
    TraceOperation 041671 (Print ", lying down");
    GamePrint ", lying down";
    TraceOperation 041680 New_line;
    GamePrint "\n";
    Jump: 041681
  }
LocOp 041681:
  TraceOperation 041681 (Jz (Var (Local 2)) (Branch T (Dloc 041696)));
  if (IsZero(GetLocal(2))) {
    Jump: 041696
  } else {
    TraceOperation 041684 (Get_prop (Var (Global 0)) (Con 29) Sp);
    Let b1 = M[007908];
    Let b2 = M[007909];
    Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Error: getPropsA
  }
LocReturn 041688:
  PushStack call_result;
  TraceOperation 041693 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 041696
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 041696:
  TraceOperation 041696 (Jz (Var (Local 2)) (Branch T (Dloc 041712)));
  if (IsZero(GetLocal(2))) {
    Jump: 041712
  } else {
    TraceOperation 041699 (Get_prop (Var (Global 0)) (Con 28) (Local 3));
    Let b1 = M[007908];
    Let b2 = M[007909];
    Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
    Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Error: getPropsA
  }
LocOp 041712:
  TraceOperation 041712 (Get_prop (Var (Global 0)) (Con 29) Sp);
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocReturn 041716:
  PushStack call_result;
  Jump: 041721
LocOp 041721:
  TraceOperation 041721 (Je [Var (Global 0),Var (Local 4)] (Branch T Dtrue));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),GetLocal(4))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 041725 (Test_attr (Var (Local 4)) (Con 12) (Branch F Dtrue));
    Let b4 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),1)];
    if (TestBit(b4,3)) {
      TraceOperation 041729 (Get_prop (Var (Local 4)) (Con 29) Sp);
      Let b5 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),7)];
      Let b6 = M[Offset(Offset(Offset(000751,Mul(GetLocal(4),9)),7),1)];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Error: getPropsA
    } else {
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  }
LocReturn 041733:
  PushStack call_result;
  TraceOperation 041738 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[290]--------------------------------------------------
LocRoutine 041740:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 041743
LocOp 041743:
  TraceOperation 041743 (Jz (Var (Global 85)) (Branch T (Dloc 041785)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 041785
  } else {
    TraceOperation 041746 (Get_child (Var (Global 0)) Sp (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    PushStack Widen(b5);
    if (IsZero(Widen(b5))) {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      TraceOperation 041750 (Jz (Var (Local 1)) (Branch T (Dloc 041759)));
      if (IsZero(GetLocal(1))) {
        Jump: 041759
      } else {
        TraceOperation 041753 (Push (Var (Local 1)));
        PushStack GetLocal(1);
        TraceOperation 041756 (Jump 041772);
        Jump: 041772
      }
    }
  }
LocOp 041759:
  TraceOperation 041759 (Je [Var (Global 152),Con 2] (Branch T (Dloc 041769)));
  Let b1 = M[008212];
  Let b2 = M[008213];
  if (Equal(MakeHiLo(b1,b2),2)) {
    Jump: 041769
  } else {
    TraceOperation 041763 (Push (Con 0));
    PushStack 0;
    TraceOperation 041766 (Jump 041772);
    Jump: 041772
  }
LocOp 041769:
  TraceOperation 041769 (Push (Con 1));
  PushStack 1;
  Jump: 041772
LocOp 041772:
  TraceOperation 041772 (Pull (Con 1));
  PopStack popped1;
  SetLocal 1 popped1;
  TraceOperation 041775 (Call (Floc 042074) [Var (Global 0),Var (Local 1),Con -1] Sp);
  Let b2 = M[007908];
  Let b3 = M[007909];
  PushFrame 041775;
  SetLocal 1 MakeHiLo(b2,b3);
  SetLocal 2 GetLocal(1);
  SetLocal 3 -1;
  JumpCall: 042074, #actuals: 3
LocReturn 041775:
  PushStack call_result;
  TraceOperation 041784 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 041785:
  TraceOperation 041785 (Print_paddr (Var (Global 56)));
  Let b1 = M[008020];
  Let b2 = M[008021];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 041787 New_line;
  GamePrint "\n";
  TraceOperation 041788 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[291]--------------------------------------------------
LocRoutine 041790:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 041801
LocOp 041801:
  TraceOperation 041801 (Jz (Var (Local 3)) (Branch F (Dloc 041816)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 041804 (Get_prop (Var (Local 1)) (Con 21) Sp);
    Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
    Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Error: getPropsA
  } else {
    Jump: 041816
  }
LocReturn 041808:
  PushStack call_result;
  TraceOperation 041813 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 041816
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 041816:
  TraceOperation 041816 (Jz (Var (Local 3)) (Branch F (Dloc 041842)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 041819 (Test_attr (Var (Local 1)) (Con 5) (Branch T (Dloc 041830)));
    Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),0)];
    if (TestBit(b1,2)) {
      Jump: 041830
    } else {
      TraceOperation 041823 (Get_prop (Var (Local 1)) (Con 14) (Local 4));
      Let b2 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
      Let b3 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
      Let b4 = M[Address(MakeHiLo(b2,b3))];
      Error: getPropsA
    }
  } else {
    Jump: 041842
  }
LocOp 041830:
  TraceOperation 041830 (Get_prop (Var (Local 1)) (Con 28) (Local 4));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocOp 041837:
  TraceOperation 041837 (Print_paddr (Var (Local 4)));
  GamePrint GetText(PackedAddress Z3(GetLocal(4)));
  TraceOperation 041839 (Jump 042017);
  Jump: 042017
LocOp 041842:
  TraceOperation 041842 (Jz (Var (Local 3)) (Branch F (Dloc 041864)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 041845 (Print "There is");
    GamePrint "There is";
    TraceOperation 041850 (Call (Floc 043738) [Var (Local 1)] Sp);
    PushFrame 041850;
    SetLocal 1 GetLocal(1);
    JumpCall: 043738, #actuals: 1
  } else {
    Jump: 041864
  }
LocReturn 041850:
  PushStack call_result;
  TraceOperation 041856 (Print " here.");
  GamePrint " here.";
  TraceOperation 041861 (Jump 042017);
  Jump: 042017
LocOp 041864:
  TraceOperation 041864 (Loadw (Var (Global 84)) (Var (Local 3)) Sp);
  Let b1 = M[008076];
  Let b2 = M[008077];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(3)))];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,GetLocal(3))),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 041868 (Print_paddr (Var Sp));
  PopStack popped5;
  GamePrint GetText(PackedAddress Z3(popped5));
  TraceOperation 041870 (Test_attr (Var (Local 1)) (Con 31) (Branch F (Dloc 041877)));
  Let b6 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),3)];
  if (TestBit(b6,0)) {
    TraceOperation 041874 (Jump 041890);
    Jump: 041890
  } else {
    Jump: 041877
  }
LocOp 041877:
  TraceOperation 041877 (Test_attr (Var (Local 1)) (Con 15) (Branch F (Dloc 041887)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),1)];
  if (TestBit(b1,0)) {
    TraceOperation 041881 (Print "an ");
    GamePrint "an ";
    TraceOperation 041884 (Jump 041890);
    Jump: 041890
  } else {
    Jump: 041887
  }
LocOp 041887:
  TraceOperation 041887 (Print "a ");
  GamePrint "a ";
  Jump: 041890
LocOp 041890:
  TraceOperation 041890 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 041892 (Test_attr (Var (Local 1)) (Con 9) (Branch F (Dloc 041910)));
    Let b4 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),1)];
    if (TestBit(b4,6)) {
      TraceOperation 041896 (Print " (being worn)");
      GamePrint " (being worn)";
      TraceOperation 041907 (Jump 042017);
      Jump: 042017
    } else {
      Jump: 041910
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 041892 (Test_attr (Var (Local 1)) (Con 9) (Branch F (Dloc 041910)));
    Let b5 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),1)];
    if (TestBit(b5,6)) {
      TraceOperation 041896 (Print " (being worn)");
      GamePrint " (being worn)";
      TraceOperation 041907 (Jump 042017);
      Jump: 042017
    } else {
      Jump: 041910
    }
  }
LocOp 041910:
  TraceOperation 041910 (Je [Var (Local 1),Con 111] (Branch F (Dloc 041926)));
  if (Equal(GetLocal(1),111)) {
    TraceOperation 041914 (Print " (in your ear)");
    GamePrint " (in your ear)";
    TraceOperation 041923 (Jump 042017);
    Jump: 042017
  } else {
    Jump: 041926
  }
LocOp 041926:
  TraceOperation 041926 (Je [Var (Local 1),Con 182] (Branch F (Dloc 041956)));
  if (Equal(GetLocal(1),182)) {
    TraceOperation 041930 (Jz (Var (Global 208)) (Branch T (Dloc 041956)));
    Let b1 = M[008324];
    Let b2 = M[008325];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 041956
    } else {
      TraceOperation 041933 (Print " (suspended in");
      GamePrint " (suspended in";
      TraceOperation 041944 (Call (Floc 043738) [Var (Global 208)] Sp);
      Let b3 = M[008324];
      Let b4 = M[008325];
      PushFrame 041944;
      SetLocal 1 MakeHiLo(b3,b4);
      JumpCall: 043738, #actuals: 1
    }
  } else {
    Jump: 041956
  }
LocReturn 041944:
  PushStack call_result;
  TraceOperation 041950 (Print ")");
  GamePrint ")";
  TraceOperation 041953 (Jump 042017);
  Jump: 042017
LocOp 041956:
  TraceOperation 041956 (Je [Var (Local 1),Con 186] (Branch F (Dloc 042017)));
  if (Equal(GetLocal(1),186)) {
    TraceOperation 041961 (Jz (Var (Global 209)) (Branch F (Dloc 041967)));
    Let b1 = M[008326];
    Let b2 = M[008327];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 041964 (Jz (Var (Global 210)) (Branch T (Dloc 042017)));
      Let b3 = M[008328];
      Let b4 = M[008329];
      if (IsZero(MakeHiLo(b3,b4))) {
        Jump: 042017
      } else {
        Jump: 041967
      }
    } else {
      Jump: 041967
    }
  } else {
    Jump: 042017
  }
LocOp 041967:
  TraceOperation 041967 (Print " (connected to");
  GamePrint " (connected to";
  TraceOperation 041978 (Jz (Var (Global 209)) (Branch T (Dloc 041998)));
  Let b1 = M[008326];
  Let b2 = M[008327];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 041998
  } else {
    TraceOperation 041981 (Print " the plotter");
    GamePrint " the plotter";
    TraceOperation 041990 (Jz (Var (Global 210)) (Branch T (Dloc 041998)));
    Let b3 = M[008328];
    Let b4 = M[008329];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 041998
    } else {
      TraceOperation 041993 (Print " and");
      GamePrint " and";
      Jump: 041998
    }
  }
LocOp 041998:
  TraceOperation 041998 (Jz (Var (Global 210)) (Branch T (Dloc 042014)));
  Let b1 = M[008328];
  Let b2 = M[008329];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 042014
  } else {
    TraceOperation 042001 (Print " the control console");
    GamePrint " the control console";
    Jump: 042014
  }
LocOp 042014:
  TraceOperation 042014 (Print ")");
  GamePrint ")";
  Jump: 042017
LocOp 042017:
  TraceOperation 042017 (Jz (Var (Local 3)) (Branch F (Dloc 042050)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 042020 (Test_attr (Var (Local 1)) (Con 26) (Branch T (Dloc 042050)));
    Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),3)];
    if (TestBit(b1,5)) {
      Jump: 042050
    } else {
      TraceOperation 042024 (Get_parent (Var (Global 195)) (Local 5));
      Let b2 = M[008298];
      Let b3 = M[008299];
      Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),4)];
      SetLocal 5 Widen(b4);
      TraceOperation 042027 (Jz (Var (Local 5)) (Branch T (Dloc 042050)));
      if (IsZero(GetLocal(5))) {
        Jump: 042050
      } else {
        TraceOperation 042030 (Test_attr (Var (Local 5)) (Con 12) (Branch F (Dloc 042050)));
        Let b5 = M[Offset(Offset(000751,Mul(GetLocal(5),9)),1)];
        if (TestBit(b5,3)) {
          TraceOperation 042034 (Print " (outside the ");
          GamePrint " (outside the ";
          TraceOperation 042045 (Print_obj (Var (Local 5)));
          Let b6 = M[Offset(Offset(000751,Mul(GetLocal(5),9)),7)];
          Let b7 = M[Offset(Offset(Offset(000751,Mul(GetLocal(5),9)),7),1)];
          Let b8 = M[Address(MakeHiLo(b6,b7))];
          if (IsZeroByte(b8)) {
            GamePrint "";
            TraceOperation 042047 (Print ")");
            GamePrint ")";
            Jump: 042050
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
            TraceOperation 042047 (Print ")");
            GamePrint ")";
            Jump: 042050
          }
        } else {
          Jump: 042050
        }
      }
    }
  } else {
    Jump: 042050
  }
LocOp 042050:
  TraceOperation 042050 New_line;
  GamePrint "\n";
  TraceOperation 042051 (Call (Floc 043506) [Var (Local 1)] Sp);
  PushFrame 042051;
  SetLocal 1 GetLocal(1);
  JumpCall: 043506, #actuals: 1
LocReturn 042051:
  PushStack call_result;
  TraceOperation 042057 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 042060 (Get_child (Var (Local 1)) Sp (Branch F Dfalse));
    Let b3 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
    PushStack Widen(b3);
    if (IsZero(Widen(b3))) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      TraceOperation 042064 (Call (Floc 042074) [Var (Local 1),Var (Local 2),Var (Local 3)] Sp);
      PushFrame 042064;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(2);
      SetLocal 3 GetLocal(3);
      JumpCall: 042074, #actuals: 3
    }
  }
LocReturn 042064:
  PushStack call_result;
  TraceOperation 042072 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[292]--------------------------------------------------
LocRoutine 042074:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 1;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 042095
LocOp 042095:
  TraceOperation 042095 (Get_child (Var (Local 1)) (Local 4) (Branch F Dtrue));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    TraceOperation 042099 (Get_parent (Var (Global 195)) Sp);
    Let b3 = M[008298];
    Let b4 = M[008299];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
    PushStack Widen(b5);
    TraceOperation 042102 (Test_attr (Var Sp) (Con 12) (Branch F (Dloc 042109)));
    PopStack popped6;
    Let b7 = M[Offset(Offset(000751,Mul(popped6,9)),1)];
    if (TestBit(b7,3)) {
      TraceOperation 042106 (Get_parent (Var (Global 195)) (Local 6));
      Let b8 = M[008298];
      Let b9 = M[008299];
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),4)];
      SetLocal 6 Widen(b10);
      Jump: 042109
    } else {
      Jump: 042109
    }
  }
LocOp 042109:
  TraceOperation 042109 (Get_parent (Var (Local 1)) Sp);
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),4)];
  PushStack Widen(b1);
  TraceOperation 042112 (Je [Con 31,Var (Local 1),Var Sp] (Branch F (Dloc 042124)));
  PopStack popped2;
  if (LogOr(Equal(31,GetLocal(1)),Equal(31,popped2))) {
    TraceOperation 042118 (Store (Con 9) (Con 1));
    SetLocal 9 1;
    TraceOperation 042121 (Jump 042207);
    Jump: 042207
  } else {
    Jump: 042124
  }
LocOp 042124:
  TraceOperation 042124 (Jz (Var (Local 4)) (Branch F (Dloc 042130)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 042127 (Jump 042207);
    Jump: 042207
  } else {
    Jump: 042130
  }
LocOp 042130:
  TraceOperation 042130 (Je [Var (Local 4),Var (Local 6)] (Branch F (Dloc 042140)));
  if (Equal(GetLocal(4),GetLocal(6))) {
    TraceOperation 042134 (Store (Con 8) (Con 1));
    SetLocal 8 1;
    TraceOperation 042137 (Jump 042200);
    Jump: 042200
  } else {
    Jump: 042140
  }
LocOp 042140:
  TraceOperation 042140 (Je [Var (Local 4),Var (Global 195)] (Branch F (Dloc 042147)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(GetLocal(4),MakeHiLo(b1,b2))) {
    TraceOperation 042144 (Jump 042200);
    Jump: 042200
  } else {
    Jump: 042147
  }
LocOp 042147:
  TraceOperation 042147 (Test_attr (Var (Local 4)) (Con 6) (Branch T (Dloc 042200)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),0)];
  if (TestBit(b1,1)) {
    Jump: 042200
  } else {
    TraceOperation 042151 (Test_attr (Var (Local 4)) (Con 5) (Branch T (Dloc 042200)));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),0)];
    if (TestBit(b2,2)) {
      Jump: 042200
    } else {
      TraceOperation 042155 (Get_prop (Var (Local 4)) (Con 14) (Local 7));
      Let b3 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),7)];
      Let b4 = M[Offset(Offset(Offset(000751,Mul(GetLocal(4),9)),7),1)];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Error: getPropsA
    }
  }
LocOp 042169:
  TraceOperation 042169 (Call (Floc 043506) [Var (Local 4)] Sp);
  PushFrame 042169;
  SetLocal 1 GetLocal(4);
  JumpCall: 043506, #actuals: 1
LocReturn 042169:
  PushStack call_result;
  TraceOperation 042175 (Jz (Var Sp) (Branch T (Dloc 042200)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042200
  } else {
    TraceOperation 042178 (Get_parent (Var (Local 4)) Sp);
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),4)];
    PushStack Widen(b2);
    TraceOperation 042181 (Get_prop (Var Sp) (Con 21) Sp);
    PopStack popped3;
    Let b4 = M[Offset(Offset(000751,Mul(popped3,9)),7)];
    Let b5 = M[Offset(Offset(Offset(000751,Mul(popped3,9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Error: getPropsA
  }
LocReturn 042192:
  PushStack call_result;
  Jump: 042200
LocOp 042200:
  TraceOperation 042200 (Get_sibling (Var (Local 4)) (Local 4) (Branch T (Dloc 042204)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),5)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 042204 (Jump 042124);
    Jump: 042124
  } else {
    TraceOperation 042204 (Jump 042124);
    Jump: 042124
  }
LocOp 042207:
  TraceOperation 042207 (Get_child (Var (Local 1)) (Local 4) (Branch T (Dloc 042211)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 042211
  } else {
    Jump: 042211
  }
LocOp 042211:
  TraceOperation 042211 (Jz (Var (Local 4)) (Branch F (Dloc 042245)));
  if (IsZero(GetLocal(4))) {
    TraceOperation 042214 (Jz (Var (Local 8)) (Branch T (Dloc 042232)));
    if (IsZero(GetLocal(8))) {
      Jump: 042232
    } else {
      TraceOperation 042217 (Jz (Var (Local 6)) (Branch T (Dloc 042232)));
      if (IsZero(GetLocal(6))) {
        Jump: 042232
      } else {
        TraceOperation 042220 (Get_child (Var (Local 6)) Sp (Branch F (Dloc 042232)));
        Let b1 = M[Offset(Offset(000751,Mul(GetLocal(6),9)),6)];
        PushStack Widen(b1);
        if (IsZero(Widen(b1))) {
          Jump: 042232
        } else {
          TraceOperation 042224 (Call (Floc 042074) [Var (Local 6),Var (Local 2),Var (Local 3)] Sp);
          PushFrame 042224;
          SetLocal 1 GetLocal(6);
          SetLocal 2 GetLocal(2);
          SetLocal 3 GetLocal(3);
          JumpCall: 042074, #actuals: 3
        }
      }
    }
  } else {
    Jump: 042245
  }
LocReturn 042224:
  PushStack call_result;
  Jump: 042232
LocOp 042232:
  TraceOperation 042232 (Jz (Var (Local 5)) (Branch F (Dloc 042240)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 042235 (Push (Con 1));
    PushStack 1;
    TraceOperation 042238 (Ret (Var Sp));
    PopStack popped1;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: popped1
  } else {
    Jump: 042240
  }
LocOp 042240:
  TraceOperation 042240 (Push (Con 0));
  PushStack 0;
  TraceOperation 042243 (Ret (Var Sp));
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 042245:
  TraceOperation 042245 (Je [Var (Local 4),Var (Local 6),Con 31] (Branch F (Dloc 042254)));
  if (LogOr(Equal(GetLocal(4),GetLocal(6)),Equal(GetLocal(4),31))) {
    TraceOperation 042251 (Jump 042353);
    Jump: 042353
  } else {
    Jump: 042254
  }
LocOp 042254:
  TraceOperation 042254 (Test_attr (Var (Local 4)) (Con 6) (Branch T (Dloc 042353)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),0)];
  if (TestBit(b1,1)) {
    Jump: 042353
  } else {
    TraceOperation 042259 (Jz (Var (Local 9)) (Branch F (Dloc 042274)));
    if (IsZero(GetLocal(9))) {
      TraceOperation 042262 (Test_attr (Var (Local 4)) (Con 5) (Branch T (Dloc 042274)));
      Let b2 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),0)];
      if (TestBit(b2,2)) {
        Jump: 042274
      } else {
        TraceOperation 042266 (Get_prop (Var (Local 4)) (Con 14) Sp);
        Let b3 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),7)];
        Let b4 = M[Offset(Offset(Offset(000751,Mul(GetLocal(4),9)),7),1)];
        Let b5 = M[Address(MakeHiLo(b3,b4))];
        Error: getPropsA
      }
    } else {
      Jump: 042274
    }
  }
LocOp 042274:
  TraceOperation 042274 (Je [Var (Local 4),Con 96] (Branch F (Dloc 042292)));
  if (Equal(GetLocal(4),96)) {
    TraceOperation 042278 (Je [Var (Global 0),Con 98] (Branch F (Dloc 042292)));
    Let b1 = M[007908];
    Let b2 = M[007909];
    if (Equal(MakeHiLo(b1,b2),98)) {
      TraceOperation 042282 (Jin (Var (Local 4)) (Var (Global 0)) (Branch F (Dloc 042292)));
      Let b3 = M[007908];
      Let b4 = M[007909];
      Let b5 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),4)];
      if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
        TraceOperation 042286 (Set_attr (Var (Local 4)) (Con 27));
        Let b6 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),3)];
        SetByte Offset(Offset(000751,Mul(GetLocal(4),9)),3) SetBit(b6,4);
        TraceOperation 042289 (Jump 042353);
        Jump: 042353
      } else {
        Jump: 042292
      }
    } else {
      Jump: 042292
    }
  } else {
    Jump: 042292
  }
LocOp 042292:
  TraceOperation 042292 (Test_attr (Var (Local 4)) (Con 27) (Branch T (Dloc 042332)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),3)];
  if (TestBit(b1,4)) {
    Jump: 042332
  } else {
    TraceOperation 042296 (Jz (Var (Local 5)) (Branch T (Dloc 042321)));
    if (IsZero(GetLocal(5))) {
      Jump: 042321
    } else {
      TraceOperation 042299 (Call (Floc 042442) [Var (Local 1),Var (Local 3)] Sp);
      PushFrame 042299;
      SetLocal 1 GetLocal(1);
      SetLocal 2 GetLocal(3);
      JumpCall: 042442, #actuals: 2
    }
  }
LocReturn 042299:
  PushStack call_result;
  TraceOperation 042306 (Jz (Var Sp) (Branch T (Dloc 042316)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042316
  } else {
    TraceOperation 042309 (Jl (Var (Local 3)) (Con 0) (Branch F (Dloc 042316)));
    if (LessThan(GetLocal(3),0)) {
      TraceOperation 042313 (Store (Con 3) (Con 0));
      SetLocal 3 0;
      Jump: 042316
    } else {
      Jump: 042316
    }
  }
LocOp 042316:
  TraceOperation 042316 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 042318 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  Jump: 042321
LocOp 042321:
  TraceOperation 042321 (Call (Floc 041790) [Var (Local 4),Var (Local 2),Var (Local 3)] Sp);
  PushFrame 042321;
  SetLocal 1 GetLocal(4);
  SetLocal 2 GetLocal(2);
  SetLocal 3 GetLocal(3);
  JumpCall: 041790, #actuals: 3
LocReturn 042321:
  PushStack call_result;
  TraceOperation 042329 (Jump 042353);
  Jump: 042353
LocOp 042332:
  TraceOperation 042332 (Get_child (Var (Local 4)) Sp (Branch F (Dloc 042353)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),6)];
  PushStack Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 042353
  } else {
    TraceOperation 042336 (Call (Floc 043506) [Var (Local 4)] Sp);
    PushFrame 042336;
    SetLocal 1 GetLocal(4);
    JumpCall: 043506, #actuals: 1
  }
LocReturn 042336:
  PushStack call_result;
  TraceOperation 042342 (Jz (Var Sp) (Branch T (Dloc 042353)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042353
  } else {
    TraceOperation 042345 (Call (Floc 042074) [Var (Local 4),Var (Local 2),Var (Local 3)] Sp);
    PushFrame 042345;
    SetLocal 1 GetLocal(4);
    SetLocal 2 GetLocal(2);
    SetLocal 3 GetLocal(3);
    JumpCall: 042074, #actuals: 3
  }
LocReturn 042345:
  PushStack call_result;
  Jump: 042353
LocOp 042353:
  TraceOperation 042353 (Get_sibling (Var (Local 4)) (Local 4) (Branch T (Dloc 042357)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),5)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 042357 (Jump 042211);
    Jump: 042211
  } else {
    TraceOperation 042357 (Jump 042211);
    Jump: 042211
  }
--[293]--------------------------------------------------
LocRoutine 042360:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 1;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 042373
LocOp 042373:
  TraceOperation 042373 (Get_child (Var (Local 1)) (Local 2) (Branch F Dfalse));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    Jump: 042377
  }
LocOp 042377:
  TraceOperation 042377 (Get_sibling (Var (Local 2)) (Local 3) (Branch T (Dloc 042381)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),5)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 042381 (Jz (Var (Local 4)) (Branch T (Dloc 042390)));
    if (IsZero(GetLocal(4))) {
      Jump: 042390
    } else {
      TraceOperation 042384 (Store (Con 4) (Con 0));
      SetLocal 4 0;
      TraceOperation 042387 (Jump 042401);
      Jump: 042401
    }
  } else {
    TraceOperation 042381 (Jz (Var (Local 4)) (Branch T (Dloc 042390)));
    if (IsZero(GetLocal(4))) {
      Jump: 042390
    } else {
      TraceOperation 042384 (Store (Con 4) (Con 0));
      SetLocal 4 0;
      TraceOperation 042387 (Jump 042401);
      Jump: 042401
    }
  }
LocOp 042390:
  TraceOperation 042390 (Print ",");
  GamePrint ",";
  TraceOperation 042393 (Jz (Var (Local 3)) (Branch F (Dloc 042401)));
  if (IsZero(GetLocal(3))) {
    TraceOperation 042396 (Print " and");
    GamePrint " and";
    Jump: 042401
  } else {
    Jump: 042401
  }
LocOp 042401:
  TraceOperation 042401 (Call (Floc 043738) [Var (Local 2)] Sp);
  PushFrame 042401;
  SetLocal 1 GetLocal(2);
  JumpCall: 043738, #actuals: 1
LocReturn 042401:
  PushStack call_result;
  TraceOperation 042407 (Jz (Var (Local 5)) (Branch F (Dloc 042419)));
  if (IsZero(GetLocal(5))) {
    TraceOperation 042410 (Jz (Var (Local 6)) (Branch F (Dloc 042419)));
    if (IsZero(GetLocal(6))) {
      TraceOperation 042413 (Store (Con 5) (Var (Local 2)));
      SetLocal 5 GetLocal(2);
      TraceOperation 042416 (Jump 042425);
      Jump: 042425
    } else {
      Jump: 042419
    }
  } else {
    Jump: 042419
  }
LocOp 042419:
  TraceOperation 042419 (Store (Con 6) (Con 1));
  SetLocal 6 1;
  TraceOperation 042422 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  Jump: 042425
LocOp 042425:
  TraceOperation 042425 (Store (Con 2) (Var (Local 3)));
  SetLocal 2 GetLocal(3);
  TraceOperation 042428 (Jz (Var (Local 2)) (Branch F (Dloc 042377)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 042432 (Jz (Var (Local 5)) (Branch T Dtrue));
    if (IsZero(GetLocal(5))) {
      PopFrame return_address_1;
      JumpReturn: return_address_1, result: 1
    } else {
      TraceOperation 042435 (Jz (Var (Local 6)) (Branch F Dtrue));
      if (IsZero(GetLocal(6))) {
        TraceOperation 042438 (Store (Con 207) (Var (Local 5)));
        SetByte 008290 HiByte(GetLocal(5));
        SetByte 008291 LoByte(GetLocal(5));
        TraceOperation 042441 Rtrue;
        PopFrame return_address_2;
        JumpReturn: return_address_2, result: 1
      } else {
        PopFrame return_address_3;
        JumpReturn: return_address_3, result: 1
      }
    }
  } else {
    Jump: 042377
  }
--[294]--------------------------------------------------
LocRoutine 042442:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 042447
LocOp 042447:
  TraceOperation 042447 (Je [Var (Local 1),Var (Global 195)] (Branch T Dtrue));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    TraceOperation 042451 (Jin (Var (Local 1)) (Con 217) (Branch T Dfalse));
    Let b4 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),4)];
    if (Equal(217,Widen(b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 042455 (Jg (Var (Local 2)) (Con 0) (Branch F (Dloc 042465)));
      if (GreaterThan(GetLocal(2),0)) {
        TraceOperation 042459 (Loadw (Var (Global 84)) (Var (Local 2)) Sp);
        Let b6 = M[008076];
        Let b7 = M[008077];
        Let b8 = M[Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(2)))];
        Let b9 = M[Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,GetLocal(2))),1)];
        PushStack MakeHiLo(b8,b9);
        TraceOperation 042463 (Print_paddr (Var Sp));
        PopStack popped10;
        GamePrint GetText(PackedAddress Z3(popped10));
        Jump: 042465
      } else {
        Jump: 042465
      }
    }
  }
LocOp 042465:
  TraceOperation 042465 (Test_attr (Var (Local 1)) (Con 8) (Branch F (Dloc 042487)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),1)];
  if (TestBit(b1,7)) {
    TraceOperation 042469 (Print "Sitting on the ");
    GamePrint "Sitting on the ";
    TraceOperation 042480 (Print_obj (Var (Local 1)));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
    Let b3 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 042482 (Print_ret " is:");
      GamePrint " is:\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 042482 (Print_ret " is:");
      GamePrint " is:\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 042487
  }
LocOp 042487:
  TraceOperation 042487 (Test_attr (Var (Local 1)) (Con 26) (Branch F (Dloc 042513)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),3)];
  if (TestBit(b1,5)) {
    TraceOperation 042491 (Je [Var (Local 1),Con 209] (Branch T (Dloc 042513)));
    if (Equal(GetLocal(1),209)) {
      Jump: 042513
    } else {
      TraceOperation 042495 (Print_paddr (Var (Global 46)));
      Let b2 = M[008000];
      Let b3 = M[008001];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
      TraceOperation 042497 (Call (Floc 043738) [Var (Local 1),Con 1] Sp);
      PushFrame 042497;
      SetLocal 1 GetLocal(1);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    }
  } else {
    Jump: 042513
  }
LocReturn 042497:
  PushStack call_result;
  TraceOperation 042504 (Print_ret " is holding:");
  GamePrint " is holding:\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 042513:
  TraceOperation 042513 (Print_paddr (Var (Global 46)));
  Let b1 = M[008000];
  Let b2 = M[008001];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 042515 (Call (Floc 043738) [Var (Local 1),Con 1] Sp);
  PushFrame 042515;
  SetLocal 1 GetLocal(1);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 042515:
  PushStack call_result;
  TraceOperation 042522 (Print_ret " contains:");
  GamePrint " contains:\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[295]--------------------------------------------------
LocRoutine 042532:
  MakeRoutineFrame 0;
  Jump: 042533
LocOp 042533:
  TraceOperation 042533 (Insert_obj (Con 31) (Con 217));
  Let b1 = M[001034];
  if (IsZero(Widen(b1))) {
    SetByte 001034 217;
    Let b2 = M[002710];
    SetByte 001035 LoByte(Widen(b2));
    SetByte 002710 31;
    TraceOperation 042536 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 042549)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    PushStack Widen(b5);
    if (IsZero(Widen(b5))) {
      Jump: 042549
    } else {
      TraceOperation 042540 (Call (Floc 042074) [Var (Global 201)] Sp);
      Let b6 = M[008310];
      Let b7 = M[008311];
      PushFrame 042540;
      SetLocal 1 MakeHiLo(b6,b7);
      JumpCall: 042074, #actuals: 1
    }
  } else {
    Let b8 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b8),31)) {
      Let b9 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b9));
      SetByte 001034 217;
      Let b10 = M[002710];
      SetByte 001035 LoByte(Widen(b10));
      SetByte 002710 31;
      TraceOperation 042536 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 042549)));
      Let b11 = M[008310];
      Let b12 = M[008311];
      Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6)];
      PushStack Widen(b13);
      if (IsZero(Widen(b13))) {
        Jump: 042549
      } else {
        TraceOperation 042540 (Call (Floc 042074) [Var (Global 201)] Sp);
        Let b14 = M[008310];
        Let b15 = M[008311];
        PushFrame 042540;
        SetLocal 1 MakeHiLo(b14,b15);
        JumpCall: 042074, #actuals: 1
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 042540:
  PushStack call_result;
  TraceOperation 042546 (Jump 042569);
  Jump: 042569
--[296]--------------------------------------------------
LocRoutine 042574:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 1;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 042579
LocOp 042579:
  TraceOperation 042579 (Insert_obj (Con 31) (Var (Local 1)));
  Let b1 = M[001034];
  if (IsZero(Widen(b1))) {
    SetByte 001034 LoByte(GetLocal(1));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
    SetByte 001035 LoByte(Widen(b2));
    SetByte Offset(Offset(000751,Mul(GetLocal(1),9)),6) 31;
    TraceOperation 042582 (Store (Con 16) (Var (Local 1)));
    SetByte 007908 HiByte(GetLocal(1));
    SetByte 007909 LoByte(GetLocal(1));
    TraceOperation 042585 (Je [Var (Global 0),Con 25] (Branch T (Dloc 042592)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),25)) {
      Jump: 042592
    } else {
      TraceOperation 042589 (Insert_obj (Con 94) (Var (Global 0)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[001601];
      if (IsZero(Widen(b7))) {
        SetByte 001601 b6;
        Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
        SetByte 001602 LoByte(Widen(b8));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 94;
        Jump: 042592
      } else {
        Let b9 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
        if (Equal(Widen(b9),94)) {
          Let b10 = M[001602];
          SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b10));
          SetByte 001601 b6;
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
          SetByte 001602 LoByte(Widen(b11));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 94;
          Jump: 042592
        } else {
          Error: unlink/loop
        }
      }
    }
  } else {
    Let b12 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b12),31)) {
      Let b13 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b13));
      SetByte 001034 LoByte(GetLocal(1));
      Let b14 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
      SetByte 001035 LoByte(Widen(b14));
      SetByte Offset(Offset(000751,Mul(GetLocal(1),9)),6) 31;
      TraceOperation 042582 (Store (Con 16) (Var (Local 1)));
      SetByte 007908 HiByte(GetLocal(1));
      SetByte 007909 LoByte(GetLocal(1));
      TraceOperation 042585 (Je [Var (Global 0),Con 25] (Branch T (Dloc 042592)));
      Let b15 = M[007908];
      Let b16 = M[007909];
      if (Equal(MakeHiLo(b15,b16),25)) {
        Jump: 042592
      } else {
        TraceOperation 042589 (Insert_obj (Con 94) (Var (Global 0)));
        Let b17 = M[007908];
        Let b18 = M[007909];
        Let b19 = M[001601];
        if (IsZero(Widen(b19))) {
          SetByte 001601 b18;
          Let b20 = M[Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6)];
          SetByte 001602 LoByte(Widen(b20));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6) 94;
          Jump: 042592
        } else {
          Let b21 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
          if (Equal(Widen(b21),94)) {
            Let b22 = M[001602];
            SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b22));
            SetByte 001601 b18;
            Let b23 = M[Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6)];
            SetByte 001602 LoByte(Widen(b23));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6) 94;
            Jump: 042592
          } else {
            Error: unlink/loop
          }
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 042592:
  TraceOperation 042592 (Call (Floc 028316) [Var (Global 0)] (Global 85));
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame 042592;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 028316, #actuals: 1
LocReturn 042592:
  SetByte 008078 HiByte(call_result);
  SetByte 008079 LoByte(call_result);
  TraceOperation 042598 (Call (Floc 042626) [] Sp);
  PushFrame 042598;
  JumpCall: 042626, #actuals: 0
LocReturn 042598:
  PushStack call_result;
  TraceOperation 042603 (Get_prop (Var (Global 0)) (Con 29) Sp);
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocReturn 042607:
  PushStack call_result;
  TraceOperation 042612 (Jz (Var (Local 2)) (Branch T Dtrue));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 042615 (Je [Var (Global 0),Var (Local 1)] (Branch F Dtrue));
    Let b2 = M[007908];
    Let b3 = M[007909];
    if (Equal(MakeHiLo(b2,b3),GetLocal(1))) {
      TraceOperation 042619 (Call (Floc 032434) [] Sp);
      PushFrame 042619;
      JumpCall: 032434, #actuals: 0
    } else {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    }
  }
LocReturn 042619:
  PushStack call_result;
  TraceOperation 042624 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[297]--------------------------------------------------
LocRoutine 042626:
  MakeRoutineFrame 0;
  Jump: 042627
LocOp 042627:
  TraceOperation 042627 (Jz (Var (Global 210)) (Branch T (Dloc 042669)));
  Let b1 = M[008328];
  Let b2 = M[008329];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 042669
  } else {
    TraceOperation 042630 (Call (Floc 043468) [Con 186] Sp);
    PushFrame 042630;
    SetLocal 1 186;
    JumpCall: 043468, #actuals: 1
  }
LocReturn 042630:
  PushStack call_result;
  TraceOperation 042636 (Jz (Var Sp) (Branch T (Dloc 042669)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042669
  } else {
    TraceOperation 042639 (Store (Con 226) (Con 0));
    SetByte 008328 0;
    SetByte 008329 0;
    TraceOperation 042642 (Clear_attr (Con 186) (Con 27));
    Let b2 = M[002428];
    SetByte 002428 ClearBit(b2,4);
    TraceOperation 042645 (Print "(unplugging the spare drive first)");
    GamePrint "(unplugging the spare drive first)";
    TraceOperation 042668 New_line;
    GamePrint "\n";
    Jump: 042669
  }
LocOp 042669:
  TraceOperation 042669 (Call (Floc 043674) [Con 186,Con 182] Sp);
  PushFrame 042669;
  SetLocal 1 186;
  SetLocal 2 182;
  JumpCall: 043674, #actuals: 2
LocReturn 042669:
  PushStack call_result;
  TraceOperation 042676 (Jz (Var Sp) (Branch T (Dloc 042711)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042711
  } else {
    TraceOperation 042679 (Jz (Var (Global 209)) (Branch T (Dloc 042711)));
    Let b2 = M[008326];
    Let b3 = M[008327];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 042711
    } else {
      TraceOperation 042682 (Store (Con 225) (Con 0));
      SetByte 008326 0;
      SetByte 008327 0;
      TraceOperation 042685 (Print "(disconnecting the short cord first)");
      GamePrint "(disconnecting the short cord first)";
      TraceOperation 042710 New_line;
      GamePrint "\n";
      Jump: 042711
    }
  }
LocOp 042711:
  TraceOperation 042711 (Call (Floc 043674) [Var (Global 208),Con 182] Sp);
  Let b1 = M[008324];
  Let b2 = M[008325];
  PushFrame 042711;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 182;
  JumpCall: 043674, #actuals: 2
LocReturn 042711:
  PushStack call_result;
  TraceOperation 042718 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 042721 (Jz (Var (Global 208)) (Branch T Dfalse));
    Let b3 = M[008324];
    Let b4 = M[008325];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 042724 (Store (Con 224) (Con 0));
      SetByte 008324 0;
      SetByte 008325 0;
      TraceOperation 042727 (Call (Floc 057820) [] Sp);
      PushFrame 042727;
      JumpCall: 057820, #actuals: 0
    }
  }
LocReturn 042727:
  PushStack call_result;
  TraceOperation 042732 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[298]--------------------------------------------------
LocRoutine 042734:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 042737
LocOp 042737:
  TraceOperation 042737 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z3(GetLocal(1)));
  TraceOperation 042739 (Jz (Var (Global 75)) (Branch T (Dloc 043255)));
  Let b1 = M[008058];
  Let b2 = M[008059];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 043255
  } else {
    TraceOperation 042743 (Print " Everything becomes...");
    GamePrint " Everything becomes...";
    TraceOperation 042762 New_line;
    GamePrint "\n";
    TraceOperation 042763 New_line;
    GamePrint "\n";
    TraceOperation 042764 (Je [Var (Global 120),Con 142] (Branch F (Dloc 042867)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),142)) {
      TraceOperation 042769 (Call (Floc 043644) [Con 31,Con 219] Sp);
      PushFrame 042769;
      SetLocal 1 31;
      SetLocal 2 219;
      JumpCall: 043644, #actuals: 2
    } else {
      Jump: 042867
    }
  }
LocReturn 042769:
  PushStack call_result;
  TraceOperation 042776 (Loadw (Var (Global 123)) (Con 4) Sp);
  Let b1 = M[008154];
  Let b2 = M[008155];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),8)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),8),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 042780 (Jz (Var Sp) (Branch T (Dloc 042786)));
  PopStack popped5;
  if (IsZero(popped5)) {
    Jump: 042786
  } else {
    TraceOperation 042783 (Set_attr (Con 7) (Con 3));
    Let b6 = M[000814];
    SetByte 000814 SetBit(b6,4);
    Jump: 042786
  }
LocOp 042786:
  TraceOperation 042786 (Call (Floc 043644) [Con 97,Con 31] Sp);
  PushFrame 042786;
  SetLocal 1 97;
  SetLocal 2 31;
  JumpCall: 043644, #actuals: 2
LocReturn 042786:
  PushStack call_result;
  TraceOperation 042793 (Loadw (Var (Global 123)) (Con 0) Sp);
  Let b1 = M[008154];
  Let b2 = M[008155];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 042797 (Insert_obj (Con 141) (Var Sp));
  PopStack popped5;
  Let b6 = M[002024];
  if (IsZero(Widen(b6))) {
    SetByte 002024 LoByte(popped5);
    Let b7 = M[Offset(Offset(000751,Mul(popped5,9)),6)];
    SetByte 002025 LoByte(Widen(b7));
    SetByte Offset(Offset(000751,Mul(popped5,9)),6) 141;
    TraceOperation 042800 (Loadw (Var (Global 123)) (Con 1) Sp);
    Let b8 = M[008154];
    Let b9 = M[008155];
    Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),2)];
    Let b11 = M[Offset(Offset(Address(MakeHiLo(b8,b9)),2),1)];
    PushStack MakeHiLo(b10,b11);
    TraceOperation 042804 (Insert_obj (Con 7) (Var Sp));
    PopStack popped12;
    Let b13 = M[000818];
    if (IsZero(Widen(b13))) {
      SetByte 000818 LoByte(popped12);
      Let b14 = M[Offset(Offset(000751,Mul(popped12,9)),6)];
      SetByte 000819 LoByte(Widen(b14));
      SetByte Offset(Offset(000751,Mul(popped12,9)),6) 7;
      TraceOperation 042807 (Loadw (Var (Global 123)) (Con 2) Sp);
      Let b15 = M[008154];
      Let b16 = M[008155];
      Let b17 = M[Offset(Address(MakeHiLo(b15,b16)),4)];
      Let b18 = M[Offset(Offset(Address(MakeHiLo(b15,b16)),4),1)];
      PushStack MakeHiLo(b17,b18);
      TraceOperation 042811 (Insert_obj (Con 1) (Var Sp));
      PopStack popped19;
      Let b20 = M[000764];
      if (IsZero(Widen(b20))) {
        SetByte 000764 LoByte(popped19);
        Let b21 = M[Offset(Offset(000751,Mul(popped19,9)),6)];
        SetByte 000765 LoByte(Widen(b21));
        SetByte Offset(Offset(000751,Mul(popped19,9)),6) 1;
        TraceOperation 042814 (Loadw (Var (Global 123)) (Con 3) Sp);
        Let b22 = M[008154];
        Let b23 = M[008155];
        Let b24 = M[Offset(Address(MakeHiLo(b22,b23)),6)];
        Let b25 = M[Offset(Offset(Address(MakeHiLo(b22,b23)),6),1)];
        PushStack MakeHiLo(b24,b25);
        TraceOperation 042818 (Insert_obj (Con 139) (Var Sp));
        PopStack popped26;
        Let b27 = M[002006];
        if (IsZero(Widen(b27))) {
          SetByte 002006 LoByte(popped26);
          Let b28 = M[Offset(Offset(000751,Mul(popped26,9)),6)];
          SetByte 002007 LoByte(Widen(b28));
          SetByte Offset(Offset(000751,Mul(popped26,9)),6) 139;
          TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
          Let b29 = M[008154];
          Let b30 = M[008155];
          Let b31 = M[Offset(Address(MakeHiLo(b29,b30)),10)];
          Let b32 = M[Offset(Offset(Address(MakeHiLo(b29,b30)),10),1)];
          PushStack MakeHiLo(b31,b32);
          TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
          PopStack popped33;
          Let b34 = M[001853];
          if (IsZero(Widen(b34))) {
            SetByte 001853 LoByte(popped33);
            Let b35 = M[Offset(Offset(000751,Mul(popped33,9)),6)];
            SetByte 001854 LoByte(Widen(b35));
            SetByte Offset(Offset(000751,Mul(popped33,9)),6) 122;
            TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
            Let b36 = M[001984];
            if (TestBit(b36,3)) {
              Jump: 042835
            } else {
              TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
              Let b37 = M[002015];
              if (IsZero(Widen(b37))) {
                SetByte 002015 141;
                Let b38 = M[002026];
                SetByte 002016 LoByte(Widen(b38));
                SetByte 002026 140;
                Jump: 042835
              } else {
                Let b39 = M[Offset(Offset(000751,Mul(Widen(b37),9)),6)];
                if (Equal(Widen(b39),140)) {
                  Let b40 = M[002016];
                  SetByte Offset(Offset(000751,Mul(Widen(b37),9)),6) LoByte(Widen(b40));
                  SetByte 002015 141;
                  Let b41 = M[002026];
                  SetByte 002016 LoByte(Widen(b41));
                  SetByte 002026 140;
                  Jump: 042835
                } else {
                  Error: unlink/loop
                }
              }
            }
          } else {
            Let b42 = M[Offset(Offset(000751,Mul(Widen(b34),9)),6)];
            if (Equal(Widen(b42),122)) {
              Let b43 = M[001854];
              SetByte Offset(Offset(000751,Mul(Widen(b34),9)),6) LoByte(Widen(b43));
              SetByte 001853 LoByte(popped33);
              Let b44 = M[Offset(Offset(000751,Mul(popped33,9)),6)];
              SetByte 001854 LoByte(Widen(b44));
              SetByte Offset(Offset(000751,Mul(popped33,9)),6) 122;
              TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
              Let b45 = M[001984];
              if (TestBit(b45,3)) {
                Jump: 042835
              } else {
                TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                Let b46 = M[002015];
                if (IsZero(Widen(b46))) {
                  SetByte 002015 141;
                  Let b47 = M[002026];
                  SetByte 002016 LoByte(Widen(b47));
                  SetByte 002026 140;
                  Jump: 042835
                } else {
                  Let b48 = M[Offset(Offset(000751,Mul(Widen(b46),9)),6)];
                  if (Equal(Widen(b48),140)) {
                    Let b49 = M[002016];
                    SetByte Offset(Offset(000751,Mul(Widen(b46),9)),6) LoByte(Widen(b49));
                    SetByte 002015 141;
                    Let b50 = M[002026];
                    SetByte 002016 LoByte(Widen(b50));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Error: unlink/loop
                  }
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b51 = M[Offset(Offset(000751,Mul(Widen(b27),9)),6)];
          if (Equal(Widen(b51),139)) {
            Let b52 = M[002007];
            SetByte Offset(Offset(000751,Mul(Widen(b27),9)),6) LoByte(Widen(b52));
            SetByte 002006 LoByte(popped26);
            Let b53 = M[Offset(Offset(000751,Mul(popped26,9)),6)];
            SetByte 002007 LoByte(Widen(b53));
            SetByte Offset(Offset(000751,Mul(popped26,9)),6) 139;
            TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
            Let b54 = M[008154];
            Let b55 = M[008155];
            Let b56 = M[Offset(Address(MakeHiLo(b54,b55)),10)];
            Let b57 = M[Offset(Offset(Address(MakeHiLo(b54,b55)),10),1)];
            PushStack MakeHiLo(b56,b57);
            TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
            PopStack popped58;
            Let b59 = M[001853];
            if (IsZero(Widen(b59))) {
              SetByte 001853 LoByte(popped58);
              Let b60 = M[Offset(Offset(000751,Mul(popped58,9)),6)];
              SetByte 001854 LoByte(Widen(b60));
              SetByte Offset(Offset(000751,Mul(popped58,9)),6) 122;
              TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
              Let b61 = M[001984];
              if (TestBit(b61,3)) {
                Jump: 042835
              } else {
                TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                Let b62 = M[002015];
                if (IsZero(Widen(b62))) {
                  SetByte 002015 141;
                  Let b63 = M[002026];
                  SetByte 002016 LoByte(Widen(b63));
                  SetByte 002026 140;
                  Jump: 042835
                } else {
                  Let b64 = M[Offset(Offset(000751,Mul(Widen(b62),9)),6)];
                  if (Equal(Widen(b64),140)) {
                    Let b65 = M[002016];
                    SetByte Offset(Offset(000751,Mul(Widen(b62),9)),6) LoByte(Widen(b65));
                    SetByte 002015 141;
                    Let b66 = M[002026];
                    SetByte 002016 LoByte(Widen(b66));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Error: unlink/loop
                  }
                }
              }
            } else {
              Let b67 = M[Offset(Offset(000751,Mul(Widen(b59),9)),6)];
              if (Equal(Widen(b67),122)) {
                Let b68 = M[001854];
                SetByte Offset(Offset(000751,Mul(Widen(b59),9)),6) LoByte(Widen(b68));
                SetByte 001853 LoByte(popped58);
                Let b69 = M[Offset(Offset(000751,Mul(popped58,9)),6)];
                SetByte 001854 LoByte(Widen(b69));
                SetByte Offset(Offset(000751,Mul(popped58,9)),6) 122;
                TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                Let b70 = M[001984];
                if (TestBit(b70,3)) {
                  Jump: 042835
                } else {
                  TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                  Let b71 = M[002015];
                  if (IsZero(Widen(b71))) {
                    SetByte 002015 141;
                    Let b72 = M[002026];
                    SetByte 002016 LoByte(Widen(b72));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Let b73 = M[Offset(Offset(000751,Mul(Widen(b71),9)),6)];
                    if (Equal(Widen(b73),140)) {
                      Let b74 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b71),9)),6) LoByte(Widen(b74));
                      SetByte 002015 141;
                      Let b75 = M[002026];
                      SetByte 002016 LoByte(Widen(b75));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b76 = M[Offset(Offset(000751,Mul(Widen(b20),9)),6)];
        if (Equal(Widen(b76),1)) {
          Let b77 = M[000765];
          SetByte Offset(Offset(000751,Mul(Widen(b20),9)),6) LoByte(Widen(b77));
          SetByte 000764 LoByte(popped19);
          Let b78 = M[Offset(Offset(000751,Mul(popped19,9)),6)];
          SetByte 000765 LoByte(Widen(b78));
          SetByte Offset(Offset(000751,Mul(popped19,9)),6) 1;
          TraceOperation 042814 (Loadw (Var (Global 123)) (Con 3) Sp);
          Let b79 = M[008154];
          Let b80 = M[008155];
          Let b81 = M[Offset(Address(MakeHiLo(b79,b80)),6)];
          Let b82 = M[Offset(Offset(Address(MakeHiLo(b79,b80)),6),1)];
          PushStack MakeHiLo(b81,b82);
          TraceOperation 042818 (Insert_obj (Con 139) (Var Sp));
          PopStack popped83;
          Let b84 = M[002006];
          if (IsZero(Widen(b84))) {
            SetByte 002006 LoByte(popped83);
            Let b85 = M[Offset(Offset(000751,Mul(popped83,9)),6)];
            SetByte 002007 LoByte(Widen(b85));
            SetByte Offset(Offset(000751,Mul(popped83,9)),6) 139;
            TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
            Let b86 = M[008154];
            Let b87 = M[008155];
            Let b88 = M[Offset(Address(MakeHiLo(b86,b87)),10)];
            Let b89 = M[Offset(Offset(Address(MakeHiLo(b86,b87)),10),1)];
            PushStack MakeHiLo(b88,b89);
            TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
            PopStack popped90;
            Let b91 = M[001853];
            if (IsZero(Widen(b91))) {
              SetByte 001853 LoByte(popped90);
              Let b92 = M[Offset(Offset(000751,Mul(popped90,9)),6)];
              SetByte 001854 LoByte(Widen(b92));
              SetByte Offset(Offset(000751,Mul(popped90,9)),6) 122;
              TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
              Let b93 = M[001984];
              if (TestBit(b93,3)) {
                Jump: 042835
              } else {
                TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                Let b94 = M[002015];
                if (IsZero(Widen(b94))) {
                  SetByte 002015 141;
                  Let b95 = M[002026];
                  SetByte 002016 LoByte(Widen(b95));
                  SetByte 002026 140;
                  Jump: 042835
                } else {
                  Let b96 = M[Offset(Offset(000751,Mul(Widen(b94),9)),6)];
                  if (Equal(Widen(b96),140)) {
                    Let b97 = M[002016];
                    SetByte Offset(Offset(000751,Mul(Widen(b94),9)),6) LoByte(Widen(b97));
                    SetByte 002015 141;
                    Let b98 = M[002026];
                    SetByte 002016 LoByte(Widen(b98));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Error: unlink/loop
                  }
                }
              }
            } else {
              Let b99 = M[Offset(Offset(000751,Mul(Widen(b91),9)),6)];
              if (Equal(Widen(b99),122)) {
                Let b100 = M[001854];
                SetByte Offset(Offset(000751,Mul(Widen(b91),9)),6) LoByte(Widen(b100));
                SetByte 001853 LoByte(popped90);
                Let b101 = M[Offset(Offset(000751,Mul(popped90,9)),6)];
                SetByte 001854 LoByte(Widen(b101));
                SetByte Offset(Offset(000751,Mul(popped90,9)),6) 122;
                TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                Let b102 = M[001984];
                if (TestBit(b102,3)) {
                  Jump: 042835
                } else {
                  TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                  Let b103 = M[002015];
                  if (IsZero(Widen(b103))) {
                    SetByte 002015 141;
                    Let b104 = M[002026];
                    SetByte 002016 LoByte(Widen(b104));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Let b105 = M[Offset(Offset(000751,Mul(Widen(b103),9)),6)];
                    if (Equal(Widen(b105),140)) {
                      Let b106 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b103),9)),6) LoByte(Widen(b106));
                      SetByte 002015 141;
                      Let b107 = M[002026];
                      SetByte 002016 LoByte(Widen(b107));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b108 = M[Offset(Offset(000751,Mul(Widen(b84),9)),6)];
            if (Equal(Widen(b108),139)) {
              Let b109 = M[002007];
              SetByte Offset(Offset(000751,Mul(Widen(b84),9)),6) LoByte(Widen(b109));
              SetByte 002006 LoByte(popped83);
              Let b110 = M[Offset(Offset(000751,Mul(popped83,9)),6)];
              SetByte 002007 LoByte(Widen(b110));
              SetByte Offset(Offset(000751,Mul(popped83,9)),6) 139;
              TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
              Let b111 = M[008154];
              Let b112 = M[008155];
              Let b113 = M[Offset(Address(MakeHiLo(b111,b112)),10)];
              Let b114 = M[Offset(Offset(Address(MakeHiLo(b111,b112)),10),1)];
              PushStack MakeHiLo(b113,b114);
              TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
              PopStack popped115;
              Let b116 = M[001853];
              if (IsZero(Widen(b116))) {
                SetByte 001853 LoByte(popped115);
                Let b117 = M[Offset(Offset(000751,Mul(popped115,9)),6)];
                SetByte 001854 LoByte(Widen(b117));
                SetByte Offset(Offset(000751,Mul(popped115,9)),6) 122;
                TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                Let b118 = M[001984];
                if (TestBit(b118,3)) {
                  Jump: 042835
                } else {
                  TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                  Let b119 = M[002015];
                  if (IsZero(Widen(b119))) {
                    SetByte 002015 141;
                    Let b120 = M[002026];
                    SetByte 002016 LoByte(Widen(b120));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Let b121 = M[Offset(Offset(000751,Mul(Widen(b119),9)),6)];
                    if (Equal(Widen(b121),140)) {
                      Let b122 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b119),9)),6) LoByte(Widen(b122));
                      SetByte 002015 141;
                      Let b123 = M[002026];
                      SetByte 002016 LoByte(Widen(b123));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Let b124 = M[Offset(Offset(000751,Mul(Widen(b116),9)),6)];
                if (Equal(Widen(b124),122)) {
                  Let b125 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b116),9)),6) LoByte(Widen(b125));
                  SetByte 001853 LoByte(popped115);
                  Let b126 = M[Offset(Offset(000751,Mul(popped115,9)),6)];
                  SetByte 001854 LoByte(Widen(b126));
                  SetByte Offset(Offset(000751,Mul(popped115,9)),6) 122;
                  TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                  Let b127 = M[001984];
                  if (TestBit(b127,3)) {
                    Jump: 042835
                  } else {
                    TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                    Let b128 = M[002015];
                    if (IsZero(Widen(b128))) {
                      SetByte 002015 141;
                      Let b129 = M[002026];
                      SetByte 002016 LoByte(Widen(b129));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Let b130 = M[Offset(Offset(000751,Mul(Widen(b128),9)),6)];
                      if (Equal(Widen(b130),140)) {
                        Let b131 = M[002016];
                        SetByte Offset(Offset(000751,Mul(Widen(b128),9)),6) LoByte(Widen(b131));
                        SetByte 002015 141;
                        Let b132 = M[002026];
                        SetByte 002016 LoByte(Widen(b132));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Error: unlink/loop
                      }
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b133 = M[Offset(Offset(000751,Mul(Widen(b13),9)),6)];
      if (Equal(Widen(b133),7)) {
        Let b134 = M[000819];
        SetByte Offset(Offset(000751,Mul(Widen(b13),9)),6) LoByte(Widen(b134));
        SetByte 000818 LoByte(popped12);
        Let b135 = M[Offset(Offset(000751,Mul(popped12,9)),6)];
        SetByte 000819 LoByte(Widen(b135));
        SetByte Offset(Offset(000751,Mul(popped12,9)),6) 7;
        TraceOperation 042807 (Loadw (Var (Global 123)) (Con 2) Sp);
        Let b136 = M[008154];
        Let b137 = M[008155];
        Let b138 = M[Offset(Address(MakeHiLo(b136,b137)),4)];
        Let b139 = M[Offset(Offset(Address(MakeHiLo(b136,b137)),4),1)];
        PushStack MakeHiLo(b138,b139);
        TraceOperation 042811 (Insert_obj (Con 1) (Var Sp));
        PopStack popped140;
        Let b141 = M[000764];
        if (IsZero(Widen(b141))) {
          SetByte 000764 LoByte(popped140);
          Let b142 = M[Offset(Offset(000751,Mul(popped140,9)),6)];
          SetByte 000765 LoByte(Widen(b142));
          SetByte Offset(Offset(000751,Mul(popped140,9)),6) 1;
          TraceOperation 042814 (Loadw (Var (Global 123)) (Con 3) Sp);
          Let b143 = M[008154];
          Let b144 = M[008155];
          Let b145 = M[Offset(Address(MakeHiLo(b143,b144)),6)];
          Let b146 = M[Offset(Offset(Address(MakeHiLo(b143,b144)),6),1)];
          PushStack MakeHiLo(b145,b146);
          TraceOperation 042818 (Insert_obj (Con 139) (Var Sp));
          PopStack popped147;
          Let b148 = M[002006];
          if (IsZero(Widen(b148))) {
            SetByte 002006 LoByte(popped147);
            Let b149 = M[Offset(Offset(000751,Mul(popped147,9)),6)];
            SetByte 002007 LoByte(Widen(b149));
            SetByte Offset(Offset(000751,Mul(popped147,9)),6) 139;
            TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
            Let b150 = M[008154];
            Let b151 = M[008155];
            Let b152 = M[Offset(Address(MakeHiLo(b150,b151)),10)];
            Let b153 = M[Offset(Offset(Address(MakeHiLo(b150,b151)),10),1)];
            PushStack MakeHiLo(b152,b153);
            TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
            PopStack popped154;
            Let b155 = M[001853];
            if (IsZero(Widen(b155))) {
              SetByte 001853 LoByte(popped154);
              Let b156 = M[Offset(Offset(000751,Mul(popped154,9)),6)];
              SetByte 001854 LoByte(Widen(b156));
              SetByte Offset(Offset(000751,Mul(popped154,9)),6) 122;
              TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
              Let b157 = M[001984];
              if (TestBit(b157,3)) {
                Jump: 042835
              } else {
                TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                Let b158 = M[002015];
                if (IsZero(Widen(b158))) {
                  SetByte 002015 141;
                  Let b159 = M[002026];
                  SetByte 002016 LoByte(Widen(b159));
                  SetByte 002026 140;
                  Jump: 042835
                } else {
                  Let b160 = M[Offset(Offset(000751,Mul(Widen(b158),9)),6)];
                  if (Equal(Widen(b160),140)) {
                    Let b161 = M[002016];
                    SetByte Offset(Offset(000751,Mul(Widen(b158),9)),6) LoByte(Widen(b161));
                    SetByte 002015 141;
                    Let b162 = M[002026];
                    SetByte 002016 LoByte(Widen(b162));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Error: unlink/loop
                  }
                }
              }
            } else {
              Let b163 = M[Offset(Offset(000751,Mul(Widen(b155),9)),6)];
              if (Equal(Widen(b163),122)) {
                Let b164 = M[001854];
                SetByte Offset(Offset(000751,Mul(Widen(b155),9)),6) LoByte(Widen(b164));
                SetByte 001853 LoByte(popped154);
                Let b165 = M[Offset(Offset(000751,Mul(popped154,9)),6)];
                SetByte 001854 LoByte(Widen(b165));
                SetByte Offset(Offset(000751,Mul(popped154,9)),6) 122;
                TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                Let b166 = M[001984];
                if (TestBit(b166,3)) {
                  Jump: 042835
                } else {
                  TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                  Let b167 = M[002015];
                  if (IsZero(Widen(b167))) {
                    SetByte 002015 141;
                    Let b168 = M[002026];
                    SetByte 002016 LoByte(Widen(b168));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Let b169 = M[Offset(Offset(000751,Mul(Widen(b167),9)),6)];
                    if (Equal(Widen(b169),140)) {
                      Let b170 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b167),9)),6) LoByte(Widen(b170));
                      SetByte 002015 141;
                      Let b171 = M[002026];
                      SetByte 002016 LoByte(Widen(b171));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b172 = M[Offset(Offset(000751,Mul(Widen(b148),9)),6)];
            if (Equal(Widen(b172),139)) {
              Let b173 = M[002007];
              SetByte Offset(Offset(000751,Mul(Widen(b148),9)),6) LoByte(Widen(b173));
              SetByte 002006 LoByte(popped147);
              Let b174 = M[Offset(Offset(000751,Mul(popped147,9)),6)];
              SetByte 002007 LoByte(Widen(b174));
              SetByte Offset(Offset(000751,Mul(popped147,9)),6) 139;
              TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
              Let b175 = M[008154];
              Let b176 = M[008155];
              Let b177 = M[Offset(Address(MakeHiLo(b175,b176)),10)];
              Let b178 = M[Offset(Offset(Address(MakeHiLo(b175,b176)),10),1)];
              PushStack MakeHiLo(b177,b178);
              TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
              PopStack popped179;
              Let b180 = M[001853];
              if (IsZero(Widen(b180))) {
                SetByte 001853 LoByte(popped179);
                Let b181 = M[Offset(Offset(000751,Mul(popped179,9)),6)];
                SetByte 001854 LoByte(Widen(b181));
                SetByte Offset(Offset(000751,Mul(popped179,9)),6) 122;
                TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                Let b182 = M[001984];
                if (TestBit(b182,3)) {
                  Jump: 042835
                } else {
                  TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                  Let b183 = M[002015];
                  if (IsZero(Widen(b183))) {
                    SetByte 002015 141;
                    Let b184 = M[002026];
                    SetByte 002016 LoByte(Widen(b184));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Let b185 = M[Offset(Offset(000751,Mul(Widen(b183),9)),6)];
                    if (Equal(Widen(b185),140)) {
                      Let b186 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b183),9)),6) LoByte(Widen(b186));
                      SetByte 002015 141;
                      Let b187 = M[002026];
                      SetByte 002016 LoByte(Widen(b187));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Let b188 = M[Offset(Offset(000751,Mul(Widen(b180),9)),6)];
                if (Equal(Widen(b188),122)) {
                  Let b189 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b180),9)),6) LoByte(Widen(b189));
                  SetByte 001853 LoByte(popped179);
                  Let b190 = M[Offset(Offset(000751,Mul(popped179,9)),6)];
                  SetByte 001854 LoByte(Widen(b190));
                  SetByte Offset(Offset(000751,Mul(popped179,9)),6) 122;
                  TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                  Let b191 = M[001984];
                  if (TestBit(b191,3)) {
                    Jump: 042835
                  } else {
                    TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                    Let b192 = M[002015];
                    if (IsZero(Widen(b192))) {
                      SetByte 002015 141;
                      Let b193 = M[002026];
                      SetByte 002016 LoByte(Widen(b193));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Let b194 = M[Offset(Offset(000751,Mul(Widen(b192),9)),6)];
                      if (Equal(Widen(b194),140)) {
                        Let b195 = M[002016];
                        SetByte Offset(Offset(000751,Mul(Widen(b192),9)),6) LoByte(Widen(b195));
                        SetByte 002015 141;
                        Let b196 = M[002026];
                        SetByte 002016 LoByte(Widen(b196));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Error: unlink/loop
                      }
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b197 = M[Offset(Offset(000751,Mul(Widen(b141),9)),6)];
          if (Equal(Widen(b197),1)) {
            Let b198 = M[000765];
            SetByte Offset(Offset(000751,Mul(Widen(b141),9)),6) LoByte(Widen(b198));
            SetByte 000764 LoByte(popped140);
            Let b199 = M[Offset(Offset(000751,Mul(popped140,9)),6)];
            SetByte 000765 LoByte(Widen(b199));
            SetByte Offset(Offset(000751,Mul(popped140,9)),6) 1;
            TraceOperation 042814 (Loadw (Var (Global 123)) (Con 3) Sp);
            Let b200 = M[008154];
            Let b201 = M[008155];
            Let b202 = M[Offset(Address(MakeHiLo(b200,b201)),6)];
            Let b203 = M[Offset(Offset(Address(MakeHiLo(b200,b201)),6),1)];
            PushStack MakeHiLo(b202,b203);
            TraceOperation 042818 (Insert_obj (Con 139) (Var Sp));
            PopStack popped204;
            Let b205 = M[002006];
            if (IsZero(Widen(b205))) {
              SetByte 002006 LoByte(popped204);
              Let b206 = M[Offset(Offset(000751,Mul(popped204,9)),6)];
              SetByte 002007 LoByte(Widen(b206));
              SetByte Offset(Offset(000751,Mul(popped204,9)),6) 139;
              TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
              Let b207 = M[008154];
              Let b208 = M[008155];
              Let b209 = M[Offset(Address(MakeHiLo(b207,b208)),10)];
              Let b210 = M[Offset(Offset(Address(MakeHiLo(b207,b208)),10),1)];
              PushStack MakeHiLo(b209,b210);
              TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
              PopStack popped211;
              Let b212 = M[001853];
              if (IsZero(Widen(b212))) {
                SetByte 001853 LoByte(popped211);
                Let b213 = M[Offset(Offset(000751,Mul(popped211,9)),6)];
                SetByte 001854 LoByte(Widen(b213));
                SetByte Offset(Offset(000751,Mul(popped211,9)),6) 122;
                TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                Let b214 = M[001984];
                if (TestBit(b214,3)) {
                  Jump: 042835
                } else {
                  TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                  Let b215 = M[002015];
                  if (IsZero(Widen(b215))) {
                    SetByte 002015 141;
                    Let b216 = M[002026];
                    SetByte 002016 LoByte(Widen(b216));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Let b217 = M[Offset(Offset(000751,Mul(Widen(b215),9)),6)];
                    if (Equal(Widen(b217),140)) {
                      Let b218 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b215),9)),6) LoByte(Widen(b218));
                      SetByte 002015 141;
                      Let b219 = M[002026];
                      SetByte 002016 LoByte(Widen(b219));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Let b220 = M[Offset(Offset(000751,Mul(Widen(b212),9)),6)];
                if (Equal(Widen(b220),122)) {
                  Let b221 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b212),9)),6) LoByte(Widen(b221));
                  SetByte 001853 LoByte(popped211);
                  Let b222 = M[Offset(Offset(000751,Mul(popped211,9)),6)];
                  SetByte 001854 LoByte(Widen(b222));
                  SetByte Offset(Offset(000751,Mul(popped211,9)),6) 122;
                  TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                  Let b223 = M[001984];
                  if (TestBit(b223,3)) {
                    Jump: 042835
                  } else {
                    TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                    Let b224 = M[002015];
                    if (IsZero(Widen(b224))) {
                      SetByte 002015 141;
                      Let b225 = M[002026];
                      SetByte 002016 LoByte(Widen(b225));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Let b226 = M[Offset(Offset(000751,Mul(Widen(b224),9)),6)];
                      if (Equal(Widen(b226),140)) {
                        Let b227 = M[002016];
                        SetByte Offset(Offset(000751,Mul(Widen(b224),9)),6) LoByte(Widen(b227));
                        SetByte 002015 141;
                        Let b228 = M[002026];
                        SetByte 002016 LoByte(Widen(b228));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Error: unlink/loop
                      }
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b229 = M[Offset(Offset(000751,Mul(Widen(b205),9)),6)];
              if (Equal(Widen(b229),139)) {
                Let b230 = M[002007];
                SetByte Offset(Offset(000751,Mul(Widen(b205),9)),6) LoByte(Widen(b230));
                SetByte 002006 LoByte(popped204);
                Let b231 = M[Offset(Offset(000751,Mul(popped204,9)),6)];
                SetByte 002007 LoByte(Widen(b231));
                SetByte Offset(Offset(000751,Mul(popped204,9)),6) 139;
                TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
                Let b232 = M[008154];
                Let b233 = M[008155];
                Let b234 = M[Offset(Address(MakeHiLo(b232,b233)),10)];
                Let b235 = M[Offset(Offset(Address(MakeHiLo(b232,b233)),10),1)];
                PushStack MakeHiLo(b234,b235);
                TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
                PopStack popped236;
                Let b237 = M[001853];
                if (IsZero(Widen(b237))) {
                  SetByte 001853 LoByte(popped236);
                  Let b238 = M[Offset(Offset(000751,Mul(popped236,9)),6)];
                  SetByte 001854 LoByte(Widen(b238));
                  SetByte Offset(Offset(000751,Mul(popped236,9)),6) 122;
                  TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                  Let b239 = M[001984];
                  if (TestBit(b239,3)) {
                    Jump: 042835
                  } else {
                    TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                    Let b240 = M[002015];
                    if (IsZero(Widen(b240))) {
                      SetByte 002015 141;
                      Let b241 = M[002026];
                      SetByte 002016 LoByte(Widen(b241));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Let b242 = M[Offset(Offset(000751,Mul(Widen(b240),9)),6)];
                      if (Equal(Widen(b242),140)) {
                        Let b243 = M[002016];
                        SetByte Offset(Offset(000751,Mul(Widen(b240),9)),6) LoByte(Widen(b243));
                        SetByte 002015 141;
                        Let b244 = M[002026];
                        SetByte 002016 LoByte(Widen(b244));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Error: unlink/loop
                      }
                    }
                  }
                } else {
                  Let b245 = M[Offset(Offset(000751,Mul(Widen(b237),9)),6)];
                  if (Equal(Widen(b245),122)) {
                    Let b246 = M[001854];
                    SetByte Offset(Offset(000751,Mul(Widen(b237),9)),6) LoByte(Widen(b246));
                    SetByte 001853 LoByte(popped236);
                    Let b247 = M[Offset(Offset(000751,Mul(popped236,9)),6)];
                    SetByte 001854 LoByte(Widen(b247));
                    SetByte Offset(Offset(000751,Mul(popped236,9)),6) 122;
                    TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                    Let b248 = M[001984];
                    if (TestBit(b248,3)) {
                      Jump: 042835
                    } else {
                      TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                      Let b249 = M[002015];
                      if (IsZero(Widen(b249))) {
                        SetByte 002015 141;
                        Let b250 = M[002026];
                        SetByte 002016 LoByte(Widen(b250));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Let b251 = M[Offset(Offset(000751,Mul(Widen(b249),9)),6)];
                        if (Equal(Widen(b251),140)) {
                          Let b252 = M[002016];
                          SetByte Offset(Offset(000751,Mul(Widen(b249),9)),6) LoByte(Widen(b252));
                          SetByte 002015 141;
                          Let b253 = M[002026];
                          SetByte 002016 LoByte(Widen(b253));
                          SetByte 002026 140;
                          Jump: 042835
                        } else {
                          Error: unlink/loop
                        }
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b254 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
    if (Equal(Widen(b254),141)) {
      Let b255 = M[002025];
      SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b255));
      SetByte 002024 LoByte(popped5);
      Let b256 = M[Offset(Offset(000751,Mul(popped5,9)),6)];
      SetByte 002025 LoByte(Widen(b256));
      SetByte Offset(Offset(000751,Mul(popped5,9)),6) 141;
      TraceOperation 042800 (Loadw (Var (Global 123)) (Con 1) Sp);
      Let b257 = M[008154];
      Let b258 = M[008155];
      Let b259 = M[Offset(Address(MakeHiLo(b257,b258)),2)];
      Let b260 = M[Offset(Offset(Address(MakeHiLo(b257,b258)),2),1)];
      PushStack MakeHiLo(b259,b260);
      TraceOperation 042804 (Insert_obj (Con 7) (Var Sp));
      PopStack popped261;
      Let b262 = M[000818];
      if (IsZero(Widen(b262))) {
        SetByte 000818 LoByte(popped261);
        Let b263 = M[Offset(Offset(000751,Mul(popped261,9)),6)];
        SetByte 000819 LoByte(Widen(b263));
        SetByte Offset(Offset(000751,Mul(popped261,9)),6) 7;
        TraceOperation 042807 (Loadw (Var (Global 123)) (Con 2) Sp);
        Let b264 = M[008154];
        Let b265 = M[008155];
        Let b266 = M[Offset(Address(MakeHiLo(b264,b265)),4)];
        Let b267 = M[Offset(Offset(Address(MakeHiLo(b264,b265)),4),1)];
        PushStack MakeHiLo(b266,b267);
        TraceOperation 042811 (Insert_obj (Con 1) (Var Sp));
        PopStack popped268;
        Let b269 = M[000764];
        if (IsZero(Widen(b269))) {
          SetByte 000764 LoByte(popped268);
          Let b270 = M[Offset(Offset(000751,Mul(popped268,9)),6)];
          SetByte 000765 LoByte(Widen(b270));
          SetByte Offset(Offset(000751,Mul(popped268,9)),6) 1;
          TraceOperation 042814 (Loadw (Var (Global 123)) (Con 3) Sp);
          Let b271 = M[008154];
          Let b272 = M[008155];
          Let b273 = M[Offset(Address(MakeHiLo(b271,b272)),6)];
          Let b274 = M[Offset(Offset(Address(MakeHiLo(b271,b272)),6),1)];
          PushStack MakeHiLo(b273,b274);
          TraceOperation 042818 (Insert_obj (Con 139) (Var Sp));
          PopStack popped275;
          Let b276 = M[002006];
          if (IsZero(Widen(b276))) {
            SetByte 002006 LoByte(popped275);
            Let b277 = M[Offset(Offset(000751,Mul(popped275,9)),6)];
            SetByte 002007 LoByte(Widen(b277));
            SetByte Offset(Offset(000751,Mul(popped275,9)),6) 139;
            TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
            Let b278 = M[008154];
            Let b279 = M[008155];
            Let b280 = M[Offset(Address(MakeHiLo(b278,b279)),10)];
            Let b281 = M[Offset(Offset(Address(MakeHiLo(b278,b279)),10),1)];
            PushStack MakeHiLo(b280,b281);
            TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
            PopStack popped282;
            Let b283 = M[001853];
            if (IsZero(Widen(b283))) {
              SetByte 001853 LoByte(popped282);
              Let b284 = M[Offset(Offset(000751,Mul(popped282,9)),6)];
              SetByte 001854 LoByte(Widen(b284));
              SetByte Offset(Offset(000751,Mul(popped282,9)),6) 122;
              TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
              Let b285 = M[001984];
              if (TestBit(b285,3)) {
                Jump: 042835
              } else {
                TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                Let b286 = M[002015];
                if (IsZero(Widen(b286))) {
                  SetByte 002015 141;
                  Let b287 = M[002026];
                  SetByte 002016 LoByte(Widen(b287));
                  SetByte 002026 140;
                  Jump: 042835
                } else {
                  Let b288 = M[Offset(Offset(000751,Mul(Widen(b286),9)),6)];
                  if (Equal(Widen(b288),140)) {
                    Let b289 = M[002016];
                    SetByte Offset(Offset(000751,Mul(Widen(b286),9)),6) LoByte(Widen(b289));
                    SetByte 002015 141;
                    Let b290 = M[002026];
                    SetByte 002016 LoByte(Widen(b290));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Error: unlink/loop
                  }
                }
              }
            } else {
              Let b291 = M[Offset(Offset(000751,Mul(Widen(b283),9)),6)];
              if (Equal(Widen(b291),122)) {
                Let b292 = M[001854];
                SetByte Offset(Offset(000751,Mul(Widen(b283),9)),6) LoByte(Widen(b292));
                SetByte 001853 LoByte(popped282);
                Let b293 = M[Offset(Offset(000751,Mul(popped282,9)),6)];
                SetByte 001854 LoByte(Widen(b293));
                SetByte Offset(Offset(000751,Mul(popped282,9)),6) 122;
                TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                Let b294 = M[001984];
                if (TestBit(b294,3)) {
                  Jump: 042835
                } else {
                  TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                  Let b295 = M[002015];
                  if (IsZero(Widen(b295))) {
                    SetByte 002015 141;
                    Let b296 = M[002026];
                    SetByte 002016 LoByte(Widen(b296));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Let b297 = M[Offset(Offset(000751,Mul(Widen(b295),9)),6)];
                    if (Equal(Widen(b297),140)) {
                      Let b298 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b295),9)),6) LoByte(Widen(b298));
                      SetByte 002015 141;
                      Let b299 = M[002026];
                      SetByte 002016 LoByte(Widen(b299));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b300 = M[Offset(Offset(000751,Mul(Widen(b276),9)),6)];
            if (Equal(Widen(b300),139)) {
              Let b301 = M[002007];
              SetByte Offset(Offset(000751,Mul(Widen(b276),9)),6) LoByte(Widen(b301));
              SetByte 002006 LoByte(popped275);
              Let b302 = M[Offset(Offset(000751,Mul(popped275,9)),6)];
              SetByte 002007 LoByte(Widen(b302));
              SetByte Offset(Offset(000751,Mul(popped275,9)),6) 139;
              TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
              Let b303 = M[008154];
              Let b304 = M[008155];
              Let b305 = M[Offset(Address(MakeHiLo(b303,b304)),10)];
              Let b306 = M[Offset(Offset(Address(MakeHiLo(b303,b304)),10),1)];
              PushStack MakeHiLo(b305,b306);
              TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
              PopStack popped307;
              Let b308 = M[001853];
              if (IsZero(Widen(b308))) {
                SetByte 001853 LoByte(popped307);
                Let b309 = M[Offset(Offset(000751,Mul(popped307,9)),6)];
                SetByte 001854 LoByte(Widen(b309));
                SetByte Offset(Offset(000751,Mul(popped307,9)),6) 122;
                TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                Let b310 = M[001984];
                if (TestBit(b310,3)) {
                  Jump: 042835
                } else {
                  TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                  Let b311 = M[002015];
                  if (IsZero(Widen(b311))) {
                    SetByte 002015 141;
                    Let b312 = M[002026];
                    SetByte 002016 LoByte(Widen(b312));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Let b313 = M[Offset(Offset(000751,Mul(Widen(b311),9)),6)];
                    if (Equal(Widen(b313),140)) {
                      Let b314 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b311),9)),6) LoByte(Widen(b314));
                      SetByte 002015 141;
                      Let b315 = M[002026];
                      SetByte 002016 LoByte(Widen(b315));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Let b316 = M[Offset(Offset(000751,Mul(Widen(b308),9)),6)];
                if (Equal(Widen(b316),122)) {
                  Let b317 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b308),9)),6) LoByte(Widen(b317));
                  SetByte 001853 LoByte(popped307);
                  Let b318 = M[Offset(Offset(000751,Mul(popped307,9)),6)];
                  SetByte 001854 LoByte(Widen(b318));
                  SetByte Offset(Offset(000751,Mul(popped307,9)),6) 122;
                  TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                  Let b319 = M[001984];
                  if (TestBit(b319,3)) {
                    Jump: 042835
                  } else {
                    TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                    Let b320 = M[002015];
                    if (IsZero(Widen(b320))) {
                      SetByte 002015 141;
                      Let b321 = M[002026];
                      SetByte 002016 LoByte(Widen(b321));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Let b322 = M[Offset(Offset(000751,Mul(Widen(b320),9)),6)];
                      if (Equal(Widen(b322),140)) {
                        Let b323 = M[002016];
                        SetByte Offset(Offset(000751,Mul(Widen(b320),9)),6) LoByte(Widen(b323));
                        SetByte 002015 141;
                        Let b324 = M[002026];
                        SetByte 002016 LoByte(Widen(b324));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Error: unlink/loop
                      }
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b325 = M[Offset(Offset(000751,Mul(Widen(b269),9)),6)];
          if (Equal(Widen(b325),1)) {
            Let b326 = M[000765];
            SetByte Offset(Offset(000751,Mul(Widen(b269),9)),6) LoByte(Widen(b326));
            SetByte 000764 LoByte(popped268);
            Let b327 = M[Offset(Offset(000751,Mul(popped268,9)),6)];
            SetByte 000765 LoByte(Widen(b327));
            SetByte Offset(Offset(000751,Mul(popped268,9)),6) 1;
            TraceOperation 042814 (Loadw (Var (Global 123)) (Con 3) Sp);
            Let b328 = M[008154];
            Let b329 = M[008155];
            Let b330 = M[Offset(Address(MakeHiLo(b328,b329)),6)];
            Let b331 = M[Offset(Offset(Address(MakeHiLo(b328,b329)),6),1)];
            PushStack MakeHiLo(b330,b331);
            TraceOperation 042818 (Insert_obj (Con 139) (Var Sp));
            PopStack popped332;
            Let b333 = M[002006];
            if (IsZero(Widen(b333))) {
              SetByte 002006 LoByte(popped332);
              Let b334 = M[Offset(Offset(000751,Mul(popped332,9)),6)];
              SetByte 002007 LoByte(Widen(b334));
              SetByte Offset(Offset(000751,Mul(popped332,9)),6) 139;
              TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
              Let b335 = M[008154];
              Let b336 = M[008155];
              Let b337 = M[Offset(Address(MakeHiLo(b335,b336)),10)];
              Let b338 = M[Offset(Offset(Address(MakeHiLo(b335,b336)),10),1)];
              PushStack MakeHiLo(b337,b338);
              TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
              PopStack popped339;
              Let b340 = M[001853];
              if (IsZero(Widen(b340))) {
                SetByte 001853 LoByte(popped339);
                Let b341 = M[Offset(Offset(000751,Mul(popped339,9)),6)];
                SetByte 001854 LoByte(Widen(b341));
                SetByte Offset(Offset(000751,Mul(popped339,9)),6) 122;
                TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                Let b342 = M[001984];
                if (TestBit(b342,3)) {
                  Jump: 042835
                } else {
                  TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                  Let b343 = M[002015];
                  if (IsZero(Widen(b343))) {
                    SetByte 002015 141;
                    Let b344 = M[002026];
                    SetByte 002016 LoByte(Widen(b344));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Let b345 = M[Offset(Offset(000751,Mul(Widen(b343),9)),6)];
                    if (Equal(Widen(b345),140)) {
                      Let b346 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b343),9)),6) LoByte(Widen(b346));
                      SetByte 002015 141;
                      Let b347 = M[002026];
                      SetByte 002016 LoByte(Widen(b347));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Let b348 = M[Offset(Offset(000751,Mul(Widen(b340),9)),6)];
                if (Equal(Widen(b348),122)) {
                  Let b349 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b340),9)),6) LoByte(Widen(b349));
                  SetByte 001853 LoByte(popped339);
                  Let b350 = M[Offset(Offset(000751,Mul(popped339,9)),6)];
                  SetByte 001854 LoByte(Widen(b350));
                  SetByte Offset(Offset(000751,Mul(popped339,9)),6) 122;
                  TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                  Let b351 = M[001984];
                  if (TestBit(b351,3)) {
                    Jump: 042835
                  } else {
                    TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                    Let b352 = M[002015];
                    if (IsZero(Widen(b352))) {
                      SetByte 002015 141;
                      Let b353 = M[002026];
                      SetByte 002016 LoByte(Widen(b353));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Let b354 = M[Offset(Offset(000751,Mul(Widen(b352),9)),6)];
                      if (Equal(Widen(b354),140)) {
                        Let b355 = M[002016];
                        SetByte Offset(Offset(000751,Mul(Widen(b352),9)),6) LoByte(Widen(b355));
                        SetByte 002015 141;
                        Let b356 = M[002026];
                        SetByte 002016 LoByte(Widen(b356));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Error: unlink/loop
                      }
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b357 = M[Offset(Offset(000751,Mul(Widen(b333),9)),6)];
              if (Equal(Widen(b357),139)) {
                Let b358 = M[002007];
                SetByte Offset(Offset(000751,Mul(Widen(b333),9)),6) LoByte(Widen(b358));
                SetByte 002006 LoByte(popped332);
                Let b359 = M[Offset(Offset(000751,Mul(popped332,9)),6)];
                SetByte 002007 LoByte(Widen(b359));
                SetByte Offset(Offset(000751,Mul(popped332,9)),6) 139;
                TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
                Let b360 = M[008154];
                Let b361 = M[008155];
                Let b362 = M[Offset(Address(MakeHiLo(b360,b361)),10)];
                Let b363 = M[Offset(Offset(Address(MakeHiLo(b360,b361)),10),1)];
                PushStack MakeHiLo(b362,b363);
                TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
                PopStack popped364;
                Let b365 = M[001853];
                if (IsZero(Widen(b365))) {
                  SetByte 001853 LoByte(popped364);
                  Let b366 = M[Offset(Offset(000751,Mul(popped364,9)),6)];
                  SetByte 001854 LoByte(Widen(b366));
                  SetByte Offset(Offset(000751,Mul(popped364,9)),6) 122;
                  TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                  Let b367 = M[001984];
                  if (TestBit(b367,3)) {
                    Jump: 042835
                  } else {
                    TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                    Let b368 = M[002015];
                    if (IsZero(Widen(b368))) {
                      SetByte 002015 141;
                      Let b369 = M[002026];
                      SetByte 002016 LoByte(Widen(b369));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Let b370 = M[Offset(Offset(000751,Mul(Widen(b368),9)),6)];
                      if (Equal(Widen(b370),140)) {
                        Let b371 = M[002016];
                        SetByte Offset(Offset(000751,Mul(Widen(b368),9)),6) LoByte(Widen(b371));
                        SetByte 002015 141;
                        Let b372 = M[002026];
                        SetByte 002016 LoByte(Widen(b372));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Error: unlink/loop
                      }
                    }
                  }
                } else {
                  Let b373 = M[Offset(Offset(000751,Mul(Widen(b365),9)),6)];
                  if (Equal(Widen(b373),122)) {
                    Let b374 = M[001854];
                    SetByte Offset(Offset(000751,Mul(Widen(b365),9)),6) LoByte(Widen(b374));
                    SetByte 001853 LoByte(popped364);
                    Let b375 = M[Offset(Offset(000751,Mul(popped364,9)),6)];
                    SetByte 001854 LoByte(Widen(b375));
                    SetByte Offset(Offset(000751,Mul(popped364,9)),6) 122;
                    TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                    Let b376 = M[001984];
                    if (TestBit(b376,3)) {
                      Jump: 042835
                    } else {
                      TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                      Let b377 = M[002015];
                      if (IsZero(Widen(b377))) {
                        SetByte 002015 141;
                        Let b378 = M[002026];
                        SetByte 002016 LoByte(Widen(b378));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Let b379 = M[Offset(Offset(000751,Mul(Widen(b377),9)),6)];
                        if (Equal(Widen(b379),140)) {
                          Let b380 = M[002016];
                          SetByte Offset(Offset(000751,Mul(Widen(b377),9)),6) LoByte(Widen(b380));
                          SetByte 002015 141;
                          Let b381 = M[002026];
                          SetByte 002016 LoByte(Widen(b381));
                          SetByte 002026 140;
                          Jump: 042835
                        } else {
                          Error: unlink/loop
                        }
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b382 = M[Offset(Offset(000751,Mul(Widen(b262),9)),6)];
        if (Equal(Widen(b382),7)) {
          Let b383 = M[000819];
          SetByte Offset(Offset(000751,Mul(Widen(b262),9)),6) LoByte(Widen(b383));
          SetByte 000818 LoByte(popped261);
          Let b384 = M[Offset(Offset(000751,Mul(popped261,9)),6)];
          SetByte 000819 LoByte(Widen(b384));
          SetByte Offset(Offset(000751,Mul(popped261,9)),6) 7;
          TraceOperation 042807 (Loadw (Var (Global 123)) (Con 2) Sp);
          Let b385 = M[008154];
          Let b386 = M[008155];
          Let b387 = M[Offset(Address(MakeHiLo(b385,b386)),4)];
          Let b388 = M[Offset(Offset(Address(MakeHiLo(b385,b386)),4),1)];
          PushStack MakeHiLo(b387,b388);
          TraceOperation 042811 (Insert_obj (Con 1) (Var Sp));
          PopStack popped389;
          Let b390 = M[000764];
          if (IsZero(Widen(b390))) {
            SetByte 000764 LoByte(popped389);
            Let b391 = M[Offset(Offset(000751,Mul(popped389,9)),6)];
            SetByte 000765 LoByte(Widen(b391));
            SetByte Offset(Offset(000751,Mul(popped389,9)),6) 1;
            TraceOperation 042814 (Loadw (Var (Global 123)) (Con 3) Sp);
            Let b392 = M[008154];
            Let b393 = M[008155];
            Let b394 = M[Offset(Address(MakeHiLo(b392,b393)),6)];
            Let b395 = M[Offset(Offset(Address(MakeHiLo(b392,b393)),6),1)];
            PushStack MakeHiLo(b394,b395);
            TraceOperation 042818 (Insert_obj (Con 139) (Var Sp));
            PopStack popped396;
            Let b397 = M[002006];
            if (IsZero(Widen(b397))) {
              SetByte 002006 LoByte(popped396);
              Let b398 = M[Offset(Offset(000751,Mul(popped396,9)),6)];
              SetByte 002007 LoByte(Widen(b398));
              SetByte Offset(Offset(000751,Mul(popped396,9)),6) 139;
              TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
              Let b399 = M[008154];
              Let b400 = M[008155];
              Let b401 = M[Offset(Address(MakeHiLo(b399,b400)),10)];
              Let b402 = M[Offset(Offset(Address(MakeHiLo(b399,b400)),10),1)];
              PushStack MakeHiLo(b401,b402);
              TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
              PopStack popped403;
              Let b404 = M[001853];
              if (IsZero(Widen(b404))) {
                SetByte 001853 LoByte(popped403);
                Let b405 = M[Offset(Offset(000751,Mul(popped403,9)),6)];
                SetByte 001854 LoByte(Widen(b405));
                SetByte Offset(Offset(000751,Mul(popped403,9)),6) 122;
                TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                Let b406 = M[001984];
                if (TestBit(b406,3)) {
                  Jump: 042835
                } else {
                  TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                  Let b407 = M[002015];
                  if (IsZero(Widen(b407))) {
                    SetByte 002015 141;
                    Let b408 = M[002026];
                    SetByte 002016 LoByte(Widen(b408));
                    SetByte 002026 140;
                    Jump: 042835
                  } else {
                    Let b409 = M[Offset(Offset(000751,Mul(Widen(b407),9)),6)];
                    if (Equal(Widen(b409),140)) {
                      Let b410 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b407),9)),6) LoByte(Widen(b410));
                      SetByte 002015 141;
                      Let b411 = M[002026];
                      SetByte 002016 LoByte(Widen(b411));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Let b412 = M[Offset(Offset(000751,Mul(Widen(b404),9)),6)];
                if (Equal(Widen(b412),122)) {
                  Let b413 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b404),9)),6) LoByte(Widen(b413));
                  SetByte 001853 LoByte(popped403);
                  Let b414 = M[Offset(Offset(000751,Mul(popped403,9)),6)];
                  SetByte 001854 LoByte(Widen(b414));
                  SetByte Offset(Offset(000751,Mul(popped403,9)),6) 122;
                  TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                  Let b415 = M[001984];
                  if (TestBit(b415,3)) {
                    Jump: 042835
                  } else {
                    TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                    Let b416 = M[002015];
                    if (IsZero(Widen(b416))) {
                      SetByte 002015 141;
                      Let b417 = M[002026];
                      SetByte 002016 LoByte(Widen(b417));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Let b418 = M[Offset(Offset(000751,Mul(Widen(b416),9)),6)];
                      if (Equal(Widen(b418),140)) {
                        Let b419 = M[002016];
                        SetByte Offset(Offset(000751,Mul(Widen(b416),9)),6) LoByte(Widen(b419));
                        SetByte 002015 141;
                        Let b420 = M[002026];
                        SetByte 002016 LoByte(Widen(b420));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Error: unlink/loop
                      }
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b421 = M[Offset(Offset(000751,Mul(Widen(b397),9)),6)];
              if (Equal(Widen(b421),139)) {
                Let b422 = M[002007];
                SetByte Offset(Offset(000751,Mul(Widen(b397),9)),6) LoByte(Widen(b422));
                SetByte 002006 LoByte(popped396);
                Let b423 = M[Offset(Offset(000751,Mul(popped396,9)),6)];
                SetByte 002007 LoByte(Widen(b423));
                SetByte Offset(Offset(000751,Mul(popped396,9)),6) 139;
                TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
                Let b424 = M[008154];
                Let b425 = M[008155];
                Let b426 = M[Offset(Address(MakeHiLo(b424,b425)),10)];
                Let b427 = M[Offset(Offset(Address(MakeHiLo(b424,b425)),10),1)];
                PushStack MakeHiLo(b426,b427);
                TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
                PopStack popped428;
                Let b429 = M[001853];
                if (IsZero(Widen(b429))) {
                  SetByte 001853 LoByte(popped428);
                  Let b430 = M[Offset(Offset(000751,Mul(popped428,9)),6)];
                  SetByte 001854 LoByte(Widen(b430));
                  SetByte Offset(Offset(000751,Mul(popped428,9)),6) 122;
                  TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                  Let b431 = M[001984];
                  if (TestBit(b431,3)) {
                    Jump: 042835
                  } else {
                    TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                    Let b432 = M[002015];
                    if (IsZero(Widen(b432))) {
                      SetByte 002015 141;
                      Let b433 = M[002026];
                      SetByte 002016 LoByte(Widen(b433));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Let b434 = M[Offset(Offset(000751,Mul(Widen(b432),9)),6)];
                      if (Equal(Widen(b434),140)) {
                        Let b435 = M[002016];
                        SetByte Offset(Offset(000751,Mul(Widen(b432),9)),6) LoByte(Widen(b435));
                        SetByte 002015 141;
                        Let b436 = M[002026];
                        SetByte 002016 LoByte(Widen(b436));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Error: unlink/loop
                      }
                    }
                  }
                } else {
                  Let b437 = M[Offset(Offset(000751,Mul(Widen(b429),9)),6)];
                  if (Equal(Widen(b437),122)) {
                    Let b438 = M[001854];
                    SetByte Offset(Offset(000751,Mul(Widen(b429),9)),6) LoByte(Widen(b438));
                    SetByte 001853 LoByte(popped428);
                    Let b439 = M[Offset(Offset(000751,Mul(popped428,9)),6)];
                    SetByte 001854 LoByte(Widen(b439));
                    SetByte Offset(Offset(000751,Mul(popped428,9)),6) 122;
                    TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                    Let b440 = M[001984];
                    if (TestBit(b440,3)) {
                      Jump: 042835
                    } else {
                      TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                      Let b441 = M[002015];
                      if (IsZero(Widen(b441))) {
                        SetByte 002015 141;
                        Let b442 = M[002026];
                        SetByte 002016 LoByte(Widen(b442));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Let b443 = M[Offset(Offset(000751,Mul(Widen(b441),9)),6)];
                        if (Equal(Widen(b443),140)) {
                          Let b444 = M[002016];
                          SetByte Offset(Offset(000751,Mul(Widen(b441),9)),6) LoByte(Widen(b444));
                          SetByte 002015 141;
                          Let b445 = M[002026];
                          SetByte 002016 LoByte(Widen(b445));
                          SetByte 002026 140;
                          Jump: 042835
                        } else {
                          Error: unlink/loop
                        }
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b446 = M[Offset(Offset(000751,Mul(Widen(b390),9)),6)];
            if (Equal(Widen(b446),1)) {
              Let b447 = M[000765];
              SetByte Offset(Offset(000751,Mul(Widen(b390),9)),6) LoByte(Widen(b447));
              SetByte 000764 LoByte(popped389);
              Let b448 = M[Offset(Offset(000751,Mul(popped389,9)),6)];
              SetByte 000765 LoByte(Widen(b448));
              SetByte Offset(Offset(000751,Mul(popped389,9)),6) 1;
              TraceOperation 042814 (Loadw (Var (Global 123)) (Con 3) Sp);
              Let b449 = M[008154];
              Let b450 = M[008155];
              Let b451 = M[Offset(Address(MakeHiLo(b449,b450)),6)];
              Let b452 = M[Offset(Offset(Address(MakeHiLo(b449,b450)),6),1)];
              PushStack MakeHiLo(b451,b452);
              TraceOperation 042818 (Insert_obj (Con 139) (Var Sp));
              PopStack popped453;
              Let b454 = M[002006];
              if (IsZero(Widen(b454))) {
                SetByte 002006 LoByte(popped453);
                Let b455 = M[Offset(Offset(000751,Mul(popped453,9)),6)];
                SetByte 002007 LoByte(Widen(b455));
                SetByte Offset(Offset(000751,Mul(popped453,9)),6) 139;
                TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
                Let b456 = M[008154];
                Let b457 = M[008155];
                Let b458 = M[Offset(Address(MakeHiLo(b456,b457)),10)];
                Let b459 = M[Offset(Offset(Address(MakeHiLo(b456,b457)),10),1)];
                PushStack MakeHiLo(b458,b459);
                TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
                PopStack popped460;
                Let b461 = M[001853];
                if (IsZero(Widen(b461))) {
                  SetByte 001853 LoByte(popped460);
                  Let b462 = M[Offset(Offset(000751,Mul(popped460,9)),6)];
                  SetByte 001854 LoByte(Widen(b462));
                  SetByte Offset(Offset(000751,Mul(popped460,9)),6) 122;
                  TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                  Let b463 = M[001984];
                  if (TestBit(b463,3)) {
                    Jump: 042835
                  } else {
                    TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                    Let b464 = M[002015];
                    if (IsZero(Widen(b464))) {
                      SetByte 002015 141;
                      Let b465 = M[002026];
                      SetByte 002016 LoByte(Widen(b465));
                      SetByte 002026 140;
                      Jump: 042835
                    } else {
                      Let b466 = M[Offset(Offset(000751,Mul(Widen(b464),9)),6)];
                      if (Equal(Widen(b466),140)) {
                        Let b467 = M[002016];
                        SetByte Offset(Offset(000751,Mul(Widen(b464),9)),6) LoByte(Widen(b467));
                        SetByte 002015 141;
                        Let b468 = M[002026];
                        SetByte 002016 LoByte(Widen(b468));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Error: unlink/loop
                      }
                    }
                  }
                } else {
                  Let b469 = M[Offset(Offset(000751,Mul(Widen(b461),9)),6)];
                  if (Equal(Widen(b469),122)) {
                    Let b470 = M[001854];
                    SetByte Offset(Offset(000751,Mul(Widen(b461),9)),6) LoByte(Widen(b470));
                    SetByte 001853 LoByte(popped460);
                    Let b471 = M[Offset(Offset(000751,Mul(popped460,9)),6)];
                    SetByte 001854 LoByte(Widen(b471));
                    SetByte Offset(Offset(000751,Mul(popped460,9)),6) 122;
                    TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                    Let b472 = M[001984];
                    if (TestBit(b472,3)) {
                      Jump: 042835
                    } else {
                      TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                      Let b473 = M[002015];
                      if (IsZero(Widen(b473))) {
                        SetByte 002015 141;
                        Let b474 = M[002026];
                        SetByte 002016 LoByte(Widen(b474));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Let b475 = M[Offset(Offset(000751,Mul(Widen(b473),9)),6)];
                        if (Equal(Widen(b475),140)) {
                          Let b476 = M[002016];
                          SetByte Offset(Offset(000751,Mul(Widen(b473),9)),6) LoByte(Widen(b476));
                          SetByte 002015 141;
                          Let b477 = M[002026];
                          SetByte 002016 LoByte(Widen(b477));
                          SetByte 002026 140;
                          Jump: 042835
                        } else {
                          Error: unlink/loop
                        }
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b478 = M[Offset(Offset(000751,Mul(Widen(b454),9)),6)];
                if (Equal(Widen(b478),139)) {
                  Let b479 = M[002007];
                  SetByte Offset(Offset(000751,Mul(Widen(b454),9)),6) LoByte(Widen(b479));
                  SetByte 002006 LoByte(popped453);
                  Let b480 = M[Offset(Offset(000751,Mul(popped453,9)),6)];
                  SetByte 002007 LoByte(Widen(b480));
                  SetByte Offset(Offset(000751,Mul(popped453,9)),6) 139;
                  TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
                  Let b481 = M[008154];
                  Let b482 = M[008155];
                  Let b483 = M[Offset(Address(MakeHiLo(b481,b482)),10)];
                  Let b484 = M[Offset(Offset(Address(MakeHiLo(b481,b482)),10),1)];
                  PushStack MakeHiLo(b483,b484);
                  TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
                  PopStack popped485;
                  Let b486 = M[001853];
                  if (IsZero(Widen(b486))) {
                    SetByte 001853 LoByte(popped485);
                    Let b487 = M[Offset(Offset(000751,Mul(popped485,9)),6)];
                    SetByte 001854 LoByte(Widen(b487));
                    SetByte Offset(Offset(000751,Mul(popped485,9)),6) 122;
                    TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                    Let b488 = M[001984];
                    if (TestBit(b488,3)) {
                      Jump: 042835
                    } else {
                      TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                      Let b489 = M[002015];
                      if (IsZero(Widen(b489))) {
                        SetByte 002015 141;
                        Let b490 = M[002026];
                        SetByte 002016 LoByte(Widen(b490));
                        SetByte 002026 140;
                        Jump: 042835
                      } else {
                        Let b491 = M[Offset(Offset(000751,Mul(Widen(b489),9)),6)];
                        if (Equal(Widen(b491),140)) {
                          Let b492 = M[002016];
                          SetByte Offset(Offset(000751,Mul(Widen(b489),9)),6) LoByte(Widen(b492));
                          SetByte 002015 141;
                          Let b493 = M[002026];
                          SetByte 002016 LoByte(Widen(b493));
                          SetByte 002026 140;
                          Jump: 042835
                        } else {
                          Error: unlink/loop
                        }
                      }
                    }
                  } else {
                    Let b494 = M[Offset(Offset(000751,Mul(Widen(b486),9)),6)];
                    if (Equal(Widen(b494),122)) {
                      Let b495 = M[001854];
                      SetByte Offset(Offset(000751,Mul(Widen(b486),9)),6) LoByte(Widen(b495));
                      SetByte 001853 LoByte(popped485);
                      Let b496 = M[Offset(Offset(000751,Mul(popped485,9)),6)];
                      SetByte 001854 LoByte(Widen(b496));
                      SetByte Offset(Offset(000751,Mul(popped485,9)),6) 122;
                      TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
                      Let b497 = M[001984];
                      if (TestBit(b497,3)) {
                        Jump: 042835
                      } else {
                        TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
                        Let b498 = M[002015];
                        if (IsZero(Widen(b498))) {
                          SetByte 002015 141;
                          Let b499 = M[002026];
                          SetByte 002016 LoByte(Widen(b499));
                          SetByte 002026 140;
                          Jump: 042835
                        } else {
                          Let b500 = M[Offset(Offset(000751,Mul(Widen(b498),9)),6)];
                          if (Equal(Widen(b500),140)) {
                            Let b501 = M[002016];
                            SetByte Offset(Offset(000751,Mul(Widen(b498),9)),6) LoByte(Widen(b501));
                            SetByte 002015 141;
                            Let b502 = M[002026];
                            SetByte 002016 LoByte(Widen(b502));
                            SetByte 002026 140;
                            Jump: 042835
                          } else {
                            Error: unlink/loop
                          }
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 042835:
  TraceOperation 042835 (Clear_attr (Con 141) (Con 23));
  Let b1 = M[002022];
  SetByte 002022 ClearBit(b1,0);
  TraceOperation 042838 (Clear_attr (Con 137) (Con 27));
  Let b2 = M[001987];
  SetByte 001987 ClearBit(b2,4);
  TraceOperation 042841 (Store (Con 147) (Con 0));
  SetByte 008170 0;
  SetByte 008171 0;
  TraceOperation 042844 (Store (Con 154) (Con 0));
  SetByte 008184 0;
  SetByte 008185 0;
  TraceOperation 042847 (Call (Floc 022340) [Con -27122] Sp);
  PushFrame 042847;
  SetLocal 1 -27122;
  JumpCall: 022340, #actuals: 1
LocReturn 042847:
  PushStack call_result;
  TraceOperation 042854 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 042859 (Call (Floc 075134) [] Sp);
  PushFrame 042859;
  JumpCall: 075134, #actuals: 0
LocReturn 042859:
  PushStack call_result;
  TraceOperation 042864 (Jump 043239);
  Jump: 043239
LocOp 042867:
  TraceOperation 042867 (Je [Var (Global 120),Con 194] (Branch F (Dloc 042995)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),194)) {
    TraceOperation 042872 (Loadw (Var (Global 94)) (Con 0) Sp);
    Let b3 = M[008096];
    Let b4 = M[008097];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),0)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),0),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 042876 (Insert_obj (Con 193) (Var Sp));
    PopStack popped7;
    Let b8 = M[002492];
    if (IsZero(Widen(b8))) {
      SetByte 002492 LoByte(popped7);
      Let b9 = M[Offset(Offset(000751,Mul(popped7,9)),6)];
      SetByte 002493 LoByte(Widen(b9));
      SetByte Offset(Offset(000751,Mul(popped7,9)),6) 193;
      TraceOperation 042879 (Jin (Con 13) (Con 193) (Branch F (Dloc 042890)));
      Let b10 = M[000872];
      if (Equal(193,Widen(b10))) {
        TraceOperation 042883 (Loadw (Var (Global 94)) (Con 1) Sp);
        Let b11 = M[008096];
        Let b12 = M[008097];
        Let b13 = M[Offset(Address(MakeHiLo(b11,b12)),2)];
        Let b14 = M[Offset(Offset(Address(MakeHiLo(b11,b12)),2),1)];
        PushStack MakeHiLo(b13,b14);
        TraceOperation 042887 (Insert_obj (Con 13) (Var Sp));
        PopStack popped15;
        Let b16 = M[000872];
        if (IsZero(Widen(b16))) {
          SetByte 000872 LoByte(popped15);
          Let b17 = M[Offset(Offset(000751,Mul(popped15,9)),6)];
          SetByte 000873 LoByte(Widen(b17));
          SetByte Offset(Offset(000751,Mul(popped15,9)),6) 13;
          TraceOperation 042890 (Loadw (Var (Global 94)) (Con 2) Sp);
          Let b18 = M[008096];
          Let b19 = M[008097];
          Let b20 = M[Offset(Address(MakeHiLo(b18,b19)),4)];
          Let b21 = M[Offset(Offset(Address(MakeHiLo(b18,b19)),4),1)];
          PushStack MakeHiLo(b20,b21);
          TraceOperation 042894 (Jz (Var Sp) (Branch T (Dloc 042903)));
          PopStack popped22;
          if (IsZero(popped22)) {
            Jump: 042903
          } else {
            TraceOperation 042897 (Set_attr (Con 193) (Con 23));
            Let b23 = M[002490];
            SetByte 002490 SetBit(b23,0);
            TraceOperation 042900 (Jump 042906);
            Jump: 042906
          }
        } else {
          Let b24 = M[Offset(Offset(000751,Mul(Widen(b16),9)),6)];
          if (Equal(Widen(b24),13)) {
            Let b25 = M[000873];
            SetByte Offset(Offset(000751,Mul(Widen(b16),9)),6) LoByte(Widen(b25));
            SetByte 000872 LoByte(popped15);
            Let b26 = M[Offset(Offset(000751,Mul(popped15,9)),6)];
            SetByte 000873 LoByte(Widen(b26));
            SetByte Offset(Offset(000751,Mul(popped15,9)),6) 13;
            TraceOperation 042890 (Loadw (Var (Global 94)) (Con 2) Sp);
            Let b27 = M[008096];
            Let b28 = M[008097];
            Let b29 = M[Offset(Address(MakeHiLo(b27,b28)),4)];
            Let b30 = M[Offset(Offset(Address(MakeHiLo(b27,b28)),4),1)];
            PushStack MakeHiLo(b29,b30);
            TraceOperation 042894 (Jz (Var Sp) (Branch T (Dloc 042903)));
            PopStack popped31;
            if (IsZero(popped31)) {
              Jump: 042903
            } else {
              TraceOperation 042897 (Set_attr (Con 193) (Con 23));
              Let b32 = M[002490];
              SetByte 002490 SetBit(b32,0);
              TraceOperation 042900 (Jump 042906);
              Jump: 042906
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        TraceOperation 042890 (Loadw (Var (Global 94)) (Con 2) Sp);
        Let b33 = M[008096];
        Let b34 = M[008097];
        Let b35 = M[Offset(Address(MakeHiLo(b33,b34)),4)];
        Let b36 = M[Offset(Offset(Address(MakeHiLo(b33,b34)),4),1)];
        PushStack MakeHiLo(b35,b36);
        TraceOperation 042894 (Jz (Var Sp) (Branch T (Dloc 042903)));
        PopStack popped37;
        if (IsZero(popped37)) {
          Jump: 042903
        } else {
          TraceOperation 042897 (Set_attr (Con 193) (Con 23));
          Let b38 = M[002490];
          SetByte 002490 SetBit(b38,0);
          TraceOperation 042900 (Jump 042906);
          Jump: 042906
        }
      }
    } else {
      Let b39 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
      if (Equal(Widen(b39),193)) {
        Let b40 = M[002493];
        SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b40));
        SetByte 002492 LoByte(popped7);
        Let b41 = M[Offset(Offset(000751,Mul(popped7,9)),6)];
        SetByte 002493 LoByte(Widen(b41));
        SetByte Offset(Offset(000751,Mul(popped7,9)),6) 193;
        TraceOperation 042879 (Jin (Con 13) (Con 193) (Branch F (Dloc 042890)));
        Let b42 = M[000872];
        if (Equal(193,Widen(b42))) {
          TraceOperation 042883 (Loadw (Var (Global 94)) (Con 1) Sp);
          Let b43 = M[008096];
          Let b44 = M[008097];
          Let b45 = M[Offset(Address(MakeHiLo(b43,b44)),2)];
          Let b46 = M[Offset(Offset(Address(MakeHiLo(b43,b44)),2),1)];
          PushStack MakeHiLo(b45,b46);
          TraceOperation 042887 (Insert_obj (Con 13) (Var Sp));
          PopStack popped47;
          Let b48 = M[000872];
          if (IsZero(Widen(b48))) {
            SetByte 000872 LoByte(popped47);
            Let b49 = M[Offset(Offset(000751,Mul(popped47,9)),6)];
            SetByte 000873 LoByte(Widen(b49));
            SetByte Offset(Offset(000751,Mul(popped47,9)),6) 13;
            TraceOperation 042890 (Loadw (Var (Global 94)) (Con 2) Sp);
            Let b50 = M[008096];
            Let b51 = M[008097];
            Let b52 = M[Offset(Address(MakeHiLo(b50,b51)),4)];
            Let b53 = M[Offset(Offset(Address(MakeHiLo(b50,b51)),4),1)];
            PushStack MakeHiLo(b52,b53);
            TraceOperation 042894 (Jz (Var Sp) (Branch T (Dloc 042903)));
            PopStack popped54;
            if (IsZero(popped54)) {
              Jump: 042903
            } else {
              TraceOperation 042897 (Set_attr (Con 193) (Con 23));
              Let b55 = M[002490];
              SetByte 002490 SetBit(b55,0);
              TraceOperation 042900 (Jump 042906);
              Jump: 042906
            }
          } else {
            Let b56 = M[Offset(Offset(000751,Mul(Widen(b48),9)),6)];
            if (Equal(Widen(b56),13)) {
              Let b57 = M[000873];
              SetByte Offset(Offset(000751,Mul(Widen(b48),9)),6) LoByte(Widen(b57));
              SetByte 000872 LoByte(popped47);
              Let b58 = M[Offset(Offset(000751,Mul(popped47,9)),6)];
              SetByte 000873 LoByte(Widen(b58));
              SetByte Offset(Offset(000751,Mul(popped47,9)),6) 13;
              TraceOperation 042890 (Loadw (Var (Global 94)) (Con 2) Sp);
              Let b59 = M[008096];
              Let b60 = M[008097];
              Let b61 = M[Offset(Address(MakeHiLo(b59,b60)),4)];
              Let b62 = M[Offset(Offset(Address(MakeHiLo(b59,b60)),4),1)];
              PushStack MakeHiLo(b61,b62);
              TraceOperation 042894 (Jz (Var Sp) (Branch T (Dloc 042903)));
              PopStack popped63;
              if (IsZero(popped63)) {
                Jump: 042903
              } else {
                TraceOperation 042897 (Set_attr (Con 193) (Con 23));
                Let b64 = M[002490];
                SetByte 002490 SetBit(b64,0);
                TraceOperation 042900 (Jump 042906);
                Jump: 042906
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          TraceOperation 042890 (Loadw (Var (Global 94)) (Con 2) Sp);
          Let b65 = M[008096];
          Let b66 = M[008097];
          Let b67 = M[Offset(Address(MakeHiLo(b65,b66)),4)];
          Let b68 = M[Offset(Offset(Address(MakeHiLo(b65,b66)),4),1)];
          PushStack MakeHiLo(b67,b68);
          TraceOperation 042894 (Jz (Var Sp) (Branch T (Dloc 042903)));
          PopStack popped69;
          if (IsZero(popped69)) {
            Jump: 042903
          } else {
            TraceOperation 042897 (Set_attr (Con 193) (Con 23));
            Let b70 = M[002490];
            SetByte 002490 SetBit(b70,0);
            TraceOperation 042900 (Jump 042906);
            Jump: 042906
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 042995
  }
LocOp 042903:
  TraceOperation 042903 (Clear_attr (Con 193) (Con 23));
  Let b1 = M[002490];
  SetByte 002490 ClearBit(b1,0);
  Jump: 042906
LocOp 042906:
  TraceOperation 042906 (Test_attr (Con 76) (Con 4) (Branch T (Dloc 042925)));
  Let b1 = M[001435];
  if (TestBit(b1,3)) {
    Jump: 042925
  } else {
    TraceOperation 042910 (Insert_obj (Con 69) (Con 219));
    Let b2 = M[001376];
    if (IsZero(Widen(b2))) {
      SetByte 001376 219;
      Let b3 = M[002728];
      SetByte 001377 LoByte(Widen(b3));
      SetByte 002728 69;
      TraceOperation 042913 (Set_attr (Con 69) (Con 21));
      Let b4 = M[001374];
      SetByte 001374 SetBit(b4,2);
      TraceOperation 042916 (Set_attr (Con 69) (Con 27));
      Let b5 = M[001375];
      SetByte 001375 SetBit(b5,4);
      TraceOperation 042919 (Store (Con 111) (Con 0));
      SetByte 008098 0;
      SetByte 008099 0;
      TraceOperation 042922 (Clear_attr (Con 70) (Con 27));
      Let b6 = M[001384];
      SetByte 001384 ClearBit(b6,4);
      Jump: 042925
    } else {
      Let b7 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b7),69)) {
        Let b8 = M[001377];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b8));
        SetByte 001376 219;
        Let b9 = M[002728];
        SetByte 001377 LoByte(Widen(b9));
        SetByte 002728 69;
        TraceOperation 042913 (Set_attr (Con 69) (Con 21));
        Let b10 = M[001374];
        SetByte 001374 SetBit(b10,2);
        TraceOperation 042916 (Set_attr (Con 69) (Con 27));
        Let b11 = M[001375];
        SetByte 001375 SetBit(b11,4);
        TraceOperation 042919 (Store (Con 111) (Con 0));
        SetByte 008098 0;
        SetByte 008099 0;
        TraceOperation 042922 (Clear_attr (Con 70) (Con 27));
        Let b12 = M[001384];
        SetByte 001384 ClearBit(b12,4);
        Jump: 042925
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 042925:
  TraceOperation 042925 (Call (Floc 043644) [Con 174,Con 193] Sp);
  PushFrame 042925;
  SetLocal 1 174;
  SetLocal 2 193;
  JumpCall: 043644, #actuals: 2
LocReturn 042925:
  PushStack call_result;
  TraceOperation 042932 (Clear_attr (Con 76) (Con 5));
  Let b1 = M[001435];
  SetByte 001435 ClearBit(b1,2);
  TraceOperation 042935 (Clear_attr (Con 193) (Con 27));
  Let b2 = M[002491];
  SetByte 002491 ClearBit(b2,4);
  TraceOperation 042938 (Clear_attr (Con 72) (Con 27));
  Let b3 = M[001402];
  SetByte 001402 ClearBit(b3,4);
  TraceOperation 042941 (Clear_attr (Con 71) (Con 27));
  Let b4 = M[001393];
  SetByte 001393 ClearBit(b4,4);
  TraceOperation 042944 (Insert_obj (Con 72) (Con 219));
  Let b5 = M[001403];
  if (IsZero(Widen(b5))) {
    SetByte 001403 219;
    Let b6 = M[002728];
    SetByte 001404 LoByte(Widen(b6));
    SetByte 002728 72;
    TraceOperation 042947 (Insert_obj (Con 71) (Con 219));
    Let b7 = M[001394];
    if (IsZero(Widen(b7))) {
      SetByte 001394 219;
      Let b8 = M[002728];
      SetByte 001395 LoByte(Widen(b8));
      SetByte 002728 71;
      TraceOperation 042950 (Store (Con 94) (Con 10));
      SetByte 008064 0;
      SetByte 008065 10;
      TraceOperation 042953 (Store (Con 112) (Con 0));
      SetByte 008100 0;
      SetByte 008101 0;
      TraceOperation 042956 (Call (Floc 022340) [Con -27122] Sp);
      PushFrame 042956;
      SetLocal 1 -27122;
      JumpCall: 022340, #actuals: 1
    } else {
      Let b9 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b9),71)) {
        Let b10 = M[001395];
        SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b10));
        SetByte 001394 219;
        Let b11 = M[002728];
        SetByte 001395 LoByte(Widen(b11));
        SetByte 002728 71;
        TraceOperation 042950 (Store (Con 94) (Con 10));
        SetByte 008064 0;
        SetByte 008065 10;
        TraceOperation 042953 (Store (Con 112) (Con 0));
        SetByte 008100 0;
        SetByte 008101 0;
        TraceOperation 042956 (Call (Floc 022340) [Con -27122] Sp);
        PushFrame 042956;
        SetLocal 1 -27122;
        JumpCall: 022340, #actuals: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b12 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b12),72)) {
      Let b13 = M[001404];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b13));
      SetByte 001403 219;
      Let b14 = M[002728];
      SetByte 001404 LoByte(Widen(b14));
      SetByte 002728 72;
      TraceOperation 042947 (Insert_obj (Con 71) (Con 219));
      Let b15 = M[001394];
      if (IsZero(Widen(b15))) {
        SetByte 001394 219;
        Let b16 = M[002728];
        SetByte 001395 LoByte(Widen(b16));
        SetByte 002728 71;
        TraceOperation 042950 (Store (Con 94) (Con 10));
        SetByte 008064 0;
        SetByte 008065 10;
        TraceOperation 042953 (Store (Con 112) (Con 0));
        SetByte 008100 0;
        SetByte 008101 0;
        TraceOperation 042956 (Call (Floc 022340) [Con -27122] Sp);
        PushFrame 042956;
        SetLocal 1 -27122;
        JumpCall: 022340, #actuals: 1
      } else {
        Let b17 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
        if (Equal(Widen(b17),71)) {
          Let b18 = M[001395];
          SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b18));
          SetByte 001394 219;
          Let b19 = M[002728];
          SetByte 001395 LoByte(Widen(b19));
          SetByte 002728 71;
          TraceOperation 042950 (Store (Con 94) (Con 10));
          SetByte 008064 0;
          SetByte 008065 10;
          TraceOperation 042953 (Store (Con 112) (Con 0));
          SetByte 008100 0;
          SetByte 008101 0;
          TraceOperation 042956 (Call (Floc 022340) [Con -27122] Sp);
          PushFrame 042956;
          SetLocal 1 -27122;
          JumpCall: 022340, #actuals: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 042956:
  PushStack call_result;
  TraceOperation 042963 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 042968 (Call (Floc 022340) [Con -14685] Sp);
  PushFrame 042968;
  SetLocal 1 -14685;
  JumpCall: 022340, #actuals: 1
LocReturn 042968:
  PushStack call_result;
  TraceOperation 042975 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 042980 (Call (Floc 022340) [Con -20734] Sp);
  PushFrame 042980;
  SetLocal 1 -20734;
  JumpCall: 022340, #actuals: 1
LocReturn 042980:
  PushStack call_result;
  TraceOperation 042987 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 042992 (Jump 043239);
  Jump: 043239
LocOp 042995:
  TraceOperation 042995 (Je [Var (Global 120),Con 195] (Branch F (Dloc 043074)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),195)) {
    TraceOperation 043000 (Store (Con 106) (Con 0));
    SetByte 008088 0;
    SetByte 008089 0;
    TraceOperation 043003 (Store (Con 108) (Con 0));
    SetByte 008092 0;
    SetByte 008093 0;
    TraceOperation 043006 (Store (Con 109) (Con 0));
    SetByte 008094 0;
    SetByte 008095 0;
    TraceOperation 043009 (Store (Con 104) (Con 0));
    SetByte 008084 0;
    SetByte 008085 0;
    TraceOperation 043012 (Insert_obj (Con 27) (Con 219));
    Let b3 = M[000998];
    if (IsZero(Widen(b3))) {
      SetByte 000998 219;
      Let b4 = M[002728];
      SetByte 000999 LoByte(Widen(b4));
      SetByte 002728 27;
      TraceOperation 043015 (Insert_obj (Con 52) (Con 219));
      Let b5 = M[001223];
      if (IsZero(Widen(b5))) {
        SetByte 001223 219;
        Let b6 = M[002728];
        SetByte 001224 LoByte(Widen(b6));
        SetByte 002728 52;
        TraceOperation 043018 (Insert_obj (Con 51) (Con 219));
        Let b7 = M[001214];
        if (IsZero(Widen(b7))) {
          SetByte 001214 219;
          Let b8 = M[002728];
          SetByte 001215 LoByte(Widen(b8));
          SetByte 002728 51;
          TraceOperation 043021 (Clear_attr (Con 66) (Con 5));
          Let b9 = M[001345];
          SetByte 001345 ClearBit(b9,2);
          TraceOperation 043024 (Set_attr (Con 51) (Con 27));
          Let b10 = M[001213];
          SetByte 001213 SetBit(b10,4);
          TraceOperation 043027 (Call (Floc 022340) [Con -25112] Sp);
          PushFrame 043027;
          SetLocal 1 -25112;
          JumpCall: 022340, #actuals: 1
        } else {
          Let b11 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
          if (Equal(Widen(b11),51)) {
            Let b12 = M[001215];
            SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b12));
            SetByte 001214 219;
            Let b13 = M[002728];
            SetByte 001215 LoByte(Widen(b13));
            SetByte 002728 51;
            TraceOperation 043021 (Clear_attr (Con 66) (Con 5));
            Let b14 = M[001345];
            SetByte 001345 ClearBit(b14,2);
            TraceOperation 043024 (Set_attr (Con 51) (Con 27));
            Let b15 = M[001213];
            SetByte 001213 SetBit(b15,4);
            TraceOperation 043027 (Call (Floc 022340) [Con -25112] Sp);
            PushFrame 043027;
            SetLocal 1 -25112;
            JumpCall: 022340, #actuals: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b16 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b16),52)) {
          Let b17 = M[001224];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b17));
          SetByte 001223 219;
          Let b18 = M[002728];
          SetByte 001224 LoByte(Widen(b18));
          SetByte 002728 52;
          TraceOperation 043018 (Insert_obj (Con 51) (Con 219));
          Let b19 = M[001214];
          if (IsZero(Widen(b19))) {
            SetByte 001214 219;
            Let b20 = M[002728];
            SetByte 001215 LoByte(Widen(b20));
            SetByte 002728 51;
            TraceOperation 043021 (Clear_attr (Con 66) (Con 5));
            Let b21 = M[001345];
            SetByte 001345 ClearBit(b21,2);
            TraceOperation 043024 (Set_attr (Con 51) (Con 27));
            Let b22 = M[001213];
            SetByte 001213 SetBit(b22,4);
            TraceOperation 043027 (Call (Floc 022340) [Con -25112] Sp);
            PushFrame 043027;
            SetLocal 1 -25112;
            JumpCall: 022340, #actuals: 1
          } else {
            Let b23 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
            if (Equal(Widen(b23),51)) {
              Let b24 = M[001215];
              SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b24));
              SetByte 001214 219;
              Let b25 = M[002728];
              SetByte 001215 LoByte(Widen(b25));
              SetByte 002728 51;
              TraceOperation 043021 (Clear_attr (Con 66) (Con 5));
              Let b26 = M[001345];
              SetByte 001345 ClearBit(b26,2);
              TraceOperation 043024 (Set_attr (Con 51) (Con 27));
              Let b27 = M[001213];
              SetByte 001213 SetBit(b27,4);
              TraceOperation 043027 (Call (Floc 022340) [Con -25112] Sp);
              PushFrame 043027;
              SetLocal 1 -25112;
              JumpCall: 022340, #actuals: 1
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b28 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b28),27)) {
        Let b29 = M[000999];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b29));
        SetByte 000998 219;
        Let b30 = M[002728];
        SetByte 000999 LoByte(Widen(b30));
        SetByte 002728 27;
        TraceOperation 043015 (Insert_obj (Con 52) (Con 219));
        Let b31 = M[001223];
        if (IsZero(Widen(b31))) {
          SetByte 001223 219;
          Let b32 = M[002728];
          SetByte 001224 LoByte(Widen(b32));
          SetByte 002728 52;
          TraceOperation 043018 (Insert_obj (Con 51) (Con 219));
          Let b33 = M[001214];
          if (IsZero(Widen(b33))) {
            SetByte 001214 219;
            Let b34 = M[002728];
            SetByte 001215 LoByte(Widen(b34));
            SetByte 002728 51;
            TraceOperation 043021 (Clear_attr (Con 66) (Con 5));
            Let b35 = M[001345];
            SetByte 001345 ClearBit(b35,2);
            TraceOperation 043024 (Set_attr (Con 51) (Con 27));
            Let b36 = M[001213];
            SetByte 001213 SetBit(b36,4);
            TraceOperation 043027 (Call (Floc 022340) [Con -25112] Sp);
            PushFrame 043027;
            SetLocal 1 -25112;
            JumpCall: 022340, #actuals: 1
          } else {
            Let b37 = M[Offset(Offset(000751,Mul(Widen(b33),9)),6)];
            if (Equal(Widen(b37),51)) {
              Let b38 = M[001215];
              SetByte Offset(Offset(000751,Mul(Widen(b33),9)),6) LoByte(Widen(b38));
              SetByte 001214 219;
              Let b39 = M[002728];
              SetByte 001215 LoByte(Widen(b39));
              SetByte 002728 51;
              TraceOperation 043021 (Clear_attr (Con 66) (Con 5));
              Let b40 = M[001345];
              SetByte 001345 ClearBit(b40,2);
              TraceOperation 043024 (Set_attr (Con 51) (Con 27));
              Let b41 = M[001213];
              SetByte 001213 SetBit(b41,4);
              TraceOperation 043027 (Call (Floc 022340) [Con -25112] Sp);
              PushFrame 043027;
              SetLocal 1 -25112;
              JumpCall: 022340, #actuals: 1
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b42 = M[Offset(Offset(000751,Mul(Widen(b31),9)),6)];
          if (Equal(Widen(b42),52)) {
            Let b43 = M[001224];
            SetByte Offset(Offset(000751,Mul(Widen(b31),9)),6) LoByte(Widen(b43));
            SetByte 001223 219;
            Let b44 = M[002728];
            SetByte 001224 LoByte(Widen(b44));
            SetByte 002728 52;
            TraceOperation 043018 (Insert_obj (Con 51) (Con 219));
            Let b45 = M[001214];
            if (IsZero(Widen(b45))) {
              SetByte 001214 219;
              Let b46 = M[002728];
              SetByte 001215 LoByte(Widen(b46));
              SetByte 002728 51;
              TraceOperation 043021 (Clear_attr (Con 66) (Con 5));
              Let b47 = M[001345];
              SetByte 001345 ClearBit(b47,2);
              TraceOperation 043024 (Set_attr (Con 51) (Con 27));
              Let b48 = M[001213];
              SetByte 001213 SetBit(b48,4);
              TraceOperation 043027 (Call (Floc 022340) [Con -25112] Sp);
              PushFrame 043027;
              SetLocal 1 -25112;
              JumpCall: 022340, #actuals: 1
            } else {
              Let b49 = M[Offset(Offset(000751,Mul(Widen(b45),9)),6)];
              if (Equal(Widen(b49),51)) {
                Let b50 = M[001215];
                SetByte Offset(Offset(000751,Mul(Widen(b45),9)),6) LoByte(Widen(b50));
                SetByte 001214 219;
                Let b51 = M[002728];
                SetByte 001215 LoByte(Widen(b51));
                SetByte 002728 51;
                TraceOperation 043021 (Clear_attr (Con 66) (Con 5));
                Let b52 = M[001345];
                SetByte 001345 ClearBit(b52,2);
                TraceOperation 043024 (Set_attr (Con 51) (Con 27));
                Let b53 = M[001213];
                SetByte 001213 SetBit(b53,4);
                TraceOperation 043027 (Call (Floc 022340) [Con -25112] Sp);
                PushFrame 043027;
                SetLocal 1 -25112;
                JumpCall: 022340, #actuals: 1
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 043074
  }
LocReturn 043027:
  PushStack call_result;
  TraceOperation 043034 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 043039 (Call (Floc 022340) [Con -20422] Sp);
  PushFrame 043039;
  SetLocal 1 -20422;
  JumpCall: 022340, #actuals: 1
LocReturn 043039:
  PushStack call_result;
  TraceOperation 043046 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 043051 (Test_attr (Con 66) (Con 4) (Branch T (Dloc 043064)));
  Let b2 = M[001345];
  if (TestBit(b2,3)) {
    Jump: 043064
  } else {
    TraceOperation 043055 (Insert_obj (Con 60) (Con 66));
    Let b3 = M[001295];
    if (IsZero(Widen(b3))) {
      SetByte 001295 66;
      Let b4 = M[001351];
      SetByte 001296 LoByte(Widen(b4));
      SetByte 001351 60;
      TraceOperation 043058 (Insert_obj (Con 61) (Con 219));
      Let b5 = M[001304];
      if (IsZero(Widen(b5))) {
        SetByte 001304 219;
        Let b6 = M[002728];
        SetByte 001305 LoByte(Widen(b6));
        SetByte 002728 61;
        TraceOperation 043061 (Insert_obj (Con 62) (Con 219));
        Let b7 = M[001313];
        if (IsZero(Widen(b7))) {
          SetByte 001313 219;
          Let b8 = M[002728];
          SetByte 001314 LoByte(Widen(b8));
          SetByte 002728 62;
          Jump: 043064
        } else {
          Let b9 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
          if (Equal(Widen(b9),62)) {
            Let b10 = M[001314];
            SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b10));
            SetByte 001313 219;
            Let b11 = M[002728];
            SetByte 001314 LoByte(Widen(b11));
            SetByte 002728 62;
            Jump: 043064
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b12 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b12),61)) {
          Let b13 = M[001305];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b13));
          SetByte 001304 219;
          Let b14 = M[002728];
          SetByte 001305 LoByte(Widen(b14));
          SetByte 002728 61;
          TraceOperation 043061 (Insert_obj (Con 62) (Con 219));
          Let b15 = M[001313];
          if (IsZero(Widen(b15))) {
            SetByte 001313 219;
            Let b16 = M[002728];
            SetByte 001314 LoByte(Widen(b16));
            SetByte 002728 62;
            Jump: 043064
          } else {
            Let b17 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
            if (Equal(Widen(b17),62)) {
              Let b18 = M[001314];
              SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b18));
              SetByte 001313 219;
              Let b19 = M[002728];
              SetByte 001314 LoByte(Widen(b19));
              SetByte 002728 62;
              Jump: 043064
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b20 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b20),60)) {
        Let b21 = M[001296];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b21));
        SetByte 001295 66;
        Let b22 = M[001351];
        SetByte 001296 LoByte(Widen(b22));
        SetByte 001351 60;
        TraceOperation 043058 (Insert_obj (Con 61) (Con 219));
        Let b23 = M[001304];
        if (IsZero(Widen(b23))) {
          SetByte 001304 219;
          Let b24 = M[002728];
          SetByte 001305 LoByte(Widen(b24));
          SetByte 002728 61;
          TraceOperation 043061 (Insert_obj (Con 62) (Con 219));
          Let b25 = M[001313];
          if (IsZero(Widen(b25))) {
            SetByte 001313 219;
            Let b26 = M[002728];
            SetByte 001314 LoByte(Widen(b26));
            SetByte 002728 62;
            Jump: 043064
          } else {
            Let b27 = M[Offset(Offset(000751,Mul(Widen(b25),9)),6)];
            if (Equal(Widen(b27),62)) {
              Let b28 = M[001314];
              SetByte Offset(Offset(000751,Mul(Widen(b25),9)),6) LoByte(Widen(b28));
              SetByte 001313 219;
              Let b29 = M[002728];
              SetByte 001314 LoByte(Widen(b29));
              SetByte 002728 62;
              Jump: 043064
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b30 = M[Offset(Offset(000751,Mul(Widen(b23),9)),6)];
          if (Equal(Widen(b30),61)) {
            Let b31 = M[001305];
            SetByte Offset(Offset(000751,Mul(Widen(b23),9)),6) LoByte(Widen(b31));
            SetByte 001304 219;
            Let b32 = M[002728];
            SetByte 001305 LoByte(Widen(b32));
            SetByte 002728 61;
            TraceOperation 043061 (Insert_obj (Con 62) (Con 219));
            Let b33 = M[001313];
            if (IsZero(Widen(b33))) {
              SetByte 001313 219;
              Let b34 = M[002728];
              SetByte 001314 LoByte(Widen(b34));
              SetByte 002728 62;
              Jump: 043064
            } else {
              Let b35 = M[Offset(Offset(000751,Mul(Widen(b33),9)),6)];
              if (Equal(Widen(b35),62)) {
                Let b36 = M[001314];
                SetByte Offset(Offset(000751,Mul(Widen(b33),9)),6) LoByte(Widen(b36));
                SetByte 001313 219;
                Let b37 = M[002728];
                SetByte 001314 LoByte(Widen(b37));
                SetByte 002728 62;
                Jump: 043064
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 043064:
  TraceOperation 043064 (Call (Floc 043644) [Con 31,Con 219] Sp);
  PushFrame 043064;
  SetLocal 1 31;
  SetLocal 2 219;
  JumpCall: 043644, #actuals: 2
LocReturn 043064:
  PushStack call_result;
  TraceOperation 043071 (Jump 043239);
  Jump: 043239
LocOp 043074:
  TraceOperation 043074 (Je [Var (Global 0),Con 213] (Branch F (Dloc 043133)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),213)) {
    TraceOperation 043078 (Call (Floc 043644) [Con 213,Con 166] Sp);
    PushFrame 043078;
    SetLocal 1 213;
    SetLocal 2 166;
    JumpCall: 043644, #actuals: 2
  } else {
    Jump: 043133
  }
LocReturn 043078:
  PushStack call_result;
  TraceOperation 043085 (Insert_obj (Con 50) (Con 213));
  Let b1 = M[001205];
  if (IsZero(Widen(b1))) {
    SetByte 001205 213;
    Let b2 = M[002674];
    SetByte 001206 LoByte(Widen(b2));
    SetByte 002674 50;
    TraceOperation 043088 (Call (Floc 043468) [Con 214,Con 156] Sp);
    PushFrame 043088;
    SetLocal 1 214;
    SetLocal 2 156;
    JumpCall: 043468, #actuals: 2
  } else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b3),50)) {
      Let b4 = M[001206];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b4));
      SetByte 001205 213;
      Let b5 = M[002674];
      SetByte 001206 LoByte(Widen(b5));
      SetByte 002674 50;
      TraceOperation 043088 (Call (Floc 043468) [Con 214,Con 156] Sp);
      PushFrame 043088;
      SetLocal 1 214;
      SetLocal 2 156;
      JumpCall: 043468, #actuals: 2
    } else {
      Error: unlink/loop
    }
  }
LocReturn 043088:
  PushStack call_result;
  TraceOperation 043095 (Jz (Var Sp) (Branch F (Dloc 043101)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 043098 (Insert_obj (Con 214) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[002681];
    if (IsZero(Widen(b4))) {
      SetByte 002681 b3;
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte 002682 LoByte(Widen(b5));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 214;
      Jump: 043101
    } else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b6),214)) {
        Let b7 = M[002682];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b7));
        SetByte 002681 b3;
        Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
        SetByte 002682 LoByte(Widen(b8));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 214;
        Jump: 043101
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 043101
  }
LocOp 043101:
  TraceOperation 043101 (Call (Floc 043644) [Con 31,Con 166] Sp);
  PushFrame 043101;
  SetLocal 1 31;
  SetLocal 2 166;
  JumpCall: 043644, #actuals: 2
LocReturn 043101:
  PushStack call_result;
  TraceOperation 043108 (Clear_attr (Con 213) (Con 5));
  Let b1 = M[002668];
  SetByte 002668 ClearBit(b1,2);
  TraceOperation 043111 (Jin (Con 158) (Con 166) (Branch F (Dloc 043122)));
  Let b2 = M[002177];
  if (Equal(166,Widen(b2))) {
    TraceOperation 043115 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 043122)));
    Let b3 = M[002174];
    if (TestBit(b3,6)) {
      TraceOperation 043119 (Insert_obj (Con 158) (Con 31));
      Let b4 = M[002177];
      if (IsZero(Widen(b4))) {
        SetByte 002177 31;
        Let b5 = M[001036];
        SetByte 002178 LoByte(Widen(b5));
        SetByte 001036 158;
        Jump: 043122
      } else {
        Let b6 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
        if (Equal(Widen(b6),158)) {
          Let b7 = M[002178];
          SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b7));
          SetByte 002177 31;
          Let b8 = M[001036];
          SetByte 002178 LoByte(Widen(b8));
          SetByte 001036 158;
          Jump: 043122
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 043122
    }
  } else {
    Jump: 043122
  }
LocOp 043122:
  TraceOperation 043122 (Jin (Con 111) (Con 166) (Branch F (Dloc 043239)));
  Let b1 = M[001754];
  if (Equal(166,Widen(b1))) {
    TraceOperation 043127 (Insert_obj (Con 111) (Con 31));
    Let b2 = M[001754];
    if (IsZero(Widen(b2))) {
      SetByte 001754 31;
      Let b3 = M[001036];
      SetByte 001755 LoByte(Widen(b3));
      SetByte 001036 111;
      TraceOperation 043130 (Jump 043239);
      Jump: 043239
    } else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b4),111)) {
        Let b5 = M[001755];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b5));
        SetByte 001754 31;
        Let b6 = M[001036];
        SetByte 001755 LoByte(Widen(b6));
        SetByte 001036 111;
        TraceOperation 043130 (Jump 043239);
        Jump: 043239
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 043239
  }
LocOp 043133:
  TraceOperation 043133 (Je [Var (Global 0),Con 86,Con 81] (Branch F (Dloc 043196)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(Equal(MakeHiLo(b1,b2),86),Equal(MakeHiLo(b1,b2),81))) {
    TraceOperation 043139 (Call (Floc 022340) [Con -30860] Sp);
    PushFrame 043139;
    SetLocal 1 -30860;
    JumpCall: 022340, #actuals: 1
  } else {
    Jump: 043196
  }
LocReturn 043139:
  PushStack call_result;
  TraceOperation 043146 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 043151 (Clear_attr (Con 86) (Con 5));
  Let b2 = M[001525];
  SetByte 001525 ClearBit(b2,2);
  TraceOperation 043154 (Insert_obj (Con 163) (Con 219));
  Let b3 = M[002222];
  if (IsZero(Widen(b3))) {
    SetByte 002222 219;
    Let b4 = M[002728];
    SetByte 002223 LoByte(Widen(b4));
    SetByte 002728 163;
    TraceOperation 043157 (Store (Con 115) (Con 0));
    SetByte 008106 0;
    SetByte 008107 0;
    TraceOperation 043160 (Je [Var (Global 0),Con 86] (Branch F (Dloc 043239)));
    Let b5 = M[007908];
    Let b6 = M[007909];
    if (Equal(MakeHiLo(b5,b6),86)) {
      TraceOperation 043165 (Call (Floc 043644) [Con 86,Con 219] Sp);
      PushFrame 043165;
      SetLocal 1 86;
      SetLocal 2 219;
      JumpCall: 043644, #actuals: 2
    } else {
      Jump: 043239
    }
  } else {
    Let b7 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b7),163)) {
      Let b8 = M[002223];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b8));
      SetByte 002222 219;
      Let b9 = M[002728];
      SetByte 002223 LoByte(Widen(b9));
      SetByte 002728 163;
      TraceOperation 043157 (Store (Con 115) (Con 0));
      SetByte 008106 0;
      SetByte 008107 0;
      TraceOperation 043160 (Je [Var (Global 0),Con 86] (Branch F (Dloc 043239)));
      Let b10 = M[007908];
      Let b11 = M[007909];
      if (Equal(MakeHiLo(b10,b11),86)) {
        TraceOperation 043165 (Call (Floc 043644) [Con 86,Con 219] Sp);
        PushFrame 043165;
        SetLocal 1 86;
        SetLocal 2 219;
        JumpCall: 043644, #actuals: 2
      } else {
        Jump: 043239
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 043165:
  PushStack call_result;
  TraceOperation 043172 (Insert_obj (Con 15) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[000890];
  if (IsZero(Widen(b3))) {
    SetByte 000890 b2;
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 000891 LoByte(Widen(b4));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 15;
    TraceOperation 043175 (Insert_obj (Con 83) (Var (Global 0)));
    Let b5 = M[007908];
    Let b6 = M[007909];
    Let b7 = M[001502];
    if (IsZero(Widen(b7))) {
      SetByte 001502 b6;
      Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte 001503 LoByte(Widen(b8));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 83;
      TraceOperation 043178 (Insert_obj (Con 84) (Var (Global 0)));
      Let b9 = M[007908];
      Let b10 = M[007909];
      Let b11 = M[001511];
      if (IsZero(Widen(b11))) {
        SetByte 001511 b10;
        Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6)];
        SetByte 001512 LoByte(Widen(b12));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6) 84;
        TraceOperation 043181 (Insert_obj (Con 85) (Var (Global 0)));
        Let b13 = M[007908];
        Let b14 = M[007909];
        Let b15 = M[001520];
        if (IsZero(Widen(b15))) {
          SetByte 001520 b14;
          Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6)];
          SetByte 001521 LoByte(Widen(b16));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6) 85;
          TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
          Let b17 = M[007908];
          Let b18 = M[007909];
          Let b19 = M[001538];
          if (IsZero(Widen(b19))) {
            SetByte 001538 b18;
            Let b20 = M[Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6)];
            SetByte 001539 LoByte(Widen(b20));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6) 87;
            TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
            Let b21 = M[007908];
            Let b22 = M[007909];
            Let b23 = M[001493];
            if (IsZero(Widen(b23))) {
              SetByte 001493 b22;
              Let b24 = M[Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),6)];
              SetByte 001494 LoByte(Widen(b24));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),6) 82;
              TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
              Let b25 = M[001507];
              SetByte 001507 ClearBit(b25,4);
              TraceOperation 043193 (Jump 043239);
              Jump: 043239
            } else {
              Let b26 = M[Offset(Offset(000751,Mul(Widen(b23),9)),6)];
              if (Equal(Widen(b26),82)) {
                Let b27 = M[001494];
                SetByte Offset(Offset(000751,Mul(Widen(b23),9)),6) LoByte(Widen(b27));
                SetByte 001493 b22;
                Let b28 = M[Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),6)];
                SetByte 001494 LoByte(Widen(b28));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),6) 82;
                TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                Let b29 = M[001507];
                SetByte 001507 ClearBit(b29,4);
                TraceOperation 043193 (Jump 043239);
                Jump: 043239
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b30 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
            if (Equal(Widen(b30),87)) {
              Let b31 = M[001539];
              SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b31));
              SetByte 001538 b18;
              Let b32 = M[Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6)];
              SetByte 001539 LoByte(Widen(b32));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6) 87;
              TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
              Let b33 = M[007908];
              Let b34 = M[007909];
              Let b35 = M[001493];
              if (IsZero(Widen(b35))) {
                SetByte 001493 b34;
                Let b36 = M[Offset(Offset(000751,Mul(MakeHiLo(b33,b34),9)),6)];
                SetByte 001494 LoByte(Widen(b36));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b33,b34),9)),6) 82;
                TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                Let b37 = M[001507];
                SetByte 001507 ClearBit(b37,4);
                TraceOperation 043193 (Jump 043239);
                Jump: 043239
              } else {
                Let b38 = M[Offset(Offset(000751,Mul(Widen(b35),9)),6)];
                if (Equal(Widen(b38),82)) {
                  Let b39 = M[001494];
                  SetByte Offset(Offset(000751,Mul(Widen(b35),9)),6) LoByte(Widen(b39));
                  SetByte 001493 b34;
                  Let b40 = M[Offset(Offset(000751,Mul(MakeHiLo(b33,b34),9)),6)];
                  SetByte 001494 LoByte(Widen(b40));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b33,b34),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b41 = M[001507];
                  SetByte 001507 ClearBit(b41,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b42 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
          if (Equal(Widen(b42),85)) {
            Let b43 = M[001521];
            SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b43));
            SetByte 001520 b14;
            Let b44 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6)];
            SetByte 001521 LoByte(Widen(b44));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6) 85;
            TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
            Let b45 = M[007908];
            Let b46 = M[007909];
            Let b47 = M[001538];
            if (IsZero(Widen(b47))) {
              SetByte 001538 b46;
              Let b48 = M[Offset(Offset(000751,Mul(MakeHiLo(b45,b46),9)),6)];
              SetByte 001539 LoByte(Widen(b48));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b45,b46),9)),6) 87;
              TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
              Let b49 = M[007908];
              Let b50 = M[007909];
              Let b51 = M[001493];
              if (IsZero(Widen(b51))) {
                SetByte 001493 b50;
                Let b52 = M[Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),6)];
                SetByte 001494 LoByte(Widen(b52));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),6) 82;
                TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                Let b53 = M[001507];
                SetByte 001507 ClearBit(b53,4);
                TraceOperation 043193 (Jump 043239);
                Jump: 043239
              } else {
                Let b54 = M[Offset(Offset(000751,Mul(Widen(b51),9)),6)];
                if (Equal(Widen(b54),82)) {
                  Let b55 = M[001494];
                  SetByte Offset(Offset(000751,Mul(Widen(b51),9)),6) LoByte(Widen(b55));
                  SetByte 001493 b50;
                  Let b56 = M[Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),6)];
                  SetByte 001494 LoByte(Widen(b56));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b57 = M[001507];
                  SetByte 001507 ClearBit(b57,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b58 = M[Offset(Offset(000751,Mul(Widen(b47),9)),6)];
              if (Equal(Widen(b58),87)) {
                Let b59 = M[001539];
                SetByte Offset(Offset(000751,Mul(Widen(b47),9)),6) LoByte(Widen(b59));
                SetByte 001538 b46;
                Let b60 = M[Offset(Offset(000751,Mul(MakeHiLo(b45,b46),9)),6)];
                SetByte 001539 LoByte(Widen(b60));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b45,b46),9)),6) 87;
                TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                Let b61 = M[007908];
                Let b62 = M[007909];
                Let b63 = M[001493];
                if (IsZero(Widen(b63))) {
                  SetByte 001493 b62;
                  Let b64 = M[Offset(Offset(000751,Mul(MakeHiLo(b61,b62),9)),6)];
                  SetByte 001494 LoByte(Widen(b64));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b61,b62),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b65 = M[001507];
                  SetByte 001507 ClearBit(b65,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Let b66 = M[Offset(Offset(000751,Mul(Widen(b63),9)),6)];
                  if (Equal(Widen(b66),82)) {
                    Let b67 = M[001494];
                    SetByte Offset(Offset(000751,Mul(Widen(b63),9)),6) LoByte(Widen(b67));
                    SetByte 001493 b62;
                    Let b68 = M[Offset(Offset(000751,Mul(MakeHiLo(b61,b62),9)),6)];
                    SetByte 001494 LoByte(Widen(b68));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b61,b62),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b69 = M[001507];
                    SetByte 001507 ClearBit(b69,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b70 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
        if (Equal(Widen(b70),84)) {
          Let b71 = M[001512];
          SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b71));
          SetByte 001511 b10;
          Let b72 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6)];
          SetByte 001512 LoByte(Widen(b72));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6) 84;
          TraceOperation 043181 (Insert_obj (Con 85) (Var (Global 0)));
          Let b73 = M[007908];
          Let b74 = M[007909];
          Let b75 = M[001520];
          if (IsZero(Widen(b75))) {
            SetByte 001520 b74;
            Let b76 = M[Offset(Offset(000751,Mul(MakeHiLo(b73,b74),9)),6)];
            SetByte 001521 LoByte(Widen(b76));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b73,b74),9)),6) 85;
            TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
            Let b77 = M[007908];
            Let b78 = M[007909];
            Let b79 = M[001538];
            if (IsZero(Widen(b79))) {
              SetByte 001538 b78;
              Let b80 = M[Offset(Offset(000751,Mul(MakeHiLo(b77,b78),9)),6)];
              SetByte 001539 LoByte(Widen(b80));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b77,b78),9)),6) 87;
              TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
              Let b81 = M[007908];
              Let b82 = M[007909];
              Let b83 = M[001493];
              if (IsZero(Widen(b83))) {
                SetByte 001493 b82;
                Let b84 = M[Offset(Offset(000751,Mul(MakeHiLo(b81,b82),9)),6)];
                SetByte 001494 LoByte(Widen(b84));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b81,b82),9)),6) 82;
                TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                Let b85 = M[001507];
                SetByte 001507 ClearBit(b85,4);
                TraceOperation 043193 (Jump 043239);
                Jump: 043239
              } else {
                Let b86 = M[Offset(Offset(000751,Mul(Widen(b83),9)),6)];
                if (Equal(Widen(b86),82)) {
                  Let b87 = M[001494];
                  SetByte Offset(Offset(000751,Mul(Widen(b83),9)),6) LoByte(Widen(b87));
                  SetByte 001493 b82;
                  Let b88 = M[Offset(Offset(000751,Mul(MakeHiLo(b81,b82),9)),6)];
                  SetByte 001494 LoByte(Widen(b88));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b81,b82),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b89 = M[001507];
                  SetByte 001507 ClearBit(b89,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b90 = M[Offset(Offset(000751,Mul(Widen(b79),9)),6)];
              if (Equal(Widen(b90),87)) {
                Let b91 = M[001539];
                SetByte Offset(Offset(000751,Mul(Widen(b79),9)),6) LoByte(Widen(b91));
                SetByte 001538 b78;
                Let b92 = M[Offset(Offset(000751,Mul(MakeHiLo(b77,b78),9)),6)];
                SetByte 001539 LoByte(Widen(b92));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b77,b78),9)),6) 87;
                TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                Let b93 = M[007908];
                Let b94 = M[007909];
                Let b95 = M[001493];
                if (IsZero(Widen(b95))) {
                  SetByte 001493 b94;
                  Let b96 = M[Offset(Offset(000751,Mul(MakeHiLo(b93,b94),9)),6)];
                  SetByte 001494 LoByte(Widen(b96));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b93,b94),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b97 = M[001507];
                  SetByte 001507 ClearBit(b97,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Let b98 = M[Offset(Offset(000751,Mul(Widen(b95),9)),6)];
                  if (Equal(Widen(b98),82)) {
                    Let b99 = M[001494];
                    SetByte Offset(Offset(000751,Mul(Widen(b95),9)),6) LoByte(Widen(b99));
                    SetByte 001493 b94;
                    Let b100 = M[Offset(Offset(000751,Mul(MakeHiLo(b93,b94),9)),6)];
                    SetByte 001494 LoByte(Widen(b100));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b93,b94),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b101 = M[001507];
                    SetByte 001507 ClearBit(b101,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b102 = M[Offset(Offset(000751,Mul(Widen(b75),9)),6)];
            if (Equal(Widen(b102),85)) {
              Let b103 = M[001521];
              SetByte Offset(Offset(000751,Mul(Widen(b75),9)),6) LoByte(Widen(b103));
              SetByte 001520 b74;
              Let b104 = M[Offset(Offset(000751,Mul(MakeHiLo(b73,b74),9)),6)];
              SetByte 001521 LoByte(Widen(b104));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b73,b74),9)),6) 85;
              TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
              Let b105 = M[007908];
              Let b106 = M[007909];
              Let b107 = M[001538];
              if (IsZero(Widen(b107))) {
                SetByte 001538 b106;
                Let b108 = M[Offset(Offset(000751,Mul(MakeHiLo(b105,b106),9)),6)];
                SetByte 001539 LoByte(Widen(b108));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b105,b106),9)),6) 87;
                TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                Let b109 = M[007908];
                Let b110 = M[007909];
                Let b111 = M[001493];
                if (IsZero(Widen(b111))) {
                  SetByte 001493 b110;
                  Let b112 = M[Offset(Offset(000751,Mul(MakeHiLo(b109,b110),9)),6)];
                  SetByte 001494 LoByte(Widen(b112));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b109,b110),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b113 = M[001507];
                  SetByte 001507 ClearBit(b113,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Let b114 = M[Offset(Offset(000751,Mul(Widen(b111),9)),6)];
                  if (Equal(Widen(b114),82)) {
                    Let b115 = M[001494];
                    SetByte Offset(Offset(000751,Mul(Widen(b111),9)),6) LoByte(Widen(b115));
                    SetByte 001493 b110;
                    Let b116 = M[Offset(Offset(000751,Mul(MakeHiLo(b109,b110),9)),6)];
                    SetByte 001494 LoByte(Widen(b116));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b109,b110),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b117 = M[001507];
                    SetByte 001507 ClearBit(b117,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b118 = M[Offset(Offset(000751,Mul(Widen(b107),9)),6)];
                if (Equal(Widen(b118),87)) {
                  Let b119 = M[001539];
                  SetByte Offset(Offset(000751,Mul(Widen(b107),9)),6) LoByte(Widen(b119));
                  SetByte 001538 b106;
                  Let b120 = M[Offset(Offset(000751,Mul(MakeHiLo(b105,b106),9)),6)];
                  SetByte 001539 LoByte(Widen(b120));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b105,b106),9)),6) 87;
                  TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                  Let b121 = M[007908];
                  Let b122 = M[007909];
                  Let b123 = M[001493];
                  if (IsZero(Widen(b123))) {
                    SetByte 001493 b122;
                    Let b124 = M[Offset(Offset(000751,Mul(MakeHiLo(b121,b122),9)),6)];
                    SetByte 001494 LoByte(Widen(b124));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b121,b122),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b125 = M[001507];
                    SetByte 001507 ClearBit(b125,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Let b126 = M[Offset(Offset(000751,Mul(Widen(b123),9)),6)];
                    if (Equal(Widen(b126),82)) {
                      Let b127 = M[001494];
                      SetByte Offset(Offset(000751,Mul(Widen(b123),9)),6) LoByte(Widen(b127));
                      SetByte 001493 b122;
                      Let b128 = M[Offset(Offset(000751,Mul(MakeHiLo(b121,b122),9)),6)];
                      SetByte 001494 LoByte(Widen(b128));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b121,b122),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b129 = M[001507];
                      SetByte 001507 ClearBit(b129,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b130 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b130),83)) {
        Let b131 = M[001503];
        SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b131));
        SetByte 001502 b6;
        Let b132 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
        SetByte 001503 LoByte(Widen(b132));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 83;
        TraceOperation 043178 (Insert_obj (Con 84) (Var (Global 0)));
        Let b133 = M[007908];
        Let b134 = M[007909];
        Let b135 = M[001511];
        if (IsZero(Widen(b135))) {
          SetByte 001511 b134;
          Let b136 = M[Offset(Offset(000751,Mul(MakeHiLo(b133,b134),9)),6)];
          SetByte 001512 LoByte(Widen(b136));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b133,b134),9)),6) 84;
          TraceOperation 043181 (Insert_obj (Con 85) (Var (Global 0)));
          Let b137 = M[007908];
          Let b138 = M[007909];
          Let b139 = M[001520];
          if (IsZero(Widen(b139))) {
            SetByte 001520 b138;
            Let b140 = M[Offset(Offset(000751,Mul(MakeHiLo(b137,b138),9)),6)];
            SetByte 001521 LoByte(Widen(b140));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b137,b138),9)),6) 85;
            TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
            Let b141 = M[007908];
            Let b142 = M[007909];
            Let b143 = M[001538];
            if (IsZero(Widen(b143))) {
              SetByte 001538 b142;
              Let b144 = M[Offset(Offset(000751,Mul(MakeHiLo(b141,b142),9)),6)];
              SetByte 001539 LoByte(Widen(b144));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b141,b142),9)),6) 87;
              TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
              Let b145 = M[007908];
              Let b146 = M[007909];
              Let b147 = M[001493];
              if (IsZero(Widen(b147))) {
                SetByte 001493 b146;
                Let b148 = M[Offset(Offset(000751,Mul(MakeHiLo(b145,b146),9)),6)];
                SetByte 001494 LoByte(Widen(b148));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b145,b146),9)),6) 82;
                TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                Let b149 = M[001507];
                SetByte 001507 ClearBit(b149,4);
                TraceOperation 043193 (Jump 043239);
                Jump: 043239
              } else {
                Let b150 = M[Offset(Offset(000751,Mul(Widen(b147),9)),6)];
                if (Equal(Widen(b150),82)) {
                  Let b151 = M[001494];
                  SetByte Offset(Offset(000751,Mul(Widen(b147),9)),6) LoByte(Widen(b151));
                  SetByte 001493 b146;
                  Let b152 = M[Offset(Offset(000751,Mul(MakeHiLo(b145,b146),9)),6)];
                  SetByte 001494 LoByte(Widen(b152));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b145,b146),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b153 = M[001507];
                  SetByte 001507 ClearBit(b153,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b154 = M[Offset(Offset(000751,Mul(Widen(b143),9)),6)];
              if (Equal(Widen(b154),87)) {
                Let b155 = M[001539];
                SetByte Offset(Offset(000751,Mul(Widen(b143),9)),6) LoByte(Widen(b155));
                SetByte 001538 b142;
                Let b156 = M[Offset(Offset(000751,Mul(MakeHiLo(b141,b142),9)),6)];
                SetByte 001539 LoByte(Widen(b156));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b141,b142),9)),6) 87;
                TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                Let b157 = M[007908];
                Let b158 = M[007909];
                Let b159 = M[001493];
                if (IsZero(Widen(b159))) {
                  SetByte 001493 b158;
                  Let b160 = M[Offset(Offset(000751,Mul(MakeHiLo(b157,b158),9)),6)];
                  SetByte 001494 LoByte(Widen(b160));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b157,b158),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b161 = M[001507];
                  SetByte 001507 ClearBit(b161,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Let b162 = M[Offset(Offset(000751,Mul(Widen(b159),9)),6)];
                  if (Equal(Widen(b162),82)) {
                    Let b163 = M[001494];
                    SetByte Offset(Offset(000751,Mul(Widen(b159),9)),6) LoByte(Widen(b163));
                    SetByte 001493 b158;
                    Let b164 = M[Offset(Offset(000751,Mul(MakeHiLo(b157,b158),9)),6)];
                    SetByte 001494 LoByte(Widen(b164));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b157,b158),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b165 = M[001507];
                    SetByte 001507 ClearBit(b165,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b166 = M[Offset(Offset(000751,Mul(Widen(b139),9)),6)];
            if (Equal(Widen(b166),85)) {
              Let b167 = M[001521];
              SetByte Offset(Offset(000751,Mul(Widen(b139),9)),6) LoByte(Widen(b167));
              SetByte 001520 b138;
              Let b168 = M[Offset(Offset(000751,Mul(MakeHiLo(b137,b138),9)),6)];
              SetByte 001521 LoByte(Widen(b168));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b137,b138),9)),6) 85;
              TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
              Let b169 = M[007908];
              Let b170 = M[007909];
              Let b171 = M[001538];
              if (IsZero(Widen(b171))) {
                SetByte 001538 b170;
                Let b172 = M[Offset(Offset(000751,Mul(MakeHiLo(b169,b170),9)),6)];
                SetByte 001539 LoByte(Widen(b172));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b169,b170),9)),6) 87;
                TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                Let b173 = M[007908];
                Let b174 = M[007909];
                Let b175 = M[001493];
                if (IsZero(Widen(b175))) {
                  SetByte 001493 b174;
                  Let b176 = M[Offset(Offset(000751,Mul(MakeHiLo(b173,b174),9)),6)];
                  SetByte 001494 LoByte(Widen(b176));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b173,b174),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b177 = M[001507];
                  SetByte 001507 ClearBit(b177,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Let b178 = M[Offset(Offset(000751,Mul(Widen(b175),9)),6)];
                  if (Equal(Widen(b178),82)) {
                    Let b179 = M[001494];
                    SetByte Offset(Offset(000751,Mul(Widen(b175),9)),6) LoByte(Widen(b179));
                    SetByte 001493 b174;
                    Let b180 = M[Offset(Offset(000751,Mul(MakeHiLo(b173,b174),9)),6)];
                    SetByte 001494 LoByte(Widen(b180));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b173,b174),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b181 = M[001507];
                    SetByte 001507 ClearBit(b181,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b182 = M[Offset(Offset(000751,Mul(Widen(b171),9)),6)];
                if (Equal(Widen(b182),87)) {
                  Let b183 = M[001539];
                  SetByte Offset(Offset(000751,Mul(Widen(b171),9)),6) LoByte(Widen(b183));
                  SetByte 001538 b170;
                  Let b184 = M[Offset(Offset(000751,Mul(MakeHiLo(b169,b170),9)),6)];
                  SetByte 001539 LoByte(Widen(b184));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b169,b170),9)),6) 87;
                  TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                  Let b185 = M[007908];
                  Let b186 = M[007909];
                  Let b187 = M[001493];
                  if (IsZero(Widen(b187))) {
                    SetByte 001493 b186;
                    Let b188 = M[Offset(Offset(000751,Mul(MakeHiLo(b185,b186),9)),6)];
                    SetByte 001494 LoByte(Widen(b188));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b185,b186),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b189 = M[001507];
                    SetByte 001507 ClearBit(b189,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Let b190 = M[Offset(Offset(000751,Mul(Widen(b187),9)),6)];
                    if (Equal(Widen(b190),82)) {
                      Let b191 = M[001494];
                      SetByte Offset(Offset(000751,Mul(Widen(b187),9)),6) LoByte(Widen(b191));
                      SetByte 001493 b186;
                      Let b192 = M[Offset(Offset(000751,Mul(MakeHiLo(b185,b186),9)),6)];
                      SetByte 001494 LoByte(Widen(b192));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b185,b186),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b193 = M[001507];
                      SetByte 001507 ClearBit(b193,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b194 = M[Offset(Offset(000751,Mul(Widen(b135),9)),6)];
          if (Equal(Widen(b194),84)) {
            Let b195 = M[001512];
            SetByte Offset(Offset(000751,Mul(Widen(b135),9)),6) LoByte(Widen(b195));
            SetByte 001511 b134;
            Let b196 = M[Offset(Offset(000751,Mul(MakeHiLo(b133,b134),9)),6)];
            SetByte 001512 LoByte(Widen(b196));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b133,b134),9)),6) 84;
            TraceOperation 043181 (Insert_obj (Con 85) (Var (Global 0)));
            Let b197 = M[007908];
            Let b198 = M[007909];
            Let b199 = M[001520];
            if (IsZero(Widen(b199))) {
              SetByte 001520 b198;
              Let b200 = M[Offset(Offset(000751,Mul(MakeHiLo(b197,b198),9)),6)];
              SetByte 001521 LoByte(Widen(b200));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b197,b198),9)),6) 85;
              TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
              Let b201 = M[007908];
              Let b202 = M[007909];
              Let b203 = M[001538];
              if (IsZero(Widen(b203))) {
                SetByte 001538 b202;
                Let b204 = M[Offset(Offset(000751,Mul(MakeHiLo(b201,b202),9)),6)];
                SetByte 001539 LoByte(Widen(b204));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b201,b202),9)),6) 87;
                TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                Let b205 = M[007908];
                Let b206 = M[007909];
                Let b207 = M[001493];
                if (IsZero(Widen(b207))) {
                  SetByte 001493 b206;
                  Let b208 = M[Offset(Offset(000751,Mul(MakeHiLo(b205,b206),9)),6)];
                  SetByte 001494 LoByte(Widen(b208));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b205,b206),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b209 = M[001507];
                  SetByte 001507 ClearBit(b209,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Let b210 = M[Offset(Offset(000751,Mul(Widen(b207),9)),6)];
                  if (Equal(Widen(b210),82)) {
                    Let b211 = M[001494];
                    SetByte Offset(Offset(000751,Mul(Widen(b207),9)),6) LoByte(Widen(b211));
                    SetByte 001493 b206;
                    Let b212 = M[Offset(Offset(000751,Mul(MakeHiLo(b205,b206),9)),6)];
                    SetByte 001494 LoByte(Widen(b212));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b205,b206),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b213 = M[001507];
                    SetByte 001507 ClearBit(b213,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b214 = M[Offset(Offset(000751,Mul(Widen(b203),9)),6)];
                if (Equal(Widen(b214),87)) {
                  Let b215 = M[001539];
                  SetByte Offset(Offset(000751,Mul(Widen(b203),9)),6) LoByte(Widen(b215));
                  SetByte 001538 b202;
                  Let b216 = M[Offset(Offset(000751,Mul(MakeHiLo(b201,b202),9)),6)];
                  SetByte 001539 LoByte(Widen(b216));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b201,b202),9)),6) 87;
                  TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                  Let b217 = M[007908];
                  Let b218 = M[007909];
                  Let b219 = M[001493];
                  if (IsZero(Widen(b219))) {
                    SetByte 001493 b218;
                    Let b220 = M[Offset(Offset(000751,Mul(MakeHiLo(b217,b218),9)),6)];
                    SetByte 001494 LoByte(Widen(b220));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b217,b218),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b221 = M[001507];
                    SetByte 001507 ClearBit(b221,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Let b222 = M[Offset(Offset(000751,Mul(Widen(b219),9)),6)];
                    if (Equal(Widen(b222),82)) {
                      Let b223 = M[001494];
                      SetByte Offset(Offset(000751,Mul(Widen(b219),9)),6) LoByte(Widen(b223));
                      SetByte 001493 b218;
                      Let b224 = M[Offset(Offset(000751,Mul(MakeHiLo(b217,b218),9)),6)];
                      SetByte 001494 LoByte(Widen(b224));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b217,b218),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b225 = M[001507];
                      SetByte 001507 ClearBit(b225,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b226 = M[Offset(Offset(000751,Mul(Widen(b199),9)),6)];
              if (Equal(Widen(b226),85)) {
                Let b227 = M[001521];
                SetByte Offset(Offset(000751,Mul(Widen(b199),9)),6) LoByte(Widen(b227));
                SetByte 001520 b198;
                Let b228 = M[Offset(Offset(000751,Mul(MakeHiLo(b197,b198),9)),6)];
                SetByte 001521 LoByte(Widen(b228));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b197,b198),9)),6) 85;
                TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
                Let b229 = M[007908];
                Let b230 = M[007909];
                Let b231 = M[001538];
                if (IsZero(Widen(b231))) {
                  SetByte 001538 b230;
                  Let b232 = M[Offset(Offset(000751,Mul(MakeHiLo(b229,b230),9)),6)];
                  SetByte 001539 LoByte(Widen(b232));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b229,b230),9)),6) 87;
                  TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                  Let b233 = M[007908];
                  Let b234 = M[007909];
                  Let b235 = M[001493];
                  if (IsZero(Widen(b235))) {
                    SetByte 001493 b234;
                    Let b236 = M[Offset(Offset(000751,Mul(MakeHiLo(b233,b234),9)),6)];
                    SetByte 001494 LoByte(Widen(b236));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b233,b234),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b237 = M[001507];
                    SetByte 001507 ClearBit(b237,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Let b238 = M[Offset(Offset(000751,Mul(Widen(b235),9)),6)];
                    if (Equal(Widen(b238),82)) {
                      Let b239 = M[001494];
                      SetByte Offset(Offset(000751,Mul(Widen(b235),9)),6) LoByte(Widen(b239));
                      SetByte 001493 b234;
                      Let b240 = M[Offset(Offset(000751,Mul(MakeHiLo(b233,b234),9)),6)];
                      SetByte 001494 LoByte(Widen(b240));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b233,b234),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b241 = M[001507];
                      SetByte 001507 ClearBit(b241,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b242 = M[Offset(Offset(000751,Mul(Widen(b231),9)),6)];
                  if (Equal(Widen(b242),87)) {
                    Let b243 = M[001539];
                    SetByte Offset(Offset(000751,Mul(Widen(b231),9)),6) LoByte(Widen(b243));
                    SetByte 001538 b230;
                    Let b244 = M[Offset(Offset(000751,Mul(MakeHiLo(b229,b230),9)),6)];
                    SetByte 001539 LoByte(Widen(b244));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b229,b230),9)),6) 87;
                    TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                    Let b245 = M[007908];
                    Let b246 = M[007909];
                    Let b247 = M[001493];
                    if (IsZero(Widen(b247))) {
                      SetByte 001493 b246;
                      Let b248 = M[Offset(Offset(000751,Mul(MakeHiLo(b245,b246),9)),6)];
                      SetByte 001494 LoByte(Widen(b248));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b245,b246),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b249 = M[001507];
                      SetByte 001507 ClearBit(b249,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Let b250 = M[Offset(Offset(000751,Mul(Widen(b247),9)),6)];
                      if (Equal(Widen(b250),82)) {
                        Let b251 = M[001494];
                        SetByte Offset(Offset(000751,Mul(Widen(b247),9)),6) LoByte(Widen(b251));
                        SetByte 001493 b246;
                        Let b252 = M[Offset(Offset(000751,Mul(MakeHiLo(b245,b246),9)),6)];
                        SetByte 001494 LoByte(Widen(b252));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b245,b246),9)),6) 82;
                        TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                        Let b253 = M[001507];
                        SetByte 001507 ClearBit(b253,4);
                        TraceOperation 043193 (Jump 043239);
                        Jump: 043239
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b254 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b254),15)) {
      Let b255 = M[000891];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b255));
      SetByte 000890 b2;
      Let b256 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 000891 LoByte(Widen(b256));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 15;
      TraceOperation 043175 (Insert_obj (Con 83) (Var (Global 0)));
      Let b257 = M[007908];
      Let b258 = M[007909];
      Let b259 = M[001502];
      if (IsZero(Widen(b259))) {
        SetByte 001502 b258;
        Let b260 = M[Offset(Offset(000751,Mul(MakeHiLo(b257,b258),9)),6)];
        SetByte 001503 LoByte(Widen(b260));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b257,b258),9)),6) 83;
        TraceOperation 043178 (Insert_obj (Con 84) (Var (Global 0)));
        Let b261 = M[007908];
        Let b262 = M[007909];
        Let b263 = M[001511];
        if (IsZero(Widen(b263))) {
          SetByte 001511 b262;
          Let b264 = M[Offset(Offset(000751,Mul(MakeHiLo(b261,b262),9)),6)];
          SetByte 001512 LoByte(Widen(b264));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b261,b262),9)),6) 84;
          TraceOperation 043181 (Insert_obj (Con 85) (Var (Global 0)));
          Let b265 = M[007908];
          Let b266 = M[007909];
          Let b267 = M[001520];
          if (IsZero(Widen(b267))) {
            SetByte 001520 b266;
            Let b268 = M[Offset(Offset(000751,Mul(MakeHiLo(b265,b266),9)),6)];
            SetByte 001521 LoByte(Widen(b268));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b265,b266),9)),6) 85;
            TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
            Let b269 = M[007908];
            Let b270 = M[007909];
            Let b271 = M[001538];
            if (IsZero(Widen(b271))) {
              SetByte 001538 b270;
              Let b272 = M[Offset(Offset(000751,Mul(MakeHiLo(b269,b270),9)),6)];
              SetByte 001539 LoByte(Widen(b272));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b269,b270),9)),6) 87;
              TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
              Let b273 = M[007908];
              Let b274 = M[007909];
              Let b275 = M[001493];
              if (IsZero(Widen(b275))) {
                SetByte 001493 b274;
                Let b276 = M[Offset(Offset(000751,Mul(MakeHiLo(b273,b274),9)),6)];
                SetByte 001494 LoByte(Widen(b276));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b273,b274),9)),6) 82;
                TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                Let b277 = M[001507];
                SetByte 001507 ClearBit(b277,4);
                TraceOperation 043193 (Jump 043239);
                Jump: 043239
              } else {
                Let b278 = M[Offset(Offset(000751,Mul(Widen(b275),9)),6)];
                if (Equal(Widen(b278),82)) {
                  Let b279 = M[001494];
                  SetByte Offset(Offset(000751,Mul(Widen(b275),9)),6) LoByte(Widen(b279));
                  SetByte 001493 b274;
                  Let b280 = M[Offset(Offset(000751,Mul(MakeHiLo(b273,b274),9)),6)];
                  SetByte 001494 LoByte(Widen(b280));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b273,b274),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b281 = M[001507];
                  SetByte 001507 ClearBit(b281,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b282 = M[Offset(Offset(000751,Mul(Widen(b271),9)),6)];
              if (Equal(Widen(b282),87)) {
                Let b283 = M[001539];
                SetByte Offset(Offset(000751,Mul(Widen(b271),9)),6) LoByte(Widen(b283));
                SetByte 001538 b270;
                Let b284 = M[Offset(Offset(000751,Mul(MakeHiLo(b269,b270),9)),6)];
                SetByte 001539 LoByte(Widen(b284));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b269,b270),9)),6) 87;
                TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                Let b285 = M[007908];
                Let b286 = M[007909];
                Let b287 = M[001493];
                if (IsZero(Widen(b287))) {
                  SetByte 001493 b286;
                  Let b288 = M[Offset(Offset(000751,Mul(MakeHiLo(b285,b286),9)),6)];
                  SetByte 001494 LoByte(Widen(b288));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b285,b286),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b289 = M[001507];
                  SetByte 001507 ClearBit(b289,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Let b290 = M[Offset(Offset(000751,Mul(Widen(b287),9)),6)];
                  if (Equal(Widen(b290),82)) {
                    Let b291 = M[001494];
                    SetByte Offset(Offset(000751,Mul(Widen(b287),9)),6) LoByte(Widen(b291));
                    SetByte 001493 b286;
                    Let b292 = M[Offset(Offset(000751,Mul(MakeHiLo(b285,b286),9)),6)];
                    SetByte 001494 LoByte(Widen(b292));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b285,b286),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b293 = M[001507];
                    SetByte 001507 ClearBit(b293,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b294 = M[Offset(Offset(000751,Mul(Widen(b267),9)),6)];
            if (Equal(Widen(b294),85)) {
              Let b295 = M[001521];
              SetByte Offset(Offset(000751,Mul(Widen(b267),9)),6) LoByte(Widen(b295));
              SetByte 001520 b266;
              Let b296 = M[Offset(Offset(000751,Mul(MakeHiLo(b265,b266),9)),6)];
              SetByte 001521 LoByte(Widen(b296));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b265,b266),9)),6) 85;
              TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
              Let b297 = M[007908];
              Let b298 = M[007909];
              Let b299 = M[001538];
              if (IsZero(Widen(b299))) {
                SetByte 001538 b298;
                Let b300 = M[Offset(Offset(000751,Mul(MakeHiLo(b297,b298),9)),6)];
                SetByte 001539 LoByte(Widen(b300));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b297,b298),9)),6) 87;
                TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                Let b301 = M[007908];
                Let b302 = M[007909];
                Let b303 = M[001493];
                if (IsZero(Widen(b303))) {
                  SetByte 001493 b302;
                  Let b304 = M[Offset(Offset(000751,Mul(MakeHiLo(b301,b302),9)),6)];
                  SetByte 001494 LoByte(Widen(b304));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b301,b302),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b305 = M[001507];
                  SetByte 001507 ClearBit(b305,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Let b306 = M[Offset(Offset(000751,Mul(Widen(b303),9)),6)];
                  if (Equal(Widen(b306),82)) {
                    Let b307 = M[001494];
                    SetByte Offset(Offset(000751,Mul(Widen(b303),9)),6) LoByte(Widen(b307));
                    SetByte 001493 b302;
                    Let b308 = M[Offset(Offset(000751,Mul(MakeHiLo(b301,b302),9)),6)];
                    SetByte 001494 LoByte(Widen(b308));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b301,b302),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b309 = M[001507];
                    SetByte 001507 ClearBit(b309,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b310 = M[Offset(Offset(000751,Mul(Widen(b299),9)),6)];
                if (Equal(Widen(b310),87)) {
                  Let b311 = M[001539];
                  SetByte Offset(Offset(000751,Mul(Widen(b299),9)),6) LoByte(Widen(b311));
                  SetByte 001538 b298;
                  Let b312 = M[Offset(Offset(000751,Mul(MakeHiLo(b297,b298),9)),6)];
                  SetByte 001539 LoByte(Widen(b312));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b297,b298),9)),6) 87;
                  TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                  Let b313 = M[007908];
                  Let b314 = M[007909];
                  Let b315 = M[001493];
                  if (IsZero(Widen(b315))) {
                    SetByte 001493 b314;
                    Let b316 = M[Offset(Offset(000751,Mul(MakeHiLo(b313,b314),9)),6)];
                    SetByte 001494 LoByte(Widen(b316));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b313,b314),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b317 = M[001507];
                    SetByte 001507 ClearBit(b317,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Let b318 = M[Offset(Offset(000751,Mul(Widen(b315),9)),6)];
                    if (Equal(Widen(b318),82)) {
                      Let b319 = M[001494];
                      SetByte Offset(Offset(000751,Mul(Widen(b315),9)),6) LoByte(Widen(b319));
                      SetByte 001493 b314;
                      Let b320 = M[Offset(Offset(000751,Mul(MakeHiLo(b313,b314),9)),6)];
                      SetByte 001494 LoByte(Widen(b320));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b313,b314),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b321 = M[001507];
                      SetByte 001507 ClearBit(b321,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b322 = M[Offset(Offset(000751,Mul(Widen(b263),9)),6)];
          if (Equal(Widen(b322),84)) {
            Let b323 = M[001512];
            SetByte Offset(Offset(000751,Mul(Widen(b263),9)),6) LoByte(Widen(b323));
            SetByte 001511 b262;
            Let b324 = M[Offset(Offset(000751,Mul(MakeHiLo(b261,b262),9)),6)];
            SetByte 001512 LoByte(Widen(b324));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b261,b262),9)),6) 84;
            TraceOperation 043181 (Insert_obj (Con 85) (Var (Global 0)));
            Let b325 = M[007908];
            Let b326 = M[007909];
            Let b327 = M[001520];
            if (IsZero(Widen(b327))) {
              SetByte 001520 b326;
              Let b328 = M[Offset(Offset(000751,Mul(MakeHiLo(b325,b326),9)),6)];
              SetByte 001521 LoByte(Widen(b328));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b325,b326),9)),6) 85;
              TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
              Let b329 = M[007908];
              Let b330 = M[007909];
              Let b331 = M[001538];
              if (IsZero(Widen(b331))) {
                SetByte 001538 b330;
                Let b332 = M[Offset(Offset(000751,Mul(MakeHiLo(b329,b330),9)),6)];
                SetByte 001539 LoByte(Widen(b332));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b329,b330),9)),6) 87;
                TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                Let b333 = M[007908];
                Let b334 = M[007909];
                Let b335 = M[001493];
                if (IsZero(Widen(b335))) {
                  SetByte 001493 b334;
                  Let b336 = M[Offset(Offset(000751,Mul(MakeHiLo(b333,b334),9)),6)];
                  SetByte 001494 LoByte(Widen(b336));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b333,b334),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b337 = M[001507];
                  SetByte 001507 ClearBit(b337,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Let b338 = M[Offset(Offset(000751,Mul(Widen(b335),9)),6)];
                  if (Equal(Widen(b338),82)) {
                    Let b339 = M[001494];
                    SetByte Offset(Offset(000751,Mul(Widen(b335),9)),6) LoByte(Widen(b339));
                    SetByte 001493 b334;
                    Let b340 = M[Offset(Offset(000751,Mul(MakeHiLo(b333,b334),9)),6)];
                    SetByte 001494 LoByte(Widen(b340));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b333,b334),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b341 = M[001507];
                    SetByte 001507 ClearBit(b341,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b342 = M[Offset(Offset(000751,Mul(Widen(b331),9)),6)];
                if (Equal(Widen(b342),87)) {
                  Let b343 = M[001539];
                  SetByte Offset(Offset(000751,Mul(Widen(b331),9)),6) LoByte(Widen(b343));
                  SetByte 001538 b330;
                  Let b344 = M[Offset(Offset(000751,Mul(MakeHiLo(b329,b330),9)),6)];
                  SetByte 001539 LoByte(Widen(b344));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b329,b330),9)),6) 87;
                  TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                  Let b345 = M[007908];
                  Let b346 = M[007909];
                  Let b347 = M[001493];
                  if (IsZero(Widen(b347))) {
                    SetByte 001493 b346;
                    Let b348 = M[Offset(Offset(000751,Mul(MakeHiLo(b345,b346),9)),6)];
                    SetByte 001494 LoByte(Widen(b348));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b345,b346),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b349 = M[001507];
                    SetByte 001507 ClearBit(b349,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Let b350 = M[Offset(Offset(000751,Mul(Widen(b347),9)),6)];
                    if (Equal(Widen(b350),82)) {
                      Let b351 = M[001494];
                      SetByte Offset(Offset(000751,Mul(Widen(b347),9)),6) LoByte(Widen(b351));
                      SetByte 001493 b346;
                      Let b352 = M[Offset(Offset(000751,Mul(MakeHiLo(b345,b346),9)),6)];
                      SetByte 001494 LoByte(Widen(b352));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b345,b346),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b353 = M[001507];
                      SetByte 001507 ClearBit(b353,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b354 = M[Offset(Offset(000751,Mul(Widen(b327),9)),6)];
              if (Equal(Widen(b354),85)) {
                Let b355 = M[001521];
                SetByte Offset(Offset(000751,Mul(Widen(b327),9)),6) LoByte(Widen(b355));
                SetByte 001520 b326;
                Let b356 = M[Offset(Offset(000751,Mul(MakeHiLo(b325,b326),9)),6)];
                SetByte 001521 LoByte(Widen(b356));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b325,b326),9)),6) 85;
                TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
                Let b357 = M[007908];
                Let b358 = M[007909];
                Let b359 = M[001538];
                if (IsZero(Widen(b359))) {
                  SetByte 001538 b358;
                  Let b360 = M[Offset(Offset(000751,Mul(MakeHiLo(b357,b358),9)),6)];
                  SetByte 001539 LoByte(Widen(b360));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b357,b358),9)),6) 87;
                  TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                  Let b361 = M[007908];
                  Let b362 = M[007909];
                  Let b363 = M[001493];
                  if (IsZero(Widen(b363))) {
                    SetByte 001493 b362;
                    Let b364 = M[Offset(Offset(000751,Mul(MakeHiLo(b361,b362),9)),6)];
                    SetByte 001494 LoByte(Widen(b364));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b361,b362),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b365 = M[001507];
                    SetByte 001507 ClearBit(b365,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Let b366 = M[Offset(Offset(000751,Mul(Widen(b363),9)),6)];
                    if (Equal(Widen(b366),82)) {
                      Let b367 = M[001494];
                      SetByte Offset(Offset(000751,Mul(Widen(b363),9)),6) LoByte(Widen(b367));
                      SetByte 001493 b362;
                      Let b368 = M[Offset(Offset(000751,Mul(MakeHiLo(b361,b362),9)),6)];
                      SetByte 001494 LoByte(Widen(b368));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b361,b362),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b369 = M[001507];
                      SetByte 001507 ClearBit(b369,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b370 = M[Offset(Offset(000751,Mul(Widen(b359),9)),6)];
                  if (Equal(Widen(b370),87)) {
                    Let b371 = M[001539];
                    SetByte Offset(Offset(000751,Mul(Widen(b359),9)),6) LoByte(Widen(b371));
                    SetByte 001538 b358;
                    Let b372 = M[Offset(Offset(000751,Mul(MakeHiLo(b357,b358),9)),6)];
                    SetByte 001539 LoByte(Widen(b372));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b357,b358),9)),6) 87;
                    TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                    Let b373 = M[007908];
                    Let b374 = M[007909];
                    Let b375 = M[001493];
                    if (IsZero(Widen(b375))) {
                      SetByte 001493 b374;
                      Let b376 = M[Offset(Offset(000751,Mul(MakeHiLo(b373,b374),9)),6)];
                      SetByte 001494 LoByte(Widen(b376));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b373,b374),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b377 = M[001507];
                      SetByte 001507 ClearBit(b377,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Let b378 = M[Offset(Offset(000751,Mul(Widen(b375),9)),6)];
                      if (Equal(Widen(b378),82)) {
                        Let b379 = M[001494];
                        SetByte Offset(Offset(000751,Mul(Widen(b375),9)),6) LoByte(Widen(b379));
                        SetByte 001493 b374;
                        Let b380 = M[Offset(Offset(000751,Mul(MakeHiLo(b373,b374),9)),6)];
                        SetByte 001494 LoByte(Widen(b380));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b373,b374),9)),6) 82;
                        TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                        Let b381 = M[001507];
                        SetByte 001507 ClearBit(b381,4);
                        TraceOperation 043193 (Jump 043239);
                        Jump: 043239
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b382 = M[Offset(Offset(000751,Mul(Widen(b259),9)),6)];
        if (Equal(Widen(b382),83)) {
          Let b383 = M[001503];
          SetByte Offset(Offset(000751,Mul(Widen(b259),9)),6) LoByte(Widen(b383));
          SetByte 001502 b258;
          Let b384 = M[Offset(Offset(000751,Mul(MakeHiLo(b257,b258),9)),6)];
          SetByte 001503 LoByte(Widen(b384));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b257,b258),9)),6) 83;
          TraceOperation 043178 (Insert_obj (Con 84) (Var (Global 0)));
          Let b385 = M[007908];
          Let b386 = M[007909];
          Let b387 = M[001511];
          if (IsZero(Widen(b387))) {
            SetByte 001511 b386;
            Let b388 = M[Offset(Offset(000751,Mul(MakeHiLo(b385,b386),9)),6)];
            SetByte 001512 LoByte(Widen(b388));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b385,b386),9)),6) 84;
            TraceOperation 043181 (Insert_obj (Con 85) (Var (Global 0)));
            Let b389 = M[007908];
            Let b390 = M[007909];
            Let b391 = M[001520];
            if (IsZero(Widen(b391))) {
              SetByte 001520 b390;
              Let b392 = M[Offset(Offset(000751,Mul(MakeHiLo(b389,b390),9)),6)];
              SetByte 001521 LoByte(Widen(b392));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b389,b390),9)),6) 85;
              TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
              Let b393 = M[007908];
              Let b394 = M[007909];
              Let b395 = M[001538];
              if (IsZero(Widen(b395))) {
                SetByte 001538 b394;
                Let b396 = M[Offset(Offset(000751,Mul(MakeHiLo(b393,b394),9)),6)];
                SetByte 001539 LoByte(Widen(b396));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b393,b394),9)),6) 87;
                TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                Let b397 = M[007908];
                Let b398 = M[007909];
                Let b399 = M[001493];
                if (IsZero(Widen(b399))) {
                  SetByte 001493 b398;
                  Let b400 = M[Offset(Offset(000751,Mul(MakeHiLo(b397,b398),9)),6)];
                  SetByte 001494 LoByte(Widen(b400));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b397,b398),9)),6) 82;
                  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                  Let b401 = M[001507];
                  SetByte 001507 ClearBit(b401,4);
                  TraceOperation 043193 (Jump 043239);
                  Jump: 043239
                } else {
                  Let b402 = M[Offset(Offset(000751,Mul(Widen(b399),9)),6)];
                  if (Equal(Widen(b402),82)) {
                    Let b403 = M[001494];
                    SetByte Offset(Offset(000751,Mul(Widen(b399),9)),6) LoByte(Widen(b403));
                    SetByte 001493 b398;
                    Let b404 = M[Offset(Offset(000751,Mul(MakeHiLo(b397,b398),9)),6)];
                    SetByte 001494 LoByte(Widen(b404));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b397,b398),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b405 = M[001507];
                    SetByte 001507 ClearBit(b405,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b406 = M[Offset(Offset(000751,Mul(Widen(b395),9)),6)];
                if (Equal(Widen(b406),87)) {
                  Let b407 = M[001539];
                  SetByte Offset(Offset(000751,Mul(Widen(b395),9)),6) LoByte(Widen(b407));
                  SetByte 001538 b394;
                  Let b408 = M[Offset(Offset(000751,Mul(MakeHiLo(b393,b394),9)),6)];
                  SetByte 001539 LoByte(Widen(b408));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b393,b394),9)),6) 87;
                  TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                  Let b409 = M[007908];
                  Let b410 = M[007909];
                  Let b411 = M[001493];
                  if (IsZero(Widen(b411))) {
                    SetByte 001493 b410;
                    Let b412 = M[Offset(Offset(000751,Mul(MakeHiLo(b409,b410),9)),6)];
                    SetByte 001494 LoByte(Widen(b412));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b409,b410),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b413 = M[001507];
                    SetByte 001507 ClearBit(b413,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Let b414 = M[Offset(Offset(000751,Mul(Widen(b411),9)),6)];
                    if (Equal(Widen(b414),82)) {
                      Let b415 = M[001494];
                      SetByte Offset(Offset(000751,Mul(Widen(b411),9)),6) LoByte(Widen(b415));
                      SetByte 001493 b410;
                      Let b416 = M[Offset(Offset(000751,Mul(MakeHiLo(b409,b410),9)),6)];
                      SetByte 001494 LoByte(Widen(b416));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b409,b410),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b417 = M[001507];
                      SetByte 001507 ClearBit(b417,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b418 = M[Offset(Offset(000751,Mul(Widen(b391),9)),6)];
              if (Equal(Widen(b418),85)) {
                Let b419 = M[001521];
                SetByte Offset(Offset(000751,Mul(Widen(b391),9)),6) LoByte(Widen(b419));
                SetByte 001520 b390;
                Let b420 = M[Offset(Offset(000751,Mul(MakeHiLo(b389,b390),9)),6)];
                SetByte 001521 LoByte(Widen(b420));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b389,b390),9)),6) 85;
                TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
                Let b421 = M[007908];
                Let b422 = M[007909];
                Let b423 = M[001538];
                if (IsZero(Widen(b423))) {
                  SetByte 001538 b422;
                  Let b424 = M[Offset(Offset(000751,Mul(MakeHiLo(b421,b422),9)),6)];
                  SetByte 001539 LoByte(Widen(b424));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b421,b422),9)),6) 87;
                  TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                  Let b425 = M[007908];
                  Let b426 = M[007909];
                  Let b427 = M[001493];
                  if (IsZero(Widen(b427))) {
                    SetByte 001493 b426;
                    Let b428 = M[Offset(Offset(000751,Mul(MakeHiLo(b425,b426),9)),6)];
                    SetByte 001494 LoByte(Widen(b428));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b425,b426),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b429 = M[001507];
                    SetByte 001507 ClearBit(b429,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Let b430 = M[Offset(Offset(000751,Mul(Widen(b427),9)),6)];
                    if (Equal(Widen(b430),82)) {
                      Let b431 = M[001494];
                      SetByte Offset(Offset(000751,Mul(Widen(b427),9)),6) LoByte(Widen(b431));
                      SetByte 001493 b426;
                      Let b432 = M[Offset(Offset(000751,Mul(MakeHiLo(b425,b426),9)),6)];
                      SetByte 001494 LoByte(Widen(b432));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b425,b426),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b433 = M[001507];
                      SetByte 001507 ClearBit(b433,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b434 = M[Offset(Offset(000751,Mul(Widen(b423),9)),6)];
                  if (Equal(Widen(b434),87)) {
                    Let b435 = M[001539];
                    SetByte Offset(Offset(000751,Mul(Widen(b423),9)),6) LoByte(Widen(b435));
                    SetByte 001538 b422;
                    Let b436 = M[Offset(Offset(000751,Mul(MakeHiLo(b421,b422),9)),6)];
                    SetByte 001539 LoByte(Widen(b436));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b421,b422),9)),6) 87;
                    TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                    Let b437 = M[007908];
                    Let b438 = M[007909];
                    Let b439 = M[001493];
                    if (IsZero(Widen(b439))) {
                      SetByte 001493 b438;
                      Let b440 = M[Offset(Offset(000751,Mul(MakeHiLo(b437,b438),9)),6)];
                      SetByte 001494 LoByte(Widen(b440));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b437,b438),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b441 = M[001507];
                      SetByte 001507 ClearBit(b441,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Let b442 = M[Offset(Offset(000751,Mul(Widen(b439),9)),6)];
                      if (Equal(Widen(b442),82)) {
                        Let b443 = M[001494];
                        SetByte Offset(Offset(000751,Mul(Widen(b439),9)),6) LoByte(Widen(b443));
                        SetByte 001493 b438;
                        Let b444 = M[Offset(Offset(000751,Mul(MakeHiLo(b437,b438),9)),6)];
                        SetByte 001494 LoByte(Widen(b444));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b437,b438),9)),6) 82;
                        TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                        Let b445 = M[001507];
                        SetByte 001507 ClearBit(b445,4);
                        TraceOperation 043193 (Jump 043239);
                        Jump: 043239
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b446 = M[Offset(Offset(000751,Mul(Widen(b387),9)),6)];
            if (Equal(Widen(b446),84)) {
              Let b447 = M[001512];
              SetByte Offset(Offset(000751,Mul(Widen(b387),9)),6) LoByte(Widen(b447));
              SetByte 001511 b386;
              Let b448 = M[Offset(Offset(000751,Mul(MakeHiLo(b385,b386),9)),6)];
              SetByte 001512 LoByte(Widen(b448));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b385,b386),9)),6) 84;
              TraceOperation 043181 (Insert_obj (Con 85) (Var (Global 0)));
              Let b449 = M[007908];
              Let b450 = M[007909];
              Let b451 = M[001520];
              if (IsZero(Widen(b451))) {
                SetByte 001520 b450;
                Let b452 = M[Offset(Offset(000751,Mul(MakeHiLo(b449,b450),9)),6)];
                SetByte 001521 LoByte(Widen(b452));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b449,b450),9)),6) 85;
                TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
                Let b453 = M[007908];
                Let b454 = M[007909];
                Let b455 = M[001538];
                if (IsZero(Widen(b455))) {
                  SetByte 001538 b454;
                  Let b456 = M[Offset(Offset(000751,Mul(MakeHiLo(b453,b454),9)),6)];
                  SetByte 001539 LoByte(Widen(b456));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b453,b454),9)),6) 87;
                  TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                  Let b457 = M[007908];
                  Let b458 = M[007909];
                  Let b459 = M[001493];
                  if (IsZero(Widen(b459))) {
                    SetByte 001493 b458;
                    Let b460 = M[Offset(Offset(000751,Mul(MakeHiLo(b457,b458),9)),6)];
                    SetByte 001494 LoByte(Widen(b460));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b457,b458),9)),6) 82;
                    TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                    Let b461 = M[001507];
                    SetByte 001507 ClearBit(b461,4);
                    TraceOperation 043193 (Jump 043239);
                    Jump: 043239
                  } else {
                    Let b462 = M[Offset(Offset(000751,Mul(Widen(b459),9)),6)];
                    if (Equal(Widen(b462),82)) {
                      Let b463 = M[001494];
                      SetByte Offset(Offset(000751,Mul(Widen(b459),9)),6) LoByte(Widen(b463));
                      SetByte 001493 b458;
                      Let b464 = M[Offset(Offset(000751,Mul(MakeHiLo(b457,b458),9)),6)];
                      SetByte 001494 LoByte(Widen(b464));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b457,b458),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b465 = M[001507];
                      SetByte 001507 ClearBit(b465,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b466 = M[Offset(Offset(000751,Mul(Widen(b455),9)),6)];
                  if (Equal(Widen(b466),87)) {
                    Let b467 = M[001539];
                    SetByte Offset(Offset(000751,Mul(Widen(b455),9)),6) LoByte(Widen(b467));
                    SetByte 001538 b454;
                    Let b468 = M[Offset(Offset(000751,Mul(MakeHiLo(b453,b454),9)),6)];
                    SetByte 001539 LoByte(Widen(b468));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b453,b454),9)),6) 87;
                    TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                    Let b469 = M[007908];
                    Let b470 = M[007909];
                    Let b471 = M[001493];
                    if (IsZero(Widen(b471))) {
                      SetByte 001493 b470;
                      Let b472 = M[Offset(Offset(000751,Mul(MakeHiLo(b469,b470),9)),6)];
                      SetByte 001494 LoByte(Widen(b472));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b469,b470),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b473 = M[001507];
                      SetByte 001507 ClearBit(b473,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Let b474 = M[Offset(Offset(000751,Mul(Widen(b471),9)),6)];
                      if (Equal(Widen(b474),82)) {
                        Let b475 = M[001494];
                        SetByte Offset(Offset(000751,Mul(Widen(b471),9)),6) LoByte(Widen(b475));
                        SetByte 001493 b470;
                        Let b476 = M[Offset(Offset(000751,Mul(MakeHiLo(b469,b470),9)),6)];
                        SetByte 001494 LoByte(Widen(b476));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b469,b470),9)),6) 82;
                        TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                        Let b477 = M[001507];
                        SetByte 001507 ClearBit(b477,4);
                        TraceOperation 043193 (Jump 043239);
                        Jump: 043239
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b478 = M[Offset(Offset(000751,Mul(Widen(b451),9)),6)];
                if (Equal(Widen(b478),85)) {
                  Let b479 = M[001521];
                  SetByte Offset(Offset(000751,Mul(Widen(b451),9)),6) LoByte(Widen(b479));
                  SetByte 001520 b450;
                  Let b480 = M[Offset(Offset(000751,Mul(MakeHiLo(b449,b450),9)),6)];
                  SetByte 001521 LoByte(Widen(b480));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b449,b450),9)),6) 85;
                  TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
                  Let b481 = M[007908];
                  Let b482 = M[007909];
                  Let b483 = M[001538];
                  if (IsZero(Widen(b483))) {
                    SetByte 001538 b482;
                    Let b484 = M[Offset(Offset(000751,Mul(MakeHiLo(b481,b482),9)),6)];
                    SetByte 001539 LoByte(Widen(b484));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b481,b482),9)),6) 87;
                    TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                    Let b485 = M[007908];
                    Let b486 = M[007909];
                    Let b487 = M[001493];
                    if (IsZero(Widen(b487))) {
                      SetByte 001493 b486;
                      Let b488 = M[Offset(Offset(000751,Mul(MakeHiLo(b485,b486),9)),6)];
                      SetByte 001494 LoByte(Widen(b488));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b485,b486),9)),6) 82;
                      TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                      Let b489 = M[001507];
                      SetByte 001507 ClearBit(b489,4);
                      TraceOperation 043193 (Jump 043239);
                      Jump: 043239
                    } else {
                      Let b490 = M[Offset(Offset(000751,Mul(Widen(b487),9)),6)];
                      if (Equal(Widen(b490),82)) {
                        Let b491 = M[001494];
                        SetByte Offset(Offset(000751,Mul(Widen(b487),9)),6) LoByte(Widen(b491));
                        SetByte 001493 b486;
                        Let b492 = M[Offset(Offset(000751,Mul(MakeHiLo(b485,b486),9)),6)];
                        SetByte 001494 LoByte(Widen(b492));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b485,b486),9)),6) 82;
                        TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                        Let b493 = M[001507];
                        SetByte 001507 ClearBit(b493,4);
                        TraceOperation 043193 (Jump 043239);
                        Jump: 043239
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b494 = M[Offset(Offset(000751,Mul(Widen(b483),9)),6)];
                    if (Equal(Widen(b494),87)) {
                      Let b495 = M[001539];
                      SetByte Offset(Offset(000751,Mul(Widen(b483),9)),6) LoByte(Widen(b495));
                      SetByte 001538 b482;
                      Let b496 = M[Offset(Offset(000751,Mul(MakeHiLo(b481,b482),9)),6)];
                      SetByte 001539 LoByte(Widen(b496));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b481,b482),9)),6) 87;
                      TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
                      Let b497 = M[007908];
                      Let b498 = M[007909];
                      Let b499 = M[001493];
                      if (IsZero(Widen(b499))) {
                        SetByte 001493 b498;
                        Let b500 = M[Offset(Offset(000751,Mul(MakeHiLo(b497,b498),9)),6)];
                        SetByte 001494 LoByte(Widen(b500));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b497,b498),9)),6) 82;
                        TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                        Let b501 = M[001507];
                        SetByte 001507 ClearBit(b501,4);
                        TraceOperation 043193 (Jump 043239);
                        Jump: 043239
                      } else {
                        Let b502 = M[Offset(Offset(000751,Mul(Widen(b499),9)),6)];
                        if (Equal(Widen(b502),82)) {
                          Let b503 = M[001494];
                          SetByte Offset(Offset(000751,Mul(Widen(b499),9)),6) LoByte(Widen(b503));
                          SetByte 001493 b498;
                          Let b504 = M[Offset(Offset(000751,Mul(MakeHiLo(b497,b498),9)),6)];
                          SetByte 001494 LoByte(Widen(b504));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b497,b498),9)),6) 82;
                          TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
                          Let b505 = M[001507];
                          SetByte 001507 ClearBit(b505,4);
                          TraceOperation 043193 (Jump 043239);
                          Jump: 043239
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 043196:
  TraceOperation 043196 (Je [Var (Global 0),Con 99,Con 90,Con 98] (Branch F (Dloc 043239)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),99),Equal(MakeHiLo(b1,b2),90)),Equal(MakeHiLo(b1,b2),98))) {
    TraceOperation 043203 (Clear_attr (Con 95) (Con 3));
    Let b3 = M[001606];
    SetByte 001606 ClearBit(b3,4);
    TraceOperation 043206 (Store (Con 117) (Con 0));
    SetByte 008110 0;
    SetByte 008111 0;
    TraceOperation 043209 (Store (Con 118) (Con 0));
    SetByte 008112 0;
    SetByte 008113 0;
    TraceOperation 043212 (Store (Con 119) (Con 0));
    SetByte 008114 0;
    SetByte 008115 0;
    TraceOperation 043215 (Clear_attr (Con 139) (Con 9));
    Let b4 = M[002003];
    SetByte 002003 ClearBit(b4,6);
    TraceOperation 043218 (Clear_attr (Con 99) (Con 27));
    Let b5 = M[001645];
    SetByte 001645 ClearBit(b5,4);
    TraceOperation 043221 (Insert_obj (Con 96) (Con 98));
    Let b6 = M[001619];
    if (IsZero(Widen(b6))) {
      SetByte 001619 98;
      Let b7 = M[001639];
      SetByte 001620 LoByte(Widen(b7));
      SetByte 001639 96;
      TraceOperation 043224 (Insert_obj (Con 95) (Con 99));
      Let b8 = M[001610];
      if (IsZero(Widen(b8))) {
        SetByte 001610 99;
        Let b9 = M[001648];
        SetByte 001611 LoByte(Widen(b9));
        SetByte 001648 95;
        TraceOperation 043227 (Call (Floc 022340) [Con -22735] Sp);
        PushFrame 043227;
        SetLocal 1 -22735;
        JumpCall: 022340, #actuals: 1
      } else {
        Let b10 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
        if (Equal(Widen(b10),95)) {
          Let b11 = M[001611];
          SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b11));
          SetByte 001610 99;
          Let b12 = M[001648];
          SetByte 001611 LoByte(Widen(b12));
          SetByte 001648 95;
          TraceOperation 043227 (Call (Floc 022340) [Con -22735] Sp);
          PushFrame 043227;
          SetLocal 1 -22735;
          JumpCall: 022340, #actuals: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b13 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
      if (Equal(Widen(b13),96)) {
        Let b14 = M[001620];
        SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b14));
        SetByte 001619 98;
        Let b15 = M[001639];
        SetByte 001620 LoByte(Widen(b15));
        SetByte 001639 96;
        TraceOperation 043224 (Insert_obj (Con 95) (Con 99));
        Let b16 = M[001610];
        if (IsZero(Widen(b16))) {
          SetByte 001610 99;
          Let b17 = M[001648];
          SetByte 001611 LoByte(Widen(b17));
          SetByte 001648 95;
          TraceOperation 043227 (Call (Floc 022340) [Con -22735] Sp);
          PushFrame 043227;
          SetLocal 1 -22735;
          JumpCall: 022340, #actuals: 1
        } else {
          Let b18 = M[Offset(Offset(000751,Mul(Widen(b16),9)),6)];
          if (Equal(Widen(b18),95)) {
            Let b19 = M[001611];
            SetByte Offset(Offset(000751,Mul(Widen(b16),9)),6) LoByte(Widen(b19));
            SetByte 001610 99;
            Let b20 = M[001648];
            SetByte 001611 LoByte(Widen(b20));
            SetByte 001648 95;
            TraceOperation 043227 (Call (Floc 022340) [Con -22735] Sp);
            PushFrame 043227;
            SetLocal 1 -22735;
            JumpCall: 022340, #actuals: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 043239
  }
LocReturn 043227:
  PushStack call_result;
  TraceOperation 043234 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  Jump: 043239
LocOp 043239:
  TraceOperation 043239 (Store (Con 231) (Con 0));
  SetByte 008338 0;
  SetByte 008339 0;
  TraceOperation 043242 (Insert_obj (Con 187) (Con 169));
  Let b1 = M[002438];
  if (IsZero(Widen(b1))) {
    SetByte 002438 169;
    Let b2 = M[002278];
    SetByte 002439 LoByte(Widen(b2));
    SetByte 002278 187;
    TraceOperation 043245 (Store (Con 98) (Con 100));
    SetByte 008072 0;
    SetByte 008073 100;
    TraceOperation 043248 (Call (Floc 042574) [Con 25] Sp);
    PushFrame 043248;
    SetLocal 1 25;
    JumpCall: 042574, #actuals: 1
  } else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b3),187)) {
      Let b4 = M[002439];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b4));
      SetByte 002438 169;
      Let b5 = M[002278];
      SetByte 002439 LoByte(Widen(b5));
      SetByte 002278 187;
      TraceOperation 043245 (Store (Con 98) (Con 100));
      SetByte 008072 0;
      SetByte 008073 100;
      TraceOperation 043248 (Call (Floc 042574) [Con 25] Sp);
      PushFrame 043248;
      SetLocal 1 25;
      JumpCall: 042574, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 043248:
  PushStack call_result;
  TraceOperation 043254 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 043255:
  TraceOperation 043255 New_line;
  GamePrint "\n";
  TraceOperation 043256 New_line;
  GamePrint "\n";
  TraceOperation 043257 (Print "    ****  You have died  ****");
  GamePrint "    ****  You have died  ****";
  TraceOperation 043290 New_line;
  GamePrint "\n";
  TraceOperation 043291 New_line;
  GamePrint "\n";
  TraceOperation 043292 (Call (Floc 028948) [] Sp);
  PushFrame 043292;
  JumpCall: 028948, #actuals: 0
LocReturn 043292:
  PushStack call_result;
  TraceOperation 043297 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[299]--------------------------------------------------
LocRoutine 043298:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 043303
LocOp 043303:
  TraceOperation 043303 (Get_parent (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),4)];
  SetLocal 2 Widen(b1);
  TraceOperation 043306 (Test_attr (Var (Local 1)) (Con 6) (Branch T Dfalse));
  Let b2 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),0)];
  if (TestBit(b2,1)) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 043310 (Je [Var (Local 1),Con 48] (Branch F (Dloc 043319)));
    if (Equal(GetLocal(1),48)) {
      TraceOperation 043314 (Je [Var (Global 190),Var (Global 0)] (Branch F Dfalse));
      Let b4 = M[008288];
      Let b5 = M[008289];
      Let b6 = M[007908];
      Let b7 = M[007909];
      if (Equal(MakeHiLo(b4,b5),MakeHiLo(b6,b7))) {
        TraceOperation 043318 Rtrue;
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 0
      }
    } else {
      Jump: 043319
    }
  }
LocOp 043319:
  TraceOperation 043319 (Jz (Var (Local 2)) (Branch T Dfalse));
  if (IsZero(GetLocal(2))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 043322 (Je [Var (Local 2),Con 169] (Branch T Dtrue));
    if (Equal(GetLocal(2),169)) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 1
    } else {
      TraceOperation 043326 (Je [Var (Local 2),Con 219] (Branch F (Dloc 043340)));
      if (Equal(GetLocal(2),219)) {
        TraceOperation 043330 (Call (Floc 043522) [Var (Local 1),Var (Global 0)] Sp);
        Let b3 = M[007908];
        Let b4 = M[007909];
        PushFrame 043330;
        SetLocal 1 GetLocal(1);
        SetLocal 2 MakeHiLo(b3,b4);
        JumpCall: 043522, #actuals: 2
      } else {
        Jump: 043340
      }
    }
  }
LocReturn 043330:
  PushStack call_result;
  TraceOperation 043337 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 043340
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 043340:
  TraceOperation 043340 (Call (Floc 043406) [Var (Local 1)] Sp);
  PushFrame 043340;
  SetLocal 1 GetLocal(1);
  JumpCall: 043406, #actuals: 1
LocReturn 043340:
  PushStack call_result;
  TraceOperation 043346 (Je [Var Sp,Var (Global 0)] (Branch F Dfalse));
  PopStack popped1;
  Let b2 = M[007908];
  Let b3 = M[007909];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    TraceOperation 043350 (Je [Var (Local 2),Var (Global 195),Var (Global 0)] (Branch T Dtrue));
    Let b4 = M[008298];
    Let b5 = M[008299];
    Let b6 = M[007908];
    Let b7 = M[007909];
    if (LogOr(Equal(GetLocal(2),MakeHiLo(b4,b5)),Equal(GetLocal(2),MakeHiLo(b6,b7)))) {
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      TraceOperation 043356 (Test_attr (Var (Local 2)) (Con 23) (Branch F Dfalse));
      Let b9 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),2)];
      if (TestBit(b9,0)) {
        TraceOperation 043360 (Call (Floc 043298) [Var (Local 2)] Sp);
        PushFrame 043360;
        SetLocal 1 GetLocal(2);
        JumpCall: 043298, #actuals: 1
      } else {
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 0
      }
    }
  } else {
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 0
  }
LocReturn 043360:
  PushStack call_result;
  TraceOperation 043366 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 043369 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[300]--------------------------------------------------
LocRoutine 043370:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 043375
LocOp 043375:
  TraceOperation 043375 (Get_parent (Var (Local 1)) (Local 2));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),4)];
  SetLocal 2 Widen(b1);
  TraceOperation 043378 (Call (Floc 043298) [Var (Local 1)] Sp);
  PushFrame 043378;
  SetLocal 1 GetLocal(1);
  JumpCall: 043298, #actuals: 1
LocReturn 043378:
  PushStack call_result;
  TraceOperation 043384 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 043387 (Call (Floc 043506) [Var (Local 2)] Sp);
    PushFrame 043387;
    SetLocal 1 GetLocal(2);
    JumpCall: 043506, #actuals: 1
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocReturn 043387:
  PushStack call_result;
  TraceOperation 043393 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 043396 (Call (Floc 043370) [Var (Local 2)] Sp);
    PushFrame 043396;
    SetLocal 1 GetLocal(2);
    JumpCall: 043370, #actuals: 1
  }
LocReturn 043396:
  PushStack call_result;
  TraceOperation 043402 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 043405 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[301]--------------------------------------------------
LocRoutine 043406:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 043409
LocOp 043409:
  TraceOperation 043409 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 043412 (Jin (Var (Local 1)) (Con 169) (Branch F (Dloc 043418)));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),4)];
    if (Equal(169,Widen(b2))) {
      TraceOperation 043416 (Ret (Con 169));
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 169
    } else {
      Jump: 043418
    }
  }
--[302]--------------------------------------------------
LocRoutine 043430:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 043437
LocOp 043437:
  TraceOperation 043437 (Get_next_prop (Var (Global 0)) (Var (Local 2)) (Local 2));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
--[303]--------------------------------------------------
LocRoutine 043468:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 043473
LocOp 043473:
  TraceOperation 043473 (Jz (Var (Local 2)) (Branch F (Dloc 043479)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 043476 (Store (Con 2) (Var (Global 195)));
    Let b1 = M[008298];
    Let b2 = M[008299];
    SetLocal 2 MakeHiLo(b1,b2);
    Jump: 043479
  } else {
    Jump: 043479
  }
LocOp 043479:
  TraceOperation 043479 (Jz (Var (Local 1)) (Branch T Dfalse));
  if (IsZero(GetLocal(1))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 043482 (Jin (Var (Local 1)) (Var (Local 2)) (Branch T Dtrue));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),4)];
    if (Equal(GetLocal(2),Widen(b2))) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    } else {
      TraceOperation 043486 (Jin (Var (Local 1)) (Con 217) (Branch T Dfalse));
      Let b4 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),4)];
      if (Equal(217,Widen(b4))) {
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 0
      } else {
        TraceOperation 043490 (Jin (Var (Local 1)) (Con 169) (Branch T Dfalse));
        Let b6 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),4)];
        if (Equal(169,Widen(b6))) {
          PopFrame return_address_7;
          JumpReturn: return_address_7, result: 0
        } else {
          TraceOperation 043494 (Get_parent (Var (Local 1)) Sp);
          Let b8 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),4)];
          PushStack Widen(b8);
          TraceOperation 043497 (Call (Floc 043468) [Var Sp,Var (Local 2)] Sp);
          PopStack popped9;
          PushFrame 043497;
          SetLocal 1 popped9;
          SetLocal 2 GetLocal(2);
          JumpCall: 043468, #actuals: 2
        }
      }
    }
  }
LocReturn 043497:
  PushStack call_result;
  TraceOperation 043504 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[304]--------------------------------------------------
LocRoutine 043506:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 043509
LocOp 043509:
  TraceOperation 043509 (Test_attr (Var (Local 1)) (Con 6) (Branch T Dfalse));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),0)];
  if (TestBit(b1,1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 043513 (Test_attr (Var (Local 1)) (Con 17) (Branch T Dtrue));
    Let b3 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),2)];
    if (TestBit(b3,6)) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      TraceOperation 043517 (Test_attr (Var (Local 1)) (Con 23) (Branch T Dtrue));
      Let b5 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),2)];
      if (TestBit(b5,0)) {
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      } else {
        TraceOperation 043521 Rfalse;
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      }
    }
  }
--[305]--------------------------------------------------
LocRoutine 043522:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 043529
LocOp 043529:
  TraceOperation 043529 (Get_prop_addr (Var (Local 2)) (Con 24) (Local 3));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(2),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 043543:
  PushStack call_result;
  TraceOperation 043551 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[306]--------------------------------------------------
LocRoutine 043552:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 043559
LocOp 043559:
  TraceOperation 043559 (Get_child (Var (Local 1)) (Local 3) (Branch T (Dloc 043563)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 043563 (Jz (Var (Local 3)) (Branch T Dfalse));
    if (IsZero(GetLocal(3))) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 0
    } else {
      TraceOperation 043566 (Test_attr (Var (Local 3)) (Var (Local 2)) (Branch F (Dloc 043572)));
      Let b3 = M[Offset(Offset(000751,Mul(GetLocal(3),9)),Div8(GetLocal(2)))];
      if (TestBit(b3,SevenMinus(LoByte(Mod(GetLocal(2),8))))) {
        TraceOperation 043570 (Ret (Var (Local 3)));
        PopFrame return_address_4;
        JumpReturn: return_address_4, result: GetLocal(3)
      } else {
        Jump: 043572
      }
    }
  } else {
    TraceOperation 043563 (Jz (Var (Local 3)) (Branch T Dfalse));
    if (IsZero(GetLocal(3))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 043566 (Test_attr (Var (Local 3)) (Var (Local 2)) (Branch F (Dloc 043572)));
      Let b6 = M[Offset(Offset(000751,Mul(GetLocal(3),9)),Div8(GetLocal(2)))];
      if (TestBit(b6,SevenMinus(LoByte(Mod(GetLocal(2),8))))) {
        TraceOperation 043570 (Ret (Var (Local 3)));
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: GetLocal(3)
      } else {
        Jump: 043572
      }
    }
  }
LocOp 043572:
  TraceOperation 043572 (Get_sibling (Var (Local 3)) (Local 3) (Branch T (Dloc 043566)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(3),9)),5)];
  SetLocal 3 Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 043577 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 043566 (Test_attr (Var (Local 3)) (Var (Local 2)) (Branch F (Dloc 043572)));
    Let b3 = M[Offset(Offset(000751,Mul(GetLocal(3),9)),Div8(GetLocal(2)))];
    if (TestBit(b3,SevenMinus(LoByte(Mod(GetLocal(2),8))))) {
      TraceOperation 043570 (Ret (Var (Local 3)));
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: GetLocal(3)
    } else {
      Jump: 043572
    }
  }
--[307]--------------------------------------------------
LocRoutine 043578:
  MakeRoutineFrame 0;
  Jump: 043579
LocOp 043579:
  TraceOperation 043579 (Get_parent (Var (Global 201)) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 043582 (Test_attr (Var Sp) (Con 24) (Branch F Dfalse));
  PopStack popped4;
  Let b5 = M[Offset(Offset(000751,Mul(popped4,9)),3)];
  if (TestBit(b5,7)) {
    TraceOperation 043586 (Get_parent (Var (Global 201)) Sp);
    Let b6 = M[008310];
    Let b7 = M[008311];
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),4)];
    PushStack Widen(b8);
    TraceOperation 043589 (Test_attr (Var Sp) (Con 23) (Branch T Dfalse));
    PopStack popped9;
    Let b10 = M[Offset(Offset(000751,Mul(popped9,9)),2)];
    if (TestBit(b10,0)) {
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 0
    } else {
      TraceOperation 043593 (Test_attr (Var (Global 201)) (Con 25) (Branch F Dfalse));
      Let b12 = M[008310];
      Let b13 = M[008311];
      Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),3)];
      if (TestBit(b14,6)) {
        TraceOperation 043597 (Print "But");
        GamePrint "But";
        TraceOperation 043602 (Get_parent (Var (Global 201)) Sp);
        Let b15 = M[008310];
        Let b16 = M[008311];
        Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),4)];
        PushStack Widen(b17);
        TraceOperation 043605 (Call (Floc 043738) [Var Sp,Con 1] Sp);
        PopStack popped18;
        PushFrame 043605;
        SetLocal 1 popped18;
        SetLocal 2 1;
        JumpCall: 043738, #actuals: 2
      } else {
        PopFrame return_address_19;
        JumpReturn: return_address_19, result: 0
      }
    }
  } else {
    PopFrame return_address_20;
    JumpReturn: return_address_20, result: 0
  }
LocReturn 043605:
  PushStack call_result;
  TraceOperation 043612 (Print_ret " is closed!");
  GamePrint " is closed!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[308]--------------------------------------------------
LocRoutine 043620:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 043623
LocOp 043623:
  TraceOperation 043623 (Store (Con 191) (Var (Local 1)));
  SetByte 008258 HiByte(GetLocal(1));
  SetByte 008259 LoByte(GetLocal(1));
  TraceOperation 043626 (Call (Floc 022042) [Con 169,Var (Local 1)] Sp);
  PushFrame 043626;
  SetLocal 1 169;
  SetLocal 2 GetLocal(1);
  JumpCall: 022042, #actuals: 2
LocReturn 043626:
  PushStack call_result;
  TraceOperation 043633 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[309]--------------------------------------------------
LocRoutine 043634:
  MakeRoutineFrame 0;
  Jump: 043635
LocOp 043635:
  TraceOperation 043635 (Store (Con 208) (Con 0));
  SetByte 008292 0;
  SetByte 008293 0;
  TraceOperation 043638 (Store (Con 195) (Con 0));
  SetByte 008266 0;
  SetByte 008267 0;
  TraceOperation 043641 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
--[310]--------------------------------------------------
LocRoutine 043644:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 043653
LocOp 043653:
  TraceOperation 043653 (Get_child (Var (Local 1)) (Local 4) (Branch T (Dloc 043657)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
  SetLocal 4 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 043657
  } else {
    Jump: 043657
  }
LocOp 043657:
  TraceOperation 043657 (Jz (Var (Local 4)) (Branch T Dtrue));
  if (IsZero(GetLocal(4))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 043660 (Get_sibling (Var (Local 4)) (Local 3) (Branch T (Dloc 043664)));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),5)];
    SetLocal 3 Widen(b2);
    if (IsZero(Widen(b2))) {
      TraceOperation 043664 (Insert_obj (Var (Local 4)) (Var (Local 2)));
      Let b3 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),4)];
      if (IsZero(Widen(b3))) {
        SetByte Offset(Offset(000751,Mul(GetLocal(4),9)),4) LoByte(GetLocal(2));
        Let b4 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),6)];
        SetByte Offset(Offset(000751,Mul(GetLocal(4),9)),5) LoByte(Widen(b4));
        SetByte Offset(Offset(000751,Mul(GetLocal(2),9)),6) LoByte(GetLocal(4));
        TraceOperation 043667 (Store (Con 4) (Var (Local 3)));
        SetLocal 4 GetLocal(3);
        TraceOperation 043670 (Jump 043657);
        Jump: 043657
      } else {
        Let b5 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
        if (Equal(Widen(b5),GetLocal(4))) {
          Let b6 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
          SetByte Offset(Offset(000751,Mul(GetLocal(4),9)),4) LoByte(GetLocal(2));
          Let b7 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),6)];
          SetByte Offset(Offset(000751,Mul(GetLocal(4),9)),5) LoByte(Widen(b7));
          SetByte Offset(Offset(000751,Mul(GetLocal(2),9)),6) LoByte(GetLocal(4));
          TraceOperation 043667 (Store (Con 4) (Var (Local 3)));
          SetLocal 4 GetLocal(3);
          TraceOperation 043670 (Jump 043657);
          Jump: 043657
        } else {
          Error: unlink/loop
        }
      }
    } else {
      TraceOperation 043664 (Insert_obj (Var (Local 4)) (Var (Local 2)));
      Let b8 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),4)];
      if (IsZero(Widen(b8))) {
        SetByte Offset(Offset(000751,Mul(GetLocal(4),9)),4) LoByte(GetLocal(2));
        Let b9 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),6)];
        SetByte Offset(Offset(000751,Mul(GetLocal(4),9)),5) LoByte(Widen(b9));
        SetByte Offset(Offset(000751,Mul(GetLocal(2),9)),6) LoByte(GetLocal(4));
        TraceOperation 043667 (Store (Con 4) (Var (Local 3)));
        SetLocal 4 GetLocal(3);
        TraceOperation 043670 (Jump 043657);
        Jump: 043657
      } else {
        Let b10 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
        if (Equal(Widen(b10),GetLocal(4))) {
          Let b11 = M[Offset(Offset(000751,Mul(GetLocal(4),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b11));
          SetByte Offset(Offset(000751,Mul(GetLocal(4),9)),4) LoByte(GetLocal(2));
          Let b12 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),6)];
          SetByte Offset(Offset(000751,Mul(GetLocal(4),9)),5) LoByte(Widen(b12));
          SetByte Offset(Offset(000751,Mul(GetLocal(2),9)),6) LoByte(GetLocal(4));
          TraceOperation 043667 (Store (Con 4) (Var (Local 3)));
          SetLocal 4 GetLocal(3);
          TraceOperation 043670 (Jump 043657);
          Jump: 043657
        } else {
          Error: unlink/loop
        }
      }
    }
  }
--[311]--------------------------------------------------
LocRoutine 043674:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 043679
LocOp 043679:
  TraceOperation 043679 (Call (Floc 043468) [Var (Local 1)] Sp);
  PushFrame 043679;
  SetLocal 1 GetLocal(1);
  JumpCall: 043468, #actuals: 1
LocReturn 043679:
  PushStack call_result;
  TraceOperation 043685 (Jz (Var Sp) (Branch T (Dloc 043697)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 043697
  } else {
    TraceOperation 043688 (Call (Floc 043468) [Var (Local 2)] Sp);
    PushFrame 043688;
    SetLocal 1 GetLocal(2);
    JumpCall: 043468, #actuals: 1
  }
LocReturn 043688:
  PushStack call_result;
  TraceOperation 043694 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 043697
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocOp 043697:
  TraceOperation 043697 (Call (Floc 043468) [Var (Local 1)] Sp);
  PushFrame 043697;
  SetLocal 1 GetLocal(1);
  JumpCall: 043468, #actuals: 1
LocReturn 043697:
  PushStack call_result;
  TraceOperation 043703 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 043706 (Call (Floc 043468) [Var (Local 2)] Sp);
    PushFrame 043706;
    SetLocal 1 GetLocal(2);
    JumpCall: 043468, #actuals: 1
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocReturn 043706:
  PushStack call_result;
  TraceOperation 043712 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 043715 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[312]--------------------------------------------------
LocRoutine 043716:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 043719
LocOp 043719:
  TraceOperation 043719 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z3(GetLocal(1)));
  TraceOperation 043721 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 043721;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 043721:
  PushStack call_result;
  TraceOperation 043728 (Call (Floc 020718) [Var (Global 149)] Sp);
  Let b1 = M[008206];
  Let b2 = M[008207];
  PushFrame 043728;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020718, #actuals: 1
LocReturn 043728:
  PushStack call_result;
  TraceOperation 043734 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 043736 New_line;
  GamePrint "\n";
  TraceOperation 043737 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[313]--------------------------------------------------
LocRoutine 043738:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 043743
LocOp 043743:
  TraceOperation 043743 (Jz (Var (Local 1)) (Branch F (Dloc 043749)));
  if (IsZero(GetLocal(1))) {
    TraceOperation 043746 (Store (Con 1) (Con 46));
    SetLocal 1 46;
    Jump: 043749
  } else {
    Jump: 043749
  }
LocOp 043749:
  TraceOperation 043749 (Test_attr (Var (Local 1)) (Con 31) (Branch T (Dloc 043777)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),3)];
  if (TestBit(b1,0)) {
    Jump: 043777
  } else {
    TraceOperation 043753 (Jz (Var (Local 2)) (Branch T (Dloc 043764)));
    if (IsZero(GetLocal(2))) {
      Jump: 043764
    } else {
      TraceOperation 043756 (Print " the");
      GamePrint " the";
      TraceOperation 043761 (Jump 043777);
      Jump: 043777
    }
  }
LocOp 043764:
  TraceOperation 043764 (Test_attr (Var (Local 1)) (Con 15) (Branch F (Dloc 043774)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),1)];
  if (TestBit(b1,0)) {
    TraceOperation 043768 (Print " an");
    GamePrint " an";
    TraceOperation 043771 (Jump 043777);
    Jump: 043777
  } else {
    Jump: 043774
  }
LocOp 043774:
  TraceOperation 043774 (Print " a");
  GamePrint " a";
  Jump: 043777
LocOp 043777:
  TraceOperation 043777 (Print " ");
  GamePrint " ";
  TraceOperation 043780 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 043782 Rtrue;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 043782 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[314]--------------------------------------------------
LocRoutine 043784:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 1;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 043793
LocOp 043793:
  TraceOperation 043793 (Je [Var (Global 201),Con 46] (Branch F (Dloc 043820)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 043797 (Je [Var (Global 202),Con 46] (Branch F (Dloc 043820)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),46)) {
      TraceOperation 043801 (Print_ret "Those things aren't here!");
      GamePrint "Those things aren't here!\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 043820
    }
  } else {
    Jump: 043820
  }
LocOp 043820:
  TraceOperation 043820 (Je [Var (Global 201),Con 46] (Branch F (Dloc 043830)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 043824 (Store (Con 1) (Var (Global 167)));
    Let b3 = M[008242];
    Let b4 = M[008243];
    SetLocal 1 MakeHiLo(b3,b4);
    TraceOperation 043827 (Jump 043836);
    Jump: 043836
  } else {
    Jump: 043830
  }
LocOp 043830:
  TraceOperation 043830 (Store (Con 1) (Var (Global 166)));
  Let b1 = M[008240];
  Let b2 = M[008241];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 043833 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 043836
LocOp 043836:
  TraceOperation 043836 (Jz (Var (Local 2)) (Branch T (Dloc 043887)));
  if (IsZero(GetLocal(2))) {
    Jump: 043887
  } else {
    TraceOperation 043839 (Je [Var (Global 203),Con 64,Con 69,Con 105] (Branch T (Dloc 043867)));
    Let b1 = M[008314];
    Let b2 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),64),Equal(MakeHiLo(b1,b2),69)),Equal(MakeHiLo(b1,b2),105))) {
      Jump: 043867
    } else {
      TraceOperation 043846 (Je [Var (Global 203),Con 174,Con 177,Con 178] (Branch T (Dloc 043867)));
      Let b3 = M[008314];
      Let b4 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),174),Equal(MakeHiLo(b3,b4),177)),Equal(MakeHiLo(b3,b4),178))) {
        Jump: 043867
      } else {
        TraceOperation 043853 (Je [Var (Global 203),Con 166,Con 21,Con 175] (Branch T (Dloc 043867)));
        Let b5 = M[008314];
        Let b6 = M[008315];
        if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),166),Equal(MakeHiLo(b5,b6),21)),Equal(MakeHiLo(b5,b6),175))) {
          Jump: 043867
        } else {
          TraceOperation 043860 (Je [Var (Global 203),Con 5,Con 31,Con 106] (Branch F (Dloc 043915)));
          Let b7 = M[008314];
          Let b8 = M[008315];
          if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),5),Equal(MakeHiLo(b7,b8),31)),Equal(MakeHiLo(b7,b8),106))) {
            Jump: 043867
          } else {
            Jump: 043915
          }
        }
      }
    }
  }
LocOp 043867:
  TraceOperation 043867 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  TraceOperation 043870 (Call (Floc 044094) [Var (Local 1),Var (Local 2)] (Local 3));
  PushFrame 043870;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  JumpCall: 044094, #actuals: 2
LocReturn 043870:
  SetLocal 3 call_result;
  TraceOperation 043877 (Jz (Var (Local 3)) (Branch T Dfalse));
  if (IsZero(GetLocal(3))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 043880 (Je [Var (Local 3),Con 46] (Branch F Dtrue));
    if (Equal(GetLocal(3),46)) {
      TraceOperation 043884 (Jump 043915);
      Jump: 043915
    } else {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 1
    }
  }
LocOp 043887:
  TraceOperation 043887 (Je [Var (Global 203),Con 22,Con 23,Con 150] (Branch T (Dloc 043898)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),22),Equal(MakeHiLo(b1,b2),23)),Equal(MakeHiLo(b1,b2),150))) {
    Jump: 043898
  } else {
    TraceOperation 043894 (Je [Var (Global 203),Con 101] (Branch F (Dloc 043915)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),101)) {
      Jump: 043898
    } else {
      Jump: 043915
    }
  }
LocOp 043898:
  TraceOperation 043898 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  TraceOperation 043901 (Call (Floc 044094) [Var (Local 1),Var (Local 2)] (Local 3));
  PushFrame 043901;
  SetLocal 1 GetLocal(1);
  SetLocal 2 GetLocal(2);
  JumpCall: 044094, #actuals: 2
LocReturn 043901:
  SetLocal 3 call_result;
  TraceOperation 043908 (Jz (Var (Local 3)) (Branch T Dfalse));
  if (IsZero(GetLocal(3))) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  } else {
    TraceOperation 043911 (Je [Var (Local 3),Con 46] (Branch F Dtrue));
    if (Equal(GetLocal(3),46)) {
      Jump: 043915
    } else {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 1
    }
  }
LocOp 043915:
  TraceOperation 043915 (Jz (Var (Local 4)) (Branch T (Dloc 043951)));
  if (IsZero(GetLocal(4))) {
    Jump: 043951
  } else {
    TraceOperation 043918 (Print "You'll have to be more specific, I'm afraid.");
    GamePrint "You'll have to be more specific, I'm afraid.";
    TraceOperation 043947 New_line;
    GamePrint "\n";
    TraceOperation 043948 (Jump 044088);
    Jump: 044088
  }
LocOp 043951:
  TraceOperation 043951 (Je [Var (Global 195),Con 31] (Branch F (Dloc 044010)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),31)) {
    TraceOperation 043955 (Print "You can't ");
    GamePrint "You can't ";
    TraceOperation 043960 (Je [Var (Global 155),Con 17893,Con 17900,Con 14799] (Branch F (Dloc 043978)));
    Let b3 = M[008218];
    Let b4 = M[008219];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),17893),Equal(MakeHiLo(b3,b4),17900)),Equal(MakeHiLo(b3,b4),14799))) {
      TraceOperation 043970 (Print "hear");
      GamePrint "hear";
      TraceOperation 043975 (Jump 043981);
      Jump: 043981
    } else {
      Jump: 043978
    }
  } else {
    Jump: 044010
  }
LocOp 043978:
  TraceOperation 043978 (Print "see");
  GamePrint "see";
  Jump: 043981
LocOp 043981:
  TraceOperation 043981 (Call (Floc 025716) [Var (Global 155)] Sp);
  Let b1 = M[008218];
  Let b2 = M[008219];
  PushFrame 043981;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 025716, #actuals: 1
LocReturn 043981:
  PushStack call_result;
  TraceOperation 043987 (Jz (Var Sp) (Branch F (Dloc 043995)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 043990 (Print " any");
    GamePrint " any";
    Jump: 043995
  } else {
    Jump: 043995
  }
LocOp 043995:
  TraceOperation 043995 (Call (Floc 044162) [Var (Local 2)] Sp);
  PushFrame 043995;
  SetLocal 1 GetLocal(2);
  JumpCall: 044162, #actuals: 1
LocReturn 043995:
  PushStack call_result;
  TraceOperation 044001 (Print " here!");
  GamePrint " here!";
  TraceOperation 044006 New_line;
  GamePrint "\n";
  TraceOperation 044007 (Jump 044088);
  Jump: 044088
LocOp 044010:
  TraceOperation 044010 (Je [Var (Global 195),Con 142] (Branch F (Dloc 044017)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 044014 (Jz (Var (Global 136)) (Branch F Dfalse));
    Let b3 = M[008180];
    Let b4 = M[008181];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 044017
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    Jump: 044017
  }
LocOp 044017:
  TraceOperation 044017 (Je [Var (Global 195),Con 95] (Branch F (Dloc 044025)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),95)) {
    TraceOperation 044021 (Test_attr (Con 95) (Con 3) (Branch T Dfalse));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      Jump: 044025
    }
  } else {
    Jump: 044025
  }
LocOp 044025:
  TraceOperation 044025 (Print "Looking confused,");
  GamePrint "Looking confused,";
  TraceOperation 044040 (Call (Floc 043738) [Var (Global 195),Con 1] Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  PushFrame 044040;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 044040:
  PushStack call_result;
  TraceOperation 044047 (Print " says, \"I don't see");
  GamePrint " says, \"I don't see";
  TraceOperation 044060 (Call (Floc 025716) [Var (Global 155)] Sp);
  Let b1 = M[008218];
  Let b2 = M[008219];
  PushFrame 044060;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 025716, #actuals: 1
LocReturn 044060:
  PushStack call_result;
  TraceOperation 044066 (Jz (Var Sp) (Branch F (Dloc 044074)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 044069 (Print " any");
    GamePrint " any";
    Jump: 044074
  } else {
    Jump: 044074
  }
LocOp 044074:
  TraceOperation 044074 (Call (Floc 044162) [Var (Local 2)] Sp);
  PushFrame 044074;
  SetLocal 1 GetLocal(2);
  JumpCall: 044162, #actuals: 1
LocReturn 044074:
  PushStack call_result;
  TraceOperation 044080 (Print " here!\"");
  GamePrint " here!\"";
  TraceOperation 044087 New_line;
  GamePrint "\n";
  Jump: 044088
LocOp 044088:
  TraceOperation 044088 (Call (Floc 043634) [] Sp);
  PushFrame 044088;
  JumpCall: 043634, #actuals: 0
LocReturn 044088:
  PushStack call_result;
  TraceOperation 044093 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[315]--------------------------------------------------
LocRoutine 044094:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 044103
LocOp 044103:
  TraceOperation 044103 (Call (Floc 027220) [Var (Local 1)] (Local 3));
  PushFrame 044103;
  SetLocal 1 GetLocal(1);
  JumpCall: 027220, #actuals: 1
LocReturn 044103:
  SetLocal 3 call_result;
  TraceOperation 044109 (Je [Con 1,Var (Local 3)] (Branch F (Dloc 044124)));
  if (Equal(1,GetLocal(3))) {
    TraceOperation 044113 (Jz (Var (Local 2)) (Branch T (Dloc 044120)));
    if (IsZero(GetLocal(2))) {
      Jump: 044120
    } else {
      TraceOperation 044116 (Store (Con 217) (Var (Global 157)));
      Let b1 = M[008222];
      Let b2 = M[008223];
      SetByte 008310 b1;
      SetByte 008311 b2;
      TraceOperation 044119 Rfalse;
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    }
  } else {
    Jump: 044124
  }
LocOp 044120:
  TraceOperation 044120 (Store (Con 218) (Var (Global 157)));
  Let b1 = M[008222];
  Let b2 = M[008223];
  SetByte 008312 b1;
  SetByte 008313 b2;
  TraceOperation 044123 Rfalse;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 0
LocOp 044124:
  TraceOperation 044124 (Je [Var (Global 155),Con 15695] (Branch F (Dloc 044141)));
  Let b1 = M[008218];
  Let b2 = M[008219];
  if (Equal(MakeHiLo(b1,b2),15695)) {
    TraceOperation 044130 (Jz (Var (Local 2)) (Branch T (Dloc 044137)));
    if (IsZero(GetLocal(2))) {
      Jump: 044137
    } else {
      TraceOperation 044133 (Store (Con 217) (Con 155));
      SetByte 008310 0;
      SetByte 008311 155;
      TraceOperation 044136 Rfalse;
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    }
  } else {
    Jump: 044141
  }
LocOp 044137:
  TraceOperation 044137 (Store (Con 218) (Con 155));
  SetByte 008312 0;
  SetByte 008313 155;
  TraceOperation 044140 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 044141:
  TraceOperation 044141 (Je [Var (Global 155),Con 19685,Con 19699] (Branch F (Dloc 044160)));
  Let b1 = M[008218];
  Let b2 = M[008219];
  if (LogOr(Equal(MakeHiLo(b1,b2),19685),Equal(MakeHiLo(b1,b2),19699))) {
    TraceOperation 044149 (Jz (Var (Local 2)) (Branch T (Dloc 044156)));
    if (IsZero(GetLocal(2))) {
      Jump: 044156
    } else {
      TraceOperation 044152 (Store (Con 217) (Con 13));
      SetByte 008310 0;
      SetByte 008311 13;
      TraceOperation 044155 Rfalse;
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    }
  } else {
    Jump: 044160
  }
LocOp 044156:
  TraceOperation 044156 (Store (Con 218) (Con 13));
  SetByte 008312 0;
  SetByte 008313 13;
  TraceOperation 044159 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 044160:
  TraceOperation 044160 (Ret (Con 46));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 46
--[316]--------------------------------------------------
LocRoutine 044162:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 044167
LocOp 044167:
  TraceOperation 044167 (Jz (Var (Global 189)) (Branch T (Dloc 044187)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 044187
  } else {
    TraceOperation 044170 (Jz (Var (Global 154)) (Branch T (Dloc 044178)));
    Let b3 = M[008216];
    Let b4 = M[008217];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 044178
    } else {
      TraceOperation 044173 (Print " ");
      GamePrint " ";
      TraceOperation 044176 (Print_addr (Var (Global 153)));
      Let b5 = M[008214];
      Let b6 = M[008215];
      GamePrint GetText(Address(MakeHiLo(b5,b6)));
      Jump: 044178
    }
  }
LocOp 044178:
  TraceOperation 044178 (Jz (Var (Global 155)) (Branch T Dfalse));
  Let b1 = M[008218];
  Let b2 = M[008219];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 044181 (Print " ");
    GamePrint " ";
    TraceOperation 044184 (Print_addr (Var (Global 155)));
    Let b4 = M[008218];
    Let b5 = M[008219];
    GamePrint GetText(Address(MakeHiLo(b4,b5)));
    TraceOperation 044186 Rtrue;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
LocOp 044187:
  TraceOperation 044187 (Jz (Var (Local 1)) (Branch T (Dloc 044207)));
  if (IsZero(GetLocal(1))) {
    Jump: 044207
  } else {
    TraceOperation 044190 (Loadw (Var (Global 184)) (Con 6) (Local 2));
    Let b1 = M[008276];
    Let b2 = M[008277];
    Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
    Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
    SetLocal 2 MakeHiLo(b3,b4);
    TraceOperation 044194 (Loadw (Var (Global 184)) (Con 7) Sp);
    Let b5 = M[008276];
    Let b6 = M[008277];
    Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),14)];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),14),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 044198 (Call (Floc 025564) [Var (Local 2),Var Sp,Con 0] Sp);
    PopStack popped9;
    PushFrame 044198;
    SetLocal 1 GetLocal(2);
    SetLocal 2 popped9;
    SetLocal 3 0;
    JumpCall: 025564, #actuals: 3
  }
LocReturn 044198:
  PushStack call_result;
  TraceOperation 044206 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 044207:
  TraceOperation 044207 (Loadw (Var (Global 184)) (Con 8) (Local 2));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 044211 (Loadw (Var (Global 184)) (Con 9) Sp);
  Let b5 = M[008276];
  Let b6 = M[008277];
  Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),18)];
  Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),18),1)];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 044215 (Call (Floc 025564) [Var (Local 2),Var Sp,Con 0] Sp);
  PopStack popped9;
  PushFrame 044215;
  SetLocal 1 GetLocal(2);
  SetLocal 2 popped9;
  SetLocal 3 0;
  JumpCall: 025564, #actuals: 3
LocReturn 044215:
  PushStack call_result;
  TraceOperation 044223 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[317]--------------------------------------------------
LocRoutine 044224:
  MakeRoutineFrame 0;
  Jump: 044225
LocOp 044225:
  TraceOperation 044225 (Jin (Con 124) (Var (Global 0)) (Branch T (Dloc 044235)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001871];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 044235 (Call (Floc 043370) [Con 7] Sp);
    PushFrame 044235;
    SetLocal 1 7;
    JumpCall: 043370, #actuals: 1
  } else {
    TraceOperation 044229 (Je [Var (Global 0),Con 101,Con 213] (Branch F (Dloc 044266)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    if (LogOr(Equal(MakeHiLo(b4,b5),101),Equal(MakeHiLo(b4,b5),213))) {
      TraceOperation 044235 (Call (Floc 043370) [Con 7] Sp);
      PushFrame 044235;
      SetLocal 1 7;
      JumpCall: 043370, #actuals: 1
    } else {
      Jump: 044266
    }
  }
LocReturn 044235:
  PushStack call_result;
  TraceOperation 044241 (Jz (Var Sp) (Branch T (Dloc 044266)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 044266
  } else {
    TraceOperation 044244 (Je [Con 45,Var (Global 202)] (Branch F (Dloc 044257)));
    Let b2 = M[008312];
    Let b3 = M[008313];
    if (Equal(45,MakeHiLo(b2,b3))) {
      TraceOperation 044248 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 7] Sp);
      Let b4 = M[008314];
      Let b5 = M[008315];
      Let b6 = M[008310];
      Let b7 = M[008311];
      PushFrame 044248;
      SetLocal 1 MakeHiLo(b4,b5);
      SetLocal 2 MakeHiLo(b6,b7);
      SetLocal 3 7;
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 044257
    }
  }
LocReturn 044248:
  PushStack call_result;
  TraceOperation 044256 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 044257:
  TraceOperation 044257 (Call (Floc 022042) [Var (Global 203),Con 7,Var (Global 202)] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008312];
  Let b4 = M[008313];
  PushFrame 044257;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 7;
  SetLocal 3 MakeHiLo(b3,b4);
  JumpCall: 022042, #actuals: 3
LocReturn 044257:
  PushStack call_result;
  TraceOperation 044265 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 044266:
  TraceOperation 044266 (Je [Var (Global 0),Con 210] (Branch F (Dloc 044276)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),210)) {
    TraceOperation 044270 (Call (Floc 046716) [] Sp);
    PushFrame 044270;
    JumpCall: 046716, #actuals: 0
  } else {
    Jump: 044276
  }
LocReturn 044270:
  PushStack call_result;
  TraceOperation 044275 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 044276:
  TraceOperation 044276 (Je [Con 45,Var (Global 201)] (Branch F (Dloc 044294)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(45,MakeHiLo(b1,b2))) {
    TraceOperation 044280 (Je [Var (Global 203),Con 174,Con 69,Con 64] (Branch T Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),174),Equal(MakeHiLo(b3,b4),69)),Equal(MakeHiLo(b3,b4),64))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 044287 (Je [Var (Global 203),Con 175,Con 21,Con 177] (Branch T Dfalse));
      Let b6 = M[008314];
      Let b7 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b6,b7),175),Equal(MakeHiLo(b6,b7),21)),Equal(MakeHiLo(b6,b7),177))) {
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      } else {
        Jump: 044294
      }
    }
  } else {
    Jump: 044294
  }
LocOp 044294:
  TraceOperation 044294 (Je [Con 45,Var (Global 202)] (Branch F (Dloc 044304)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(45,MakeHiLo(b1,b2))) {
    TraceOperation 044298 (Je [Var (Global 203),Con 150,Con 22] (Branch T Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),150),Equal(MakeHiLo(b3,b4),22))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 044304
    }
  } else {
    Jump: 044304
  }
LocOp 044304:
  TraceOperation 044304 (Je [Var (Global 0),Con 168] (Branch T (Dloc 044315)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    Jump: 044315
  } else {
    TraceOperation 044308 (Call (Floc 057596) [Con 45] Sp);
    PushFrame 044308;
    SetLocal 1 45;
    JumpCall: 057596, #actuals: 1
  }
LocReturn 044308:
  PushStack call_result;
  TraceOperation 044314 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 044315:
  TraceOperation 044315 (Je [Var (Global 203),Con 88] (Branch F (Dloc 044400)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 044320 (Test_attr (Var (Global 0)) (Con 29) (Branch F (Dloc 044329)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,2)) {
      TraceOperation 044324 (Print_ret "It is.");
      GamePrint "It is.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      Jump: 044329
    }
  } else {
    Jump: 044400
  }
LocOp 044329:
  TraceOperation 044329 (Store (Con 101) (Con 1));
  SetByte 008078 0;
  SetByte 008079 1;
  TraceOperation 044332 (Set_attr (Var (Global 0)) (Con 29));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3) SetBit(b3,2);
  TraceOperation 044335 (Set_attr (Con 24) (Con 11));
  Let b4 = M[000968];
  SetByte 000968 SetBit(b4,4);
  TraceOperation 044338 (Insert_obj (Con 24) (Con 25));
  Let b5 = M[000971];
  if (IsZero(Widen(b5))) {
    SetByte 000971 25;
    Let b6 = M[000982];
    SetByte 000972 LoByte(Widen(b6));
    SetByte 000982 24;
    TraceOperation 044341 (Print "Good start to the day. Pity it's going to be the worst one of your life. The light is now on.");
    GamePrint "Good start to the day. Pity it's going to be the worst one of your life. The light is now on.";
    TraceOperation 044392 New_line;
    GamePrint "\n";
    TraceOperation 044393 New_line;
    GamePrint "\n";
    TraceOperation 044394 (Call (Floc 034400) [] Sp);
    PushFrame 044394;
    JumpCall: 034400, #actuals: 0
  } else {
    Let b7 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b7),24)) {
      Let b8 = M[000972];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b8));
      SetByte 000971 25;
      Let b9 = M[000982];
      SetByte 000972 LoByte(Widen(b9));
      SetByte 000982 24;
      TraceOperation 044341 (Print "Good start to the day. Pity it's going to be the worst one of your life. The light is now on.");
      GamePrint "Good start to the day. Pity it's going to be the worst one of your life. The light is now on.";
      TraceOperation 044392 New_line;
      GamePrint "\n";
      TraceOperation 044393 New_line;
      GamePrint "\n";
      TraceOperation 044394 (Call (Floc 034400) [] Sp);
      PushFrame 044394;
      JumpCall: 034400, #actuals: 0
    } else {
      Error: unlink/loop
    }
  }
LocReturn 044394:
  PushStack call_result;
  TraceOperation 044399 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 044400:
  TraceOperation 044400 (Je [Var (Global 203),Con 40] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),40)) {
    TraceOperation 044404 (Call (Floc 031422) [] Sp);
    PushFrame 044404;
    JumpCall: 031422, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 044404:
  PushStack call_result;
  TraceOperation 044409 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[318]--------------------------------------------------
LocRoutine 044410:
  MakeRoutineFrame 0;
  Jump: 044411
LocOp 044411:
  TraceOperation 044411 (Je [Var (Global 203),Con 124,Con 21] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),124),Equal(MakeHiLo(b1,b2),21))) {
    TraceOperation 044417 (Call (Floc 022042) [Con 138] Sp);
    PushFrame 044417;
    SetLocal 1 138;
    JumpCall: 022042, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 044417:
  PushStack call_result;
  TraceOperation 044423 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[319]--------------------------------------------------
LocRoutine 044424:
  MakeRoutineFrame 0;
  Jump: 044425
LocOp 044425:
  TraceOperation 044425 (Je [Var (Global 203),Con 97,Con 66] (Branch F (Dloc 044468)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),97),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 044431 (Print "This isn't the time");
    GamePrint "This isn't the time";
    TraceOperation 044440 (Je [Var (Global 0),Con 54] (Branch T (Dloc 044453)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),54)) {
      Jump: 044453
    } else {
      TraceOperation 044444 (Print " or the place");
      GamePrint " or the place";
      Jump: 044453
    }
  } else {
    Jump: 044468
  }
LocOp 044453:
  TraceOperation 044453 (Print_ret " for making speeches.");
  GamePrint " for making speeches.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 044468:
  TraceOperation 044468 (Je [Var (Global 203),Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),120)) {
    TraceOperation 044472 (Print_ret "It's extemporaneous.");
    GamePrint "It's extemporaneous.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[320]--------------------------------------------------
LocRoutine 044486:
  MakeRoutineFrame 0;
  Jump: 044487
LocOp 044487:
  TraceOperation 044487 (Je [Var (Global 203),Con 38] (Branch F (Dloc 044510)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 044491 (Je [Var (Global 0),Con 175] (Branch F (Dloc 044510)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),175)) {
      TraceOperation 044495 (Print_ret "The mesh is too fine.");
      GamePrint "The mesh is too fine.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 044510
    }
  } else {
    Jump: 044510
  }
LocOp 044510:
  TraceOperation 044510 (Je [Var (Global 203),Con 33,Con 34,Con 35] (Branch T (Dloc 044521)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),33),Equal(MakeHiLo(b1,b2),34)),Equal(MakeHiLo(b1,b2),35))) {
    Jump: 044521
  } else {
    TraceOperation 044517 (Je [Var (Global 203),Con 28] (Branch F (Dloc 044527)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),28)) {
      Jump: 044521
    } else {
      Jump: 044527
    }
  }
LocOp 044521:
  TraceOperation 044521 (Call (Floc 031422) [] Sp);
  PushFrame 044521;
  JumpCall: 031422, #actuals: 0
LocReturn 044521:
  PushStack call_result;
  TraceOperation 044526 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 044527:
  TraceOperation 044527 (Je [Var (Global 203),Con 93] (Branch F (Dloc 044537)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 044531 (Call (Floc 031360) [] Sp);
    PushFrame 044531;
    JumpCall: 031360, #actuals: 0
  } else {
    Jump: 044537
  }
LocReturn 044531:
  PushStack call_result;
  TraceOperation 044536 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 044537:
  TraceOperation 044537 (Je [Var (Global 203),Con 86] (Branch F (Dloc 044548)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),86)) {
    TraceOperation 044541 (Call (Floc 043620) [Con 18] Sp);
    PushFrame 044541;
    SetLocal 1 18;
    JumpCall: 043620, #actuals: 1
  } else {
    Jump: 044548
  }
LocReturn 044541:
  PushStack call_result;
  TraceOperation 044547 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 044548:
  TraceOperation 044548 (Je [Var (Global 203),Con 87] (Branch F (Dloc 044607)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 044552 (Jin (Con 31) (Con 161) (Branch F (Dloc 044563)));
    Let b3 = M[001034];
    if (Equal(161,Widen(b3))) {
      TraceOperation 044556 (Call (Floc 057682) [Con 161] Sp);
      PushFrame 044556;
      SetLocal 1 161;
      JumpCall: 057682, #actuals: 1
    } else {
      Jump: 044563
    }
  } else {
    Jump: 044607
  }
LocReturn 044556:
  PushStack call_result;
  TraceOperation 044562 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[321]--------------------------------------------------
LocRoutine 044580:
  MakeRoutineFrame 0;
  Jump: 044581
LocOp 044581:
  TraceOperation 044581 (Store (Con 207) (Con 42));
  SetByte 008290 0;
  SetByte 008291 42;
  TraceOperation 044584 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[322]--------------------------------------------------
LocRoutine 044598:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 13044;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 14368;
    }
  }
  Jump: 044603
LocOp 044603:
  TraceOperation 044603 (Test_attr (Var (Global 89)) (Var (Global 134)) (Branch F (Dloc 044610)));
  Let b1 = M[008086];
  Let b2 = M[008087];
  Let b3 = M[008176];
  Let b4 = M[008177];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),Div8(MakeHiLo(b3,b4)))];
  if (TestBit(b5,SevenMinus(LoByte(Mod(MakeHiLo(b3,b4),8))))) {
    TraceOperation 044607 (Je [Var (Global 203),Con 61] (Branch F (Dloc 044700)));
    Let b6 = M[008314];
    Let b7 = M[008315];
    if (Equal(MakeHiLo(b6,b7),61)) {
      TraceOperation 044612 (Je [Var (Global 0),Var (Global 69)] (Branch F (Dloc 044659)));
      Let b8 = M[007908];
      Let b9 = M[007909];
      Let b10 = M[008046];
      Let b11 = M[008047];
      if (Equal(MakeHiLo(b8,b9),MakeHiLo(b10,b11))) {
        TraceOperation 044616 (Print_ret "The walls, floor, and ceiling are covered with little pieces of flesh and bone.");
        GamePrint "The walls, floor, and ceiling are covered with little pieces of flesh and bone.\n";
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      } else {
        Jump: 044659
      }
    } else {
      Jump: 044700
    }
  } else {
    Jump: 044610
  }
LocOp 044659:
  TraceOperation 044659 (Je [Var (Global 0),Con 175] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),175)) {
    TraceOperation 044663 (Print_ret "The floor is an open metal mesh, like the floor of a catwalk.");
    GamePrint "The floor is an open metal mesh, like the floor of a catwalk.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 044700:
  TraceOperation 044700 (Je [Var (Global 203),Con 63] (Branch F (Dloc 044719)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 044704 (Je [Var (Global 0),Con 175] (Branch F (Dloc 044719)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),175)) {
      TraceOperation 044708 (Call (Floc 022042) [Con 63,Con 115] Sp);
      PushFrame 044708;
      SetLocal 1 63;
      SetLocal 2 115;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 044719
    }
  } else {
    Jump: 044719
  }
LocReturn 044708:
  PushStack call_result;
  TraceOperation 044715 (Store (Con 207) (Con 42));
  SetByte 008290 0;
  SetByte 008291 42;
  TraceOperation 044718 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 044719:
  TraceOperation 044719 (Je [Var (Global 203),Con 57] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 044723 (Je [Var (Global 0),Con 149] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),149)) {
      TraceOperation 044727 (Jz (Var (Global 86)) (Branch T Dfalse));
      Let b5 = M[008080];
      Let b6 = M[008081];
      if (IsZero(MakeHiLo(b5,b6))) {
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      } else {
        TraceOperation 044730 (Print_ret "It occurs to you that you've never deliberately lain in any mud before and that it's actually a pleasant sort of squishy sensation. You let the mud ooze between your toes. You may be here for some time, so you may as well make the most of it.");
        GamePrint "It occurs to you that you've never deliberately lain in any mud before and that it's actually a pleasant sort of squishy sensation. You let the mud ooze between your toes. You may be here for some time, so you may as well make the most of it.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      }
    } else {
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 0
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
--[323]--------------------------------------------------
LocRoutine 044860:
  MakeRoutineFrame 0;
  Jump: 044861
LocOp 044861:
  TraceOperation 044861 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 044865 (Je [Var (Global 0),Var (Global 69)] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[008046];
    Let b6 = M[008047];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 044869 (Call (Floc 022042) [Con 61,Con 42] Sp);
      PushFrame 044869;
      SetLocal 1 61;
      SetLocal 2 42;
      JumpCall: 022042, #actuals: 2
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocReturn 044869:
  PushStack call_result;
  TraceOperation 044876 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[324]--------------------------------------------------
LocRoutine 044878:
  MakeRoutineFrame 0;
  Jump: 044879
LocOp 044879:
  TraceOperation 044879 (Je [Var (Global 203),Con 93] (Branch F (Dloc 044890)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 044883 (Call (Floc 022042) [Con 90] Sp);
    PushFrame 044883;
    SetLocal 1 90;
    JumpCall: 022042, #actuals: 1
  } else {
    Jump: 044890
  }
LocReturn 044883:
  PushStack call_result;
  TraceOperation 044889 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 044890:
  TraceOperation 044890 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 044894 (Je [Var (Global 0),Var (Global 69)] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[008046];
    Let b6 = M[008047];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 044898 (Call (Floc 022042) [Con 61,Con 42] Sp);
      PushFrame 044898;
      SetLocal 1 61;
      SetLocal 2 42;
      JumpCall: 022042, #actuals: 2
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocReturn 044898:
  PushStack call_result;
  TraceOperation 044905 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[325]--------------------------------------------------
LocRoutine 044906:
  MakeRoutineFrame 0;
  Jump: 044907
LocOp 044907:
  TraceOperation 044907 (Jz (Var (Global 85)) (Branch F (Dloc 044914)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 044910 (Print_paddr (Var (Global 56)));
    Let b3 = M[008020];
    Let b4 = M[008021];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 044912 New_line;
    GamePrint "\n";
    TraceOperation 044913 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 044914
  }
LocOp 044914:
  TraceOperation 044914 (Je [Var (Global 203),Con 45] (Branch F (Dloc 044926)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),45)) {
    TraceOperation 044918 (Call (Floc 022042) [Con 24,Con 165] Sp);
    PushFrame 044918;
    SetLocal 1 24;
    SetLocal 2 165;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 044926
  }
LocReturn 044918:
  PushStack call_result;
  TraceOperation 044925 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 044926:
  TraceOperation 044926 (Je [Var (Global 0),Con 168] (Branch F (Dloc 044985)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 044930 (Je [Var (Global 203),Con 61,Con 63] (Branch F (Dloc 044944)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),61),Equal(MakeHiLo(b3,b4),63))) {
      TraceOperation 044936 (Call (Floc 022042) [Con 103,Con 159] Sp);
      PushFrame 044936;
      SetLocal 1 103;
      SetLocal 2 159;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 044944
    }
  } else {
    Jump: 044985
  }
LocReturn 044936:
  PushStack call_result;
  TraceOperation 044943 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 044944:
  TraceOperation 044944 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 044950 (Print_ret "The bloody thing's been jammed shut for months, now.");
    GamePrint "The bloody thing's been jammed shut for months, now.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 044985:
  TraceOperation 044985 (Je [Var (Global 203),Con 63] (Branch F (Dloc 045004)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 044989 (Print_ret "You see the country lane.");
    GamePrint "You see the country lane.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 045004
  }
LocOp 045004:
  TraceOperation 045004 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 045010 (Print_paddr (Var (Global 26)));
    Let b3 = M[007960];
    Let b4 = M[007961];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 045012 New_line;
    GamePrint "\n";
    TraceOperation 045013 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
--[326]--------------------------------------------------
LocRoutine 045014:
  MakeRoutineFrame 0;
  Jump: 045015
LocOp 045015:
  TraceOperation 045015 (Je [Var (Global 203),Con 33,Con 35] (Branch F (Dloc 045028)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),33),Equal(MakeHiLo(b1,b2),35))) {
    TraceOperation 045021 (Call (Floc 043620) [Con 18] Sp);
    PushFrame 045021;
    SetLocal 1 18;
    JumpCall: 043620, #actuals: 1
  } else {
    Jump: 045028
  }
LocReturn 045021:
  PushStack call_result;
  TraceOperation 045027 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 045028:
  TraceOperation 045028 (Je [Var (Global 203),Con 36] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),36)) {
    TraceOperation 045032 (Call (Floc 043620) [Con 20] Sp);
    PushFrame 045032;
    SetLocal 1 20;
    JumpCall: 043620, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 045032:
  PushStack call_result;
  TraceOperation 045038 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[327]--------------------------------------------------
LocRoutine 045040:
  MakeRoutineFrame 0;
  Jump: 045041
LocOp 045041:
  TraceOperation 045041 (Test_attr (Var (Global 0)) (Con 7) (Branch T (Dloc 045052)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,0)) {
    Jump: 045052
  } else {
    TraceOperation 045045 (Call (Floc 057596) [Con 38] Sp);
    PushFrame 045045;
    SetLocal 1 38;
    JumpCall: 057596, #actuals: 1
  }
LocReturn 045045:
  PushStack call_result;
  TraceOperation 045051 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 045052:
  TraceOperation 045052 (Jin (Con 124) (Var (Global 0)) (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001871];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 045056 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),61)) {
      TraceOperation 045060 (Print "The sky is filled with the ships of the ");
      GamePrint "The sky is filled with the ships of the ";
      TraceOperation 045081 (Print_obj (Con 124));
      Let b6 = M[001874];
      Let b7 = M[001875];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 045083 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 045083 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      }
    } else {
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 0
    }
  } else {
    PopFrame return_address_12;
    JumpReturn: return_address_12, result: 0
  }
--[328]--------------------------------------------------
LocRoutine 045086:
  MakeRoutineFrame 0;
  Jump: 045087
LocOp 045087:
  TraceOperation 045087 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 045091 (Je [Var (Global 0),Con 86] (Branch F (Dloc 045174)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),86)) {
      TraceOperation 045096 (Print "The approaching star is a small, unregarded yellow sun, with nine planets of varying sizes. The ");
      GamePrint "The approaching star is a small, unregarded yellow sun, with nine planets of varying sizes. The ";
      TraceOperation 045155 (Print_obj (Con 163));
      Let b5 = M[002225];
      Let b6 = M[002226];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 045157 (Print_ret " catches your attention.");
        GamePrint " catches your attention.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 045157 (Print_ret " catches your attention.");
        GamePrint " catches your attention.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      }
    } else {
      Jump: 045174
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
LocOp 045174:
  TraceOperation 045174 (Je [Var (Global 0),Con 54,Con 66] (Branch F (Dloc 045203)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(Equal(MakeHiLo(b1,b2),54),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 045180 (Print_ret "The sun is a smallish orange star.");
    GamePrint "The sun is a smallish orange star.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 045203
  }
LocOp 045203:
  TraceOperation 045203 (Je [Var (Global 0),Con 149,Con 137,Con 138] (Branch F (Dloc 045233)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),149),Equal(MakeHiLo(b1,b2),137)),Equal(MakeHiLo(b1,b2),138))) {
    TraceOperation 045210 (Print_ret "The sun is a smallish yellow star.");
    GamePrint "The sun is a smallish yellow star.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 045233
  }
LocOp 045233:
  TraceOperation 045233 (Call (Floc 057596) [Con 37] Sp);
  PushFrame 045233;
  SetLocal 1 37;
  JumpCall: 057596, #actuals: 1
LocReturn 045233:
  PushStack call_result;
  TraceOperation 045239 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[329]--------------------------------------------------
LocRoutine 045240:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 045243
LocOp 045243:
  TraceOperation 045243 (Je [Var (Global 203),Con 172] (Branch F (Dloc 045257)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),172)) {
    TraceOperation 045247 (Store (Con 217) (Con 0));
    SetByte 008310 0;
    SetByte 008311 0;
    TraceOperation 045250 (Call (Floc 022042) [Con 173] Sp);
    PushFrame 045250;
    SetLocal 1 173;
    JumpCall: 022042, #actuals: 1
  } else {
    Jump: 045257
  }
LocReturn 045250:
  PushStack call_result;
  TraceOperation 045256 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 045257:
  TraceOperation 045257 (Je [Var (Global 203),Con 130] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),130)) {
    TraceOperation 045261 (Call (Floc 043552) [Var (Global 0),Con 26] (Local 1));
    Let b3 = M[007908];
    Let b4 = M[007909];
    PushFrame 045261;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 26;
    JumpCall: 043552, #actuals: 2
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 045261:
  SetLocal 1 call_result;
  TraceOperation 045268 (Jz (Var (Local 1)) (Branch T (Dloc 045279)));
  if (IsZero(GetLocal(1))) {
    Jump: 045279
  } else {
    TraceOperation 045271 (Call (Floc 022042) [Con 153,Var (Local 1)] Sp);
    PushFrame 045271;
    SetLocal 1 153;
    SetLocal 2 GetLocal(1);
    JumpCall: 022042, #actuals: 2
  }
LocReturn 045271:
  PushStack call_result;
  TraceOperation 045278 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 045279:
  TraceOperation 045279 (Print_ret "Pleased to meet you.");
  GamePrint "Pleased to meet you.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[330]--------------------------------------------------
LocRoutine 045294:
  MakeRoutineFrame 0;
  Jump: 045295
LocOp 045295:
  TraceOperation 045295 (Je [Var (Global 203),Con 103] (Branch F (Dloc 045308)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 045299 (Print_ret "They are.");
    GamePrint "They are.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 045308
  }
LocOp 045308:
  TraceOperation 045308 (Je [Var (Global 203),Con 39] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),39)) {
    TraceOperation 045312 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 045331)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001610];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 045316 (Print "The Beast doesn't notice.");
      GamePrint "The Beast doesn't notice.";
      TraceOperation 045327 (Print_paddr (Var (Global 30)));
      Let b6 = M[007968];
      Let b7 = M[007969];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 045329 New_line;
      GamePrint "\n";
      TraceOperation 045330 Rtrue;
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      Jump: 045331
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
--[331]--------------------------------------------------
LocRoutine 045344:
  MakeRoutineFrame 0;
  Jump: 045345
LocOp 045345:
  TraceOperation 045345 (Je [Var (Global 201),Con 8] (Branch F Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 045349 (Jz (Var (Global 202)) (Branch T Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 045352 (Call (Floc 050116) [] Sp);
      PushFrame 045352;
      JumpCall: 050116, #actuals: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 045352:
  PushStack call_result;
  TraceOperation 045357 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[332]--------------------------------------------------
LocRoutine 045358:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 045361
LocOp 045361:
  TraceOperation 045361 (Je [Var (Global 203),Con 15] (Branch F (Dloc 045411)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 045365 (Print "Talking to yourself is a sign of impending mental collapse.");
    GamePrint "Talking to yourself is a sign of impending mental collapse.";
    TraceOperation 045404 New_line;
    GamePrint "\n";
    TraceOperation 045405 (Call (Floc 043634) [] Sp);
    PushFrame 045405;
    JumpCall: 043634, #actuals: 0
  } else {
    Jump: 045411
  }
LocReturn 045405:
  PushStack call_result;
  TraceOperation 045410 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 045411:
  TraceOperation 045411 (Je [Var (Global 203),Con 74] (Branch F (Dloc 045420)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 045415 (Print_ret "Yes?");
    GamePrint "Yes?\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 045420
  }
LocOp 045420:
  TraceOperation 045420 (Je [Var (Global 203),Con 167] (Branch F (Dloc 045428)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),167)) {
    TraceOperation 045424 (Print_paddr (Var (Global 54)));
    Let b3 = M[008016];
    Let b4 = M[008017];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 045426 New_line;
    GamePrint "\n";
    TraceOperation 045427 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 045428
  }
LocOp 045428:
  TraceOperation 045428 (Je [Var (Global 203),Con 66] (Branch F (Dloc 045460)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 045432 (Je [Var (Global 202),Con 30] (Branch F (Dloc 045460)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 045436 (Jin (Var (Global 201)) (Con 31) (Branch F (Dloc 045452)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      if (Equal(31,Widen(b7))) {
        TraceOperation 045440 (Je [Var (Global 201),Con 111,Con 8] (Branch T (Dloc 045452)));
        Let b8 = M[008310];
        Let b9 = M[008311];
        if (LogOr(Equal(MakeHiLo(b8,b9),111),Equal(MakeHiLo(b8,b9),8))) {
          Jump: 045452
        } else {
          TraceOperation 045446 (Call (Floc 038210) [] Sp);
          PushFrame 045446;
          JumpCall: 038210, #actuals: 0
        }
      } else {
        Jump: 045452
      }
    } else {
      Jump: 045460
    }
  } else {
    Jump: 045460
  }
LocReturn 045446:
  PushStack call_result;
  TraceOperation 045451 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 045452:
  TraceOperation 045452 (Call (Floc 022042) [Con 124,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 045452;
  SetLocal 1 124;
  SetLocal 2 MakeHiLo(b1,b2);
  JumpCall: 022042, #actuals: 2
LocReturn 045452:
  PushStack call_result;
  TraceOperation 045459 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 045460:
  TraceOperation 045460 (Je [Var (Global 203),Con 98] (Branch F (Dloc 045470)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),98)) {
    TraceOperation 045464 (Call (Floc 040326) [] Sp);
    PushFrame 045464;
    JumpCall: 040326, #actuals: 0
  } else {
    Jump: 045470
  }
LocReturn 045464:
  PushStack call_result;
  TraceOperation 045469 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 045470:
  TraceOperation 045470 (Je [Var (Global 203),Con 129] (Branch F (Dloc 045480)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),129)) {
    TraceOperation 045474 (Call (Floc 028718) [] Sp);
    PushFrame 045474;
    JumpCall: 028718, #actuals: 0
  } else {
    Jump: 045480
  }
LocReturn 045474:
  PushStack call_result;
  TraceOperation 045479 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 045480:
  TraceOperation 045480 (Je [Var (Global 203),Con 45,Con 24] (Branch T (Dloc 045494)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),45),Equal(MakeHiLo(b1,b2),24))) {
    Jump: 045494
  } else {
    TraceOperation 045486 (Je [Var (Global 203),Con 132] (Branch F (Dloc 045502)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),132)) {
      TraceOperation 045490 (Je [Var (Global 202),Con 52] (Branch F (Dloc 045502)));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (Equal(MakeHiLo(b5,b6),52)) {
        Jump: 045494
      } else {
        Jump: 045502
      }
    } else {
      Jump: 045502
    }
  }
LocOp 045494:
  TraceOperation 045494 (Call (Floc 042734) [Con -9998] Sp);
  PushFrame 045494;
  SetLocal 1 -9998;
  JumpCall: 042734, #actuals: 1
LocReturn 045494:
  PushStack call_result;
  TraceOperation 045501 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 045502:
  TraceOperation 045502 (Je [Var (Global 203),Con 64] (Branch F (Dloc 045515)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 045506 (Print_ret "You're right here!");
    GamePrint "You're right here!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 045515
  }
LocOp 045515:
  TraceOperation 045515 (Je [Var (Global 203),Con 178] (Branch F (Dloc 045529)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),178)) {
    TraceOperation 045519 (Print "You are ");
    GamePrint "You are ";
    TraceOperation 045524 (Print_obj (Var (Global 120)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 045526 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 045526 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    Jump: 045529
  }
LocOp 045529:
  TraceOperation 045529 (Je [Var (Global 203),Con 61] (Branch F (Dloc 045576)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 045533 (Je [Var (Global 0),Con 81] (Branch F (Dloc 045576)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),81)) {
      TraceOperation 045537 (Print_ret "You look perfectly normal (except that you're two microns tall).");
      GamePrint "You look perfectly normal (except that you're two microns tall).\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 045576
    }
  } else {
    Jump: 045576
  }
LocOp 045576:
  TraceOperation 045576 (Je [Var (Global 203),Con 100] (Branch F (Dloc 045584)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),100)) {
    TraceOperation 045580 (Print_paddr (Var (Global 48)));
    Let b3 = M[008004];
    Let b4 = M[008005];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 045582 New_line;
    GamePrint "\n";
    TraceOperation 045583 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 045584
  }
LocOp 045584:
  TraceOperation 045584 (Je [Var (Global 203),Con 69] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 045588 (Print_ret "I'd like to, but like most computers I don't have legs.");
    GamePrint "I'd like to, but like most computers I don't have legs.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[333]--------------------------------------------------
LocRoutine 045620:
  MakeRoutineFrame 0;
  Jump: 045621
LocOp 045621:
  TraceOperation 045621 (Je [Var (Global 203),Con 63,Con 61,Con 90] (Branch F (Dloc 045634)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),61)),Equal(MakeHiLo(b1,b2),90))) {
    TraceOperation 045628 (Call (Floc 034400) [] Sp);
    PushFrame 045628;
    JumpCall: 034400, #actuals: 0
  } else {
    Jump: 045634
  }
LocReturn 045628:
  PushStack call_result;
  TraceOperation 045633 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 045634:
  TraceOperation 045634 (Je [Var (Global 203),Con 21,Con 38] (Branch F (Dloc 045646)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),21),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 045640 (Call (Floc 040326) [] Sp);
    PushFrame 045640;
    JumpCall: 040326, #actuals: 0
  } else {
    Jump: 045646
  }
LocReturn 045640:
  PushStack call_result;
  TraceOperation 045645 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 045646:
  TraceOperation 045646 (Je [Var (Global 203),Con 59,Con 86] (Branch F (Dloc 045659)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),59),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 045652 (Call (Floc 043620) [Con 26] Sp);
    PushFrame 045652;
    SetLocal 1 26;
    JumpCall: 043620, #actuals: 1
  } else {
    Jump: 045659
  }
LocReturn 045652:
  PushStack call_result;
  TraceOperation 045658 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 045659:
  TraceOperation 045659 (Je [Var (Global 203),Con 168] (Branch F (Dloc 045729)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 045664 (Je [Var (Global 0),Con 108] (Branch F (Dloc 045674)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),108)) {
      TraceOperation 045668 (Call (Floc 037874) [] Sp);
      PushFrame 045668;
      JumpCall: 037874, #actuals: 0
    } else {
      Jump: 045674
    }
  } else {
    Jump: 045729
  }
LocReturn 045668:
  PushStack call_result;
  TraceOperation 045673 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 045674:
  TraceOperation 045674 (Print_ret "Walking around the room reveals nothing new. To move elsewhere, just type the desired direction.");
  GamePrint "Walking around the room reveals nothing new. To move elsewhere, just type the desired direction.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 045729:
  TraceOperation 045729 (Je [Var (Global 203),Con 88] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 045733 (Call (Floc 022042) [Con 88,Con 45] Sp);
    PushFrame 045733;
    SetLocal 1 88;
    SetLocal 2 45;
    JumpCall: 022042, #actuals: 2
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 045733:
  PushStack call_result;
  TraceOperation 045740 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[334]--------------------------------------------------
LocRoutine 045742:
  MakeRoutineFrame 0;
  Jump: 045743
LocOp 045743:
  TraceOperation 045743 (Je [Var (Global 203),Con 174] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 045747 (Print_ret "That's for me to know and you to find out.");
    GamePrint "That's for me to know and you to find out.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[335]--------------------------------------------------
LocRoutine 045774:
  MakeRoutineFrame 0;
  Jump: 045775
LocOp 045775:
  TraceOperation 045775 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 045779 (Je [Var (Global 0),Con 66] (Branch F (Dloc 045845)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),66)) {
      TraceOperation 045784 (Print "The only control, other than those related to steering the boat, is the large red ");
      GamePrint "The only control, other than those related to steering the boat, is the large red ";
      TraceOperation 045833 (Print_obj (Con 58));
      Let b5 = M[001280];
      Let b6 = M[001281];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 045835 (Print ".");
        GamePrint ".";
        TraceOperation 045838 (Call (Floc 057998) [] Sp);
        PushFrame 045838;
        JumpCall: 057998, #actuals: 0
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 045835 (Print ".");
        GamePrint ".";
        TraceOperation 045838 (Call (Floc 057998) [] Sp);
        PushFrame 045838;
        JumpCall: 057998, #actuals: 0
      }
    } else {
      Jump: 045845
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocReturn 045838:
  PushStack call_result;
  TraceOperation 045843 New_line;
  GamePrint "\n";
  TraceOperation 045844 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 045845:
  TraceOperation 045845 (Je [Var (Global 0),Con 201] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),201)) {
    TraceOperation 045849 (Print "Most of the controls are beyond your comprehension. ");
    GamePrint "Most of the controls are beyond your comprehension. ";
    TraceOperation 045880 (Jin (Con 197) (Var (Global 0)) (Branch F (Dloc 045926)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[002528];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 045884 (Print "The simplest one is a ");
      GamePrint "The simplest one is a ";
      TraceOperation 045899 (Print_obj (Con 197));
      Let b6 = M[002531];
      Let b7 = M[002532];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 045901 (Print " of some kind.");
        GamePrint " of some kind.";
        TraceOperation 045910 (Jz (Var (Global 210)) (Branch T (Dloc 045924)));
        Let b9 = M[008328];
        Let b10 = M[008329];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 045924
        } else {
          TraceOperation 045913 (Print " ");
          GamePrint " ";
          TraceOperation 045916 (Call (Floc 022042) [Con 61,Con 197] Sp);
          PushFrame 045916;
          SetLocal 1 61;
          SetLocal 2 197;
          JumpCall: 022042, #actuals: 2
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 045901 (Print " of some kind.");
        GamePrint " of some kind.";
        TraceOperation 045910 (Jz (Var (Global 210)) (Branch T (Dloc 045924)));
        Let b11 = M[008328];
        Let b12 = M[008329];
        if (IsZero(MakeHiLo(b11,b12))) {
          Jump: 045924
        } else {
          TraceOperation 045913 (Print " ");
          GamePrint " ";
          TraceOperation 045916 (Call (Floc 022042) [Con 61,Con 197] Sp);
          PushFrame 045916;
          SetLocal 1 61;
          SetLocal 2 197;
          JumpCall: 022042, #actuals: 2
        }
      }
    } else {
      Jump: 045926
    }
  } else {
    PopFrame return_address_13;
    JumpReturn: return_address_13, result: 0
  }
LocReturn 045916:
  PushStack call_result;
  TraceOperation 045923 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 045924:
  TraceOperation 045924 New_line;
  GamePrint "\n";
  TraceOperation 045925 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[336]--------------------------------------------------
LocRoutine 045960:
  MakeRoutineFrame 0;
  Jump: 045961
LocOp 045961:
  TraceOperation 045961 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 045965 (Je [Var (Global 0),Con 149] (Branch F (Dloc 045982)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),149)) {
      TraceOperation 045969 (Print_ret "You can't hear anything from here.");
      GamePrint "You can't hear anything from here.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 045982
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 045982:
  TraceOperation 045982 (Call (Floc 022042) [Con 74,Con 84] Sp);
  PushFrame 045982;
  SetLocal 1 74;
  SetLocal 2 84;
  JumpCall: 022042, #actuals: 2
LocReturn 045982:
  PushStack call_result;
  TraceOperation 045989 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[337]--------------------------------------------------
LocRoutine 045990:
  MakeRoutineFrame 0;
  Jump: 045991
LocOp 045991:
  TraceOperation 045991 (Je [Con 27,Var (Global 195)] (Branch F (Dloc 046511)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(27,MakeHiLo(b1,b2))) {
    TraceOperation 045996 (Je [Var (Global 203),Con 150] (Branch F (Dloc 046019)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 046000 (Je [Var (Global 201),Con 30] (Branch F (Dloc 046019)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 046004 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 046007 (Call (Floc 022042) [Con 22,Con 27,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame 046007;
        SetLocal 1 22;
        SetLocal 2 27;
        SetLocal 3 MakeHiLo(b7,b8);
        JumpCall: 022042, #actuals: 3
      } else {
        Jump: 046019
      }
    } else {
      Jump: 046019
    }
  } else {
    Jump: 046511
  }
LocReturn 046007:
  PushStack call_result;
  TraceOperation 046015 (Store (Con 211) (Con 27));
  SetByte 008298 0;
  SetByte 008299 27;
  TraceOperation 046018 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 046019:
  TraceOperation 046019 (Je [Var (Global 203),Con 75] (Branch F (Dloc 046037)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 046023 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 046026 (Call (Floc 022042) [Con 75,Con 27] Sp);
    PushFrame 046026;
    SetLocal 1 75;
    SetLocal 2 27;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 046037
  }
LocReturn 046026:
  PushStack call_result;
  TraceOperation 046033 (Store (Con 211) (Con 27));
  SetByte 008298 0;
  SetByte 008299 27;
  TraceOperation 046036 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 046037:
  TraceOperation 046037 (Je [Var (Global 0),Con 54] (Branch F (Dloc 046460)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 046042 (Jin (Con 51) (Con 27) (Branch F (Dloc 046053)));
    Let b3 = M[001214];
    if (Equal(27,Widen(b3))) {
      TraceOperation 046046 (Je [Var (Global 203),Con 132] (Branch F (Dloc 046053)));
      Let b4 = M[008314];
      Let b5 = M[008315];
      if (Equal(MakeHiLo(b4,b5),132)) {
        TraceOperation 046050 (Jz (Var (Global 176)) (Branch F (Dloc 046068)));
        Let b6 = M[008260];
        Let b7 = M[008261];
        if (IsZero(MakeHiLo(b6,b7))) {
          Jump: 046053
        } else {
          Jump: 046068
        }
      } else {
        Jump: 046053
      }
    } else {
      Jump: 046053
    }
  } else {
    Jump: 046460
  }
LocOp 046053:
  TraceOperation 046053 (Jin (Con 51) (Con 27) (Branch F (Dloc 046133)));
  Let b1 = M[001214];
  if (Equal(27,Widen(b1))) {
    TraceOperation 046058 (Je [Var (Global 203),Con 53] (Branch F (Dloc 046133)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (Equal(MakeHiLo(b2,b3),53)) {
      TraceOperation 046063 (Je [Var (Global 201),Con 51] (Branch F (Dloc 046133)));
      Let b4 = M[008310];
      Let b5 = M[008311];
      if (Equal(MakeHiLo(b4,b5),51)) {
        Jump: 046068
      } else {
        Jump: 046133
      }
    } else {
      Jump: 046133
    }
  } else {
    Jump: 046133
  }
LocOp 046068:
  TraceOperation 046068 (Clear_attr (Con 51) (Con 27));
  Let b1 = M[001213];
  SetByte 001213 ClearBit(b1,4);
  TraceOperation 046071 (Call (Floc 022320) [Con -25112,Con 8] Sp);
  PushFrame 046071;
  SetLocal 1 -25112;
  SetLocal 2 8;
  JumpCall: 022320, #actuals: 2
LocReturn 046071:
  PushStack call_result;
  TraceOperation 046079 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 046084 (Insert_obj (Con 51) (Var (Global 0)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[001214];
  if (IsZero(Widen(b4))) {
    SetByte 001214 b3;
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    SetByte 001215 LoByte(Widen(b5));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 51;
    TraceOperation 046087 (Set_attr (Con 51) (Con 25));
    Let b6 = M[001213];
    SetByte 001213 SetBit(b6,6);
    TraceOperation 046090 (Set_attr (Con 51) (Con 21));
    Let b7 = M[001212];
    SetByte 001212 SetBit(b7,2);
    TraceOperation 046093 (Print "The guards hesitate, then toss their ");
    GamePrint "The guards hesitate, then toss their ";
    TraceOperation 046116 (Print_obj (Con 51));
    Let b8 = M[001217];
    Let b9 = M[001218];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    if (IsZeroByte(b10)) {
      GamePrint "";
      TraceOperation 046118 (Print_ret "s into a pile in front of you.");
      GamePrint "s into a pile in front of you.\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
      TraceOperation 046118 (Print_ret "s into a pile in front of you.");
      GamePrint "s into a pile in front of you.\n";
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    }
  } else {
    Let b13 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
    if (Equal(Widen(b13),51)) {
      Let b14 = M[001215];
      SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b14));
      SetByte 001214 b3;
      Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte 001215 LoByte(Widen(b15));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 51;
      TraceOperation 046087 (Set_attr (Con 51) (Con 25));
      Let b16 = M[001213];
      SetByte 001213 SetBit(b16,6);
      TraceOperation 046090 (Set_attr (Con 51) (Con 21));
      Let b17 = M[001212];
      SetByte 001212 SetBit(b17,2);
      TraceOperation 046093 (Print "The guards hesitate, then toss their ");
      GamePrint "The guards hesitate, then toss their ";
      TraceOperation 046116 (Print_obj (Con 51));
      Let b18 = M[001217];
      Let b19 = M[001218];
      Let b20 = M[Address(MakeHiLo(b18,b19))];
      if (IsZeroByte(b20)) {
        GamePrint "";
        TraceOperation 046118 (Print_ret "s into a pile in front of you.");
        GamePrint "s into a pile in front of you.\n";
        PopFrame return_address_21;
        JumpReturn: return_address_21, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b18,b19)),1));
        TraceOperation 046118 (Print_ret "s into a pile in front of you.");
        GamePrint "s into a pile in front of you.\n";
        PopFrame return_address_22;
        JumpReturn: return_address_22, result: 1
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 046133:
  TraceOperation 046133 (Je [Var (Global 203),Con 132] (Branch F (Dloc 046289)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 046138 (Jin (Con 51) (Con 27) (Branch F (Dloc 046150)));
    Let b3 = M[001214];
    if (Equal(27,Widen(b3))) {
      TraceOperation 046142 (Call (Floc 042734) [Con -9995] Sp);
      PushFrame 046142;
      SetLocal 1 -9995;
      JumpCall: 042734, #actuals: 1
    } else {
      Jump: 046150
    }
  } else {
    Jump: 046289
  }
LocReturn 046142:
  PushStack call_result;
  TraceOperation 046149 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[338]--------------------------------------------------
LocRoutine 046324:
  MakeRoutineFrame 0;
  Jump: 046325
LocOp 046325:
  TraceOperation 046325 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 046330 (Print_ret "They do so.");
  GamePrint "They do so.\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[339]--------------------------------------------------
LocRoutine 046370:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 30998;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -14038;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 -5535;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 -15274;
        }
      }
    }
  }
  Jump: 046379
LocOp 046379:
  TraceOperation 046379 (Inc (Con -7003));
  Let b1 = M[008206];
  Let b2 = M[008207];
  SetByte 008206 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008207 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 046382 (Print "You have failed to issue one of the small set of commands that the guards' military intelligences are trained to understand.");
  GamePrint "You have failed to issue one of the small set of commands that the guards' military intelligences are trained to understand.";
  TraceOperation 046453 New_line;
  GamePrint "\n";
  TraceOperation 046454 (Call (Floc 043634) [] Sp);
  PushFrame 046454;
  JumpCall: 043634, #actuals: 0
LocReturn 046454:
  PushStack call_result;
  TraceOperation 046459 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[340]--------------------------------------------------
LocRoutine 046466:
  MakeRoutineFrame 0;
  Jump: 046467
LocOp 046467:
  TraceOperation 046467 (Jz (Var Sp) (Branch T (Dloc 046493)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 046493
  } else {
    TraceOperation 046470 (Print "\"Resistance is useless!\"");
    GamePrint "\"Resistance is useless!\"";
    TraceOperation 046489 New_line;
    GamePrint "\n";
    TraceOperation 046490 (Jump 046505);
    Jump: 046505
  }
LocOp 046493:
  TraceOperation 046493 (Print "\"I");
  GamePrint "\"I";
  TraceOperation 046498 (Call (Floc 080570) [Con 1] Sp);
  PushFrame 046498;
  SetLocal 1 1;
  JumpCall: 080570, #actuals: 1
LocReturn 046498:
  PushStack call_result;
  TraceOperation 046504 New_line;
  GamePrint "\n";
  Jump: 046505
LocOp 046505:
  TraceOperation 046505 (Call (Floc 043634) [] Sp);
  PushFrame 046505;
  JumpCall: 043634, #actuals: 0
LocReturn 046505:
  PushStack call_result;
  TraceOperation 046510 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[341]--------------------------------------------------
LocRoutine 046528:
  MakeRoutineFrame 0;
  Jump: 046529
LocOp 046529:
  TraceOperation 046529 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[342]--------------------------------------------------
LocRoutine 046550:
  MakeRoutineFrame 0;
  Jump: 046551
LocOp 046551:
  TraceOperation 046551 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[343]--------------------------------------------------
LocRoutine 046586:
  MakeRoutineFrame 0;
  Jump: 046587
LocOp 046587:
  TraceOperation 046587 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 046590 (Print_paddr (Var (Global 31)));
    Let b2 = M[007970];
    Let b3 = M[007971];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 046592 (Call (Floc 042734) [Con -9983] Sp);
    PushFrame 046592;
    SetLocal 1 -9983;
    JumpCall: 042734, #actuals: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
LocReturn 046592:
  PushStack call_result;
  TraceOperation 046599 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[344]--------------------------------------------------
LocRoutine 046632:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 -21563;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 4909;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 1062;
      }
    }
  }
  Jump: 046639
LocOp 046639:
  TraceOperation 046639 (Call (Floc 092666) [] Sp);
  PushFrame 046639;
  JumpCall: 092666, #actuals: 0
LocReturn 046639:
  PushStack call_result;
  TraceOperation 046644 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[345]--------------------------------------------------
LocRoutine 046678:
  MakeRoutineFrame 0;
  Jump: 046679
LocOp 046679:
  TraceOperation 046679 (Jin (Con 27) (Var (Global 0)) (Branch T (Dloc 046694)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[000998];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 046694
  } else {
    TraceOperation 046683 (Print_ret "What weapon?");
    GamePrint "What weapon?\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
--[346]--------------------------------------------------
LocRoutine 046706:
  MakeRoutineFrame 0;
  Jump: 046707
LocOp 046707:
  TraceOperation 046707 (Je [Var (Global 203),Con 57] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 046711 (Print_paddr (Var (Global 48)));
    Let b3 = M[008004];
    Let b4 = M[008005];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 046713 New_line;
    GamePrint "\n";
    TraceOperation 046714 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
--[347]--------------------------------------------------
LocRoutine 046716:
  MakeRoutineFrame 0;
  Jump: 046717
LocOp 046717:
  TraceOperation 046717 (Je [Var (Global 203),Con 22] (Branch F (Dloc 046725)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 046721 (Je [Var (Global 201),Con 1] (Branch T Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),1)) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 046725
    }
  } else {
    Jump: 046725
  }
LocOp 046725:
  TraceOperation 046725 (Print_ret "That's not important; leave it alone.");
  GamePrint "That's not important; leave it alone.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[348]--------------------------------------------------
LocRoutine 046754:
  MakeRoutineFrame 0;
  Jump: 046755
LocOp 046755:
  TraceOperation 046755 (Je [Var (Global 203),Con 104] (Branch F (Dloc 046846)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),104)) {
    TraceOperation 046760 (Random (Con 100) Sp);
    LetRandom random3 100;
    PushStack random3;
    TraceOperation 046764 (Jl (Con 50) (Var Sp) (Branch T (Dloc 046811)));
    PopStack popped4;
    if (LessThan(50,popped4)) {
      Jump: 046811
    } else {
      TraceOperation 046768 (Print_ret "Very clever. It looks like there's a lot you should be panicking about.");
      GamePrint "Very clever. It looks like there's a lot you should be panicking about.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 046846
  }
LocOp 046811:
  TraceOperation 046811 (Print_ret "Why not? Your position appears quite hopeless.");
  GamePrint "Why not? Your position appears quite hopeless.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 046846:
  TraceOperation 046846 (Je [Var (Global 203),Con 90] (Branch F (Dloc 046861)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),90)) {
    TraceOperation 046850 (Store (Con 192) (Con 0));
    SetByte 008260 0;
    SetByte 008261 0;
    TraceOperation 046853 (Call (Floc 022042) [Con 39,Con 33] Sp);
    PushFrame 046853;
    SetLocal 1 39;
    SetLocal 2 33;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 046861
  }
LocReturn 046853:
  PushStack call_result;
  TraceOperation 046860 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 046861:
  TraceOperation 046861 (Je [Var (Global 203),Con 165] (Branch F (Dloc 046878)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),165)) {
    TraceOperation 046865 (Print_ret "Time doesn't pass...");
    GamePrint "Time doesn't pass...\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 046878
  }
LocOp 046878:
  TraceOperation 046878 (Je [Var (Global 203),Con 124] (Branch F (Dloc 046891)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 046882 (Print_ret "Not taken.");
    GamePrint "Not taken.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 046891
  }
LocOp 046891:
  TraceOperation 046891 (Je [Var (Global 203),Con 74] (Branch F (Dloc 046915)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 046895 (Call (Floc 043370) [Con 105] Sp);
    PushFrame 046895;
    SetLocal 1 105;
    JumpCall: 043370, #actuals: 1
  } else {
    Jump: 046915
  }
LocReturn 046895:
  PushStack call_result;
  TraceOperation 046901 (Jz (Var Sp) (Branch T (Dloc 046915)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 046915
  } else {
    TraceOperation 046904 (Store (Con 192) (Con 0));
    SetByte 008260 0;
    SetByte 008261 0;
    TraceOperation 046907 (Call (Floc 022042) [Con 74,Con 105] Sp);
    PushFrame 046907;
    SetLocal 1 74;
    SetLocal 2 105;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 046907:
  PushStack call_result;
  TraceOperation 046914 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 046915:
  TraceOperation 046915 (Print_ret "Not done.");
  GamePrint "Not done.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[349]--------------------------------------------------
LocRoutine 046924:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 046927
LocOp 046927:
  TraceOperation 046927 (Je [Var (Local 1),Con 2] (Branch F (Dloc 047142)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 046932 (Put_prop (Con 31) (Con 29) (Con 23574));
    Let b1 = M[001037];
    Let b2 = M[001038];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    Error: getPropsA
  } else {
    Jump: 047142
  }
LocReturn 046938:
  PushStack call_result;
  TraceOperation 046945 (Set_attr (Con 148) (Con 6));
  Let b1 = M[002083];
  SetByte 002083 SetBit(b1,1);
  TraceOperation 046948 (Store (Con 91) (Con 0));
  SetByte 008058 0;
  SetByte 008059 0;
  TraceOperation 046951 (Store (Con 102) (Con 0));
  SetByte 008080 0;
  SetByte 008081 0;
  Jump: 046954
LocOp 046954:
  TraceOperation 046954 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 046958 (Jl (Var (Global 82)) (Var Sp) (Branch T (Dloc 046977)));
  Let b2 = M[008072];
  Let b3 = M[008073];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 046977
  } else {
    TraceOperation 046962 (Store (Con 98) (Con 0));
    SetByte 008072 0;
    SetByte 008073 0;
    TraceOperation 046965 (Store (Con 99) (Con 10));
    SetByte 008074 0;
    SetByte 008075 10;
    TraceOperation 046968 (Store (Con 89) (Con 190));
    SetByte 008054 0;
    SetByte 008055 190;
    TraceOperation 046971 (Store (Con 88) (Con 3));
    SetByte 008052 0;
    SetByte 008053 3;
    TraceOperation 046974 (Jump 047137);
    Jump: 047137
  }
LocOp 046977:
  TraceOperation 046977 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 046981 (Jl (Var (Global 83)) (Var Sp) (Branch T (Dloc 047000)));
  Let b2 = M[008074];
  Let b3 = M[008075];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047000
  } else {
    TraceOperation 046985 (Store (Con 99) (Con 0));
    SetByte 008074 0;
    SetByte 008075 0;
    TraceOperation 046988 (Store (Con 98) (Con 100));
    SetByte 008072 0;
    SetByte 008073 100;
    TraceOperation 046991 (Store (Con 89) (Con 121));
    SetByte 008054 0;
    SetByte 008055 121;
    TraceOperation 046994 (Store (Con 88) (Con 0));
    SetByte 008052 0;
    SetByte 008053 0;
    TraceOperation 046997 (Jump 047137);
    Jump: 047137
  }
LocOp 047000:
  TraceOperation 047000 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047004 (Jl (Var (Global 81)) (Var Sp) (Branch T (Dloc 047033)));
  Let b2 = M[008070];
  Let b3 = M[008071];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047033
  } else {
    TraceOperation 047008 (Je [Var (Global 81),Con 10] (Branch T (Dloc 047024)));
    Let b5 = M[008070];
    Let b6 = M[008071];
    if (Equal(MakeHiLo(b5,b6),10)) {
      Jump: 047024
    } else {
      TraceOperation 047012 (Store (Con 97) (Con 10));
      SetByte 008070 0;
      SetByte 008071 10;
      TraceOperation 047015 (Store (Con 94) (Con 25));
      SetByte 008064 0;
      SetByte 008065 25;
      TraceOperation 047018 (Store (Con 92) (Con 25));
      SetByte 008060 0;
      SetByte 008061 25;
      TraceOperation 047021 (Store (Con 93) (Con 25));
      SetByte 008062 0;
      SetByte 008063 25;
      Jump: 047024
    }
  }
LocOp 047024:
  TraceOperation 047024 (Store (Con 89) (Con 99));
  SetByte 008054 0;
  SetByte 008055 99;
  TraceOperation 047027 (Store (Con 88) (Con 4));
  SetByte 008052 0;
  SetByte 008053 4;
  TraceOperation 047030 (Jump 047137);
  Jump: 047137
LocOp 047033:
  TraceOperation 047033 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047037 (Jl (Var (Global 78)) (Var Sp) (Branch T (Dloc 047053)));
  Let b2 = M[008064];
  Let b3 = M[008065];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047053
  } else {
    TraceOperation 047041 (Store (Con 94) (Con 10));
    SetByte 008064 0;
    SetByte 008065 10;
    TraceOperation 047044 (Store (Con 89) (Con 76));
    SetByte 008054 0;
    SetByte 008055 76;
    TraceOperation 047047 (Store (Con 88) (Con 2));
    SetByte 008052 0;
    SetByte 008053 2;
    TraceOperation 047050 (Jump 047137);
    Jump: 047137
  }
LocOp 047053:
  TraceOperation 047053 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047057 (Jl (Var (Global 76)) (Var Sp) (Branch T (Dloc 047073)));
  Let b2 = M[008060];
  Let b3 = M[008061];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047073
  } else {
    TraceOperation 047061 (Store (Con 92) (Con 10));
    SetByte 008060 0;
    SetByte 008061 10;
    TraceOperation 047064 (Store (Con 89) (Con 137));
    SetByte 008054 0;
    SetByte 008055 137;
    TraceOperation 047067 (Store (Con 88) (Con 1));
    SetByte 008052 0;
    SetByte 008053 1;
    TraceOperation 047070 (Jump 047137);
    Jump: 047137
  }
LocOp 047073:
  TraceOperation 047073 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047077 (Jl (Var (Global 77)) (Var Sp) (Branch T (Dloc 047093)));
  Let b2 = M[008062];
  Let b3 = M[008063];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047093
  } else {
    TraceOperation 047081 (Store (Con 93) (Con 10));
    SetByte 008062 0;
    SetByte 008063 10;
    TraceOperation 047084 (Store (Con 89) (Con 66));
    SetByte 008054 0;
    SetByte 008055 66;
    TraceOperation 047087 (Store (Con 88) (Con 5));
    SetByte 008052 0;
    SetByte 008053 5;
    TraceOperation 047090 (Jump 047137);
    Jump: 047137
  }
LocOp 047093:
  TraceOperation 047093 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047097 (Jl (Var (Global 80)) (Var Sp) (Branch T (Dloc 047113)));
  Let b2 = M[008068];
  Let b3 = M[008069];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047113
  } else {
    TraceOperation 047101 (Store (Con 96) (Con 10));
    SetByte 008068 0;
    SetByte 008069 10;
    TraceOperation 047104 (Store (Con 89) (Con 86));
    SetByte 008054 0;
    SetByte 008055 86;
    TraceOperation 047107 (Store (Con 88) (Con 7));
    SetByte 008052 0;
    SetByte 008053 7;
    TraceOperation 047110 (Jump 047137);
    Jump: 047137
  }
LocOp 047113:
  TraceOperation 047113 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047117 (Jl (Var (Global 79)) (Var Sp) (Branch T (Dloc 047137)));
  Let b2 = M[008066];
  Let b3 = M[008067];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047137
  } else {
    TraceOperation 047121 (Print "Bug #60");
    GamePrint "Bug #60";
    TraceOperation 047130 New_line;
    GamePrint "\n";
    TraceOperation 047131 (Store (Con 89) (Con 213));
    SetByte 008054 0;
    SetByte 008055 213;
    TraceOperation 047134 (Store (Con 88) (Con 6));
    SetByte 008052 0;
    SetByte 008053 6;
    Jump: 047137
  }
LocOp 047137:
  TraceOperation 047137 (Jz (Var (Global 73)) (Branch T (Dloc 046954)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 046954
  } else {
    TraceOperation 047141 Rfalse;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 047142:
  TraceOperation 047142 (Je [Var (Local 1),Con 3] (Branch T Dtrue));
  if (Equal(GetLocal(1),3)) {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    TraceOperation 047146 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
--[350]--------------------------------------------------
LocRoutine 047148:
  MakeRoutineFrame 0;
  Jump: 047149
LocOp 047149:
  TraceOperation 047149 (Je [Var (Global 203),Con 8,Con 7,Con 6] (Branch T Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),7)),Equal(MakeHiLo(b1,b2),6))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 047156 (Je [Var (Global 203),Con 9,Con 13,Con 10] (Branch T Dfalse));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),9),Equal(MakeHiLo(b4,b5),13)),Equal(MakeHiLo(b4,b5),10))) {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      TraceOperation 047163 (Je [Var (Global 203),Con 0,Con 76,Con 16] (Branch T Dfalse));
      Let b7 = M[008314];
      Let b8 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),0),Equal(MakeHiLo(b7,b8),76)),Equal(MakeHiLo(b7,b8),16))) {
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 0
      } else {
        TraceOperation 047170 (Je [Var (Global 203),Con 11,Con 2,Con 1] (Branch T Dfalse));
        Let b10 = M[008314];
        Let b11 = M[008315];
        if (LogOr(LogOr(Equal(MakeHiLo(b10,b11),11),Equal(MakeHiLo(b10,b11),2)),Equal(MakeHiLo(b10,b11),1))) {
          PopFrame return_address_12;
          JumpReturn: return_address_12, result: 0
        } else {
          TraceOperation 047177 (Je [Var (Global 203),Con 70,Con 12] (Branch T Dfalse));
          Let b13 = M[008314];
          Let b14 = M[008315];
          if (LogOr(Equal(MakeHiLo(b13,b14),70),Equal(MakeHiLo(b13,b14),12))) {
            PopFrame return_address_15;
            JumpReturn: return_address_15, result: 0
          } else {
            TraceOperation 047183 (Jz (Var (Global 176)) (Branch F Dfalse));
            Let b16 = M[008260];
            Let b17 = M[008261];
            if (IsZero(MakeHiLo(b16,b17))) {
              TraceOperation 047186 (Je [Var (Global 203),Con 180,Con 104] (Branch F (Dloc 047225)));
              Let b18 = M[008314];
              Let b19 = M[008315];
              if (LogOr(Equal(MakeHiLo(b18,b19),180),Equal(MakeHiLo(b18,b19),104))) {
                TraceOperation 047192 (Print_ret "You yell as loudly as you can, but no sound emerges.");
                GamePrint "You yell as loudly as you can, but no sound emerges.\n";
                PopFrame return_address_20;
                JumpReturn: return_address_20, result: 1
              } else {
                Jump: 047225
              }
            } else {
              PopFrame return_address_21;
              JumpReturn: return_address_21, result: 0
            }
          }
        }
      }
    }
  }
LocOp 047225:
  TraceOperation 047225 (Je [Var (Global 203),Con 122] (Branch T (Dloc 047239)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),122)) {
    Jump: 047239
  } else {
    TraceOperation 047229 (Je [Var (Global 203),Con 57] (Branch F (Dloc 047342)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),57)) {
      TraceOperation 047234 (Je [Var (Global 201),Con 24] (Branch F (Dloc 047342)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),24)) {
        Jump: 047239
      } else {
        Jump: 047342
      }
    } else {
      Jump: 047342
    }
  }
LocOp 047239:
  TraceOperation 047239 (Print_ret "You achieve a state of Negative Capability, and are able to be in uncertainties, mysteries, doubts, without any irritable searching after fact and reason (Footnote 1).");
  GamePrint "You achieve a state of Negative Capability, and are able to be in uncertainties, mysteries, doubts, without any irritable searching after fact and reason (Footnote 1).\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 047342:
  TraceOperation 047342 (Je [Var (Global 73),Con 190,Con 86] (Branch F (Dloc 047442)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (LogOr(Equal(MakeHiLo(b1,b2),190),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 047349 (Je [Var (Global 203),Con 74] (Branch F (Dloc 047442)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),74)) {
      TraceOperation 047354 (Je [Var (Global 201),Con 24] (Branch F (Dloc 047442)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),24)) {
        TraceOperation 047359 (Call (Floc 048958) [] Sp);
        PushFrame 047359;
        JumpCall: 048958, #actuals: 0
      } else {
        Jump: 047442
      }
    } else {
      Jump: 047442
    }
  } else {
    Jump: 047442
  }
LocReturn 047359:
  PushStack call_result;
  TraceOperation 047364 (Jz (Var Sp) (Branch T (Dloc 047442)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 047442
  } else {
    TraceOperation 047368 (Insert_obj (Con 20) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[000935];
    if (IsZero(Widen(b4))) {
      SetByte 000935 b3;
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte 000936 LoByte(Widen(b5));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 20;
      TraceOperation 047371 (Store (Con 207) (Con 20));
      SetByte 008290 0;
      SetByte 008291 20;
      TraceOperation 047374 (Print "You hear the deep and distant hum of a ");
      GamePrint "You hear the deep and distant hum of a ";
      TraceOperation 047397 (Print_obj (Con 20));
      Let b6 = M[000938];
      Let b7 = M[000939];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 047399 (Print " coming from far ");
        GamePrint " coming from far ";
        TraceOperation 047410 (Je [Var (Global 73),Con 190] (Branch F (Dloc 047422)));
        Let b9 = M[008054];
        Let b10 = M[008055];
        if (Equal(MakeHiLo(b9,b10),190)) {
          TraceOperation 047414 (Print "above");
          GamePrint "above";
          TraceOperation 047419 (Jump 047427);
          Jump: 047427
        } else {
          Jump: 047422
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 047399 (Print " coming from far ");
        GamePrint " coming from far ";
        TraceOperation 047410 (Je [Var (Global 73),Con 190] (Branch F (Dloc 047422)));
        Let b11 = M[008054];
        Let b12 = M[008055];
        if (Equal(MakeHiLo(b11,b12),190)) {
          TraceOperation 047414 (Print "above");
          GamePrint "above";
          TraceOperation 047419 (Jump 047427);
          Jump: 047427
        } else {
          Jump: 047422
        }
      }
    } else {
      Let b13 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b13),20)) {
        Let b14 = M[000936];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b14));
        SetByte 000935 b3;
        Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
        SetByte 000936 LoByte(Widen(b15));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 20;
        TraceOperation 047371 (Store (Con 207) (Con 20));
        SetByte 008290 0;
        SetByte 008291 20;
        TraceOperation 047374 (Print "You hear the deep and distant hum of a ");
        GamePrint "You hear the deep and distant hum of a ";
        TraceOperation 047397 (Print_obj (Con 20));
        Let b16 = M[000938];
        Let b17 = M[000939];
        Let b18 = M[Address(MakeHiLo(b16,b17))];
        if (IsZeroByte(b18)) {
          GamePrint "";
          TraceOperation 047399 (Print " coming from far ");
          GamePrint " coming from far ";
          TraceOperation 047410 (Je [Var (Global 73),Con 190] (Branch F (Dloc 047422)));
          Let b19 = M[008054];
          Let b20 = M[008055];
          if (Equal(MakeHiLo(b19,b20),190)) {
            TraceOperation 047414 (Print "above");
            GamePrint "above";
            TraceOperation 047419 (Jump 047427);
            Jump: 047427
          } else {
            Jump: 047422
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b16,b17)),1));
          TraceOperation 047399 (Print " coming from far ");
          GamePrint " coming from far ";
          TraceOperation 047410 (Je [Var (Global 73),Con 190] (Branch F (Dloc 047422)));
          Let b21 = M[008054];
          Let b22 = M[008055];
          if (Equal(MakeHiLo(b21,b22),190)) {
            TraceOperation 047414 (Print "above");
            GamePrint "above";
            TraceOperation 047419 (Jump 047427);
            Jump: 047427
          } else {
            Jump: 047422
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 047422:
  TraceOperation 047422 (Print "below");
  GamePrint "below";
  Jump: 047427
LocOp 047427:
  TraceOperation 047427 (Print_ret ". There is an exit to port.");
  GamePrint ". There is an exit to port.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 047442:
  TraceOperation 047442 (Je [Var (Global 203),Con 169] (Branch F (Dloc 047539)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    TraceOperation 047447 (Call (Floc 048958) [] Sp);
    PushFrame 047447;
    JumpCall: 048958, #actuals: 0
  } else {
    Jump: 047539
  }
LocReturn 047447:
  PushStack call_result;
  TraceOperation 047452 (Jz (Var Sp) (Branch T (Dloc 047539)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 047539
  } else {
    TraceOperation 047456 (Je [Var (Global 73),Con 86,Con 190] (Branch F (Dloc 047539)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),86),Equal(MakeHiLo(b2,b3),190))) {
      TraceOperation 047463 (Jin (Con 20) (Var (Global 0)) (Branch F (Dloc 047539)));
      Let b4 = M[007908];
      Let b5 = M[007909];
      Let b6 = M[000935];
      if (Equal(MakeHiLo(b4,b5),Widen(b6))) {
        TraceOperation 047468 (Je [Var (Global 201),Con 16] (Branch F (Dloc 047505)));
        Let b7 = M[008310];
        Let b8 = M[008311];
        if (Equal(MakeHiLo(b7,b8),16)) {
          TraceOperation 047472 (Jl (Var (Global 70)) (Con 4) (Branch F (Dloc 047478)));
          Let b9 = M[008048];
          Let b10 = M[008049];
          if (LessThan(MakeHiLo(b9,b10),4)) {
            TraceOperation 047476 (Print_paddr (Var (Global 60)));
            Let b11 = M[008028];
            Let b12 = M[008029];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
            Jump: 047478
          } else {
            Jump: 047478
          }
        } else {
          Jump: 047505
        }
      } else {
        Jump: 047539
      }
    } else {
      Jump: 047539
    }
  }
LocOp 047478:
  TraceOperation 047478 (Print "You emerge from a small doorway...");
  GamePrint "You emerge from a small doorway...";
  TraceOperation 047499 (Call (Floc 048670) [] Sp);
  PushFrame 047499;
  JumpCall: 048670, #actuals: 0
LocReturn 047499:
  PushStack call_result;
  TraceOperation 047504 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 047505:
  TraceOperation 047505 (Print_paddr (Var (Global 55)));
  Let b1 = M[008018];
  Let b2 = M[008019];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 047507 (Je [Var (Global 201),Con 19] (Branch F (Dloc 047537)));
  Let b3 = M[008310];
  Let b4 = M[008311];
  if (Equal(MakeHiLo(b3,b4),19)) {
    TraceOperation 047511 (Inc (Con 86));
    Let b5 = M[008048];
    Let b6 = M[008049];
    SetByte 008048 HiByte(Add(MakeHiLo(b5,b6),1));
    SetByte 008049 LoByte(Add(MakeHiLo(b5,b6),1));
    TraceOperation 047513 (Je [Var (Global 70),Con 4] (Branch F (Dloc 047537)));
    Let b7 = M[008048];
    Let b8 = M[008049];
    if (Equal(MakeHiLo(b7,b8),4)) {
      TraceOperation 047517 (Print " ");
      GamePrint " ";
      TraceOperation 047520 (Print_paddr (Var (Global 60)));
      Let b9 = M[008028];
      Let b10 = M[008029];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
      TraceOperation 047522 (Print "There is an exit aft...");
      GamePrint "There is an exit aft...";
      Jump: 047537
    } else {
      Jump: 047537
    }
  } else {
    Jump: 047537
  }
LocOp 047537:
  TraceOperation 047537 New_line;
  GamePrint "\n";
  TraceOperation 047538 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 047539:
  TraceOperation 047539 (Je [Var (Global 201),Con 20] (Branch T (Dloc 047547)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),20)) {
    Jump: 047547
  } else {
    TraceOperation 047543 (Je [Var (Global 202),Con 20] (Branch F (Dloc 047603)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),20)) {
      Jump: 047547
    } else {
      Jump: 047603
    }
  }
LocOp 047547:
  TraceOperation 047547 (Je [Var (Global 203),Con 169] (Branch T (Dloc 047603)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    Jump: 047603
  } else {
    TraceOperation 047551 (Je [Var (Global 73),Con 190,Con 86] (Branch T (Dloc 047564)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (LogOr(Equal(MakeHiLo(b3,b4),190),Equal(MakeHiLo(b3,b4),86))) {
      Jump: 047564
    } else {
      TraceOperation 047557 (Call (Floc 057596) [Con 20] Sp);
      PushFrame 047557;
      SetLocal 1 20;
      JumpCall: 057596, #actuals: 1
    }
  }
LocReturn 047557:
  PushStack call_result;
  TraceOperation 047563 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 047564:
  TraceOperation 047564 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 047568 (Print "The sound comes from far ");
    GamePrint "The sound comes from far ";
    TraceOperation 047583 (Je [Var (Global 73),Con 190] (Branch F (Dloc 047595)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (Equal(MakeHiLo(b3,b4),190)) {
      TraceOperation 047587 (Print "above");
      GamePrint "above";
      TraceOperation 047592 (Jump 047600);
      Jump: 047600
    } else {
      Jump: 047595
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 047595:
  TraceOperation 047595 (Print "below");
  GamePrint "below";
  Jump: 047600
LocOp 047600:
  TraceOperation 047600 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 047603:
  TraceOperation 047603 (Je [Var (Global 73),Con 137,Con 66] (Branch F (Dloc 047690)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (LogOr(Equal(MakeHiLo(b1,b2),137),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 047610 (Je [Var (Global 203),Con 61] (Branch F (Dloc 047690)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),61)) {
      TraceOperation 047615 (Je [Var (Global 201),Con 24] (Branch F (Dloc 047690)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),24)) {
        TraceOperation 047620 (Call (Floc 048958) [] Sp);
        PushFrame 047620;
        JumpCall: 048958, #actuals: 0
      } else {
        Jump: 047690
      }
    } else {
      Jump: 047690
    }
  } else {
    Jump: 047690
  }
LocReturn 047620:
  PushStack call_result;
  TraceOperation 047625 (Jz (Var Sp) (Branch T (Dloc 047690)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 047690
  } else {
    TraceOperation 047629 (Insert_obj (Con 21) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[000944];
    if (IsZero(Widen(b4))) {
      SetByte 000944 b3;
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte 000945 LoByte(Widen(b5));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 21;
      TraceOperation 047632 (Store (Con 207) (Con 21));
      SetByte 008290 0;
      SetByte 008291 21;
      TraceOperation 047635 (Print "You see a painfully bright light that stabs at the ");
      GamePrint "You see a painfully bright light that stabs at the ";
      TraceOperation 047664 (Je [Var (Global 73),Con 137] (Branch F (Dloc 047676)));
      Let b6 = M[008054];
      Let b7 = M[008055];
      if (Equal(MakeHiLo(b6,b7),137)) {
        TraceOperation 047668 (Print "front");
        GamePrint "front";
        TraceOperation 047673 (Jump 047681);
        Jump: 047681
      } else {
        Jump: 047676
      }
    } else {
      Let b8 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b8),21)) {
        Let b9 = M[000945];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b9));
        SetByte 000944 b3;
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
        SetByte 000945 LoByte(Widen(b10));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 21;
        TraceOperation 047632 (Store (Con 207) (Con 21));
        SetByte 008290 0;
        SetByte 008291 21;
        TraceOperation 047635 (Print "You see a painfully bright light that stabs at the ");
        GamePrint "You see a painfully bright light that stabs at the ";
        TraceOperation 047664 (Je [Var (Global 73),Con 137] (Branch F (Dloc 047676)));
        Let b11 = M[008054];
        Let b12 = M[008055];
        if (Equal(MakeHiLo(b11,b12),137)) {
          TraceOperation 047668 (Print "front");
          GamePrint "front";
          TraceOperation 047673 (Jump 047681);
          Jump: 047681
        } else {
          Jump: 047676
        }
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 047676:
  TraceOperation 047676 (Print "back");
  GamePrint "back";
  Jump: 047681
LocOp 047681:
  TraceOperation 047681 (Print_ret " of your eyes.");
  GamePrint " of your eyes.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 047690:
  TraceOperation 047690 (Je [Var (Global 201),Con 21] (Branch T (Dloc 047699)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),21)) {
    Jump: 047699
  } else {
    TraceOperation 047694 (Je [Var (Global 202),Con 21] (Branch F (Dloc 047790)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),21)) {
      Jump: 047699
    } else {
      Jump: 047790
    }
  }
LocOp 047699:
  TraceOperation 047699 (Je [Var (Global 203),Con 169] (Branch T (Dloc 047790)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    Jump: 047790
  } else {
    TraceOperation 047704 (Je [Var (Global 73),Con 66,Con 137] (Branch T (Dloc 047717)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (LogOr(Equal(MakeHiLo(b3,b4),66),Equal(MakeHiLo(b3,b4),137))) {
      Jump: 047717
    } else {
      TraceOperation 047710 (Call (Floc 057596) [Con 21] Sp);
      PushFrame 047710;
      SetLocal 1 21;
      JumpCall: 057596, #actuals: 1
    }
  }
LocReturn 047710:
  PushStack call_result;
  TraceOperation 047716 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 047717:
  TraceOperation 047717 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 047721 (Print "The light resolves itself into the bright ");
    GamePrint "The light resolves itself into the bright ";
    TraceOperation 047746 (Je [Var (Global 73),Con 137] (Branch F (Dloc 047768)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (Equal(MakeHiLo(b3,b4),137)) {
      TraceOperation 047750 (Print "yellow Sun of Earth");
      GamePrint "yellow Sun of Earth";
      TraceOperation 047765 (Jump 047781);
      Jump: 047781
    } else {
      Jump: 047768
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 047768:
  TraceOperation 047768 (Print "orange Sun of ");
  GamePrint "orange Sun of ";
  TraceOperation 047779 (Print_obj (Con 67));
  Let b1 = M[001361];
  Let b2 = M[001362];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    Jump: 047781
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    Jump: 047781
  }
LocOp 047781:
  TraceOperation 047781 (Print ".");
  GamePrint ".";
  TraceOperation 047784 (Call (Floc 048670) [] Sp);
  PushFrame 047784;
  JumpCall: 048670, #actuals: 0
LocReturn 047784:
  PushStack call_result;
  TraceOperation 047789 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 047790:
  TraceOperation 047790 (Je [Var (Global 73),Con 76,Con 213] (Branch F (Dloc 047887)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (LogOr(Equal(MakeHiLo(b1,b2),76),Equal(MakeHiLo(b1,b2),213))) {
    TraceOperation 047797 (Je [Var (Global 203),Con 159] (Branch F (Dloc 047887)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),159)) {
      TraceOperation 047802 (Je [Var (Global 201),Con 24] (Branch F (Dloc 047887)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),24)) {
        TraceOperation 047807 (Call (Floc 048958) [] Sp);
        PushFrame 047807;
        JumpCall: 048958, #actuals: 0
      } else {
        Jump: 047887
      }
    } else {
      Jump: 047887
    }
  } else {
    Jump: 047887
  }
LocReturn 047807:
  PushStack call_result;
  TraceOperation 047812 (Jz (Var Sp) (Branch T (Dloc 047887)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 047887
  } else {
    TraceOperation 047816 (Insert_obj (Con 22) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[000953];
    if (IsZero(Widen(b4))) {
      SetByte 000953 b3;
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte 000954 LoByte(Widen(b5));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 22;
      TraceOperation 047819 (Store (Con 207) (Con 22));
      SetByte 008290 0;
      SetByte 008291 22;
      TraceOperation 047822 (Print "It does feel a bit ");
      GamePrint "It does feel a bit ";
      TraceOperation 047835 (Je [Var (Global 73),Con 76] (Branch F (Dloc 047847)));
      Let b6 = M[008054];
      Let b7 = M[008055];
      if (Equal(MakeHiLo(b6,b7),76)) {
        TraceOperation 047839 (Print "cold");
        GamePrint "cold";
        TraceOperation 047844 (Jump 047852);
        Jump: 047852
      } else {
        Jump: 047847
      }
    } else {
      Let b8 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b8),22)) {
        Let b9 = M[000954];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b9));
        SetByte 000953 b3;
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
        SetByte 000954 LoByte(Widen(b10));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 22;
        TraceOperation 047819 (Store (Con 207) (Con 22));
        SetByte 008290 0;
        SetByte 008291 22;
        TraceOperation 047822 (Print "It does feel a bit ");
        GamePrint "It does feel a bit ";
        TraceOperation 047835 (Je [Var (Global 73),Con 76] (Branch F (Dloc 047847)));
        Let b11 = M[008054];
        Let b12 = M[008055];
        if (Equal(MakeHiLo(b11,b12),76)) {
          TraceOperation 047839 (Print "cold");
          GamePrint "cold";
          TraceOperation 047844 (Jump 047852);
          Jump: 047852
        } else {
          Jump: 047847
        }
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 047847:
  TraceOperation 047847 (Print "warm");
  GamePrint "warm";
  Jump: 047852
LocOp 047852:
  TraceOperation 047852 (Print_ret " and wet and squishy. There seems to be some liquid at your fingertips.");
  GamePrint " and wet and squishy. There seems to be some liquid at your fingertips.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 047887:
  TraceOperation 047887 (Je [Var (Global 201),Con 22] (Branch T (Dloc 047896)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),22)) {
    Jump: 047896
  } else {
    TraceOperation 047891 (Je [Var (Global 202),Con 22] (Branch F (Dloc 048109)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),22)) {
      Jump: 047896
    } else {
      Jump: 048109
    }
  }
LocOp 047896:
  TraceOperation 047896 (Je [Var (Global 203),Con 169] (Branch T (Dloc 048109)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    Jump: 048109
  } else {
    TraceOperation 047901 (Je [Var (Global 73),Con 76,Con 213] (Branch T (Dloc 047914)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (LogOr(Equal(MakeHiLo(b3,b4),76),Equal(MakeHiLo(b3,b4),213))) {
      Jump: 047914
    } else {
      TraceOperation 047907 (Call (Floc 057596) [Con 22] Sp);
      PushFrame 047907;
      SetLocal 1 22;
      JumpCall: 057596, #actuals: 1
    }
  }
LocReturn 047907:
  PushStack call_result;
  TraceOperation 047913 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 047914:
  TraceOperation 047914 (Je [Var (Global 73),Con 76] (Branch F (Dloc 048011)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),76)) {
    TraceOperation 047919 (Je [Var (Global 203),Con 159,Con 61] (Branch F (Dloc 047936)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),159),Equal(MakeHiLo(b3,b4),61))) {
      TraceOperation 047925 (Print_ret "It seems coldish.");
      GamePrint "It seems coldish.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 047936
    }
  } else {
    Jump: 048011
  }
LocOp 047936:
  TraceOperation 047936 (Je [Var (Global 203),Con 51,Con 149] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),51),Equal(MakeHiLo(b1,b2),149))) {
    TraceOperation 047942 (Print "It tastes just like wine. In fact, you realise with growing embarrassment that ");
    GamePrint "It tastes just like wine. In fact, you realise with growing embarrassment that ";
    TraceOperation 047987 (Print_obj (Con 36));
    Let b3 = M[001082];
    Let b4 = M[001083];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 047989 (Print " is sitting in a ");
      GamePrint " is sitting in a ";
      TraceOperation 048000 (Print_obj (Con 72));
      Let b6 = M[001406];
      Let b7 = M[001407];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 048002 (Print ".");
        GamePrint ".";
        TraceOperation 048005 (Call (Floc 048670) [] Sp);
        PushFrame 048005;
        JumpCall: 048670, #actuals: 0
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 048002 (Print ".");
        GamePrint ".";
        TraceOperation 048005 (Call (Floc 048670) [] Sp);
        PushFrame 048005;
        JumpCall: 048670, #actuals: 0
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 047989 (Print " is sitting in a ");
      GamePrint " is sitting in a ";
      TraceOperation 048000 (Print_obj (Con 72));
      Let b9 = M[001406];
      Let b10 = M[001407];
      Let b11 = M[Address(MakeHiLo(b9,b10))];
      if (IsZeroByte(b11)) {
        GamePrint "";
        TraceOperation 048002 (Print ".");
        GamePrint ".";
        TraceOperation 048005 (Call (Floc 048670) [] Sp);
        PushFrame 048005;
        JumpCall: 048670, #actuals: 0
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
        TraceOperation 048002 (Print ".");
        GamePrint ".";
        TraceOperation 048005 (Call (Floc 048670) [] Sp);
        PushFrame 048005;
        JumpCall: 048670, #actuals: 0
      }
    }
  } else {
    PopFrame return_address_12;
    JumpReturn: return_address_12, result: 0
  }
LocReturn 048005:
  PushStack call_result;
  TraceOperation 048010 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 048011:
  TraceOperation 048011 (Je [Var (Global 73),Con 213] (Branch F Dfalse));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),213)) {
    TraceOperation 048015 (Je [Var (Global 203),Con 159,Con 61] (Branch F (Dloc 048032)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),159),Equal(MakeHiLo(b3,b4),61))) {
      TraceOperation 048021 (Print_ret "It seems warmish.");
      GamePrint "It seems warmish.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 048032
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 048032:
  TraceOperation 048032 (Je [Var (Global 203),Con 51,Con 149] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),51),Equal(MakeHiLo(b1,b2),149))) {
    TraceOperation 048038 (Print "Yucchhh! You are jerked to your senses by the realisation that you are licking the lining of a whale's stomach.");
    GamePrint "Yucchhh! You are jerked to your senses by the realisation that you are licking the lining of a whale's stomach.";
    TraceOperation 048103 (Call (Floc 048670) [] Sp);
    PushFrame 048103;
    JumpCall: 048670, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 048103:
  PushStack call_result;
  TraceOperation 048108 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 048109:
  TraceOperation 048109 (Je [Var (Global 73),Con 121,Con 99] (Branch F (Dloc 048240)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (LogOr(Equal(MakeHiLo(b1,b2),121),Equal(MakeHiLo(b1,b2),99))) {
    TraceOperation 048116 (Je [Var (Global 203),Con 139] (Branch F (Dloc 048240)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),139)) {
      TraceOperation 048121 (Je [Var (Global 201),Con 24] (Branch F (Dloc 048240)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),24)) {
        TraceOperation 048126 (Call (Floc 048958) [] Sp);
        PushFrame 048126;
        JumpCall: 048958, #actuals: 0
      } else {
        Jump: 048240
      }
    } else {
      Jump: 048240
    }
  } else {
    Jump: 048240
  }
LocReturn 048126:
  PushStack call_result;
  TraceOperation 048131 (Jz (Var Sp) (Branch T (Dloc 048240)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 048240
  } else {
    TraceOperation 048135 (Insert_obj (Con 23) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[000962];
    if (IsZero(Widen(b4))) {
      SetByte 000962 b3;
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte 000963 LoByte(Widen(b5));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 23;
      TraceOperation 048138 (Store (Con 207) (Con 23));
      SetByte 008290 0;
      SetByte 008291 23;
      TraceOperation 048141 (Print "It does smell a bit. There's something pungent ");
      GamePrint "It does smell a bit. There's something pungent ";
      TraceOperation 048164 (Je [Var (Global 73),Con 121] (Branch F (Dloc 048180)));
      Let b6 = M[008054];
      Let b7 = M[008055];
      if (Equal(MakeHiLo(b6,b7),121)) {
        TraceOperation 048168 (Print "being waved");
        GamePrint "being waved";
        TraceOperation 048177 (Jump 048185);
        Jump: 048185
      } else {
        Jump: 048180
      }
    } else {
      Let b8 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b8),23)) {
        Let b9 = M[000963];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b9));
        SetByte 000962 b3;
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
        SetByte 000963 LoByte(Widen(b10));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 23;
        TraceOperation 048138 (Store (Con 207) (Con 23));
        SetByte 008290 0;
        SetByte 008291 23;
        TraceOperation 048141 (Print "It does smell a bit. There's something pungent ");
        GamePrint "It does smell a bit. There's something pungent ";
        TraceOperation 048164 (Je [Var (Global 73),Con 121] (Branch F (Dloc 048180)));
        Let b11 = M[008054];
        Let b12 = M[008055];
        if (Equal(MakeHiLo(b11,b12),121)) {
          TraceOperation 048168 (Print "being waved");
          GamePrint "being waved";
          TraceOperation 048177 (Jump 048185);
          Jump: 048185
        } else {
          Jump: 048180
        }
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 048180:
  TraceOperation 048180 (Print "waving");
  GamePrint "waving";
  Jump: 048185
LocOp 048185:
  TraceOperation 048185 (Print_ret " under your nose. Your head begins to clear. You can make out a shadow moving in the dark.");
  GamePrint " under your nose. Your head begins to clear. You can make out a shadow moving in the dark.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 048240:
  TraceOperation 048240 (Je [Var (Global 201),Con 23] (Branch T (Dloc 048249)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),23)) {
    Jump: 048249
  } else {
    TraceOperation 048244 (Je [Var (Global 202),Con 23] (Branch F (Dloc 048400)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),23)) {
      Jump: 048249
    } else {
      Jump: 048400
    }
  }
LocOp 048249:
  TraceOperation 048249 (Je [Var (Global 203),Con 169] (Branch T (Dloc 048400)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    Jump: 048400
  } else {
    TraceOperation 048254 (Je [Var (Global 73),Con 121,Con 99] (Branch T (Dloc 048267)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (LogOr(Equal(MakeHiLo(b3,b4),121),Equal(MakeHiLo(b3,b4),99))) {
      Jump: 048267
    } else {
      TraceOperation 048260 (Call (Floc 057596) [Con 23] Sp);
      PushFrame 048260;
      SetLocal 1 23;
      JumpCall: 057596, #actuals: 1
    }
  }
LocReturn 048260:
  PushStack call_result;
  TraceOperation 048266 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 048267:
  TraceOperation 048267 (Je [Var (Global 203),Con 61] (Branch F (Dloc 048306)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 048271 (Print "The shadow is vaguely ");
    GamePrint "The shadow is vaguely ";
    TraceOperation 048286 (Call (Floc 049502) [] Sp);
    PushFrame 048286;
    JumpCall: 049502, #actuals: 0
  } else {
    Jump: 048306
  }
LocReturn 048286:
  PushStack call_result;
  TraceOperation 048291 (Print "-shaped.");
  GamePrint "-shaped.";
  TraceOperation 048300 (Call (Floc 048670) [] Sp);
  PushFrame 048300;
  JumpCall: 048670, #actuals: 0
LocReturn 048300:
  PushStack call_result;
  TraceOperation 048305 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 048306:
  TraceOperation 048306 (Je [Var (Global 203),Con 159] (Branch F (Dloc 048359)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),159)) {
    TraceOperation 048310 (Print "The shadow turns out to be a solid object of a ");
    GamePrint "The shadow turns out to be a solid object of a ";
    TraceOperation 048339 (Call (Floc 049502) [] Sp);
    PushFrame 048339;
    JumpCall: 049502, #actuals: 0
  } else {
    Jump: 048359
  }
LocReturn 048339:
  PushStack call_result;
  TraceOperation 048344 (Print "-like nature.");
  GamePrint "-like nature.";
  TraceOperation 048353 (Call (Floc 048670) [] Sp);
  PushFrame 048353;
  JumpCall: 048670, #actuals: 0
LocReturn 048353:
  PushStack call_result;
  TraceOperation 048358 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 048359:
  TraceOperation 048359 (Je [Var (Global 203),Con 139] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 048363 (Print "The shadow has a sort of ");
    GamePrint "The shadow has a sort of ";
    TraceOperation 048378 (Call (Floc 049502) [] Sp);
    PushFrame 048378;
    JumpCall: 049502, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 048378:
  PushStack call_result;
  TraceOperation 048383 (Print "y smell to it.");
  GamePrint "y smell to it.";
  TraceOperation 048394 (Call (Floc 048670) [] Sp);
  PushFrame 048394;
  JumpCall: 048670, #actuals: 0
LocReturn 048394:
  PushStack call_result;
  TraceOperation 048399 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 048400:
  TraceOperation 048400 (Inc (Con 90));
  Let b1 = M[008056];
  Let b2 = M[008057];
  SetByte 008056 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008057 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 048402 (Jz (Var (Global 207)) (Branch T (Dloc 048418)));
  Let b3 = M[008322];
  Let b4 = M[008323];
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 048418
  } else {
    TraceOperation 048405 (Inc (Con 88));
    Let b5 = M[008052];
    Let b6 = M[008053];
    SetByte 008052 HiByte(Add(MakeHiLo(b5,b6),1));
    SetByte 008053 LoByte(Add(MakeHiLo(b5,b6),1));
    TraceOperation 048407 (Je [Var (Global 72),Con 8] (Branch F (Dloc 048414)));
    Let b7 = M[008052];
    Let b8 = M[008053];
    if (Equal(MakeHiLo(b7,b8),8)) {
      TraceOperation 048411 (Store (Con 88) (Con 0));
      SetByte 008052 0;
      SetByte 008053 0;
      Jump: 048414
    } else {
      Jump: 048414
    }
  }
LocOp 048414:
  TraceOperation 048414 (Loadw (Var (Global 68)) (Var (Global 72)) (Global 73));
  Let b1 = M[008044];
  Let b2 = M[008045];
  Let b3 = M[008052];
  Let b4 = M[008053];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  SetByte 008054 b5;
  SetByte 008055 b6;
  Jump: 048418
LocOp 048418:
  TraceOperation 048418 (Je [Var (Global 203),Con 90] (Branch F (Dloc 048428)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),90)) {
    TraceOperation 048422 (Print "Dark");
    GamePrint "Dark";
    TraceOperation 048427 New_line;
    GamePrint "\n";
    Jump: 048428
  } else {
    Jump: 048428
  }
LocOp 048428:
  TraceOperation 048428 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 048432 (Jl (Con 25) (Var Sp) (Branch T (Dloc 048449)));
  PopStack popped2;
  if (LessThan(25,popped2)) {
    Jump: 048449
  } else {
    TraceOperation 048436 (Call (Floc 048968) [] Sp);
    PushFrame 048436;
    JumpCall: 048968, #actuals: 0
  }
LocReturn 048436:
  PushStack call_result;
  TraceOperation 048441 (Call (Floc 043634) [] Sp);
  PushFrame 048441;
  JumpCall: 043634, #actuals: 0
LocReturn 048441:
  PushStack call_result;
  TraceOperation 048446 (Jump 048501);
  Jump: 048501
LocOp 048449:
  TraceOperation 048449 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 048453 (Jl (Con 33) (Var Sp) (Branch T (Dloc 048470)));
  PopStack popped2;
  if (LessThan(33,popped2)) {
    Jump: 048470
  } else {
    TraceOperation 048457 (Call (Floc 049102) [] Sp);
    PushFrame 048457;
    JumpCall: 049102, #actuals: 0
  }
LocReturn 048457:
  PushStack call_result;
  TraceOperation 048462 (Call (Floc 043634) [] Sp);
  PushFrame 048462;
  JumpCall: 043634, #actuals: 0
LocReturn 048462:
  PushStack call_result;
  TraceOperation 048467 (Jump 048501);
  Jump: 048501
LocOp 048470:
  TraceOperation 048470 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 048474 (Jl (Con 50) (Var Sp) (Branch T (Dloc 048491)));
  PopStack popped2;
  if (LessThan(50,popped2)) {
    Jump: 048491
  } else {
    TraceOperation 048478 (Call (Floc 049240) [] Sp);
    PushFrame 048478;
    JumpCall: 049240, #actuals: 0
  }
LocReturn 048478:
  PushStack call_result;
  TraceOperation 048483 (Call (Floc 043634) [] Sp);
  PushFrame 048483;
  JumpCall: 043634, #actuals: 0
LocReturn 048483:
  PushStack call_result;
  TraceOperation 048488 (Jump 048501);
  Jump: 048501
LocOp 048491:
  TraceOperation 048491 (Call (Floc 049376) [] Sp);
  PushFrame 048491;
  JumpCall: 049376, #actuals: 0
LocReturn 048491:
  PushStack call_result;
  TraceOperation 048496 (Call (Floc 043634) [] Sp);
  PushFrame 048496;
  JumpCall: 043634, #actuals: 0
LocReturn 048496:
  PushStack call_result;
  Jump: 048501
LocOp 048501:
  TraceOperation 048501 (Je [Var (Global 74),Con 18] (Branch F (Dloc 048537)));
  Let b1 = M[008056];
  Let b2 = M[008057];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 048505 New_line;
    GamePrint "\n";
    TraceOperation 048506 (Print_ret "When will you come to your senses and solve this puzzle?");
    GamePrint "When will you come to your senses and solve this puzzle?\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 048537
  }
LocOp 048537:
  TraceOperation 048537 (Je [Var (Global 74),Con 33] (Branch F (Dloc 048579)));
  Let b1 = M[008056];
  Let b2 = M[008057];
  if (Equal(MakeHiLo(b1,b2),33)) {
    TraceOperation 048541 New_line;
    GamePrint "\n";
    TraceOperation 048542 (Print_ret "4 out of 5 sensitive people solve this puzzle right away.");
    GamePrint "4 out of 5 sensitive people solve this puzzle right away.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 048579
  }
LocOp 048579:
  TraceOperation 048579 (Je [Var (Global 74),Con 48] (Branch F (Dloc 048613)));
  Let b1 = M[008056];
  Let b2 = M[008057];
  if (Equal(MakeHiLo(b1,b2),48)) {
    TraceOperation 048583 New_line;
    GamePrint "\n";
    TraceOperation 048584 (Print_ret "Don't count your senses before they hatch.");
    GamePrint "Don't count your senses before they hatch.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 048613
  }
LocOp 048613:
  TraceOperation 048613 (Je [Var (Global 74),Con 63] (Branch F Dtrue));
  Let b1 = M[008056];
  Let b2 = M[008057];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 048617 (Je [Var (Global 73),Con 121] (Branch F Dtrue));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (Equal(MakeHiLo(b3,b4),121)) {
      TraceOperation 048621 New_line;
      GamePrint "\n";
      TraceOperation 048622 (Print_ret "Something stinks around here, and I'm not just talking about your puzzle-solving ability!");
      GamePrint "Something stinks around here, and I'm not just talking about your puzzle-solving ability!\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[351]--------------------------------------------------
LocRoutine 048670:
  MakeRoutineFrame 0;
  Jump: 048671
LocOp 048671:
  TraceOperation 048671 New_line;
  GamePrint "\n";
  TraceOperation 048672 New_line;
  GamePrint "\n";
  TraceOperation 048673 (Put_prop (Con 31) (Con 29) (Con 22672));
  Let b1 = M[001037];
  Let b2 = M[001038];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 048688:
  PushStack call_result;
  TraceOperation 048695 (Call (Floc 043644) [Con 97,Con 31] Sp);
  PushFrame 048695;
  SetLocal 1 97;
  SetLocal 2 31;
  JumpCall: 043644, #actuals: 2
LocReturn 048695:
  PushStack call_result;
  TraceOperation 048702 (Insert_obj (Con 23) (Con 219));
  Let b1 = M[000962];
  if (IsZero(Widen(b1))) {
    SetByte 000962 219;
    Let b2 = M[002728];
    SetByte 000963 LoByte(Widen(b2));
    SetByte 002728 23;
    TraceOperation 048705 (Insert_obj (Con 21) (Con 219));
    Let b3 = M[000944];
    if (IsZero(Widen(b3))) {
      SetByte 000944 219;
      Let b4 = M[002728];
      SetByte 000945 LoByte(Widen(b4));
      SetByte 002728 21;
      TraceOperation 048708 (Insert_obj (Con 22) (Con 219));
      Let b5 = M[000953];
      if (IsZero(Widen(b5))) {
        SetByte 000953 219;
        Let b6 = M[002728];
        SetByte 000954 LoByte(Widen(b6));
        SetByte 002728 22;
        TraceOperation 048711 (Insert_obj (Con 20) (Con 219));
        Let b7 = M[000935];
        if (IsZero(Widen(b7))) {
          SetByte 000935 219;
          Let b8 = M[002728];
          SetByte 000936 LoByte(Widen(b8));
          SetByte 002728 20;
          TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
          Let b9 = M[008174];
          Let b10 = M[008175];
          if (IsZero(MakeHiLo(b9,b10))) {
            Jump: 048723
          } else {
            TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
            Let b11 = M[002015];
            if (IsZero(Widen(b11))) {
              SetByte 002015 158;
              Let b12 = M[002179];
              SetByte 002016 LoByte(Widen(b12));
              SetByte 002179 140;
              TraceOperation 048720 (Store (Con 149) (Con 0));
              SetByte 008174 0;
              SetByte 008175 0;
              Jump: 048723
            } else {
              Let b13 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
              if (Equal(Widen(b13),140)) {
                Let b14 = M[002016];
                SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b14));
                SetByte 002015 158;
                Let b15 = M[002179];
                SetByte 002016 LoByte(Widen(b15));
                SetByte 002179 140;
                TraceOperation 048720 (Store (Con 149) (Con 0));
                SetByte 008174 0;
                SetByte 008175 0;
                Jump: 048723
              } else {
                Error: unlink/loop
              }
            }
          }
        } else {
          Let b16 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
          if (Equal(Widen(b16),20)) {
            Let b17 = M[000936];
            SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b17));
            SetByte 000935 219;
            Let b18 = M[002728];
            SetByte 000936 LoByte(Widen(b18));
            SetByte 002728 20;
            TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
            Let b19 = M[008174];
            Let b20 = M[008175];
            if (IsZero(MakeHiLo(b19,b20))) {
              Jump: 048723
            } else {
              TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
              Let b21 = M[002015];
              if (IsZero(Widen(b21))) {
                SetByte 002015 158;
                Let b22 = M[002179];
                SetByte 002016 LoByte(Widen(b22));
                SetByte 002179 140;
                TraceOperation 048720 (Store (Con 149) (Con 0));
                SetByte 008174 0;
                SetByte 008175 0;
                Jump: 048723
              } else {
                Let b23 = M[Offset(Offset(000751,Mul(Widen(b21),9)),6)];
                if (Equal(Widen(b23),140)) {
                  Let b24 = M[002016];
                  SetByte Offset(Offset(000751,Mul(Widen(b21),9)),6) LoByte(Widen(b24));
                  SetByte 002015 158;
                  Let b25 = M[002179];
                  SetByte 002016 LoByte(Widen(b25));
                  SetByte 002179 140;
                  TraceOperation 048720 (Store (Con 149) (Con 0));
                  SetByte 008174 0;
                  SetByte 008175 0;
                  Jump: 048723
                } else {
                  Error: unlink/loop
                }
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b26 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b26),22)) {
          Let b27 = M[000954];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b27));
          SetByte 000953 219;
          Let b28 = M[002728];
          SetByte 000954 LoByte(Widen(b28));
          SetByte 002728 22;
          TraceOperation 048711 (Insert_obj (Con 20) (Con 219));
          Let b29 = M[000935];
          if (IsZero(Widen(b29))) {
            SetByte 000935 219;
            Let b30 = M[002728];
            SetByte 000936 LoByte(Widen(b30));
            SetByte 002728 20;
            TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
            Let b31 = M[008174];
            Let b32 = M[008175];
            if (IsZero(MakeHiLo(b31,b32))) {
              Jump: 048723
            } else {
              TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
              Let b33 = M[002015];
              if (IsZero(Widen(b33))) {
                SetByte 002015 158;
                Let b34 = M[002179];
                SetByte 002016 LoByte(Widen(b34));
                SetByte 002179 140;
                TraceOperation 048720 (Store (Con 149) (Con 0));
                SetByte 008174 0;
                SetByte 008175 0;
                Jump: 048723
              } else {
                Let b35 = M[Offset(Offset(000751,Mul(Widen(b33),9)),6)];
                if (Equal(Widen(b35),140)) {
                  Let b36 = M[002016];
                  SetByte Offset(Offset(000751,Mul(Widen(b33),9)),6) LoByte(Widen(b36));
                  SetByte 002015 158;
                  Let b37 = M[002179];
                  SetByte 002016 LoByte(Widen(b37));
                  SetByte 002179 140;
                  TraceOperation 048720 (Store (Con 149) (Con 0));
                  SetByte 008174 0;
                  SetByte 008175 0;
                  Jump: 048723
                } else {
                  Error: unlink/loop
                }
              }
            }
          } else {
            Let b38 = M[Offset(Offset(000751,Mul(Widen(b29),9)),6)];
            if (Equal(Widen(b38),20)) {
              Let b39 = M[000936];
              SetByte Offset(Offset(000751,Mul(Widen(b29),9)),6) LoByte(Widen(b39));
              SetByte 000935 219;
              Let b40 = M[002728];
              SetByte 000936 LoByte(Widen(b40));
              SetByte 002728 20;
              TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
              Let b41 = M[008174];
              Let b42 = M[008175];
              if (IsZero(MakeHiLo(b41,b42))) {
                Jump: 048723
              } else {
                TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
                Let b43 = M[002015];
                if (IsZero(Widen(b43))) {
                  SetByte 002015 158;
                  Let b44 = M[002179];
                  SetByte 002016 LoByte(Widen(b44));
                  SetByte 002179 140;
                  TraceOperation 048720 (Store (Con 149) (Con 0));
                  SetByte 008174 0;
                  SetByte 008175 0;
                  Jump: 048723
                } else {
                  Let b45 = M[Offset(Offset(000751,Mul(Widen(b43),9)),6)];
                  if (Equal(Widen(b45),140)) {
                    Let b46 = M[002016];
                    SetByte Offset(Offset(000751,Mul(Widen(b43),9)),6) LoByte(Widen(b46));
                    SetByte 002015 158;
                    Let b47 = M[002179];
                    SetByte 002016 LoByte(Widen(b47));
                    SetByte 002179 140;
                    TraceOperation 048720 (Store (Con 149) (Con 0));
                    SetByte 008174 0;
                    SetByte 008175 0;
                    Jump: 048723
                  } else {
                    Error: unlink/loop
                  }
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b48 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b48),21)) {
        Let b49 = M[000945];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b49));
        SetByte 000944 219;
        Let b50 = M[002728];
        SetByte 000945 LoByte(Widen(b50));
        SetByte 002728 21;
        TraceOperation 048708 (Insert_obj (Con 22) (Con 219));
        Let b51 = M[000953];
        if (IsZero(Widen(b51))) {
          SetByte 000953 219;
          Let b52 = M[002728];
          SetByte 000954 LoByte(Widen(b52));
          SetByte 002728 22;
          TraceOperation 048711 (Insert_obj (Con 20) (Con 219));
          Let b53 = M[000935];
          if (IsZero(Widen(b53))) {
            SetByte 000935 219;
            Let b54 = M[002728];
            SetByte 000936 LoByte(Widen(b54));
            SetByte 002728 20;
            TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
            Let b55 = M[008174];
            Let b56 = M[008175];
            if (IsZero(MakeHiLo(b55,b56))) {
              Jump: 048723
            } else {
              TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
              Let b57 = M[002015];
              if (IsZero(Widen(b57))) {
                SetByte 002015 158;
                Let b58 = M[002179];
                SetByte 002016 LoByte(Widen(b58));
                SetByte 002179 140;
                TraceOperation 048720 (Store (Con 149) (Con 0));
                SetByte 008174 0;
                SetByte 008175 0;
                Jump: 048723
              } else {
                Let b59 = M[Offset(Offset(000751,Mul(Widen(b57),9)),6)];
                if (Equal(Widen(b59),140)) {
                  Let b60 = M[002016];
                  SetByte Offset(Offset(000751,Mul(Widen(b57),9)),6) LoByte(Widen(b60));
                  SetByte 002015 158;
                  Let b61 = M[002179];
                  SetByte 002016 LoByte(Widen(b61));
                  SetByte 002179 140;
                  TraceOperation 048720 (Store (Con 149) (Con 0));
                  SetByte 008174 0;
                  SetByte 008175 0;
                  Jump: 048723
                } else {
                  Error: unlink/loop
                }
              }
            }
          } else {
            Let b62 = M[Offset(Offset(000751,Mul(Widen(b53),9)),6)];
            if (Equal(Widen(b62),20)) {
              Let b63 = M[000936];
              SetByte Offset(Offset(000751,Mul(Widen(b53),9)),6) LoByte(Widen(b63));
              SetByte 000935 219;
              Let b64 = M[002728];
              SetByte 000936 LoByte(Widen(b64));
              SetByte 002728 20;
              TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
              Let b65 = M[008174];
              Let b66 = M[008175];
              if (IsZero(MakeHiLo(b65,b66))) {
                Jump: 048723
              } else {
                TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
                Let b67 = M[002015];
                if (IsZero(Widen(b67))) {
                  SetByte 002015 158;
                  Let b68 = M[002179];
                  SetByte 002016 LoByte(Widen(b68));
                  SetByte 002179 140;
                  TraceOperation 048720 (Store (Con 149) (Con 0));
                  SetByte 008174 0;
                  SetByte 008175 0;
                  Jump: 048723
                } else {
                  Let b69 = M[Offset(Offset(000751,Mul(Widen(b67),9)),6)];
                  if (Equal(Widen(b69),140)) {
                    Let b70 = M[002016];
                    SetByte Offset(Offset(000751,Mul(Widen(b67),9)),6) LoByte(Widen(b70));
                    SetByte 002015 158;
                    Let b71 = M[002179];
                    SetByte 002016 LoByte(Widen(b71));
                    SetByte 002179 140;
                    TraceOperation 048720 (Store (Con 149) (Con 0));
                    SetByte 008174 0;
                    SetByte 008175 0;
                    Jump: 048723
                  } else {
                    Error: unlink/loop
                  }
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b72 = M[Offset(Offset(000751,Mul(Widen(b51),9)),6)];
          if (Equal(Widen(b72),22)) {
            Let b73 = M[000954];
            SetByte Offset(Offset(000751,Mul(Widen(b51),9)),6) LoByte(Widen(b73));
            SetByte 000953 219;
            Let b74 = M[002728];
            SetByte 000954 LoByte(Widen(b74));
            SetByte 002728 22;
            TraceOperation 048711 (Insert_obj (Con 20) (Con 219));
            Let b75 = M[000935];
            if (IsZero(Widen(b75))) {
              SetByte 000935 219;
              Let b76 = M[002728];
              SetByte 000936 LoByte(Widen(b76));
              SetByte 002728 20;
              TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
              Let b77 = M[008174];
              Let b78 = M[008175];
              if (IsZero(MakeHiLo(b77,b78))) {
                Jump: 048723
              } else {
                TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
                Let b79 = M[002015];
                if (IsZero(Widen(b79))) {
                  SetByte 002015 158;
                  Let b80 = M[002179];
                  SetByte 002016 LoByte(Widen(b80));
                  SetByte 002179 140;
                  TraceOperation 048720 (Store (Con 149) (Con 0));
                  SetByte 008174 0;
                  SetByte 008175 0;
                  Jump: 048723
                } else {
                  Let b81 = M[Offset(Offset(000751,Mul(Widen(b79),9)),6)];
                  if (Equal(Widen(b81),140)) {
                    Let b82 = M[002016];
                    SetByte Offset(Offset(000751,Mul(Widen(b79),9)),6) LoByte(Widen(b82));
                    SetByte 002015 158;
                    Let b83 = M[002179];
                    SetByte 002016 LoByte(Widen(b83));
                    SetByte 002179 140;
                    TraceOperation 048720 (Store (Con 149) (Con 0));
                    SetByte 008174 0;
                    SetByte 008175 0;
                    Jump: 048723
                  } else {
                    Error: unlink/loop
                  }
                }
              }
            } else {
              Let b84 = M[Offset(Offset(000751,Mul(Widen(b75),9)),6)];
              if (Equal(Widen(b84),20)) {
                Let b85 = M[000936];
                SetByte Offset(Offset(000751,Mul(Widen(b75),9)),6) LoByte(Widen(b85));
                SetByte 000935 219;
                Let b86 = M[002728];
                SetByte 000936 LoByte(Widen(b86));
                SetByte 002728 20;
                TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
                Let b87 = M[008174];
                Let b88 = M[008175];
                if (IsZero(MakeHiLo(b87,b88))) {
                  Jump: 048723
                } else {
                  TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
                  Let b89 = M[002015];
                  if (IsZero(Widen(b89))) {
                    SetByte 002015 158;
                    Let b90 = M[002179];
                    SetByte 002016 LoByte(Widen(b90));
                    SetByte 002179 140;
                    TraceOperation 048720 (Store (Con 149) (Con 0));
                    SetByte 008174 0;
                    SetByte 008175 0;
                    Jump: 048723
                  } else {
                    Let b91 = M[Offset(Offset(000751,Mul(Widen(b89),9)),6)];
                    if (Equal(Widen(b91),140)) {
                      Let b92 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b89),9)),6) LoByte(Widen(b92));
                      SetByte 002015 158;
                      Let b93 = M[002179];
                      SetByte 002016 LoByte(Widen(b93));
                      SetByte 002179 140;
                      TraceOperation 048720 (Store (Con 149) (Con 0));
                      SetByte 008174 0;
                      SetByte 008175 0;
                      Jump: 048723
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b94 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b94),23)) {
      Let b95 = M[000963];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b95));
      SetByte 000962 219;
      Let b96 = M[002728];
      SetByte 000963 LoByte(Widen(b96));
      SetByte 002728 23;
      TraceOperation 048705 (Insert_obj (Con 21) (Con 219));
      Let b97 = M[000944];
      if (IsZero(Widen(b97))) {
        SetByte 000944 219;
        Let b98 = M[002728];
        SetByte 000945 LoByte(Widen(b98));
        SetByte 002728 21;
        TraceOperation 048708 (Insert_obj (Con 22) (Con 219));
        Let b99 = M[000953];
        if (IsZero(Widen(b99))) {
          SetByte 000953 219;
          Let b100 = M[002728];
          SetByte 000954 LoByte(Widen(b100));
          SetByte 002728 22;
          TraceOperation 048711 (Insert_obj (Con 20) (Con 219));
          Let b101 = M[000935];
          if (IsZero(Widen(b101))) {
            SetByte 000935 219;
            Let b102 = M[002728];
            SetByte 000936 LoByte(Widen(b102));
            SetByte 002728 20;
            TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
            Let b103 = M[008174];
            Let b104 = M[008175];
            if (IsZero(MakeHiLo(b103,b104))) {
              Jump: 048723
            } else {
              TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
              Let b105 = M[002015];
              if (IsZero(Widen(b105))) {
                SetByte 002015 158;
                Let b106 = M[002179];
                SetByte 002016 LoByte(Widen(b106));
                SetByte 002179 140;
                TraceOperation 048720 (Store (Con 149) (Con 0));
                SetByte 008174 0;
                SetByte 008175 0;
                Jump: 048723
              } else {
                Let b107 = M[Offset(Offset(000751,Mul(Widen(b105),9)),6)];
                if (Equal(Widen(b107),140)) {
                  Let b108 = M[002016];
                  SetByte Offset(Offset(000751,Mul(Widen(b105),9)),6) LoByte(Widen(b108));
                  SetByte 002015 158;
                  Let b109 = M[002179];
                  SetByte 002016 LoByte(Widen(b109));
                  SetByte 002179 140;
                  TraceOperation 048720 (Store (Con 149) (Con 0));
                  SetByte 008174 0;
                  SetByte 008175 0;
                  Jump: 048723
                } else {
                  Error: unlink/loop
                }
              }
            }
          } else {
            Let b110 = M[Offset(Offset(000751,Mul(Widen(b101),9)),6)];
            if (Equal(Widen(b110),20)) {
              Let b111 = M[000936];
              SetByte Offset(Offset(000751,Mul(Widen(b101),9)),6) LoByte(Widen(b111));
              SetByte 000935 219;
              Let b112 = M[002728];
              SetByte 000936 LoByte(Widen(b112));
              SetByte 002728 20;
              TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
              Let b113 = M[008174];
              Let b114 = M[008175];
              if (IsZero(MakeHiLo(b113,b114))) {
                Jump: 048723
              } else {
                TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
                Let b115 = M[002015];
                if (IsZero(Widen(b115))) {
                  SetByte 002015 158;
                  Let b116 = M[002179];
                  SetByte 002016 LoByte(Widen(b116));
                  SetByte 002179 140;
                  TraceOperation 048720 (Store (Con 149) (Con 0));
                  SetByte 008174 0;
                  SetByte 008175 0;
                  Jump: 048723
                } else {
                  Let b117 = M[Offset(Offset(000751,Mul(Widen(b115),9)),6)];
                  if (Equal(Widen(b117),140)) {
                    Let b118 = M[002016];
                    SetByte Offset(Offset(000751,Mul(Widen(b115),9)),6) LoByte(Widen(b118));
                    SetByte 002015 158;
                    Let b119 = M[002179];
                    SetByte 002016 LoByte(Widen(b119));
                    SetByte 002179 140;
                    TraceOperation 048720 (Store (Con 149) (Con 0));
                    SetByte 008174 0;
                    SetByte 008175 0;
                    Jump: 048723
                  } else {
                    Error: unlink/loop
                  }
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b120 = M[Offset(Offset(000751,Mul(Widen(b99),9)),6)];
          if (Equal(Widen(b120),22)) {
            Let b121 = M[000954];
            SetByte Offset(Offset(000751,Mul(Widen(b99),9)),6) LoByte(Widen(b121));
            SetByte 000953 219;
            Let b122 = M[002728];
            SetByte 000954 LoByte(Widen(b122));
            SetByte 002728 22;
            TraceOperation 048711 (Insert_obj (Con 20) (Con 219));
            Let b123 = M[000935];
            if (IsZero(Widen(b123))) {
              SetByte 000935 219;
              Let b124 = M[002728];
              SetByte 000936 LoByte(Widen(b124));
              SetByte 002728 20;
              TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
              Let b125 = M[008174];
              Let b126 = M[008175];
              if (IsZero(MakeHiLo(b125,b126))) {
                Jump: 048723
              } else {
                TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
                Let b127 = M[002015];
                if (IsZero(Widen(b127))) {
                  SetByte 002015 158;
                  Let b128 = M[002179];
                  SetByte 002016 LoByte(Widen(b128));
                  SetByte 002179 140;
                  TraceOperation 048720 (Store (Con 149) (Con 0));
                  SetByte 008174 0;
                  SetByte 008175 0;
                  Jump: 048723
                } else {
                  Let b129 = M[Offset(Offset(000751,Mul(Widen(b127),9)),6)];
                  if (Equal(Widen(b129),140)) {
                    Let b130 = M[002016];
                    SetByte Offset(Offset(000751,Mul(Widen(b127),9)),6) LoByte(Widen(b130));
                    SetByte 002015 158;
                    Let b131 = M[002179];
                    SetByte 002016 LoByte(Widen(b131));
                    SetByte 002179 140;
                    TraceOperation 048720 (Store (Con 149) (Con 0));
                    SetByte 008174 0;
                    SetByte 008175 0;
                    Jump: 048723
                  } else {
                    Error: unlink/loop
                  }
                }
              }
            } else {
              Let b132 = M[Offset(Offset(000751,Mul(Widen(b123),9)),6)];
              if (Equal(Widen(b132),20)) {
                Let b133 = M[000936];
                SetByte Offset(Offset(000751,Mul(Widen(b123),9)),6) LoByte(Widen(b133));
                SetByte 000935 219;
                Let b134 = M[002728];
                SetByte 000936 LoByte(Widen(b134));
                SetByte 002728 20;
                TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
                Let b135 = M[008174];
                Let b136 = M[008175];
                if (IsZero(MakeHiLo(b135,b136))) {
                  Jump: 048723
                } else {
                  TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
                  Let b137 = M[002015];
                  if (IsZero(Widen(b137))) {
                    SetByte 002015 158;
                    Let b138 = M[002179];
                    SetByte 002016 LoByte(Widen(b138));
                    SetByte 002179 140;
                    TraceOperation 048720 (Store (Con 149) (Con 0));
                    SetByte 008174 0;
                    SetByte 008175 0;
                    Jump: 048723
                  } else {
                    Let b139 = M[Offset(Offset(000751,Mul(Widen(b137),9)),6)];
                    if (Equal(Widen(b139),140)) {
                      Let b140 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b137),9)),6) LoByte(Widen(b140));
                      SetByte 002015 158;
                      Let b141 = M[002179];
                      SetByte 002016 LoByte(Widen(b141));
                      SetByte 002179 140;
                      TraceOperation 048720 (Store (Con 149) (Con 0));
                      SetByte 008174 0;
                      SetByte 008175 0;
                      Jump: 048723
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b142 = M[Offset(Offset(000751,Mul(Widen(b97),9)),6)];
        if (Equal(Widen(b142),21)) {
          Let b143 = M[000945];
          SetByte Offset(Offset(000751,Mul(Widen(b97),9)),6) LoByte(Widen(b143));
          SetByte 000944 219;
          Let b144 = M[002728];
          SetByte 000945 LoByte(Widen(b144));
          SetByte 002728 21;
          TraceOperation 048708 (Insert_obj (Con 22) (Con 219));
          Let b145 = M[000953];
          if (IsZero(Widen(b145))) {
            SetByte 000953 219;
            Let b146 = M[002728];
            SetByte 000954 LoByte(Widen(b146));
            SetByte 002728 22;
            TraceOperation 048711 (Insert_obj (Con 20) (Con 219));
            Let b147 = M[000935];
            if (IsZero(Widen(b147))) {
              SetByte 000935 219;
              Let b148 = M[002728];
              SetByte 000936 LoByte(Widen(b148));
              SetByte 002728 20;
              TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
              Let b149 = M[008174];
              Let b150 = M[008175];
              if (IsZero(MakeHiLo(b149,b150))) {
                Jump: 048723
              } else {
                TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
                Let b151 = M[002015];
                if (IsZero(Widen(b151))) {
                  SetByte 002015 158;
                  Let b152 = M[002179];
                  SetByte 002016 LoByte(Widen(b152));
                  SetByte 002179 140;
                  TraceOperation 048720 (Store (Con 149) (Con 0));
                  SetByte 008174 0;
                  SetByte 008175 0;
                  Jump: 048723
                } else {
                  Let b153 = M[Offset(Offset(000751,Mul(Widen(b151),9)),6)];
                  if (Equal(Widen(b153),140)) {
                    Let b154 = M[002016];
                    SetByte Offset(Offset(000751,Mul(Widen(b151),9)),6) LoByte(Widen(b154));
                    SetByte 002015 158;
                    Let b155 = M[002179];
                    SetByte 002016 LoByte(Widen(b155));
                    SetByte 002179 140;
                    TraceOperation 048720 (Store (Con 149) (Con 0));
                    SetByte 008174 0;
                    SetByte 008175 0;
                    Jump: 048723
                  } else {
                    Error: unlink/loop
                  }
                }
              }
            } else {
              Let b156 = M[Offset(Offset(000751,Mul(Widen(b147),9)),6)];
              if (Equal(Widen(b156),20)) {
                Let b157 = M[000936];
                SetByte Offset(Offset(000751,Mul(Widen(b147),9)),6) LoByte(Widen(b157));
                SetByte 000935 219;
                Let b158 = M[002728];
                SetByte 000936 LoByte(Widen(b158));
                SetByte 002728 20;
                TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
                Let b159 = M[008174];
                Let b160 = M[008175];
                if (IsZero(MakeHiLo(b159,b160))) {
                  Jump: 048723
                } else {
                  TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
                  Let b161 = M[002015];
                  if (IsZero(Widen(b161))) {
                    SetByte 002015 158;
                    Let b162 = M[002179];
                    SetByte 002016 LoByte(Widen(b162));
                    SetByte 002179 140;
                    TraceOperation 048720 (Store (Con 149) (Con 0));
                    SetByte 008174 0;
                    SetByte 008175 0;
                    Jump: 048723
                  } else {
                    Let b163 = M[Offset(Offset(000751,Mul(Widen(b161),9)),6)];
                    if (Equal(Widen(b163),140)) {
                      Let b164 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b161),9)),6) LoByte(Widen(b164));
                      SetByte 002015 158;
                      Let b165 = M[002179];
                      SetByte 002016 LoByte(Widen(b165));
                      SetByte 002179 140;
                      TraceOperation 048720 (Store (Con 149) (Con 0));
                      SetByte 008174 0;
                      SetByte 008175 0;
                      Jump: 048723
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b166 = M[Offset(Offset(000751,Mul(Widen(b145),9)),6)];
            if (Equal(Widen(b166),22)) {
              Let b167 = M[000954];
              SetByte Offset(Offset(000751,Mul(Widen(b145),9)),6) LoByte(Widen(b167));
              SetByte 000953 219;
              Let b168 = M[002728];
              SetByte 000954 LoByte(Widen(b168));
              SetByte 002728 22;
              TraceOperation 048711 (Insert_obj (Con 20) (Con 219));
              Let b169 = M[000935];
              if (IsZero(Widen(b169))) {
                SetByte 000935 219;
                Let b170 = M[002728];
                SetByte 000936 LoByte(Widen(b170));
                SetByte 002728 20;
                TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
                Let b171 = M[008174];
                Let b172 = M[008175];
                if (IsZero(MakeHiLo(b171,b172))) {
                  Jump: 048723
                } else {
                  TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
                  Let b173 = M[002015];
                  if (IsZero(Widen(b173))) {
                    SetByte 002015 158;
                    Let b174 = M[002179];
                    SetByte 002016 LoByte(Widen(b174));
                    SetByte 002179 140;
                    TraceOperation 048720 (Store (Con 149) (Con 0));
                    SetByte 008174 0;
                    SetByte 008175 0;
                    Jump: 048723
                  } else {
                    Let b175 = M[Offset(Offset(000751,Mul(Widen(b173),9)),6)];
                    if (Equal(Widen(b175),140)) {
                      Let b176 = M[002016];
                      SetByte Offset(Offset(000751,Mul(Widen(b173),9)),6) LoByte(Widen(b176));
                      SetByte 002015 158;
                      Let b177 = M[002179];
                      SetByte 002016 LoByte(Widen(b177));
                      SetByte 002179 140;
                      TraceOperation 048720 (Store (Con 149) (Con 0));
                      SetByte 008174 0;
                      SetByte 008175 0;
                      Jump: 048723
                    } else {
                      Error: unlink/loop
                    }
                  }
                }
              } else {
                Let b178 = M[Offset(Offset(000751,Mul(Widen(b169),9)),6)];
                if (Equal(Widen(b178),20)) {
                  Let b179 = M[000936];
                  SetByte Offset(Offset(000751,Mul(Widen(b169),9)),6) LoByte(Widen(b179));
                  SetByte 000935 219;
                  Let b180 = M[002728];
                  SetByte 000936 LoByte(Widen(b180));
                  SetByte 002728 20;
                  TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
                  Let b181 = M[008174];
                  Let b182 = M[008175];
                  if (IsZero(MakeHiLo(b181,b182))) {
                    Jump: 048723
                  } else {
                    TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
                    Let b183 = M[002015];
                    if (IsZero(Widen(b183))) {
                      SetByte 002015 158;
                      Let b184 = M[002179];
                      SetByte 002016 LoByte(Widen(b184));
                      SetByte 002179 140;
                      TraceOperation 048720 (Store (Con 149) (Con 0));
                      SetByte 008174 0;
                      SetByte 008175 0;
                      Jump: 048723
                    } else {
                      Let b185 = M[Offset(Offset(000751,Mul(Widen(b183),9)),6)];
                      if (Equal(Widen(b185),140)) {
                        Let b186 = M[002016];
                        SetByte Offset(Offset(000751,Mul(Widen(b183),9)),6) LoByte(Widen(b186));
                        SetByte 002015 158;
                        Let b187 = M[002179];
                        SetByte 002016 LoByte(Widen(b187));
                        SetByte 002179 140;
                        TraceOperation 048720 (Store (Con 149) (Con 0));
                        SetByte 008174 0;
                        SetByte 008175 0;
                        Jump: 048723
                      } else {
                        Error: unlink/loop
                      }
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 048723:
  TraceOperation 048723 (Je [Var (Global 73),Con 86] (Branch F (Dloc 048923)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),86)) {
    TraceOperation 048728 (Test_attr (Con 86) (Con 4) (Branch F (Dloc 048923)));
    Let b3 = M[001525];
    if (TestBit(b3,3)) {
      TraceOperation 048733 (Call (Floc 022320) [Con 24767,Con 6] Sp);
      PushFrame 048733;
      SetLocal 1 24767;
      SetLocal 2 6;
      JumpCall: 022320, #actuals: 2
    } else {
      Jump: 048923
    }
  } else {
    Jump: 048923
  }
LocReturn 048733:
  PushStack call_result;
  TraceOperation 048741 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 048746 (Call (Floc 043406) [Con 186] (Global 0));
  PushFrame 048746;
  SetLocal 1 186;
  JumpCall: 043406, #actuals: 1
LocReturn 048746:
  SetByte 007908 HiByte(call_result);
  SetByte 007909 LoByte(call_result);
  TraceOperation 048752 (Insert_obj (Con 31) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001034];
  if (IsZero(Widen(b3))) {
    SetByte 001034 b2;
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 001035 LoByte(Widen(b4));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 31;
    TraceOperation 048755 (Insert_obj (Con 94) (Var (Global 0)));
    Let b5 = M[007908];
    Let b6 = M[007909];
    Let b7 = M[001601];
    if (IsZero(Widen(b7))) {
      SetByte 001601 b6;
      Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte 001602 LoByte(Widen(b8));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 94;
      TraceOperation 048758 (Store (Con 85) (Var (Global 0)));
      Let b9 = M[007908];
      Let b10 = M[007909];
      SetByte 008046 b9;
      SetByte 008047 b10;
      TraceOperation 048761 (Print "There is a violent explosion around you, leaving you standing in");
      GamePrint "There is a violent explosion around you, leaving you standing in";
      TraceOperation 048796 (Call (Floc 043738) [Var (Global 0),Con 1] Sp);
      Let b11 = M[007908];
      Let b12 = M[007909];
      PushFrame 048796;
      SetLocal 1 MakeHiLo(b11,b12);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    } else {
      Let b13 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b13),94)) {
        Let b14 = M[001602];
        SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b14));
        SetByte 001601 b6;
        Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
        SetByte 001602 LoByte(Widen(b15));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 94;
        TraceOperation 048758 (Store (Con 85) (Var (Global 0)));
        Let b16 = M[007908];
        Let b17 = M[007909];
        SetByte 008046 b16;
        SetByte 008047 b17;
        TraceOperation 048761 (Print "There is a violent explosion around you, leaving you standing in");
        GamePrint "There is a violent explosion around you, leaving you standing in";
        TraceOperation 048796 (Call (Floc 043738) [Var (Global 0),Con 1] Sp);
        Let b18 = M[007908];
        Let b19 = M[007909];
        PushFrame 048796;
        SetLocal 1 MakeHiLo(b18,b19);
        SetLocal 2 1;
        JumpCall: 043738, #actuals: 2
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b20 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b20),31)) {
      Let b21 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b21));
      SetByte 001034 b2;
      Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 001035 LoByte(Widen(b22));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 31;
      TraceOperation 048755 (Insert_obj (Con 94) (Var (Global 0)));
      Let b23 = M[007908];
      Let b24 = M[007909];
      Let b25 = M[001601];
      if (IsZero(Widen(b25))) {
        SetByte 001601 b24;
        Let b26 = M[Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),6)];
        SetByte 001602 LoByte(Widen(b26));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),6) 94;
        TraceOperation 048758 (Store (Con 85) (Var (Global 0)));
        Let b27 = M[007908];
        Let b28 = M[007909];
        SetByte 008046 b27;
        SetByte 008047 b28;
        TraceOperation 048761 (Print "There is a violent explosion around you, leaving you standing in");
        GamePrint "There is a violent explosion around you, leaving you standing in";
        TraceOperation 048796 (Call (Floc 043738) [Var (Global 0),Con 1] Sp);
        Let b29 = M[007908];
        Let b30 = M[007909];
        PushFrame 048796;
        SetLocal 1 MakeHiLo(b29,b30);
        SetLocal 2 1;
        JumpCall: 043738, #actuals: 2
      } else {
        Let b31 = M[Offset(Offset(000751,Mul(Widen(b25),9)),6)];
        if (Equal(Widen(b31),94)) {
          Let b32 = M[001602];
          SetByte Offset(Offset(000751,Mul(Widen(b25),9)),6) LoByte(Widen(b32));
          SetByte 001601 b24;
          Let b33 = M[Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),6)];
          SetByte 001602 LoByte(Widen(b33));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),6) 94;
          TraceOperation 048758 (Store (Con 85) (Var (Global 0)));
          Let b34 = M[007908];
          Let b35 = M[007909];
          SetByte 008046 b34;
          SetByte 008047 b35;
          TraceOperation 048761 (Print "There is a violent explosion around you, leaving you standing in");
          GamePrint "There is a violent explosion around you, leaving you standing in";
          TraceOperation 048796 (Call (Floc 043738) [Var (Global 0),Con 1] Sp);
          Let b36 = M[007908];
          Let b37 = M[007909];
          PushFrame 048796;
          SetLocal 1 MakeHiLo(b36,b37);
          SetLocal 2 1;
          JumpCall: 043738, #actuals: 2
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 048796:
  PushStack call_result;
  TraceOperation 048803 (Print ". ");
  GamePrint ". ";
  TraceOperation 048806 (Call (Floc 022042) [Con 61,Con 42] Sp);
  PushFrame 048806;
  SetLocal 1 61;
  SetLocal 2 42;
  JumpCall: 022042, #actuals: 2
LocReturn 048806:
  PushStack call_result;
  TraceOperation 048813 New_line;
  GamePrint "\n";
  TraceOperation 048814 (Print "Apparently, you just materialised inside your own brain. This is very very very nasty. You have two choices: quit now, or experience this materialisation from the other end, in about five turns.");
  GamePrint "Apparently, you just materialised inside your own brain. This is very very very nasty. You have two choices: quit now, or experience this materialisation from the other end, in about five turns.";
  TraceOperation 048919 New_line;
  GamePrint "\n";
  TraceOperation 048920 (Jump 048953);
  Jump: 048953
LocOp 048923:
  TraceOperation 048923 (Je [Var (Global 73),Con 66] (Branch F (Dloc 048940)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 048927 (Test_attr (Con 66) (Con 4) (Branch F (Dloc 048940)));
    Let b3 = M[001345];
    if (TestBit(b3,3)) {
      TraceOperation 048931 (Call (Floc 042574) [Con 54] Sp);
      PushFrame 048931;
      SetLocal 1 54;
      JumpCall: 042574, #actuals: 1
    } else {
      Jump: 048940
    }
  } else {
    Jump: 048940
  }
LocReturn 048931:
  PushStack call_result;
  TraceOperation 048937 (Jump 048953);
  Jump: 048953
LocOp 048940:
  TraceOperation 048940 (Je [Var (Global 73),Con 190] (Branch T (Dloc 048947)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),190)) {
    Jump: 048947
  } else {
    TraceOperation 048944 (Insert_obj (Con 187) (Con 219));
    Let b3 = M[002438];
    if (IsZero(Widen(b3))) {
      SetByte 002438 219;
      Let b4 = M[002728];
      SetByte 002439 LoByte(Widen(b4));
      SetByte 002728 187;
      Jump: 048947
    } else {
      Let b5 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b5),187)) {
        Let b6 = M[002439];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
        SetByte 002438 219;
        Let b7 = M[002728];
        SetByte 002439 LoByte(Widen(b7));
        SetByte 002728 187;
        Jump: 048947
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 048947:
  TraceOperation 048947 (Call (Floc 042574) [Var (Global 73)] Sp);
  Let b1 = M[008054];
  Let b2 = M[008055];
  PushFrame 048947;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 042574, #actuals: 1
LocReturn 048947:
  PushStack call_result;
  Jump: 048953
LocOp 048953:
  TraceOperation 048953 (Store (Con 89) (Con 0));
  SetByte 008054 0;
  SetByte 008055 0;
  TraceOperation 048956 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[352]--------------------------------------------------
LocRoutine 048958:
  MakeRoutineFrame 0;
  Jump: 048959
LocOp 048959:
  TraceOperation 048959 (Jz (Var (Global 207)) (Branch F Dtrue));
  Let b1 = M[008322];
  Let b2 = M[008323];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 048962 (Jg (Var (Global 74)) (Con 3) (Branch F Dfalse));
    Let b3 = M[008056];
    Let b4 = M[008057];
    if (GreaterThan(MakeHiLo(b3,b4),3)) {
      TraceOperation 048966 Rtrue;
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
--[353]--------------------------------------------------
LocRoutine 048968:
  MakeRoutineFrame 0;
  Jump: 048969
LocOp 048969:
  TraceOperation 048969 (Print "You can ");
  GamePrint "You can ";
  TraceOperation 048974 (Call (Floc 048958) [] Sp);
  PushFrame 048974;
  JumpCall: 048958, #actuals: 0
LocReturn 048974:
  PushStack call_result;
  TraceOperation 048979 (Jz (Var Sp) (Branch T (Dloc 048988)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 048988
  } else {
    TraceOperation 048982 (Je [Var (Global 73),Con 86,Con 190] (Branch T (Dloc 048999)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),86),Equal(MakeHiLo(b2,b3),190))) {
      Jump: 048999
    } else {
      Jump: 048988
    }
  }
LocOp 048988:
  TraceOperation 048988 (Print "hear nothing, ");
  GamePrint "hear nothing, ";
  Jump: 048999
LocOp 048999:
  TraceOperation 048999 (Call (Floc 048958) [] Sp);
  PushFrame 048999;
  JumpCall: 048958, #actuals: 0
LocReturn 048999:
  PushStack call_result;
  TraceOperation 049004 (Jz (Var Sp) (Branch T (Dloc 049013)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049013
  } else {
    TraceOperation 049007 (Je [Var (Global 73),Con 121,Con 99] (Branch T (Dloc 049024)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),121),Equal(MakeHiLo(b2,b3),99))) {
      Jump: 049024
    } else {
      Jump: 049013
    }
  }
LocOp 049013:
  TraceOperation 049013 (Print "smell nothing, ");
  GamePrint "smell nothing, ";
  Jump: 049024
LocOp 049024:
  TraceOperation 049024 (Print "taste nothing, ");
  GamePrint "taste nothing, ";
  TraceOperation 049035 (Call (Floc 048958) [] Sp);
  PushFrame 049035;
  JumpCall: 048958, #actuals: 0
LocReturn 049035:
  PushStack call_result;
  TraceOperation 049040 (Jz (Var Sp) (Branch T (Dloc 049049)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049049
  } else {
    TraceOperation 049043 (Je [Var (Global 73),Con 137,Con 66] (Branch T (Dloc 049058)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),137),Equal(MakeHiLo(b2,b3),66))) {
      Jump: 049058
    } else {
      Jump: 049049
    }
  }
LocOp 049049:
  TraceOperation 049049 (Print "see nothing, ");
  GamePrint "see nothing, ";
  Jump: 049058
LocOp 049058:
  TraceOperation 049058 (Call (Floc 048958) [] Sp);
  PushFrame 049058;
  JumpCall: 048958, #actuals: 0
LocReturn 049058:
  PushStack call_result;
  TraceOperation 049063 (Jz (Var Sp) (Branch T (Dloc 049072)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049072
  } else {
    TraceOperation 049066 (Je [Var (Global 73),Con 76,Con 213] (Branch T (Dloc 049083)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),76),Equal(MakeHiLo(b2,b3),213))) {
      Jump: 049083
    } else {
      Jump: 049072
    }
  }
LocOp 049072:
  TraceOperation 049072 (Print "feel nothing, ");
  GamePrint "feel nothing, ";
  Jump: 049083
LocOp 049083:
  TraceOperation 049083 (Print_ret "and are not even certain who you are.");
  GamePrint "and are not even certain who you are.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[354]--------------------------------------------------
LocRoutine 049102:
  MakeRoutineFrame 0;
  Jump: 049103
LocOp 049103:
  TraceOperation 049103 (Print "You can ");
  GamePrint "You can ";
  TraceOperation 049108 (Call (Floc 048958) [] Sp);
  PushFrame 049108;
  JumpCall: 048958, #actuals: 0
LocReturn 049108:
  PushStack call_result;
  TraceOperation 049113 (Jz (Var Sp) (Branch T (Dloc 049122)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049122
  } else {
    TraceOperation 049116 (Je [Var (Global 73),Con 137,Con 66] (Branch T (Dloc 049131)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),137),Equal(MakeHiLo(b2,b3),66))) {
      Jump: 049131
    } else {
      Jump: 049122
    }
  }
LocOp 049122:
  TraceOperation 049122 (Print "see nothing, ");
  GamePrint "see nothing, ";
  Jump: 049131
LocOp 049131:
  TraceOperation 049131 (Call (Floc 048958) [] Sp);
  PushFrame 049131;
  JumpCall: 048958, #actuals: 0
LocReturn 049131:
  PushStack call_result;
  TraceOperation 049136 (Jz (Var Sp) (Branch T (Dloc 049145)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049145
  } else {
    TraceOperation 049139 (Je [Var (Global 73),Con 76,Con 213] (Branch T (Dloc 049156)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),76),Equal(MakeHiLo(b2,b3),213))) {
      Jump: 049156
    } else {
      Jump: 049145
    }
  }
LocOp 049145:
  TraceOperation 049145 (Print "feel nothing, ");
  GamePrint "feel nothing, ";
  Jump: 049156
LocOp 049156:
  TraceOperation 049156 (Call (Floc 048958) [] Sp);
  PushFrame 049156;
  JumpCall: 048958, #actuals: 0
LocReturn 049156:
  PushStack call_result;
  TraceOperation 049161 (Jz (Var Sp) (Branch T (Dloc 049170)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049170
  } else {
    TraceOperation 049164 (Je [Var (Global 73),Con 86,Con 190] (Branch T (Dloc 049181)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),86),Equal(MakeHiLo(b2,b3),190))) {
      Jump: 049181
    } else {
      Jump: 049170
    }
  }
LocOp 049170:
  TraceOperation 049170 (Print "hear nothing, ");
  GamePrint "hear nothing, ";
  Jump: 049181
LocOp 049181:
  TraceOperation 049181 (Print "taste nothing, ");
  GamePrint "taste nothing, ";
  TraceOperation 049192 (Call (Floc 048958) [] Sp);
  PushFrame 049192;
  JumpCall: 048958, #actuals: 0
LocReturn 049192:
  PushStack call_result;
  TraceOperation 049197 (Jz (Var Sp) (Branch T (Dloc 049206)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049206
  } else {
    TraceOperation 049200 (Je [Var (Global 73),Con 121,Con 99] (Branch T (Dloc 049217)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),121),Equal(MakeHiLo(b2,b3),99))) {
      Jump: 049217
    } else {
      Jump: 049206
    }
  }
LocOp 049206:
  TraceOperation 049206 (Print "smell nothing, ");
  GamePrint "smell nothing, ";
  Jump: 049217
LocOp 049217:
  TraceOperation 049217 (Print_ret "and are not entirely certain who you are.");
  GamePrint "and are not entirely certain who you are.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[355]--------------------------------------------------
LocRoutine 049240:
  MakeRoutineFrame 0;
  Jump: 049241
LocOp 049241:
  TraceOperation 049241 (Print "You can't ");
  GamePrint "You can't ";
  TraceOperation 049246 (Call (Floc 048958) [] Sp);
  PushFrame 049246;
  JumpCall: 048958, #actuals: 0
LocReturn 049246:
  PushStack call_result;
  TraceOperation 049251 (Jz (Var Sp) (Branch T (Dloc 049260)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049260
  } else {
    TraceOperation 049254 (Je [Var (Global 73),Con 86,Con 190] (Branch T (Dloc 049267)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),86),Equal(MakeHiLo(b2,b3),190))) {
      Jump: 049267
    } else {
      Jump: 049260
    }
  }
LocOp 049260:
  TraceOperation 049260 (Print "hear anything, ");
  GamePrint "hear anything, ";
  Jump: 049267
LocOp 049267:
  TraceOperation 049267 (Call (Floc 048958) [] Sp);
  PushFrame 049267;
  JumpCall: 048958, #actuals: 0
LocReturn 049267:
  PushStack call_result;
  TraceOperation 049272 (Jz (Var Sp) (Branch T (Dloc 049281)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049281
  } else {
    TraceOperation 049275 (Je [Var (Global 73),Con 137,Con 66] (Branch T (Dloc 049286)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),137),Equal(MakeHiLo(b2,b3),66))) {
      Jump: 049286
    } else {
      Jump: 049281
    }
  }
LocOp 049281:
  TraceOperation 049281 (Print "see anything, ");
  GamePrint "see anything, ";
  Jump: 049286
LocOp 049286:
  TraceOperation 049286 (Call (Floc 048958) [] Sp);
  PushFrame 049286;
  JumpCall: 048958, #actuals: 0
LocReturn 049286:
  PushStack call_result;
  TraceOperation 049291 (Jz (Var Sp) (Branch T (Dloc 049300)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049300
  } else {
    TraceOperation 049294 (Je [Var (Global 73),Con 121,Con 99] (Branch T (Dloc 049309)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),121),Equal(MakeHiLo(b2,b3),99))) {
      Jump: 049309
    } else {
      Jump: 049300
    }
  }
LocOp 049300:
  TraceOperation 049300 (Print "smell anything, ");
  GamePrint "smell anything, ";
  Jump: 049309
LocOp 049309:
  TraceOperation 049309 (Call (Floc 048958) [] Sp);
  PushFrame 049309;
  JumpCall: 048958, #actuals: 0
LocReturn 049309:
  PushStack call_result;
  TraceOperation 049314 (Jz (Var Sp) (Branch T (Dloc 049323)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049323
  } else {
    TraceOperation 049317 (Je [Var (Global 73),Con 76,Con 213] (Branch T (Dloc 049330)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),76),Equal(MakeHiLo(b2,b3),213))) {
      Jump: 049330
    } else {
      Jump: 049323
    }
  }
LocOp 049323:
  TraceOperation 049323 (Print "feel anything, ");
  GamePrint "feel anything, ";
  Jump: 049330
LocOp 049330:
  TraceOperation 049330 (Print_ret "or taste anything, and do not even know where you are or who you are or how you got there.");
  GamePrint "or taste anything, and do not even know where you are or who you are or how you got there.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[356]--------------------------------------------------
LocRoutine 049376:
  MakeRoutineFrame 0;
  Jump: 049377
LocOp 049377:
  TraceOperation 049377 (Print "There's nothing you can taste, ");
  GamePrint "There's nothing you can taste, ";
  TraceOperation 049388 (Call (Floc 048958) [] Sp);
  PushFrame 049388;
  JumpCall: 048958, #actuals: 0
LocReturn 049388:
  PushStack call_result;
  TraceOperation 049393 (Jz (Var Sp) (Branch T (Dloc 049402)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049402
  } else {
    TraceOperation 049396 (Je [Var (Global 73),Con 137,Con 66] (Branch T (Dloc 049411)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),137),Equal(MakeHiLo(b2,b3),66))) {
      Jump: 049411
    } else {
      Jump: 049402
    }
  }
LocOp 049402:
  TraceOperation 049402 (Print "nothing you can see, ");
  GamePrint "nothing you can see, ";
  Jump: 049411
LocOp 049411:
  TraceOperation 049411 (Call (Floc 048958) [] Sp);
  PushFrame 049411;
  JumpCall: 048958, #actuals: 0
LocReturn 049411:
  PushStack call_result;
  TraceOperation 049416 (Jz (Var Sp) (Branch T (Dloc 049425)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049425
  } else {
    TraceOperation 049419 (Je [Var (Global 73),Con 86,Con 190] (Branch T (Dloc 049434)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),86),Equal(MakeHiLo(b2,b3),190))) {
      Jump: 049434
    } else {
      Jump: 049425
    }
  }
LocOp 049425:
  TraceOperation 049425 (Print "nothing you can hear, ");
  GamePrint "nothing you can hear, ";
  Jump: 049434
LocOp 049434:
  TraceOperation 049434 (Call (Floc 048958) [] Sp);
  PushFrame 049434;
  JumpCall: 048958, #actuals: 0
LocReturn 049434:
  PushStack call_result;
  TraceOperation 049439 (Jz (Var Sp) (Branch T (Dloc 049448)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049448
  } else {
    TraceOperation 049442 (Je [Var (Global 73),Con 76,Con 213] (Branch T (Dloc 049457)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),76),Equal(MakeHiLo(b2,b3),213))) {
      Jump: 049457
    } else {
      Jump: 049448
    }
  }
LocOp 049448:
  TraceOperation 049448 (Print "nothing you can feel, ");
  GamePrint "nothing you can feel, ";
  Jump: 049457
LocOp 049457:
  TraceOperation 049457 (Call (Floc 048958) [] Sp);
  PushFrame 049457;
  JumpCall: 048958, #actuals: 0
LocReturn 049457:
  PushStack call_result;
  TraceOperation 049462 (Jz (Var Sp) (Branch T (Dloc 049471)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049471
  } else {
    TraceOperation 049465 (Je [Var (Global 73),Con 121,Con 99] (Branch T (Dloc 049482)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),121),Equal(MakeHiLo(b2,b3),99))) {
      Jump: 049482
    } else {
      Jump: 049471
    }
  }
LocOp 049471:
  TraceOperation 049471 (Print "nothing you can smell, ");
  GamePrint "nothing you can smell, ";
  Jump: 049482
LocOp 049482:
  TraceOperation 049482 (Print_ret "you do not even know who you are.");
  GamePrint "you do not even know who you are.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[357]--------------------------------------------------
LocRoutine 049502:
  MakeRoutineFrame 0;
  Jump: 049503
LocOp 049503:
  TraceOperation 049503 (Je [Var (Global 73),Con 99] (Branch F (Dloc 049521)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),99)) {
    TraceOperation 049507 (Print "Bugblatter Beast");
    GamePrint "Bugblatter Beast";
    TraceOperation 049520 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 049521
  }
LocOp 049521:
  TraceOperation 049521 (Test_attr (Con 121) (Con 4) (Branch F (Dloc 049531)));
  Let b1 = M[001840];
  if (TestBit(b1,3)) {
    TraceOperation 049525 (Print "guard");
    GamePrint "guard";
    TraceOperation 049530 Rtrue;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    Jump: 049531
  }
LocOp 049531:
  TraceOperation 049531 (Print_obj (Con 142));
  Let b1 = M[002036];
  Let b2 = M[002037];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 049533 Rtrue;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 049533 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[358]--------------------------------------------------
LocRoutine 049534:
  MakeRoutineFrame 0;
  Jump: 049535
LocOp 049535:
  TraceOperation 049535 (Print "The ");
  GamePrint "The ";
  TraceOperation 049538 (Print_obj (Con 123));
  Let b1 = M[001865];
  Let b2 = M[001866];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 049540 (Call (Floc 042734) [Con -9961] Sp);
    PushFrame 049540;
    SetLocal 1 -9961;
    JumpCall: 042734, #actuals: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 049540 (Call (Floc 042734) [Con -9961] Sp);
    PushFrame 049540;
    SetLocal 1 -9961;
    JumpCall: 042734, #actuals: 1
  }
LocReturn 049540:
  PushStack call_result;
  TraceOperation 049547 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[359]--------------------------------------------------
LocRoutine 049548:
  MakeRoutineFrame 0;
  Jump: 049549
LocOp 049549:
  TraceOperation 049549 (Je [Var (Global 203),Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 049553 (Test_attr (Con 19) (Con 5) (Branch T Dfalse));
    Let b3 = M[000922];
    if (TestBit(b3,2)) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      TraceOperation 049557 (Insert_obj (Con 19) (Con 31));
      Let b5 = M[000926];
      if (IsZero(Widen(b5))) {
        SetByte 000926 31;
        Let b6 = M[001036];
        SetByte 000927 LoByte(Widen(b6));
        SetByte 001036 19;
        TraceOperation 049560 (Set_attr (Con 19) (Con 5));
        Let b7 = M[000922];
        SetByte 000922 SetBit(b7,2);
        TraceOperation 049563 (Clear_attr (Con 19) (Con 21));
        Let b8 = M[000924];
        SetByte 000924 ClearBit(b8,2);
        TraceOperation 049566 (Print "As you pick up the ");
        GamePrint "As you pick up the ";
        TraceOperation 049579 (Print_obj (Con 19));
        Let b9 = M[000929];
        Let b10 = M[000930];
        Let b11 = M[Address(MakeHiLo(b9,b10))];
        if (IsZeroByte(b11)) {
          GamePrint "";
          TraceOperation 049581 (Print " a tree outside the window collapses. There is no causal relationship between these two events.");
          GamePrint " a tree outside the window collapses. There is no causal relationship between these two events.";
          TraceOperation 049638 (Test_attr (Con 162) (Con 5) (Branch F (Dloc 049647)));
          Let b12 = M[002209];
          if (TestBit(b12,2)) {
            TraceOperation 049642 (Call (Floc 059962) [] Sp);
            PushFrame 049642;
            JumpCall: 059962, #actuals: 0
          } else {
            Jump: 049647
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
          TraceOperation 049581 (Print " a tree outside the window collapses. There is no causal relationship between these two events.");
          GamePrint " a tree outside the window collapses. There is no causal relationship between these two events.";
          TraceOperation 049638 (Test_attr (Con 162) (Con 5) (Branch F (Dloc 049647)));
          Let b13 = M[002209];
          if (TestBit(b13,2)) {
            TraceOperation 049642 (Call (Floc 059962) [] Sp);
            PushFrame 049642;
            JumpCall: 059962, #actuals: 0
          } else {
            Jump: 049647
          }
        }
      } else {
        Let b14 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b14),19)) {
          Let b15 = M[000927];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b15));
          SetByte 000926 31;
          Let b16 = M[001036];
          SetByte 000927 LoByte(Widen(b16));
          SetByte 001036 19;
          TraceOperation 049560 (Set_attr (Con 19) (Con 5));
          Let b17 = M[000922];
          SetByte 000922 SetBit(b17,2);
          TraceOperation 049563 (Clear_attr (Con 19) (Con 21));
          Let b18 = M[000924];
          SetByte 000924 ClearBit(b18,2);
          TraceOperation 049566 (Print "As you pick up the ");
          GamePrint "As you pick up the ";
          TraceOperation 049579 (Print_obj (Con 19));
          Let b19 = M[000929];
          Let b20 = M[000930];
          Let b21 = M[Address(MakeHiLo(b19,b20))];
          if (IsZeroByte(b21)) {
            GamePrint "";
            TraceOperation 049581 (Print " a tree outside the window collapses. There is no causal relationship between these two events.");
            GamePrint " a tree outside the window collapses. There is no causal relationship between these two events.";
            TraceOperation 049638 (Test_attr (Con 162) (Con 5) (Branch F (Dloc 049647)));
            Let b22 = M[002209];
            if (TestBit(b22,2)) {
              TraceOperation 049642 (Call (Floc 059962) [] Sp);
              PushFrame 049642;
              JumpCall: 059962, #actuals: 0
            } else {
              Jump: 049647
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b19,b20)),1));
            TraceOperation 049581 (Print " a tree outside the window collapses. There is no causal relationship between these two events.");
            GamePrint " a tree outside the window collapses. There is no causal relationship between these two events.";
            TraceOperation 049638 (Test_attr (Con 162) (Con 5) (Branch F (Dloc 049647)));
            Let b23 = M[002209];
            if (TestBit(b23,2)) {
              TraceOperation 049642 (Call (Floc 059962) [] Sp);
              PushFrame 049642;
              JumpCall: 059962, #actuals: 0
            } else {
              Jump: 049647
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    }
  } else {
    PopFrame return_address_24;
    JumpReturn: return_address_24, result: 0
  }
LocReturn 049642:
  PushStack call_result;
  Jump: 049647
LocOp 049647:
  TraceOperation 049647 New_line;
  GamePrint "\n";
  TraceOperation 049648 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[360]--------------------------------------------------
LocRoutine 049650:
  MakeRoutineFrame 0;
  Jump: 049651
LocOp 049651:
  TraceOperation 049651 (Je [Var (Global 202),Con 212,Con 214] (Branch F (Dloc 049666)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),212),Equal(MakeHiLo(b1,b2),214))) {
    TraceOperation 049657 (Call (Floc 022042) [Con 171,Var (Global 202),Var (Global 201)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    Let b5 = M[008310];
    Let b6 = M[008311];
    PushFrame 049657;
    SetLocal 1 171;
    SetLocal 2 MakeHiLo(b3,b4);
    SetLocal 3 MakeHiLo(b5,b6);
    JumpCall: 022042, #actuals: 3
  } else {
    Jump: 049666
  }
LocReturn 049657:
  PushStack call_result;
  TraceOperation 049665 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 049666:
  TraceOperation 049666 (Insert_obj (Var (Global 201)) (Con 219));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 219;
    Let b4 = M[002728];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b4));
    SetByte 002728 b2;
    TraceOperation 049669 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 049679)));
    Let b5 = M[008310];
    Let b6 = M[008311];
    Let b7 = M[008324];
    Let b8 = M[008325];
    if (Equal(MakeHiLo(b5,b6),MakeHiLo(b7,b8))) {
      TraceOperation 049673 (Store (Con 224) (Con 0));
      SetByte 008324 0;
      SetByte 008325 0;
      TraceOperation 049676 (Jump 049686);
      Jump: 049686
    } else {
      Jump: 049679
    }
  } else {
    Let b9 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b9),MakeHiLo(b1,b2))) {
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b10));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 219;
      Let b11 = M[002728];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b11));
      SetByte 002728 b2;
      TraceOperation 049669 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 049679)));
      Let b12 = M[008310];
      Let b13 = M[008311];
      Let b14 = M[008324];
      Let b15 = M[008325];
      if (Equal(MakeHiLo(b12,b13),MakeHiLo(b14,b15))) {
        TraceOperation 049673 (Store (Con 224) (Con 0));
        SetByte 008324 0;
        SetByte 008325 0;
        TraceOperation 049676 (Jump 049686);
        Jump: 049686
      } else {
        Jump: 049679
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 049679:
  TraceOperation 049679 (Je [Var (Global 201),Var (Global 116)] (Branch F (Dloc 049686)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008140];
  Let b4 = M[008141];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 049683 (Store (Con 132) (Con 0));
    SetByte 008140 0;
    SetByte 008141 0;
    Jump: 049686
  } else {
    Jump: 049686
  }
LocOp 049686:
  TraceOperation 049686 (Print "It spills all over and then evaporates.");
  GamePrint "It spills all over and then evaporates.";
  TraceOperation 049711 (Je [Var (Global 201),Con 122] (Branch F (Dloc 049725)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),122)) {
    TraceOperation 049715 (Call (Floc 049734) [Con -9893] Sp);
    PushFrame 049715;
    SetLocal 1 -9893;
    JumpCall: 049734, #actuals: 1
  } else {
    Jump: 049725
  }
LocReturn 049715:
  PushStack call_result;
  TraceOperation 049722 (Jump 049732);
  Jump: 049732
LocOp 049725:
  TraceOperation 049725 (Call (Floc 049734) [Con -12342] Sp);
  PushFrame 049725;
  SetLocal 1 -12342;
  JumpCall: 049734, #actuals: 1
LocReturn 049725:
  PushStack call_result;
  Jump: 049732
LocOp 049732:
  TraceOperation 049732 New_line;
  GamePrint "\n";
  TraceOperation 049733 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[361]--------------------------------------------------
LocRoutine 049734:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 049737
LocOp 049737:
  TraceOperation 049737 (Print " The ");
  GamePrint " The ";
  TraceOperation 049740 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z3(GetLocal(1)));
  TraceOperation 049742 (Print " itself vaporises, part of the Galactic Anti-Litter Program.");
  GamePrint " itself vaporises, part of the Galactic Anti-Litter Program.";
  TraceOperation 049785 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[362]--------------------------------------------------
LocRoutine 049786:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 049789
LocOp 049789:
  TraceOperation 049789 (Call (Floc 049796) [Con 9] Sp);
  PushFrame 049789;
  SetLocal 1 9;
  JumpCall: 049796, #actuals: 1
LocReturn 049789:
  PushStack call_result;
  TraceOperation 049795 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[363]--------------------------------------------------
LocRoutine 049796:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 049799
LocOp 049799:
  TraceOperation 049799 (Print "There is a nice, hot cup of ");
  GamePrint "There is a nice, hot cup of ";
  TraceOperation 049816 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 049818 (Print_ret " here.");
    GamePrint " here.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 049818 (Print_ret " here.");
    GamePrint " here.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[364]--------------------------------------------------
LocRoutine 049824:
  MakeRoutineFrame 0;
  Jump: 049825
LocOp 049825:
  TraceOperation 049825 (Je [Var (Global 203),Con 124] (Branch F (Dloc 049854)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 049829 (Je [Var (Global 201),Con 9] (Branch F (Dloc 049854)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),9)) {
      TraceOperation 049833 (Insert_obj (Con 9) (Con 31));
      Let b5 = M[000836];
      if (IsZero(Widen(b5))) {
        SetByte 000836 31;
        Let b6 = M[001036];
        SetByte 000837 LoByte(Widen(b6));
        SetByte 001036 9;
        TraceOperation 049836 (Store (Con 82) (Con 0));
        SetByte 008040 0;
        SetByte 008041 0;
        TraceOperation 049839 (Print_ret "no tea: Dropped.");
        GamePrint "no tea: Dropped.\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      } else {
        Let b8 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b8),9)) {
          Let b9 = M[000837];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b9));
          SetByte 000836 31;
          Let b10 = M[001036];
          SetByte 000837 LoByte(Widen(b10));
          SetByte 001036 9;
          TraceOperation 049836 (Store (Con 82) (Con 0));
          SetByte 008040 0;
          SetByte 008041 0;
          TraceOperation 049839 (Print_ret "no tea: Dropped.");
          GamePrint "no tea: Dropped.\n";
          PopFrame return_address_11;
          JumpReturn: return_address_11, result: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 049854
    }
  } else {
    Jump: 049854
  }
LocOp 049854:
  TraceOperation 049854 (Je [Var (Global 203),Con 53] (Branch F (Dloc 049902)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 049858 (Insert_obj (Con 9) (Var (Global 0)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[000836];
    if (IsZero(Widen(b5))) {
      SetByte 000836 b4;
      Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte 000837 LoByte(Widen(b6));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 9;
      TraceOperation 049861 (Je [Var (Global 0),Con 175] (Branch F (Dloc 049874)));
      Let b7 = M[007908];
      Let b8 = M[007909];
      if (Equal(MakeHiLo(b7,b8),175)) {
        TraceOperation 049865 (Store (Con 82) (Con 1));
        SetByte 008040 0;
        SetByte 008041 1;
        TraceOperation 049868 (Call (Floc 031550) [] Sp);
        PushFrame 049868;
        JumpCall: 031550, #actuals: 0
      } else {
        Jump: 049874
      }
    } else {
      Let b9 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b9),9)) {
        Let b10 = M[000837];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b10));
        SetByte 000836 b4;
        Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
        SetByte 000837 LoByte(Widen(b11));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 9;
        TraceOperation 049861 (Je [Var (Global 0),Con 175] (Branch F (Dloc 049874)));
        Let b12 = M[007908];
        Let b13 = M[007909];
        if (Equal(MakeHiLo(b12,b13),175)) {
          TraceOperation 049865 (Store (Con 82) (Con 1));
          SetByte 008040 0;
          SetByte 008041 1;
          TraceOperation 049868 (Call (Floc 031550) [] Sp);
          PushFrame 049868;
          JumpCall: 031550, #actuals: 0
        } else {
          Jump: 049874
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 049902
  }
LocReturn 049868:
  PushStack call_result;
  TraceOperation 049873 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 049874:
  TraceOperation 049874 (Jz (Var (Global 66)) (Branch T (Dloc 049886)));
  Let b1 = M[008040];
  Let b2 = M[008041];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 049886
  } else {
    TraceOperation 049877 (Print_ret "Dropped.");
    GamePrint "Dropped.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 049886:
  TraceOperation 049886 (Store (Con 82) (Con 1));
  SetByte 008040 0;
  SetByte 008041 1;
  TraceOperation 049889 (Print_ret "no tea: Taken.");
  GamePrint "no tea: Taken.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 049902:
  TraceOperation 049902 (Je [Var (Global 203),Con 52,Con 57,Con 51] (Branch F (Dloc 050057)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),52),Equal(MakeHiLo(b1,b2),57)),Equal(MakeHiLo(b1,b2),51))) {
    TraceOperation 049910 (Call (Floc 043468) [Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 049910;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 043468, #actuals: 1
  } else {
    Jump: 050057
  }
LocReturn 049910:
  PushStack call_result;
  TraceOperation 049916 (Jz (Var Sp) (Branch F (Dloc 049928)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 049919 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 049921 (Print_ret " the cup!");
    GamePrint " the cup!\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 049928
  }
LocOp 049928:
  TraceOperation 049928 (Add (Var (Global 1)) (Con 100) (Global 1));
  Let b1 = M[007910];
  Let b2 = M[007911];
  SetByte 007910 HiByte(Add(MakeHiLo(b1,b2),100));
  SetByte 007911 LoByte(Add(MakeHiLo(b1,b2),100));
  TraceOperation 049932 (Insert_obj (Con 9) (Con 219));
  Let b3 = M[000836];
  if (IsZero(Widen(b3))) {
    SetByte 000836 219;
    Let b4 = M[002728];
    SetByte 000837 LoByte(Widen(b4));
    SetByte 002728 9;
    TraceOperation 049935 (Store (Con 82) (Con 1));
    SetByte 008040 0;
    SetByte 008041 1;
    TraceOperation 049938 (Je [Con 9,Var (Global 208)] (Branch F (Dloc 049945)));
    Let b5 = M[008324];
    Let b6 = M[008325];
    if (Equal(9,MakeHiLo(b5,b6))) {
      TraceOperation 049942 (Store (Con 224) (Con 0));
      SetByte 008324 0;
      SetByte 008325 0;
      Jump: 049945
    } else {
      Jump: 049945
    }
  } else {
    Let b7 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b7),9)) {
      Let b8 = M[000837];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b8));
      SetByte 000836 219;
      Let b9 = M[002728];
      SetByte 000837 LoByte(Widen(b9));
      SetByte 002728 9;
      TraceOperation 049935 (Store (Con 82) (Con 1));
      SetByte 008040 0;
      SetByte 008041 1;
      TraceOperation 049938 (Je [Con 9,Var (Global 208)] (Branch F (Dloc 049945)));
      Let b10 = M[008324];
      Let b11 = M[008325];
      if (Equal(9,MakeHiLo(b10,b11))) {
        TraceOperation 049942 (Store (Con 224) (Con 0));
        SetByte 008324 0;
        SetByte 008325 0;
        Jump: 049945
      } else {
        Jump: 049945
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 049945:
  TraceOperation 049945 (Print "It is the finest tea you have ever tasted. It has almost made this entire misadventure seem worthwhile. You experience several moments of complete happiness and relaxation.");
  GamePrint "It is the finest tea you have ever tasted. It has almost made this entire misadventure seem worthwhile. You experience several moments of complete happiness and relaxation.";
  TraceOperation 050048 (Call (Floc 049734) [Con -12342] Sp);
  PushFrame 050048;
  SetLocal 1 -12342;
  JumpCall: 049734, #actuals: 1
LocReturn 050048:
  PushStack call_result;
  TraceOperation 050055 New_line;
  GamePrint "\n";
  TraceOperation 050056 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 050057:
  TraceOperation 050057 (Je [Var (Global 203),Con 154,Con 112] (Branch F (Dloc 050069)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),112))) {
    TraceOperation 050063 (Call (Floc 049650) [] Sp);
    PushFrame 050063;
    JumpCall: 049650, #actuals: 0
  } else {
    Jump: 050069
  }
LocReturn 050063:
  PushStack call_result;
  TraceOperation 050068 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 050069:
  TraceOperation 050069 (Je [Var (Global 203),Con 63,Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 050075 (Print_paddr (Var (Global 46)));
    Let b3 = M[008000];
    Let b4 = M[008001];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 050077 (Print " it has even more");
    GamePrint " it has even more";
    TraceOperation 050086 (Print_paddr (Var (Global 34)));
    Let b5 = M[007976];
    Let b6 = M[007977];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 050088 (Print " than ");
    GamePrint " than ";
    TraceOperation 050093 (Print_obj (Con 204));
    Let b7 = M[002594];
    Let b8 = M[002595];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    if (IsZeroByte(b9)) {
      GamePrint "";
      TraceOperation 050095 (Print "!");
      GamePrint "!";
      TraceOperation 050098 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 050113)));
      Let b10 = M[008310];
      Let b11 = M[008311];
      Let b12 = M[008324];
      Let b13 = M[008325];
      if (Equal(MakeHiLo(b10,b11),MakeHiLo(b12,b13))) {
        TraceOperation 050102 (Print " ");
        GamePrint " ";
        TraceOperation 050105 (Call (Floc 022042) [Con 61,Con 179] Sp);
        PushFrame 050105;
        SetLocal 1 61;
        SetLocal 2 179;
        JumpCall: 022042, #actuals: 2
      } else {
        Jump: 050113
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
      TraceOperation 050095 (Print "!");
      GamePrint "!";
      TraceOperation 050098 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 050113)));
      Let b14 = M[008310];
      Let b15 = M[008311];
      Let b16 = M[008324];
      Let b17 = M[008325];
      if (Equal(MakeHiLo(b14,b15),MakeHiLo(b16,b17))) {
        TraceOperation 050102 (Print " ");
        GamePrint " ";
        TraceOperation 050105 (Call (Floc 022042) [Con 61,Con 179] Sp);
        PushFrame 050105;
        SetLocal 1 61;
        SetLocal 2 179;
        JumpCall: 022042, #actuals: 2
      } else {
        Jump: 050113
      }
    }
  } else {
    PopFrame return_address_18;
    JumpReturn: return_address_18, result: 0
  }
LocReturn 050105:
  PushStack call_result;
  TraceOperation 050112 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 050113:
  TraceOperation 050113 New_line;
  GamePrint "\n";
  TraceOperation 050114 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[365]--------------------------------------------------
LocRoutine 050116:
  MakeRoutineFrame 0;
  Jump: 050117
LocOp 050117:
  TraceOperation 050117 (Je [Var (Global 203),Con 53,Con 124] (Branch F (Dloc 050160)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),53),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 050123 (Je [Var (Global 201),Con 8] (Branch F (Dloc 050160)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),8)) {
      TraceOperation 050127 (Test_attr (Con 78) (Con 3) (Branch T (Dloc 050160)));
      Let b5 = M[001453];
      if (TestBit(b5,4)) {
        Jump: 050160
      } else {
        TraceOperation 050131 (Print_ret "Your common sense tells you that you can't do that.");
        GamePrint "Your common sense tells you that you can't do that.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      }
    } else {
      Jump: 050160
    }
  } else {
    Jump: 050160
  }
LocOp 050160:
  TraceOperation 050160 (Je [Var (Global 203),Con 124] (Branch F (Dloc 050187)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 050164 (Je [Var (Global 201),Con 8] (Branch F (Dloc 050187)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),8)) {
      TraceOperation 050168 (Jz (Var (Global 66)) (Branch F (Dloc 050187)));
      Let b5 = M[008040];
      Let b6 = M[008041];
      if (IsZero(MakeHiLo(b5,b6))) {
        TraceOperation 050171 (Store (Con 82) (Con 1));
        SetByte 008040 0;
        SetByte 008041 1;
        TraceOperation 050174 (Print_ret "no tea: Taken.");
        GamePrint "no tea: Taken.\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      } else {
        Jump: 050187
      }
    } else {
      Jump: 050187
    }
  } else {
    Jump: 050187
  }
LocOp 050187:
  TraceOperation 050187 (Je [Var (Global 203),Con 66,Con 134] (Branch F (Dloc 050197)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),66),Equal(MakeHiLo(b1,b2),134))) {
    TraceOperation 050193 (Je [Var (Global 202),Con 216] (Branch T Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),216)) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 050197
    }
  } else {
    Jump: 050197
  }
LocOp 050197:
  TraceOperation 050197 (Je [Var (Global 203),Con 22] (Branch F (Dloc 050205)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 050201 (Je [Var (Global 201),Con 1] (Branch T Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),1)) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 050205
    }
  } else {
    Jump: 050205
  }
LocOp 050205:
  TraceOperation 050205 (Je [Var (Global 203),Con 23] (Branch F (Dloc 050221)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 050209 (Je [Var (Global 201),Con 209] (Branch F (Dloc 050221)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),209)) {
      TraceOperation 050213 (Call (Floc 022042) [Con 159,Con 208] Sp);
      PushFrame 050213;
      SetLocal 1 159;
      SetLocal 2 208;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 050221
    }
  } else {
    Jump: 050221
  }
LocReturn 050213:
  PushStack call_result;
  TraceOperation 050220 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 050221:
  TraceOperation 050221 (Print_ret "You're talking complete nonsense; pull yourself together.");
  GamePrint "You're talking complete nonsense; pull yourself together.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[366]--------------------------------------------------
LocRoutine 050260:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 050263
LocOp 050263:
  TraceOperation 050263 (Je [Var (Local 1),Con 9,Con 8] (Branch F Dtrue));
  if (LogOr(Equal(GetLocal(1),9),Equal(GetLocal(1),8))) {
    TraceOperation 050269 (Je [Var (Global 203),Con 134] (Branch T Dtrue));
    Let b1 = M[008314];
    Let b2 = M[008315];
    if (Equal(MakeHiLo(b1,b2),134)) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    } else {
      TraceOperation 050273 (Je [Var (Local 1),Con 9] (Branch F (Dloc 050308)));
      if (Equal(GetLocal(1),9)) {
        TraceOperation 050277 (Je [Var (Global 203),Con 124] (Branch F (Dloc 050301)));
        Let b4 = M[008314];
        Let b5 = M[008315];
        if (Equal(MakeHiLo(b4,b5),124)) {
          TraceOperation 050281 (Call (Floc 043468) [Con 9] Sp);
          PushFrame 050281;
          SetLocal 1 9;
          JumpCall: 043468, #actuals: 1
        } else {
          Jump: 050301
        }
      } else {
        Jump: 050308
      }
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
LocReturn 050281:
  PushStack call_result;
  TraceOperation 050287 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 050290 (Jz (Var (Global 202)) (Branch T Dfalse));
    Let b2 = M[008312];
    Let b3 = M[008313];
    if (IsZero(MakeHiLo(b2,b3))) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      TraceOperation 050293 (Get_parent (Var (Global 201)) Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      PushStack Widen(b7);
      TraceOperation 050296 (Je [Var (Global 202),Var Sp] (Branch T Dfalse));
      Let b8 = M[008312];
      Let b9 = M[008313];
      PopStack popped10;
      if (Equal(MakeHiLo(b8,b9),popped10)) {
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 0
      } else {
        TraceOperation 050300 Rtrue;
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      }
    }
  } else {
    PopFrame return_address_13;
    JumpReturn: return_address_13, result: 1
  }
LocOp 050301:
  TraceOperation 050301 (Je [Var (Global 203),Con 53] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 050305 (Jz (Var (Global 66)) (Branch T Dfalse));
    Let b3 = M[008040];
    Let b4 = M[008041];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 050308
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 050308:
  TraceOperation 050308 (Je [Var (Local 1),Con 8] (Branch F Dtrue));
  if (Equal(GetLocal(1),8)) {
    TraceOperation 050312 (Je [Var (Global 203),Con 124] (Branch F Dtrue));
    Let b1 = M[008314];
    Let b2 = M[008315];
    if (Equal(MakeHiLo(b1,b2),124)) {
      TraceOperation 050316 (Jz (Var (Global 66)) (Branch F Dtrue));
      Let b3 = M[008040];
      Let b4 = M[008041];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 050319 Rfalse;
        PopFrame return_address_5;
        JumpReturn: return_address_5, result: 0
      } else {
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      }
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  }
--[367]--------------------------------------------------
LocRoutine 050320:
  MakeRoutineFrame 0;
  Jump: 050321
LocOp 050321:
  TraceOperation 050321 (Je [Var (Global 203),Con 61] (Branch F (Dloc 050547)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 050326 (Print "The ");
    GamePrint "The ";
    TraceOperation 050329 (Print_obj (Con 7));
    Let b3 = M[000821];
    Let b4 = M[000822];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 050331 (Print " is shaped like a small fist with an extended thumb. Various lights along its \"knuckles\" are currently ");
      GamePrint " is shaped like a small fist with an extended thumb. Various lights along its \"knuckles\" are currently ";
      TraceOperation 050390 (Jin (Con 124) (Var (Global 0)) (Branch T (Dloc 050400)));
      Let b6 = M[007908];
      Let b7 = M[007909];
      Let b8 = M[001871];
      if (Equal(MakeHiLo(b6,b7),Widen(b8))) {
        TraceOperation 050400 (Print "blinking wildly, indicating a spaceship in the vicinity");
        GamePrint "blinking wildly, indicating a spaceship in the vicinity";
        TraceOperation 050437 (Jump 050445);
        Jump: 050445
      } else {
        TraceOperation 050394 (Je [Var (Global 0),Con 101,Con 213] (Branch F (Dloc 050440)));
        Let b9 = M[007908];
        Let b10 = M[007909];
        if (LogOr(Equal(MakeHiLo(b9,b10),101),Equal(MakeHiLo(b9,b10),213))) {
          TraceOperation 050400 (Print "blinking wildly, indicating a spaceship in the vicinity");
          GamePrint "blinking wildly, indicating a spaceship in the vicinity";
          TraceOperation 050437 (Jump 050445);
          Jump: 050445
        } else {
          Jump: 050440
        }
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 050331 (Print " is shaped like a small fist with an extended thumb. Various lights along its \"knuckles\" are currently ");
      GamePrint " is shaped like a small fist with an extended thumb. Various lights along its \"knuckles\" are currently ";
      TraceOperation 050390 (Jin (Con 124) (Var (Global 0)) (Branch T (Dloc 050400)));
      Let b11 = M[007908];
      Let b12 = M[007909];
      Let b13 = M[001871];
      if (Equal(MakeHiLo(b11,b12),Widen(b13))) {
        TraceOperation 050400 (Print "blinking wildly, indicating a spaceship in the vicinity");
        GamePrint "blinking wildly, indicating a spaceship in the vicinity";
        TraceOperation 050437 (Jump 050445);
        Jump: 050445
      } else {
        TraceOperation 050394 (Je [Var (Global 0),Con 101,Con 213] (Branch F (Dloc 050440)));
        Let b14 = M[007908];
        Let b15 = M[007909];
        if (LogOr(Equal(MakeHiLo(b14,b15),101),Equal(MakeHiLo(b14,b15),213))) {
          TraceOperation 050400 (Print "blinking wildly, indicating a spaceship in the vicinity");
          GamePrint "blinking wildly, indicating a spaceship in the vicinity";
          TraceOperation 050437 (Jump 050445);
          Jump: 050445
        } else {
          Jump: 050440
        }
      }
    }
  } else {
    Jump: 050547
  }
LocOp 050440:
  TraceOperation 050440 (Print "dark");
  GamePrint "dark";
  Jump: 050445
LocOp 050445:
  TraceOperation 050445 (Print ". It has two small buttons, a red one labelled \"Call Engineer\" and a green one labelled \"Hitchhike.\"");
  GamePrint ". It has two small buttons, a red one labelled \"Call Engineer\" and a green one labelled \"Hitchhike.\"";
  TraceOperation 050512 (Call (Floc 057998) [] Sp);
  PushFrame 050512;
  JumpCall: 057998, #actuals: 0
LocReturn 050512:
  PushStack call_result;
  TraceOperation 050517 (Print " Affixed to the Thumb is a lifetime ");
  GamePrint " Affixed to the Thumb is a lifetime ";
  TraceOperation 050542 (Print_obj (Con 4));
  Let b1 = M[000794];
  Let b2 = M[000795];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 050544 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 050544 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 050547:
  TraceOperation 050547 (Je [Var (Global 203),Con 124] (Branch F (Dloc 050567)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 050551 (Je [Var (Global 120),Con 142] (Branch F (Dloc 050567)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),142)) {
      TraceOperation 050555 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 050567)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[001871];
      if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
        TraceOperation 050559 (Jin (Con 7) (Con 141) (Branch T (Dloc 050567)));
        Let b8 = M[000818];
        if (Equal(141,Widen(b8))) {
          Jump: 050567
        } else {
          TraceOperation 050563 (Print_paddr (Var (Global 32)));
          Let b9 = M[007972];
          Let b10 = M[007973];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
          TraceOperation 050565 New_line;
          GamePrint "\n";
          TraceOperation 050566 Rtrue;
          PopFrame return_address_11;
          JumpReturn: return_address_11, result: 1
        }
      } else {
        Jump: 050567
      }
    } else {
      Jump: 050567
    }
  } else {
    Jump: 050567
  }
LocOp 050567:
  TraceOperation 050567 (Je [Var (Global 203),Con 63,Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),39)),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 050574 (Print_ret "Impossible.");
    GamePrint "Impossible.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[368]--------------------------------------------------
LocRoutine 050586:
  MakeRoutineFrame 0;
  Jump: 050587
LocOp 050587:
  TraceOperation 050587 (Je [Var (Global 203),Con 114] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),114)) {
    TraceOperation 050591 (Call (Floc 043468) [Con 7] Sp);
    PushFrame 050591;
    SetLocal 1 7;
    JumpCall: 043468, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 050591:
  PushStack call_result;
  TraceOperation 050597 (Jz (Var Sp) (Branch F (Dloc 050608)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 050600 (Call (Floc 022042) [Con 114,Con 5] Sp);
    PushFrame 050600;
    SetLocal 1 114;
    SetLocal 2 5;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 050608
  }
LocReturn 050600:
  PushStack call_result;
  TraceOperation 050607 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 050608:
  TraceOperation 050608 (Jin (Con 3) (Var (Global 0)) (Branch F (Dloc 050660)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[000782];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 050612 (Print "Another ");
    GamePrint "Another ";
    TraceOperation 050619 (Print_obj (Con 3));
    Let b4 = M[000785];
    Let b5 = M[000786];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 050621 (Print_ret " zips up, spots the first one, looks confused, and leaves again.");
      GamePrint " zips up, spots the first one, looks confused, and leaves again.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 050621 (Print_ret " zips up, spots the first one, looks confused, and leaves again.");
      GamePrint " zips up, spots the first one, looks confused, and leaves again.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  } else {
    Jump: 050660
  }
--[369]--------------------------------------------------
LocRoutine 050678:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 -19949;
  }
  Jump: 050681
LocOp 050681:
  TraceOperation 050681 (Load (Con 26016) (Global 8));
  Let b1 = M[008196];
  Let b2 = M[008197];
  SetByte 007924 b1;
  SetByte 007925 b2;
  TraceOperation 050685 (Mod (Con 34) (Con 234) (Global 25));
  SetByte 007958 0;
  SetByte 007959 34;
  TraceOperation 050689 (Store (Con 0) (Con 41));
  Note "\"Op.Store/DSp\"";
  PopStack popped3;
  PushStack 41;
  TraceOperation 050692 (Mod (Con 78) (Var (Global 14)) (Global 214));
  Let b4 = M[007936];
  Let b5 = M[007937];
  SetByte 008336 HiByte(Mod(78,MakeHiLo(b4,b5)));
  SetByte 008337 LoByte(Mod(78,MakeHiLo(b4,b5)));
  TraceOperation 050696 (Je [Var (Global 72),Con 128] (Branch T Dfalse));
  Let b6 = M[008052];
  Let b7 = M[008053];
  if (Equal(MakeHiLo(b6,b7),128)) {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  } else {
    TraceOperation 050700 (Print_paddr (Var (Global 43)));
    Let b9 = M[007994];
    Let b10 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
    TraceOperation 050702 (Print_ret " Repair Robot pulls up on a bike from out of the Sub-Etha.");
    GamePrint " Repair Robot pulls up on a bike from out of the Sub-Etha.\n";
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 1
  }
--[370]--------------------------------------------------
LocRoutine 050742:
  MakeRoutineFrame 0;
  Jump: 050743
LocOp 050743:
  TraceOperation 050743 (Je [Var (Global 203),Con 114] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),114)) {
    TraceOperation 050747 (Call (Floc 043468) [Con 7] Sp);
    PushFrame 050747;
    SetLocal 1 7;
    JumpCall: 043468, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 050747:
  PushStack call_result;
  TraceOperation 050753 (Jz (Var Sp) (Branch F (Dloc 050772)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 050756 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 050758 (Print " the ");
    GamePrint " the ";
    TraceOperation 050761 (Print_obj (Con 7));
    Let b4 = M[000821];
    Let b5 = M[000822];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 050763 (Print ".");
      GamePrint ".";
      TraceOperation 050766 New_line;
      GamePrint "\n";
      TraceOperation 050767 (Store (Con 207) (Con 7));
      SetByte 008290 0;
      SetByte 008291 7;
      TraceOperation 050770 (Ret (Var (Global 191)));
      Let b7 = M[008290];
      Let b8 = M[008291];
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: MakeHiLo(b7,b8)
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 050763 (Print ".");
      GamePrint ".";
      TraceOperation 050766 New_line;
      GamePrint "\n";
      TraceOperation 050767 (Store (Con 207) (Con 7));
      SetByte 008290 0;
      SetByte 008291 7;
      TraceOperation 050770 (Ret (Var (Global 191)));
      Let b10 = M[008290];
      Let b11 = M[008291];
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: MakeHiLo(b10,b11)
    }
  } else {
    Jump: 050772
  }
LocOp 050772:
  TraceOperation 050772 (Je [Var (Global 120),Con 142] (Branch F (Dloc 050787)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 050776 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 050787)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001871];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 050780 (Insert_obj (Con 7) (Var (Global 0)));
      Let b6 = M[007908];
      Let b7 = M[007909];
      Let b8 = M[000818];
      if (IsZero(Widen(b8))) {
        SetByte 000818 b7;
        Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
        SetByte 000819 LoByte(Widen(b9));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 7;
        TraceOperation 050783 (Print_paddr (Var (Global 4)));
        Let b10 = M[007916];
        Let b11 = M[007917];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
        TraceOperation 050785 New_line;
        GamePrint "\n";
        TraceOperation 050786 Rtrue;
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      } else {
        Let b13 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
        if (Equal(Widen(b13),7)) {
          Let b14 = M[000819];
          SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b14));
          SetByte 000818 b7;
          Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
          SetByte 000819 LoByte(Widen(b15));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 7;
          TraceOperation 050783 (Print_paddr (Var (Global 4)));
          Let b16 = M[007916];
          Let b17 = M[007917];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b16,b17)));
          TraceOperation 050785 New_line;
          GamePrint "\n";
          TraceOperation 050786 Rtrue;
          PopFrame return_address_18;
          JumpReturn: return_address_18, result: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 050787
    }
  } else {
    Jump: 050787
  }
LocOp 050787:
  TraceOperation 050787 (Test_attr (Con 7) (Con 3) (Branch F (Dloc 050800)));
  Let b1 = M[000814];
  if (TestBit(b1,4)) {
    TraceOperation 050791 (Print "The");
    GamePrint "The";
    TraceOperation 050796 (Print_paddr (Var (Global 35)));
    Let b2 = M[007978];
    Let b3 = M[007979];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 050798 New_line;
    GamePrint "\n";
    TraceOperation 050799 Rtrue;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 050800
  }
LocOp 050800:
  TraceOperation 050800 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 050944)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001871];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 050805 (Je [Var (Global 130),Con 3] (Branch F (Dloc 050931)));
    Let b4 = M[008168];
    Let b5 = M[008169];
    if (Equal(MakeHiLo(b4,b5),3)) {
      TraceOperation 050810 (Print "Lights whirl sickeningly around your head, the ground arches away beneath your feet, and every atom of your being is scrambled, an experience you're probably going to have to get used to. You are in...");
      GamePrint "Lights whirl sickeningly around your head, the ground arches away beneath your feet, and every atom of your being is scrambled, an experience you're probably going to have to get used to. You are in...";
      TraceOperation 050917 New_line;
      GamePrint "\n";
      TraceOperation 050918 New_line;
      GamePrint "\n";
      TraceOperation 050919 (Call (Floc 075134) [] Sp);
      PushFrame 050919;
      JumpCall: 075134, #actuals: 0
    } else {
      Jump: 050931
    }
  } else {
    Jump: 050944
  }
LocReturn 050919:
  PushStack call_result;
  TraceOperation 050924 (Call (Floc 042574) [Con 25] Sp);
  PushFrame 050924;
  SetLocal 1 25;
  JumpCall: 042574, #actuals: 1
LocReturn 050924:
  PushStack call_result;
  TraceOperation 050930 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 050931:
  TraceOperation 050931 (Print "A");
  GamePrint "A";
  TraceOperation 050934 (Print_paddr (Var (Global 42)));
  Let b1 = M[007992];
  Let b2 = M[007993];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 050936 (Call (Floc 042734) [Con -9891] Sp);
  PushFrame 050936;
  SetLocal 1 -9891;
  JumpCall: 042734, #actuals: 1
LocReturn 050936:
  PushStack call_result;
  TraceOperation 050943 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[371]--------------------------------------------------
LocRoutine 051058:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 17864;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -11498;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 24893;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 10244;
        }
      }
    }
  }
  Jump: 051067
LocOp 051067:
  TraceOperation 051067 (Print "ixv");
  GamePrint "ixv";
  TraceOperation 051070 (Store (Con 98) (Con 100));
  SetByte 008072 0;
  SetByte 008073 100;
  TraceOperation 051073 (Call (Floc 042574) [Con 25] Sp);
  PushFrame 051073;
  SetLocal 1 25;
  JumpCall: 042574, #actuals: 1
LocReturn 051073:
  PushStack call_result;
  TraceOperation 051079 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[372]--------------------------------------------------
LocRoutine 051126:
  MakeRoutineFrame 0;
  Jump: 051127
LocOp 051127:
  TraceOperation 051127 (Je [Var (Global 203),Con 61,Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),61),Equal(MakeHiLo(b1,b2),120))) {
    TraceOperation 051133 (Print "The lifetime ");
    GamePrint "The lifetime ";
    TraceOperation 051142 (Print_obj (Con 4));
    Let b3 = M[000794];
    Let b4 = M[000795];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 051144 (Print " states that the Thumb will be repaired on site by trained ");
      GamePrint " states that the Thumb will be repaired on site by trained ";
      TraceOperation 051179 (Print_paddr (Var (Global 43)));
      Let b6 = M[007994];
      Let b7 = M[007995];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 051181 (Print_ret " Field Engineers.");
      GamePrint " Field Engineers.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 051144 (Print " states that the Thumb will be repaired on site by trained ");
      GamePrint " states that the Thumb will be repaired on site by trained ";
      TraceOperation 051179 (Print_paddr (Var (Global 43)));
      Let b9 = M[007994];
      Let b10 = M[007995];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
      TraceOperation 051181 (Print_ret " Field Engineers.");
      GamePrint " Field Engineers.\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    }
  } else {
    PopFrame return_address_12;
    JumpReturn: return_address_12, result: 0
  }
--[373]--------------------------------------------------
LocRoutine 051196:
  MakeRoutineFrame 0;
  Jump: 051197
LocOp 051197:
  TraceOperation 051197 (Je [Con 3,Var (Global 195)] (Branch F (Dloc 051407)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(3,MakeHiLo(b1,b2))) {
    TraceOperation 051202 (Call (Floc 022320) [Con 26048,Con 2] Sp);
    PushFrame 051202;
    SetLocal 1 26048;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 051407
  }
LocReturn 051202:
  PushStack call_result;
  TraceOperation 051210 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 051215 (Je [Var (Global 203),Con 150] (Branch F (Dloc 051238)));
  Let b2 = M[008314];
  Let b3 = M[008315];
  if (Equal(MakeHiLo(b2,b3),150)) {
    TraceOperation 051219 (Je [Var (Global 201),Con 30] (Branch F (Dloc 051238)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (Equal(MakeHiLo(b4,b5),30)) {
      TraceOperation 051223 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 051226 (Call (Floc 022042) [Con 22,Con 3,Var (Global 202)] Sp);
      Let b6 = M[008312];
      Let b7 = M[008313];
      PushFrame 051226;
      SetLocal 1 22;
      SetLocal 2 3;
      SetLocal 3 MakeHiLo(b6,b7);
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 051238
    }
  } else {
    Jump: 051238
  }
LocReturn 051226:
  PushStack call_result;
  TraceOperation 051234 (Store (Con 211) (Con 3));
  SetByte 008298 0;
  SetByte 008299 3;
  TraceOperation 051237 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 051238:
  TraceOperation 051238 (Je [Var (Global 203),Con 75] (Branch F (Dloc 051256)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 051242 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 051245 (Call (Floc 022042) [Con 75,Con 3] Sp);
    PushFrame 051245;
    SetLocal 1 75;
    SetLocal 2 3;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 051256
  }
LocReturn 051245:
  PushStack call_result;
  TraceOperation 051252 (Store (Con 211) (Con 3));
  SetByte 008298 0;
  SetByte 008299 3;
  TraceOperation 051255 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 051256:
  TraceOperation 051256 (Je [Var (Global 203),Con 125] (Branch F (Dloc 051305)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),125)) {
    TraceOperation 051260 (Je [Var (Global 201),Con 7] (Branch F (Dloc 051305)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),7)) {
      TraceOperation 051264 (Jin (Con 7) (Con 3) (Branch F (Dloc 051287)));
      Let b5 = M[000818];
      if (Equal(3,Widen(b5))) {
        TraceOperation 051268 (Print_ret "\"I'm doing my best...\"");
        GamePrint "\"I'm doing my best...\"\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      } else {
        Jump: 051287
      }
    } else {
      Jump: 051305
    }
  } else {
    Jump: 051305
  }
--[374]--------------------------------------------------
LocRoutine 051300:
  MakeRoutineFrame 0;
  Jump: 051301
LocOp 051301:
  TraceOperation 051301 (Store (Con 211) (Con 3));
  SetByte 008298 0;
  SetByte 008299 3;
  TraceOperation 051304 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[375]--------------------------------------------------
LocRoutine 051380:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 8285;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 9807;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 -19361;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 3658;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 26188;
          }
        }
      }
    }
  }
  Jump: 051391
LocOp 051391:
  TraceOperation 051391 (Sub (Var (Global 9)) (Con 215) (Local 1));
  Let b1 = M[007926];
  Let b2 = M[007927];
  SetLocal 1 Sub(MakeHiLo(b1,b2),215);
  TraceOperation 051395 (Jin (Con 70) (Con 37) (Branch T (Dloc 051405)));
  Let b3 = M[001385];
  if (Equal(37,Widen(b3))) {
    Jump: 051405
  } else {
    TraceOperation 051399 Pop;
    Note "Pop";
    TraceOperation 051400 New_line;
    GamePrint "\n";
    TraceOperation 051401 (Call (Floc 043634) [] Sp);
    PushFrame 051401;
    JumpCall: 043634, #actuals: 0
  }
LocReturn 051401:
  PushStack call_result;
  TraceOperation 051406 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[376]--------------------------------------------------
LocRoutine 051744:
  MakeRoutineFrame 0;
  Jump: 051745
LocOp 051745:
  TraceOperation 051745 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[377]--------------------------------------------------
LocRoutine 051804:
  MakeRoutineFrame 0;
  Jump: 051805
LocOp 051805:
  TraceOperation 051805 (Jl (Var (Global 22)) (Var (Global 113)) (Branch T (Dloc 058117)));
  Let b1 = M[007952];
  Let b2 = M[007953];
  Let b3 = M[008134];
  Let b4 = M[008135];
  if (LessThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 058117
  } else {
    TraceOperation 051810 (Print_paddr (Var (Global 58)));
    Let b5 = M[008024];
    Let b6 = M[008025];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 051812 (Print "\"Can't promise anything.\" He");
    GamePrint "\"Can't promise anything.\" He";
    TraceOperation 051833 (Print_paddr (Var (Global 59)));
    Let b7 = M[008026];
    Let b8 = M[008027];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 051835 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  }
--[378]--------------------------------------------------
LocRoutine 051840:
  MakeRoutineFrame 0;
  Jump: 051841
LocOp 051841:
  TraceOperation 051841 (Print "The ");
  GamePrint "The ";
  TraceOperation 051844 (Print_obj (Con 3));
  Let b1 = M[000785];
  Let b2 = M[000786];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 051846 (Print " looks at it sceptically. \"Guaranteed to work normally for life,\" he mutters. \"Well, it's perfectly normal for a 13X to break down. And this one's reached the end of its life anyway. But I'll see what I can do.\"");
    GamePrint " looks at it sceptically. \"Guaranteed to work normally for life,\" he mutters. \"Well, it's perfectly normal for a 13X to break down. And this one's reached the end of its life anyway. But I'll see what I can do.\"";
    TraceOperation 051981 New_line;
    GamePrint "\n";
    TraceOperation 051982 New_line;
    GamePrint "\n";
    TraceOperation 051983 (Print_paddr (Var (Global 58)));
    Let b4 = M[008024];
    Let b5 = M[008025];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 051985 (Print "\"Best I can do for a 13X on an expired ");
    GamePrint "\"Best I can do for a 13X on an expired ";
    TraceOperation 052012 (Print_obj (Con 4));
    Let b6 = M[000794];
    Let b7 = M[000795];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 052014 (Print ",\" he says. \"Can't promise anything.\" He");
      GamePrint ",\" he says. \"Can't promise anything.\" He";
      TraceOperation 052043 (Print_paddr (Var (Global 59)));
      Let b9 = M[008026];
      Let b10 = M[008027];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
      TraceOperation 052045 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 052014 (Print ",\" he says. \"Can't promise anything.\" He");
      GamePrint ",\" he says. \"Can't promise anything.\" He";
      TraceOperation 052043 (Print_paddr (Var (Global 59)));
      Let b12 = M[008026];
      Let b13 = M[008027];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b12,b13)));
      TraceOperation 052045 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_14;
      JumpReturn: return_address_14, result: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 051846 (Print " looks at it sceptically. \"Guaranteed to work normally for life,\" he mutters. \"Well, it's perfectly normal for a 13X to break down. And this one's reached the end of its life anyway. But I'll see what I can do.\"");
    GamePrint " looks at it sceptically. \"Guaranteed to work normally for life,\" he mutters. \"Well, it's perfectly normal for a 13X to break down. And this one's reached the end of its life anyway. But I'll see what I can do.\"";
    TraceOperation 051981 New_line;
    GamePrint "\n";
    TraceOperation 051982 New_line;
    GamePrint "\n";
    TraceOperation 051983 (Print_paddr (Var (Global 58)));
    Let b15 = M[008024];
    Let b16 = M[008025];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b15,b16)));
    TraceOperation 051985 (Print "\"Best I can do for a 13X on an expired ");
    GamePrint "\"Best I can do for a 13X on an expired ";
    TraceOperation 052012 (Print_obj (Con 4));
    Let b17 = M[000794];
    Let b18 = M[000795];
    Let b19 = M[Address(MakeHiLo(b17,b18))];
    if (IsZeroByte(b19)) {
      GamePrint "";
      TraceOperation 052014 (Print ",\" he says. \"Can't promise anything.\" He");
      GamePrint ",\" he says. \"Can't promise anything.\" He";
      TraceOperation 052043 (Print_paddr (Var (Global 59)));
      Let b20 = M[008026];
      Let b21 = M[008027];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b20,b21)));
      TraceOperation 052045 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_22;
      JumpReturn: return_address_22, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b17,b18)),1));
      TraceOperation 052014 (Print ",\" he says. \"Can't promise anything.\" He");
      GamePrint ",\" he says. \"Can't promise anything.\" He";
      TraceOperation 052043 (Print_paddr (Var (Global 59)));
      Let b23 = M[008026];
      Let b24 = M[008027];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b23,b24)));
      TraceOperation 052045 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_25;
      JumpReturn: return_address_25, result: 1
    }
  }
--[379]--------------------------------------------------
LocRoutine 052048:
  MakeRoutineFrame 0;
  Jump: 052049
LocOp 052049:
  TraceOperation 052049 (Jin (Con 7) (Con 3) (Branch F (Dloc 052069)));
  Let b1 = M[000818];
  if (Equal(3,Widen(b1))) {
    TraceOperation 052053 (Jin (Con 3) (Var (Global 0)) (Branch F (Dloc 052063)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[000782];
    if (Equal(MakeHiLo(b2,b3),Widen(b4))) {
      TraceOperation 052057 (Insert_obj (Con 7) (Con 31));
      Let b5 = M[000818];
      if (IsZero(Widen(b5))) {
        SetByte 000818 31;
        Let b6 = M[001036];
        SetByte 000819 LoByte(Widen(b6));
        SetByte 001036 7;
        TraceOperation 052060 (Jump 052069);
        Jump: 052069
      } else {
        Let b7 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b7),7)) {
          Let b8 = M[000819];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b8));
          SetByte 000818 31;
          Let b9 = M[001036];
          SetByte 000819 LoByte(Widen(b9));
          SetByte 001036 7;
          TraceOperation 052060 (Jump 052069);
          Jump: 052069
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 052063
    }
  } else {
    Jump: 052069
  }
--[380]--------------------------------------------------
LocRoutine 052068:
  MakeRoutineFrame 0;
  Jump: 052069
LocOp 052069:
  TraceOperation 052069 (Insert_obj (Con 3) (Con 219));
  Let b1 = M[000782];
  if (IsZero(Widen(b1))) {
    SetByte 000782 219;
    Let b2 = M[002728];
    SetByte 000783 LoByte(Widen(b2));
    SetByte 002728 3;
    TraceOperation 052072 (Insert_obj (Con 2) (Con 219));
    Let b3 = M[000773];
    if (IsZero(Widen(b3))) {
      SetByte 000773 219;
      Let b4 = M[002728];
      SetByte 000774 LoByte(Widen(b4));
      SetByte 002728 2;
      TraceOperation 052075 (Call (Floc 022340) [Con 26048] Sp);
      PushFrame 052075;
      SetLocal 1 26048;
      JumpCall: 022340, #actuals: 1
    } else {
      Let b5 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b5),2)) {
        Let b6 = M[000774];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
        SetByte 000773 219;
        Let b7 = M[002728];
        SetByte 000774 LoByte(Widen(b7));
        SetByte 002728 2;
        TraceOperation 052075 (Call (Floc 022340) [Con 26048] Sp);
        PushFrame 052075;
        SetLocal 1 26048;
        JumpCall: 022340, #actuals: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b8 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b8),3)) {
      Let b9 = M[000783];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b9));
      SetByte 000782 219;
      Let b10 = M[002728];
      SetByte 000783 LoByte(Widen(b10));
      SetByte 002728 3;
      TraceOperation 052072 (Insert_obj (Con 2) (Con 219));
      Let b11 = M[000773];
      if (IsZero(Widen(b11))) {
        SetByte 000773 219;
        Let b12 = M[002728];
        SetByte 000774 LoByte(Widen(b12));
        SetByte 002728 2;
        TraceOperation 052075 (Call (Floc 022340) [Con 26048] Sp);
        PushFrame 052075;
        SetLocal 1 26048;
        JumpCall: 022340, #actuals: 1
      } else {
        Let b13 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
        if (Equal(Widen(b13),2)) {
          Let b14 = M[000774];
          SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b14));
          SetByte 000773 219;
          Let b15 = M[002728];
          SetByte 000774 LoByte(Widen(b15));
          SetByte 002728 2;
          TraceOperation 052075 (Call (Floc 022340) [Con 26048] Sp);
          PushFrame 052075;
          SetLocal 1 26048;
          JumpCall: 022340, #actuals: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 052075:
  PushStack call_result;
  TraceOperation 052082 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 052087 (Store (Con 80) (Con 0));
  SetByte 008036 0;
  SetByte 008037 0;
  TraceOperation 052090 (Store (Con 81) (Con 0));
  SetByte 008038 0;
  SetByte 008039 0;
  TraceOperation 052093 (Ret (Var (Global 65)));
  Let b2 = M[008038];
  Let b3 = M[008039];
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: MakeHiLo(b2,b3)
--[381]--------------------------------------------------
LocRoutine 052096:
  MakeRoutineFrame 0;
  Jump: 052097
LocOp 052097:
  TraceOperation 052097 (Call (Floc 022320) [Con 26048,Con -1] Sp);
  PushFrame 052097;
  SetLocal 1 26048;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 052097:
  PushStack call_result;
  TraceOperation 052106 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 052111 (Inc (Con 81));
  Let b2 = M[008038];
  Let b3 = M[008039];
  SetByte 008038 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008039 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 052113 (Jin (Con 3) (Var (Global 0)) (Branch T (Dloc 052123)));
  Let b4 = M[007908];
  Let b5 = M[007909];
  Let b6 = M[000782];
  if (Equal(MakeHiLo(b4,b5),Widen(b6))) {
    Jump: 052123
  } else {
    TraceOperation 052117 (Call (Floc 052048) [] Sp);
    PushFrame 052117;
    JumpCall: 052048, #actuals: 0
  }
LocReturn 052117:
  PushStack call_result;
  TraceOperation 052122 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[382]--------------------------------------------------
LocRoutine 052126:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 87;
  }
  Jump: 052129
LocOp 052129:
  TraceOperation 052129 (Store (Con 80) (Con 2));
  SetByte 008036 0;
  SetByte 008037 2;
  TraceOperation 052132 (Print "The ");
  GamePrint "The ";
  TraceOperation 052135 (Print_obj (Con 3));
  Let b1 = M[000785];
  Let b2 = M[000786];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 052137 (Print_ret " ignores you completely. \"See, this is the model with the 5kz booster,\" he says. \"Hopeless.\" He shakes his head grimly.");
    GamePrint " ignores you completely. \"See, this is the model with the 5kz booster,\" he says. \"Hopeless.\" He shakes his head grimly.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 052137 (Print_ret " ignores you completely. \"See, this is the model with the 5kz booster,\" he says. \"Hopeless.\" He shakes his head grimly.");
    GamePrint " ignores you completely. \"See, this is the model with the 5kz booster,\" he says. \"Hopeless.\" He shakes his head grimly.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[383]--------------------------------------------------
LocRoutine 052338:
  MakeRoutineFrame 0;
  Jump: 052339
LocOp 052339:
  TraceOperation 052339 (Print_paddr (Var (Global 59)));
  Let b1 = M[008026];
  Let b2 = M[008027];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 052341 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[384]--------------------------------------------------
LocRoutine 052358:
  MakeRoutineFrame 0;
  Jump: 052359
LocOp 052359:
  TraceOperation 052359 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 052364 (Print "The ");
  GamePrint "The ";
  TraceOperation 052367 (Print_obj (Con 3));
  Let b2 = M[000785];
  Let b3 = M[000786];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 052369 (Print_ret " looks around. \"Somebody call the repair service?\"");
    GamePrint " looks around. \"Somebody call the repair service?\"\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 052369 (Print_ret " looks around. \"Somebody call the repair service?\"");
    GamePrint " looks around. \"Somebody call the repair service?\"\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
--[385]--------------------------------------------------
LocRoutine 052404:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 -31579;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 25778;
    }
  }
  Jump: 052409
LocOp 052409:
  TraceOperation 052409 (Print_obj (Con 3));
  Let b1 = M[000785];
  Let b2 = M[000786];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 052411 (Print_ret " looks impatient and guns the throttle of his cycle.");
    GamePrint " looks impatient and guns the throttle of his cycle.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 052411 (Print_ret " looks impatient and guns the throttle of his cycle.");
    GamePrint " looks impatient and guns the throttle of his cycle.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[386]--------------------------------------------------
LocRoutine 052444:
  MakeRoutineFrame 0;
  Jump: 052445
LocOp 052445:
  TraceOperation 052445 (Print "\"Probably a kid playing around with someone else's Thumb,\" grumbles the ");
  GamePrint "\"Probably a kid playing around with someone else's Thumb,\" grumbles the ";
  TraceOperation 052492 (Print_obj (Con 3));
  Let b1 = M[000785];
  Let b2 = M[000786];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 052494 (Print " and");
    GamePrint " and";
    TraceOperation 052499 (Print_paddr (Var (Global 59)));
    Let b4 = M[008026];
    Let b5 = M[008027];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 052501 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 052494 (Print " and");
    GamePrint " and";
    TraceOperation 052499 (Print_paddr (Var (Global 59)));
    Let b7 = M[008026];
    Let b8 = M[008027];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 052501 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  }
--[387]--------------------------------------------------
LocRoutine 052504:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 052507
LocOp 052507:
  TraceOperation 052507 (Print "There is a copy of ");
  GamePrint "There is a copy of ";
  TraceOperation 052518 (Print_paddr (Var (Global 37)));
  Let b1 = M[007982];
  Let b2 = M[007983];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 052520 (Print_ret " here.");
  GamePrint " here.\n";
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[388]--------------------------------------------------
LocRoutine 052526:
  MakeRoutineFrame 0;
  Jump: 052527
LocOp 052527:
  TraceOperation 052527 (Je [Var (Global 203),Con 61] (Branch F (Dloc 052731)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 052532 (Print_ret "The Guide is a Mark II model. Its only resemblance to the Mark IV pictured in the brochure in your game package is the large, friendly \"Don't Panic!\" on its cover.\n\nThe Guide is a Sub-Etha Relay. You can use it to tap information from a huge and distant data bank by consulting the Guide about some item or subject.");
    GamePrint "The Guide is a Mark II model. Its only resemblance to the Mark IV pictured in the brochure in your game package is the large, friendly \"Don't Panic!\" on its cover.\n\nThe Guide is a Sub-Etha Relay. You can use it to tap information from a huge and distant data bank by consulting the Guide about some item or subject.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 052731
  }
LocOp 052731:
  TraceOperation 052731 (Je [Var (Global 203),Con 22] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 052735 (Je [Var (Global 201),Con 1] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 052739 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 052747)));
      Let b5 = M[002003];
      if (TestBit(b5,6)) {
        TraceOperation 052743 (Print_paddr (Var (Global 49)));
        Let b6 = M[008006];
        Let b7 = M[008007];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
        TraceOperation 052745 New_line;
        GamePrint "\n";
        TraceOperation 052746 Rtrue;
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        Jump: 052747
      }
    } else {
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 0
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
LocOp 052747:
  TraceOperation 052747 (Je [Var (Global 202),Con 175] (Branch F (Dloc 052875)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),175)) {
    TraceOperation 052752 (Print "Suddenly, agents of the ");
    GamePrint "Suddenly, agents of the ";
    TraceOperation 052769 (Print_paddr (Var (Global 18)));
    Let b3 = M[007944];
    Let b4 = M[007945];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 052771 (Print " pop in using Sub-Etha belts, rough you up a bit, tell you there's no such thing as the ");
    GamePrint " pop in using Sub-Etha belts, rough you up a bit, tell you there's no such thing as the ";
    TraceOperation 052828 (Print_paddr (Var (Global 18)));
    Let b5 = M[007944];
    Let b6 = M[007945];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 052830 (Print " and never to consult ");
    GamePrint " and never to consult ";
    TraceOperation 052845 (Print_obj (Con 1));
    Let b7 = M[000767];
    Let b8 = M[000768];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    if (IsZeroByte(b9)) {
      GamePrint "";
      TraceOperation 052847 (Print " about the ");
      GamePrint " about the ";
      TraceOperation 052852 (Print_paddr (Var (Global 18)));
      Let b10 = M[007944];
      Let b11 = M[007945];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
      TraceOperation 052854 (Print_ret " again; then they leave.");
      GamePrint " again; then they leave.\n";
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
      TraceOperation 052847 (Print " about the ");
      GamePrint " about the ";
      TraceOperation 052852 (Print_paddr (Var (Global 18)));
      Let b13 = M[007944];
      Let b14 = M[007945];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b13,b14)));
      TraceOperation 052854 (Print_ret " again; then they leave.");
      GamePrint " again; then they leave.\n";
      PopFrame return_address_15;
      JumpReturn: return_address_15, result: 1
    }
  } else {
    Jump: 052875
  }
LocOp 052875:
  TraceOperation 052875 (Print "The Guide checks through its Sub-Etha-Net database and eventually comes up with the following entry:");
  GamePrint "The Guide checks through its Sub-Etha-Net database and eventually comes up with the following entry:";
  TraceOperation 052938 New_line;
  GamePrint "\n";
  TraceOperation 052939 New_line;
  GamePrint "\n";
  TraceOperation 052940 (Je [Var (Global 202),Con 1] (Branch F (Dloc 052973)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 052944 (Print_obj (Con 1));
    Let b3 = M[000767];
    Let b4 = M[000768];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 052946 (Print " is a wholly remarkable product.");
      GamePrint " is a wholly remarkable product.";
      TraceOperation 052969 (Print_paddr (Var (Global 36)));
      Let b6 = M[007980];
      Let b7 = M[007981];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 052971 New_line;
      GamePrint "\n";
      TraceOperation 052972 Rtrue;
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 052946 (Print " is a wholly remarkable product.");
      GamePrint " is a wholly remarkable product.";
      TraceOperation 052969 (Print_paddr (Var (Global 36)));
      Let b9 = M[007980];
      Let b10 = M[007981];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
      TraceOperation 052971 New_line;
      GamePrint "\n";
      TraceOperation 052972 Rtrue;
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    }
  } else {
    Jump: 052973
  }
LocOp 052973:
  TraceOperation 052973 (Je [Var (Global 202),Con 185,Con 180,Con 179] (Branch T (Dloc 052987)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),185),Equal(MakeHiLo(b1,b2),180)),Equal(MakeHiLo(b1,b2),179))) {
    Jump: 052987
  } else {
    TraceOperation 052980 (Je [Var (Global 202),Con 6,Con 5,Con 184] (Branch F (Dloc 053023)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),6),Equal(MakeHiLo(b3,b4),5)),Equal(MakeHiLo(b3,b4),184))) {
      Jump: 052987
    } else {
      Jump: 053023
    }
  }
LocOp 052987:
  TraceOperation 052987 (Print "Part of");
  GamePrint "Part of";
  TraceOperation 052994 (Je [Var (Global 202),Con 185] (Branch F (Dloc 053011)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),185)) {
    TraceOperation 052998 (Jin (Con 185) (Con 186) (Branch T (Dloc 053011)));
    Let b3 = M[002420];
    if (Equal(186,Widen(b3))) {
      Jump: 053011
    } else {
      TraceOperation 053002 (Call (Floc 043738) [Con 186] Sp);
      PushFrame 053002;
      SetLocal 1 186;
      JumpCall: 043738, #actuals: 1
    }
  } else {
    Jump: 053011
  }
LocReturn 053002:
  PushStack call_result;
  TraceOperation 053008 (Jump 053020);
  Jump: 053020
LocOp 053011:
  TraceOperation 053011 (Get_parent (Var (Global 202)) Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 053014 (Call (Floc 043738) [Var Sp] Sp);
  PopStack popped4;
  PushFrame 053014;
  SetLocal 1 popped4;
  JumpCall: 043738, #actuals: 1
LocReturn 053014:
  PushStack call_result;
  Jump: 053020
LocOp 053020:
  TraceOperation 053020 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 053023:
  TraceOperation 053023 (Je [Var (Global 202),Con 86] (Branch F (Dloc 053084)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),86)) {
    TraceOperation 053027 (Print_ret "If you have to consult the Guide about that, you're probably in serious shape. Consult a medic instead.");
    GamePrint "If you have to consult the Guide about that, you're probably in serious shape. Consult a medic instead.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 053084
  }
LocOp 053084:
  TraceOperation 053084 (Je [Var (Global 202),Con 67] (Branch F (Dloc 053167)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),67)) {
    TraceOperation 053089 (Print_obj (Con 67));
    Let b3 = M[001361];
    Let b4 = M[001362];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 053091 (Print " is a planet whose surface is mostly water. It is a favourite spot for Presidential dedication ceremonies");
      GamePrint " is a planet whose surface is mostly water. It is a favourite spot for Presidential dedication ceremonies";
      TraceOperation 053158 (Print_paddr (Var (Global 28)));
      Let b6 = M[007964];
      Let b7 = M[007965];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 053160 (Print_ret "France.");
      GamePrint "France.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 053091 (Print " is a planet whose surface is mostly water. It is a favourite spot for Presidential dedication ceremonies");
      GamePrint " is a planet whose surface is mostly water. It is a favourite spot for Presidential dedication ceremonies";
      TraceOperation 053158 (Print_paddr (Var (Global 28)));
      Let b9 = M[007964];
      Let b10 = M[007965];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
      TraceOperation 053160 (Print_ret "France.");
      GamePrint "France.\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    }
  } else {
    Jump: 053167
  }
LocOp 053167:
  TraceOperation 053167 (Je [Var (Global 202),Con 55] (Branch F (Dloc 053205)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 053171 (Print "France is the largest landmass on the planet ");
    GamePrint "France is the largest landmass on the planet ";
    TraceOperation 053200 (Print_obj (Con 67));
    Let b3 = M[001361];
    Let b4 = M[001362];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 053202 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 053202 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 053205
  }
LocOp 053205:
  TraceOperation 053205 (Je [Var (Global 202),Con 220] (Branch F (Dloc 053286)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),220)) {
    TraceOperation 053210 (Print "There is absolutely no such spaceship as ");
    GamePrint "There is absolutely no such spaceship as ";
    TraceOperation 053235 (Print_obj (Con 220));
    Let b3 = M[002738];
    Let b4 = M[002739];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 053237 (Print " and anything you've ever read in this spot to the contrary was just a prank.\n   -- ");
      GamePrint " and anything you've ever read in this spot to the contrary was just a prank.\n   -- ";
      TraceOperation 053282 (Print_paddr (Var (Global 18)));
      Let b6 = M[007944];
      Let b7 = M[007945];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 053284 New_line;
      GamePrint "\n";
      TraceOperation 053285 Rtrue;
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 053237 (Print " and anything you've ever read in this spot to the contrary was just a prank.\n   -- ");
      GamePrint " and anything you've ever read in this spot to the contrary was just a prank.\n   -- ";
      TraceOperation 053282 (Print_paddr (Var (Global 18)));
      Let b9 = M[007944];
      Let b10 = M[007945];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
      TraceOperation 053284 New_line;
      GamePrint "\n";
      TraceOperation 053285 Rtrue;
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    }
  } else {
    Jump: 053286
  }
LocOp 053286:
  TraceOperation 053286 (Je [Var (Global 202),Con 105] (Branch F (Dloc 053403)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),105)) {
    TraceOperation 053291 (Print_obj (Con 105));
    Let b3 = M[001703];
    Let b4 = M[001704];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 053293 (Print " is so awful that even the Sarkopsi of Burphon XII, whose religion strictly forbids the taking of one's life, consider suicide a preferable alternative to a ");
      GamePrint " is so awful that even the Sarkopsi of Burphon XII, whose religion strictly forbids the taking of one's life, consider suicide a preferable alternative to a ";
      TraceOperation 053392 (Print_obj (Con 105));
      Let b6 = M[001703];
      Let b7 = M[001704];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 053394 (Print_ret " reading.");
        GamePrint " reading.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 053394 (Print_ret " reading.");
        GamePrint " reading.\n";
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 053293 (Print " is so awful that even the Sarkopsi of Burphon XII, whose religion strictly forbids the taking of one's life, consider suicide a preferable alternative to a ");
      GamePrint " is so awful that even the Sarkopsi of Burphon XII, whose religion strictly forbids the taking of one's life, consider suicide a preferable alternative to a ";
      TraceOperation 053392 (Print_obj (Con 105));
      Let b11 = M[001703];
      Let b12 = M[001704];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      if (IsZeroByte(b13)) {
        GamePrint "";
        TraceOperation 053394 (Print_ret " reading.");
        GamePrint " reading.\n";
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
        TraceOperation 053394 (Print_ret " reading.");
        GamePrint " reading.\n";
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 1
      }
    }
  } else {
    Jump: 053403
  }
LocOp 053403:
  TraceOperation 053403 (Je [Var (Global 202),Con 124,Con 106] (Branch F (Dloc 053565)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),124),Equal(MakeHiLo(b1,b2),106))) {
    TraceOperation 053410 (Print "Vogons, whose specialties are bureaucracy and planet-smashing, are the most unpleasant race in the Galaxy. They wouldn't think twice about throwing someone into space, and wouldn't lift a finger to save their own grandmother from the ");
    GamePrint "Vogons, whose specialties are bureaucracy and planet-smashing, are the most unpleasant race in the Galaxy. They wouldn't think twice about throwing someone into space, and wouldn't lift a finger to save their own grandmother from the ";
    TraceOperation 053549 (Print_obj (Con 95));
    Let b3 = M[001613];
    Let b4 = M[001614];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 053551 (Print_paddr (Var (Global 28)));
      Let b6 = M[007964];
      Let b7 = M[007965];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 053553 (Print_obj (Con 105));
      Let b8 = M[001703];
      Let b9 = M[001704];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      if (IsZeroByte(b10)) {
        GamePrint "";
        TraceOperation 053555 (Print " and the ");
        GamePrint " and the ";
        TraceOperation 053560 (Print_obj (Con 95));
        Let b11 = M[001613];
        Let b12 = M[001614];
        Let b13 = M[Address(MakeHiLo(b11,b12))];
        if (IsZeroByte(b13)) {
          GamePrint "";
          TraceOperation 053562 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_14;
          JumpReturn: return_address_14, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
          TraceOperation 053562 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_15;
          JumpReturn: return_address_15, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
        TraceOperation 053555 (Print " and the ");
        GamePrint " and the ";
        TraceOperation 053560 (Print_obj (Con 95));
        Let b16 = M[001613];
        Let b17 = M[001614];
        Let b18 = M[Address(MakeHiLo(b16,b17))];
        if (IsZeroByte(b18)) {
          GamePrint "";
          TraceOperation 053562 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_19;
          JumpReturn: return_address_19, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b16,b17)),1));
          TraceOperation 053562 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_20;
          JumpReturn: return_address_20, result: 1
        }
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 053551 (Print_paddr (Var (Global 28)));
      Let b21 = M[007964];
      Let b22 = M[007965];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b21,b22)));
      TraceOperation 053553 (Print_obj (Con 105));
      Let b23 = M[001703];
      Let b24 = M[001704];
      Let b25 = M[Address(MakeHiLo(b23,b24))];
      if (IsZeroByte(b25)) {
        GamePrint "";
        TraceOperation 053555 (Print " and the ");
        GamePrint " and the ";
        TraceOperation 053560 (Print_obj (Con 95));
        Let b26 = M[001613];
        Let b27 = M[001614];
        Let b28 = M[Address(MakeHiLo(b26,b27))];
        if (IsZeroByte(b28)) {
          GamePrint "";
          TraceOperation 053562 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_29;
          JumpReturn: return_address_29, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b26,b27)),1));
          TraceOperation 053562 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_30;
          JumpReturn: return_address_30, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b23,b24)),1));
        TraceOperation 053555 (Print " and the ");
        GamePrint " and the ";
        TraceOperation 053560 (Print_obj (Con 95));
        Let b31 = M[001613];
        Let b32 = M[001614];
        Let b33 = M[Address(MakeHiLo(b31,b32))];
        if (IsZeroByte(b33)) {
          GamePrint "";
          TraceOperation 053562 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_34;
          JumpReturn: return_address_34, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b31,b32)),1));
          TraceOperation 053562 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_35;
          JumpReturn: return_address_35, result: 1
        }
      }
    }
  } else {
    Jump: 053565
  }
LocOp 053565:
  TraceOperation 053565 (Je [Var (Global 202),Con 134,Con 127] (Branch F (Dloc 053634)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),134),Equal(MakeHiLo(b1,b2),127))) {
    TraceOperation 053572 (Print "Alcohol, in addition to its familiar enjoyable effects, also helps cushion the shock of");
    GamePrint "Alcohol, in addition to its familiar enjoyable effects, also helps cushion the shock of";
    TraceOperation 053629 (Print_paddr (Var (Global 42)));
    Let b3 = M[007992];
    Let b4 = M[007993];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 053631 (Print_ret "s.");
    GamePrint "s.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 053634
  }
LocOp 053634:
  TraceOperation 053634 (Je [Var (Global 202),Con 201] (Branch F (Dloc 053694)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),201)) {
    TraceOperation 053638 (Print "The best randomness generator is simple");
    GamePrint "The best randomness generator is simple";
    TraceOperation 053663 (Print_paddr (Var (Global 34)));
    Let b3 = M[007976];
    Let b4 = M[007977];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 053665 (Print_ret ". Any hot gas or liquid is a good source.");
    GamePrint ". Any hot gas or liquid is a good source.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 053694
  }
LocOp 053694:
  TraceOperation 053694 (Je [Var (Global 202),Con 210] (Branch F (Dloc 053905)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),210)) {
    TraceOperation 053699 (Print "The ");
    GamePrint "The ";
    TraceOperation 053702 (Print_paddr (Var (Global 43)));
    Let b3 = M[007994];
    Let b4 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 053704 (Print_ret " incompetently produces a wide range of inefficient and unreliable high-tech machinery. However, thanks to SCC's ruthless marketing division, this junk accounts for over 95% of the high-tech machinery sold in the Galaxy. (SCC's marketing division will be the first against the wall when the revolution comes.)");
    GamePrint " incompetently produces a wide range of inefficient and unreliable high-tech machinery. However, thanks to SCC's ruthless marketing division, this junk accounts for over 95% of the high-tech machinery sold in the Galaxy. (SCC's marketing division will be the first against the wall when the revolution comes.)\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 053905
  }
LocOp 053905:
  TraceOperation 053905 (Je [Var (Global 202),Con 218] (Branch F (Dloc 054202)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),218)) {
    TraceOperation 053910 (Print "Thirty million generations of philosophers have debated the definition of intelligence. The most popular definition appears in the ");
    GamePrint "Thirty million generations of philosophers have debated the definition of intelligence. The most popular definition appears in the ";
    TraceOperation 053989 (Print_paddr (Var (Global 43)));
    Let b3 = M[007994];
    Let b4 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 053991 (Print_ret " android manuals: \"Intelligence is the ability to reconcile totally contradictory situations without going completely bonkers -- for example, having a stomach ache and not having a stomach ache at the same time, holding a hole without the doughnut, having good luck and bad luck simultaneously, or seeing a real estate agent waive his fee.\"");
    GamePrint " android manuals: \"Intelligence is the ability to reconcile totally contradictory situations without going completely bonkers -- for example, having a stomach ache and not having a stomach ache at the same time, holding a hole without the doughnut, having good luck and bad luck simultaneously, or seeing a real estate agent waive his fee.\"\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 054202
  }
LocOp 054202:
  TraceOperation 054202 (Je [Var (Global 202),Con 216] (Branch F (Dloc 054305)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),216)) {
    TraceOperation 054207 (Print "These ");
    GamePrint "These ";
    TraceOperation 054214 (Print_paddr (Var (Global 43)));
    Let b3 = M[007994];
    Let b4 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 054216 (Print " doors screen visitors for such qualities as intelligence and ability to time travel");
    GamePrint " doors screen visitors for such qualities as intelligence and ability to time travel";
    TraceOperation 054271 (Print_paddr (Var (Global 28)));
    Let b5 = M[007964];
    Let b6 = M[007965];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 054273 (Print_paddr (Var (Global 43)));
    Let b7 = M[007994];
    Let b8 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 054275 (Print ", ");
    GamePrint ", ";
    TraceOperation 054278 (Print_paddr (Var (Global 29)));
    Let b9 = M[007966];
    Let b10 = M[007967];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
    TraceOperation 054280 (Print_ret ", Intelligence, and Time Travel.");
    GamePrint ", Intelligence, and Time Travel.\n";
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 1
  } else {
    Jump: 054305
  }
LocOp 054305:
  TraceOperation 054305 (Je [Var (Global 202),Con 198,Con 215,Con 178] (Branch F (Dloc 054427)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),198),Equal(MakeHiLo(b1,b2),215)),Equal(MakeHiLo(b1,b2),178))) {
    TraceOperation 054313 (Print_paddr (Var (Global 29)));
    Let b3 = M[007966];
    Let b4 = M[007967];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 054315 (Print " are a misguided attempt by the ");
    GamePrint " are a misguided attempt by the ";
    TraceOperation 054336 (Print_paddr (Var (Global 43)));
    Let b5 = M[007994];
    Let b6 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 054338 (Print_ret " to make their machines behave more like people. Among the more miserable failures: paranoid-depressive robots and over-protective computers.");
    GamePrint " to make their machines behave more like people. Among the more miserable failures: paranoid-depressive robots and over-protective computers.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    Jump: 054427
  }
LocOp 054427:
  TraceOperation 054427 (Je [Var (Global 202),Con 25] (Branch F (Dloc 054547)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),25)) {
    TraceOperation 054432 (Print_ret "A must for the serious hitchhiker, peril-sensitive sunglasses darken at the first hint of danger, thus shielding the wearer from seeing anything alarming. Recommended brand: Joo Janta.");
    GamePrint "A must for the serious hitchhiker, peril-sensitive sunglasses darken at the first hint of danger, thus shielding the wearer from seeing anything alarming. Recommended brand: Joo Janta.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 054547
  }
LocOp 054547:
  TraceOperation 054547 (Je [Var (Global 202),Con 174] (Branch F (Dloc 054682)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 054552 (Print "According to legend, Magrathea was a planet that amassed incredible wealth by manufacturing ");
    GamePrint "According to legend, Magrathea was a planet that amassed incredible wealth by manufacturing ";
    TraceOperation 054613 (Print_obj (Con 82));
    Let b3 = M[001496];
    Let b4 = M[001497];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 054615 (Print_ret ". The legends also mention it as the setting of the very eagerly awaited second Infocom Hitchhiker's game.");
      GamePrint ". The legends also mention it as the setting of the very eagerly awaited second Infocom Hitchhiker's game.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 054615 (Print_ret ". The legends also mention it as the setting of the very eagerly awaited second Infocom Hitchhiker's game.");
      GamePrint ". The legends also mention it as the setting of the very eagerly awaited second Infocom Hitchhiker's game.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 054682
  }
LocOp 054682:
  TraceOperation 054682 (Je [Var (Global 202),Con 186,Con 187,Con 188] (Branch F (Dloc 054908)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),186),Equal(MakeHiLo(b1,b2),187)),Equal(MakeHiLo(b1,b2),188))) {
    TraceOperation 054690 (Print "Scientists have long known how to produce FINITE amounts of improbability, using a ");
    GamePrint "Scientists have long known how to produce FINITE amounts of improbability, using a ";
    TraceOperation 054749 (Print_paddr (Var (Global 10)));
    Let b3 = M[007928];
    Let b4 = M[007929];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 054751 (Print ", an ");
    GamePrint ", an ";
    TraceOperation 054756 (Print_obj (Con 182));
    Let b5 = M[002396];
    Let b6 = M[002397];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 054758 (Print " and a good source of");
      GamePrint " and a good source of";
      TraceOperation 054773 (Print_paddr (Var (Global 34)));
      Let b8 = M[007976];
      Let b9 = M[007977];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b8,b9)));
      TraceOperation 054775 (Print ". Recently, however, they have learned to generate INFINITE amounts, thanks to the invention of the In");
      GamePrint ". Recently, however, they have learned to generate INFINITE amounts, thanks to the invention of the In";
      TraceOperation 054844 (Print_paddr (Var (Global 10)));
      Let b10 = M[007928];
      Let b11 = M[007929];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
      TraceOperation 054846 (Print ". It is rumored that an");
      GamePrint ". It is rumored that an";
      TraceOperation 054859 (Print_paddr (Var (Global 11)));
      Let b12 = M[007930];
      Let b13 = M[007931];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b12,b13)));
      TraceOperation 054861 (Print ", based on this new generator, is currently under development");
      GamePrint ", based on this new generator, is currently under development";
      TraceOperation 054894 (Print_paddr (Var (Global 28)));
      Let b14 = M[007964];
      Let b15 = M[007965];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b14,b15)));
      TraceOperation 054896 (Print_obj (Con 182));
      Let b16 = M[002396];
      Let b17 = M[002397];
      Let b18 = M[Address(MakeHiLo(b16,b17))];
      if (IsZeroByte(b18)) {
        GamePrint "";
        TraceOperation 054898 (Print " and");
        GamePrint " and";
        TraceOperation 054903 (Print_paddr (Var (Global 34)));
        Let b19 = M[007976];
        Let b20 = M[007977];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b19,b20)));
        TraceOperation 054905 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_21;
        JumpReturn: return_address_21, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b16,b17)),1));
        TraceOperation 054898 (Print " and");
        GamePrint " and";
        TraceOperation 054903 (Print_paddr (Var (Global 34)));
        Let b22 = M[007976];
        Let b23 = M[007977];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b22,b23)));
        TraceOperation 054905 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_24;
        JumpReturn: return_address_24, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 054758 (Print " and a good source of");
      GamePrint " and a good source of";
      TraceOperation 054773 (Print_paddr (Var (Global 34)));
      Let b25 = M[007976];
      Let b26 = M[007977];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b25,b26)));
      TraceOperation 054775 (Print ". Recently, however, they have learned to generate INFINITE amounts, thanks to the invention of the In");
      GamePrint ". Recently, however, they have learned to generate INFINITE amounts, thanks to the invention of the In";
      TraceOperation 054844 (Print_paddr (Var (Global 10)));
      Let b27 = M[007928];
      Let b28 = M[007929];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b27,b28)));
      TraceOperation 054846 (Print ". It is rumored that an");
      GamePrint ". It is rumored that an";
      TraceOperation 054859 (Print_paddr (Var (Global 11)));
      Let b29 = M[007930];
      Let b30 = M[007931];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b29,b30)));
      TraceOperation 054861 (Print ", based on this new generator, is currently under development");
      GamePrint ", based on this new generator, is currently under development";
      TraceOperation 054894 (Print_paddr (Var (Global 28)));
      Let b31 = M[007964];
      Let b32 = M[007965];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b31,b32)));
      TraceOperation 054896 (Print_obj (Con 182));
      Let b33 = M[002396];
      Let b34 = M[002397];
      Let b35 = M[Address(MakeHiLo(b33,b34))];
      if (IsZeroByte(b35)) {
        GamePrint "";
        TraceOperation 054898 (Print " and");
        GamePrint " and";
        TraceOperation 054903 (Print_paddr (Var (Global 34)));
        Let b36 = M[007976];
        Let b37 = M[007977];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b36,b37)));
        TraceOperation 054905 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_38;
        JumpReturn: return_address_38, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b33,b34)),1));
        TraceOperation 054898 (Print " and");
        GamePrint " and";
        TraceOperation 054903 (Print_paddr (Var (Global 34)));
        Let b39 = M[007976];
        Let b40 = M[007977];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b39,b40)));
        TraceOperation 054905 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_41;
        JumpReturn: return_address_41, result: 1
      }
    }
  } else {
    Jump: 054908
  }
LocOp 054908:
  TraceOperation 054908 (Je [Var (Global 202),Con 182] (Branch F (Dloc 054954)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),182)) {
    TraceOperation 054912 (Print "The ");
    GamePrint "The ";
    TraceOperation 054915 (Print_obj (Con 182));
    Let b3 = M[002396];
    Let b4 = M[002397];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 054917 (Print_ret " is one of the primary application devices of Improbability Physics.");
      GamePrint " is one of the primary application devices of Improbability Physics.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 054917 (Print_ret " is one of the primary application devices of Improbability Physics.");
      GamePrint " is one of the primary application devices of Improbability Physics.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 054954
  }
LocOp 054954:
  TraceOperation 054954 (Je [Var (Global 202),Con 121,Con 126] (Branch F (Dloc 055069)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),121),Equal(MakeHiLo(b1,b2),126))) {
    TraceOperation 054961 (Print "Sources of protein, such as the common peanut, are carried by all serious hitchhikers. Protein loss occurs in");
    GamePrint "Sources of protein, such as the common peanut, are carried by all serious hitchhikers. Protein loss occurs in";
    TraceOperation 055030 (Print_paddr (Var (Global 42)));
    Let b3 = M[007992];
    Let b4 = M[007993];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 055032 (Print_ret "s and you will become groggy unless you replace it immediately.");
    GamePrint "s and you will become groggy unless you replace it immediately.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 055069
  }
LocOp 055069:
  TraceOperation 055069 (Je [Var (Global 202),Con 88,Con 209] (Branch F (Dloc 055223)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),88),Equal(MakeHiLo(b1,b2),209))) {
    TraceOperation 055076 (Print "A typically unreliable ");
    GamePrint "A typically unreliable ";
    TraceOperation 055093 (Print_paddr (Var (Global 43)));
    Let b3 = M[007994];
    Let b4 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 055095 (Print " product, the ");
    GamePrint " product, the ";
    TraceOperation 055104 (Print_obj (Con 209));
    Let b5 = M[002639];
    Let b6 = M[002640];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 055106 (Print_ret " analyses the user's neural paths to provide the (supposedly) ideal offering. Its computing power is frankly abysmal, so the optional computer interface is a good thing to go for.");
      GamePrint " analyses the user's neural paths to provide the (supposedly) ideal offering. Its computing power is frankly abysmal, so the optional computer interface is a good thing to go for.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 055106 (Print_ret " analyses the user's neural paths to provide the (supposedly) ideal offering. Its computing power is frankly abysmal, so the optional computer interface is a good thing to go for.");
      GamePrint " analyses the user's neural paths to provide the (supposedly) ideal offering. Its computing power is frankly abysmal, so the optional computer interface is a good thing to go for.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    Jump: 055223
  }
LocOp 055223:
  TraceOperation 055223 (Je [Var (Global 202),Con 140,Con 69,Con 155] (Branch T (Dloc 055235)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),140),Equal(MakeHiLo(b1,b2),69)),Equal(MakeHiLo(b1,b2),155))) {
    Jump: 055235
  } else {
    TraceOperation 055230 (Je [Var (Global 202),Con 61] (Branch F (Dloc 055598)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),61)) {
      Jump: 055235
    } else {
      Jump: 055598
    }
  }
LocOp 055235:
  TraceOperation 055235 (Print_ret "Fluff is interesting stuff: a deadly poison on Bodega Minor, the diet staple of Frazelon V, the unit of currency on the moons of the Blurfoid system, and the major crop of the laundry supplies planet, Blastus III.\nOne ancient legend claims that four pieces of fluff lie scattered around the Galaxy; each forming one-quarter of the seedling of a tree with amazing properties, the sole survivor of the tropical planet Fuzzbol (Footnote 8).\nThe ultimate source of fluff is still a mystery, with the scientific community torn between the Big Lint Bang theory and the White Lint Hole theory.");
  GamePrint "Fluff is interesting stuff: a deadly poison on Bodega Minor, the diet staple of Frazelon V, the unit of currency on the moons of the Blurfoid system, and the major crop of the laundry supplies planet, Blastus III.\nOne ancient legend claims that four pieces of fluff lie scattered around the Galaxy; each forming one-quarter of the seedling of a tree with amazing properties, the sole survivor of the tropical planet Fuzzbol (Footnote 8).\nThe ultimate source of fluff is still a mystery, with the scientific community torn between the Big Lint Bang theory and the White Lint Hole theory.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 055598:
  TraceOperation 055598 (Je [Var (Global 202),Con 195] (Branch T (Dloc 055610)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),195)) {
    Jump: 055610
  } else {
    TraceOperation 055602 (Je [Var (Global 202),Con 30] (Branch F (Dloc 055626)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 055606 (Je [Var (Global 120),Con 195] (Branch F (Dloc 055626)));
      Let b5 = M[008148];
      Let b6 = M[008149];
      if (Equal(MakeHiLo(b5,b6),195)) {
        Jump: 055610
      } else {
        Jump: 055626
      }
    } else {
      Jump: 055626
    }
  }
LocOp 055610:
  TraceOperation 055610 (Print_obj (Con 195));
  Let b1 = M[002513];
  Let b2 = M[002514];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 055612 (Print " is the current");
    GamePrint " is the current";
    TraceOperation 055621 (Print_paddr (Var (Global 44)));
    Let b4 = M[007996];
    Let b5 = M[007997];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 055623 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 055612 (Print " is the current");
    GamePrint " is the current";
    TraceOperation 055621 (Print_paddr (Var (Global 44)));
    Let b7 = M[007996];
    Let b8 = M[007997];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 055623 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  }
LocOp 055626:
  TraceOperation 055626 (Je [Var (Global 202),Con 111] (Branch F (Dloc 055709)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),111)) {
    TraceOperation 055631 (Print "A mind-bogglingly improbable creature. A ");
    GamePrint "A mind-bogglingly improbable creature. A ";
    TraceOperation 055662 (Print_obj (Con 111));
    Let b3 = M[001757];
    Let b4 = M[001758];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 055664 (Print_ret ", when placed in one's ear, allows one to understand any language.");
      GamePrint ", when placed in one's ear, allows one to understand any language.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 055664 (Print_ret ", when placed in one's ear, allows one to understand any language.");
      GamePrint ", when placed in one's ear, allows one to understand any language.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 055709
  }
LocOp 055709:
  TraceOperation 055709 (Je [Var (Global 202),Con 139] (Branch F (Dloc 056027)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 055714 (Print_ret "A towel is the most useful thing (besides the Guide) a Galactic hitchhiker can have. Its uses include travel, combat, communications, protection from the elements, hand-drying and reassurance. Towels have great symbolic value, with many associated points of honour. Never mock the towel of another, even if it has little pink and blue flowers on it. Never do something to somebody else's towel that you would not want them to do to yours. And, if you borrow the towel of another, you MUST return it before leaving their world.");
    GamePrint "A towel is the most useful thing (besides the Guide) a Galactic hitchhiker can have. Its uses include travel, combat, communications, protection from the elements, hand-drying and reassurance. Towels have great symbolic value, with many associated points of honour. Never mock the towel of another, even if it has little pink and blue flowers on it. Never do something to somebody else's towel that you would not want them to do to yours. And, if you borrow the towel of another, you MUST return it before leaving their world.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 056027
  }
LocOp 056027:
  TraceOperation 056027 (Je [Var (Global 202),Con 4,Con 7] (Branch F (Dloc 056239)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),4),Equal(MakeHiLo(b1,b2),7))) {
    TraceOperation 056034 (Print "The Electronic Sub-Etha Auto Hitching Thumb is a wonderful thing, but should not be mistreated. If used while a ship is near, you will be transported there. If no ship is in the vicinity, you will place a heavy strain on the Thumb's logic circuits, which could lead to malfunction. The Thumb carries the usual ");
    GamePrint "The Electronic Sub-Etha Auto Hitching Thumb is a wonderful thing, but should not be mistreated. If used while a ship is near, you will be transported there. If no ship is in the vicinity, you will place a heavy strain on the Thumb's logic circuits, which could lead to malfunction. The Thumb carries the usual ";
    TraceOperation 056223 (Print_paddr (Var (Global 43)));
    Let b3 = M[007994];
    Let b4 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 056225 (Print " lifetime ");
    GamePrint " lifetime ";
    TraceOperation 056234 (Print_obj (Con 4));
    Let b5 = M[000794];
    Let b6 = M[000795];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 056236 (Print_ret "s.");
      GamePrint "s.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 056236 (Print_ret "s.");
      GamePrint "s.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    Jump: 056239
  }
LocOp 056239:
  TraceOperation 056239 (Je [Var (Global 202),Con 122] (Branch F (Dloc 056415)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),122)) {
    TraceOperation 056244 (Print_ret "A strong body of opinion holds that this is not water at all, despite the claims on the label about how pure the spring is, and all that tosh about sparkling babbling brooks and so on. There is something highly suspect about the water on Santraginus Five, as anyone who's ever met any of their fish will tell you.");
    GamePrint "A strong body of opinion holds that this is not water at all, despite the claims on the label about how pure the spring is, and all that tosh about sparkling babbling brooks and so on. There is something highly suspect about the water on Santraginus Five, as anyone who's ever met any of their fish will tell you.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 056415
  }
LocOp 056415:
  TraceOperation 056415 (Je [Var (Global 202),Con 95] (Branch F (Dloc 056674)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),95)) {
    TraceOperation 056420 (Print "The ");
    GamePrint "The ";
    TraceOperation 056423 (Print_obj (Con 95));
    Let b3 = M[001613];
    Let b4 = M[001614];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 056425 (Print_ret " is a mind-bogglingly stupid animal. It has almost no capacity for learning from experience and is therefore surprised by virtually everything that happens to it. Here is an example of how stupid it is: it thinks that if you can't see it, it can't see you.\nIts behaviour would be quite endearing if it wasn't spoilt by this one thing: it is the most violently carnivorous creature in the Galaxy. Avoid, avoid, avoid.");
      GamePrint " is a mind-bogglingly stupid animal. It has almost no capacity for learning from experience and is therefore surprised by virtually everything that happens to it. Here is an example of how stupid it is: it thinks that if you can't see it, it can't see you.\nIts behaviour would be quite endearing if it wasn't spoilt by this one thing: it is the most violently carnivorous creature in the Galaxy. Avoid, avoid, avoid.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 056425 (Print_ret " is a mind-bogglingly stupid animal. It has almost no capacity for learning from experience and is therefore surprised by virtually everything that happens to it. Here is an example of how stupid it is: it thinks that if you can't see it, it can't see you.\nIts behaviour would be quite endearing if it wasn't spoilt by this one thing: it is the most violently carnivorous creature in the Galaxy. Avoid, avoid, avoid.");
      GamePrint " is a mind-bogglingly stupid animal. It has almost no capacity for learning from experience and is therefore surprised by virtually everything that happens to it. Here is an example of how stupid it is: it thinks that if you can't see it, it can't see you.\nIts behaviour would be quite endearing if it wasn't spoilt by this one thing: it is the most violently carnivorous creature in the Galaxy. Avoid, avoid, avoid.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 056674
  }
LocOp 056674:
  TraceOperation 056674 (Je [Var (Global 202),Con 151] (Branch F (Dloc 056935)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),151)) {
    TraceOperation 056679 (Print "A thoroughly unpleasant means of travelling which involves tearing you apart in one place and slamming you back together in another. (Of course, it's better than the older method, where disassembled people would be transmitted down phone lines and arrive in a garbled and sometimes completely disconnected state.) You should have a drink or two or three before going through one");
    GamePrint "A thoroughly unpleasant means of travelling which involves tearing you apart in one place and slamming you back together in another. (Of course, it's better than the older method, where disassembled people would be transmitted down phone lines and arrive in a garbled and sometimes completely disconnected state.) You should have a drink or two or three before going through one";
    TraceOperation 056904 (Print_paddr (Var (Global 28)));
    Let b3 = M[007964];
    Let b4 = M[007965];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 056906 (Print_ret "Galaxia Woonbeam, Alcohol, and Protein.");
    GamePrint "Galaxia Woonbeam, Alcohol, and Protein.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 056935
  }
LocOp 056935:
  TraceOperation 056935 (Je [Var (Global 202),Con 149] (Branch F (Dloc 057085)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),149)) {
    TraceOperation 056940 (Print_ret "Galaxia Woonbeam is the author of \"Slimmer's Guide to Weightloss During Matter Disassembly Transition.\" This text is currently the subject of the biggest suit for criminal negligence damages in history and is unavailable at this time.");
    GamePrint "Galaxia Woonbeam is the author of \"Slimmer's Guide to Weightloss During Matter Disassembly Transition.\" This text is currently the subject of the biggest suit for criminal negligence damages in history and is unavailable at this time.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 057085
  }
LocOp 057085:
  TraceOperation 057085 (Je [Var (Global 202),Con 190] (Branch F (Dloc 057163)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),190)) {
    TraceOperation 057090 (Print_ret "The best drink in existence; somewhat like having your brains smashed out by a slice of lemon wrapped around a large gold brick.");
    GamePrint "The best drink in existence; somewhat like having your brains smashed out by a slice of lemon wrapped around a large gold brick.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 057163
  }
LocOp 057163:
  TraceOperation 057163 (Je [Var (Global 202),Con 81,Con 163] (Branch F (Dloc 057182)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),81),Equal(MakeHiLo(b1,b2),163))) {
    TraceOperation 057169 (Print_ret "Mostly harmless.");
    GamePrint "Mostly harmless.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 057182
  }
LocOp 057182:
  TraceOperation 057182 (Je [Var (Global 202),Con 137] (Branch F (Dloc 057190)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),137)) {
    TraceOperation 057186 (Print_paddr (Var (Global 63)));
    Let b3 = M[008034];
    Let b4 = M[008035];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 057188 New_line;
    GamePrint "\n";
    TraceOperation 057189 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 057190
  }
LocOp 057190:
  TraceOperation 057190 (Test_attr (Var (Global 202)) (Con 2) (Branch F (Dloc 057358)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,5)) {
    TraceOperation 057195 (Print_ret "The editor responsible for entries under this heading has been out to lunch for a couple of years but is expected back soon, at which point there will be rapid updates. Until then, don't panic, unless your situation is really a life or death one, in which case, sure, go ahead, panic.");
    GamePrint "The editor responsible for entries under this heading has been out to lunch for a couple of years but is expected back soon, at which point there will be rapid updates. Until then, don't panic, unless your situation is really a life or death one, in which case, sure, go ahead, panic.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 057358
  }
LocOp 057358:
  TraceOperation 057358 (Je [Var (Global 202),Con 52,Con 51,Con 168] (Branch T (Dloc 057384)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),52),Equal(MakeHiLo(b1,b2),51)),Equal(MakeHiLo(b1,b2),168))) {
    Jump: 057384
  } else {
    TraceOperation 057365 (Je [Var (Global 202),Con 202,Con 8,Con 9] (Branch T (Dloc 057384)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),202),Equal(MakeHiLo(b3,b4),8)),Equal(MakeHiLo(b3,b4),9))) {
      Jump: 057384
    } else {
      TraceOperation 057372 (Je [Var (Global 202),Con 101,Con 191,Con 204] (Branch T (Dloc 057384)));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),101),Equal(MakeHiLo(b5,b6),191)),Equal(MakeHiLo(b5,b6),204))) {
        Jump: 057384
      } else {
        TraceOperation 057379 (Je [Var (Global 202),Con 213] (Branch F (Dloc 057537)));
        Let b7 = M[008312];
        Let b8 = M[008313];
        if (Equal(MakeHiLo(b7,b8),213)) {
          Jump: 057384
        } else {
          Jump: 057537
        }
      }
    }
  }
LocOp 057384:
  TraceOperation 057384 (Print_ret "Sorry, that portion of our Sub-Etha database was accidentally deleted last night during a wild office party. The lost data will be restored as soon as we find someone who knows where the back-up tapes are kept, if indeed any are kept at all.");
  GamePrint "Sorry, that portion of our Sub-Etha database was accidentally deleted last night during a wild office party. The lost data will be restored as soon as we find someone who knows where the back-up tapes are kept, if indeed any are kept at all.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 057537:
  TraceOperation 057537 (Print_ret "That is one of the Great Unanswered Questions. For a list of the others, consult the Guide.");
  GamePrint "That is one of the Great Unanswered Questions. For a list of the others, consult the Guide.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[389]--------------------------------------------------
LocRoutine 057596:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057599
LocOp 057599:
  TraceOperation 057599 (Print "You can't see");
  GamePrint "You can't see";
  TraceOperation 057606 (Call (Floc 025716) [Var (Local 1)] Sp);
  PushFrame 057606;
  SetLocal 1 GetLocal(1);
  JumpCall: 025716, #actuals: 1
LocReturn 057606:
  PushStack call_result;
  TraceOperation 057612 (Jz (Var Sp) (Branch F (Dloc 057620)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 057615 (Print " any");
    GamePrint " any";
    Jump: 057620
  } else {
    Jump: 057620
  }
LocOp 057620:
  TraceOperation 057620 (Je [Var (Local 1),Var (Global 201)] (Branch F (Dloc 057632)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(GetLocal(1),MakeHiLo(b1,b2))) {
    TraceOperation 057624 (Call (Floc 028416) [] Sp);
    PushFrame 057624;
    JumpCall: 028416, #actuals: 0
  } else {
    Jump: 057632
  }
LocReturn 057624:
  PushStack call_result;
  TraceOperation 057629 (Jump 057637);
  Jump: 057637
LocOp 057632:
  TraceOperation 057632 (Call (Floc 028456) [] Sp);
  PushFrame 057632;
  JumpCall: 028456, #actuals: 0
LocReturn 057632:
  PushStack call_result;
  Jump: 057637
LocOp 057637:
  TraceOperation 057637 (Print " here.");
  GamePrint " here.";
  TraceOperation 057642 New_line;
  GamePrint "\n";
  TraceOperation 057643 (Call (Floc 043634) [] Sp);
  PushFrame 057643;
  JumpCall: 043634, #actuals: 0
LocReturn 057643:
  PushStack call_result;
  TraceOperation 057648 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[390]--------------------------------------------------
LocRoutine 057650:
  MakeRoutineFrame 0;
  Jump: 057651
LocOp 057651:
  TraceOperation 057651 (Print "You must tell me how to do that to");
  GamePrint "You must tell me how to do that to";
  TraceOperation 057672 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 057672;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 057672:
  PushStack call_result;
  TraceOperation 057678 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[391]--------------------------------------------------
LocRoutine 057682:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057685
LocOp 057685:
  TraceOperation 057685 (Print "You'll have to get out of the ");
  GamePrint "You'll have to get out of the ";
  TraceOperation 057702 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 057704 (Print_ret " first.");
    GamePrint " first.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 057704 (Print_ret " first.");
    GamePrint " first.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[392]--------------------------------------------------
LocRoutine 057712:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057715
LocOp 057715:
  TraceOperation 057715 (Print "You can't. It's not yours. It's ");
  GamePrint "You can't. It's not yours. It's ";
  TraceOperation 057732 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z3(GetLocal(1)));
  TraceOperation 057734 (Print_ret "'s and it's private.");
  GamePrint "'s and it's private.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[393]--------------------------------------------------
LocRoutine 057748:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057751
LocOp 057751:
  TraceOperation 057751 (Print "It's not a very good ");
  GamePrint "It's not a very good ";
  TraceOperation 057762 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z3(GetLocal(1)));
  TraceOperation 057764 (Print_ret ", is it?");
  GamePrint ", is it?\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[394]--------------------------------------------------
LocRoutine 057772:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057775
LocOp 057775:
  TraceOperation 057775 (Print " at an improbability factor of 2 to the ");
  GamePrint " at an improbability factor of 2 to the ";
  TraceOperation 057800 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z3(GetLocal(1)));
  TraceOperation 057802 (Print "th power to 1 against.");
  GamePrint "th power to 1 against.";
  TraceOperation 057819 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[395]--------------------------------------------------
LocRoutine 057820:
  MakeRoutineFrame 0;
  Jump: 057821
LocOp 057821:
  TraceOperation 057821 (Print "(removing the ");
  GamePrint "(removing the ";
  TraceOperation 057832 (Print_obj (Con 179));
  Let b1 = M[002369];
  Let b2 = M[002370];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 057834 (Print_ret " first)");
    GamePrint " first)\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 057834 (Print_ret " first)");
    GamePrint " first)\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[396]--------------------------------------------------
LocRoutine 057842:
  MakeRoutineFrame 0;
  Jump: 057843
LocOp 057843:
  TraceOperation 057843 (Print "You can't --");
  GamePrint "You can't --";
  TraceOperation 057850 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 057850;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 057850:
  PushStack call_result;
  TraceOperation 057857 (Print " is an integral part of");
  GamePrint " is an integral part of";
  TraceOperation 057874 (Get_parent (Var (Global 201)) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 057877 (Call (Floc 043738) [Var Sp,Con 1] Sp);
  PopStack popped4;
  PushFrame 057877;
  SetLocal 1 popped4;
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 057877:
  PushStack call_result;
  TraceOperation 057884 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[397]--------------------------------------------------
LocRoutine 057888:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057891
LocOp 057891:
  TraceOperation 057891 (Print "Pointing toward Prosser, ");
  GamePrint "Pointing toward Prosser, ";
  TraceOperation 057908 (Print_paddr (Var (Local 1)));
  GamePrint GetText(PackedAddress Z3(GetLocal(1)));
  TraceOperation 057910 (Print " \"But that man ");
  GamePrint " \"But that man ";
  TraceOperation 057921 (Jz (Var (Global 145)) (Branch T (Dloc 057934)));
  Let b1 = M[008198];
  Let b2 = M[008199];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 057934
  } else {
    TraceOperation 057924 (Print "just knocked");
    GamePrint "just knocked";
    TraceOperation 057931 (Jump 057945);
    Jump: 057945
  }
LocOp 057934:
  TraceOperation 057934 (Print "wants to knock");
  GamePrint "wants to knock";
  Jump: 057945
LocOp 057945:
  TraceOperation 057945 (Print " my house down!\"");
  GamePrint " my house down!\"";
  TraceOperation 057958 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[398]--------------------------------------------------
LocRoutine 057960:
  MakeRoutineFrame 0;
  Jump: 057961
LocOp 057961:
  TraceOperation 057961 (Print " cushion your system against the coming shock of the");
  GamePrint " cushion your system against the coming shock of the";
  TraceOperation 057992 (Print_paddr (Var (Global 42)));
  Let b1 = M[007992];
  Let b2 = M[007993];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 057994 (Print ".");
  GamePrint ".";
  TraceOperation 057997 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[399]--------------------------------------------------
LocRoutine 057998:
  MakeRoutineFrame 0;
  Jump: 057999
LocOp 057999:
  TraceOperation 057999 (Print " It bears a small label which reads \"Another fine product of the ");
  GamePrint " It bears a small label which reads \"Another fine product of the ";
  TraceOperation 058038 (Print_paddr (Var (Global 43)));
  Let b1 = M[007994];
  Let b2 = M[007995];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 058040 (Print ".\"");
  GamePrint ".\"";
  TraceOperation 058045 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[400]--------------------------------------------------
LocRoutine 058046:
  MakeRoutineFrame 0;
  Jump: 058047
LocOp 058047:
  TraceOperation 058047 (Print " a ");
  GamePrint " a ";
  TraceOperation 058050 (Print_obj (Con 124));
  Let b1 = M[001874];
  Let b2 = M[001875];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 058052 (Print_ret " unexpectedly arrives and demolishes the Earth to make way for a new hyperspace bypass.");
    GamePrint " unexpectedly arrives and demolishes the Earth to make way for a new hyperspace bypass.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 058052 (Print_ret " unexpectedly arrives and demolishes the Earth to make way for a new hyperspace bypass.");
    GamePrint " unexpectedly arrives and demolishes the Earth to make way for a new hyperspace bypass.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[401]--------------------------------------------------
LocRoutine 058110:
  MakeRoutineFrame 0;
  Jump: 058111
LocOp 058111:
  TraceOperation 058111 (Print_ret "You are now on your feet.");
  GamePrint "You are now on your feet.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[402]--------------------------------------------------
LocRoutine 058124:
  MakeRoutineFrame 0;
  Jump: 058125
LocOp 058125:
  TraceOperation 058125 (Jz (Var (Global 145)) (Branch T (Dloc 058264)));
  Let b1 = M[008198];
  Let b2 = M[008199];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 058264
  } else {
    TraceOperation 058129 (Je [Var (Global 203),Con 57] (Branch F (Dloc 058264)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),57)) {
      TraceOperation 058134 (Print_paddr (Var (Global 48)));
      Let b5 = M[008004];
      Let b6 = M[008005];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 058136 (Print " You can't enjoy a ");
      GamePrint " You can't enjoy a ";
      TraceOperation 058147 (Print_obj (Con 171));
      Let b7 = M[002297];
      Let b8 = M[002298];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      if (IsZeroByte(b9)) {
        GamePrint "";
        TraceOperation 058149 (Print_ret " properly till it's at least a hundred years old. Also, you are haunted by the tragic vision of your favourite teapot lying shattered among the dust.\nThere is also the matter of all your clothes.");
        GamePrint " properly till it's at least a hundred years old. Also, you are haunted by the tragic vision of your favourite teapot lying shattered among the dust.\nThere is also the matter of all your clothes.\n";
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
        TraceOperation 058149 (Print_ret " properly till it's at least a hundred years old. Also, you are haunted by the tragic vision of your favourite teapot lying shattered among the dust.\nThere is also the matter of all your clothes.");
        GamePrint " properly till it's at least a hundred years old. Also, you are haunted by the tragic vision of your favourite teapot lying shattered among the dust.\nThere is also the matter of all your clothes.\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      }
    } else {
      Jump: 058264
    }
  }
LocOp 058264:
  TraceOperation 058264 (Je [Var (Global 203),Con 28,Con 21,Con 38] (Branch F (Dloc 058298)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),28),Equal(MakeHiLo(b1,b2),21)),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 058271 (Je [Var (Global 0),Con 149,Con 151] (Branch F (Dloc 058284)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (LogOr(Equal(MakeHiLo(b3,b4),149),Equal(MakeHiLo(b3,b4),151))) {
      TraceOperation 058277 (Call (Floc 043620) [Con 17] Sp);
      PushFrame 058277;
      SetLocal 1 17;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 058284
    }
  } else {
    Jump: 058298
  }
LocReturn 058277:
  PushStack call_result;
  TraceOperation 058283 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 058284:
  TraceOperation 058284 (Je [Var (Global 0),Con 168] (Branch F (Dloc 058292)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 058288 (Print_paddr (Var (Global 57)));
    Let b3 = M[008022];
    Let b4 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 058290 New_line;
    GamePrint "\n";
    TraceOperation 058291 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 058292
  }
LocOp 058292:
  TraceOperation 058292 (Call (Floc 040326) [] Sp);
  PushFrame 058292;
  JumpCall: 040326, #actuals: 0
LocReturn 058292:
  PushStack call_result;
  TraceOperation 058297 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 058298:
  TraceOperation 058298 (Je [Var (Global 203),Con 48,Con 59,Con 86] (Branch F (Dloc 058330)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),59)),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 058305 (Je [Var (Global 0),Con 151] (Branch F (Dloc 058316)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),151)) {
      TraceOperation 058309 (Call (Floc 043620) [Con 16] Sp);
      PushFrame 058309;
      SetLocal 1 16;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 058316
    }
  } else {
    Jump: 058330
  }
LocReturn 058309:
  PushStack call_result;
  TraceOperation 058315 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 058316:
  TraceOperation 058316 (Je [Var (Global 0),Con 168] (Branch F (Dloc 058326)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 058320 (Call (Floc 040326) [] Sp);
    PushFrame 058320;
    JumpCall: 040326, #actuals: 0
  } else {
    Jump: 058326
  }
LocReturn 058320:
  PushStack call_result;
  TraceOperation 058325 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 058326:
  TraceOperation 058326 (Print_paddr (Var (Global 57)));
  Let b1 = M[008022];
  Let b2 = M[008023];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 058328 New_line;
  GamePrint "\n";
  TraceOperation 058329 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
LocOp 058330:
  TraceOperation 058330 (Je [Var (Global 203),Con 87] (Branch F (Dloc 058349)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 058334 (Je [Var (Global 0),Con 149] (Branch F (Dloc 058349)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),149)) {
      TraceOperation 058338 (Jz (Var (Global 204)) (Branch T (Dloc 058349)));
      Let b5 = M[008316];
      Let b6 = M[008317];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 058349
      } else {
        TraceOperation 058341 (Call (Floc 022042) [Con 87,Con 42] Sp);
        PushFrame 058341;
        SetLocal 1 87;
        SetLocal 2 42;
        JumpCall: 022042, #actuals: 2
      }
    } else {
      Jump: 058349
    }
  } else {
    Jump: 058349
  }
LocReturn 058341:
  PushStack call_result;
  TraceOperation 058348 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 058349:
  TraceOperation 058349 (Je [Var (Global 203),Con 61] (Branch F (Dloc 058370)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 058353 (Jz (Var (Global 145)) (Branch T (Dloc 058370)));
    Let b3 = M[008198];
    Let b4 = M[008199];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 058370
    } else {
      TraceOperation 058356 (Print "It is now a ");
      GamePrint "It is now a ";
      TraceOperation 058365 (Print_obj (Con 171));
      Let b5 = M[002297];
      Let b6 = M[002298];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 058367 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 058367 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      }
    }
  } else {
    Jump: 058370
  }
LocOp 058370:
  TraceOperation 058370 (Je [Var (Global 120),Con 142] (Branch F Dfalse));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 058374 (Call (Floc 046716) [] Sp);
    PushFrame 058374;
    JumpCall: 046716, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 058374:
  PushStack call_result;
  TraceOperation 058379 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[403]--------------------------------------------------
LocRoutine 058380:
  MakeRoutineFrame 0;
  Jump: 058381
LocOp 058381:
  TraceOperation 058381 (Je [Var (Global 201),Con 172] (Branch F (Dloc 058394)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),172)) {
    TraceOperation 058385 (Call (Floc 022042) [Var (Global 203),Con 173,Var (Global 202)] Sp);
    Let b3 = M[008314];
    Let b4 = M[008315];
    Let b5 = M[008312];
    Let b6 = M[008313];
    PushFrame 058385;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 173;
    SetLocal 3 MakeHiLo(b5,b6);
    JumpCall: 022042, #actuals: 3
  } else {
    Jump: 058394
  }
LocReturn 058385:
  PushStack call_result;
  TraceOperation 058393 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 058394:
  TraceOperation 058394 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 173] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 058394;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 173;
  JumpCall: 022042, #actuals: 3
LocReturn 058394:
  PushStack call_result;
  TraceOperation 058402 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[404]--------------------------------------------------
LocRoutine 058404:
  MakeRoutineFrame 0;
  Jump: 058405
LocOp 058405:
  TraceOperation 058405 (Je [Var (Global 0),Con 168,Con 151] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(Equal(MakeHiLo(b1,b2),168),Equal(MakeHiLo(b1,b2),151))) {
    TraceOperation 058411 New_line;
    GamePrint "\n";
    TraceOperation 058412 (Print "Astoundingly, a ");
    GamePrint "Astoundingly, a ";
    TraceOperation 058425 (Print_obj (Con 166));
    Let b3 = M[002252];
    Let b4 = M[002253];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 058427 (Print " pokes through your wall. However, you have no time for surprise because the ceiling is collapsing on you as");
      GamePrint " pokes through your wall. However, you have no time for surprise because the ceiling is collapsing on you as";
      TraceOperation 058482 (Call (Floc 058488) [] Sp);
      PushFrame 058482;
      JumpCall: 058488, #actuals: 0
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 058427 (Print " pokes through your wall. However, you have no time for surprise because the ceiling is collapsing on you as");
      GamePrint " pokes through your wall. However, you have no time for surprise because the ceiling is collapsing on you as";
      TraceOperation 058482 (Call (Floc 058488) [] Sp);
      PushFrame 058482;
      JumpCall: 058488, #actuals: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 058482:
  PushStack call_result;
  TraceOperation 058487 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[405]--------------------------------------------------
LocRoutine 058488:
  MakeRoutineFrame 0;
  Jump: 058489
LocOp 058489:
  TraceOperation 058489 (Print " your home is unexpectedly demolished to make way for a new bypass. You are seriously injured in the process, but on your way to the hospital");
  GamePrint " your home is unexpectedly demolished to make way for a new bypass. You are seriously injured in the process, but on your way to the hospital";
  TraceOperation 058570 (Call (Floc 058046) [] Sp);
  PushFrame 058570;
  JumpCall: 058046, #actuals: 0
LocReturn 058570:
  PushStack call_result;
  TraceOperation 058575 New_line;
  GamePrint "\n";
  TraceOperation 058576 (Test_attr (Con 168) (Con 29) (Branch T (Dloc 058609)));
  Let b1 = M[002266];
  if (TestBit(b1,2)) {
    Jump: 058609
  } else {
    TraceOperation 058580 (Print "Next time, try turning on the light.");
    GamePrint "Next time, try turning on the light.";
    TraceOperation 058605 New_line;
    GamePrint "\n";
    TraceOperation 058606 (Jump 058671);
    Jump: 058671
  }
LocOp 058609:
  TraceOperation 058609 (Test_attr (Con 158) (Con 23) (Branch T (Dloc 058653)));
  Let b1 = M[002175];
  if (TestBit(b1,0)) {
    Jump: 058653
  } else {
    TraceOperation 058613 (Jz (Var (Global 144)) (Branch T (Dloc 058653)));
    Let b2 = M[008196];
    Let b3 = M[008197];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 058653
    } else {
      TraceOperation 058616 (Print "Too bad you never found an aspirin for your hangover.");
      GamePrint "Too bad you never found an aspirin for your hangover.";
      TraceOperation 058649 New_line;
      GamePrint "\n";
      TraceOperation 058650 (Jump 058671);
      Jump: 058671
    }
  }
LocOp 058653:
  TraceOperation 058653 (Print "Better luck next life.");
  GamePrint "Better luck next life.";
  TraceOperation 058670 New_line;
  GamePrint "\n";
  Jump: 058671
LocOp 058671:
  TraceOperation 058671 (Call (Floc 028948) [] Sp);
  PushFrame 058671;
  JumpCall: 028948, #actuals: 0
LocReturn 058671:
  PushStack call_result;
  TraceOperation 058676 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[406]--------------------------------------------------
LocRoutine 058678:
  MakeRoutineFrame 0;
  Jump: 058679
LocOp 058679:
  TraceOperation 058679 (Je [Var (Global 203),Con 22] (Branch F (Dloc 058687)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 058683 (Je [Var (Global 202),Con 170] (Branch T Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),170)) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      Jump: 058687
    }
  } else {
    Jump: 058687
  }
LocOp 058687:
  TraceOperation 058687 (Jz (Var (Global 144)) (Branch F (Dloc 058725)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 058690 (Je [Var (Global 120),Con 195] (Branch T (Dloc 058725)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),195)) {
      Jump: 058725
    } else {
      TraceOperation 058694 (Print "You can't feel any");
      GamePrint "You can't feel any";
      TraceOperation 058703 (Je [Con 170,Var (Global 201)] (Branch F (Dloc 058715)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(170,MakeHiLo(b5,b6))) {
        TraceOperation 058707 (Call (Floc 028416) [] Sp);
        PushFrame 058707;
        JumpCall: 028416, #actuals: 0
      } else {
        Jump: 058715
      }
    }
  } else {
    Jump: 058725
  }
LocReturn 058707:
  PushStack call_result;
  TraceOperation 058712 (Jump 058720);
  Jump: 058720
LocOp 058715:
  TraceOperation 058715 (Call (Floc 028456) [] Sp);
  PushFrame 058715;
  JumpCall: 028456, #actuals: 0
LocReturn 058715:
  PushStack call_result;
  Jump: 058720
LocOp 058720:
  TraceOperation 058720 (Print_ret " here.");
  GamePrint " here.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 058725:
  TraceOperation 058725 (Je [Var (Global 203),Con 61] (Branch F (Dloc 058735)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 058729 (Call (Floc 028648) [] Sp);
    PushFrame 058729;
    JumpCall: 028648, #actuals: 0
  } else {
    Jump: 058735
  }
LocReturn 058729:
  PushStack call_result;
  TraceOperation 058734 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 058735:
  TraceOperation 058735 (Je [Var (Global 203),Con 53,Con 154,Con 66] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),53),Equal(MakeHiLo(b1,b2),154)),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 058742 (Call (Floc 031360) [] Sp);
    PushFrame 058742;
    JumpCall: 031360, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 058742:
  PushStack call_result;
  TraceOperation 058747 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[407]--------------------------------------------------
LocRoutine 058748:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 058751
LocOp 058751:
  TraceOperation 058751 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 058755 (Print "The bedroom is a mess.\nIt is a small bedroom with a faded carpet and old wallpaper. There is a washbasin, a chair");
    GamePrint "The bedroom is a mess.\nIt is a small bedroom with a faded carpet and old wallpaper. There is a washbasin, a chair";
    TraceOperation 058820 (Test_attr (Con 158) (Con 27) (Branch F (Dloc 058851)));
    Let b1 = M[002176];
    if (TestBit(b1,4)) {
      TraceOperation 058824 (Print " with a tatty dressing gown slung over it");
      GamePrint " with a tatty dressing gown slung over it";
      Jump: 058851
    } else {
      Jump: 058851
    }
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocOp 058851:
  TraceOperation 058851 (Print_ret ", and a window with the curtains drawn. Near the exit leading south is a phone.");
  GamePrint ", and a window with the curtains drawn. Near the exit leading south is a phone.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[408]--------------------------------------------------
LocRoutine 058900:
  MakeRoutineFrame 0;
  Jump: 058901
LocOp 058901:
  TraceOperation 058901 (Test_attr (Con 164) (Con 23) (Branch T (Dloc 058921)));
  Let b1 = M[002229];
  if (TestBit(b1,0)) {
    Jump: 058921
  } else {
    TraceOperation 058905 (Print "The door is closed.");
    GamePrint "The door is closed.";
    TraceOperation 058916 New_line;
    GamePrint "\n";
    TraceOperation 058917 (Store (Con 207) (Con 164));
    SetByte 008290 0;
    SetByte 008291 164;
    TraceOperation 058920 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocOp 058921:
  TraceOperation 058921 (Jz (Var (Global 144)) (Branch T (Dloc 058977)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 058977
  } else {
    TraceOperation 058924 (Print "You miss the doorway by a good eighteen inches. The wall jostles you rather rudely.");
    GamePrint "You miss the doorway by a good eighteen inches. The wall jostles you rather rudely.";
    TraceOperation 058975 New_line;
    GamePrint "\n";
    TraceOperation 058976 Rfalse;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 058977:
  TraceOperation 058977 (Test_attr (Con 166) (Con 6) (Branch F (Dloc 059007)));
  Let b1 = M[002245];
  if (TestBit(b1,1)) {
    TraceOperation 058981 (Print "You make your way down to the front porch.");
    GamePrint "You make your way down to the front porch.";
    TraceOperation 059002 New_line;
    GamePrint "\n";
    TraceOperation 059003 New_line;
    GamePrint "\n";
    TraceOperation 059004 (Jump 059028);
    Jump: 059028
  } else {
    Jump: 059007
  }
LocOp 059007:
  TraceOperation 059007 (Print "You rush down the stairs in panic.");
  GamePrint "You rush down the stairs in panic.";
  TraceOperation 059026 New_line;
  GamePrint "\n";
  TraceOperation 059027 New_line;
  GamePrint "\n";
  Jump: 059028
LocOp 059028:
  TraceOperation 059028 (Clear_attr (Con 45) (Con 19));
  Let b1 = M[001158];
  SetByte 001158 ClearBit(b1,4);
  TraceOperation 059031 (Ret (Con 151));
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 151
--[409]--------------------------------------------------
LocRoutine 059034:
  MakeRoutineFrame 0;
  Jump: 059035
LocOp 059035:
  TraceOperation 059035 (Je [Var (Global 203),Con 124] (Branch F (Dloc 059084)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 059039 (Test_attr (Con 162) (Con 5) (Branch F (Dloc 059051)));
    Let b3 = M[002209];
    if (TestBit(b3,2)) {
      TraceOperation 059043 (Call (Floc 022042) [Con 105,Con 54] Sp);
      PushFrame 059043;
      SetLocal 1 105;
      SetLocal 2 54;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 059051
    }
  } else {
    Jump: 059084
  }
LocReturn 059043:
  PushStack call_result;
  TraceOperation 059050 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 059051:
  TraceOperation 059051 (Set_attr (Con 162) (Con 5));
  Let b1 = M[002209];
  SetByte 002209 SetBit(b1,2);
  TraceOperation 059054 (Print "You pick up the receiver.");
  GamePrint "You pick up the receiver.";
  TraceOperation 059071 (Print_paddr (Var (Global 22)));
  Let b2 = M[007952];
  Let b3 = M[007953];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 059073 (Test_attr (Con 19) (Con 5) (Branch F (Dloc 059082)));
  Let b4 = M[000922];
  if (TestBit(b4,2)) {
    TraceOperation 059077 (Call (Floc 059962) [] Sp);
    PushFrame 059077;
    JumpCall: 059962, #actuals: 0
  } else {
    Jump: 059082
  }
LocReturn 059077:
  PushStack call_result;
  Jump: 059082
LocOp 059082:
  TraceOperation 059082 New_line;
  GamePrint "\n";
  TraceOperation 059083 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 059084:
  TraceOperation 059084 (Je [Var (Global 203),Con 18] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 059088 (Print_ret "It isn't ringing.");
    GamePrint "It isn't ringing.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[410]--------------------------------------------------
LocRoutine 059100:
  MakeRoutineFrame 0;
  Jump: 059101
LocOp 059101:
  TraceOperation 059101 (Je [Con 167,Var (Global 201)] (Branch F (Dloc 059114)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(167,MakeHiLo(b1,b2))) {
    TraceOperation 059105 (Call (Floc 022042) [Var (Global 203),Con 161,Var (Global 202)] Sp);
    Let b3 = M[008314];
    Let b4 = M[008315];
    Let b5 = M[008312];
    Let b6 = M[008313];
    PushFrame 059105;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 161;
    SetLocal 3 MakeHiLo(b5,b6);
    JumpCall: 022042, #actuals: 3
  } else {
    Jump: 059114
  }
LocReturn 059105:
  PushStack call_result;
  TraceOperation 059113 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 059114:
  TraceOperation 059114 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 161] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 059114;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 161;
  JumpCall: 022042, #actuals: 3
LocReturn 059114:
  PushStack call_result;
  TraceOperation 059122 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[411]--------------------------------------------------
LocRoutine 059124:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 059127
LocOp 059127:
  TraceOperation 059127 (Je [Var (Local 1),Con 1] (Branch F (Dloc 059245)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 059132 (Je [Var (Global 203),Con 124] (Branch F (Dloc 059192)));
    Let b1 = M[008314];
    Let b2 = M[008315];
    if (Equal(MakeHiLo(b1,b2),124)) {
      TraceOperation 059136 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 059192)));
      Let b3 = M[008310];
      Let b4 = M[008311];
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),3)];
      if (TestBit(b5,6)) {
        TraceOperation 059140 (Jin (Var (Global 201)) (Con 161) (Branch T (Dloc 059192)));
        Let b6 = M[008310];
        Let b7 = M[008311];
        Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),4)];
        if (Equal(161,Widen(b8))) {
          Jump: 059192
        } else {
          TraceOperation 059144 (Call (Floc 043468) [Var (Global 201)] Sp);
          Let b9 = M[008310];
          Let b10 = M[008311];
          PushFrame 059144;
          SetLocal 1 MakeHiLo(b9,b10);
          JumpCall: 043468, #actuals: 1
        }
      } else {
        Jump: 059192
      }
    } else {
      Jump: 059192
    }
  } else {
    Jump: 059245
  }
LocReturn 059144:
  PushStack call_result;
  TraceOperation 059150 (Jz (Var Sp) (Branch F (Dloc 059192)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 059153 (Print "You can't reach it from the bed.");
    GamePrint "You can't reach it from the bed.";
    TraceOperation 059168 (Jz (Var (Global 144)) (Branch T (Dloc 059190)));
    Let b2 = M[008196];
    Let b3 = M[008197];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 059190
    } else {
      TraceOperation 059171 (Print " The effort almost kills you.");
      GamePrint " The effort almost kills you.";
      Jump: 059190
    }
  } else {
    Jump: 059192
  }
LocOp 059190:
  TraceOperation 059190 New_line;
  GamePrint "\n";
  TraceOperation 059191 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 059192:
  TraceOperation 059192 (Je [Var (Global 203),Con 63,Con 103] (Branch F (Dloc 059213)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 059198 (Je [Var (Global 201),Con 159] (Branch F (Dloc 059213)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),159)) {
      TraceOperation 059202 (Call (Floc 022042) [Con 124,Con 162] Sp);
      PushFrame 059202;
      SetLocal 1 124;
      SetLocal 2 162;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 059213
    }
  } else {
    Jump: 059213
  }
LocReturn 059202:
  PushStack call_result;
  TraceOperation 059209 (Store (Con 207) (Con 159));
  SetByte 008290 0;
  SetByte 008291 159;
  TraceOperation 059212 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 059213:
  TraceOperation 059213 (Je [Var (Global 203),Con 39,Con 103] (Branch F (Dloc 059234)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 059219 (Je [Var (Global 201),Con 164] (Branch F (Dloc 059234)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),164)) {
      TraceOperation 059223 (Call (Floc 022042) [Con 124,Con 162] Sp);
      PushFrame 059223;
      SetLocal 1 124;
      SetLocal 2 162;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 059234
    }
  } else {
    Jump: 059234
  }
LocReturn 059223:
  PushStack call_result;
  TraceOperation 059230 (Store (Con 207) (Con 164));
  SetByte 008290 0;
  SetByte 008291 164;
  TraceOperation 059233 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 059234:
  TraceOperation 059234 (Je [Var (Global 203),Con 169] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    TraceOperation 059238 (Call (Floc 057682) [Con 161] Sp);
    PushFrame 059238;
    SetLocal 1 161;
    JumpCall: 057682, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 059238:
  PushStack call_result;
  TraceOperation 059244 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 059245:
  TraceOperation 059245 (Jz (Var (Local 1)) (Branch F Dfalse));
  if (IsZero(GetLocal(1))) {
    TraceOperation 059248 (Je [Var (Global 203),Con 48] (Branch F (Dloc 059328)));
    Let b1 = M[008314];
    Let b2 = M[008315];
    if (Equal(MakeHiLo(b1,b2),48)) {
      TraceOperation 059253 (Jz (Var (Global 144)) (Branch T (Dloc 059328)));
      Let b3 = M[008196];
      Let b4 = M[008197];
      if (IsZero(MakeHiLo(b3,b4))) {
        Jump: 059328
      } else {
        TraceOperation 059257 (Get_parent (Con 31) Sp);
        Let b5 = M[001034];
        PushStack Widen(b5);
        TraceOperation 059260 (Je [Var Sp,Con 161] (Branch F (Dloc 059328)));
        PopStack popped6;
        if (Equal(popped6,161)) {
          TraceOperation 059265 (Insert_obj (Con 31) (Var (Global 0)));
          Let b7 = M[007908];
          Let b8 = M[007909];
          Let b9 = M[001034];
          if (IsZero(Widen(b9))) {
            SetByte 001034 b8;
            Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
            SetByte 001035 LoByte(Widen(b10));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 31;
            TraceOperation 059268 (Store (Con 102) (Con 0));
            SetByte 008080 0;
            SetByte 008081 0;
            TraceOperation 059271 (Print_ret "Very difficult, but you manage it. The room is still spinning. It dips and sways a little.");
            GamePrint "Very difficult, but you manage it. The room is still spinning. It dips and sways a little.\n";
            PopFrame return_address_11;
            JumpReturn: return_address_11, result: 1
          } else {
            Let b12 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
            if (Equal(Widen(b12),31)) {
              Let b13 = M[001035];
              SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b13));
              SetByte 001034 b8;
              Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
              SetByte 001035 LoByte(Widen(b14));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 31;
              TraceOperation 059268 (Store (Con 102) (Con 0));
              SetByte 008080 0;
              SetByte 008081 0;
              TraceOperation 059271 (Print_ret "Very difficult, but you manage it. The room is still spinning. It dips and sways a little.");
              GamePrint "Very difficult, but you manage it. The room is still spinning. It dips and sways a little.\n";
              PopFrame return_address_15;
              JumpReturn: return_address_15, result: 1
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Jump: 059328
        }
      }
    } else {
      Jump: 059328
    }
  } else {
    PopFrame return_address_16;
    JumpReturn: return_address_16, result: 0
  }
LocOp 059328:
  TraceOperation 059328 (Je [Var (Global 203),Con 93] (Branch F (Dloc 059457)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 059333 (Insert_obj (Con 160) (Var (Global 0)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[002195];
    if (IsZero(Widen(b5))) {
      SetByte 002195 b4;
      Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte 002196 LoByte(Widen(b6));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 160;
      TraceOperation 059336 (Print_ret "There's nothing there. Well, there are a few soiled handkerchiefs, a book you thought you'd lost, a couple of foreign coins, and something else which can't be fully described in a family game, but nothing you'd actually want.");
      GamePrint "There's nothing there. Well, there are a few soiled handkerchiefs, a book you thought you'd lost, a couple of foreign coins, and something else which can't be fully described in a family game, but nothing you'd actually want.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Let b8 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b8),160)) {
        Let b9 = M[002196];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b9));
        SetByte 002195 b4;
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
        SetByte 002196 LoByte(Widen(b10));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 160;
        TraceOperation 059336 (Print_ret "There's nothing there. Well, there are a few soiled handkerchiefs, a book you thought you'd lost, a couple of foreign coins, and something else which can't be fully described in a family game, but nothing you'd actually want.");
        GamePrint "There's nothing there. Well, there are a few soiled handkerchiefs, a book you thought you'd lost, a couple of foreign coins, and something else which can't be fully described in a family game, but nothing you'd actually want.\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 059457
  }
LocOp 059457:
  TraceOperation 059457 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 059463 (Je [Var (Global 201),Con 161] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),161)) {
      TraceOperation 059467 (Call (Floc 057650) [] Sp);
      PushFrame 059467;
      JumpCall: 057650, #actuals: 0
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 059467:
  PushStack call_result;
  TraceOperation 059472 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[412]--------------------------------------------------
LocRoutine 059474:
  MakeRoutineFrame 0;
  Jump: 059475
LocOp 059475:
  TraceOperation 059475 (Je [Var (Global 203),Con 63,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 059481 (Clear_attr (Con 166) (Con 6));
    Let b3 = M[002245];
    SetByte 002245 ClearBit(b3,1);
    TraceOperation 059484 (Print "As you part ");
    GamePrint "As you part ";
    TraceOperation 059493 (Print_obj (Con 159));
    Let b4 = M[002189];
    Let b5 = M[002190];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 059495 (Print " you see that i");
      GamePrint " you see that i";
      TraceOperation 059502 (Print_paddr (Var (Global 6)));
      Let b7 = M[007920];
      Let b8 = M[007921];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
      TraceOperation 059504 (Print ", and a large yellow ");
      GamePrint ", and a large yellow ";
      TraceOperation 059515 (Print_obj (Con 166));
      Let b9 = M[002252];
      Let b10 = M[002253];
      Let b11 = M[Address(MakeHiLo(b9,b10))];
      if (IsZeroByte(b11)) {
        GamePrint "";
        TraceOperation 059517 (Print " is advancing on ");
        GamePrint " is advancing on ";
        TraceOperation 059528 (Print_obj (Con 173));
        Let b12 = M[002315];
        Let b13 = M[002316];
        Let b14 = M[Address(MakeHiLo(b12,b13))];
        if (IsZeroByte(b14)) {
          GamePrint "";
          TraceOperation 059530 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_15;
          JumpReturn: return_address_15, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b12,b13)),1));
          TraceOperation 059530 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_16;
          JumpReturn: return_address_16, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
        TraceOperation 059517 (Print " is advancing on ");
        GamePrint " is advancing on ";
        TraceOperation 059528 (Print_obj (Con 173));
        Let b17 = M[002315];
        Let b18 = M[002316];
        Let b19 = M[Address(MakeHiLo(b17,b18))];
        if (IsZeroByte(b19)) {
          GamePrint "";
          TraceOperation 059530 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_20;
          JumpReturn: return_address_20, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b17,b18)),1));
          TraceOperation 059530 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_21;
          JumpReturn: return_address_21, result: 1
        }
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 059495 (Print " you see that i");
      GamePrint " you see that i";
      TraceOperation 059502 (Print_paddr (Var (Global 6)));
      Let b22 = M[007920];
      Let b23 = M[007921];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b22,b23)));
      TraceOperation 059504 (Print ", and a large yellow ");
      GamePrint ", and a large yellow ";
      TraceOperation 059515 (Print_obj (Con 166));
      Let b24 = M[002252];
      Let b25 = M[002253];
      Let b26 = M[Address(MakeHiLo(b24,b25))];
      if (IsZeroByte(b26)) {
        GamePrint "";
        TraceOperation 059517 (Print " is advancing on ");
        GamePrint " is advancing on ";
        TraceOperation 059528 (Print_obj (Con 173));
        Let b27 = M[002315];
        Let b28 = M[002316];
        Let b29 = M[Address(MakeHiLo(b27,b28))];
        if (IsZeroByte(b29)) {
          GamePrint "";
          TraceOperation 059530 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_30;
          JumpReturn: return_address_30, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b27,b28)),1));
          TraceOperation 059530 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_31;
          JumpReturn: return_address_31, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b24,b25)),1));
        TraceOperation 059517 (Print " is advancing on ");
        GamePrint " is advancing on ";
        TraceOperation 059528 (Print_obj (Con 173));
        Let b32 = M[002315];
        Let b33 = M[002316];
        Let b34 = M[Address(MakeHiLo(b32,b33))];
        if (IsZeroByte(b34)) {
          GamePrint "";
          TraceOperation 059530 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_35;
          JumpReturn: return_address_35, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b32,b33)),1));
          TraceOperation 059530 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_36;
          JumpReturn: return_address_36, result: 1
        }
      }
    }
  } else {
    PopFrame return_address_37;
    JumpReturn: return_address_37, result: 0
  }
--[413]--------------------------------------------------
LocRoutine 059534:
  MakeRoutineFrame 0;
  Jump: 059535
LocOp 059535:
  TraceOperation 059535 (Je [Var (Global 203),Con 39,Con 103] (Branch F (Dloc 059584)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 059541 (Test_attr (Con 158) (Con 9) (Branch T (Dloc 059584)));
    Let b3 = M[002174];
    if (TestBit(b3,6)) {
      Jump: 059584
    } else {
      TraceOperation 059545 (Print_ret "It's hard to open or close the pocket unless you're wearing the gown.");
      GamePrint "It's hard to open or close the pocket unless you're wearing the gown.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    }
  } else {
    Jump: 059584
  }
LocOp 059584:
  TraceOperation 059584 (Je [Var (Global 203),Con 61] (Branch F (Dloc 059744)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 059589 (Print "The dressing gown is faded and battered, and is clearly a garment which has seen better decades. It has a pocket which is ");
    GamePrint "The dressing gown is faded and battered, and is clearly a garment which has seen better decades. It has a pocket which is ";
    TraceOperation 059658 (Test_attr (Con 158) (Con 23) (Branch F (Dloc 059670)));
    Let b3 = M[002175];
    if (TestBit(b3,0)) {
      TraceOperation 059662 (Print "open");
      GamePrint "open";
      TraceOperation 059667 (Jump 059673);
      Jump: 059673
    } else {
      Jump: 059670
    }
  } else {
    Jump: 059744
  }
LocOp 059670:
  TraceOperation 059670 (Print "closed");
  GamePrint "closed";
  Jump: 059673
LocOp 059673:
  TraceOperation 059673 (Jz (Var (Global 117)) (Branch T (Dloc 059697)));
  Let b1 = M[008142];
  Let b2 = M[008143];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 059697
  } else {
    TraceOperation 059676 (Print ". It is hanging from a ");
    GamePrint ". It is hanging from a ";
    TraceOperation 059689 (Print_obj (Con 114));
    Let b3 = M[001784];
    Let b4 = M[001785];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 059691 (Print ".");
      GamePrint ".";
      TraceOperation 059694 (Jump 059722);
      Jump: 059722
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 059691 (Print ".");
      GamePrint ".";
      TraceOperation 059694 (Jump 059722);
      Jump: 059722
    }
  }
LocOp 059697:
  TraceOperation 059697 (Print ", and a small loop at the back of the collar.");
  GamePrint ", and a small loop at the back of the collar.";
  Jump: 059722
LocOp 059722:
  TraceOperation 059722 (Jz (Var (Global 143)) (Branch T (Dloc 059742)));
  Let b1 = M[008194];
  Let b2 = M[008195];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 059742
  } else {
    TraceOperation 059725 (Print " The sleeves are tied closed.");
    GamePrint " The sleeves are tied closed.";
    Jump: 059742
  }
LocOp 059742:
  TraceOperation 059742 New_line;
  GamePrint "\n";
  TraceOperation 059743 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 059744:
  TraceOperation 059744 (Je [Var (Global 203),Con 124] (Branch F (Dloc 059810)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 059749 (Je [Con 158,Var (Global 201)] (Branch F (Dloc 059810)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(158,MakeHiLo(b3,b4))) {
      TraceOperation 059753 (Jz (Var (Global 144)) (Branch T (Dloc 059810)));
      Let b5 = M[008196];
      Let b6 = M[008197];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 059810
      } else {
        TraceOperation 059756 (Clear_attr (Con 158) (Con 21));
        Let b7 = M[002175];
        SetByte 002175 ClearBit(b7,2);
        TraceOperation 059759 (Clear_attr (Con 158) (Con 27));
        Let b8 = M[002176];
        SetByte 002176 ClearBit(b8,4);
        TraceOperation 059762 (Insert_obj (Con 158) (Con 31));
        Let b9 = M[002177];
        if (IsZero(Widen(b9))) {
          SetByte 002177 31;
          Let b10 = M[001036];
          SetByte 002178 LoByte(Widen(b10));
          SetByte 001036 158;
          TraceOperation 059765 (Print_ret "Luckily, this is large enough for you to get hold of. You notice something in the pocket.");
          GamePrint "Luckily, this is large enough for you to get hold of. You notice something in the pocket.\n";
          PopFrame return_address_11;
          JumpReturn: return_address_11, result: 1
        } else {
          Let b12 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
          if (Equal(Widen(b12),158)) {
            Let b13 = M[002178];
            SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b13));
            SetByte 002177 31;
            Let b14 = M[001036];
            SetByte 002178 LoByte(Widen(b14));
            SetByte 001036 158;
            TraceOperation 059765 (Print_ret "Luckily, this is large enough for you to get hold of. You notice something in the pocket.");
            GamePrint "Luckily, this is large enough for you to get hold of. You notice something in the pocket.\n";
            PopFrame return_address_15;
            JumpReturn: return_address_15, result: 1
          } else {
            Error: unlink/loop
          }
        }
      }
    } else {
      Jump: 059810
    }
  } else {
    Jump: 059810
  }
LocOp 059810:
  TraceOperation 059810 (Je [Var (Global 203),Con 116] (Branch F (Dloc 059842)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),116)) {
    TraceOperation 059814 (Jz (Var (Global 143)) (Branch T (Dloc 059842)));
    Let b3 = M[008194];
    Let b4 = M[008195];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 059842
    } else {
      TraceOperation 059817 (Print_ret "You'll have to untie the sleeve first.");
      GamePrint "You'll have to untie the sleeve first.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 059842
  }
LocOp 059842:
  TraceOperation 059842 (Je [Var (Global 203),Con 164,Con 157] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),164),Equal(MakeHiLo(b1,b2),157))) {
    TraceOperation 059848 (Call (Floc 022042) [Var (Global 203),Con 157] Sp);
    Let b3 = M[008314];
    Let b4 = M[008315];
    PushFrame 059848;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 157;
    JumpCall: 022042, #actuals: 2
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 059848:
  PushStack call_result;
  TraceOperation 059855 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[414]--------------------------------------------------
LocRoutine 059856:
  MakeRoutineFrame 0;
  Jump: 059857
LocOp 059857:
  TraceOperation 059857 (Call (Floc 043370) [Con 158] Sp);
  PushFrame 059857;
  SetLocal 1 158;
  JumpCall: 043370, #actuals: 1
LocReturn 059857:
  PushStack call_result;
  TraceOperation 059863 (Jz (Var Sp) (Branch F (Dloc 059873)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 059866 (Call (Floc 057596) [Con 157] Sp);
    PushFrame 059866;
    SetLocal 1 157;
    JumpCall: 057596, #actuals: 1
  } else {
    Jump: 059873
  }
LocReturn 059866:
  PushStack call_result;
  TraceOperation 059872 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 059873:
  TraceOperation 059873 (Je [Var (Global 203),Con 124,Con 116] (Branch F (Dloc 059887)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),124),Equal(MakeHiLo(b1,b2),116))) {
    TraceOperation 059879 (Call (Floc 022042) [Var (Global 203),Con 158] Sp);
    Let b3 = M[008314];
    Let b4 = M[008315];
    PushFrame 059879;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 158;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 059887
  }
LocReturn 059879:
  PushStack call_result;
  TraceOperation 059886 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 059887:
  TraceOperation 059887 (Je [Var (Global 203),Con 39,Con 157] (Branch F (Dloc 059934)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),157))) {
    TraceOperation 059893 (Store (Con 217) (Con 158));
    SetByte 008310 0;
    SetByte 008311 158;
    TraceOperation 059896 (Call (Floc 041208) [] Sp);
    PushFrame 059896;
    JumpCall: 041208, #actuals: 0
  } else {
    Jump: 059934
  }
LocReturn 059896:
  PushStack call_result;
  TraceOperation 059901 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 059904 (Jz (Var (Global 143)) (Branch T (Dloc 059912)));
    Let b2 = M[008194];
    Let b3 = M[008195];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 059912
    } else {
      TraceOperation 059907 (Print_ret "It is.");
      GamePrint "It is.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 059912:
  TraceOperation 059912 (Store (Con 159) (Con 1));
  SetByte 008194 0;
  SetByte 008195 1;
  TraceOperation 059915 (Print_ret "The sleeves are now tied closed.");
  GamePrint "The sleeves are now tied closed.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 059934:
  TraceOperation 059934 (Je [Var (Global 203),Con 103,Con 164] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),103),Equal(MakeHiLo(b1,b2),164))) {
    TraceOperation 059940 (Jz (Var (Global 143)) (Branch T (Dloc 059953)));
    Let b3 = M[008194];
    Let b4 = M[008195];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 059953
    } else {
      TraceOperation 059943 (Store (Con 159) (Con 0));
      SetByte 008194 0;
      SetByte 008195 0;
      TraceOperation 059946 (Print_ret "Untied.");
      GamePrint "Untied.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 059953:
  TraceOperation 059953 (Print_ret "It isn't tied!");
  GamePrint "It isn't tied!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[415]--------------------------------------------------
LocRoutine 059962:
  MakeRoutineFrame 0;
  Jump: 059963
LocOp 059963:
  TraceOperation 059963 (Store (Con 229) (Con 9));
  SetByte 008334 0;
  SetByte 008335 9;
  TraceOperation 059966 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame 059966;
  SetLocal 1 -14349;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 059966:
  PushStack call_result;
  TraceOperation 059974 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 059979 (Print " Shouldn't you be taking more interest in events in the world around you? While you've got it...?");
  GamePrint " Shouldn't you be taking more interest in events in the world around you? While you've got it...?";
  TraceOperation 060038 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[416]--------------------------------------------------
LocRoutine 060040:
  MakeRoutineFrame 0;
  Jump: 060041
LocOp 060041:
  TraceOperation 060041 (Je [Var (Global 203),Con 61] (Branch F (Dloc 060181)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 060046 (Print "Apart from a label on the bottom saying \"Made in Ibiza\" it furnishes you with no clue as to its purpose, if indeed it has one. You are surprised to see it because you thought you'd thrown it away. Like most gifts from your aunt,");
    GamePrint "Apart from a label on the bottom saying \"Made in Ibiza\" it furnishes you with no clue as to its purpose, if indeed it has one. You are surprised to see it because you thought you'd thrown it away. Like most gifts from your aunt,";
    TraceOperation 060177 (Print_paddr (Var (Global 5)));
    Let b3 = M[007918];
    Let b4 = M[007919];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 060179 New_line;
    GamePrint "\n";
    TraceOperation 060180 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 060181
  }
LocOp 060181:
  TraceOperation 060181 (Je [Var (Global 203),Con 53] (Branch F (Dloc 060237)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 060185 (Je [Var (Global 0),Con 81,Con 175] (Branch T (Dloc 060237)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (LogOr(Equal(MakeHiLo(b3,b4),81),Equal(MakeHiLo(b3,b4),175))) {
      Jump: 060237
    } else {
      TraceOperation 060191 (Insert_obj (Con 156) (Var (Global 0)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[002159];
      if (IsZero(Widen(b7))) {
        SetByte 002159 b6;
        Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
        SetByte 002160 LoByte(Widen(b8));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 156;
        TraceOperation 060194 (Print_ret "It falls to the ground with a light \"thunk.\" It doesn't do anything else at all.");
        GamePrint "It falls to the ground with a light \"thunk.\" It doesn't do anything else at all.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      } else {
        Let b10 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
        if (Equal(Widen(b10),156)) {
          Let b11 = M[002160];
          SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b11));
          SetByte 002159 b6;
          Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
          SetByte 002160 LoByte(Widen(b12));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 156;
          TraceOperation 060194 (Print_ret "It falls to the ground with a light \"thunk.\" It doesn't do anything else at all.");
          GamePrint "It falls to the ground with a light \"thunk.\" It doesn't do anything else at all.\n";
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 1
        } else {
          Error: unlink/loop
        }
      }
    }
  } else {
    Jump: 060237
  }
LocOp 060237:
  TraceOperation 060237 (Je [Var (Global 203),Con 39] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),39)) {
    TraceOperation 060241 (Print_ret "Come to think of it, you vaguely remember an instruction booklet with directions for that. You never read it and lost it months ago.");
    GamePrint "Come to think of it, you vaguely remember an instruction booklet with directions for that. You never read it and lost it months ago.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[417]--------------------------------------------------
LocRoutine 060318:
  MakeRoutineFrame 0;
  Jump: 060319
LocOp 060319:
  TraceOperation 060319 (Random (Con 4) Sp);
  LetRandom random1 4;
  PushStack random1;
  TraceOperation 060323 (Add (Con 4) (Var Sp) Sp);
  PopStack popped2;
  PushStack Add(4,popped2);
  TraceOperation 060327 (Call (Floc 022320) [Con 30159,Var Sp] Sp);
  PopStack popped3;
  PushFrame 060327;
  SetLocal 1 30159;
  SetLocal 2 popped3;
  JumpCall: 022320, #actuals: 2
LocReturn 060327:
  PushStack call_result;
  TraceOperation 060335 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 060340 (Je [Var (Global 120),Con 123] (Branch F Dfalse));
  Let b2 = M[008148];
  Let b3 = M[008149];
  if (Equal(MakeHiLo(b2,b3),123)) {
    TraceOperation 060344 (Je [Var (Global 0),Con 188] (Branch F (Dloc 060352)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    if (Equal(MakeHiLo(b4,b5),188)) {
      TraceOperation 060348 (Jl (Var (Global 211)) (Con 3) (Branch T Dfalse));
      Let b6 = M[008330];
      Let b7 = M[008331];
      if (LessThan(MakeHiLo(b6,b7),3)) {
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      } else {
        Jump: 060352
      }
    } else {
      Jump: 060352
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
LocOp 060352:
  TraceOperation 060352 (Je [Var (Global 0),Con 25,Con 175,Con 81] (Branch T Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),25),Equal(MakeHiLo(b1,b2),175)),Equal(MakeHiLo(b1,b2),81))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 060359 (Call (Floc 043370) [Con 156] Sp);
    PushFrame 060359;
    SetLocal 1 156;
    JumpCall: 043370, #actuals: 1
  }
LocReturn 060359:
  PushStack call_result;
  TraceOperation 060365 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060368 (Call (Floc 043468) [Con 156,Con 31] Sp);
    PushFrame 060368;
    SetLocal 1 156;
    SetLocal 2 31;
    JumpCall: 043468, #actuals: 2
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocReturn 060368:
  PushStack call_result;
  TraceOperation 060375 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060378 (Jin (Con 124) (Var (Global 0)) (Branch T Dfalse));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[001871];
    if (Equal(MakeHiLo(b2,b3),Widen(b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 060382 (Random (Con 100) Sp);
      LetRandom random6 100;
      PushStack random6;
      TraceOperation 060386 (Jl (Con 40) (Var Sp) (Branch T (Dloc 060394)));
      PopStack popped7;
      if (LessThan(40,popped7)) {
        Jump: 060394
      } else {
        TraceOperation 060390 (Insert_obj (Con 156) (Var (Global 0)));
        Let b8 = M[007908];
        Let b9 = M[007909];
        Let b10 = M[002159];
        if (IsZero(Widen(b10))) {
          SetByte 002159 b9;
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6)];
          SetByte 002160 LoByte(Widen(b11));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6) 156;
          TraceOperation 060393 Rfalse;
          PopFrame return_address_12;
          JumpReturn: return_address_12, result: 0
        } else {
          Let b13 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
          if (Equal(Widen(b13),156)) {
            Let b14 = M[002160];
            SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b14));
            SetByte 002159 b9;
            Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6)];
            SetByte 002160 LoByte(Widen(b15));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6) 156;
            TraceOperation 060393 Rfalse;
            PopFrame return_address_16;
            JumpReturn: return_address_16, result: 0
          } else {
            Error: unlink/loop
          }
        }
      }
    }
  } else {
    PopFrame return_address_17;
    JumpReturn: return_address_17, result: 0
  }
LocOp 060394:
  TraceOperation 060394 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 060414)));
  Let b1 = M[002174];
  if (TestBit(b1,6)) {
    TraceOperation 060398 (Test_attr (Con 158) (Con 23) (Branch F (Dloc 060414)));
    Let b2 = M[002175];
    if (TestBit(b2,0)) {
      TraceOperation 060402 (Random (Con 100) Sp);
      LetRandom random3 100;
      PushStack random3;
      TraceOperation 060406 (Jl (Con 65) (Var Sp) (Branch T (Dloc 060414)));
      PopStack popped4;
      if (LessThan(65,popped4)) {
        Jump: 060414
      } else {
        TraceOperation 060410 (Insert_obj (Con 156) (Con 158));
        Let b5 = M[002159];
        if (IsZero(Widen(b5))) {
          SetByte 002159 158;
          Let b6 = M[002179];
          SetByte 002160 LoByte(Widen(b6));
          SetByte 002179 156;
          TraceOperation 060413 Rfalse;
          PopFrame return_address_7;
          JumpReturn: return_address_7, result: 0
        } else {
          Let b8 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
          if (Equal(Widen(b8),156)) {
            Let b9 = M[002160];
            SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b9));
            SetByte 002159 158;
            Let b10 = M[002179];
            SetByte 002160 LoByte(Widen(b10));
            SetByte 002179 156;
            TraceOperation 060413 Rfalse;
            PopFrame return_address_11;
            JumpReturn: return_address_11, result: 0
          } else {
            Error: unlink/loop
          }
        }
      }
    } else {
      Jump: 060414
    }
  } else {
    Jump: 060414
  }
LocOp 060414:
  TraceOperation 060414 (Insert_obj (Con 156) (Con 31));
  Let b1 = M[002159];
  if (IsZero(Widen(b1))) {
    SetByte 002159 31;
    Let b2 = M[001036];
    SetByte 002160 LoByte(Widen(b2));
    SetByte 001036 156;
    TraceOperation 060417 Rfalse;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b4),156)) {
      Let b5 = M[002160];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b5));
      SetByte 002159 31;
      Let b6 = M[001036];
      SetByte 002160 LoByte(Widen(b6));
      SetByte 001036 156;
      TraceOperation 060417 Rfalse;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    } else {
      Error: unlink/loop
    }
  }
--[418]--------------------------------------------------
LocRoutine 060418:
  MakeRoutineFrame 0;
  Jump: 060419
LocOp 060419:
  TraceOperation 060419 (Je [Var (Global 203),Con 51,Con 124,Con 56] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),51),Equal(MakeHiLo(b1,b2),124)),Equal(MakeHiLo(b1,b2),56))) {
    TraceOperation 060426 (Insert_obj (Con 154) (Con 219));
    Let b3 = M[002141];
    if (IsZero(Widen(b3))) {
      SetByte 002141 219;
      Let b4 = M[002728];
      SetByte 002142 LoByte(Widen(b4));
      SetByte 002728 154;
      TraceOperation 060429 (Clear_attr (Con 18) (Con 21));
      Let b5 = M[000915];
      SetByte 000915 ClearBit(b5,2);
      TraceOperation 060432 (Clear_attr (Con 19) (Con 21));
      Let b6 = M[000924];
      SetByte 000924 ClearBit(b6,2);
      TraceOperation 060435 (Store (Con 160) (Con 0));
      SetByte 008196 0;
      SetByte 008197 0;
      TraceOperation 060438 (Add (Var (Global 1)) (Con 10) (Global 1));
      Let b7 = M[007910];
      Let b8 = M[007911];
      SetByte 007910 HiByte(Add(MakeHiLo(b7,b8),10));
      SetByte 007911 LoByte(Add(MakeHiLo(b7,b8),10));
      TraceOperation 060442 (Print_ret "You swallow the tablet. After a few seconds the room begins to calm down and behave in an orderly manner. Your terrible headache goes.");
      GamePrint "You swallow the tablet. After a few seconds the room begins to calm down and behave in an orderly manner. Your terrible headache goes.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Let b10 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b10),154)) {
        Let b11 = M[002142];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b11));
        SetByte 002141 219;
        Let b12 = M[002728];
        SetByte 002142 LoByte(Widen(b12));
        SetByte 002728 154;
        TraceOperation 060429 (Clear_attr (Con 18) (Con 21));
        Let b13 = M[000915];
        SetByte 000915 ClearBit(b13,2);
        TraceOperation 060432 (Clear_attr (Con 19) (Con 21));
        Let b14 = M[000924];
        SetByte 000924 ClearBit(b14,2);
        TraceOperation 060435 (Store (Con 160) (Con 0));
        SetByte 008196 0;
        SetByte 008197 0;
        TraceOperation 060438 (Add (Var (Global 1)) (Con 10) (Global 1));
        Let b15 = M[007910];
        Let b16 = M[007911];
        SetByte 007910 HiByte(Add(MakeHiLo(b15,b16),10));
        SetByte 007911 LoByte(Add(MakeHiLo(b15,b16),10));
        TraceOperation 060442 (Print_ret "You swallow the tablet. After a few seconds the room begins to calm down and behave in an orderly manner. Your terrible headache goes.");
        GamePrint "You swallow the tablet. After a few seconds the room begins to calm down and behave in an orderly manner. Your terrible headache goes.\n";
        PopFrame return_address_17;
        JumpReturn: return_address_17, result: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    PopFrame return_address_18;
    JumpReturn: return_address_18, result: 0
  }
--[419]--------------------------------------------------
LocRoutine 060526:
  MakeRoutineFrame 0;
  Jump: 060527
LocOp 060527:
  TraceOperation 060527 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 060533)));
  Let b1 = M[002174];
  if (TestBit(b1,6)) {
    TraceOperation 060531 (Ret (Con 149));
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 149
  } else {
    Jump: 060533
  }
LocOp 060533:
  TraceOperation 060533 (Store (Con 229) (Con 10));
  SetByte 008334 0;
  SetByte 008335 10;
  TraceOperation 060536 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame 060536;
  SetLocal 1 -14349;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 060536:
  PushStack call_result;
  TraceOperation 060544 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 060549 (Print_paddr (Var (Global 19)));
  Let b2 = M[007946];
  Let b3 = M[007947];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 060551 New_line;
  GamePrint "\n";
  TraceOperation 060552 Rfalse;
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: 0
--[420]--------------------------------------------------
LocRoutine 060554:
  MakeRoutineFrame 0;
  Jump: 060555
LocOp 060555:
  TraceOperation 060555 (Je [Var (Global 203),Con 124] (Branch F (Dloc 060591)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 060559 (Test_attr (Con 150) (Con 5) (Branch T (Dloc 060591)));
    Let b3 = M[002101];
    if (TestBit(b3,2)) {
      Jump: 060591
    } else {
      TraceOperation 060563 (Set_attr (Con 150) (Con 5));
      Let b4 = M[002101];
      SetByte 002101 SetBit(b4,2);
      TraceOperation 060566 (Clear_attr (Con 150) (Con 21));
      Let b5 = M[002103];
      SetByte 002103 ClearBit(b5,2);
      TraceOperation 060569 (Insert_obj (Con 150) (Con 31));
      Let b6 = M[002105];
      if (IsZero(Widen(b6))) {
        SetByte 002105 31;
        Let b7 = M[001036];
        SetByte 002106 LoByte(Widen(b7));
        SetByte 001036 150;
        TraceOperation 060572 (Print_ret "You gather up the pile of mail.");
        GamePrint "You gather up the pile of mail.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        Let b9 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
        if (Equal(Widen(b9),150)) {
          Let b10 = M[002106];
          SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b10));
          SetByte 002105 31;
          Let b11 = M[001036];
          SetByte 002106 LoByte(Widen(b11));
          SetByte 001036 150;
          TraceOperation 060572 (Print_ret "You gather up the pile of mail.");
          GamePrint "You gather up the pile of mail.\n";
          PopFrame return_address_12;
          JumpReturn: return_address_12, result: 1
        } else {
          Error: unlink/loop
        }
      }
    }
  } else {
    Jump: 060591
  }
LocOp 060591:
  TraceOperation 060591 (Je [Var (Global 203),Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 060595 (Call (Floc 022042) [Con 120,Con 150] Sp);
    PushFrame 060595;
    SetLocal 1 120;
    SetLocal 2 150;
    JumpCall: 022042, #actuals: 2
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 060595:
  PushStack call_result;
  TraceOperation 060602 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[421]--------------------------------------------------
LocRoutine 060604:
  MakeRoutineFrame 0;
  Jump: 060605
LocOp 060605:
  TraceOperation 060605 (Jz (Var (Global 145)) (Branch T (Dloc 060624)));
  Let b1 = M[008198];
  Let b2 = M[008199];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 060624
  } else {
    TraceOperation 060608 (Print "You can't enter a ");
    GamePrint "You can't enter a ";
    TraceOperation 060617 (Print_obj (Con 171));
    Let b3 = M[002297];
    Let b4 = M[002298];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 060619 (Print ".");
      GamePrint ".";
      TraceOperation 060622 New_line;
      GamePrint "\n";
      TraceOperation 060623 Rfalse;
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 060619 (Print ".");
      GamePrint ".";
      TraceOperation 060622 New_line;
      GamePrint "\n";
      TraceOperation 060623 Rfalse;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  }
LocOp 060624:
  TraceOperation 060624 (Je [Var (Global 120),Con 142] (Branch F (Dloc 060653)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 060628 (Je [Var (Global 203),Con 38] (Branch T (Dloc 060645)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),38)) {
      Jump: 060645
    } else {
      TraceOperation 060632 (Print "Enter the house? ");
      GamePrint "Enter the house? ";
      Jump: 060645
    }
  } else {
    Jump: 060653
  }
LocOp 060645:
  TraceOperation 060645 (Call (Floc 057712) [Con -11268] Sp);
  PushFrame 060645;
  SetLocal 1 -11268;
  JumpCall: 057712, #actuals: 1
LocReturn 060645:
  PushStack call_result;
  TraceOperation 060652 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 060653:
  TraceOperation 060653 (Jz (Var (Global 139)) (Branch F (Dloc 060669)));
  Let b1 = M[008186];
  Let b2 = M[008187];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 060656 (Print "The ");
    GamePrint "The ";
    TraceOperation 060659 (Print_obj (Con 166));
    Let b3 = M[002252];
    Let b4 = M[002253];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 060661 (Call (Floc 042734) [Con -11267] Sp);
      PushFrame 060661;
      SetLocal 1 -11267;
      JumpCall: 042734, #actuals: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 060661 (Call (Floc 042734) [Con -11267] Sp);
      PushFrame 060661;
      SetLocal 1 -11267;
      JumpCall: 042734, #actuals: 1
    }
  } else {
    Jump: 060669
  }
LocReturn 060661:
  PushStack call_result;
  TraceOperation 060668 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
LocOp 060669:
  TraceOperation 060669 (Call (Floc 022320) [Con 29202,Con 5] Sp);
  PushFrame 060669;
  SetLocal 1 29202;
  SetLocal 2 5;
  JumpCall: 022320, #actuals: 2
LocReturn 060669:
  PushStack call_result;
  TraceOperation 060677 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 060682 (Ret (Con 151));
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 151
--[422]--------------------------------------------------
LocRoutine 060684:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 060687
LocOp 060687:
  TraceOperation 060687 (Je [Var (Local 1),Con 2] (Branch F (Dloc 060875)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 060692 (Clear_attr (Con 166) (Con 6));
    Let b1 = M[002245];
    SetByte 002245 ClearBit(b1,1);
    TraceOperation 060695 (Jin (Con 135) (Con 137) (Branch F (Dloc 060853)));
    Let b2 = M[001970];
    if (Equal(137,Widen(b2))) {
      TraceOperation 060700 (Jz (Var (Global 128)) (Branch F (Dloc 060708)));
      Let b3 = M[008164];
      Let b4 = M[008165];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 060703 (Call (Floc 069352) [] Sp);
        PushFrame 060703;
        JumpCall: 069352, #actuals: 0
      } else {
        Jump: 060708
      }
    } else {
      Jump: 060853
    }
  } else {
    Jump: 060875
  }
LocReturn 060703:
  PushStack call_result;
  Jump: 060708
LocOp 060708:
  TraceOperation 060708 (Call (Floc 022320) [Con -28826,Con 3] Sp);
  PushFrame 060708;
  SetLocal 1 -28826;
  SetLocal 2 3;
  JumpCall: 022320, #actuals: 2
LocReturn 060708:
  PushStack call_result;
  TraceOperation 060716 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 060721 (Print "You reach the site of what was ");
  GamePrint "You reach the site of what was ";
  TraceOperation 060738 (Je [Var (Global 120),Con 142] (Branch F (Dloc 060750)));
  Let b2 = M[008148];
  Let b3 = M[008149];
  if (Equal(MakeHiLo(b2,b3),142)) {
    TraceOperation 060742 (Print "Arthur's");
    GamePrint "Arthur's";
    TraceOperation 060747 (Jump 060753);
    Jump: 060753
  } else {
    Jump: 060750
  }
LocOp 060750:
  TraceOperation 060750 (Print "your");
  GamePrint "your";
  Jump: 060753
LocOp 060753:
  TraceOperation 060753 (Print " home. It is now a ");
  GamePrint " home. It is now a ";
  TraceOperation 060766 (Print_obj (Con 171));
  Let b1 = M[002297];
  Let b2 = M[002298];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 060768 (Print ". ");
    GamePrint ". ";
    TraceOperation 060771 (Print_obj (Con 145));
    Let b4 = M[002063];
    Let b5 = M[002064];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 060773 (Print " looks sheepishly triumphant, a trick few people can do, as it requires a lot of technically complex deltoid muscle work.");
      GamePrint " looks sheepishly triumphant, a trick few people can do, as it requires a lot of technically complex deltoid muscle work.";
      TraceOperation 060850 New_line;
      GamePrint "\n";
      TraceOperation 060851 New_line;
      GamePrint "\n";
      TraceOperation 060852 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 060773 (Print " looks sheepishly triumphant, a trick few people can do, as it requires a lot of technically complex deltoid muscle work.");
      GamePrint " looks sheepishly triumphant, a trick few people can do, as it requires a lot of technically complex deltoid muscle work.";
      TraceOperation 060850 New_line;
      GamePrint "\n";
      TraceOperation 060851 New_line;
      GamePrint "\n";
      TraceOperation 060852 Rtrue;
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 060768 (Print ". ");
    GamePrint ". ";
    TraceOperation 060771 (Print_obj (Con 145));
    Let b9 = M[002063];
    Let b10 = M[002064];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    if (IsZeroByte(b11)) {
      GamePrint "";
      TraceOperation 060773 (Print " looks sheepishly triumphant, a trick few people can do, as it requires a lot of technically complex deltoid muscle work.");
      GamePrint " looks sheepishly triumphant, a trick few people can do, as it requires a lot of technically complex deltoid muscle work.";
      TraceOperation 060850 New_line;
      GamePrint "\n";
      TraceOperation 060851 New_line;
      GamePrint "\n";
      TraceOperation 060852 Rtrue;
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
      TraceOperation 060773 (Print " looks sheepishly triumphant, a trick few people can do, as it requires a lot of technically complex deltoid muscle work.");
      GamePrint " looks sheepishly triumphant, a trick few people can do, as it requires a lot of technically complex deltoid muscle work.";
      TraceOperation 060850 New_line;
      GamePrint "\n";
      TraceOperation 060851 New_line;
      GamePrint "\n";
      TraceOperation 060852 Rtrue;
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    }
  }
--[423]--------------------------------------------------
LocRoutine 060868:
  MakeRoutineFrame 0;
  Jump: 060869
LocOp 060869:
  TraceOperation 060869 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 060874 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
--[424]--------------------------------------------------
LocRoutine 061024:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 234;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 29009;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 10036;
      }
    }
  }
  Jump: 061031
LocOp 061031:
  TraceOperation 061031 (Insert_obj (Con 151) (Var (Global 24)));
  Let b1 = M[007956];
  Let b2 = M[007957];
  Let b3 = M[002114];
  if (IsZero(Widen(b3))) {
    SetByte 002114 b2;
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 002115 LoByte(Widen(b4));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 151;
    TraceOperation 061034 (Je [Con 14,Con 42] (Branch F (Dloc 068055)));
    Jump: 068055
  } else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b5),151)) {
      Let b6 = M[002115];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
      SetByte 002114 b2;
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 002115 LoByte(Widen(b7));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 151;
      TraceOperation 061034 (Je [Con 14,Con 42] (Branch F (Dloc 068055)));
      Jump: 068055
    } else {
      Error: unlink/loop
    }
  }
--[425]--------------------------------------------------
LocRoutine 061086:
  MakeRoutineFrame 0;
  Jump: 061087
LocOp 061087:
  TraceOperation 061087 (Test (Con 54) (Var (Global 130)) (Branch T (Dloc 055111)));
  Let b1 = M[008168];
  Let b2 = M[008169];
  if (Equal(And(54,MakeHiLo(b1,b2)),MakeHiLo(b1,b2))) {
    Jump: 055111
  } else {
    TraceOperation 061092 (Print " to the north. A path leads around it to the northeast and northwest, and a country lane is visible to the south.");
    GamePrint " to the north. A path leads around it to the northeast and northwest, and a country lane is visible to the south.";
    TraceOperation 061157 (Test_attr (Con 149) (Con 27) (Branch T (Dloc 061223)));
    Let b3 = M[002095];
    if (TestBit(b3,4)) {
      Jump: 061223
    } else {
      TraceOperation 061162 (Je [Var (Global 120),Con 123] (Branch F (Dloc 061223)));
      Let b4 = M[008148];
      Let b5 = M[008149];
      if (Equal(MakeHiLo(b4,b5),123)) {
        TraceOperation 061166 (Set_attr (Con 149) (Con 27));
        Let b6 = M[002095];
        SetByte 002095 SetBit(b6,4);
        TraceOperation 061169 (Print " All that lies between your home and the huge yellow ");
        GamePrint " All that lies between your home and the huge yellow ";
        TraceOperation 061196 (Print_obj (Con 166));
        Let b7 = M[002252];
        Let b8 = M[002253];
        Let b9 = M[Address(MakeHiLo(b7,b8))];
        if (IsZeroByte(b9)) {
          GamePrint "";
          TraceOperation 061198 (Print " bearing down on it is a few yards of mud.");
          GamePrint " bearing down on it is a few yards of mud.";
          Jump: 061223
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
          TraceOperation 061198 (Print " bearing down on it is a few yards of mud.");
          GamePrint " bearing down on it is a few yards of mud.";
          Jump: 061223
        }
      } else {
        Jump: 061223
      }
    }
  }
LocOp 061223:
  TraceOperation 061223 New_line;
  GamePrint "\n";
  TraceOperation 061224 New_line;
  GamePrint "\n";
  TraceOperation 061225 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[426]--------------------------------------------------
LocRoutine 061242:
  MakeRoutineFrame 0;
  Jump: 061243
LocOp 061243:
  TraceOperation 061243 (Jz (Var (Global 86)) (Branch F (Dloc 061249)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 061246 (Jz (Var (Global 145)) (Branch T (Dloc 061262)));
    Let b3 = M[008198];
    Let b4 = M[008199];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 061262
    } else {
      Jump: 061249
    }
  } else {
    Jump: 061249
  }
LocOp 061249:
  TraceOperation 061249 (Call (Floc 022340) [Con 30621] Sp);
  PushFrame 061249;
  SetLocal 1 30621;
  JumpCall: 022340, #actuals: 1
LocReturn 061249:
  PushStack call_result;
  TraceOperation 061256 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 061261 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 061262:
  TraceOperation 061262 (Set_attr (Con 145) (Con 5));
  Let b1 = M[002056];
  SetByte 002056 SetBit(b1,2);
  TraceOperation 061265 (Inc (Con 158));
  Let b2 = M[008192];
  Let b3 = M[008193];
  SetByte 008192 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008193 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 061267 (Jg (Var (Global 142)) (Con 4) (Branch F (Dloc 061292)));
  Let b4 = M[008192];
  Let b5 = M[008193];
  if (GreaterThan(MakeHiLo(b4,b5),4)) {
    TraceOperation 061271 (Call (Floc 022340) [Con 30621] Sp);
    PushFrame 061271;
    SetLocal 1 30621;
    JumpCall: 022340, #actuals: 1
  } else {
    Jump: 061292
  }
LocReturn 061271:
  PushStack call_result;
  TraceOperation 061278 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 061283 (Print_paddr (Var (Global 47)));
  Let b2 = M[008002];
  Let b3 = M[008003];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 061285 New_line;
  GamePrint "\n";
  TraceOperation 061286 (Call (Floc 061320) [] Sp);
  PushFrame 061286;
  JumpCall: 061320, #actuals: 0
LocReturn 061286:
  PushStack call_result;
  TraceOperation 061291 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 061292:
  TraceOperation 061292 (Je [Var (Global 0),Con 149] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),149)) {
    TraceOperation 061296 (Print "The ");
    GamePrint "The ";
    TraceOperation 061299 (Print_obj (Con 166));
    Let b3 = M[002252];
    Let b4 = M[002253];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 061301 (Print_ret " rumbles slowly toward your home.");
      GamePrint " rumbles slowly toward your home.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 061301 (Print_ret " rumbles slowly toward your home.");
      GamePrint " rumbles slowly toward your home.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
--[427]--------------------------------------------------
LocRoutine 061320:
  MakeRoutineFrame 0;
  Jump: 061321
LocOp 061321:
  TraceOperation 061321 New_line;
  GamePrint "\n";
  TraceOperation 061322 (Print "Your home collapses in a cloud of dust, and a stray flying brick hits you squarely on the back of the head. You try to think of some suitable last words, but what with the confusion of the moment and the spinning of your head, you are unable to compose anything pithy and expire in silence.");
  GamePrint "Your home collapses in a cloud of dust, and a stray flying brick hits you squarely on the back of the head. You try to think of some suitable last words, but what with the confusion of the moment and the spinning of your head, you are unable to compose anything pithy and expire in silence.";
  Jump: 061479
LocOp 061479:
  TraceOperation 061479 New_line;
  GamePrint "\n";
  TraceOperation 061480 New_line;
  GamePrint "\n";
  TraceOperation 061481 (Print ">");
  GamePrint ">";
  TraceOperation 061486 (Sread (Var (Global 193)) (Var (Global 194)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    Let b6 = M[007910];
    Let b7 = M[007911];
    Let b8 = M[007912];
    Let b9 = M[007913];
    ReadInputFromUser (Just (StatusInfo {room = "", score = MakeHiLo(b6,b7), turns = MakeHiLo(b8,b9)})) user_command_line_10;
    Let b11 = M[008294];
    Let b12 = M[008295];
    Let b13 = M[008296];
    Let b14 = M[008297];
    Tokenize user_command_line_10 (num_tokens_15,position_words_16,canonicalized17);
    StringBytes canonicalized17 string_bytes_18;
    ForeachB: (index19,byte20) in (string_bytes_18) {
      SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),1),index19) byte20;
    }
    SetByte Offset(Address(MakeHiLo(b13,b14)),1) num_tokens_15;
    ForeachB: (index21,pos22,word23) in (position_words_16) {
      Let lookee24 = LookupInDict(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),0) HiByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),1) LoByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),2) StringLength(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),3) pos22;
    }
    TraceOperation 061490 (Inc (Con 157));
    Let b25 = M[008190];
    Let b26 = M[008191];
    SetByte 008190 HiByte(Add(MakeHiLo(b25,b26),1));
    SetByte 008191 LoByte(Add(MakeHiLo(b25,b26),1));
    TraceOperation 061492 (Je [Var (Global 141),Con 1,Con 2] (Branch F (Dloc 061616)));
    Let b27 = M[008190];
    Let b28 = M[008191];
    if (LogOr(Equal(MakeHiLo(b27,b28),1),Equal(MakeHiLo(b27,b28),2))) {
      TraceOperation 061499 (Print "You keep out of this, you're dead");
      GamePrint "You keep out of this, you're dead";
      TraceOperation 061516 (Je [Var (Global 141),Con 1] (Branch F (Dloc 061542)));
      Let b29 = M[008190];
      Let b30 = M[008191];
      if (Equal(MakeHiLo(b29,b30),1)) {
        TraceOperation 061520 (Print ". An ambulance arrives.");
        GamePrint ". An ambulance arrives.";
        TraceOperation 061539 (Jump 061479);
        Jump: 061479
      } else {
        Jump: 061542
      }
    } else {
      Jump: 061616
    }
  } else {
    Let b31 = M[007910];
    Let b32 = M[007911];
    Let b33 = M[007912];
    Let b34 = M[007913];
    ReadInputFromUser (Just (StatusInfo {room = GetText(Offset(Address(MakeHiLo(b3,b4)),1)), score = MakeHiLo(b31,b32), turns = MakeHiLo(b33,b34)})) user_command_line_35;
    Let b36 = M[008294];
    Let b37 = M[008295];
    Let b38 = M[008296];
    Let b39 = M[008297];
    Tokenize user_command_line_35 (num_tokens_40,position_words_41,canonicalized42);
    StringBytes canonicalized42 string_bytes_43;
    ForeachB: (index44,byte45) in (string_bytes_43) {
      SetByte Offset(Offset(Address(MakeHiLo(b36,b37)),1),index44) byte45;
    }
    SetByte Offset(Address(MakeHiLo(b38,b39)),1) num_tokens_40;
    ForeachB: (index46,pos47,word48) in (position_words_41) {
      Let lookee49 = LookupInDict(word48);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b38,b39)),2),Mul(4,index46)),0) HiByte(DeAddress(lookee49));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b38,b39)),2),Mul(4,index46)),1) LoByte(DeAddress(lookee49));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b38,b39)),2),Mul(4,index46)),2) StringLength(word48);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b38,b39)),2),Mul(4,index46)),3) pos47;
    }
    TraceOperation 061490 (Inc (Con 157));
    Let b50 = M[008190];
    Let b51 = M[008191];
    SetByte 008190 HiByte(Add(MakeHiLo(b50,b51),1));
    SetByte 008191 LoByte(Add(MakeHiLo(b50,b51),1));
    TraceOperation 061492 (Je [Var (Global 141),Con 1,Con 2] (Branch F (Dloc 061616)));
    Let b52 = M[008190];
    Let b53 = M[008191];
    if (LogOr(Equal(MakeHiLo(b52,b53),1),Equal(MakeHiLo(b52,b53),2))) {
      TraceOperation 061499 (Print "You keep out of this, you're dead");
      GamePrint "You keep out of this, you're dead";
      TraceOperation 061516 (Je [Var (Global 141),Con 1] (Branch F (Dloc 061542)));
      Let b54 = M[008190];
      Let b55 = M[008191];
      if (Equal(MakeHiLo(b54,b55),1)) {
        TraceOperation 061520 (Print ". An ambulance arrives.");
        GamePrint ". An ambulance arrives.";
        TraceOperation 061539 (Jump 061479);
        Jump: 061479
      } else {
        Jump: 061542
      }
    } else {
      Jump: 061616
    }
  }
LocOp 061542:
  TraceOperation 061542 (Print " and should be concentrating on developing a good firm rigor mortis. You are put in the ambulance, which drives away.");
  GamePrint " and should be concentrating on developing a good firm rigor mortis. You are put in the ambulance, which drives away.";
  TraceOperation 061613 (Jump 061479);
  Jump: 061479
LocOp 061616:
  TraceOperation 061616 (Je [Var (Global 141),Con 3] (Branch F (Dloc 061479)));
  Let b1 = M[008190];
  Let b2 = M[008191];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 061621 (Print "For a dead person you are talking too much. As the ambulance reaches the mortuary");
    GamePrint "For a dead person you are talking too much. As the ambulance reaches the mortuary";
    TraceOperation 061672 (Call (Floc 058046) [] Sp);
    PushFrame 061672;
    JumpCall: 058046, #actuals: 0
  } else {
    Jump: 061479
  }
LocReturn 061672:
  PushStack call_result;
  TraceOperation 061677 (Call (Floc 028948) [] Sp);
  PushFrame 061677;
  JumpCall: 028948, #actuals: 0
LocReturn 061677:
  PushStack call_result;
  TraceOperation 061682 (Jump 061479);
  Jump: 061479
--[428]--------------------------------------------------
LocRoutine 061686:
  MakeRoutineFrame 0;
  Jump: 061687
LocOp 061687:
  TraceOperation 061687 (Je [Var (Global 203),Con 75,Con 15] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),75),Equal(MakeHiLo(b1,b2),15))) {
    TraceOperation 061693 (Print "The ");
    GamePrint "The ";
    TraceOperation 061696 (Print_obj (Con 146));
    Let b3 = M[002072];
    Let b4 = M[002073];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 061698 (Print ", perusing a booklet of union rules, ignores you.");
      GamePrint ", perusing a booklet of union rules, ignores you.";
      TraceOperation 061731 New_line;
      GamePrint "\n";
      TraceOperation 061732 (Call (Floc 043634) [] Sp);
      PushFrame 061732;
      JumpCall: 043634, #actuals: 0
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 061698 (Print ", perusing a booklet of union rules, ignores you.");
      GamePrint ", perusing a booklet of union rules, ignores you.";
      TraceOperation 061731 New_line;
      GamePrint "\n";
      TraceOperation 061732 (Call (Floc 043634) [] Sp);
      PushFrame 061732;
      JumpCall: 043634, #actuals: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 061732:
  PushStack call_result;
  TraceOperation 061737 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[429]--------------------------------------------------
LocRoutine 061738:
  MakeRoutineFrame 0;
  Jump: 061739
LocOp 061739:
  TraceOperation 061739 (Je [Var (Global 203),Con 61] (Branch F (Dloc 061800)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 061743 (Print "It's one of those really big ");
    GamePrint "It's one of those really big ";
    TraceOperation 061762 (Print_obj (Con 166));
    Let b3 = M[002252];
    Let b4 = M[002253];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 061764 (Print "s that can actually crush other ");
      GamePrint "s that can actually crush other ";
      TraceOperation 061783 (Print_obj (Con 166));
      Let b6 = M[002252];
      Let b7 = M[002253];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 061785 (Print_ret "s, let alone houses.");
        GamePrint "s, let alone houses.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 061785 (Print_ret "s, let alone houses.");
        GamePrint "s, let alone houses.\n";
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 061764 (Print "s that can actually crush other ");
      GamePrint "s that can actually crush other ";
      TraceOperation 061783 (Print_obj (Con 166));
      Let b11 = M[002252];
      Let b12 = M[002253];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      if (IsZeroByte(b13)) {
        GamePrint "";
        TraceOperation 061785 (Print_ret "s, let alone houses.");
        GamePrint "s, let alone houses.\n";
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
        TraceOperation 061785 (Print_ret "s, let alone houses.");
        GamePrint "s, let alone houses.\n";
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 1
      }
    }
  } else {
    Jump: 061800
  }
LocOp 061800:
  TraceOperation 061800 (Je [Var (Global 0),Con 149] (Branch T (Dloc 061834)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),149)) {
    Jump: 061834
  } else {
    TraceOperation 061804 (Je [Var (Global 203),Con 98,Con 114,Con 159] (Branch T (Dloc 061822)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),98),Equal(MakeHiLo(b3,b4),114)),Equal(MakeHiLo(b3,b4),159))) {
      Jump: 061822
    } else {
      TraceOperation 061811 (Je [Var (Global 203),Con 26,Con 82,Con 124] (Branch T (Dloc 061822)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),26),Equal(MakeHiLo(b5,b6),82)),Equal(MakeHiLo(b5,b6),124))) {
        Jump: 061822
      } else {
        TraceOperation 061818 (Je [Var (Global 203),Con 168] (Branch F (Dloc 061834)));
        Let b7 = M[008314];
        Let b8 = M[008315];
        if (Equal(MakeHiLo(b7,b8),168)) {
          Jump: 061822
        } else {
          Jump: 061834
        }
      }
    }
  }
LocOp 061822:
  TraceOperation 061822 (Print "The ");
  GamePrint "The ";
  TraceOperation 061825 (Print_obj (Con 166));
  Let b1 = M[002252];
  Let b2 = M[002253];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 061827 (Print_ret " isn't here.");
    GamePrint " isn't here.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 061827 (Print_ret " isn't here.");
    GamePrint " isn't here.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 061834:
  TraceOperation 061834 (Je [Var (Global 203),Con 87] (Branch F (Dloc 061846)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 061838 (Call (Floc 022042) [Con 26,Con 166] Sp);
    PushFrame 061838;
    SetLocal 1 26;
    SetLocal 2 166;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 061846
  }
LocReturn 061838:
  PushStack call_result;
  TraceOperation 061845 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 061846:
  TraceOperation 061846 (Je [Var (Global 203),Con 26] (Branch F (Dloc 061971)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 061851 (Je [Var (Global 120),Con 123] (Branch F (Dloc 061971)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 061856 (Jz (Var (Global 145)) (Branch T (Dloc 061870)));
      Let b5 = M[008198];
      Let b6 = M[008199];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 061870
      } else {
        TraceOperation 061859 (Print_ret "Too late now.");
        GamePrint "Too late now.\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      }
    } else {
      Jump: 061971
    }
  } else {
    Jump: 061971
  }
LocOp 061870:
  TraceOperation 061870 (Jz (Var (Global 86)) (Branch T (Dloc 061881)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 061881
  } else {
    TraceOperation 061873 (Call (Floc 022042) [Con 87,Con 42] Sp);
    PushFrame 061873;
    SetLocal 1 87;
    SetLocal 2 42;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 061873:
  PushStack call_result;
  TraceOperation 061880 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 061881:
  TraceOperation 061881 (Jz (Var (Global 139)) (Branch T (Dloc 061903)));
  Let b1 = M[008186];
  Let b2 = M[008187];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 061903
  } else {
    TraceOperation 061884 (Print_ret "Prosser's doing that for you.");
    GamePrint "Prosser's doing that for you.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 061903:
  TraceOperation 061903 (Store (Con 102) (Con 1));
  SetByte 008080 0;
  SetByte 008081 1;
  TraceOperation 061906 (Call (Floc 022320) [Con 31225,Con 2] Sp);
  PushFrame 061906;
  SetLocal 1 31225;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 061906:
  PushStack call_result;
  TraceOperation 061914 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 061919 (Print "You lie down in the path of the advancing ");
  GamePrint "You lie down in the path of the advancing ";
  TraceOperation 061942 (Print_obj (Con 166));
  Let b2 = M[002252];
  Let b3 = M[002253];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 061944 (Print_ret ". Prosser yells at you to for crissake move!!!");
    GamePrint ". Prosser yells at you to for crissake move!!!\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 061944 (Print_ret ". Prosser yells at you to for crissake move!!!");
    GamePrint ". Prosser yells at you to for crissake move!!!\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
LocOp 061971:
  TraceOperation 061971 (Je [Var (Global 203),Con 168] (Branch F (Dloc 062415)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 061976 (Je [Var (Global 120),Con 123] (Branch F (Dloc 061986)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 061980 (Call (Floc 031422) [] Sp);
      PushFrame 061980;
      JumpCall: 031422, #actuals: 0
    } else {
      Jump: 061986
    }
  } else {
    Jump: 062415
  }
LocReturn 061980:
  PushStack call_result;
  TraceOperation 061985 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 061986:
  TraceOperation 061986 (Jz (Var (Global 131)) (Branch F (Dloc 062028)));
  Let b1 = M[008170];
  Let b2 = M[008171];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 061989 (Print_ret "Didn't you come here for a purpose? Something about a towel?");
    GamePrint "Didn't you come here for a purpose? Something about a towel?\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 062028
  }
LocOp 062028:
  TraceOperation 062028 (Jz (Var (Global 138)) (Branch T (Dloc 062054)));
  Let b1 = M[008184];
  Let b2 = M[008185];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 062054
  } else {
    TraceOperation 062031 (Print_ret "You already did. It's not a merry-go-round.");
    GamePrint "You already did. It's not a merry-go-round.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 062054:
  TraceOperation 062054 (Store (Con 154) (Con 1));
  SetByte 008184 0;
  SetByte 008185 1;
  TraceOperation 062057 (Print "You walk around the ");
  GamePrint "You walk around the ";
  TraceOperation 062066 (Print_obj (Con 166));
  Let b1 = M[002252];
  Let b2 = M[002253];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 062068 (Print_ret ". Prosser is standing here, looking cross and frustrated. Realising that you are a friend of Arthur's he starts to talk at you. He says that this sort of protest is all very well, but what Mr. Dent must realise is that he's had plenty of time to make a formal protest at the proper time and place, and that spending months going through the appropriate official channels, filling in the appropriate official forms, and going to the appropriate official public hearings is the right way of going about it, and lying around whimsically in the mud is not. He says that he personally hates mud and despises the sort of people who lie in it.");
    GamePrint ". Prosser is standing here, looking cross and frustrated. Realising that you are a friend of Arthur's he starts to talk at you. He says that this sort of protest is all very well, but what Mr. Dent must realise is that he's had plenty of time to make a formal protest at the proper time and place, and that spending months going through the appropriate official channels, filling in the appropriate official forms, and going to the appropriate official public hearings is the right way of going about it, and lying around whimsically in the mud is not. He says that he personally hates mud and despises the sort of people who lie in it.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 062068 (Print_ret ". Prosser is standing here, looking cross and frustrated. Realising that you are a friend of Arthur's he starts to talk at you. He says that this sort of protest is all very well, but what Mr. Dent must realise is that he's had plenty of time to make a formal protest at the proper time and place, and that spending months going through the appropriate official channels, filling in the appropriate official forms, and going to the appropriate official public hearings is the right way of going about it, and lying around whimsically in the mud is not. He says that he personally hates mud and despises the sort of people who lie in it.");
    GamePrint ". Prosser is standing here, looking cross and frustrated. Realising that you are a friend of Arthur's he starts to talk at you. He says that this sort of protest is all very well, but what Mr. Dent must realise is that he's had plenty of time to make a formal protest at the proper time and place, and that spending months going through the appropriate official channels, filling in the appropriate official forms, and going to the appropriate official public hearings is the right way of going about it, and lying around whimsically in the mud is not. He says that he personally hates mud and despises the sort of people who lie in it.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 062415:
  TraceOperation 062415 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 062419 (Call (Floc 020662) [Con 31225] Sp);
    PushFrame 062419;
    SetLocal 1 31225;
    JumpCall: 020662, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 062419:
  PushStack call_result;
  TraceOperation 062426 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 062429 (Print_ret "\"Rumble...rumble...\"");
    GamePrint "\"Rumble...rumble...\"\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
--[430]--------------------------------------------------
LocRoutine 062450:
  MakeRoutineFrame 0;
  Jump: 062451
LocOp 062451:
  TraceOperation 062451 (Jz (Var (Global 86)) (Branch F (Dloc 062472)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062454 (Call (Floc 022340) [Con 31225] Sp);
    PushFrame 062454;
    SetLocal 1 31225;
    JumpCall: 022340, #actuals: 1
  } else {
    Jump: 062472
  }
LocReturn 062454:
  PushStack call_result;
  TraceOperation 062461 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 062466 (Call (Floc 061242) [] Sp);
  PushFrame 062466;
  JumpCall: 061242, #actuals: 0
LocReturn 062466:
  PushStack call_result;
  TraceOperation 062471 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 062472:
  TraceOperation 062472 (Call (Floc 022320) [Con 31225,Con -1] Sp);
  PushFrame 062472;
  SetLocal 1 31225;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 062472:
  PushStack call_result;
  TraceOperation 062481 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 062486 (Inc (Con 156));
  Let b2 = M[008188];
  Let b3 = M[008189];
  SetByte 008188 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008189 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 062488 New_line;
  GamePrint "\n";
  TraceOperation 062489 (Je [Var (Global 140),Con 1] (Branch F (Dloc 062541)));
  Let b4 = M[008188];
  Let b5 = M[008189];
  if (Equal(MakeHiLo(b4,b5),1)) {
    TraceOperation 062493 (Print "The ");
    GamePrint "The ";
    TraceOperation 062496 (Print_obj (Con 166));
    Let b6 = M[002252];
    Let b7 = M[002253];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 062498 (Print_ret " thunders toward you. The ground is shaking beneath you as you lie in the mud.");
      GamePrint " thunders toward you. The ground is shaking beneath you as you lie in the mud.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 062498 (Print_ret " thunders toward you. The ground is shaking beneath you as you lie in the mud.");
      GamePrint " thunders toward you. The ground is shaking beneath you as you lie in the mud.\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    }
  } else {
    Jump: 062541
  }
LocOp 062541:
  TraceOperation 062541 (Je [Var (Global 140),Con 2] (Branch F (Dloc 062652)));
  Let b1 = M[008188];
  Let b2 = M[008189];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 062546 (Print "The noise of the giant ");
    GamePrint "The noise of the giant ";
    TraceOperation 062559 (Print_obj (Con 166));
    Let b3 = M[002252];
    Let b4 = M[002253];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 062561 (Print_ret " is now so violently loud that you can't even hear Prosser yelling to warn you that you will be killed if you don't get the hell out of the way. You just see him gesticulating wildly.");
      GamePrint " is now so violently loud that you can't even hear Prosser yelling to warn you that you will be killed if you don't get the hell out of the way. You just see him gesticulating wildly.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 062561 (Print_ret " is now so violently loud that you can't even hear Prosser yelling to warn you that you will be killed if you don't get the hell out of the way. You just see him gesticulating wildly.");
      GamePrint " is now so violently loud that you can't even hear Prosser yelling to warn you that you will be killed if you don't get the hell out of the way. You just see him gesticulating wildly.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 062652
  }
LocOp 062652:
  TraceOperation 062652 (Je [Var (Global 140),Con 3] (Branch F Dfalse));
  Let b1 = M[008188];
  Let b2 = M[008189];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 062656 (Call (Floc 022340) [Con 31225] Sp);
    PushFrame 062656;
    SetLocal 1 31225;
    JumpCall: 022340, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 062656:
  PushStack call_result;
  TraceOperation 062663 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 062668 (Call (Floc 022320) [Con -32630,Con -1] Sp);
  PushFrame 062668;
  SetLocal 1 -32630;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 062668:
  PushStack call_result;
  TraceOperation 062677 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 062682 (Insert_obj (Con 142) (Var (Global 0)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[002033];
  if (IsZero(Widen(b4))) {
    SetByte 002033 b3;
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    SetByte 002034 LoByte(Widen(b5));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 142;
    TraceOperation 062685 (Store (Con 207) (Con 139));
    SetByte 008290 0;
    SetByte 008291 139;
    TraceOperation 062688 (Print "With a terrible grinding of gears the ");
    GamePrint "With a terrible grinding of gears the ";
    TraceOperation 062713 (Print_obj (Con 166));
    Let b6 = M[002252];
    Let b7 = M[002253];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 062715 (Print " comes to an abrupt halt just in front of you. It shakes, shudders, and emits noxious substances all over your rose bed. Prosser is incoherent with rage.\n\nMoments later, your friend ");
      GamePrint " comes to an abrupt halt just in front of you. It shakes, shudders, and emits noxious substances all over your rose bed. Prosser is incoherent with rage.\n\nMoments later, your friend ";
      TraceOperation 062818 (Print_obj (Con 142));
      Let b9 = M[002036];
      Let b10 = M[002037];
      Let b11 = M[Address(MakeHiLo(b9,b10))];
      if (IsZeroByte(b11)) {
        GamePrint "";
        TraceOperation 062820 (Print_ret " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.");
        GamePrint " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.\n";
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
        TraceOperation 062820 (Print_ret " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.");
        GamePrint " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.\n";
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 062715 (Print " comes to an abrupt halt just in front of you. It shakes, shudders, and emits noxious substances all over your rose bed. Prosser is incoherent with rage.\n\nMoments later, your friend ");
      GamePrint " comes to an abrupt halt just in front of you. It shakes, shudders, and emits noxious substances all over your rose bed. Prosser is incoherent with rage.\n\nMoments later, your friend ";
      TraceOperation 062818 (Print_obj (Con 142));
      Let b14 = M[002036];
      Let b15 = M[002037];
      Let b16 = M[Address(MakeHiLo(b14,b15))];
      if (IsZeroByte(b16)) {
        GamePrint "";
        TraceOperation 062820 (Print_ret " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.");
        GamePrint " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.\n";
        PopFrame return_address_17;
        JumpReturn: return_address_17, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b14,b15)),1));
        TraceOperation 062820 (Print_ret " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.");
        GamePrint " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.\n";
        PopFrame return_address_18;
        JumpReturn: return_address_18, result: 1
      }
    }
  } else {
    Let b19 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
    if (Equal(Widen(b19),142)) {
      Let b20 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b20));
      SetByte 002033 b3;
      Let b21 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte 002034 LoByte(Widen(b21));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 142;
      TraceOperation 062685 (Store (Con 207) (Con 139));
      SetByte 008290 0;
      SetByte 008291 139;
      TraceOperation 062688 (Print "With a terrible grinding of gears the ");
      GamePrint "With a terrible grinding of gears the ";
      TraceOperation 062713 (Print_obj (Con 166));
      Let b22 = M[002252];
      Let b23 = M[002253];
      Let b24 = M[Address(MakeHiLo(b22,b23))];
      if (IsZeroByte(b24)) {
        GamePrint "";
        TraceOperation 062715 (Print " comes to an abrupt halt just in front of you. It shakes, shudders, and emits noxious substances all over your rose bed. Prosser is incoherent with rage.\n\nMoments later, your friend ");
        GamePrint " comes to an abrupt halt just in front of you. It shakes, shudders, and emits noxious substances all over your rose bed. Prosser is incoherent with rage.\n\nMoments later, your friend ";
        TraceOperation 062818 (Print_obj (Con 142));
        Let b25 = M[002036];
        Let b26 = M[002037];
        Let b27 = M[Address(MakeHiLo(b25,b26))];
        if (IsZeroByte(b27)) {
          GamePrint "";
          TraceOperation 062820 (Print_ret " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.");
          GamePrint " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.\n";
          PopFrame return_address_28;
          JumpReturn: return_address_28, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b25,b26)),1));
          TraceOperation 062820 (Print_ret " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.");
          GamePrint " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.\n";
          PopFrame return_address_29;
          JumpReturn: return_address_29, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b22,b23)),1));
        TraceOperation 062715 (Print " comes to an abrupt halt just in front of you. It shakes, shudders, and emits noxious substances all over your rose bed. Prosser is incoherent with rage.\n\nMoments later, your friend ");
        GamePrint " comes to an abrupt halt just in front of you. It shakes, shudders, and emits noxious substances all over your rose bed. Prosser is incoherent with rage.\n\nMoments later, your friend ";
        TraceOperation 062818 (Print_obj (Con 142));
        Let b30 = M[002036];
        Let b31 = M[002037];
        Let b32 = M[Address(MakeHiLo(b30,b31))];
        if (IsZeroByte(b32)) {
          GamePrint "";
          TraceOperation 062820 (Print_ret " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.");
          GamePrint " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.\n";
          PopFrame return_address_33;
          JumpReturn: return_address_33, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b30,b31)),1));
          TraceOperation 062820 (Print_ret " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.");
          GamePrint " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.\n";
          PopFrame return_address_34;
          JumpReturn: return_address_34, result: 1
        }
      }
    } else {
      Error: unlink/loop
    }
  }
--[431]--------------------------------------------------
LocRoutine 062932:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 062935
LocOp 062935:
  TraceOperation 062935 (Je [Var (Global 120),Con 142] (Branch F (Dloc 062992)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 062939 (Test_attr (Con 145) (Con 5) (Branch T (Dloc 062992)));
    Let b3 = M[002056];
    if (TestBit(b3,2)) {
      Jump: 062992
    } else {
      TraceOperation 062943 (Set_attr (Con 145) (Con 5));
      Let b4 = M[002056];
      SetByte 002056 SetBit(b4,2);
      TraceOperation 062946 (Print "Nearby stands an impatient man. There seems to be a bit of an atmosphere.");
      GamePrint "Nearby stands an impatient man. There seems to be a bit of an atmosphere.";
      TraceOperation 062989 (Jump 063122);
      Jump: 063122
    }
  } else {
    Jump: 062992
  }
LocOp 062992:
  TraceOperation 062992 (Print_obj (Con 145));
  Let b1 = M[002063];
  Let b2 = M[002064];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 062994 (Print ", from the local council, is ");
    GamePrint ", from the local council, is ";
    TraceOperation 063011 (Jz (Var (Global 139)) (Branch T (Dloc 063028)));
    Let b4 = M[008186];
    Let b5 = M[008187];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 063028
    } else {
      TraceOperation 063014 (Print "lying in front");
      GamePrint "lying in front";
      TraceOperation 063025 (Jump 063049);
      Jump: 063049
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 062994 (Print ", from the local council, is ");
    GamePrint ", from the local council, is ";
    TraceOperation 063011 (Jz (Var (Global 139)) (Branch T (Dloc 063028)));
    Let b6 = M[008186];
    Let b7 = M[008187];
    if (IsZero(MakeHiLo(b6,b7))) {
      Jump: 063028
    } else {
      TraceOperation 063014 (Print "lying in front");
      GamePrint "lying in front";
      TraceOperation 063025 (Jump 063049);
      Jump: 063049
    }
  }
LocOp 063028:
  TraceOperation 063028 (Jz (Var (Global 138)) (Branch T (Dloc 063047)));
  Let b1 = M[008184];
  Let b2 = M[008185];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 063047
  } else {
    TraceOperation 063031 (Print "standing at the side");
    GamePrint "standing at the side";
    TraceOperation 063044 (Jump 063049);
    Jump: 063049
  }
LocOp 063047:
  TraceOperation 063047 (Print_paddr (Var (Global 8)));
  Let b1 = M[007924];
  Let b2 = M[007925];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  Jump: 063049
LocOp 063049:
  TraceOperation 063049 (Print " of the ");
  GamePrint " of the ";
  TraceOperation 063054 (Print_obj (Con 166));
  Let b1 = M[002252];
  Let b2 = M[002253];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 063056 (Print ". He seems to be wearing a ");
    GamePrint ". He seems to be wearing a ";
    TraceOperation 063071 (Print_obj (Con 144));
    Let b4 = M[002054];
    Let b5 = M[002055];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 063073 (Print ".");
      GamePrint ".";
      TraceOperation 063076 (Test_attr (Con 145) (Con 5) (Branch T (Dloc 063122)));
      Let b7 = M[002056];
      if (TestBit(b7,2)) {
        Jump: 063122
      } else {
        TraceOperation 063080 (Set_attr (Con 145) (Con 5));
        Let b8 = M[002056];
        SetByte 002056 SetBit(b8,2);
        TraceOperation 063083 (Print " He looks startled to see you emerge, and yells at you to get out of the way.");
        GamePrint " He looks startled to see you emerge, and yells at you to get out of the way.";
        Jump: 063122
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 063073 (Print ".");
      GamePrint ".";
      TraceOperation 063076 (Test_attr (Con 145) (Con 5) (Branch T (Dloc 063122)));
      Let b9 = M[002056];
      if (TestBit(b9,2)) {
        Jump: 063122
      } else {
        TraceOperation 063080 (Set_attr (Con 145) (Con 5));
        Let b10 = M[002056];
        SetByte 002056 SetBit(b10,2);
        TraceOperation 063083 (Print " He looks startled to see you emerge, and yells at you to get out of the way.");
        GamePrint " He looks startled to see you emerge, and yells at you to get out of the way.";
        Jump: 063122
      }
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 063056 (Print ". He seems to be wearing a ");
    GamePrint ". He seems to be wearing a ";
    TraceOperation 063071 (Print_obj (Con 144));
    Let b11 = M[002054];
    Let b12 = M[002055];
    Let b13 = M[Address(MakeHiLo(b11,b12))];
    if (IsZeroByte(b13)) {
      GamePrint "";
      TraceOperation 063073 (Print ".");
      GamePrint ".";
      TraceOperation 063076 (Test_attr (Con 145) (Con 5) (Branch T (Dloc 063122)));
      Let b14 = M[002056];
      if (TestBit(b14,2)) {
        Jump: 063122
      } else {
        TraceOperation 063080 (Set_attr (Con 145) (Con 5));
        Let b15 = M[002056];
        SetByte 002056 SetBit(b15,2);
        TraceOperation 063083 (Print " He looks startled to see you emerge, and yells at you to get out of the way.");
        GamePrint " He looks startled to see you emerge, and yells at you to get out of the way.";
        Jump: 063122
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
      TraceOperation 063073 (Print ".");
      GamePrint ".";
      TraceOperation 063076 (Test_attr (Con 145) (Con 5) (Branch T (Dloc 063122)));
      Let b16 = M[002056];
      if (TestBit(b16,2)) {
        Jump: 063122
      } else {
        TraceOperation 063080 (Set_attr (Con 145) (Con 5));
        Let b17 = M[002056];
        SetByte 002056 SetBit(b17,2);
        TraceOperation 063083 (Print " He looks startled to see you emerge, and yells at you to get out of the way.");
        GamePrint " He looks startled to see you emerge, and yells at you to get out of the way.";
        Jump: 063122
      }
    }
  }
LocOp 063122:
  TraceOperation 063122 New_line;
  GamePrint "\n";
  TraceOperation 063123 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[432]--------------------------------------------------
LocRoutine 063124:
  MakeRoutineFrame 0;
  Jump: 063125
LocOp 063125:
  TraceOperation 063125 (Je [Con 145,Var (Global 195)] (Branch F (Dloc 063883)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(145,MakeHiLo(b1,b2))) {
    TraceOperation 063130 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 063239)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001871];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 063135 (Print "Prosser is too preoccupied with recent events to give your remarks much consideration. He is running off and saying a number of things about his mother in a high voice.");
      GamePrint "Prosser is too preoccupied with recent events to give your remarks much consideration. He is running off and saying a number of things about his mother in a high voice.";
      TraceOperation 063232 New_line;
      GamePrint "\n";
      TraceOperation 063233 (Call (Floc 043634) [] Sp);
      PushFrame 063233;
      JumpCall: 043634, #actuals: 0
    } else {
      Jump: 063239
    }
  } else {
    Jump: 063883
  }
LocReturn 063233:
  PushStack call_result;
  TraceOperation 063238 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[433]--------------------------------------------------
LocRoutine 063298:
  MakeRoutineFrame 0;
  Jump: 063299
LocOp 063299:
  TraceOperation 063299 (Store (Con 211) (Con 145));
  SetByte 008298 0;
  SetByte 008299 145;
  TraceOperation 063302 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[434]--------------------------------------------------
LocRoutine 063364:
  MakeRoutineFrame 0;
  Jump: 063365
LocOp 063365:
  TraceOperation 063365 (Store (Con 211) (Con 145));
  SetByte 008298 0;
  SetByte 008299 145;
  TraceOperation 063368 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[435]--------------------------------------------------
LocRoutine 063410:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 20128;
  }
  Jump: 063413
LocOp 063413:
  TraceOperation 063413 (Ret (Con 209));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 209
--[436]--------------------------------------------------
LocRoutine 063420:
  MakeRoutineFrame 0;
  Jump: 063421
LocOp 063421:
  TraceOperation 063421 (Mul (Con 71) (Var (Global 190)) (Global 61));
  Let b1 = M[008288];
  Let b2 = M[008289];
  SetByte 008030 HiByte(Mul(71,MakeHiLo(b1,b2)));
  SetByte 008031 LoByte(Mul(71,MakeHiLo(b1,b2)));
  TraceOperation 063425 (Jz (Con 25693) (Branch T (Dloc 069193)));
  TraceOperation 063430 (Store (Con 155) (Con 1));
  SetByte 008186 0;
  SetByte 008187 1;
  TraceOperation 063433 (Call (Floc 022320) [Con -27122,Con -1] Sp);
  PushFrame 063433;
  SetLocal 1 -27122;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 063433:
  PushStack call_result;
  TraceOperation 063442 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 063447 (Print_ret "Prosser blinks in astonishment. \"You mean, go and lie in the mud in his place...?\" You explain that Arthur will only move if someone else takes over for him. Prosser shakes his head in such a manner as to suggest that he is very weary of the world, and you tactfully forebear from mentioning that it won't be troubling him much longer. Reluctantly, he follows you back toward Arthur.\n\nYou rapidly conclude the business. Prosser lies in the mud. Arthur, bewildered, nevertheless stands up and appears ready to follow you to the Pub.");
  GamePrint "Prosser blinks in astonishment. \"You mean, go and lie in the mud in his place...?\" You explain that Arthur will only move if someone else takes over for him. Prosser shakes his head in such a manner as to suggest that he is very weary of the world, and you tactfully forebear from mentioning that it won't be troubling him much longer. Reluctantly, he follows you back toward Arthur.\n\nYou rapidly conclude the business. Prosser lies in the mud. Arthur, bewildered, nevertheless stands up and appears ready to follow you to the Pub.\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[437]--------------------------------------------------
LocRoutine 063748:
  MakeRoutineFrame 0;
  Jump: 063749
LocOp 063749:
  TraceOperation 063749 (Call (Floc 043634) [] Sp);
  PushFrame 063749;
  JumpCall: 043634, #actuals: 0
LocReturn 063749:
  PushStack call_result;
  TraceOperation 063754 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[438]--------------------------------------------------
LocRoutine 063780:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 -12030;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 13344;
    }
  }
  Jump: 063785
LocOp 063785:
  TraceOperation 063785 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[439]--------------------------------------------------
LocRoutine 063820:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 -19349;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 22313;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 24590;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 25148;
        }
      }
    }
  }
  Jump: 063829
LocOp 063829:
  TraceOperation 063829 (Test_attr (Con 36) (Con 28) (Branch F (Dloc 062597)));
  Let b1 = M[001078];
  if (TestBit(b1,3)) {
    TraceOperation 063834 (Jin (Con 70) (Con 1) (Branch F (Dloc 069063)));
    Let b2 = M[001385];
    if (Equal(1,Widen(b2))) {
      TraceOperation 063839 Rfalse;
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    } else {
      Jump: 069063
    }
  } else {
    Jump: 062597
  }
--[440]--------------------------------------------------
LocRoutine 063862:
  MakeRoutineFrame 0;
  Jump: 063863
LocOp 063863:
  TraceOperation 063863 (Jz (Var Sp) (Branch T (Dloc 063872)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063872
  } else {
    TraceOperation 063866 (Call (Floc 035588) [] Sp);
    PushFrame 063866;
    JumpCall: 035588, #actuals: 0
  }
LocReturn 063866:
  PushStack call_result;
  TraceOperation 063871 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 063872:
  TraceOperation 063872 (Call (Floc 064540) [] Sp);
  PushFrame 063872;
  JumpCall: 064540, #actuals: 0
LocReturn 063872:
  PushStack call_result;
  TraceOperation 063877 (Call (Floc 043634) [] Sp);
  PushFrame 063877;
  JumpCall: 043634, #actuals: 0
LocReturn 063877:
  PushStack call_result;
  TraceOperation 063882 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[441]--------------------------------------------------
LocRoutine 063918:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 -8129;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 17851;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 23958;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 24896;
        }
      }
    }
  }
  Jump: 063927
LocOp 063927:
  TraceOperation 063927 (Sub (Var (Global 41)) (Con 0) (Global 168));
  Let b1 = M[007990];
  Let b2 = M[007991];
  SetByte 008244 HiByte(Sub(MakeHiLo(b1,b2),0));
  SetByte 008245 LoByte(Sub(MakeHiLo(b1,b2),0));
  TraceOperation 063931 (Je [Var (Global 203),Con 134,Con 66] (Branch F (Dloc 064134)));
  Let b3 = M[008314];
  Let b4 = M[008315];
  if (LogOr(Equal(MakeHiLo(b3,b4),134),Equal(MakeHiLo(b3,b4),66))) {
    TraceOperation 063938 (Je [Var (Global 201),Con 156] (Branch F (Dloc 063983)));
    Let b5 = M[008310];
    Let b6 = M[008311];
    if (Equal(MakeHiLo(b5,b6),156)) {
      TraceOperation 063942 (Print_ret "He is much impressed and says, \"You must have the same aunt I have.\"");
      GamePrint "He is much impressed and says, \"You must have the same aunt I have.\"\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 063983
    }
  } else {
    Jump: 064134
  }
LocOp 063983:
  TraceOperation 063983 (Je [Var (Global 201),Con 139] (Branch F (Dloc 064027)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 063987 (Store (Con 148) (Con 1));
    SetByte 008172 0;
    SetByte 008173 1;
    TraceOperation 063990 (Print_ret "Prosser thanks you, wipes the mud off his boots, and hands it back.");
    GamePrint "Prosser thanks you, wipes the mud off his boots, and hands it back.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 064027
  }
LocOp 064027:
  TraceOperation 064027 (Je [Var (Global 201),Con 1] (Branch F (Dloc 064083)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 064031 (Print "Prosser takes a quick look at ");
    GamePrint "Prosser takes a quick look at ";
    TraceOperation 064048 (Print_obj (Con 1));
    Let b3 = M[000767];
    Let b4 = M[000768];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 064050 (Print_ret ", says he doesn't read that kind of rubbish, and hands it back.");
      GamePrint ", says he doesn't read that kind of rubbish, and hands it back.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 064050 (Print_ret ", says he doesn't read that kind of rubbish, and hands it back.");
      GamePrint ", says he doesn't read that kind of rubbish, and hands it back.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 064083
  }
LocOp 064083:
  TraceOperation 064083 (Je [Var (Global 201),Con 141] (Branch F Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),141)) {
    TraceOperation 064087 (Print_ret "Prosser says he wouldn't be seen dead with that kind of thing slung over his shoulder.");
    GamePrint "Prosser says he wouldn't be seen dead with that kind of thing slung over his shoulder.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 064134:
  TraceOperation 064134 (Je [Var (Global 203),Con 21] (Branch F (Dloc 064192)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),21)) {
    TraceOperation 064138 (Je [Var (Global 0),Con 149] (Branch F (Dloc 064192)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),149)) {
      TraceOperation 064142 (Je [Var (Global 120),Con 142] (Branch F (Dloc 064157)));
      Let b5 = M[008148];
      Let b6 = M[008149];
      if (Equal(MakeHiLo(b5,b6),142)) {
        TraceOperation 064146 (Jz (Var (Global 138)) (Branch F (Dloc 064157)));
        Let b7 = M[008184];
        Let b8 = M[008185];
        if (IsZero(MakeHiLo(b7,b8))) {
          TraceOperation 064149 (Call (Floc 022042) [Con 168,Con 166] Sp);
          PushFrame 064149;
          SetLocal 1 168;
          SetLocal 2 166;
          JumpCall: 022042, #actuals: 2
        } else {
          Jump: 064157
        }
      } else {
        Jump: 064157
      }
    } else {
      Jump: 064192
    }
  } else {
    Jump: 064192
  }
LocReturn 064149:
  PushStack call_result;
  TraceOperation 064156 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 064157:
  TraceOperation 064157 (Print_ret "You're already as close as any reasonable person would want to get.");
  GamePrint "You're already as close as any reasonable person would want to get.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 064192:
  TraceOperation 064192 (Je [Var (Global 203),Con 82,Con 24] (Branch F (Dloc 064205)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),82),Equal(MakeHiLo(b1,b2),24))) {
    TraceOperation 064198 (Jz (Var (Global 86)) (Branch T (Dloc 064205)));
    Let b3 = M[008080];
    Let b4 = M[008081];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 064205
    } else {
      TraceOperation 064201 (Print_paddr (Var (Global 50)));
      Let b5 = M[008008];
      Let b6 = M[008009];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 064203 New_line;
      GamePrint "\n";
      TraceOperation 064204 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 064205
  }
LocOp 064205:
  TraceOperation 064205 (Je [Var (Global 203),Con 24] (Branch F (Dloc 064280)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),24)) {
    TraceOperation 064210 (Je [Var (Global 201),Con 145] (Branch F (Dloc 064280)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),145)) {
      TraceOperation 064215 (Jz (Var (Global 145)) (Branch T (Dloc 064280)));
      Let b5 = M[008198];
      Let b6 = M[008199];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 064280
      } else {
        TraceOperation 064219 (Print_ret "You muck up all his fancy facial work. This is the last moment of satisfaction you will experience for some time.");
        GamePrint "You muck up all his fancy facial work. This is the last moment of satisfaction you will experience for some time.\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      }
    } else {
      Jump: 064280
    }
  } else {
    Jump: 064280
  }
LocOp 064280:
  TraceOperation 064280 (Je [Var (Global 203),Con 82,Con 24] (Branch F (Dloc 064323)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),82),Equal(MakeHiLo(b1,b2),24))) {
    TraceOperation 064286 (Je [Var (Global 201),Con 145] (Branch F (Dloc 064323)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),145)) {
      TraceOperation 064290 (Print_ret "He dodges, insisting that this is incorrect procedure.");
      GamePrint "He dodges, insisting that this is incorrect procedure.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 064323
    }
  } else {
    Jump: 064323
  }
LocOp 064323:
  TraceOperation 064323 (Je [Var (Global 203),Con 154] (Branch F (Dloc 064342)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),154)) {
    TraceOperation 064327 (Je [Var (Global 202),Con 145] (Branch F (Dloc 064342)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),145)) {
      TraceOperation 064331 (Insert_obj (Var (Global 201)) (Var (Global 0)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[007908];
      Let b8 = M[007909];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      if (IsZero(Widen(b9))) {
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) b8;
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b10));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) b6;
        TraceOperation 064334 (Call (Floc 022042) [Con 24,Con 145] Sp);
        PushFrame 064334;
        SetLocal 1 24;
        SetLocal 2 145;
        JumpCall: 022042, #actuals: 2
      } else {
        Let b11 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
        if (Equal(Widen(b11),MakeHiLo(b5,b6))) {
          Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b12));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) b8;
          Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b13));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) b6;
          TraceOperation 064334 (Call (Floc 022042) [Con 24,Con 145] Sp);
          PushFrame 064334;
          SetLocal 1 24;
          SetLocal 2 145;
          JumpCall: 022042, #actuals: 2
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 064342
    }
  } else {
    Jump: 064342
  }
LocReturn 064334:
  PushStack call_result;
  TraceOperation 064341 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 064342:
  TraceOperation 064342 (Je [Var (Global 203),Con 61] (Branch F (Dloc 064352)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 064346 (Call (Floc 062932) [] Sp);
    PushFrame 064346;
    JumpCall: 062932, #actuals: 0
  } else {
    Jump: 064352
  }
LocReturn 064346:
  PushStack call_result;
  TraceOperation 064351 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 064352:
  TraceOperation 064352 (Je [Var (Global 203),Con 74] (Branch F (Dloc 064368)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 064356 (Test_attr (Con 148) (Con 6) (Branch T (Dloc 064368)));
    Let b3 = M[002083];
    if (TestBit(b3,1)) {
      Jump: 064368
    } else {
      TraceOperation 064360 (Call (Floc 022042) [Con 74,Con 148] Sp);
      PushFrame 064360;
      SetLocal 1 74;
      SetLocal 2 148;
      JumpCall: 022042, #actuals: 2
    }
  } else {
    Jump: 064368
  }
LocReturn 064360:
  PushStack call_result;
  TraceOperation 064367 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 064368:
  TraceOperation 064368 (Je [Var (Global 203),Con 22] (Branch F (Dloc 064449)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 064373 (Je [Var (Global 202),Con 28] (Branch F (Dloc 064449)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 064378 (Print_ret "Prosser pulls a booklet out of his back pocket. \"My game manual says that the goal is getting this here house knocked down.\"");
      GamePrint "Prosser pulls a booklet out of his back pocket. \"My game manual says that the goal is getting this here house knocked down.\"\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 064449
    }
  } else {
    Jump: 064449
  }
LocOp 064449:
  TraceOperation 064449 (Je [Var (Global 203),Con 22] (Branch F (Dloc 064466)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 064453 (Je [Var (Global 202),Con 144] (Branch F (Dloc 064466)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),144)) {
      TraceOperation 064457 (Call (Floc 022042) [Con 23,Con 145,Con 143] Sp);
      PushFrame 064457;
      SetLocal 1 23;
      SetLocal 2 145;
      SetLocal 3 143;
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 064466
    }
  } else {
    Jump: 064466
  }
LocReturn 064457:
  PushStack call_result;
  TraceOperation 064465 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 064466:
  TraceOperation 064466 (Je [Var (Global 203),Con 23] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 064470 (Je [Var (Global 202),Con 143] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),143)) {
      TraceOperation 064474 (Print "Prosser shakes the ");
      GamePrint "Prosser shakes the ";
      TraceOperation 064483 (Print_obj (Con 144));
      Let b5 = M[002054];
      Let b6 = M[002055];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 064485 (Print ". \"Hasn't worked for months. I keep wearing it only because I think ");
        GamePrint ". \"Hasn't worked for months. I keep wearing it only because I think ";
        TraceOperation 064526 (Print_obj (Con 144));
        Let b8 = M[002054];
        Let b9 = M[002055];
        Let b10 = M[Address(MakeHiLo(b8,b9))];
        if (IsZeroByte(b10)) {
          GamePrint "";
          TraceOperation 064528 (Print_ret "es are neat.\"");
          GamePrint "es are neat.\"\n";
          PopFrame return_address_11;
          JumpReturn: return_address_11, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
          TraceOperation 064528 (Print_ret "es are neat.\"");
          GamePrint "es are neat.\"\n";
          PopFrame return_address_12;
          JumpReturn: return_address_12, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 064485 (Print ". \"Hasn't worked for months. I keep wearing it only because I think ");
        GamePrint ". \"Hasn't worked for months. I keep wearing it only because I think ";
        TraceOperation 064526 (Print_obj (Con 144));
        Let b13 = M[002054];
        Let b14 = M[002055];
        Let b15 = M[Address(MakeHiLo(b13,b14))];
        if (IsZeroByte(b15)) {
          GamePrint "";
          TraceOperation 064528 (Print_ret "es are neat.\"");
          GamePrint "es are neat.\"\n";
          PopFrame return_address_16;
          JumpReturn: return_address_16, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
          TraceOperation 064528 (Print_ret "es are neat.\"");
          GamePrint "es are neat.\"\n";
          PopFrame return_address_17;
          JumpReturn: return_address_17, result: 1
        }
      }
    } else {
      PopFrame return_address_18;
      JumpReturn: return_address_18, result: 0
    }
  } else {
    PopFrame return_address_19;
    JumpReturn: return_address_19, result: 0
  }
--[442]--------------------------------------------------
LocRoutine 064540:
  MakeRoutineFrame 0;
  Jump: 064541
LocOp 064541:
  TraceOperation 064541 (Jz (Var (Global 139)) (Branch T (Dloc 064575)));
  Let b1 = M[008186];
  Let b2 = M[008187];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 064575
  } else {
    TraceOperation 064544 (Print_ret "\"Leave me alone,\" Prosser whimpers miserably.");
    GamePrint "\"Leave me alone,\" Prosser whimpers miserably.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 064575:
  TraceOperation 064575 (Print "\"Please step aside as I need to be able to ");
  GamePrint "\"Please step aside as I need to be able to ";
  TraceOperation 064604 (Jz (Var (Global 145)) (Branch T (Dloc 064623)));
  Let b1 = M[008198];
  Let b2 = M[008199];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 064623
  } else {
    TraceOperation 064607 (Print "clear this ");
    GamePrint "clear this ";
    TraceOperation 064614 (Print_obj (Con 171));
    Let b3 = M[002297];
    Let b4 = M[002298];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 064616 (Print_ret " away.\"");
      GamePrint " away.\"\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 064616 (Print_ret " away.\"");
      GamePrint " away.\"\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  }
LocOp 064623:
  TraceOperation 064623 (Print "knock ");
  GamePrint "knock ";
  TraceOperation 064628 (Je [Var (Global 120),Con 123] (Branch F (Dloc 064638)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),123)) {
    TraceOperation 064632 (Print "your");
    GamePrint "your";
    TraceOperation 064635 (Jump 064643);
    Jump: 064643
  } else {
    Jump: 064638
  }
LocOp 064638:
  TraceOperation 064638 (Print "that");
  GamePrint "that";
  Jump: 064643
LocOp 064643:
  TraceOperation 064643 (Print_ret " house down.\"");
  GamePrint " house down.\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[443]--------------------------------------------------
LocRoutine 064654:
  MakeRoutineFrame 0;
  Jump: 064655
LocOp 064655:
  TraceOperation 064655 (Je [Var (Global 203),Con 120,Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),120),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 064661 (Call (Floc 057712) [Con -11247] Sp);
    PushFrame 064661;
    SetLocal 1 -11247;
    JumpCall: 057712, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 064661:
  PushStack call_result;
  TraceOperation 064668 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[444]--------------------------------------------------
LocRoutine 064670:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 064673
LocOp 064673:
  TraceOperation 064673 (Jz (Var (Global 136)) (Branch T (Dloc 064699)));
  Let b1 = M[008180];
  Let b2 = M[008181];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 064699
  } else {
    TraceOperation 064676 (Print_ret "Ford is in the corner, snoring loudly.");
    GamePrint "Ford is in the corner, snoring loudly.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 064699:
  TraceOperation 064699 (Print_obj (Con 142));
  Let b1 = M[002036];
  Let b2 = M[002037];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 064701 (Print_ret " is here.");
    GamePrint " is here.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 064701 (Print_ret " is here.");
    GamePrint " is here.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[445]--------------------------------------------------
LocRoutine 064708:
  MakeRoutineFrame 0;
  Jump: 064709
LocOp 064709:
  TraceOperation 064709 (Je [Var (Global 120),Con 142] (Branch F (Dloc 064735)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 064713 (Je [Con 142,Var (Global 201)] (Branch F (Dloc 064726)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(142,MakeHiLo(b3,b4))) {
      TraceOperation 064717 (Call (Floc 022042) [Var (Global 203),Con 30,Var (Global 202)] Sp);
      Let b5 = M[008314];
      Let b6 = M[008315];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame 064717;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 30;
      SetLocal 3 MakeHiLo(b7,b8);
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 064726
    }
  } else {
    Jump: 064735
  }
LocReturn 064717:
  PushStack call_result;
  TraceOperation 064725 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 064726:
  TraceOperation 064726 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 30] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 064726;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 30;
  JumpCall: 022042, #actuals: 3
LocReturn 064726:
  PushStack call_result;
  TraceOperation 064734 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 064735:
  TraceOperation 064735 (Je [Con 142,Var (Global 195)] (Branch F (Dloc 065057)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(142,MakeHiLo(b1,b2))) {
    TraceOperation 064740 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 064753)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001871];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 064744 (Print_paddr (Var (Global 40)));
      Let b6 = M[007988];
      Let b7 = M[007989];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 064746 New_line;
      GamePrint "\n";
      TraceOperation 064747 (Call (Floc 043634) [] Sp);
      PushFrame 064747;
      JumpCall: 043634, #actuals: 0
    } else {
      Jump: 064753
    }
  } else {
    Jump: 065057
  }
LocReturn 064747:
  PushStack call_result;
  TraceOperation 064752 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[446]--------------------------------------------------
LocRoutine 064774:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 -19383;
  }
  Jump: 064777
LocOp 064777:
  TraceOperation 064777 (Inc_chk (Var (Global 56)) (Con 185) (Branch F (Dloc 064970)));
  Let b1 = M[008020];
  Let b2 = M[008021];
  if (IsZeroByte(b2)) {
    PopStack popped3;
    PushStack Add(popped3,1);
    if (GreaterThanEqual(popped3,185)) {
      TraceOperation 064782 (And (Con 69) (Con 168) (Global 175));
      SetByte 008258 0;
      SetByte 008259 0;
      TraceOperation 064786 New_line;
      GamePrint "\n";
      TraceOperation 064787 (Call (Floc 043634) [] Sp);
      PushFrame 064787;
      JumpCall: 043634, #actuals: 0
    } else {
      Jump: 064970
    }
  } else {
    if (LessThanByte(b2,16)) {
      SetLocal b2 Add(GetLocal(b2),1);
      if (GreaterThanEqual(GetLocal(b2),185)) {
        TraceOperation 064782 (And (Con 69) (Con 168) (Global 175));
        SetByte 008258 0;
        SetByte 008259 0;
        TraceOperation 064786 New_line;
        GamePrint "\n";
        TraceOperation 064787 (Call (Floc 043634) [] Sp);
        PushFrame 064787;
        JumpCall: 043634, #actuals: 0
      } else {
        Jump: 064970
      }
    } else {
      Let b4 = M[Offset(007908,Mul(2,Widen(MinusByte(b2,16))))];
      Let b5 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2,16)))),1)];
      SetByte Offset(007908,Mul(2,Widen(MinusByte(b2,16)))) HiByte(Add(MakeHiLo(b4,b5),1));
      SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b2,16)))),1) LoByte(Add(MakeHiLo(b4,b5),1));
      if (GreaterThanEqual(MakeHiLo(b4,b5),185)) {
        TraceOperation 064782 (And (Con 69) (Con 168) (Global 175));
        SetByte 008258 0;
        SetByte 008259 0;
        TraceOperation 064786 New_line;
        GamePrint "\n";
        TraceOperation 064787 (Call (Floc 043634) [] Sp);
        PushFrame 064787;
        JumpCall: 043634, #actuals: 0
      } else {
        Jump: 064970
      }
    }
  }
LocReturn 064787:
  PushStack call_result;
  TraceOperation 064792 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[447]--------------------------------------------------
LocRoutine 064894:
  MakeRoutineFrame 0;
  Jump: 064895
LocOp 064895:
  TraceOperation 064895 (Store (Con 211) (Con 142));
  SetByte 008298 0;
  SetByte 008299 142;
  TraceOperation 064898 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[448]--------------------------------------------------
LocRoutine 064924:
  MakeRoutineFrame 0;
  Jump: 064925
LocOp 064925:
  TraceOperation 064925 (Test (Con 29) (Var (Global 58)) (Branch F (Dloc 064955)));
  Let b1 = M[008024];
  Let b2 = M[008025];
  if (Equal(And(29,MakeHiLo(b1,b2)),MakeHiLo(b1,b2))) {
    TraceOperation 064929 (Jin (Con 8) (Var (Global 115)) (Branch F (Dloc 064983)));
    Let b3 = M[008138];
    Let b4 = M[008139];
    Let b5 = M[000827];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 064933 (Set_attr (Con 77) (Var (Global 58)));
      Let b6 = M[008024];
      Let b7 = M[008025];
      Let b8 = M[Offset(001444,Div8(MakeHiLo(b6,b7)))];
      SetByte Offset(001444,Div8(MakeHiLo(b6,b7))) SetBit(b8,SevenMinus(LoByte(Mod(MakeHiLo(b6,b7),8))));
      TraceOperation 064936 (Dec_chk (Con 14) (Var (Global 84)) (Branch T (Dloc 061506)));
      Let b9 = M[008076];
      Let b10 = M[008077];
      if (LessThanEqual(GetLocal(14),MakeHiLo(b9,b10))) {
        SetLocal 14 Sub(GetLocal(14),1);
        Jump: 061506
      } else {
        SetLocal 14 Sub(GetLocal(14),1);
        TraceOperation 064941 (Inc_chk (Con 187) (Var (Global 124)) (Branch F (Dloc 065021)));
        Let b11 = M[008250];
        Let b12 = M[008251];
        Let b13 = M[008156];
        Let b14 = M[008157];
        SetByte 008250 HiByte(Add(MakeHiLo(b11,b12),1));
        SetByte 008251 LoByte(Add(MakeHiLo(b11,b12),1));
        if (GreaterThanEqual(MakeHiLo(b11,b12),MakeHiLo(b13,b14))) {
          TraceOperation 064946 (Print "Ford, busy ");
          GamePrint "Ford, busy ";
          TraceOperation 064953 (Je [Var (Global 137),Con 2] (Branch F (Dloc 064973)));
          Let b15 = M[008182];
          Let b16 = M[008183];
          if (Equal(MakeHiLo(b15,b16),2)) {
            TraceOperation 064957 (Print "talking to Prosser");
            GamePrint "talking to Prosser";
            TraceOperation 064970 (Jump 064984);
            Jump: 064984
          } else {
            Jump: 064973
          }
        } else {
          Jump: 065021
        }
      }
    } else {
      Jump: 064983
    }
  } else {
    Jump: 064955
  }
LocOp 064973:
  TraceOperation 064973 (Print "scanning the sky ");
  GamePrint "scanning the sky ";
  Jump: 064984
LocOp 064984:
  TraceOperation 064984 (Je [Var (Global 0),Con 134] (Branch F (Dloc 065000)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),134)) {
    TraceOperation 064988 (Print "through the window");
    GamePrint "through the window";
    TraceOperation 064997 (Jump 065009);
    Jump: 065009
  } else {
    Jump: 065000
  }
LocOp 065000:
  TraceOperation 065000 (Je [Var (Global 137),Con 2] (Branch T (Dloc 065009)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (Equal(MakeHiLo(b1,b2),2)) {
    Jump: 065009
  } else {
    TraceOperation 065004 (Print "for something");
    GamePrint "for something";
    Jump: 065009
  }
LocOp 065009:
  TraceOperation 065009 (Print ", ignores you.");
  GamePrint ", ignores you.";
  TraceOperation 065020 New_line;
  GamePrint "\n";
  Jump: 065021
LocOp 065021:
  TraceOperation 065021 (Call (Floc 022320) [Con -32630,Con 2] Sp);
  PushFrame 065021;
  SetLocal 1 -32630;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 065021:
  PushStack call_result;
  TraceOperation 065029 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 065034 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[449]--------------------------------------------------
LocRoutine 065112:
  MakeRoutineFrame 0;
  Jump: 065113
LocOp 065113:
  TraceOperation 065113 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[450]--------------------------------------------------
LocRoutine 065116:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 63;
  }
  Jump: 065119
LocOp 065119:
  TraceOperation 065119 (Jin (Con 142) (Var (Global 0)) (Branch T (Dloc 065180)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002033];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 065180
  } else {
    TraceOperation 065123 (Je [Var (Global 203),Con 69] (Branch F (Dloc 065180)));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),69)) {
      TraceOperation 065127 (Print "In a state of anxiety and confusion you follow Ford down the lane...");
      GamePrint "In a state of anxiety and confusion you follow Ford down the lane...";
      TraceOperation 065168 New_line;
      GamePrint "\n";
      TraceOperation 065169 New_line;
      GamePrint "\n";
      TraceOperation 065170 (Get_parent (Con 142) Sp);
      Let b6 = M[002033];
      PushStack Widen(b6);
      TraceOperation 065173 (Call (Floc 042574) [Var Sp] Sp);
      PopStack popped7;
      PushFrame 065173;
      SetLocal 1 popped7;
      JumpCall: 042574, #actuals: 1
    } else {
      Jump: 065180
    }
  }
LocReturn 065173:
  PushStack call_result;
  TraceOperation 065179 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 065180:
  TraceOperation 065180 (Je [Var (Global 151),Con 3] (Branch F (Dloc 065195)));
  Let b1 = M[008210];
  Let b2 = M[008211];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 065184 (Je [Var (Global 203),Con 69] (Branch F (Dloc 065195)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),69)) {
      TraceOperation 065188 (Call (Floc 043620) [Con 19] Sp);
      PushFrame 065188;
      SetLocal 1 19;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 065195
    }
  } else {
    Jump: 065195
  }
LocReturn 065188:
  PushStack call_result;
  TraceOperation 065194 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 065195:
  TraceOperation 065195 (Je [Var (Global 203),Con 69] (Branch F (Dloc 065210)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 065199 (Je [Var (Global 151),Con 5] (Branch F (Dloc 065210)));
    Let b3 = M[008210];
    Let b4 = M[008211];
    if (Equal(MakeHiLo(b3,b4),5)) {
      TraceOperation 065203 (Call (Floc 043620) [Con 16] Sp);
      PushFrame 065203;
      SetLocal 1 16;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 065210
    }
  } else {
    Jump: 065210
  }
LocReturn 065203:
  PushStack call_result;
  TraceOperation 065209 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 065210:
  TraceOperation 065210 (Je [Var (Global 203),Con 130,Con 167] (Branch F (Dloc 065242)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),130),Equal(MakeHiLo(b1,b2),167))) {
    TraceOperation 065216 (Jz (Var (Global 136)) (Branch T (Dloc 065242)));
    Let b3 = M[008180];
    Let b4 = M[008181];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065242
    } else {
      TraceOperation 065219 (Print_ret "Rather like trying to wake the dead.");
      GamePrint "Rather like trying to wake the dead.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 065242
  }
LocOp 065242:
  TraceOperation 065242 (Je [Var (Global 203),Con 22] (Branch F (Dloc 065254)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 065246 (Je [Var (Global 202),Con 28] (Branch F (Dloc 065254)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 065250 (Print_paddr (Var (Global 33)));
      Let b5 = M[007974];
      Let b6 = M[007975];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 065252 New_line;
      GamePrint "\n";
      TraceOperation 065253 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 065254
    }
  } else {
    Jump: 065254
  }
LocOp 065254:
  TraceOperation 065254 (Je [Var (Global 203),Con 22] (Branch F (Dloc 065373)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 065259 (Je [Var (Global 202),Con 163] (Branch F (Dloc 065373)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),163)) {
      TraceOperation 065264 (Print_ret "Ford explains that the Earth has been demolished. To cheer you up, he points out that there are an awful lot of little planets like that around, and the Earth wasn't even a particularly nice one.");
      GamePrint "Ford explains that the Earth has been demolished. To cheer you up, he points out that there are an awful lot of little planets like that around, and the Earth wasn't even a particularly nice one.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 065373
    }
  } else {
    Jump: 065373
  }
LocOp 065373:
  TraceOperation 065373 (Je [Var (Global 203),Con 66] (Branch F (Dloc 065402)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 065377 (Je [Var (Global 201),Con 7] (Branch F (Dloc 065402)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),7)) {
      TraceOperation 065381 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 065402)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[001871];
      if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
        TraceOperation 065385 (Print_ret "You can't reach him in this wind.");
        GamePrint "You can't reach him in this wind.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        Jump: 065402
      }
    } else {
      Jump: 065402
    }
  } else {
    Jump: 065402
  }
LocOp 065402:
  TraceOperation 065402 (Je [Var (Global 203),Con 74] (Branch F (Dloc 065434)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 065406 (Test_attr (Con 148) (Con 6) (Branch T (Dloc 065418)));
    Let b3 = M[002083];
    if (TestBit(b3,1)) {
      Jump: 065418
    } else {
      TraceOperation 065410 (Call (Floc 022042) [Con 74,Con 148] Sp);
      PushFrame 065410;
      SetLocal 1 74;
      SetLocal 2 148;
      JumpCall: 022042, #actuals: 2
    }
  } else {
    Jump: 065434
  }
LocReturn 065410:
  PushStack call_result;
  TraceOperation 065417 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 065418:
  TraceOperation 065418 (Jz (Var (Global 136)) (Branch T Dfalse));
  Let b1 = M[008180];
  Let b2 = M[008181];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 065421 (Print_ret "\"Zzzzzzz...\"");
    GamePrint "\"Zzzzzzz...\"\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
LocOp 065434:
  TraceOperation 065434 (Je [Var (Global 203),Con 61] (Branch F (Dloc 065454)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 065438 (Jz (Var (Global 136)) (Branch T (Dloc 065454)));
    Let b3 = M[008180];
    Let b4 = M[008181];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065454
    } else {
      TraceOperation 065441 (Print_ret "He's sleeping.");
      GamePrint "He's sleeping.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 065454
  }
LocOp 065454:
  TraceOperation 065454 (Je [Var (Global 203),Con 23] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 065458 (Je [Var (Global 202),Con 139] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),139)) {
      TraceOperation 065462 (Je [Var (Global 137),Con 0,Con 1] (Branch F Dfalse));
      Let b5 = M[008182];
      Let b6 = M[008183];
      if (LogOr(Equal(MakeHiLo(b5,b6),0),Equal(MakeHiLo(b5,b6),1))) {
        TraceOperation 065468 (Call (Floc 022042) [Con 124,Con 139] Sp);
        PushFrame 065468;
        SetLocal 1 124;
        SetLocal 2 139;
        JumpCall: 022042, #actuals: 2
      } else {
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      }
    } else {
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 0
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
LocReturn 065468:
  PushStack call_result;
  TraceOperation 065475 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[451]--------------------------------------------------
LocRoutine 065476:
  MakeRoutineFrame 0;
  Jump: 065477
LocOp 065477:
  TraceOperation 065477 (Clear_attr (Con 148) (Con 6));
  Let b1 = M[002083];
  SetByte 002083 ClearBit(b1,1);
  TraceOperation 065480 (Call (Floc 022320) [Con -32630,Con 2] Sp);
  PushFrame 065480;
  SetLocal 1 -32630;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 065480:
  PushStack call_result;
  TraceOperation 065488 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 065493 (Store (Con 153) (Con 2));
  SetByte 008182 0;
  SetByte 008183 2;
  TraceOperation 065496 (Print " looks startled, then guilty. He starts to say something and stops. He starts to say something else and stops. Suddenly he seems to see the ");
  GamePrint " looks startled, then guilty. He starts to say something and stops. He starts to say something else and stops. Suddenly he seems to see the ";
  TraceOperation 065567 (Print_obj (Con 166));
  Let b2 = M[002252];
  Let b3 = M[002253];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 065569 (Print " for the first time, stops starting to say things and starts.\n\nHe seems to come to a momentous decision, says he has something of Earth-shattering importance to tell you, and stresses the importance of a quick drink at the Horse 'n Groom.\n\n");
    GamePrint " for the first time, stops starting to say things and starts.\n\nHe seems to come to a momentous decision, says he has something of Earth-shattering importance to tell you, and stresses the importance of a quick drink at the Horse 'n Groom.\n\n";
    TraceOperation 065712 (Call (Floc 057888) [Con -11244] Sp);
    PushFrame 065712;
    SetLocal 1 -11244;
    JumpCall: 057888, #actuals: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 065569 (Print " for the first time, stops starting to say things and starts.\n\nHe seems to come to a momentous decision, says he has something of Earth-shattering importance to tell you, and stresses the importance of a quick drink at the Horse 'n Groom.\n\n");
    GamePrint " for the first time, stops starting to say things and starts.\n\nHe seems to come to a momentous decision, says he has something of Earth-shattering importance to tell you, and stresses the importance of a quick drink at the Horse 'n Groom.\n\n";
    TraceOperation 065712 (Call (Floc 057888) [Con -11244] Sp);
    PushFrame 065712;
    SetLocal 1 -11244;
    JumpCall: 057888, #actuals: 1
  }
LocReturn 065712:
  PushStack call_result;
  TraceOperation 065719 (Print " Ford goes off for a quiet word with Prosser. From where you're lying, you cannot hear what's happening, although they seem deeply engrossed in ");
  GamePrint " Ford goes off for a quiet word with Prosser. From where you're lying, you cannot hear what's happening, although they seem deeply engrossed in ";
  TraceOperation 065806 (Print_obj (Con 148));
  Let b1 = M[002090];
  Let b2 = M[002091];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 065808 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 065808 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[452]--------------------------------------------------
LocRoutine 065812:
  MakeRoutineFrame 0;
  Jump: 065813
LocOp 065813:
  TraceOperation 065813 (Call (Floc 022320) [Con -32630,Con -1] Sp);
  PushFrame 065813;
  SetLocal 1 -32630;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 065813:
  PushStack call_result;
  TraceOperation 065822 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 065827 (Call (Floc 092774) [Con 31] Sp);
  PushFrame 065827;
  SetLocal 1 31;
  JumpCall: 092774, #actuals: 1
LocReturn 065827:
  PushStack call_result;
  TraceOperation 065833 (Jz (Var Sp) (Branch T (Dloc 066486)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 066486
  } else {
    TraceOperation 065837 (Inc (Con 150));
    Let b2 = M[008176];
    Let b3 = M[008177];
    SetByte 008176 HiByte(Add(MakeHiLo(b2,b3),1));
    SetByte 008177 LoByte(Add(MakeHiLo(b2,b3),1));
    TraceOperation 065839 (Je [Var (Global 134),Con 1] (Branch F (Dloc 065942)));
    Let b4 = M[008176];
    Let b5 = M[008177];
    if (Equal(MakeHiLo(b4,b5),1)) {
      TraceOperation 065844 (Insert_obj (Con 142) (Var (Global 0)));
      Let b6 = M[007908];
      Let b7 = M[007909];
      Let b8 = M[002033];
      if (IsZero(Widen(b8))) {
        SetByte 002033 b7;
        Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
        SetByte 002034 LoByte(Widen(b9));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 142;
        TraceOperation 065847 New_line;
        GamePrint "\n";
        TraceOperation 065848 (Print "\"This looks like that incredible new");
        GamePrint "\"This looks like that incredible new";
        TraceOperation 065865 (Print_paddr (Var (Global 11)));
        Let b10 = M[007930];
        Let b11 = M[007931];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
        TraceOperation 065867 (Print " spaceship, ");
        GamePrint " spaceship, ";
        TraceOperation 065876 (Print_obj (Con 220));
        Let b12 = M[002738];
        Let b13 = M[002739];
        Let b14 = M[Address(MakeHiLo(b12,b13))];
        if (IsZeroByte(b14)) {
          GamePrint "";
          TraceOperation 065878 (Print "!\" says Ford, with growing excitement.");
          GamePrint "!\" says Ford, with growing excitement.";
          TraceOperation 065901 New_line;
          GamePrint "\n";
          TraceOperation 065902 New_line;
          GamePrint "\n";
          TraceOperation 065903 (Print_paddr (Var (Global 21)));
          Let b15 = M[007950];
          Let b16 = M[007951];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b15,b16)));
          TraceOperation 065905 (Print_obj (Con 198));
          Let b17 = M[002540];
          Let b18 = M[002541];
          Let b19 = M[Address(MakeHiLo(b17,b18))];
          if (IsZeroByte(b19)) {
            GamePrint "";
            TraceOperation 065907 (Print ". We have just picked up two hitchhikers");
            GamePrint ". We have just picked up two hitchhikers";
            TraceOperation 065932 (Call (Floc 057772) [Con -11241] Sp);
            PushFrame 065932;
            SetLocal 1 -11241;
            JumpCall: 057772, #actuals: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b17,b18)),1));
            TraceOperation 065907 (Print ". We have just picked up two hitchhikers");
            GamePrint ". We have just picked up two hitchhikers";
            TraceOperation 065932 (Call (Floc 057772) [Con -11241] Sp);
            PushFrame 065932;
            SetLocal 1 -11241;
            JumpCall: 057772, #actuals: 1
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b12,b13)),1));
          TraceOperation 065878 (Print "!\" says Ford, with growing excitement.");
          GamePrint "!\" says Ford, with growing excitement.";
          TraceOperation 065901 New_line;
          GamePrint "\n";
          TraceOperation 065902 New_line;
          GamePrint "\n";
          TraceOperation 065903 (Print_paddr (Var (Global 21)));
          Let b20 = M[007950];
          Let b21 = M[007951];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b20,b21)));
          TraceOperation 065905 (Print_obj (Con 198));
          Let b22 = M[002540];
          Let b23 = M[002541];
          Let b24 = M[Address(MakeHiLo(b22,b23))];
          if (IsZeroByte(b24)) {
            GamePrint "";
            TraceOperation 065907 (Print ". We have just picked up two hitchhikers");
            GamePrint ". We have just picked up two hitchhikers";
            TraceOperation 065932 (Call (Floc 057772) [Con -11241] Sp);
            PushFrame 065932;
            SetLocal 1 -11241;
            JumpCall: 057772, #actuals: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b22,b23)),1));
            TraceOperation 065907 (Print ". We have just picked up two hitchhikers");
            GamePrint ". We have just picked up two hitchhikers";
            TraceOperation 065932 (Call (Floc 057772) [Con -11241] Sp);
            PushFrame 065932;
            SetLocal 1 -11241;
            JumpCall: 057772, #actuals: 1
          }
        }
      } else {
        Let b25 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
        if (Equal(Widen(b25),142)) {
          Let b26 = M[002034];
          SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b26));
          SetByte 002033 b7;
          Let b27 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
          SetByte 002034 LoByte(Widen(b27));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 142;
          TraceOperation 065847 New_line;
          GamePrint "\n";
          TraceOperation 065848 (Print "\"This looks like that incredible new");
          GamePrint "\"This looks like that incredible new";
          TraceOperation 065865 (Print_paddr (Var (Global 11)));
          Let b28 = M[007930];
          Let b29 = M[007931];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b28,b29)));
          TraceOperation 065867 (Print " spaceship, ");
          GamePrint " spaceship, ";
          TraceOperation 065876 (Print_obj (Con 220));
          Let b30 = M[002738];
          Let b31 = M[002739];
          Let b32 = M[Address(MakeHiLo(b30,b31))];
          if (IsZeroByte(b32)) {
            GamePrint "";
            TraceOperation 065878 (Print "!\" says Ford, with growing excitement.");
            GamePrint "!\" says Ford, with growing excitement.";
            TraceOperation 065901 New_line;
            GamePrint "\n";
            TraceOperation 065902 New_line;
            GamePrint "\n";
            TraceOperation 065903 (Print_paddr (Var (Global 21)));
            Let b33 = M[007950];
            Let b34 = M[007951];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b33,b34)));
            TraceOperation 065905 (Print_obj (Con 198));
            Let b35 = M[002540];
            Let b36 = M[002541];
            Let b37 = M[Address(MakeHiLo(b35,b36))];
            if (IsZeroByte(b37)) {
              GamePrint "";
              TraceOperation 065907 (Print ". We have just picked up two hitchhikers");
              GamePrint ". We have just picked up two hitchhikers";
              TraceOperation 065932 (Call (Floc 057772) [Con -11241] Sp);
              PushFrame 065932;
              SetLocal 1 -11241;
              JumpCall: 057772, #actuals: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b35,b36)),1));
              TraceOperation 065907 (Print ". We have just picked up two hitchhikers");
              GamePrint ". We have just picked up two hitchhikers";
              TraceOperation 065932 (Call (Floc 057772) [Con -11241] Sp);
              PushFrame 065932;
              SetLocal 1 -11241;
              JumpCall: 057772, #actuals: 1
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b30,b31)),1));
            TraceOperation 065878 (Print "!\" says Ford, with growing excitement.");
            GamePrint "!\" says Ford, with growing excitement.";
            TraceOperation 065901 New_line;
            GamePrint "\n";
            TraceOperation 065902 New_line;
            GamePrint "\n";
            TraceOperation 065903 (Print_paddr (Var (Global 21)));
            Let b38 = M[007950];
            Let b39 = M[007951];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b38,b39)));
            TraceOperation 065905 (Print_obj (Con 198));
            Let b40 = M[002540];
            Let b41 = M[002541];
            Let b42 = M[Address(MakeHiLo(b40,b41))];
            if (IsZeroByte(b42)) {
              GamePrint "";
              TraceOperation 065907 (Print ". We have just picked up two hitchhikers");
              GamePrint ". We have just picked up two hitchhikers";
              TraceOperation 065932 (Call (Floc 057772) [Con -11241] Sp);
              PushFrame 065932;
              SetLocal 1 -11241;
              JumpCall: 057772, #actuals: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b40,b41)),1));
              TraceOperation 065907 (Print ". We have just picked up two hitchhikers");
              GamePrint ". We have just picked up two hitchhikers";
              TraceOperation 065932 (Call (Floc 057772) [Con -11241] Sp);
              PushFrame 065932;
              SetLocal 1 -11241;
              JumpCall: 057772, #actuals: 1
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 065942
    }
  }
LocReturn 065932:
  PushStack call_result;
  TraceOperation 065939 (Print_ret "\"");
  GamePrint "\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 065942:
  TraceOperation 065942 (Je [Var (Global 134),Con 2] (Branch F (Dloc 066017)));
  Let b1 = M[008176];
  Let b2 = M[008177];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 065947 New_line;
    GamePrint "\n";
    TraceOperation 065948 (Print "\"Come on, let's look for the Bridge.\" You follow Ford, and eventually come to the...");
    GamePrint "\"Come on, let's look for the Bridge.\" You follow Ford, and eventually come to the...";
    TraceOperation 066005 New_line;
    GamePrint "\n";
    TraceOperation 066006 New_line;
    GamePrint "\n";
    TraceOperation 066007 (Call (Floc 042574) [Con 201] Sp);
    PushFrame 066007;
    SetLocal 1 201;
    JumpCall: 042574, #actuals: 1
  } else {
    Jump: 066017
  }
LocReturn 066007:
  PushStack call_result;
  TraceOperation 066013 (Insert_obj (Con 142) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002033];
  if (IsZero(Widen(b3))) {
    SetByte 002033 b2;
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 002034 LoByte(Widen(b4));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 142;
    TraceOperation 066016 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b6),142)) {
      Let b7 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b7));
      SetByte 002033 b2;
      Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 002034 LoByte(Widen(b8));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 142;
      TraceOperation 066016 Rtrue;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 066017:
  TraceOperation 066017 (Je [Var (Global 134),Con 3] (Branch F (Dloc 066243)));
  Let b1 = M[008176];
  Let b2 = M[008177];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 066022 (Je [Var (Global 0),Con 201] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),201)) {
      TraceOperation 066026 New_line;
      GamePrint "\n";
      TraceOperation 066027 (Print "\"Hey, Zaphod, how ya doing?\" says Ford. He's cool. \"Not bad, Ford. Great to see you,\" replies Zaphod. He's cooler. You suddenly realise that the woman is Tricia MacMillan (\"Call me ");
      GamePrint "\"Hey, Zaphod, how ya doing?\" says Ford. He's cool. \"Not bad, Ford. Great to see you,\" replies Zaphod. He's cooler. You suddenly realise that the woman is Tricia MacMillan (\"Call me ";
      TraceOperation 066148 (Print_obj (Con 194));
      Let b5 = M[002504];
      Let b6 = M[002505];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 066150 (Print_ret "\"), whom you were trying to pick up at a party in Islington just a few weeks ago, and that Zaphod is the guy she eventually left the party with! Odd.");
        GamePrint "\"), whom you were trying to pick up at a party in Islington just a few weeks ago, and that Zaphod is the guy she eventually left the party with! Odd.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 066150 (Print_ret "\"), whom you were trying to pick up at a party in Islington just a few weeks ago, and that Zaphod is the guy she eventually left the party with! Odd.");
        GamePrint "\"), whom you were trying to pick up at a party in Islington just a few weeks ago, and that Zaphod is the guy she eventually left the party with! Odd.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      }
    } else {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 0
    }
  } else {
    Jump: 066243
  }
LocOp 066243:
  TraceOperation 066243 (Je [Var (Global 134),Con 4] (Branch F Dfalse));
  Let b1 = M[008176];
  Let b2 = M[008177];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 066247 (Insert_obj (Con 142) (Con 219));
    Let b3 = M[002033];
    if (IsZero(Widen(b3))) {
      SetByte 002033 219;
      Let b4 = M[002728];
      SetByte 002034 LoByte(Widen(b4));
      SetByte 002728 142;
      TraceOperation 066250 (Insert_obj (Con 195) (Con 219));
      Let b5 = M[002510];
      if (IsZero(Widen(b5))) {
        SetByte 002510 219;
        Let b6 = M[002728];
        SetByte 002511 LoByte(Widen(b6));
        SetByte 002728 195;
        TraceOperation 066253 (Insert_obj (Con 194) (Con 219));
        Let b7 = M[002501];
        if (IsZero(Widen(b7))) {
          SetByte 002501 219;
          Let b8 = M[002728];
          SetByte 002502 LoByte(Widen(b8));
          SetByte 002728 194;
          TraceOperation 066256 (Insert_obj (Con 193) (Con 201));
          Let b9 = M[002492];
          if (IsZero(Widen(b9))) {
            SetByte 002492 201;
            Let b10 = M[002566];
            SetByte 002493 LoByte(Widen(b10));
            SetByte 002566 193;
            TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
            Let b11 = M[002024];
            if (IsZero(Widen(b11))) {
              SetByte 002024 201;
              Let b12 = M[002566];
              SetByte 002025 LoByte(Widen(b12));
              SetByte 002566 141;
              TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
              Let b13 = M[002491];
              SetByte 002491 ClearBit(b13,4);
              TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
              Let b14 = M[002490];
              SetByte 002490 ClearBit(b14,2);
              TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
              PushFrame 066268;
              SetLocal 1 -32630;
              JumpCall: 022340, #actuals: 1
            } else {
              Let b15 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
              if (Equal(Widen(b15),141)) {
                Let b16 = M[002025];
                SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b16));
                SetByte 002024 201;
                Let b17 = M[002566];
                SetByte 002025 LoByte(Widen(b17));
                SetByte 002566 141;
                TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                Let b18 = M[002491];
                SetByte 002491 ClearBit(b18,4);
                TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                Let b19 = M[002490];
                SetByte 002490 ClearBit(b19,2);
                TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                PushFrame 066268;
                SetLocal 1 -32630;
                JumpCall: 022340, #actuals: 1
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b20 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
            if (Equal(Widen(b20),193)) {
              Let b21 = M[002493];
              SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b21));
              SetByte 002492 201;
              Let b22 = M[002566];
              SetByte 002493 LoByte(Widen(b22));
              SetByte 002566 193;
              TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
              Let b23 = M[002024];
              if (IsZero(Widen(b23))) {
                SetByte 002024 201;
                Let b24 = M[002566];
                SetByte 002025 LoByte(Widen(b24));
                SetByte 002566 141;
                TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                Let b25 = M[002491];
                SetByte 002491 ClearBit(b25,4);
                TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                Let b26 = M[002490];
                SetByte 002490 ClearBit(b26,2);
                TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                PushFrame 066268;
                SetLocal 1 -32630;
                JumpCall: 022340, #actuals: 1
              } else {
                Let b27 = M[Offset(Offset(000751,Mul(Widen(b23),9)),6)];
                if (Equal(Widen(b27),141)) {
                  Let b28 = M[002025];
                  SetByte Offset(Offset(000751,Mul(Widen(b23),9)),6) LoByte(Widen(b28));
                  SetByte 002024 201;
                  Let b29 = M[002566];
                  SetByte 002025 LoByte(Widen(b29));
                  SetByte 002566 141;
                  TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                  Let b30 = M[002491];
                  SetByte 002491 ClearBit(b30,4);
                  TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                  Let b31 = M[002490];
                  SetByte 002490 ClearBit(b31,2);
                  TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                  PushFrame 066268;
                  SetLocal 1 -32630;
                  JumpCall: 022340, #actuals: 1
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b32 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
          if (Equal(Widen(b32),194)) {
            Let b33 = M[002502];
            SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b33));
            SetByte 002501 219;
            Let b34 = M[002728];
            SetByte 002502 LoByte(Widen(b34));
            SetByte 002728 194;
            TraceOperation 066256 (Insert_obj (Con 193) (Con 201));
            Let b35 = M[002492];
            if (IsZero(Widen(b35))) {
              SetByte 002492 201;
              Let b36 = M[002566];
              SetByte 002493 LoByte(Widen(b36));
              SetByte 002566 193;
              TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
              Let b37 = M[002024];
              if (IsZero(Widen(b37))) {
                SetByte 002024 201;
                Let b38 = M[002566];
                SetByte 002025 LoByte(Widen(b38));
                SetByte 002566 141;
                TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                Let b39 = M[002491];
                SetByte 002491 ClearBit(b39,4);
                TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                Let b40 = M[002490];
                SetByte 002490 ClearBit(b40,2);
                TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                PushFrame 066268;
                SetLocal 1 -32630;
                JumpCall: 022340, #actuals: 1
              } else {
                Let b41 = M[Offset(Offset(000751,Mul(Widen(b37),9)),6)];
                if (Equal(Widen(b41),141)) {
                  Let b42 = M[002025];
                  SetByte Offset(Offset(000751,Mul(Widen(b37),9)),6) LoByte(Widen(b42));
                  SetByte 002024 201;
                  Let b43 = M[002566];
                  SetByte 002025 LoByte(Widen(b43));
                  SetByte 002566 141;
                  TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                  Let b44 = M[002491];
                  SetByte 002491 ClearBit(b44,4);
                  TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                  Let b45 = M[002490];
                  SetByte 002490 ClearBit(b45,2);
                  TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                  PushFrame 066268;
                  SetLocal 1 -32630;
                  JumpCall: 022340, #actuals: 1
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b46 = M[Offset(Offset(000751,Mul(Widen(b35),9)),6)];
              if (Equal(Widen(b46),193)) {
                Let b47 = M[002493];
                SetByte Offset(Offset(000751,Mul(Widen(b35),9)),6) LoByte(Widen(b47));
                SetByte 002492 201;
                Let b48 = M[002566];
                SetByte 002493 LoByte(Widen(b48));
                SetByte 002566 193;
                TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
                Let b49 = M[002024];
                if (IsZero(Widen(b49))) {
                  SetByte 002024 201;
                  Let b50 = M[002566];
                  SetByte 002025 LoByte(Widen(b50));
                  SetByte 002566 141;
                  TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                  Let b51 = M[002491];
                  SetByte 002491 ClearBit(b51,4);
                  TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                  Let b52 = M[002490];
                  SetByte 002490 ClearBit(b52,2);
                  TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                  PushFrame 066268;
                  SetLocal 1 -32630;
                  JumpCall: 022340, #actuals: 1
                } else {
                  Let b53 = M[Offset(Offset(000751,Mul(Widen(b49),9)),6)];
                  if (Equal(Widen(b53),141)) {
                    Let b54 = M[002025];
                    SetByte Offset(Offset(000751,Mul(Widen(b49),9)),6) LoByte(Widen(b54));
                    SetByte 002024 201;
                    Let b55 = M[002566];
                    SetByte 002025 LoByte(Widen(b55));
                    SetByte 002566 141;
                    TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                    Let b56 = M[002491];
                    SetByte 002491 ClearBit(b56,4);
                    TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                    Let b57 = M[002490];
                    SetByte 002490 ClearBit(b57,2);
                    TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                    PushFrame 066268;
                    SetLocal 1 -32630;
                    JumpCall: 022340, #actuals: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b58 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b58),195)) {
          Let b59 = M[002511];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b59));
          SetByte 002510 219;
          Let b60 = M[002728];
          SetByte 002511 LoByte(Widen(b60));
          SetByte 002728 195;
          TraceOperation 066253 (Insert_obj (Con 194) (Con 219));
          Let b61 = M[002501];
          if (IsZero(Widen(b61))) {
            SetByte 002501 219;
            Let b62 = M[002728];
            SetByte 002502 LoByte(Widen(b62));
            SetByte 002728 194;
            TraceOperation 066256 (Insert_obj (Con 193) (Con 201));
            Let b63 = M[002492];
            if (IsZero(Widen(b63))) {
              SetByte 002492 201;
              Let b64 = M[002566];
              SetByte 002493 LoByte(Widen(b64));
              SetByte 002566 193;
              TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
              Let b65 = M[002024];
              if (IsZero(Widen(b65))) {
                SetByte 002024 201;
                Let b66 = M[002566];
                SetByte 002025 LoByte(Widen(b66));
                SetByte 002566 141;
                TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                Let b67 = M[002491];
                SetByte 002491 ClearBit(b67,4);
                TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                Let b68 = M[002490];
                SetByte 002490 ClearBit(b68,2);
                TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                PushFrame 066268;
                SetLocal 1 -32630;
                JumpCall: 022340, #actuals: 1
              } else {
                Let b69 = M[Offset(Offset(000751,Mul(Widen(b65),9)),6)];
                if (Equal(Widen(b69),141)) {
                  Let b70 = M[002025];
                  SetByte Offset(Offset(000751,Mul(Widen(b65),9)),6) LoByte(Widen(b70));
                  SetByte 002024 201;
                  Let b71 = M[002566];
                  SetByte 002025 LoByte(Widen(b71));
                  SetByte 002566 141;
                  TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                  Let b72 = M[002491];
                  SetByte 002491 ClearBit(b72,4);
                  TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                  Let b73 = M[002490];
                  SetByte 002490 ClearBit(b73,2);
                  TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                  PushFrame 066268;
                  SetLocal 1 -32630;
                  JumpCall: 022340, #actuals: 1
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b74 = M[Offset(Offset(000751,Mul(Widen(b63),9)),6)];
              if (Equal(Widen(b74),193)) {
                Let b75 = M[002493];
                SetByte Offset(Offset(000751,Mul(Widen(b63),9)),6) LoByte(Widen(b75));
                SetByte 002492 201;
                Let b76 = M[002566];
                SetByte 002493 LoByte(Widen(b76));
                SetByte 002566 193;
                TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
                Let b77 = M[002024];
                if (IsZero(Widen(b77))) {
                  SetByte 002024 201;
                  Let b78 = M[002566];
                  SetByte 002025 LoByte(Widen(b78));
                  SetByte 002566 141;
                  TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                  Let b79 = M[002491];
                  SetByte 002491 ClearBit(b79,4);
                  TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                  Let b80 = M[002490];
                  SetByte 002490 ClearBit(b80,2);
                  TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                  PushFrame 066268;
                  SetLocal 1 -32630;
                  JumpCall: 022340, #actuals: 1
                } else {
                  Let b81 = M[Offset(Offset(000751,Mul(Widen(b77),9)),6)];
                  if (Equal(Widen(b81),141)) {
                    Let b82 = M[002025];
                    SetByte Offset(Offset(000751,Mul(Widen(b77),9)),6) LoByte(Widen(b82));
                    SetByte 002024 201;
                    Let b83 = M[002566];
                    SetByte 002025 LoByte(Widen(b83));
                    SetByte 002566 141;
                    TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                    Let b84 = M[002491];
                    SetByte 002491 ClearBit(b84,4);
                    TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                    Let b85 = M[002490];
                    SetByte 002490 ClearBit(b85,2);
                    TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                    PushFrame 066268;
                    SetLocal 1 -32630;
                    JumpCall: 022340, #actuals: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b86 = M[Offset(Offset(000751,Mul(Widen(b61),9)),6)];
            if (Equal(Widen(b86),194)) {
              Let b87 = M[002502];
              SetByte Offset(Offset(000751,Mul(Widen(b61),9)),6) LoByte(Widen(b87));
              SetByte 002501 219;
              Let b88 = M[002728];
              SetByte 002502 LoByte(Widen(b88));
              SetByte 002728 194;
              TraceOperation 066256 (Insert_obj (Con 193) (Con 201));
              Let b89 = M[002492];
              if (IsZero(Widen(b89))) {
                SetByte 002492 201;
                Let b90 = M[002566];
                SetByte 002493 LoByte(Widen(b90));
                SetByte 002566 193;
                TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
                Let b91 = M[002024];
                if (IsZero(Widen(b91))) {
                  SetByte 002024 201;
                  Let b92 = M[002566];
                  SetByte 002025 LoByte(Widen(b92));
                  SetByte 002566 141;
                  TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                  Let b93 = M[002491];
                  SetByte 002491 ClearBit(b93,4);
                  TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                  Let b94 = M[002490];
                  SetByte 002490 ClearBit(b94,2);
                  TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                  PushFrame 066268;
                  SetLocal 1 -32630;
                  JumpCall: 022340, #actuals: 1
                } else {
                  Let b95 = M[Offset(Offset(000751,Mul(Widen(b91),9)),6)];
                  if (Equal(Widen(b95),141)) {
                    Let b96 = M[002025];
                    SetByte Offset(Offset(000751,Mul(Widen(b91),9)),6) LoByte(Widen(b96));
                    SetByte 002024 201;
                    Let b97 = M[002566];
                    SetByte 002025 LoByte(Widen(b97));
                    SetByte 002566 141;
                    TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                    Let b98 = M[002491];
                    SetByte 002491 ClearBit(b98,4);
                    TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                    Let b99 = M[002490];
                    SetByte 002490 ClearBit(b99,2);
                    TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                    PushFrame 066268;
                    SetLocal 1 -32630;
                    JumpCall: 022340, #actuals: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b100 = M[Offset(Offset(000751,Mul(Widen(b89),9)),6)];
                if (Equal(Widen(b100),193)) {
                  Let b101 = M[002493];
                  SetByte Offset(Offset(000751,Mul(Widen(b89),9)),6) LoByte(Widen(b101));
                  SetByte 002492 201;
                  Let b102 = M[002566];
                  SetByte 002493 LoByte(Widen(b102));
                  SetByte 002566 193;
                  TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
                  Let b103 = M[002024];
                  if (IsZero(Widen(b103))) {
                    SetByte 002024 201;
                    Let b104 = M[002566];
                    SetByte 002025 LoByte(Widen(b104));
                    SetByte 002566 141;
                    TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                    Let b105 = M[002491];
                    SetByte 002491 ClearBit(b105,4);
                    TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                    Let b106 = M[002490];
                    SetByte 002490 ClearBit(b106,2);
                    TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                    PushFrame 066268;
                    SetLocal 1 -32630;
                    JumpCall: 022340, #actuals: 1
                  } else {
                    Let b107 = M[Offset(Offset(000751,Mul(Widen(b103),9)),6)];
                    if (Equal(Widen(b107),141)) {
                      Let b108 = M[002025];
                      SetByte Offset(Offset(000751,Mul(Widen(b103),9)),6) LoByte(Widen(b108));
                      SetByte 002024 201;
                      Let b109 = M[002566];
                      SetByte 002025 LoByte(Widen(b109));
                      SetByte 002566 141;
                      TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                      Let b110 = M[002491];
                      SetByte 002491 ClearBit(b110,4);
                      TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                      Let b111 = M[002490];
                      SetByte 002490 ClearBit(b111,2);
                      TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                      PushFrame 066268;
                      SetLocal 1 -32630;
                      JumpCall: 022340, #actuals: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b112 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b112),142)) {
        Let b113 = M[002034];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b113));
        SetByte 002033 219;
        Let b114 = M[002728];
        SetByte 002034 LoByte(Widen(b114));
        SetByte 002728 142;
        TraceOperation 066250 (Insert_obj (Con 195) (Con 219));
        Let b115 = M[002510];
        if (IsZero(Widen(b115))) {
          SetByte 002510 219;
          Let b116 = M[002728];
          SetByte 002511 LoByte(Widen(b116));
          SetByte 002728 195;
          TraceOperation 066253 (Insert_obj (Con 194) (Con 219));
          Let b117 = M[002501];
          if (IsZero(Widen(b117))) {
            SetByte 002501 219;
            Let b118 = M[002728];
            SetByte 002502 LoByte(Widen(b118));
            SetByte 002728 194;
            TraceOperation 066256 (Insert_obj (Con 193) (Con 201));
            Let b119 = M[002492];
            if (IsZero(Widen(b119))) {
              SetByte 002492 201;
              Let b120 = M[002566];
              SetByte 002493 LoByte(Widen(b120));
              SetByte 002566 193;
              TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
              Let b121 = M[002024];
              if (IsZero(Widen(b121))) {
                SetByte 002024 201;
                Let b122 = M[002566];
                SetByte 002025 LoByte(Widen(b122));
                SetByte 002566 141;
                TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                Let b123 = M[002491];
                SetByte 002491 ClearBit(b123,4);
                TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                Let b124 = M[002490];
                SetByte 002490 ClearBit(b124,2);
                TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                PushFrame 066268;
                SetLocal 1 -32630;
                JumpCall: 022340, #actuals: 1
              } else {
                Let b125 = M[Offset(Offset(000751,Mul(Widen(b121),9)),6)];
                if (Equal(Widen(b125),141)) {
                  Let b126 = M[002025];
                  SetByte Offset(Offset(000751,Mul(Widen(b121),9)),6) LoByte(Widen(b126));
                  SetByte 002024 201;
                  Let b127 = M[002566];
                  SetByte 002025 LoByte(Widen(b127));
                  SetByte 002566 141;
                  TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                  Let b128 = M[002491];
                  SetByte 002491 ClearBit(b128,4);
                  TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                  Let b129 = M[002490];
                  SetByte 002490 ClearBit(b129,2);
                  TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                  PushFrame 066268;
                  SetLocal 1 -32630;
                  JumpCall: 022340, #actuals: 1
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b130 = M[Offset(Offset(000751,Mul(Widen(b119),9)),6)];
              if (Equal(Widen(b130),193)) {
                Let b131 = M[002493];
                SetByte Offset(Offset(000751,Mul(Widen(b119),9)),6) LoByte(Widen(b131));
                SetByte 002492 201;
                Let b132 = M[002566];
                SetByte 002493 LoByte(Widen(b132));
                SetByte 002566 193;
                TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
                Let b133 = M[002024];
                if (IsZero(Widen(b133))) {
                  SetByte 002024 201;
                  Let b134 = M[002566];
                  SetByte 002025 LoByte(Widen(b134));
                  SetByte 002566 141;
                  TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                  Let b135 = M[002491];
                  SetByte 002491 ClearBit(b135,4);
                  TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                  Let b136 = M[002490];
                  SetByte 002490 ClearBit(b136,2);
                  TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                  PushFrame 066268;
                  SetLocal 1 -32630;
                  JumpCall: 022340, #actuals: 1
                } else {
                  Let b137 = M[Offset(Offset(000751,Mul(Widen(b133),9)),6)];
                  if (Equal(Widen(b137),141)) {
                    Let b138 = M[002025];
                    SetByte Offset(Offset(000751,Mul(Widen(b133),9)),6) LoByte(Widen(b138));
                    SetByte 002024 201;
                    Let b139 = M[002566];
                    SetByte 002025 LoByte(Widen(b139));
                    SetByte 002566 141;
                    TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                    Let b140 = M[002491];
                    SetByte 002491 ClearBit(b140,4);
                    TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                    Let b141 = M[002490];
                    SetByte 002490 ClearBit(b141,2);
                    TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                    PushFrame 066268;
                    SetLocal 1 -32630;
                    JumpCall: 022340, #actuals: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b142 = M[Offset(Offset(000751,Mul(Widen(b117),9)),6)];
            if (Equal(Widen(b142),194)) {
              Let b143 = M[002502];
              SetByte Offset(Offset(000751,Mul(Widen(b117),9)),6) LoByte(Widen(b143));
              SetByte 002501 219;
              Let b144 = M[002728];
              SetByte 002502 LoByte(Widen(b144));
              SetByte 002728 194;
              TraceOperation 066256 (Insert_obj (Con 193) (Con 201));
              Let b145 = M[002492];
              if (IsZero(Widen(b145))) {
                SetByte 002492 201;
                Let b146 = M[002566];
                SetByte 002493 LoByte(Widen(b146));
                SetByte 002566 193;
                TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
                Let b147 = M[002024];
                if (IsZero(Widen(b147))) {
                  SetByte 002024 201;
                  Let b148 = M[002566];
                  SetByte 002025 LoByte(Widen(b148));
                  SetByte 002566 141;
                  TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                  Let b149 = M[002491];
                  SetByte 002491 ClearBit(b149,4);
                  TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                  Let b150 = M[002490];
                  SetByte 002490 ClearBit(b150,2);
                  TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                  PushFrame 066268;
                  SetLocal 1 -32630;
                  JumpCall: 022340, #actuals: 1
                } else {
                  Let b151 = M[Offset(Offset(000751,Mul(Widen(b147),9)),6)];
                  if (Equal(Widen(b151),141)) {
                    Let b152 = M[002025];
                    SetByte Offset(Offset(000751,Mul(Widen(b147),9)),6) LoByte(Widen(b152));
                    SetByte 002024 201;
                    Let b153 = M[002566];
                    SetByte 002025 LoByte(Widen(b153));
                    SetByte 002566 141;
                    TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                    Let b154 = M[002491];
                    SetByte 002491 ClearBit(b154,4);
                    TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                    Let b155 = M[002490];
                    SetByte 002490 ClearBit(b155,2);
                    TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                    PushFrame 066268;
                    SetLocal 1 -32630;
                    JumpCall: 022340, #actuals: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b156 = M[Offset(Offset(000751,Mul(Widen(b145),9)),6)];
                if (Equal(Widen(b156),193)) {
                  Let b157 = M[002493];
                  SetByte Offset(Offset(000751,Mul(Widen(b145),9)),6) LoByte(Widen(b157));
                  SetByte 002492 201;
                  Let b158 = M[002566];
                  SetByte 002493 LoByte(Widen(b158));
                  SetByte 002566 193;
                  TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
                  Let b159 = M[002024];
                  if (IsZero(Widen(b159))) {
                    SetByte 002024 201;
                    Let b160 = M[002566];
                    SetByte 002025 LoByte(Widen(b160));
                    SetByte 002566 141;
                    TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                    Let b161 = M[002491];
                    SetByte 002491 ClearBit(b161,4);
                    TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                    Let b162 = M[002490];
                    SetByte 002490 ClearBit(b162,2);
                    TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                    PushFrame 066268;
                    SetLocal 1 -32630;
                    JumpCall: 022340, #actuals: 1
                  } else {
                    Let b163 = M[Offset(Offset(000751,Mul(Widen(b159),9)),6)];
                    if (Equal(Widen(b163),141)) {
                      Let b164 = M[002025];
                      SetByte Offset(Offset(000751,Mul(Widen(b159),9)),6) LoByte(Widen(b164));
                      SetByte 002024 201;
                      Let b165 = M[002566];
                      SetByte 002025 LoByte(Widen(b165));
                      SetByte 002566 141;
                      TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                      Let b166 = M[002491];
                      SetByte 002491 ClearBit(b166,4);
                      TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                      Let b167 = M[002490];
                      SetByte 002490 ClearBit(b167,2);
                      TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                      PushFrame 066268;
                      SetLocal 1 -32630;
                      JumpCall: 022340, #actuals: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b168 = M[Offset(Offset(000751,Mul(Widen(b115),9)),6)];
          if (Equal(Widen(b168),195)) {
            Let b169 = M[002511];
            SetByte Offset(Offset(000751,Mul(Widen(b115),9)),6) LoByte(Widen(b169));
            SetByte 002510 219;
            Let b170 = M[002728];
            SetByte 002511 LoByte(Widen(b170));
            SetByte 002728 195;
            TraceOperation 066253 (Insert_obj (Con 194) (Con 219));
            Let b171 = M[002501];
            if (IsZero(Widen(b171))) {
              SetByte 002501 219;
              Let b172 = M[002728];
              SetByte 002502 LoByte(Widen(b172));
              SetByte 002728 194;
              TraceOperation 066256 (Insert_obj (Con 193) (Con 201));
              Let b173 = M[002492];
              if (IsZero(Widen(b173))) {
                SetByte 002492 201;
                Let b174 = M[002566];
                SetByte 002493 LoByte(Widen(b174));
                SetByte 002566 193;
                TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
                Let b175 = M[002024];
                if (IsZero(Widen(b175))) {
                  SetByte 002024 201;
                  Let b176 = M[002566];
                  SetByte 002025 LoByte(Widen(b176));
                  SetByte 002566 141;
                  TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                  Let b177 = M[002491];
                  SetByte 002491 ClearBit(b177,4);
                  TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                  Let b178 = M[002490];
                  SetByte 002490 ClearBit(b178,2);
                  TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                  PushFrame 066268;
                  SetLocal 1 -32630;
                  JumpCall: 022340, #actuals: 1
                } else {
                  Let b179 = M[Offset(Offset(000751,Mul(Widen(b175),9)),6)];
                  if (Equal(Widen(b179),141)) {
                    Let b180 = M[002025];
                    SetByte Offset(Offset(000751,Mul(Widen(b175),9)),6) LoByte(Widen(b180));
                    SetByte 002024 201;
                    Let b181 = M[002566];
                    SetByte 002025 LoByte(Widen(b181));
                    SetByte 002566 141;
                    TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                    Let b182 = M[002491];
                    SetByte 002491 ClearBit(b182,4);
                    TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                    Let b183 = M[002490];
                    SetByte 002490 ClearBit(b183,2);
                    TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                    PushFrame 066268;
                    SetLocal 1 -32630;
                    JumpCall: 022340, #actuals: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b184 = M[Offset(Offset(000751,Mul(Widen(b173),9)),6)];
                if (Equal(Widen(b184),193)) {
                  Let b185 = M[002493];
                  SetByte Offset(Offset(000751,Mul(Widen(b173),9)),6) LoByte(Widen(b185));
                  SetByte 002492 201;
                  Let b186 = M[002566];
                  SetByte 002493 LoByte(Widen(b186));
                  SetByte 002566 193;
                  TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
                  Let b187 = M[002024];
                  if (IsZero(Widen(b187))) {
                    SetByte 002024 201;
                    Let b188 = M[002566];
                    SetByte 002025 LoByte(Widen(b188));
                    SetByte 002566 141;
                    TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                    Let b189 = M[002491];
                    SetByte 002491 ClearBit(b189,4);
                    TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                    Let b190 = M[002490];
                    SetByte 002490 ClearBit(b190,2);
                    TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                    PushFrame 066268;
                    SetLocal 1 -32630;
                    JumpCall: 022340, #actuals: 1
                  } else {
                    Let b191 = M[Offset(Offset(000751,Mul(Widen(b187),9)),6)];
                    if (Equal(Widen(b191),141)) {
                      Let b192 = M[002025];
                      SetByte Offset(Offset(000751,Mul(Widen(b187),9)),6) LoByte(Widen(b192));
                      SetByte 002024 201;
                      Let b193 = M[002566];
                      SetByte 002025 LoByte(Widen(b193));
                      SetByte 002566 141;
                      TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                      Let b194 = M[002491];
                      SetByte 002491 ClearBit(b194,4);
                      TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                      Let b195 = M[002490];
                      SetByte 002490 ClearBit(b195,2);
                      TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                      PushFrame 066268;
                      SetLocal 1 -32630;
                      JumpCall: 022340, #actuals: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b196 = M[Offset(Offset(000751,Mul(Widen(b171),9)),6)];
              if (Equal(Widen(b196),194)) {
                Let b197 = M[002502];
                SetByte Offset(Offset(000751,Mul(Widen(b171),9)),6) LoByte(Widen(b197));
                SetByte 002501 219;
                Let b198 = M[002728];
                SetByte 002502 LoByte(Widen(b198));
                SetByte 002728 194;
                TraceOperation 066256 (Insert_obj (Con 193) (Con 201));
                Let b199 = M[002492];
                if (IsZero(Widen(b199))) {
                  SetByte 002492 201;
                  Let b200 = M[002566];
                  SetByte 002493 LoByte(Widen(b200));
                  SetByte 002566 193;
                  TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
                  Let b201 = M[002024];
                  if (IsZero(Widen(b201))) {
                    SetByte 002024 201;
                    Let b202 = M[002566];
                    SetByte 002025 LoByte(Widen(b202));
                    SetByte 002566 141;
                    TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                    Let b203 = M[002491];
                    SetByte 002491 ClearBit(b203,4);
                    TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                    Let b204 = M[002490];
                    SetByte 002490 ClearBit(b204,2);
                    TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                    PushFrame 066268;
                    SetLocal 1 -32630;
                    JumpCall: 022340, #actuals: 1
                  } else {
                    Let b205 = M[Offset(Offset(000751,Mul(Widen(b201),9)),6)];
                    if (Equal(Widen(b205),141)) {
                      Let b206 = M[002025];
                      SetByte Offset(Offset(000751,Mul(Widen(b201),9)),6) LoByte(Widen(b206));
                      SetByte 002024 201;
                      Let b207 = M[002566];
                      SetByte 002025 LoByte(Widen(b207));
                      SetByte 002566 141;
                      TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                      Let b208 = M[002491];
                      SetByte 002491 ClearBit(b208,4);
                      TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                      Let b209 = M[002490];
                      SetByte 002490 ClearBit(b209,2);
                      TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                      PushFrame 066268;
                      SetLocal 1 -32630;
                      JumpCall: 022340, #actuals: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b210 = M[Offset(Offset(000751,Mul(Widen(b199),9)),6)];
                  if (Equal(Widen(b210),193)) {
                    Let b211 = M[002493];
                    SetByte Offset(Offset(000751,Mul(Widen(b199),9)),6) LoByte(Widen(b211));
                    SetByte 002492 201;
                    Let b212 = M[002566];
                    SetByte 002493 LoByte(Widen(b212));
                    SetByte 002566 193;
                    TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
                    Let b213 = M[002024];
                    if (IsZero(Widen(b213))) {
                      SetByte 002024 201;
                      Let b214 = M[002566];
                      SetByte 002025 LoByte(Widen(b214));
                      SetByte 002566 141;
                      TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                      Let b215 = M[002491];
                      SetByte 002491 ClearBit(b215,4);
                      TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                      Let b216 = M[002490];
                      SetByte 002490 ClearBit(b216,2);
                      TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                      PushFrame 066268;
                      SetLocal 1 -32630;
                      JumpCall: 022340, #actuals: 1
                    } else {
                      Let b217 = M[Offset(Offset(000751,Mul(Widen(b213),9)),6)];
                      if (Equal(Widen(b217),141)) {
                        Let b218 = M[002025];
                        SetByte Offset(Offset(000751,Mul(Widen(b213),9)),6) LoByte(Widen(b218));
                        SetByte 002024 201;
                        Let b219 = M[002566];
                        SetByte 002025 LoByte(Widen(b219));
                        SetByte 002566 141;
                        TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
                        Let b220 = M[002491];
                        SetByte 002491 ClearBit(b220,4);
                        TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
                        Let b221 = M[002490];
                        SetByte 002490 ClearBit(b221,2);
                        TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
                        PushFrame 066268;
                        SetLocal 1 -32630;
                        JumpCall: 022340, #actuals: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    PopFrame return_address_222;
    JumpReturn: return_address_222, result: 0
  }
LocReturn 066268:
  PushStack call_result;
  TraceOperation 066275 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 066280 (Call (Floc 022320) [Con -17989,Con -1] Sp);
  PushFrame 066280;
  SetLocal 1 -17989;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 066280:
  PushStack call_result;
  TraceOperation 066289 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 066294 (Je [Var (Global 0),Con 201] (Branch F Dfalse));
  Let b2 = M[007908];
  Let b3 = M[007909];
  if (Equal(MakeHiLo(b2,b3),201)) {
    TraceOperation 066298 (Store (Con 167) (Con 3));
    SetByte 008210 0;
    SetByte 008211 3;
    TraceOperation 066301 (Call (Floc 022320) [Con 16277,Con 2] Sp);
    PushFrame 066301;
    SetLocal 1 16277;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocReturn 066301:
  PushStack call_result;
  TraceOperation 066309 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 066314 New_line;
  GamePrint "\n";
  TraceOperation 066315 (Print "\"Like my spaceship, Ford?\" Zaphod asks. \"YOUR spaceship?\" says Ford, losing his cool for a second. \"Yeah, I stole it,\" Zaphod admits. \"I'm gonna use it to find");
  GamePrint "\"Like my spaceship, Ford?\" Zaphod asks. \"YOUR spaceship?\" says Ford, losing his cool for a second. \"Yeah, I stole it,\" Zaphod admits. \"I'm gonna use it to find";
  TraceOperation 066424 (Print_paddr (Var (Global 17)));
  Let b2 = M[007942];
  Let b3 = M[007943];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 066426 (Print ". Let's go sit in the sauna while I explain.\" Zaphod, Ford, and ");
  GamePrint ". Let's go sit in the sauna while I explain.\" Zaphod, Ford, and ";
  TraceOperation 066469 (Print_obj (Con 194));
  Let b4 = M[002504];
  Let b5 = M[002505];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  if (IsZeroByte(b6)) {
    GamePrint "";
    TraceOperation 066471 (Print_ret " all head off to port.");
    GamePrint " all head off to port.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
    TraceOperation 066471 (Print_ret " all head off to port.");
    GamePrint " all head off to port.\n";
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  }
LocOp 066486:
  TraceOperation 066486 (Je [Var (Global 0),Con 121] (Branch F (Dloc 067143)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 066491 (Test_attr (Con 108) (Con 5) (Branch F (Dloc 066863)));
    Let b3 = M[001723];
    if (TestBit(b3,2)) {
      TraceOperation 066496 (Inc (Con 151));
      Let b4 = M[008178];
      Let b5 = M[008179];
      SetByte 008178 HiByte(Add(MakeHiLo(b4,b5),1));
      SetByte 008179 LoByte(Add(MakeHiLo(b4,b5),1));
      TraceOperation 066498 (Je [Var (Global 135),Con 1] (Branch F (Dloc 066641)));
      Let b6 = M[008178];
      Let b7 = M[008179];
      if (Equal(MakeHiLo(b6,b7),1)) {
        TraceOperation 066503 New_line;
        GamePrint "\n";
        TraceOperation 066504 (Print_ret "The guard releases you and Ford and begins cycling the air in the airlock. \"Hey, guard!\" shouts Ford, \"do you really enjoy this sort of thing? Shouting, stomping around, shooting people, is it really a fulfilling career?\"");
        GamePrint "The guard releases you and Ford and begins cycling the air in the airlock. \"Hey, guard!\" shouts Ford, \"do you really enjoy this sort of thing? Shouting, stomping around, shooting people, is it really a fulfilling career?\"\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        Jump: 066641
      }
    } else {
      Jump: 066863
    }
  } else {
    Jump: 067143
  }
LocOp 066641:
  TraceOperation 066641 (Je [Var (Global 135),Con 6] (Branch F (Dloc 066821)));
  Let b1 = M[008178];
  Let b2 = M[008179];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 066646 (Call (Floc 022340) [Con -32630] Sp);
    PushFrame 066646;
    SetLocal 1 -32630;
    JumpCall: 022340, #actuals: 1
  } else {
    Jump: 066821
  }
LocReturn 066646:
  PushStack call_result;
  TraceOperation 066653 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 066658 (Insert_obj (Con 141) (Con 142));
  Let b2 = M[002024];
  if (IsZero(Widen(b2))) {
    SetByte 002024 142;
    Let b3 = M[002035];
    SetByte 002025 LoByte(Widen(b3));
    SetByte 002035 141;
    TraceOperation 066661 (Clear_attr (Con 141) (Con 27));
    Let b4 = M[002023];
    SetByte 002023 ClearBit(b4,4);
    TraceOperation 066664 (Store (Con 132) (Con 0));
    SetByte 008140 0;
    SetByte 008141 0;
    TraceOperation 066667 (Set_attr (Con 121) (Con 4));
    Let b5 = M[001840];
    SetByte 001840 SetBit(b5,3);
    TraceOperation 066670 New_line;
    GamePrint "\n";
    TraceOperation 066671 (Print "The guard says, \"");
    GamePrint "The guard says, \"";
    TraceOperation 066684 (Call (Floc 043468) [Con 111,Con 31] Sp);
    PushFrame 066684;
    SetLocal 1 111;
    SetLocal 2 31;
    JumpCall: 043468, #actuals: 2
  } else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b6),141)) {
      Let b7 = M[002025];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b7));
      SetByte 002024 142;
      Let b8 = M[002035];
      SetByte 002025 LoByte(Widen(b8));
      SetByte 002035 141;
      TraceOperation 066661 (Clear_attr (Con 141) (Con 27));
      Let b9 = M[002023];
      SetByte 002023 ClearBit(b9,4);
      TraceOperation 066664 (Store (Con 132) (Con 0));
      SetByte 008140 0;
      SetByte 008141 0;
      TraceOperation 066667 (Set_attr (Con 121) (Con 4));
      Let b10 = M[001840];
      SetByte 001840 SetBit(b10,3);
      TraceOperation 066670 New_line;
      GamePrint "\n";
      TraceOperation 066671 (Print "The guard says, \"");
      GamePrint "The guard says, \"";
      TraceOperation 066684 (Call (Floc 043468) [Con 111,Con 31] Sp);
      PushFrame 066684;
      SetLocal 1 111;
      SetLocal 2 31;
      JumpCall: 043468, #actuals: 2
    } else {
      Error: unlink/loop
    }
  }
LocReturn 066684:
  PushStack call_result;
  TraceOperation 066691 (Jz (Var Sp) (Branch T (Dloc 066769)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 066769
  } else {
    TraceOperation 066695 (Print "Well, all things considered, I guess I like being a guard. Especially the shouting. Resistance is useless!\"");
    GamePrint "Well, all things considered, I guess I like being a guard. Especially the shouting. Resistance is useless!\"";
    TraceOperation 066766 (Jump 066778);
    Jump: 066778
  }
LocOp 066769:
  TraceOperation 066769 (Print "I");
  GamePrint "I";
  TraceOperation 066772 (Call (Floc 080570) [Con 3] Sp);
  PushFrame 066772;
  SetLocal 1 3;
  JumpCall: 080570, #actuals: 1
LocReturn 066772:
  PushStack call_result;
  Jump: 066778
LocOp 066778:
  TraceOperation 066778 (Print " He throws you and Ford into the airlock and closes the door.");
  GamePrint " He throws you and Ford into the airlock and closes the door.";
  TraceOperation 066809 New_line;
  GamePrint "\n";
  TraceOperation 066810 New_line;
  GamePrint "\n";
  TraceOperation 066811 (Call (Floc 042574) [Con 101] Sp);
  PushFrame 066811;
  SetLocal 1 101;
  JumpCall: 042574, #actuals: 1
LocReturn 066811:
  PushStack call_result;
  TraceOperation 066817 (Insert_obj (Con 142) (Con 101));
  Let b1 = M[002033];
  if (IsZero(Widen(b1))) {
    SetByte 002033 101;
    Let b2 = M[001666];
    SetByte 002034 LoByte(Widen(b2));
    SetByte 001666 142;
    TraceOperation 066820 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b4),142)) {
      Let b5 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b5));
      SetByte 002033 101;
      Let b6 = M[001666];
      SetByte 002034 LoByte(Widen(b6));
      SetByte 001666 142;
      TraceOperation 066820 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 066821:
  TraceOperation 066821 New_line;
  GamePrint "\n";
  TraceOperation 066822 (Print_ret "Ford continues trying to talk the guard into a sudden career change.");
  GamePrint "Ford continues trying to talk the guard into a sudden career change.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 066863:
  TraceOperation 066863 (Insert_obj (Con 1) (Con 31));
  Let b1 = M[000764];
  if (IsZero(Widen(b1))) {
    SetByte 000764 31;
    Let b2 = M[001036];
    SetByte 000765 LoByte(Widen(b2));
    SetByte 001036 1;
    TraceOperation 066866 (Call (Floc 022340) [Con -32630] Sp);
    PushFrame 066866;
    SetLocal 1 -32630;
    JumpCall: 022340, #actuals: 1
  } else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b3),1)) {
      Let b4 = M[000765];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b4));
      SetByte 000764 31;
      Let b5 = M[001036];
      SetByte 000765 LoByte(Widen(b5));
      SetByte 001036 1;
      TraceOperation 066866 (Call (Floc 022340) [Con -32630] Sp);
      PushFrame 066866;
      SetLocal 1 -32630;
      JumpCall: 022340, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 066866:
  PushStack call_result;
  TraceOperation 066873 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 066878 (Store (Con 152) (Con 1));
  SetByte 008180 0;
  SetByte 008181 1;
  TraceOperation 066881 (Jin (Con 122) (Con 142) (Branch F (Dloc 066888)));
  Let b2 = M[001853];
  if (Equal(142,Widen(b2))) {
    TraceOperation 066885 (Insert_obj (Con 122) (Con 141));
    Let b3 = M[001853];
    if (IsZero(Widen(b3))) {
      SetByte 001853 141;
      Let b4 = M[002026];
      SetByte 001854 LoByte(Widen(b4));
      SetByte 002026 122;
      TraceOperation 066888 (Jin (Con 139) (Con 142) (Branch F (Dloc 066895)));
      Let b5 = M[002006];
      if (Equal(142,Widen(b5))) {
        TraceOperation 066892 (Insert_obj (Con 139) (Var (Global 0)));
        Let b6 = M[007908];
        Let b7 = M[007909];
        Let b8 = M[002006];
        if (IsZero(Widen(b8))) {
          SetByte 002006 b7;
          Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
          SetByte 002007 LoByte(Widen(b9));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 139;
          TraceOperation 066895 (Insert_obj (Con 141) (Var (Global 0)));
          Let b10 = M[007908];
          Let b11 = M[007909];
          Let b12 = M[002024];
          if (IsZero(Widen(b12))) {
            SetByte 002024 b11;
            Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),6)];
            SetByte 002025 LoByte(Widen(b13));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),6) 141;
            TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
            Let b14 = M[002022];
            SetByte 002022 ClearBit(b14,2);
            TraceOperation 066901 New_line;
            GamePrint "\n";
            TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
            GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
            TraceOperation 066993 (Print_paddr (Var (Global 37)));
            Let b15 = M[007982];
            Let b16 = M[007983];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b15,b16)));
            TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
            GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
            TraceOperation 067138 (Print_obj (Con 1));
            Let b17 = M[000767];
            Let b18 = M[000768];
            Let b19 = M[Address(MakeHiLo(b17,b18))];
            if (IsZeroByte(b19)) {
              GamePrint "";
              TraceOperation 067140 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_20;
              JumpReturn: return_address_20, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b17,b18)),1));
              TraceOperation 067140 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_21;
              JumpReturn: return_address_21, result: 1
            }
          } else {
            Let b22 = M[Offset(Offset(000751,Mul(Widen(b12),9)),6)];
            if (Equal(Widen(b22),141)) {
              Let b23 = M[002025];
              SetByte Offset(Offset(000751,Mul(Widen(b12),9)),6) LoByte(Widen(b23));
              SetByte 002024 b11;
              Let b24 = M[Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),6)];
              SetByte 002025 LoByte(Widen(b24));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),6) 141;
              TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
              Let b25 = M[002022];
              SetByte 002022 ClearBit(b25,2);
              TraceOperation 066901 New_line;
              GamePrint "\n";
              TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
              GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
              TraceOperation 066993 (Print_paddr (Var (Global 37)));
              Let b26 = M[007982];
              Let b27 = M[007983];
              GamePrint GetText(PackedAddress Z3(MakeHiLo(b26,b27)));
              TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
              GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
              TraceOperation 067138 (Print_obj (Con 1));
              Let b28 = M[000767];
              Let b29 = M[000768];
              Let b30 = M[Address(MakeHiLo(b28,b29))];
              if (IsZeroByte(b30)) {
                GamePrint "";
                TraceOperation 067140 (Print_ret ".");
                GamePrint ".\n";
                PopFrame return_address_31;
                JumpReturn: return_address_31, result: 1
              } else {
                GamePrint GetText(Offset(Address(MakeHiLo(b28,b29)),1));
                TraceOperation 067140 (Print_ret ".");
                GamePrint ".\n";
                PopFrame return_address_32;
                JumpReturn: return_address_32, result: 1
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b33 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
          if (Equal(Widen(b33),139)) {
            Let b34 = M[002007];
            SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b34));
            SetByte 002006 b7;
            Let b35 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
            SetByte 002007 LoByte(Widen(b35));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 139;
            TraceOperation 066895 (Insert_obj (Con 141) (Var (Global 0)));
            Let b36 = M[007908];
            Let b37 = M[007909];
            Let b38 = M[002024];
            if (IsZero(Widen(b38))) {
              SetByte 002024 b37;
              Let b39 = M[Offset(Offset(000751,Mul(MakeHiLo(b36,b37),9)),6)];
              SetByte 002025 LoByte(Widen(b39));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b36,b37),9)),6) 141;
              TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
              Let b40 = M[002022];
              SetByte 002022 ClearBit(b40,2);
              TraceOperation 066901 New_line;
              GamePrint "\n";
              TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
              GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
              TraceOperation 066993 (Print_paddr (Var (Global 37)));
              Let b41 = M[007982];
              Let b42 = M[007983];
              GamePrint GetText(PackedAddress Z3(MakeHiLo(b41,b42)));
              TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
              GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
              TraceOperation 067138 (Print_obj (Con 1));
              Let b43 = M[000767];
              Let b44 = M[000768];
              Let b45 = M[Address(MakeHiLo(b43,b44))];
              if (IsZeroByte(b45)) {
                GamePrint "";
                TraceOperation 067140 (Print_ret ".");
                GamePrint ".\n";
                PopFrame return_address_46;
                JumpReturn: return_address_46, result: 1
              } else {
                GamePrint GetText(Offset(Address(MakeHiLo(b43,b44)),1));
                TraceOperation 067140 (Print_ret ".");
                GamePrint ".\n";
                PopFrame return_address_47;
                JumpReturn: return_address_47, result: 1
              }
            } else {
              Let b48 = M[Offset(Offset(000751,Mul(Widen(b38),9)),6)];
              if (Equal(Widen(b48),141)) {
                Let b49 = M[002025];
                SetByte Offset(Offset(000751,Mul(Widen(b38),9)),6) LoByte(Widen(b49));
                SetByte 002024 b37;
                Let b50 = M[Offset(Offset(000751,Mul(MakeHiLo(b36,b37),9)),6)];
                SetByte 002025 LoByte(Widen(b50));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b36,b37),9)),6) 141;
                TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
                Let b51 = M[002022];
                SetByte 002022 ClearBit(b51,2);
                TraceOperation 066901 New_line;
                GamePrint "\n";
                TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
                GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
                TraceOperation 066993 (Print_paddr (Var (Global 37)));
                Let b52 = M[007982];
                Let b53 = M[007983];
                GamePrint GetText(PackedAddress Z3(MakeHiLo(b52,b53)));
                TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
                GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
                TraceOperation 067138 (Print_obj (Con 1));
                Let b54 = M[000767];
                Let b55 = M[000768];
                Let b56 = M[Address(MakeHiLo(b54,b55))];
                if (IsZeroByte(b56)) {
                  GamePrint "";
                  TraceOperation 067140 (Print_ret ".");
                  GamePrint ".\n";
                  PopFrame return_address_57;
                  JumpReturn: return_address_57, result: 1
                } else {
                  GamePrint GetText(Offset(Address(MakeHiLo(b54,b55)),1));
                  TraceOperation 067140 (Print_ret ".");
                  GamePrint ".\n";
                  PopFrame return_address_58;
                  JumpReturn: return_address_58, result: 1
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        TraceOperation 066895 (Insert_obj (Con 141) (Var (Global 0)));
        Let b59 = M[007908];
        Let b60 = M[007909];
        Let b61 = M[002024];
        if (IsZero(Widen(b61))) {
          SetByte 002024 b60;
          Let b62 = M[Offset(Offset(000751,Mul(MakeHiLo(b59,b60),9)),6)];
          SetByte 002025 LoByte(Widen(b62));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b59,b60),9)),6) 141;
          TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
          Let b63 = M[002022];
          SetByte 002022 ClearBit(b63,2);
          TraceOperation 066901 New_line;
          GamePrint "\n";
          TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
          GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
          TraceOperation 066993 (Print_paddr (Var (Global 37)));
          Let b64 = M[007982];
          Let b65 = M[007983];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b64,b65)));
          TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
          GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
          TraceOperation 067138 (Print_obj (Con 1));
          Let b66 = M[000767];
          Let b67 = M[000768];
          Let b68 = M[Address(MakeHiLo(b66,b67))];
          if (IsZeroByte(b68)) {
            GamePrint "";
            TraceOperation 067140 (Print_ret ".");
            GamePrint ".\n";
            PopFrame return_address_69;
            JumpReturn: return_address_69, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b66,b67)),1));
            TraceOperation 067140 (Print_ret ".");
            GamePrint ".\n";
            PopFrame return_address_70;
            JumpReturn: return_address_70, result: 1
          }
        } else {
          Let b71 = M[Offset(Offset(000751,Mul(Widen(b61),9)),6)];
          if (Equal(Widen(b71),141)) {
            Let b72 = M[002025];
            SetByte Offset(Offset(000751,Mul(Widen(b61),9)),6) LoByte(Widen(b72));
            SetByte 002024 b60;
            Let b73 = M[Offset(Offset(000751,Mul(MakeHiLo(b59,b60),9)),6)];
            SetByte 002025 LoByte(Widen(b73));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b59,b60),9)),6) 141;
            TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
            Let b74 = M[002022];
            SetByte 002022 ClearBit(b74,2);
            TraceOperation 066901 New_line;
            GamePrint "\n";
            TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
            GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
            TraceOperation 066993 (Print_paddr (Var (Global 37)));
            Let b75 = M[007982];
            Let b76 = M[007983];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b75,b76)));
            TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
            GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
            TraceOperation 067138 (Print_obj (Con 1));
            Let b77 = M[000767];
            Let b78 = M[000768];
            Let b79 = M[Address(MakeHiLo(b77,b78))];
            if (IsZeroByte(b79)) {
              GamePrint "";
              TraceOperation 067140 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_80;
              JumpReturn: return_address_80, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b77,b78)),1));
              TraceOperation 067140 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_81;
              JumpReturn: return_address_81, result: 1
            }
          } else {
            Error: unlink/loop
          }
        }
      }
    } else {
      Let b82 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b82),122)) {
        Let b83 = M[001854];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b83));
        SetByte 001853 141;
        Let b84 = M[002026];
        SetByte 001854 LoByte(Widen(b84));
        SetByte 002026 122;
        TraceOperation 066888 (Jin (Con 139) (Con 142) (Branch F (Dloc 066895)));
        Let b85 = M[002006];
        if (Equal(142,Widen(b85))) {
          TraceOperation 066892 (Insert_obj (Con 139) (Var (Global 0)));
          Let b86 = M[007908];
          Let b87 = M[007909];
          Let b88 = M[002006];
          if (IsZero(Widen(b88))) {
            SetByte 002006 b87;
            Let b89 = M[Offset(Offset(000751,Mul(MakeHiLo(b86,b87),9)),6)];
            SetByte 002007 LoByte(Widen(b89));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b86,b87),9)),6) 139;
            TraceOperation 066895 (Insert_obj (Con 141) (Var (Global 0)));
            Let b90 = M[007908];
            Let b91 = M[007909];
            Let b92 = M[002024];
            if (IsZero(Widen(b92))) {
              SetByte 002024 b91;
              Let b93 = M[Offset(Offset(000751,Mul(MakeHiLo(b90,b91),9)),6)];
              SetByte 002025 LoByte(Widen(b93));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b90,b91),9)),6) 141;
              TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
              Let b94 = M[002022];
              SetByte 002022 ClearBit(b94,2);
              TraceOperation 066901 New_line;
              GamePrint "\n";
              TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
              GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
              TraceOperation 066993 (Print_paddr (Var (Global 37)));
              Let b95 = M[007982];
              Let b96 = M[007983];
              GamePrint GetText(PackedAddress Z3(MakeHiLo(b95,b96)));
              TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
              GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
              TraceOperation 067138 (Print_obj (Con 1));
              Let b97 = M[000767];
              Let b98 = M[000768];
              Let b99 = M[Address(MakeHiLo(b97,b98))];
              if (IsZeroByte(b99)) {
                GamePrint "";
                TraceOperation 067140 (Print_ret ".");
                GamePrint ".\n";
                PopFrame return_address_100;
                JumpReturn: return_address_100, result: 1
              } else {
                GamePrint GetText(Offset(Address(MakeHiLo(b97,b98)),1));
                TraceOperation 067140 (Print_ret ".");
                GamePrint ".\n";
                PopFrame return_address_101;
                JumpReturn: return_address_101, result: 1
              }
            } else {
              Let b102 = M[Offset(Offset(000751,Mul(Widen(b92),9)),6)];
              if (Equal(Widen(b102),141)) {
                Let b103 = M[002025];
                SetByte Offset(Offset(000751,Mul(Widen(b92),9)),6) LoByte(Widen(b103));
                SetByte 002024 b91;
                Let b104 = M[Offset(Offset(000751,Mul(MakeHiLo(b90,b91),9)),6)];
                SetByte 002025 LoByte(Widen(b104));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b90,b91),9)),6) 141;
                TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
                Let b105 = M[002022];
                SetByte 002022 ClearBit(b105,2);
                TraceOperation 066901 New_line;
                GamePrint "\n";
                TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
                GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
                TraceOperation 066993 (Print_paddr (Var (Global 37)));
                Let b106 = M[007982];
                Let b107 = M[007983];
                GamePrint GetText(PackedAddress Z3(MakeHiLo(b106,b107)));
                TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
                GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
                TraceOperation 067138 (Print_obj (Con 1));
                Let b108 = M[000767];
                Let b109 = M[000768];
                Let b110 = M[Address(MakeHiLo(b108,b109))];
                if (IsZeroByte(b110)) {
                  GamePrint "";
                  TraceOperation 067140 (Print_ret ".");
                  GamePrint ".\n";
                  PopFrame return_address_111;
                  JumpReturn: return_address_111, result: 1
                } else {
                  GamePrint GetText(Offset(Address(MakeHiLo(b108,b109)),1));
                  TraceOperation 067140 (Print_ret ".");
                  GamePrint ".\n";
                  PopFrame return_address_112;
                  JumpReturn: return_address_112, result: 1
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b113 = M[Offset(Offset(000751,Mul(Widen(b88),9)),6)];
            if (Equal(Widen(b113),139)) {
              Let b114 = M[002007];
              SetByte Offset(Offset(000751,Mul(Widen(b88),9)),6) LoByte(Widen(b114));
              SetByte 002006 b87;
              Let b115 = M[Offset(Offset(000751,Mul(MakeHiLo(b86,b87),9)),6)];
              SetByte 002007 LoByte(Widen(b115));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b86,b87),9)),6) 139;
              TraceOperation 066895 (Insert_obj (Con 141) (Var (Global 0)));
              Let b116 = M[007908];
              Let b117 = M[007909];
              Let b118 = M[002024];
              if (IsZero(Widen(b118))) {
                SetByte 002024 b117;
                Let b119 = M[Offset(Offset(000751,Mul(MakeHiLo(b116,b117),9)),6)];
                SetByte 002025 LoByte(Widen(b119));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b116,b117),9)),6) 141;
                TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
                Let b120 = M[002022];
                SetByte 002022 ClearBit(b120,2);
                TraceOperation 066901 New_line;
                GamePrint "\n";
                TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
                GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
                TraceOperation 066993 (Print_paddr (Var (Global 37)));
                Let b121 = M[007982];
                Let b122 = M[007983];
                GamePrint GetText(PackedAddress Z3(MakeHiLo(b121,b122)));
                TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
                GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
                TraceOperation 067138 (Print_obj (Con 1));
                Let b123 = M[000767];
                Let b124 = M[000768];
                Let b125 = M[Address(MakeHiLo(b123,b124))];
                if (IsZeroByte(b125)) {
                  GamePrint "";
                  TraceOperation 067140 (Print_ret ".");
                  GamePrint ".\n";
                  PopFrame return_address_126;
                  JumpReturn: return_address_126, result: 1
                } else {
                  GamePrint GetText(Offset(Address(MakeHiLo(b123,b124)),1));
                  TraceOperation 067140 (Print_ret ".");
                  GamePrint ".\n";
                  PopFrame return_address_127;
                  JumpReturn: return_address_127, result: 1
                }
              } else {
                Let b128 = M[Offset(Offset(000751,Mul(Widen(b118),9)),6)];
                if (Equal(Widen(b128),141)) {
                  Let b129 = M[002025];
                  SetByte Offset(Offset(000751,Mul(Widen(b118),9)),6) LoByte(Widen(b129));
                  SetByte 002024 b117;
                  Let b130 = M[Offset(Offset(000751,Mul(MakeHiLo(b116,b117),9)),6)];
                  SetByte 002025 LoByte(Widen(b130));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b116,b117),9)),6) 141;
                  TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
                  Let b131 = M[002022];
                  SetByte 002022 ClearBit(b131,2);
                  TraceOperation 066901 New_line;
                  GamePrint "\n";
                  TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
                  GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
                  TraceOperation 066993 (Print_paddr (Var (Global 37)));
                  Let b132 = M[007982];
                  Let b133 = M[007983];
                  GamePrint GetText(PackedAddress Z3(MakeHiLo(b132,b133)));
                  TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
                  GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
                  TraceOperation 067138 (Print_obj (Con 1));
                  Let b134 = M[000767];
                  Let b135 = M[000768];
                  Let b136 = M[Address(MakeHiLo(b134,b135))];
                  if (IsZeroByte(b136)) {
                    GamePrint "";
                    TraceOperation 067140 (Print_ret ".");
                    GamePrint ".\n";
                    PopFrame return_address_137;
                    JumpReturn: return_address_137, result: 1
                  } else {
                    GamePrint GetText(Offset(Address(MakeHiLo(b134,b135)),1));
                    TraceOperation 067140 (Print_ret ".");
                    GamePrint ".\n";
                    PopFrame return_address_138;
                    JumpReturn: return_address_138, result: 1
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          TraceOperation 066895 (Insert_obj (Con 141) (Var (Global 0)));
          Let b139 = M[007908];
          Let b140 = M[007909];
          Let b141 = M[002024];
          if (IsZero(Widen(b141))) {
            SetByte 002024 b140;
            Let b142 = M[Offset(Offset(000751,Mul(MakeHiLo(b139,b140),9)),6)];
            SetByte 002025 LoByte(Widen(b142));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b139,b140),9)),6) 141;
            TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
            Let b143 = M[002022];
            SetByte 002022 ClearBit(b143,2);
            TraceOperation 066901 New_line;
            GamePrint "\n";
            TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
            GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
            TraceOperation 066993 (Print_paddr (Var (Global 37)));
            Let b144 = M[007982];
            Let b145 = M[007983];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b144,b145)));
            TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
            GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
            TraceOperation 067138 (Print_obj (Con 1));
            Let b146 = M[000767];
            Let b147 = M[000768];
            Let b148 = M[Address(MakeHiLo(b146,b147))];
            if (IsZeroByte(b148)) {
              GamePrint "";
              TraceOperation 067140 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_149;
              JumpReturn: return_address_149, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b146,b147)),1));
              TraceOperation 067140 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_150;
              JumpReturn: return_address_150, result: 1
            }
          } else {
            Let b151 = M[Offset(Offset(000751,Mul(Widen(b141),9)),6)];
            if (Equal(Widen(b151),141)) {
              Let b152 = M[002025];
              SetByte Offset(Offset(000751,Mul(Widen(b141),9)),6) LoByte(Widen(b152));
              SetByte 002024 b140;
              Let b153 = M[Offset(Offset(000751,Mul(MakeHiLo(b139,b140),9)),6)];
              SetByte 002025 LoByte(Widen(b153));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b139,b140),9)),6) 141;
              TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
              Let b154 = M[002022];
              SetByte 002022 ClearBit(b154,2);
              TraceOperation 066901 New_line;
              GamePrint "\n";
              TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
              GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
              TraceOperation 066993 (Print_paddr (Var (Global 37)));
              Let b155 = M[007982];
              Let b156 = M[007983];
              GamePrint GetText(PackedAddress Z3(MakeHiLo(b155,b156)));
              TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
              GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
              TraceOperation 067138 (Print_obj (Con 1));
              Let b157 = M[000767];
              Let b158 = M[000768];
              Let b159 = M[Address(MakeHiLo(b157,b158))];
              if (IsZeroByte(b159)) {
                GamePrint "";
                TraceOperation 067140 (Print_ret ".");
                GamePrint ".\n";
                PopFrame return_address_160;
                JumpReturn: return_address_160, result: 1
              } else {
                GamePrint GetText(Offset(Address(MakeHiLo(b157,b158)),1));
                TraceOperation 067140 (Print_ret ".");
                GamePrint ".\n";
                PopFrame return_address_161;
                JumpReturn: return_address_161, result: 1
              }
            } else {
              Error: unlink/loop
            }
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    TraceOperation 066888 (Jin (Con 139) (Con 142) (Branch F (Dloc 066895)));
    Let b162 = M[002006];
    if (Equal(142,Widen(b162))) {
      TraceOperation 066892 (Insert_obj (Con 139) (Var (Global 0)));
      Let b163 = M[007908];
      Let b164 = M[007909];
      Let b165 = M[002006];
      if (IsZero(Widen(b165))) {
        SetByte 002006 b164;
        Let b166 = M[Offset(Offset(000751,Mul(MakeHiLo(b163,b164),9)),6)];
        SetByte 002007 LoByte(Widen(b166));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b163,b164),9)),6) 139;
        TraceOperation 066895 (Insert_obj (Con 141) (Var (Global 0)));
        Let b167 = M[007908];
        Let b168 = M[007909];
        Let b169 = M[002024];
        if (IsZero(Widen(b169))) {
          SetByte 002024 b168;
          Let b170 = M[Offset(Offset(000751,Mul(MakeHiLo(b167,b168),9)),6)];
          SetByte 002025 LoByte(Widen(b170));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b167,b168),9)),6) 141;
          TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
          Let b171 = M[002022];
          SetByte 002022 ClearBit(b171,2);
          TraceOperation 066901 New_line;
          GamePrint "\n";
          TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
          GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
          TraceOperation 066993 (Print_paddr (Var (Global 37)));
          Let b172 = M[007982];
          Let b173 = M[007983];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b172,b173)));
          TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
          GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
          TraceOperation 067138 (Print_obj (Con 1));
          Let b174 = M[000767];
          Let b175 = M[000768];
          Let b176 = M[Address(MakeHiLo(b174,b175))];
          if (IsZeroByte(b176)) {
            GamePrint "";
            TraceOperation 067140 (Print_ret ".");
            GamePrint ".\n";
            PopFrame return_address_177;
            JumpReturn: return_address_177, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b174,b175)),1));
            TraceOperation 067140 (Print_ret ".");
            GamePrint ".\n";
            PopFrame return_address_178;
            JumpReturn: return_address_178, result: 1
          }
        } else {
          Let b179 = M[Offset(Offset(000751,Mul(Widen(b169),9)),6)];
          if (Equal(Widen(b179),141)) {
            Let b180 = M[002025];
            SetByte Offset(Offset(000751,Mul(Widen(b169),9)),6) LoByte(Widen(b180));
            SetByte 002024 b168;
            Let b181 = M[Offset(Offset(000751,Mul(MakeHiLo(b167,b168),9)),6)];
            SetByte 002025 LoByte(Widen(b181));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b167,b168),9)),6) 141;
            TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
            Let b182 = M[002022];
            SetByte 002022 ClearBit(b182,2);
            TraceOperation 066901 New_line;
            GamePrint "\n";
            TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
            GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
            TraceOperation 066993 (Print_paddr (Var (Global 37)));
            Let b183 = M[007982];
            Let b184 = M[007983];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b183,b184)));
            TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
            GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
            TraceOperation 067138 (Print_obj (Con 1));
            Let b185 = M[000767];
            Let b186 = M[000768];
            Let b187 = M[Address(MakeHiLo(b185,b186))];
            if (IsZeroByte(b187)) {
              GamePrint "";
              TraceOperation 067140 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_188;
              JumpReturn: return_address_188, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b185,b186)),1));
              TraceOperation 067140 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_189;
              JumpReturn: return_address_189, result: 1
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b190 = M[Offset(Offset(000751,Mul(Widen(b165),9)),6)];
        if (Equal(Widen(b190),139)) {
          Let b191 = M[002007];
          SetByte Offset(Offset(000751,Mul(Widen(b165),9)),6) LoByte(Widen(b191));
          SetByte 002006 b164;
          Let b192 = M[Offset(Offset(000751,Mul(MakeHiLo(b163,b164),9)),6)];
          SetByte 002007 LoByte(Widen(b192));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b163,b164),9)),6) 139;
          TraceOperation 066895 (Insert_obj (Con 141) (Var (Global 0)));
          Let b193 = M[007908];
          Let b194 = M[007909];
          Let b195 = M[002024];
          if (IsZero(Widen(b195))) {
            SetByte 002024 b194;
            Let b196 = M[Offset(Offset(000751,Mul(MakeHiLo(b193,b194),9)),6)];
            SetByte 002025 LoByte(Widen(b196));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b193,b194),9)),6) 141;
            TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
            Let b197 = M[002022];
            SetByte 002022 ClearBit(b197,2);
            TraceOperation 066901 New_line;
            GamePrint "\n";
            TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
            GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
            TraceOperation 066993 (Print_paddr (Var (Global 37)));
            Let b198 = M[007982];
            Let b199 = M[007983];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b198,b199)));
            TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
            GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
            TraceOperation 067138 (Print_obj (Con 1));
            Let b200 = M[000767];
            Let b201 = M[000768];
            Let b202 = M[Address(MakeHiLo(b200,b201))];
            if (IsZeroByte(b202)) {
              GamePrint "";
              TraceOperation 067140 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_203;
              JumpReturn: return_address_203, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b200,b201)),1));
              TraceOperation 067140 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_204;
              JumpReturn: return_address_204, result: 1
            }
          } else {
            Let b205 = M[Offset(Offset(000751,Mul(Widen(b195),9)),6)];
            if (Equal(Widen(b205),141)) {
              Let b206 = M[002025];
              SetByte Offset(Offset(000751,Mul(Widen(b195),9)),6) LoByte(Widen(b206));
              SetByte 002024 b194;
              Let b207 = M[Offset(Offset(000751,Mul(MakeHiLo(b193,b194),9)),6)];
              SetByte 002025 LoByte(Widen(b207));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b193,b194),9)),6) 141;
              TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
              Let b208 = M[002022];
              SetByte 002022 ClearBit(b208,2);
              TraceOperation 066901 New_line;
              GamePrint "\n";
              TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
              GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
              TraceOperation 066993 (Print_paddr (Var (Global 37)));
              Let b209 = M[007982];
              Let b210 = M[007983];
              GamePrint GetText(PackedAddress Z3(MakeHiLo(b209,b210)));
              TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
              GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
              TraceOperation 067138 (Print_obj (Con 1));
              Let b211 = M[000767];
              Let b212 = M[000768];
              Let b213 = M[Address(MakeHiLo(b211,b212))];
              if (IsZeroByte(b213)) {
                GamePrint "";
                TraceOperation 067140 (Print_ret ".");
                GamePrint ".\n";
                PopFrame return_address_214;
                JumpReturn: return_address_214, result: 1
              } else {
                GamePrint GetText(Offset(Address(MakeHiLo(b211,b212)),1));
                TraceOperation 067140 (Print_ret ".");
                GamePrint ".\n";
                PopFrame return_address_215;
                JumpReturn: return_address_215, result: 1
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      TraceOperation 066895 (Insert_obj (Con 141) (Var (Global 0)));
      Let b216 = M[007908];
      Let b217 = M[007909];
      Let b218 = M[002024];
      if (IsZero(Widen(b218))) {
        SetByte 002024 b217;
        Let b219 = M[Offset(Offset(000751,Mul(MakeHiLo(b216,b217),9)),6)];
        SetByte 002025 LoByte(Widen(b219));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b216,b217),9)),6) 141;
        TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
        Let b220 = M[002022];
        SetByte 002022 ClearBit(b220,2);
        TraceOperation 066901 New_line;
        GamePrint "\n";
        TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
        GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
        TraceOperation 066993 (Print_paddr (Var (Global 37)));
        Let b221 = M[007982];
        Let b222 = M[007983];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b221,b222)));
        TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
        GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
        TraceOperation 067138 (Print_obj (Con 1));
        Let b223 = M[000767];
        Let b224 = M[000768];
        Let b225 = M[Address(MakeHiLo(b223,b224))];
        if (IsZeroByte(b225)) {
          GamePrint "";
          TraceOperation 067140 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_226;
          JumpReturn: return_address_226, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b223,b224)),1));
          TraceOperation 067140 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_227;
          JumpReturn: return_address_227, result: 1
        }
      } else {
        Let b228 = M[Offset(Offset(000751,Mul(Widen(b218),9)),6)];
        if (Equal(Widen(b228),141)) {
          Let b229 = M[002025];
          SetByte Offset(Offset(000751,Mul(Widen(b218),9)),6) LoByte(Widen(b229));
          SetByte 002024 b217;
          Let b230 = M[Offset(Offset(000751,Mul(MakeHiLo(b216,b217),9)),6)];
          SetByte 002025 LoByte(Widen(b230));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b216,b217),9)),6) 141;
          TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
          Let b231 = M[002022];
          SetByte 002022 ClearBit(b231,2);
          TraceOperation 066901 New_line;
          GamePrint "\n";
          TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
          GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
          TraceOperation 066993 (Print_paddr (Var (Global 37)));
          Let b232 = M[007982];
          Let b233 = M[007983];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b232,b233)));
          TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
          GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
          TraceOperation 067138 (Print_obj (Con 1));
          Let b234 = M[000767];
          Let b235 = M[000768];
          Let b236 = M[Address(MakeHiLo(b234,b235))];
          if (IsZeroByte(b236)) {
            GamePrint "";
            TraceOperation 067140 (Print_ret ".");
            GamePrint ".\n";
            PopFrame return_address_237;
            JumpReturn: return_address_237, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b234,b235)),1));
            TraceOperation 067140 (Print_ret ".");
            GamePrint ".\n";
            PopFrame return_address_238;
            JumpReturn: return_address_238, result: 1
          }
        } else {
          Error: unlink/loop
        }
      }
    }
  }
LocOp 067143:
  TraceOperation 067143 (Jz (Var (Global 137)) (Branch F (Dloc 067191)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067146 (Store (Con 153) (Con 1));
    SetByte 008182 0;
    SetByte 008183 1;
    TraceOperation 067149 New_line;
    GamePrint "\n";
    TraceOperation 067150 (Print_ret "Ford glances uncomfortably at the sky. He offers you the towel again.");
    GamePrint "Ford glances uncomfortably at the sky. He offers you the towel again.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 067191
  }
LocOp 067191:
  TraceOperation 067191 (Je [Var (Global 137),Con 1] (Branch F (Dloc 067245)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 067195 New_line;
    GamePrint "\n";
    TraceOperation 067196 (Print "Ford seems oblivious to your trouble, so you ask \"Ford, what about my home?\" He");
    GamePrint "Ford seems oblivious to your trouble, so you ask \"Ford, what about my home?\" He";
    TraceOperation 067239 (Call (Floc 065476) [] Sp);
    PushFrame 067239;
    JumpCall: 065476, #actuals: 0
  } else {
    Jump: 067245
  }
LocReturn 067239:
  PushStack call_result;
  TraceOperation 067244 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 067245:
  TraceOperation 067245 (Je [Var (Global 137),Con 2] (Branch F (Dloc 067388)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 067250 (Store (Con 153) (Con 3));
    SetByte 008182 0;
    SetByte 008183 3;
    TraceOperation 067253 (Store (Con 102) (Con 0));
    SetByte 008080 0;
    SetByte 008081 0;
    TraceOperation 067256 (Store (Con 155) (Con 1));
    SetByte 008186 0;
    SetByte 008187 1;
    TraceOperation 067259 (Call (Floc 022320) [Con -32630,Con 2] Sp);
    PushFrame 067259;
    SetLocal 1 -32630;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 067388
  }
LocReturn 067259:
  PushStack call_result;
  TraceOperation 067267 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 067272 (Set_attr (Con 148) (Con 6));
  Let b2 = M[002083];
  SetByte 002083 SetBit(b2,1);
  TraceOperation 067275 New_line;
  GamePrint "\n";
  TraceOperation 067276 (Print "Ford and Prosser stop talking and approach you. Ford says that Prosser has agreed to lie in your place so that the two of you can go off to the Pub. Reluctantly, Prosser steps forward and lies down in front of the ");
  GamePrint "Ford and Prosser stop talking and approach you. Ford says that Prosser has agreed to lie in your place so that the two of you can go off to the Pub. Reluctantly, Prosser steps forward and lies down in front of the ";
  TraceOperation 067377 (Print_obj (Con 166));
  Let b3 = M[002252];
  Let b4 = M[002253];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 067379 (Print_ret ". You stand up.");
    GamePrint ". You stand up.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 067379 (Print_ret ". You stand up.");
    GamePrint ". You stand up.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 067388:
  TraceOperation 067388 (Je [Var (Global 137),Con 3] (Branch F (Dloc 067473)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 067393 (Insert_obj (Con 142) (Con 137));
    Let b3 = M[002033];
    if (IsZero(Widen(b3))) {
      SetByte 002033 137;
      Let b4 = M[001990];
      SetByte 002034 LoByte(Widen(b4));
      SetByte 001990 142;
      TraceOperation 067396 (Store (Con 153) (Con 4));
      SetByte 008182 0;
      SetByte 008183 4;
      TraceOperation 067399 (Je [Var (Global 0),Con 149] (Branch F (Dloc 067454)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      if (Equal(MakeHiLo(b5,b6),149)) {
        TraceOperation 067403 (Store (Con 167) (Con 1));
        SetByte 008210 0;
        SetByte 008211 1;
        TraceOperation 067406 (Call (Floc 022320) [Con 16277,Con 2] Sp);
        PushFrame 067406;
        SetLocal 1 16277;
        SetLocal 2 2;
        JumpCall: 022320, #actuals: 2
      } else {
        Jump: 067454
      }
    } else {
      Let b7 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b7),142)) {
        Let b8 = M[002034];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b8));
        SetByte 002033 137;
        Let b9 = M[001990];
        SetByte 002034 LoByte(Widen(b9));
        SetByte 001990 142;
        TraceOperation 067396 (Store (Con 153) (Con 4));
        SetByte 008182 0;
        SetByte 008183 4;
        TraceOperation 067399 (Je [Var (Global 0),Con 149] (Branch F (Dloc 067454)));
        Let b10 = M[007908];
        Let b11 = M[007909];
        if (Equal(MakeHiLo(b10,b11),149)) {
          TraceOperation 067403 (Store (Con 167) (Con 1));
          SetByte 008210 0;
          SetByte 008211 1;
          TraceOperation 067406 (Call (Floc 022320) [Con 16277,Con 2] Sp);
          PushFrame 067406;
          SetLocal 1 16277;
          SetLocal 2 2;
          JumpCall: 022320, #actuals: 2
        } else {
          Jump: 067454
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 067473
  }
LocReturn 067406:
  PushStack call_result;
  TraceOperation 067414 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 067419 (Print_ret "Ford, urging you to follow, hurries toward the country lane.");
  GamePrint "Ford, urging you to follow, hurries toward the country lane.\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 067454:
  TraceOperation 067454 (Je [Var (Global 0),Con 137] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),137)) {
    TraceOperation 067458 (Print_ret "Ford enters from the north.");
    GamePrint "Ford enters from the north.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 067473:
  TraceOperation 067473 (Je [Var (Global 137),Con 4] (Branch F (Dloc 067550)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 067478 (Je [Var (Global 0),Con 137] (Branch F (Dloc 067550)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),137)) {
      TraceOperation 067483 (Test_attr (Con 134) (Con 5) (Branch T (Dloc 067550)));
      Let b5 = M[001957];
      if (TestBit(b5,2)) {
        Jump: 067550
      } else {
        TraceOperation 067488 (Store (Con 153) (Con 5));
        SetByte 008182 0;
        SetByte 008183 5;
        TraceOperation 067491 (Store (Con 167) (Con 1));
        SetByte 008210 0;
        SetByte 008211 1;
        TraceOperation 067494 (Call (Floc 022320) [Con 16277,Con 2] Sp);
        PushFrame 067494;
        SetLocal 1 16277;
        SetLocal 2 2;
        JumpCall: 022320, #actuals: 2
      }
    } else {
      Jump: 067550
    }
  } else {
    Jump: 067550
  }
LocReturn 067494:
  PushStack call_result;
  TraceOperation 067502 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 067507 (Insert_obj (Con 142) (Con 134));
  Let b2 = M[002033];
  if (IsZero(Widen(b2))) {
    SetByte 002033 134;
    Let b3 = M[001963];
    SetByte 002034 LoByte(Widen(b3));
    SetByte 001963 142;
    TraceOperation 067510 New_line;
    GamePrint "\n";
    TraceOperation 067511 (Print_ret "\"Come along, Arthur,\" says Ford impatiently, and enters the Pub.");
    GamePrint "\"Come along, Arthur,\" says Ford impatiently, and enters the Pub.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b5),142)) {
      Let b6 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b6));
      SetByte 002033 134;
      Let b7 = M[001963];
      SetByte 002034 LoByte(Widen(b7));
      SetByte 001963 142;
      TraceOperation 067510 New_line;
      GamePrint "\n";
      TraceOperation 067511 (Print_ret "\"Come along, Arthur,\" says Ford impatiently, and enters the Pub.");
      GamePrint "\"Come along, Arthur,\" says Ford impatiently, and enters the Pub.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 067550:
  TraceOperation 067550 (Jin (Con 142) (Var (Global 0)) (Branch T (Dloc 067577)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002033];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 067577
  } else {
    TraceOperation 067554 (Test_attr (Con 134) (Con 5) (Branch F (Dloc 067577)));
    Let b4 = M[001957];
    if (TestBit(b4,2)) {
      TraceOperation 067558 (Insert_obj (Con 142) (Var (Global 0)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[002033];
      if (IsZero(Widen(b7))) {
        SetByte 002033 b6;
        Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
        SetByte 002034 LoByte(Widen(b8));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 142;
        TraceOperation 067561 New_line;
        GamePrint "\n";
        TraceOperation 067562 (Print_ret "Ford hurries after you.");
        GamePrint "Ford hurries after you.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      } else {
        Let b10 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
        if (Equal(Widen(b10),142)) {
          Let b11 = M[002034];
          SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b11));
          SetByte 002033 b6;
          Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
          SetByte 002034 LoByte(Widen(b12));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 142;
          TraceOperation 067561 New_line;
          GamePrint "\n";
          TraceOperation 067562 (Print_ret "Ford hurries after you.");
          GamePrint "Ford hurries after you.\n";
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 067577
    }
  }
LocOp 067577:
  TraceOperation 067577 (Jl (Var (Global 130)) (Con 3) (Branch F Dfalse));
  Let b1 = M[008168];
  Let b2 = M[008169];
  if (LessThan(MakeHiLo(b1,b2),3)) {
    TraceOperation 067581 (Je [Var (Global 201),Con 127] (Branch F (Dloc 067591)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),127)) {
      TraceOperation 067585 (Je [Var (Global 203),Con 57,Con 51] (Branch T Dfalse));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (LogOr(Equal(MakeHiLo(b5,b6),57),Equal(MakeHiLo(b5,b6),51))) {
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      } else {
        Jump: 067591
      }
    } else {
      Jump: 067591
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocOp 067591:
  TraceOperation 067591 (Je [Var (Global 231),Con 127] (Branch F (Dloc 067605)));
  Let b1 = M[008370];
  Let b2 = M[008371];
  if (Equal(MakeHiLo(b1,b2),127)) {
    TraceOperation 067595 (Je [Var (Global 203),Con 16] (Branch F (Dloc 067605)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),16)) {
      TraceOperation 067599 (Je [Var (Global 232),Con 51,Con 57] (Branch T Dfalse));
      Let b5 = M[008372];
      Let b6 = M[008373];
      if (LogOr(Equal(MakeHiLo(b5,b6),51),Equal(MakeHiLo(b5,b6),57))) {
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      } else {
        Jump: 067605
      }
    } else {
      Jump: 067605
    }
  } else {
    Jump: 067605
  }
LocOp 067605:
  TraceOperation 067605 (Je [Var (Global 0),Con 134] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),134)) {
    TraceOperation 067609 (Test_attr (Con 127) (Con 27) (Branch T Dfalse));
    Let b3 = M[001897];
    if (TestBit(b3,4)) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      TraceOperation 067613 New_line;
      GamePrint "\n";
      TraceOperation 067614 (Print "\"Drink the beer,\" urges Ford. \"It will help");
      GamePrint "\"Drink the beer,\" urges Ford. \"It will help";
      TraceOperation 067643 (Call (Floc 057960) [] Sp);
      PushFrame 067643;
      JumpCall: 057960, #actuals: 0
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 067643:
  PushStack call_result;
  TraceOperation 067648 (Print_ret "\"");
  GamePrint "\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[453]--------------------------------------------------
LocRoutine 067652:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 067655
LocOp 067655:
  TraceOperation 067655 (Print "There is a satchel here");
  GamePrint "There is a satchel here";
  TraceOperation 067668 (Je [Var (Global 116),Con 141] (Branch F (Dloc 067687)));
  Let b1 = M[008140];
  Let b2 = M[008141];
  if (Equal(MakeHiLo(b1,b2),141)) {
    TraceOperation 067672 (Print ", resting in front of the ");
    GamePrint ", resting in front of the ";
    TraceOperation 067685 (Print_obj (Con 112));
    Let b3 = M[001766];
    Let b4 = M[001767];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      Jump: 067687
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      Jump: 067687
    }
  } else {
    Jump: 067687
  }
LocOp 067687:
  TraceOperation 067687 (Print ".");
  GamePrint ".";
  TraceOperation 067690 (Call (Floc 067698) [] Sp);
  PushFrame 067690;
  JumpCall: 067698, #actuals: 0
LocReturn 067690:
  PushStack call_result;
  TraceOperation 067695 New_line;
  GamePrint "\n";
  TraceOperation 067696 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[454]--------------------------------------------------
LocRoutine 067698:
  MakeRoutineFrame 0;
  Jump: 067699
LocOp 067699:
  TraceOperation 067699 (Jz (Var (Global 115)) (Branch T Dfalse));
  Let b1 = M[008138];
  Let b2 = M[008139];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 067702 (Print " Sitting on top of it is");
    GamePrint " Sitting on top of it is";
    TraceOperation 067719 (Call (Floc 043738) [Var (Global 115)] Sp);
    Let b4 = M[008138];
    Let b5 = M[008139];
    PushFrame 067719;
    SetLocal 1 MakeHiLo(b4,b5);
    JumpCall: 043738, #actuals: 1
  }
LocReturn 067719:
  PushStack call_result;
  TraceOperation 067725 (Print ".");
  GamePrint ".";
  TraceOperation 067728 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[455]--------------------------------------------------
LocRoutine 067730:
  MakeRoutineFrame 0;
  Jump: 067731
LocOp 067731:
  TraceOperation 067731 (Je [Var (Global 203),Con 103] (Branch F (Dloc 067747)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 067735 (Je [Var (Global 120),Con 142] (Branch T (Dloc 067747)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),142)) {
      Jump: 067747
    } else {
      TraceOperation 067739 (Call (Floc 057712) [Con -11237] Sp);
      PushFrame 067739;
      SetLocal 1 -11237;
      JumpCall: 057712, #actuals: 1
    }
  } else {
    Jump: 067747
  }
LocReturn 067739:
  PushStack call_result;
  TraceOperation 067746 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 067747:
  TraceOperation 067747 (Je [Var (Global 203),Con 55] (Branch F (Dloc 067858)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 067752 (Je [Con 141,Var (Global 202)] (Branch F (Dloc 067858)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(141,MakeHiLo(b3,b4))) {
      TraceOperation 067757 (Call (Floc 043468) [Con 141] Sp);
      PushFrame 067757;
      SetLocal 1 141;
      JumpCall: 043468, #actuals: 1
    } else {
      Jump: 067858
    }
  } else {
    Jump: 067858
  }
LocReturn 067757:
  PushStack call_result;
  TraceOperation 067763 (Jz (Var Sp) (Branch T (Dloc 067783)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 067783
  } else {
    TraceOperation 067766 (Print_ret "Put down the satchel first.");
    GamePrint "Put down the satchel first.\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 067783:
  TraceOperation 067783 (Jz (Var (Global 115)) (Branch T (Dloc 067811)));
  Let b1 = M[008138];
  Let b2 = M[008139];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 067811
  } else {
    TraceOperation 067786 (Print "But");
    GamePrint "But";
    TraceOperation 067791 (Call (Floc 043738) [Var (Global 115),Con 1] Sp);
    Let b3 = M[008138];
    Let b4 = M[008139];
    PushFrame 067791;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  }
LocReturn 067791:
  PushStack call_result;
  TraceOperation 067798 (Print_ret " is already on the satchel.");
  GamePrint " is already on the satchel.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 067811:
  TraceOperation 067811 (Store (Con 131) (Var (Global 201)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  SetByte 008138 b1;
  SetByte 008139 b2;
  TraceOperation 067814 (Insert_obj (Var (Global 201)) (Var (Global 0)));
  Let b3 = M[008310];
  Let b4 = M[008311];
  Let b5 = M[007908];
  Let b6 = M[007909];
  Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
  if (IsZero(Widen(b7))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) b6;
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b8));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) b4;
    TraceOperation 067817 (Set_attr (Var (Global 201)) (Con 27));
    Let b9 = M[008310];
    Let b10 = M[008311];
    Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),3)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),3) SetBit(b11,4);
    TraceOperation 067820 (Set_attr (Var (Global 201)) (Con 21));
    Let b12 = M[008310];
    Let b13 = M[008311];
    Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),2)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),2) SetBit(b14,2);
    TraceOperation 067823 (Print "Okay,");
    GamePrint "Okay,";
    TraceOperation 067830 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b15 = M[008310];
    Let b16 = M[008311];
    PushFrame 067830;
    SetLocal 1 MakeHiLo(b15,b16);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Let b17 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
    if (Equal(Widen(b17),MakeHiLo(b3,b4))) {
      Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b18));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) b6;
      Let b19 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b19));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) b4;
      TraceOperation 067817 (Set_attr (Var (Global 201)) (Con 27));
      Let b20 = M[008310];
      Let b21 = M[008311];
      Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b20,b21),9)),3)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b20,b21),9)),3) SetBit(b22,4);
      TraceOperation 067820 (Set_attr (Var (Global 201)) (Con 21));
      Let b23 = M[008310];
      Let b24 = M[008311];
      Let b25 = M[Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),2)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),2) SetBit(b25,2);
      TraceOperation 067823 (Print "Okay,");
      GamePrint "Okay,";
      TraceOperation 067830 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
      Let b26 = M[008310];
      Let b27 = M[008311];
      PushFrame 067830;
      SetLocal 1 MakeHiLo(b26,b27);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    } else {
      Error: unlink/loop
    }
  }
LocReturn 067830:
  PushStack call_result;
  TraceOperation 067837 (Print_ret " is now sitting on the satchel.");
  GamePrint " is now sitting on the satchel.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 067858:
  TraceOperation 067858 (Je [Var (Global 203),Con 61] (Branch F (Dloc 067908)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 067862 (Print "The satchel, which is ");
    GamePrint "The satchel, which is ";
    TraceOperation 067873 (Test_attr (Con 141) (Con 23) (Branch F (Dloc 067885)));
    Let b3 = M[002022];
    if (TestBit(b3,0)) {
      TraceOperation 067877 (Print "open");
      GamePrint "open";
      TraceOperation 067882 (Jump 067888);
      Jump: 067888
    } else {
      Jump: 067885
    }
  } else {
    Jump: 067908
  }
LocOp 067885:
  TraceOperation 067885 (Print "closed");
  GamePrint "closed";
  Jump: 067888
LocOp 067888:
  TraceOperation 067888 (Print ", is fairly bulky.");
  GamePrint ", is fairly bulky.";
  TraceOperation 067901 (Call (Floc 067698) [] Sp);
  PushFrame 067901;
  JumpCall: 067698, #actuals: 0
LocReturn 067901:
  PushStack call_result;
  TraceOperation 067906 New_line;
  GamePrint "\n";
  TraceOperation 067907 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 067908:
  TraceOperation 067908 (Je [Var (Global 203),Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 067912 (Jin (Con 141) (Con 142) (Branch F Dfalse));
    Let b3 = M[002024];
    if (Equal(142,Widen(b3))) {
      TraceOperation 067916 (Print "Ford says, \"Hey, Arthur, keep ");
      GamePrint "Ford says, \"Hey, Arthur, keep ";
      TraceOperation 067935 (Print_obj (Con 36));
      Let b4 = M[001082];
      Let b5 = M[001083];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      if (IsZeroByte(b6)) {
        GamePrint "";
        TraceOperation 067937 (Print_ret "s off my satchel!\"");
        GamePrint "s off my satchel!\"\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
        TraceOperation 067937 (Print_ret "s off my satchel!\"");
        GamePrint "s off my satchel!\"\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      }
    } else {
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 0
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
--[456]--------------------------------------------------
LocRoutine 067952:
  MakeRoutineFrame 0;
  Jump: 067953
LocOp 067953:
  TraceOperation 067953 (Je [Var (Global 203),Con 124] (Branch F (Dloc 068112)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 067958 (Test_attr (Con 139) (Con 21) (Branch F (Dloc 068112)));
    Let b3 = M[002004];
    if (TestBit(b3,2)) {
      TraceOperation 067963 (Je [Var (Global 0),Con 149] (Branch F (Dloc 068112)));
      Let b4 = M[007908];
      Let b5 = M[007909];
      if (Equal(MakeHiLo(b4,b5),149)) {
        TraceOperation 067968 (Jz (Var (Global 86)) (Branch T (Dloc 068112)));
        Let b6 = M[008080];
        Let b7 = M[008081];
        if (IsZero(MakeHiLo(b6,b7))) {
          Jump: 068112
        } else {
          TraceOperation 067972 (Clear_attr (Con 139) (Con 21));
          Let b8 = M[002004];
          SetByte 002004 ClearBit(b8,2);
          TraceOperation 067975 (Insert_obj (Con 139) (Con 31));
          Let b9 = M[002006];
          if (IsZero(Widen(b9))) {
            SetByte 002006 31;
            Let b10 = M[001036];
            SetByte 002007 LoByte(Widen(b10));
            SetByte 001036 139;
            TraceOperation 067978 (Insert_obj (Con 142) (Con 219));
            Let b11 = M[002033];
            if (IsZero(Widen(b11))) {
              SetByte 002033 219;
              Let b12 = M[002728];
              SetByte 002034 LoByte(Widen(b12));
              SetByte 002728 142;
              TraceOperation 067981 (Store (Con 140) (Con 1));
              SetByte 008156 0;
              SetByte 008157 1;
              TraceOperation 067984 (Store (Con 167) (Con 5));
              SetByte 008210 0;
              SetByte 008211 5;
              TraceOperation 067987 (Call (Floc 022320) [Con 16277,Con 2] Sp);
              PushFrame 067987;
              SetLocal 1 16277;
              SetLocal 2 2;
              JumpCall: 022320, #actuals: 2
            } else {
              Let b13 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
              if (Equal(Widen(b13),142)) {
                Let b14 = M[002034];
                SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b14));
                SetByte 002033 219;
                Let b15 = M[002728];
                SetByte 002034 LoByte(Widen(b15));
                SetByte 002728 142;
                TraceOperation 067981 (Store (Con 140) (Con 1));
                SetByte 008156 0;
                SetByte 008157 1;
                TraceOperation 067984 (Store (Con 167) (Con 5));
                SetByte 008210 0;
                SetByte 008211 5;
                TraceOperation 067987 (Call (Floc 022320) [Con 16277,Con 2] Sp);
                PushFrame 067987;
                SetLocal 1 16277;
                SetLocal 2 2;
                JumpCall: 022320, #actuals: 2
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b16 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
            if (Equal(Widen(b16),139)) {
              Let b17 = M[002007];
              SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b17));
              SetByte 002006 31;
              Let b18 = M[001036];
              SetByte 002007 LoByte(Widen(b18));
              SetByte 001036 139;
              TraceOperation 067978 (Insert_obj (Con 142) (Con 219));
              Let b19 = M[002033];
              if (IsZero(Widen(b19))) {
                SetByte 002033 219;
                Let b20 = M[002728];
                SetByte 002034 LoByte(Widen(b20));
                SetByte 002728 142;
                TraceOperation 067981 (Store (Con 140) (Con 1));
                SetByte 008156 0;
                SetByte 008157 1;
                TraceOperation 067984 (Store (Con 167) (Con 5));
                SetByte 008210 0;
                SetByte 008211 5;
                TraceOperation 067987 (Call (Floc 022320) [Con 16277,Con 2] Sp);
                PushFrame 067987;
                SetLocal 1 16277;
                SetLocal 2 2;
                JumpCall: 022320, #actuals: 2
              } else {
                Let b21 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
                if (Equal(Widen(b21),142)) {
                  Let b22 = M[002034];
                  SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b22));
                  SetByte 002033 219;
                  Let b23 = M[002728];
                  SetByte 002034 LoByte(Widen(b23));
                  SetByte 002728 142;
                  TraceOperation 067981 (Store (Con 140) (Con 1));
                  SetByte 008156 0;
                  SetByte 008157 1;
                  TraceOperation 067984 (Store (Con 167) (Con 5));
                  SetByte 008210 0;
                  SetByte 008211 5;
                  TraceOperation 067987 (Call (Floc 022320) [Con 16277,Con 2] Sp);
                  PushFrame 067987;
                  SetLocal 1 16277;
                  SetLocal 2 2;
                  JumpCall: 022320, #actuals: 2
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        }
      } else {
        Jump: 068112
      }
    } else {
      Jump: 068112
    }
  } else {
    Jump: 068112
  }
LocReturn 067987:
  PushStack call_result;
  TraceOperation 067995 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068000 (Call (Floc 022340) [Con -32630] Sp);
  PushFrame 068000;
  SetLocal 1 -32630;
  JumpCall: 022340, #actuals: 1
LocReturn 068000:
  PushStack call_result;
  TraceOperation 068007 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 068012 (Print "As you take it, Ford says \"Er, look, thanks for lending me the towel... been nice knowing you... got to go now...\" He smiles oddly and walks down the ");
  GamePrint "As you take it, Ford says \"Er, look, thanks for lending me the towel... been nice knowing you... got to go now...\" He smiles oddly and walks down the ";
  TraceOperation 068107 (Print_obj (Con 137));
  Let b2 = M[001991];
  Let b3 = M[001992];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 068109 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 068109 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
LocOp 068112:
  TraceOperation 068112 (Je [Var (Global 203),Con 98,Con 124] (Branch F (Dloc 068180)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),98),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 068119 (Je [Var (Global 201),Con 139] (Branch F (Dloc 068180)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),139)) {
      TraceOperation 068123 (Test_attr (Con 139) (Con 8) (Branch F (Dloc 068180)));
      Let b5 = M[002003];
      if (TestBit(b5,7)) {
        TraceOperation 068127 (Clear_attr (Con 139) (Con 21));
        Let b6 = M[002004];
        SetByte 002004 ClearBit(b6,2);
        TraceOperation 068130 (Clear_attr (Con 139) (Con 8));
        Let b7 = M[002003];
        SetByte 002003 ClearBit(b7,7);
        TraceOperation 068133 (Call (Floc 043644) [Con 139,Var (Global 0)] Sp);
        Let b8 = M[007908];
        Let b9 = M[007909];
        PushFrame 068133;
        SetLocal 1 139;
        SetLocal 2 MakeHiLo(b8,b9);
        JumpCall: 043644, #actuals: 2
      } else {
        Jump: 068180
      }
    } else {
      Jump: 068180
    }
  } else {
    Jump: 068180
  }
LocReturn 068133:
  PushStack call_result;
  TraceOperation 068140 (Clear_attr (Con 139) (Con 24));
  Let b1 = M[002005];
  SetByte 002005 ClearBit(b1,7);
  TraceOperation 068143 (Clear_attr (Con 139) (Con 23));
  Let b2 = M[002004];
  SetByte 002004 ClearBit(b2,0);
  TraceOperation 068146 (Clear_attr (Con 139) (Con 27));
  Let b3 = M[002005];
  SetByte 002005 ClearBit(b3,4);
  TraceOperation 068149 (Je [Var (Global 203),Con 98] (Branch F Dfalse));
  Let b4 = M[008314];
  Let b5 = M[008315];
  if (Equal(MakeHiLo(b4,b5),98)) {
    TraceOperation 068153 (Print_ret "Okay, it's no longer covering the drain.");
    GamePrint "Okay, it's no longer covering the drain.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocOp 068180:
  TraceOperation 068180 (Je [Var (Global 203),Con 157,Con 55] (Branch F (Dloc 068221)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),157),Equal(MakeHiLo(b1,b2),55))) {
    TraceOperation 068186 (Je [Var (Global 202),Con 95] (Branch F (Dloc 068221)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),95)) {
      TraceOperation 068190 (Print_ret "The effect is decorative rather than helpful.");
      GamePrint "The effect is decorative rather than helpful.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 068221
    }
  } else {
    Jump: 068221
  }
LocOp 068221:
  TraceOperation 068221 (Je [Var (Global 203),Con 157,Con 55] (Branch F (Dloc 068394)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),157),Equal(MakeHiLo(b1,b2),55))) {
    TraceOperation 068228 (Je [Var (Global 202),Con 33,Con 34] (Branch F (Dloc 068394)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),33),Equal(MakeHiLo(b3,b4),34))) {
      TraceOperation 068235 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 068246)));
      Let b5 = M[002003];
      if (TestBit(b5,6)) {
        TraceOperation 068239 (Print_ret "It already is.");
        GamePrint "It already is.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      } else {
        Jump: 068246
      }
    } else {
      Jump: 068394
    }
  } else {
    Jump: 068394
  }
LocOp 068246:
  TraceOperation 068246 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 068356)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 068251 (Set_attr (Con 139) (Con 9));
    Let b4 = M[002003];
    SetByte 002003 SetBit(b4,6);
    TraceOperation 068254 (Insert_obj (Con 139) (Con 31));
    Let b5 = M[002006];
    if (IsZero(Widen(b5))) {
      SetByte 002006 31;
      Let b6 = M[001036];
      SetByte 002007 LoByte(Widen(b6));
      SetByte 001036 139;
      TraceOperation 068257 (Call (Floc 022320) [Con -22735,Con 11] Sp);
      PushFrame 068257;
      SetLocal 1 -22735;
      SetLocal 2 11;
      JumpCall: 022320, #actuals: 2
    } else {
      Let b7 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b7),139)) {
        Let b8 = M[002007];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b8));
        SetByte 002006 31;
        Let b9 = M[001036];
        SetByte 002007 LoByte(Widen(b9));
        SetByte 001036 139;
        TraceOperation 068257 (Call (Floc 022320) [Con -22735,Con 11] Sp);
        PushFrame 068257;
        SetLocal 1 -22735;
        SetLocal 2 11;
        JumpCall: 022320, #actuals: 2
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 068356
  }
LocReturn 068257:
  PushStack call_result;
  TraceOperation 068265 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068270 (Print "The ");
  GamePrint "The ";
  TraceOperation 068273 (Print_obj (Con 95));
  Let b2 = M[001613];
  Let b3 = M[001614];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 068275 (Print_ret " is completely bewildered. It is so dim it thinks that if you can't see it, it can't see you. You have a few seconds before it realises its mistake.");
    GamePrint " is completely bewildered. It is so dim it thinks that if you can't see it, it can't see you. You have a few seconds before it realises its mistake.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 068275 (Print_ret " is completely bewildered. It is so dim it thinks that if you can't see it, it can't see you. You have a few seconds before it realises its mistake.");
    GamePrint " is completely bewildered. It is so dim it thinks that if you can't see it, it can't see you. You have a few seconds before it realises its mistake.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
--[457]--------------------------------------------------
LocRoutine 068422:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 16423;
  }
  Jump: 068425
LocOp 068425:
  TraceOperation 068425 (Sub (Con 70) (Var (Global 148)) (Global 162));
  Let b1 = M[008204];
  Let b2 = M[008205];
  SetByte 008232 HiByte(Sub(70,MakeHiLo(b1,b2)));
  SetByte 008233 LoByte(Sub(70,MakeHiLo(b1,b2)));
  TraceOperation 068429 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 068441)));
  Let b3 = M[001606];
  if (TestBit(b3,4)) {
    TraceOperation 068433 New_line;
    GamePrint "\n";
    TraceOperation 068434 New_line;
    GamePrint "\n";
    TraceOperation 068435 (Call (Floc 034400) [] Sp);
    PushFrame 068435;
    JumpCall: 034400, #actuals: 0
  } else {
    Jump: 068441
  }
LocReturn 068435:
  PushStack call_result;
  TraceOperation 068440 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 068441:
  TraceOperation 068441 (Jz (Var (Global 102)) (Branch T (Dloc 068491)));
  Let b1 = M[008112];
  Let b2 = M[008113];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 068491
  } else {
    TraceOperation 068444 (Print " You see that you have wandered in circles");
    GamePrint " You see that you have wandered in circles";
    TraceOperation 068465 (Je [Var (Global 0),Con 98] (Branch F (Dloc 068488)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),98)) {
      TraceOperation 068469 (Print " and ended right beside the ");
      GamePrint " and ended right beside the ";
      TraceOperation 068486 (Print_obj (Con 97));
      Let b5 = M[001631];
      Let b6 = M[001632];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        Jump: 068488
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        Jump: 068488
      }
    } else {
      Jump: 068488
    }
  }
LocOp 068488:
  TraceOperation 068488 (Print ".");
  GamePrint ".";
  Jump: 068491
LocOp 068491:
  TraceOperation 068491 (Print " Unfortunately, the Beast has also caught sight of you again. All this fooling around has made it doubly angry and hungry. ");
  GamePrint " Unfortunately, the Beast has also caught sight of you again. All this fooling around has made it doubly angry and hungry. ";
  TraceOperation 068552 (Call (Floc 085896) [] Sp);
  PushFrame 068552;
  JumpCall: 085896, #actuals: 0
LocReturn 068552:
  PushStack call_result;
  TraceOperation 068557 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[458]--------------------------------------------------
LocRoutine 068572:
  MakeRoutineFrame 0;
  Jump: 068573
LocOp 068573:
  TraceOperation 068573 (Get_child (Con 139) Sp (Branch F Dtrue));
  Let b1 = M[002008];
  PushStack Widen(b1);
  if (IsZero(Widen(b1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    TraceOperation 068577 Rfalse;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
--[459]--------------------------------------------------
LocRoutine 068588:
  MakeRoutineFrame 0;
  Jump: 068589
LocOp 068589:
  TraceOperation 068589 (Store (Con 75) (Var (Global 57)));
  Let b1 = M[008022];
  Let b2 = M[008023];
  SetByte 008026 b1;
  SetByte 008027 b2;
  TraceOperation 068592 (Dec (Con 69));
  Let b3 = M[008014];
  Let b4 = M[008015];
  SetByte 008014 HiByte(Sub(MakeHiLo(b3,b4),1));
  SetByte 008015 LoByte(Sub(MakeHiLo(b3,b4),1));
  TraceOperation 068594 (Print_ret "It's covered with little pink and blue flowers.");
  GamePrint "It's covered with little pink and blue flowers.\n";
  PopFrame return_address_5;
  JumpReturn: return_address_5, result: 1
--[460]--------------------------------------------------
LocRoutine 068636:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 068639
LocOp 068639:
  TraceOperation 068639 (Je [Var (Local 1),Con 6] (Branch F (Dloc 068675)));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 068643 (Call (Floc 020662) [Con -28826] Sp);
    PushFrame 068643;
    SetLocal 1 -28826;
    JumpCall: 020662, #actuals: 1
  } else {
    Jump: 068675
  }
LocReturn 068643:
  PushStack call_result;
  TraceOperation 068650 (Jz (Var Sp) (Branch F (Dloc 068675)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 068653 (Jz (Var (Global 145)) (Branch T (Dloc 068675)));
    Let b2 = M[008198];
    Let b3 = M[008199];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 068675
    } else {
      TraceOperation 068656 (Call (Floc 073420) [] Sp);
      PushFrame 068656;
      JumpCall: 073420, #actuals: 0
    }
  } else {
    Jump: 068675
  }
LocReturn 068656:
  PushStack call_result;
  TraceOperation 068661 (Call (Floc 022320) [Con -28826,Con 2] Sp);
  PushFrame 068661;
  SetLocal 1 -28826;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 068661:
  PushStack call_result;
  TraceOperation 068669 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068674 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 068675:
  TraceOperation 068675 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 068679 (Print "The rear garden is a pleasant place. I");
    GamePrint "The rear garden is a pleasant place. I";
    TraceOperation 068704 (Print_paddr (Var (Global 6)));
    Let b1 = M[007920];
    Let b2 = M[007921];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
    TraceOperation 068706 (Print_ret ", and it's a lovely day for a walk. A path leads around the house to the southeast and southwest.");
    GamePrint ", and it's a lovely day for a walk. A path leads around the house to the southeast and southwest.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[461]--------------------------------------------------
LocRoutine 068762:
  MakeRoutineFrame 0;
  Jump: 068763
LocOp 068763:
  TraceOperation 068763 (Je [Var (Global 203),Con 33,Con 35] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),33),Equal(MakeHiLo(b1,b2),35))) {
    TraceOperation 068769 (Print_ret "You were never very good at that.");
    GamePrint "You were never very good at that.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[462]--------------------------------------------------
LocRoutine 068790:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 068793
LocOp 068793:
  TraceOperation 068793 (Je [Var (Local 1),Con 2] (Branch F (Dloc 069211)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 068798 (Jz (Var (Global 139)) (Branch F (Dloc 068817)));
    Let b1 = M[008186];
    Let b2 = M[008187];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 068801 (Jz (Var (Global 145)) (Branch F (Dloc 068817)));
      Let b3 = M[008198];
      Let b4 = M[008199];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 068804 (Test_attr (Con 121) (Con 5) (Branch T (Dloc 068817)));
        Let b5 = M[001840];
        if (TestBit(b5,2)) {
          Jump: 068817
        } else {
          TraceOperation 068808 (Store (Con 158) (Con 3));
          SetByte 008192 0;
          SetByte 008193 3;
          TraceOperation 068811 (Call (Floc 061242) [] Sp);
          PushFrame 068811;
          JumpCall: 061242, #actuals: 0
        }
      } else {
        Jump: 068817
      }
    } else {
      Jump: 068817
    }
  } else {
    Jump: 069211
  }
LocReturn 068811:
  PushStack call_result;
  TraceOperation 068816 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 068817:
  TraceOperation 068817 (Je [Var (Global 120),Con 142] (Branch F (Dloc 068838)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 068821 (Jz (Var (Global 145)) (Branch T (Dloc 068838)));
    Let b3 = M[008198];
    Let b4 = M[008199];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 068838
    } else {
      TraceOperation 068824 (Call (Floc 022320) [Con -30860,Con 1] Sp);
      PushFrame 068824;
      SetLocal 1 -30860;
      SetLocal 2 1;
      JumpCall: 022320, #actuals: 2
    }
  } else {
    Jump: 068838
  }
LocReturn 068824:
  PushStack call_result;
  TraceOperation 068832 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068837 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 068838:
  TraceOperation 068838 (Je [Var (Global 130),Con 3] (Branch F (Dloc 068860)));
  Let b1 = M[008168];
  Let b2 = M[008169];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 068842 (Je [Var (Global 120),Con 123] (Branch F (Dloc 068860)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 068846 (Call (Floc 022320) [Con -30860,Con 1] Sp);
      PushFrame 068846;
      SetLocal 1 -30860;
      SetLocal 2 1;
      JumpCall: 022320, #actuals: 2
    } else {
      Jump: 068860
    }
  } else {
    Jump: 068860
  }
LocReturn 068846:
  PushStack call_result;
  TraceOperation 068854 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068859 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 068860:
  TraceOperation 068860 (Test_attr (Con 121) (Con 5) (Branch F Dfalse));
  Let b1 = M[001840];
  if (TestBit(b1,2)) {
    TraceOperation 068864 (Test_attr (Con 137) (Con 27) (Branch T Dfalse));
    Let b2 = M[001987];
    if (TestBit(b2,4)) {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    } else {
      TraceOperation 068868 (Get_parent (Con 141) Sp);
      Let b4 = M[002024];
      PushStack Widen(b4);
      TraceOperation 068871 (Storew (Var (Global 123)) (Con 0) (Var Sp));
      Let b5 = M[008154];
      Let b6 = M[008155];
      PopStack popped7;
      SetByte Offset(Address(MakeHiLo(b5,b6)),0) HiByte(popped7);
      SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),0),1) LoByte(popped7);
      TraceOperation 068876 (Get_parent (Con 7) Sp);
      Let b8 = M[000818];
      PushStack Widen(b8);
      TraceOperation 068879 (Storew (Var (Global 123)) (Con 1) (Var Sp));
      Let b9 = M[008154];
      Let b10 = M[008155];
      PopStack popped11;
      SetByte Offset(Address(MakeHiLo(b9,b10)),2) HiByte(popped11);
      SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),2),1) LoByte(popped11);
      TraceOperation 068884 (Get_parent (Con 1) Sp);
      Let b12 = M[000764];
      PushStack Widen(b12);
      TraceOperation 068887 (Storew (Var (Global 123)) (Con 2) (Var Sp));
      Let b13 = M[008154];
      Let b14 = M[008155];
      PopStack popped15;
      SetByte Offset(Address(MakeHiLo(b13,b14)),4) HiByte(popped15);
      SetByte Offset(Offset(Address(MakeHiLo(b13,b14)),4),1) LoByte(popped15);
      TraceOperation 068892 (Get_parent (Con 139) Sp);
      Let b16 = M[002006];
      PushStack Widen(b16);
      TraceOperation 068895 (Storew (Var (Global 123)) (Con 3) (Var Sp));
      Let b17 = M[008154];
      Let b18 = M[008155];
      PopStack popped19;
      SetByte Offset(Address(MakeHiLo(b17,b18)),6) HiByte(popped19);
      SetByte Offset(Offset(Address(MakeHiLo(b17,b18)),6),1) LoByte(popped19);
      TraceOperation 068900 (Get_parent (Con 122) Sp);
      Let b20 = M[001853];
      PushStack Widen(b20);
      TraceOperation 068903 (Storew (Var (Global 123)) (Con 5) (Var Sp));
      Let b21 = M[008154];
      Let b22 = M[008155];
      PopStack popped23;
      SetByte Offset(Address(MakeHiLo(b21,b22)),10) HiByte(popped23);
      SetByte Offset(Offset(Address(MakeHiLo(b21,b22)),10),1) LoByte(popped23);
      TraceOperation 068908 (Test_attr (Con 7) (Con 3) (Branch F (Dloc 068920)));
      Let b24 = M[000814];
      if (TestBit(b24,4)) {
        TraceOperation 068912 (Storew (Var (Global 123)) (Con 4) (Con 1));
        Let b25 = M[008154];
        Let b26 = M[008155];
        SetByte Offset(Address(MakeHiLo(b25,b26)),8) 0;
        SetByte Offset(Offset(Address(MakeHiLo(b25,b26)),8),1) 1;
        TraceOperation 068917 (Clear_attr (Con 7) (Con 3));
        Let b27 = M[000814];
        SetByte 000814 ClearBit(b27,4);
        Jump: 068920
      } else {
        Jump: 068920
      }
    }
  } else {
    PopFrame return_address_28;
    JumpReturn: return_address_28, result: 0
  }
LocOp 068920:
  TraceOperation 068920 (Set_attr (Con 137) (Con 27));
  Let b1 = M[001987];
  SetByte 001987 SetBit(b1,4);
  TraceOperation 068923 (Call (Floc 043644) [Con 31,Con 97] Sp);
  PushFrame 068923;
  SetLocal 1 31;
  SetLocal 2 97;
  JumpCall: 043644, #actuals: 2
LocReturn 068923:
  PushStack call_result;
  TraceOperation 068930 (Insert_obj (Con 141) (Con 31));
  Let b1 = M[002024];
  if (IsZero(Widen(b1))) {
    SetByte 002024 31;
    Let b2 = M[001036];
    SetByte 002025 LoByte(Widen(b2));
    SetByte 001036 141;
    TraceOperation 068933 (Insert_obj (Con 7) (Con 141));
    Let b3 = M[000818];
    if (IsZero(Widen(b3))) {
      SetByte 000818 141;
      Let b4 = M[002026];
      SetByte 000819 LoByte(Widen(b4));
      SetByte 002026 7;
      TraceOperation 068936 (Insert_obj (Con 1) (Con 141));
      Let b5 = M[000764];
      if (IsZero(Widen(b5))) {
        SetByte 000764 141;
        Let b6 = M[002026];
        SetByte 000765 LoByte(Widen(b6));
        SetByte 002026 1;
        TraceOperation 068939 (Insert_obj (Con 139) (Con 141));
        Let b7 = M[002006];
        if (IsZero(Widen(b7))) {
          SetByte 002006 141;
          Let b8 = M[002026];
          SetByte 002007 LoByte(Widen(b8));
          SetByte 002026 139;
          TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
          Let b9 = M[001853];
          if (IsZero(Widen(b9))) {
            SetByte 001853 141;
            Let b10 = M[002026];
            SetByte 001854 LoByte(Widen(b10));
            SetByte 002026 122;
            TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
            Let b11 = M[001862];
            if (IsZero(Widen(b11))) {
              SetByte 001862 149;
              Let b12 = M[002098];
              SetByte 001863 LoByte(Widen(b12));
              SetByte 002098 123;
              TraceOperation 068948 (Store (Con 136) (Con 142));
              SetByte 008148 0;
              SetByte 008149 142;
              TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
              Let b13 = M[002033];
              if (IsZero(Widen(b13))) {
                SetByte 002033 169;
                Let b14 = M[002278];
                SetByte 002034 LoByte(Widen(b14));
                SetByte 002278 142;
                TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                Let b15 = M[001889];
                if (IsZero(Widen(b15))) {
                  SetByte 001889 134;
                  Let b16 = M[001963];
                  SetByte 001890 LoByte(Widen(b16));
                  SetByte 001963 126;
                  TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                  Let b17 = M[001887];
                  SetByte 001887 SetBit(b17,2);
                  TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                  Let b18 = M[001888];
                  SetByte 001888 SetBit(b18,4);
                  TraceOperation 068963 (Store (Con 143) (Con 0));
                  SetByte 008162 0;
                  SetByte 008163 0;
                  TraceOperation 068966 (Store (Con 91) (Con 1));
                  SetByte 008058 0;
                  SetByte 008059 1;
                  TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                  PushFrame 068969;
                  SetLocal 1 -28826;
                  SetLocal 2 38;
                  JumpCall: 022320, #actuals: 2
                } else {
                  Let b19 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
                  if (Equal(Widen(b19),126)) {
                    Let b20 = M[001890];
                    SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b20));
                    SetByte 001889 134;
                    Let b21 = M[001963];
                    SetByte 001890 LoByte(Widen(b21));
                    SetByte 001963 126;
                    TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                    Let b22 = M[001887];
                    SetByte 001887 SetBit(b22,2);
                    TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                    Let b23 = M[001888];
                    SetByte 001888 SetBit(b23,4);
                    TraceOperation 068963 (Store (Con 143) (Con 0));
                    SetByte 008162 0;
                    SetByte 008163 0;
                    TraceOperation 068966 (Store (Con 91) (Con 1));
                    SetByte 008058 0;
                    SetByte 008059 1;
                    TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                    PushFrame 068969;
                    SetLocal 1 -28826;
                    SetLocal 2 38;
                    JumpCall: 022320, #actuals: 2
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b24 = M[Offset(Offset(000751,Mul(Widen(b13),9)),6)];
                if (Equal(Widen(b24),142)) {
                  Let b25 = M[002034];
                  SetByte Offset(Offset(000751,Mul(Widen(b13),9)),6) LoByte(Widen(b25));
                  SetByte 002033 169;
                  Let b26 = M[002278];
                  SetByte 002034 LoByte(Widen(b26));
                  SetByte 002278 142;
                  TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                  Let b27 = M[001889];
                  if (IsZero(Widen(b27))) {
                    SetByte 001889 134;
                    Let b28 = M[001963];
                    SetByte 001890 LoByte(Widen(b28));
                    SetByte 001963 126;
                    TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                    Let b29 = M[001887];
                    SetByte 001887 SetBit(b29,2);
                    TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                    Let b30 = M[001888];
                    SetByte 001888 SetBit(b30,4);
                    TraceOperation 068963 (Store (Con 143) (Con 0));
                    SetByte 008162 0;
                    SetByte 008163 0;
                    TraceOperation 068966 (Store (Con 91) (Con 1));
                    SetByte 008058 0;
                    SetByte 008059 1;
                    TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                    PushFrame 068969;
                    SetLocal 1 -28826;
                    SetLocal 2 38;
                    JumpCall: 022320, #actuals: 2
                  } else {
                    Let b31 = M[Offset(Offset(000751,Mul(Widen(b27),9)),6)];
                    if (Equal(Widen(b31),126)) {
                      Let b32 = M[001890];
                      SetByte Offset(Offset(000751,Mul(Widen(b27),9)),6) LoByte(Widen(b32));
                      SetByte 001889 134;
                      Let b33 = M[001963];
                      SetByte 001890 LoByte(Widen(b33));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b34 = M[001887];
                      SetByte 001887 SetBit(b34,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b35 = M[001888];
                      SetByte 001888 SetBit(b35,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b36 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
              if (Equal(Widen(b36),123)) {
                Let b37 = M[001863];
                SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b37));
                SetByte 001862 149;
                Let b38 = M[002098];
                SetByte 001863 LoByte(Widen(b38));
                SetByte 002098 123;
                TraceOperation 068948 (Store (Con 136) (Con 142));
                SetByte 008148 0;
                SetByte 008149 142;
                TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                Let b39 = M[002033];
                if (IsZero(Widen(b39))) {
                  SetByte 002033 169;
                  Let b40 = M[002278];
                  SetByte 002034 LoByte(Widen(b40));
                  SetByte 002278 142;
                  TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                  Let b41 = M[001889];
                  if (IsZero(Widen(b41))) {
                    SetByte 001889 134;
                    Let b42 = M[001963];
                    SetByte 001890 LoByte(Widen(b42));
                    SetByte 001963 126;
                    TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                    Let b43 = M[001887];
                    SetByte 001887 SetBit(b43,2);
                    TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                    Let b44 = M[001888];
                    SetByte 001888 SetBit(b44,4);
                    TraceOperation 068963 (Store (Con 143) (Con 0));
                    SetByte 008162 0;
                    SetByte 008163 0;
                    TraceOperation 068966 (Store (Con 91) (Con 1));
                    SetByte 008058 0;
                    SetByte 008059 1;
                    TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                    PushFrame 068969;
                    SetLocal 1 -28826;
                    SetLocal 2 38;
                    JumpCall: 022320, #actuals: 2
                  } else {
                    Let b45 = M[Offset(Offset(000751,Mul(Widen(b41),9)),6)];
                    if (Equal(Widen(b45),126)) {
                      Let b46 = M[001890];
                      SetByte Offset(Offset(000751,Mul(Widen(b41),9)),6) LoByte(Widen(b46));
                      SetByte 001889 134;
                      Let b47 = M[001963];
                      SetByte 001890 LoByte(Widen(b47));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b48 = M[001887];
                      SetByte 001887 SetBit(b48,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b49 = M[001888];
                      SetByte 001888 SetBit(b49,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b50 = M[Offset(Offset(000751,Mul(Widen(b39),9)),6)];
                  if (Equal(Widen(b50),142)) {
                    Let b51 = M[002034];
                    SetByte Offset(Offset(000751,Mul(Widen(b39),9)),6) LoByte(Widen(b51));
                    SetByte 002033 169;
                    Let b52 = M[002278];
                    SetByte 002034 LoByte(Widen(b52));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b53 = M[001889];
                    if (IsZero(Widen(b53))) {
                      SetByte 001889 134;
                      Let b54 = M[001963];
                      SetByte 001890 LoByte(Widen(b54));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b55 = M[001887];
                      SetByte 001887 SetBit(b55,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b56 = M[001888];
                      SetByte 001888 SetBit(b56,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b57 = M[Offset(Offset(000751,Mul(Widen(b53),9)),6)];
                      if (Equal(Widen(b57),126)) {
                        Let b58 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b53),9)),6) LoByte(Widen(b58));
                        SetByte 001889 134;
                        Let b59 = M[001963];
                        SetByte 001890 LoByte(Widen(b59));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b60 = M[001887];
                        SetByte 001887 SetBit(b60,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b61 = M[001888];
                        SetByte 001888 SetBit(b61,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b62 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
            if (Equal(Widen(b62),122)) {
              Let b63 = M[001854];
              SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b63));
              SetByte 001853 141;
              Let b64 = M[002026];
              SetByte 001854 LoByte(Widen(b64));
              SetByte 002026 122;
              TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
              Let b65 = M[001862];
              if (IsZero(Widen(b65))) {
                SetByte 001862 149;
                Let b66 = M[002098];
                SetByte 001863 LoByte(Widen(b66));
                SetByte 002098 123;
                TraceOperation 068948 (Store (Con 136) (Con 142));
                SetByte 008148 0;
                SetByte 008149 142;
                TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                Let b67 = M[002033];
                if (IsZero(Widen(b67))) {
                  SetByte 002033 169;
                  Let b68 = M[002278];
                  SetByte 002034 LoByte(Widen(b68));
                  SetByte 002278 142;
                  TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                  Let b69 = M[001889];
                  if (IsZero(Widen(b69))) {
                    SetByte 001889 134;
                    Let b70 = M[001963];
                    SetByte 001890 LoByte(Widen(b70));
                    SetByte 001963 126;
                    TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                    Let b71 = M[001887];
                    SetByte 001887 SetBit(b71,2);
                    TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                    Let b72 = M[001888];
                    SetByte 001888 SetBit(b72,4);
                    TraceOperation 068963 (Store (Con 143) (Con 0));
                    SetByte 008162 0;
                    SetByte 008163 0;
                    TraceOperation 068966 (Store (Con 91) (Con 1));
                    SetByte 008058 0;
                    SetByte 008059 1;
                    TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                    PushFrame 068969;
                    SetLocal 1 -28826;
                    SetLocal 2 38;
                    JumpCall: 022320, #actuals: 2
                  } else {
                    Let b73 = M[Offset(Offset(000751,Mul(Widen(b69),9)),6)];
                    if (Equal(Widen(b73),126)) {
                      Let b74 = M[001890];
                      SetByte Offset(Offset(000751,Mul(Widen(b69),9)),6) LoByte(Widen(b74));
                      SetByte 001889 134;
                      Let b75 = M[001963];
                      SetByte 001890 LoByte(Widen(b75));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b76 = M[001887];
                      SetByte 001887 SetBit(b76,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b77 = M[001888];
                      SetByte 001888 SetBit(b77,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b78 = M[Offset(Offset(000751,Mul(Widen(b67),9)),6)];
                  if (Equal(Widen(b78),142)) {
                    Let b79 = M[002034];
                    SetByte Offset(Offset(000751,Mul(Widen(b67),9)),6) LoByte(Widen(b79));
                    SetByte 002033 169;
                    Let b80 = M[002278];
                    SetByte 002034 LoByte(Widen(b80));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b81 = M[001889];
                    if (IsZero(Widen(b81))) {
                      SetByte 001889 134;
                      Let b82 = M[001963];
                      SetByte 001890 LoByte(Widen(b82));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b83 = M[001887];
                      SetByte 001887 SetBit(b83,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b84 = M[001888];
                      SetByte 001888 SetBit(b84,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b85 = M[Offset(Offset(000751,Mul(Widen(b81),9)),6)];
                      if (Equal(Widen(b85),126)) {
                        Let b86 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b81),9)),6) LoByte(Widen(b86));
                        SetByte 001889 134;
                        Let b87 = M[001963];
                        SetByte 001890 LoByte(Widen(b87));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b88 = M[001887];
                        SetByte 001887 SetBit(b88,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b89 = M[001888];
                        SetByte 001888 SetBit(b89,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b90 = M[Offset(Offset(000751,Mul(Widen(b65),9)),6)];
                if (Equal(Widen(b90),123)) {
                  Let b91 = M[001863];
                  SetByte Offset(Offset(000751,Mul(Widen(b65),9)),6) LoByte(Widen(b91));
                  SetByte 001862 149;
                  Let b92 = M[002098];
                  SetByte 001863 LoByte(Widen(b92));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b93 = M[002033];
                  if (IsZero(Widen(b93))) {
                    SetByte 002033 169;
                    Let b94 = M[002278];
                    SetByte 002034 LoByte(Widen(b94));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b95 = M[001889];
                    if (IsZero(Widen(b95))) {
                      SetByte 001889 134;
                      Let b96 = M[001963];
                      SetByte 001890 LoByte(Widen(b96));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b97 = M[001887];
                      SetByte 001887 SetBit(b97,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b98 = M[001888];
                      SetByte 001888 SetBit(b98,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b99 = M[Offset(Offset(000751,Mul(Widen(b95),9)),6)];
                      if (Equal(Widen(b99),126)) {
                        Let b100 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b95),9)),6) LoByte(Widen(b100));
                        SetByte 001889 134;
                        Let b101 = M[001963];
                        SetByte 001890 LoByte(Widen(b101));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b102 = M[001887];
                        SetByte 001887 SetBit(b102,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b103 = M[001888];
                        SetByte 001888 SetBit(b103,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b104 = M[Offset(Offset(000751,Mul(Widen(b93),9)),6)];
                    if (Equal(Widen(b104),142)) {
                      Let b105 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b93),9)),6) LoByte(Widen(b105));
                      SetByte 002033 169;
                      Let b106 = M[002278];
                      SetByte 002034 LoByte(Widen(b106));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b107 = M[001889];
                      if (IsZero(Widen(b107))) {
                        SetByte 001889 134;
                        Let b108 = M[001963];
                        SetByte 001890 LoByte(Widen(b108));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b109 = M[001887];
                        SetByte 001887 SetBit(b109,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b110 = M[001888];
                        SetByte 001888 SetBit(b110,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b111 = M[Offset(Offset(000751,Mul(Widen(b107),9)),6)];
                        if (Equal(Widen(b111),126)) {
                          Let b112 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b107),9)),6) LoByte(Widen(b112));
                          SetByte 001889 134;
                          Let b113 = M[001963];
                          SetByte 001890 LoByte(Widen(b113));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b114 = M[001887];
                          SetByte 001887 SetBit(b114,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b115 = M[001888];
                          SetByte 001888 SetBit(b115,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b116 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
          if (Equal(Widen(b116),139)) {
            Let b117 = M[002007];
            SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b117));
            SetByte 002006 141;
            Let b118 = M[002026];
            SetByte 002007 LoByte(Widen(b118));
            SetByte 002026 139;
            TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
            Let b119 = M[001853];
            if (IsZero(Widen(b119))) {
              SetByte 001853 141;
              Let b120 = M[002026];
              SetByte 001854 LoByte(Widen(b120));
              SetByte 002026 122;
              TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
              Let b121 = M[001862];
              if (IsZero(Widen(b121))) {
                SetByte 001862 149;
                Let b122 = M[002098];
                SetByte 001863 LoByte(Widen(b122));
                SetByte 002098 123;
                TraceOperation 068948 (Store (Con 136) (Con 142));
                SetByte 008148 0;
                SetByte 008149 142;
                TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                Let b123 = M[002033];
                if (IsZero(Widen(b123))) {
                  SetByte 002033 169;
                  Let b124 = M[002278];
                  SetByte 002034 LoByte(Widen(b124));
                  SetByte 002278 142;
                  TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                  Let b125 = M[001889];
                  if (IsZero(Widen(b125))) {
                    SetByte 001889 134;
                    Let b126 = M[001963];
                    SetByte 001890 LoByte(Widen(b126));
                    SetByte 001963 126;
                    TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                    Let b127 = M[001887];
                    SetByte 001887 SetBit(b127,2);
                    TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                    Let b128 = M[001888];
                    SetByte 001888 SetBit(b128,4);
                    TraceOperation 068963 (Store (Con 143) (Con 0));
                    SetByte 008162 0;
                    SetByte 008163 0;
                    TraceOperation 068966 (Store (Con 91) (Con 1));
                    SetByte 008058 0;
                    SetByte 008059 1;
                    TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                    PushFrame 068969;
                    SetLocal 1 -28826;
                    SetLocal 2 38;
                    JumpCall: 022320, #actuals: 2
                  } else {
                    Let b129 = M[Offset(Offset(000751,Mul(Widen(b125),9)),6)];
                    if (Equal(Widen(b129),126)) {
                      Let b130 = M[001890];
                      SetByte Offset(Offset(000751,Mul(Widen(b125),9)),6) LoByte(Widen(b130));
                      SetByte 001889 134;
                      Let b131 = M[001963];
                      SetByte 001890 LoByte(Widen(b131));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b132 = M[001887];
                      SetByte 001887 SetBit(b132,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b133 = M[001888];
                      SetByte 001888 SetBit(b133,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b134 = M[Offset(Offset(000751,Mul(Widen(b123),9)),6)];
                  if (Equal(Widen(b134),142)) {
                    Let b135 = M[002034];
                    SetByte Offset(Offset(000751,Mul(Widen(b123),9)),6) LoByte(Widen(b135));
                    SetByte 002033 169;
                    Let b136 = M[002278];
                    SetByte 002034 LoByte(Widen(b136));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b137 = M[001889];
                    if (IsZero(Widen(b137))) {
                      SetByte 001889 134;
                      Let b138 = M[001963];
                      SetByte 001890 LoByte(Widen(b138));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b139 = M[001887];
                      SetByte 001887 SetBit(b139,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b140 = M[001888];
                      SetByte 001888 SetBit(b140,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b141 = M[Offset(Offset(000751,Mul(Widen(b137),9)),6)];
                      if (Equal(Widen(b141),126)) {
                        Let b142 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b137),9)),6) LoByte(Widen(b142));
                        SetByte 001889 134;
                        Let b143 = M[001963];
                        SetByte 001890 LoByte(Widen(b143));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b144 = M[001887];
                        SetByte 001887 SetBit(b144,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b145 = M[001888];
                        SetByte 001888 SetBit(b145,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b146 = M[Offset(Offset(000751,Mul(Widen(b121),9)),6)];
                if (Equal(Widen(b146),123)) {
                  Let b147 = M[001863];
                  SetByte Offset(Offset(000751,Mul(Widen(b121),9)),6) LoByte(Widen(b147));
                  SetByte 001862 149;
                  Let b148 = M[002098];
                  SetByte 001863 LoByte(Widen(b148));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b149 = M[002033];
                  if (IsZero(Widen(b149))) {
                    SetByte 002033 169;
                    Let b150 = M[002278];
                    SetByte 002034 LoByte(Widen(b150));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b151 = M[001889];
                    if (IsZero(Widen(b151))) {
                      SetByte 001889 134;
                      Let b152 = M[001963];
                      SetByte 001890 LoByte(Widen(b152));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b153 = M[001887];
                      SetByte 001887 SetBit(b153,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b154 = M[001888];
                      SetByte 001888 SetBit(b154,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b155 = M[Offset(Offset(000751,Mul(Widen(b151),9)),6)];
                      if (Equal(Widen(b155),126)) {
                        Let b156 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b151),9)),6) LoByte(Widen(b156));
                        SetByte 001889 134;
                        Let b157 = M[001963];
                        SetByte 001890 LoByte(Widen(b157));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b158 = M[001887];
                        SetByte 001887 SetBit(b158,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b159 = M[001888];
                        SetByte 001888 SetBit(b159,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b160 = M[Offset(Offset(000751,Mul(Widen(b149),9)),6)];
                    if (Equal(Widen(b160),142)) {
                      Let b161 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b149),9)),6) LoByte(Widen(b161));
                      SetByte 002033 169;
                      Let b162 = M[002278];
                      SetByte 002034 LoByte(Widen(b162));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b163 = M[001889];
                      if (IsZero(Widen(b163))) {
                        SetByte 001889 134;
                        Let b164 = M[001963];
                        SetByte 001890 LoByte(Widen(b164));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b165 = M[001887];
                        SetByte 001887 SetBit(b165,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b166 = M[001888];
                        SetByte 001888 SetBit(b166,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b167 = M[Offset(Offset(000751,Mul(Widen(b163),9)),6)];
                        if (Equal(Widen(b167),126)) {
                          Let b168 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b163),9)),6) LoByte(Widen(b168));
                          SetByte 001889 134;
                          Let b169 = M[001963];
                          SetByte 001890 LoByte(Widen(b169));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b170 = M[001887];
                          SetByte 001887 SetBit(b170,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b171 = M[001888];
                          SetByte 001888 SetBit(b171,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b172 = M[Offset(Offset(000751,Mul(Widen(b119),9)),6)];
              if (Equal(Widen(b172),122)) {
                Let b173 = M[001854];
                SetByte Offset(Offset(000751,Mul(Widen(b119),9)),6) LoByte(Widen(b173));
                SetByte 001853 141;
                Let b174 = M[002026];
                SetByte 001854 LoByte(Widen(b174));
                SetByte 002026 122;
                TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                Let b175 = M[001862];
                if (IsZero(Widen(b175))) {
                  SetByte 001862 149;
                  Let b176 = M[002098];
                  SetByte 001863 LoByte(Widen(b176));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b177 = M[002033];
                  if (IsZero(Widen(b177))) {
                    SetByte 002033 169;
                    Let b178 = M[002278];
                    SetByte 002034 LoByte(Widen(b178));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b179 = M[001889];
                    if (IsZero(Widen(b179))) {
                      SetByte 001889 134;
                      Let b180 = M[001963];
                      SetByte 001890 LoByte(Widen(b180));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b181 = M[001887];
                      SetByte 001887 SetBit(b181,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b182 = M[001888];
                      SetByte 001888 SetBit(b182,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b183 = M[Offset(Offset(000751,Mul(Widen(b179),9)),6)];
                      if (Equal(Widen(b183),126)) {
                        Let b184 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b179),9)),6) LoByte(Widen(b184));
                        SetByte 001889 134;
                        Let b185 = M[001963];
                        SetByte 001890 LoByte(Widen(b185));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b186 = M[001887];
                        SetByte 001887 SetBit(b186,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b187 = M[001888];
                        SetByte 001888 SetBit(b187,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b188 = M[Offset(Offset(000751,Mul(Widen(b177),9)),6)];
                    if (Equal(Widen(b188),142)) {
                      Let b189 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b177),9)),6) LoByte(Widen(b189));
                      SetByte 002033 169;
                      Let b190 = M[002278];
                      SetByte 002034 LoByte(Widen(b190));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b191 = M[001889];
                      if (IsZero(Widen(b191))) {
                        SetByte 001889 134;
                        Let b192 = M[001963];
                        SetByte 001890 LoByte(Widen(b192));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b193 = M[001887];
                        SetByte 001887 SetBit(b193,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b194 = M[001888];
                        SetByte 001888 SetBit(b194,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b195 = M[Offset(Offset(000751,Mul(Widen(b191),9)),6)];
                        if (Equal(Widen(b195),126)) {
                          Let b196 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b191),9)),6) LoByte(Widen(b196));
                          SetByte 001889 134;
                          Let b197 = M[001963];
                          SetByte 001890 LoByte(Widen(b197));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b198 = M[001887];
                          SetByte 001887 SetBit(b198,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b199 = M[001888];
                          SetByte 001888 SetBit(b199,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b200 = M[Offset(Offset(000751,Mul(Widen(b175),9)),6)];
                  if (Equal(Widen(b200),123)) {
                    Let b201 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b175),9)),6) LoByte(Widen(b201));
                    SetByte 001862 149;
                    Let b202 = M[002098];
                    SetByte 001863 LoByte(Widen(b202));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b203 = M[002033];
                    if (IsZero(Widen(b203))) {
                      SetByte 002033 169;
                      Let b204 = M[002278];
                      SetByte 002034 LoByte(Widen(b204));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b205 = M[001889];
                      if (IsZero(Widen(b205))) {
                        SetByte 001889 134;
                        Let b206 = M[001963];
                        SetByte 001890 LoByte(Widen(b206));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b207 = M[001887];
                        SetByte 001887 SetBit(b207,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b208 = M[001888];
                        SetByte 001888 SetBit(b208,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b209 = M[Offset(Offset(000751,Mul(Widen(b205),9)),6)];
                        if (Equal(Widen(b209),126)) {
                          Let b210 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b205),9)),6) LoByte(Widen(b210));
                          SetByte 001889 134;
                          Let b211 = M[001963];
                          SetByte 001890 LoByte(Widen(b211));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b212 = M[001887];
                          SetByte 001887 SetBit(b212,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b213 = M[001888];
                          SetByte 001888 SetBit(b213,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b214 = M[Offset(Offset(000751,Mul(Widen(b203),9)),6)];
                      if (Equal(Widen(b214),142)) {
                        Let b215 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b203),9)),6) LoByte(Widen(b215));
                        SetByte 002033 169;
                        Let b216 = M[002278];
                        SetByte 002034 LoByte(Widen(b216));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b217 = M[001889];
                        if (IsZero(Widen(b217))) {
                          SetByte 001889 134;
                          Let b218 = M[001963];
                          SetByte 001890 LoByte(Widen(b218));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b219 = M[001887];
                          SetByte 001887 SetBit(b219,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b220 = M[001888];
                          SetByte 001888 SetBit(b220,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b221 = M[Offset(Offset(000751,Mul(Widen(b217),9)),6)];
                          if (Equal(Widen(b221),126)) {
                            Let b222 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b217),9)),6) LoByte(Widen(b222));
                            SetByte 001889 134;
                            Let b223 = M[001963];
                            SetByte 001890 LoByte(Widen(b223));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b224 = M[001887];
                            SetByte 001887 SetBit(b224,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b225 = M[001888];
                            SetByte 001888 SetBit(b225,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b226 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b226),1)) {
          Let b227 = M[000765];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b227));
          SetByte 000764 141;
          Let b228 = M[002026];
          SetByte 000765 LoByte(Widen(b228));
          SetByte 002026 1;
          TraceOperation 068939 (Insert_obj (Con 139) (Con 141));
          Let b229 = M[002006];
          if (IsZero(Widen(b229))) {
            SetByte 002006 141;
            Let b230 = M[002026];
            SetByte 002007 LoByte(Widen(b230));
            SetByte 002026 139;
            TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
            Let b231 = M[001853];
            if (IsZero(Widen(b231))) {
              SetByte 001853 141;
              Let b232 = M[002026];
              SetByte 001854 LoByte(Widen(b232));
              SetByte 002026 122;
              TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
              Let b233 = M[001862];
              if (IsZero(Widen(b233))) {
                SetByte 001862 149;
                Let b234 = M[002098];
                SetByte 001863 LoByte(Widen(b234));
                SetByte 002098 123;
                TraceOperation 068948 (Store (Con 136) (Con 142));
                SetByte 008148 0;
                SetByte 008149 142;
                TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                Let b235 = M[002033];
                if (IsZero(Widen(b235))) {
                  SetByte 002033 169;
                  Let b236 = M[002278];
                  SetByte 002034 LoByte(Widen(b236));
                  SetByte 002278 142;
                  TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                  Let b237 = M[001889];
                  if (IsZero(Widen(b237))) {
                    SetByte 001889 134;
                    Let b238 = M[001963];
                    SetByte 001890 LoByte(Widen(b238));
                    SetByte 001963 126;
                    TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                    Let b239 = M[001887];
                    SetByte 001887 SetBit(b239,2);
                    TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                    Let b240 = M[001888];
                    SetByte 001888 SetBit(b240,4);
                    TraceOperation 068963 (Store (Con 143) (Con 0));
                    SetByte 008162 0;
                    SetByte 008163 0;
                    TraceOperation 068966 (Store (Con 91) (Con 1));
                    SetByte 008058 0;
                    SetByte 008059 1;
                    TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                    PushFrame 068969;
                    SetLocal 1 -28826;
                    SetLocal 2 38;
                    JumpCall: 022320, #actuals: 2
                  } else {
                    Let b241 = M[Offset(Offset(000751,Mul(Widen(b237),9)),6)];
                    if (Equal(Widen(b241),126)) {
                      Let b242 = M[001890];
                      SetByte Offset(Offset(000751,Mul(Widen(b237),9)),6) LoByte(Widen(b242));
                      SetByte 001889 134;
                      Let b243 = M[001963];
                      SetByte 001890 LoByte(Widen(b243));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b244 = M[001887];
                      SetByte 001887 SetBit(b244,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b245 = M[001888];
                      SetByte 001888 SetBit(b245,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b246 = M[Offset(Offset(000751,Mul(Widen(b235),9)),6)];
                  if (Equal(Widen(b246),142)) {
                    Let b247 = M[002034];
                    SetByte Offset(Offset(000751,Mul(Widen(b235),9)),6) LoByte(Widen(b247));
                    SetByte 002033 169;
                    Let b248 = M[002278];
                    SetByte 002034 LoByte(Widen(b248));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b249 = M[001889];
                    if (IsZero(Widen(b249))) {
                      SetByte 001889 134;
                      Let b250 = M[001963];
                      SetByte 001890 LoByte(Widen(b250));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b251 = M[001887];
                      SetByte 001887 SetBit(b251,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b252 = M[001888];
                      SetByte 001888 SetBit(b252,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b253 = M[Offset(Offset(000751,Mul(Widen(b249),9)),6)];
                      if (Equal(Widen(b253),126)) {
                        Let b254 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b249),9)),6) LoByte(Widen(b254));
                        SetByte 001889 134;
                        Let b255 = M[001963];
                        SetByte 001890 LoByte(Widen(b255));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b256 = M[001887];
                        SetByte 001887 SetBit(b256,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b257 = M[001888];
                        SetByte 001888 SetBit(b257,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b258 = M[Offset(Offset(000751,Mul(Widen(b233),9)),6)];
                if (Equal(Widen(b258),123)) {
                  Let b259 = M[001863];
                  SetByte Offset(Offset(000751,Mul(Widen(b233),9)),6) LoByte(Widen(b259));
                  SetByte 001862 149;
                  Let b260 = M[002098];
                  SetByte 001863 LoByte(Widen(b260));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b261 = M[002033];
                  if (IsZero(Widen(b261))) {
                    SetByte 002033 169;
                    Let b262 = M[002278];
                    SetByte 002034 LoByte(Widen(b262));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b263 = M[001889];
                    if (IsZero(Widen(b263))) {
                      SetByte 001889 134;
                      Let b264 = M[001963];
                      SetByte 001890 LoByte(Widen(b264));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b265 = M[001887];
                      SetByte 001887 SetBit(b265,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b266 = M[001888];
                      SetByte 001888 SetBit(b266,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b267 = M[Offset(Offset(000751,Mul(Widen(b263),9)),6)];
                      if (Equal(Widen(b267),126)) {
                        Let b268 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b263),9)),6) LoByte(Widen(b268));
                        SetByte 001889 134;
                        Let b269 = M[001963];
                        SetByte 001890 LoByte(Widen(b269));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b270 = M[001887];
                        SetByte 001887 SetBit(b270,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b271 = M[001888];
                        SetByte 001888 SetBit(b271,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b272 = M[Offset(Offset(000751,Mul(Widen(b261),9)),6)];
                    if (Equal(Widen(b272),142)) {
                      Let b273 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b261),9)),6) LoByte(Widen(b273));
                      SetByte 002033 169;
                      Let b274 = M[002278];
                      SetByte 002034 LoByte(Widen(b274));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b275 = M[001889];
                      if (IsZero(Widen(b275))) {
                        SetByte 001889 134;
                        Let b276 = M[001963];
                        SetByte 001890 LoByte(Widen(b276));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b277 = M[001887];
                        SetByte 001887 SetBit(b277,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b278 = M[001888];
                        SetByte 001888 SetBit(b278,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b279 = M[Offset(Offset(000751,Mul(Widen(b275),9)),6)];
                        if (Equal(Widen(b279),126)) {
                          Let b280 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b275),9)),6) LoByte(Widen(b280));
                          SetByte 001889 134;
                          Let b281 = M[001963];
                          SetByte 001890 LoByte(Widen(b281));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b282 = M[001887];
                          SetByte 001887 SetBit(b282,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b283 = M[001888];
                          SetByte 001888 SetBit(b283,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b284 = M[Offset(Offset(000751,Mul(Widen(b231),9)),6)];
              if (Equal(Widen(b284),122)) {
                Let b285 = M[001854];
                SetByte Offset(Offset(000751,Mul(Widen(b231),9)),6) LoByte(Widen(b285));
                SetByte 001853 141;
                Let b286 = M[002026];
                SetByte 001854 LoByte(Widen(b286));
                SetByte 002026 122;
                TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                Let b287 = M[001862];
                if (IsZero(Widen(b287))) {
                  SetByte 001862 149;
                  Let b288 = M[002098];
                  SetByte 001863 LoByte(Widen(b288));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b289 = M[002033];
                  if (IsZero(Widen(b289))) {
                    SetByte 002033 169;
                    Let b290 = M[002278];
                    SetByte 002034 LoByte(Widen(b290));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b291 = M[001889];
                    if (IsZero(Widen(b291))) {
                      SetByte 001889 134;
                      Let b292 = M[001963];
                      SetByte 001890 LoByte(Widen(b292));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b293 = M[001887];
                      SetByte 001887 SetBit(b293,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b294 = M[001888];
                      SetByte 001888 SetBit(b294,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b295 = M[Offset(Offset(000751,Mul(Widen(b291),9)),6)];
                      if (Equal(Widen(b295),126)) {
                        Let b296 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b291),9)),6) LoByte(Widen(b296));
                        SetByte 001889 134;
                        Let b297 = M[001963];
                        SetByte 001890 LoByte(Widen(b297));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b298 = M[001887];
                        SetByte 001887 SetBit(b298,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b299 = M[001888];
                        SetByte 001888 SetBit(b299,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b300 = M[Offset(Offset(000751,Mul(Widen(b289),9)),6)];
                    if (Equal(Widen(b300),142)) {
                      Let b301 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b289),9)),6) LoByte(Widen(b301));
                      SetByte 002033 169;
                      Let b302 = M[002278];
                      SetByte 002034 LoByte(Widen(b302));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b303 = M[001889];
                      if (IsZero(Widen(b303))) {
                        SetByte 001889 134;
                        Let b304 = M[001963];
                        SetByte 001890 LoByte(Widen(b304));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b305 = M[001887];
                        SetByte 001887 SetBit(b305,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b306 = M[001888];
                        SetByte 001888 SetBit(b306,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b307 = M[Offset(Offset(000751,Mul(Widen(b303),9)),6)];
                        if (Equal(Widen(b307),126)) {
                          Let b308 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b303),9)),6) LoByte(Widen(b308));
                          SetByte 001889 134;
                          Let b309 = M[001963];
                          SetByte 001890 LoByte(Widen(b309));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b310 = M[001887];
                          SetByte 001887 SetBit(b310,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b311 = M[001888];
                          SetByte 001888 SetBit(b311,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b312 = M[Offset(Offset(000751,Mul(Widen(b287),9)),6)];
                  if (Equal(Widen(b312),123)) {
                    Let b313 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b287),9)),6) LoByte(Widen(b313));
                    SetByte 001862 149;
                    Let b314 = M[002098];
                    SetByte 001863 LoByte(Widen(b314));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b315 = M[002033];
                    if (IsZero(Widen(b315))) {
                      SetByte 002033 169;
                      Let b316 = M[002278];
                      SetByte 002034 LoByte(Widen(b316));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b317 = M[001889];
                      if (IsZero(Widen(b317))) {
                        SetByte 001889 134;
                        Let b318 = M[001963];
                        SetByte 001890 LoByte(Widen(b318));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b319 = M[001887];
                        SetByte 001887 SetBit(b319,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b320 = M[001888];
                        SetByte 001888 SetBit(b320,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b321 = M[Offset(Offset(000751,Mul(Widen(b317),9)),6)];
                        if (Equal(Widen(b321),126)) {
                          Let b322 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b317),9)),6) LoByte(Widen(b322));
                          SetByte 001889 134;
                          Let b323 = M[001963];
                          SetByte 001890 LoByte(Widen(b323));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b324 = M[001887];
                          SetByte 001887 SetBit(b324,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b325 = M[001888];
                          SetByte 001888 SetBit(b325,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b326 = M[Offset(Offset(000751,Mul(Widen(b315),9)),6)];
                      if (Equal(Widen(b326),142)) {
                        Let b327 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b315),9)),6) LoByte(Widen(b327));
                        SetByte 002033 169;
                        Let b328 = M[002278];
                        SetByte 002034 LoByte(Widen(b328));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b329 = M[001889];
                        if (IsZero(Widen(b329))) {
                          SetByte 001889 134;
                          Let b330 = M[001963];
                          SetByte 001890 LoByte(Widen(b330));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b331 = M[001887];
                          SetByte 001887 SetBit(b331,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b332 = M[001888];
                          SetByte 001888 SetBit(b332,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b333 = M[Offset(Offset(000751,Mul(Widen(b329),9)),6)];
                          if (Equal(Widen(b333),126)) {
                            Let b334 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b329),9)),6) LoByte(Widen(b334));
                            SetByte 001889 134;
                            Let b335 = M[001963];
                            SetByte 001890 LoByte(Widen(b335));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b336 = M[001887];
                            SetByte 001887 SetBit(b336,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b337 = M[001888];
                            SetByte 001888 SetBit(b337,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b338 = M[Offset(Offset(000751,Mul(Widen(b229),9)),6)];
            if (Equal(Widen(b338),139)) {
              Let b339 = M[002007];
              SetByte Offset(Offset(000751,Mul(Widen(b229),9)),6) LoByte(Widen(b339));
              SetByte 002006 141;
              Let b340 = M[002026];
              SetByte 002007 LoByte(Widen(b340));
              SetByte 002026 139;
              TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
              Let b341 = M[001853];
              if (IsZero(Widen(b341))) {
                SetByte 001853 141;
                Let b342 = M[002026];
                SetByte 001854 LoByte(Widen(b342));
                SetByte 002026 122;
                TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                Let b343 = M[001862];
                if (IsZero(Widen(b343))) {
                  SetByte 001862 149;
                  Let b344 = M[002098];
                  SetByte 001863 LoByte(Widen(b344));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b345 = M[002033];
                  if (IsZero(Widen(b345))) {
                    SetByte 002033 169;
                    Let b346 = M[002278];
                    SetByte 002034 LoByte(Widen(b346));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b347 = M[001889];
                    if (IsZero(Widen(b347))) {
                      SetByte 001889 134;
                      Let b348 = M[001963];
                      SetByte 001890 LoByte(Widen(b348));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b349 = M[001887];
                      SetByte 001887 SetBit(b349,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b350 = M[001888];
                      SetByte 001888 SetBit(b350,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b351 = M[Offset(Offset(000751,Mul(Widen(b347),9)),6)];
                      if (Equal(Widen(b351),126)) {
                        Let b352 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b347),9)),6) LoByte(Widen(b352));
                        SetByte 001889 134;
                        Let b353 = M[001963];
                        SetByte 001890 LoByte(Widen(b353));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b354 = M[001887];
                        SetByte 001887 SetBit(b354,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b355 = M[001888];
                        SetByte 001888 SetBit(b355,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b356 = M[Offset(Offset(000751,Mul(Widen(b345),9)),6)];
                    if (Equal(Widen(b356),142)) {
                      Let b357 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b345),9)),6) LoByte(Widen(b357));
                      SetByte 002033 169;
                      Let b358 = M[002278];
                      SetByte 002034 LoByte(Widen(b358));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b359 = M[001889];
                      if (IsZero(Widen(b359))) {
                        SetByte 001889 134;
                        Let b360 = M[001963];
                        SetByte 001890 LoByte(Widen(b360));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b361 = M[001887];
                        SetByte 001887 SetBit(b361,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b362 = M[001888];
                        SetByte 001888 SetBit(b362,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b363 = M[Offset(Offset(000751,Mul(Widen(b359),9)),6)];
                        if (Equal(Widen(b363),126)) {
                          Let b364 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b359),9)),6) LoByte(Widen(b364));
                          SetByte 001889 134;
                          Let b365 = M[001963];
                          SetByte 001890 LoByte(Widen(b365));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b366 = M[001887];
                          SetByte 001887 SetBit(b366,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b367 = M[001888];
                          SetByte 001888 SetBit(b367,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b368 = M[Offset(Offset(000751,Mul(Widen(b343),9)),6)];
                  if (Equal(Widen(b368),123)) {
                    Let b369 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b343),9)),6) LoByte(Widen(b369));
                    SetByte 001862 149;
                    Let b370 = M[002098];
                    SetByte 001863 LoByte(Widen(b370));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b371 = M[002033];
                    if (IsZero(Widen(b371))) {
                      SetByte 002033 169;
                      Let b372 = M[002278];
                      SetByte 002034 LoByte(Widen(b372));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b373 = M[001889];
                      if (IsZero(Widen(b373))) {
                        SetByte 001889 134;
                        Let b374 = M[001963];
                        SetByte 001890 LoByte(Widen(b374));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b375 = M[001887];
                        SetByte 001887 SetBit(b375,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b376 = M[001888];
                        SetByte 001888 SetBit(b376,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b377 = M[Offset(Offset(000751,Mul(Widen(b373),9)),6)];
                        if (Equal(Widen(b377),126)) {
                          Let b378 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b373),9)),6) LoByte(Widen(b378));
                          SetByte 001889 134;
                          Let b379 = M[001963];
                          SetByte 001890 LoByte(Widen(b379));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b380 = M[001887];
                          SetByte 001887 SetBit(b380,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b381 = M[001888];
                          SetByte 001888 SetBit(b381,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b382 = M[Offset(Offset(000751,Mul(Widen(b371),9)),6)];
                      if (Equal(Widen(b382),142)) {
                        Let b383 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b371),9)),6) LoByte(Widen(b383));
                        SetByte 002033 169;
                        Let b384 = M[002278];
                        SetByte 002034 LoByte(Widen(b384));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b385 = M[001889];
                        if (IsZero(Widen(b385))) {
                          SetByte 001889 134;
                          Let b386 = M[001963];
                          SetByte 001890 LoByte(Widen(b386));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b387 = M[001887];
                          SetByte 001887 SetBit(b387,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b388 = M[001888];
                          SetByte 001888 SetBit(b388,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b389 = M[Offset(Offset(000751,Mul(Widen(b385),9)),6)];
                          if (Equal(Widen(b389),126)) {
                            Let b390 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b385),9)),6) LoByte(Widen(b390));
                            SetByte 001889 134;
                            Let b391 = M[001963];
                            SetByte 001890 LoByte(Widen(b391));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b392 = M[001887];
                            SetByte 001887 SetBit(b392,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b393 = M[001888];
                            SetByte 001888 SetBit(b393,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b394 = M[Offset(Offset(000751,Mul(Widen(b341),9)),6)];
                if (Equal(Widen(b394),122)) {
                  Let b395 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b341),9)),6) LoByte(Widen(b395));
                  SetByte 001853 141;
                  Let b396 = M[002026];
                  SetByte 001854 LoByte(Widen(b396));
                  SetByte 002026 122;
                  TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                  Let b397 = M[001862];
                  if (IsZero(Widen(b397))) {
                    SetByte 001862 149;
                    Let b398 = M[002098];
                    SetByte 001863 LoByte(Widen(b398));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b399 = M[002033];
                    if (IsZero(Widen(b399))) {
                      SetByte 002033 169;
                      Let b400 = M[002278];
                      SetByte 002034 LoByte(Widen(b400));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b401 = M[001889];
                      if (IsZero(Widen(b401))) {
                        SetByte 001889 134;
                        Let b402 = M[001963];
                        SetByte 001890 LoByte(Widen(b402));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b403 = M[001887];
                        SetByte 001887 SetBit(b403,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b404 = M[001888];
                        SetByte 001888 SetBit(b404,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b405 = M[Offset(Offset(000751,Mul(Widen(b401),9)),6)];
                        if (Equal(Widen(b405),126)) {
                          Let b406 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b401),9)),6) LoByte(Widen(b406));
                          SetByte 001889 134;
                          Let b407 = M[001963];
                          SetByte 001890 LoByte(Widen(b407));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b408 = M[001887];
                          SetByte 001887 SetBit(b408,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b409 = M[001888];
                          SetByte 001888 SetBit(b409,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b410 = M[Offset(Offset(000751,Mul(Widen(b399),9)),6)];
                      if (Equal(Widen(b410),142)) {
                        Let b411 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b399),9)),6) LoByte(Widen(b411));
                        SetByte 002033 169;
                        Let b412 = M[002278];
                        SetByte 002034 LoByte(Widen(b412));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b413 = M[001889];
                        if (IsZero(Widen(b413))) {
                          SetByte 001889 134;
                          Let b414 = M[001963];
                          SetByte 001890 LoByte(Widen(b414));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b415 = M[001887];
                          SetByte 001887 SetBit(b415,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b416 = M[001888];
                          SetByte 001888 SetBit(b416,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b417 = M[Offset(Offset(000751,Mul(Widen(b413),9)),6)];
                          if (Equal(Widen(b417),126)) {
                            Let b418 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b413),9)),6) LoByte(Widen(b418));
                            SetByte 001889 134;
                            Let b419 = M[001963];
                            SetByte 001890 LoByte(Widen(b419));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b420 = M[001887];
                            SetByte 001887 SetBit(b420,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b421 = M[001888];
                            SetByte 001888 SetBit(b421,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b422 = M[Offset(Offset(000751,Mul(Widen(b397),9)),6)];
                    if (Equal(Widen(b422),123)) {
                      Let b423 = M[001863];
                      SetByte Offset(Offset(000751,Mul(Widen(b397),9)),6) LoByte(Widen(b423));
                      SetByte 001862 149;
                      Let b424 = M[002098];
                      SetByte 001863 LoByte(Widen(b424));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b425 = M[002033];
                      if (IsZero(Widen(b425))) {
                        SetByte 002033 169;
                        Let b426 = M[002278];
                        SetByte 002034 LoByte(Widen(b426));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b427 = M[001889];
                        if (IsZero(Widen(b427))) {
                          SetByte 001889 134;
                          Let b428 = M[001963];
                          SetByte 001890 LoByte(Widen(b428));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b429 = M[001887];
                          SetByte 001887 SetBit(b429,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b430 = M[001888];
                          SetByte 001888 SetBit(b430,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b431 = M[Offset(Offset(000751,Mul(Widen(b427),9)),6)];
                          if (Equal(Widen(b431),126)) {
                            Let b432 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b427),9)),6) LoByte(Widen(b432));
                            SetByte 001889 134;
                            Let b433 = M[001963];
                            SetByte 001890 LoByte(Widen(b433));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b434 = M[001887];
                            SetByte 001887 SetBit(b434,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b435 = M[001888];
                            SetByte 001888 SetBit(b435,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b436 = M[Offset(Offset(000751,Mul(Widen(b425),9)),6)];
                        if (Equal(Widen(b436),142)) {
                          Let b437 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b425),9)),6) LoByte(Widen(b437));
                          SetByte 002033 169;
                          Let b438 = M[002278];
                          SetByte 002034 LoByte(Widen(b438));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b439 = M[001889];
                          if (IsZero(Widen(b439))) {
                            SetByte 001889 134;
                            Let b440 = M[001963];
                            SetByte 001890 LoByte(Widen(b440));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b441 = M[001887];
                            SetByte 001887 SetBit(b441,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b442 = M[001888];
                            SetByte 001888 SetBit(b442,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b443 = M[Offset(Offset(000751,Mul(Widen(b439),9)),6)];
                            if (Equal(Widen(b443),126)) {
                              Let b444 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b439),9)),6) LoByte(Widen(b444));
                              SetByte 001889 134;
                              Let b445 = M[001963];
                              SetByte 001890 LoByte(Widen(b445));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b446 = M[001887];
                              SetByte 001887 SetBit(b446,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b447 = M[001888];
                              SetByte 001888 SetBit(b447,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b448 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b448),7)) {
        Let b449 = M[000819];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b449));
        SetByte 000818 141;
        Let b450 = M[002026];
        SetByte 000819 LoByte(Widen(b450));
        SetByte 002026 7;
        TraceOperation 068936 (Insert_obj (Con 1) (Con 141));
        Let b451 = M[000764];
        if (IsZero(Widen(b451))) {
          SetByte 000764 141;
          Let b452 = M[002026];
          SetByte 000765 LoByte(Widen(b452));
          SetByte 002026 1;
          TraceOperation 068939 (Insert_obj (Con 139) (Con 141));
          Let b453 = M[002006];
          if (IsZero(Widen(b453))) {
            SetByte 002006 141;
            Let b454 = M[002026];
            SetByte 002007 LoByte(Widen(b454));
            SetByte 002026 139;
            TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
            Let b455 = M[001853];
            if (IsZero(Widen(b455))) {
              SetByte 001853 141;
              Let b456 = M[002026];
              SetByte 001854 LoByte(Widen(b456));
              SetByte 002026 122;
              TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
              Let b457 = M[001862];
              if (IsZero(Widen(b457))) {
                SetByte 001862 149;
                Let b458 = M[002098];
                SetByte 001863 LoByte(Widen(b458));
                SetByte 002098 123;
                TraceOperation 068948 (Store (Con 136) (Con 142));
                SetByte 008148 0;
                SetByte 008149 142;
                TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                Let b459 = M[002033];
                if (IsZero(Widen(b459))) {
                  SetByte 002033 169;
                  Let b460 = M[002278];
                  SetByte 002034 LoByte(Widen(b460));
                  SetByte 002278 142;
                  TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                  Let b461 = M[001889];
                  if (IsZero(Widen(b461))) {
                    SetByte 001889 134;
                    Let b462 = M[001963];
                    SetByte 001890 LoByte(Widen(b462));
                    SetByte 001963 126;
                    TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                    Let b463 = M[001887];
                    SetByte 001887 SetBit(b463,2);
                    TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                    Let b464 = M[001888];
                    SetByte 001888 SetBit(b464,4);
                    TraceOperation 068963 (Store (Con 143) (Con 0));
                    SetByte 008162 0;
                    SetByte 008163 0;
                    TraceOperation 068966 (Store (Con 91) (Con 1));
                    SetByte 008058 0;
                    SetByte 008059 1;
                    TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                    PushFrame 068969;
                    SetLocal 1 -28826;
                    SetLocal 2 38;
                    JumpCall: 022320, #actuals: 2
                  } else {
                    Let b465 = M[Offset(Offset(000751,Mul(Widen(b461),9)),6)];
                    if (Equal(Widen(b465),126)) {
                      Let b466 = M[001890];
                      SetByte Offset(Offset(000751,Mul(Widen(b461),9)),6) LoByte(Widen(b466));
                      SetByte 001889 134;
                      Let b467 = M[001963];
                      SetByte 001890 LoByte(Widen(b467));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b468 = M[001887];
                      SetByte 001887 SetBit(b468,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b469 = M[001888];
                      SetByte 001888 SetBit(b469,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b470 = M[Offset(Offset(000751,Mul(Widen(b459),9)),6)];
                  if (Equal(Widen(b470),142)) {
                    Let b471 = M[002034];
                    SetByte Offset(Offset(000751,Mul(Widen(b459),9)),6) LoByte(Widen(b471));
                    SetByte 002033 169;
                    Let b472 = M[002278];
                    SetByte 002034 LoByte(Widen(b472));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b473 = M[001889];
                    if (IsZero(Widen(b473))) {
                      SetByte 001889 134;
                      Let b474 = M[001963];
                      SetByte 001890 LoByte(Widen(b474));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b475 = M[001887];
                      SetByte 001887 SetBit(b475,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b476 = M[001888];
                      SetByte 001888 SetBit(b476,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b477 = M[Offset(Offset(000751,Mul(Widen(b473),9)),6)];
                      if (Equal(Widen(b477),126)) {
                        Let b478 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b473),9)),6) LoByte(Widen(b478));
                        SetByte 001889 134;
                        Let b479 = M[001963];
                        SetByte 001890 LoByte(Widen(b479));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b480 = M[001887];
                        SetByte 001887 SetBit(b480,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b481 = M[001888];
                        SetByte 001888 SetBit(b481,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b482 = M[Offset(Offset(000751,Mul(Widen(b457),9)),6)];
                if (Equal(Widen(b482),123)) {
                  Let b483 = M[001863];
                  SetByte Offset(Offset(000751,Mul(Widen(b457),9)),6) LoByte(Widen(b483));
                  SetByte 001862 149;
                  Let b484 = M[002098];
                  SetByte 001863 LoByte(Widen(b484));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b485 = M[002033];
                  if (IsZero(Widen(b485))) {
                    SetByte 002033 169;
                    Let b486 = M[002278];
                    SetByte 002034 LoByte(Widen(b486));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b487 = M[001889];
                    if (IsZero(Widen(b487))) {
                      SetByte 001889 134;
                      Let b488 = M[001963];
                      SetByte 001890 LoByte(Widen(b488));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b489 = M[001887];
                      SetByte 001887 SetBit(b489,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b490 = M[001888];
                      SetByte 001888 SetBit(b490,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b491 = M[Offset(Offset(000751,Mul(Widen(b487),9)),6)];
                      if (Equal(Widen(b491),126)) {
                        Let b492 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b487),9)),6) LoByte(Widen(b492));
                        SetByte 001889 134;
                        Let b493 = M[001963];
                        SetByte 001890 LoByte(Widen(b493));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b494 = M[001887];
                        SetByte 001887 SetBit(b494,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b495 = M[001888];
                        SetByte 001888 SetBit(b495,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b496 = M[Offset(Offset(000751,Mul(Widen(b485),9)),6)];
                    if (Equal(Widen(b496),142)) {
                      Let b497 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b485),9)),6) LoByte(Widen(b497));
                      SetByte 002033 169;
                      Let b498 = M[002278];
                      SetByte 002034 LoByte(Widen(b498));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b499 = M[001889];
                      if (IsZero(Widen(b499))) {
                        SetByte 001889 134;
                        Let b500 = M[001963];
                        SetByte 001890 LoByte(Widen(b500));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b501 = M[001887];
                        SetByte 001887 SetBit(b501,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b502 = M[001888];
                        SetByte 001888 SetBit(b502,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b503 = M[Offset(Offset(000751,Mul(Widen(b499),9)),6)];
                        if (Equal(Widen(b503),126)) {
                          Let b504 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b499),9)),6) LoByte(Widen(b504));
                          SetByte 001889 134;
                          Let b505 = M[001963];
                          SetByte 001890 LoByte(Widen(b505));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b506 = M[001887];
                          SetByte 001887 SetBit(b506,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b507 = M[001888];
                          SetByte 001888 SetBit(b507,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b508 = M[Offset(Offset(000751,Mul(Widen(b455),9)),6)];
              if (Equal(Widen(b508),122)) {
                Let b509 = M[001854];
                SetByte Offset(Offset(000751,Mul(Widen(b455),9)),6) LoByte(Widen(b509));
                SetByte 001853 141;
                Let b510 = M[002026];
                SetByte 001854 LoByte(Widen(b510));
                SetByte 002026 122;
                TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                Let b511 = M[001862];
                if (IsZero(Widen(b511))) {
                  SetByte 001862 149;
                  Let b512 = M[002098];
                  SetByte 001863 LoByte(Widen(b512));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b513 = M[002033];
                  if (IsZero(Widen(b513))) {
                    SetByte 002033 169;
                    Let b514 = M[002278];
                    SetByte 002034 LoByte(Widen(b514));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b515 = M[001889];
                    if (IsZero(Widen(b515))) {
                      SetByte 001889 134;
                      Let b516 = M[001963];
                      SetByte 001890 LoByte(Widen(b516));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b517 = M[001887];
                      SetByte 001887 SetBit(b517,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b518 = M[001888];
                      SetByte 001888 SetBit(b518,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b519 = M[Offset(Offset(000751,Mul(Widen(b515),9)),6)];
                      if (Equal(Widen(b519),126)) {
                        Let b520 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b515),9)),6) LoByte(Widen(b520));
                        SetByte 001889 134;
                        Let b521 = M[001963];
                        SetByte 001890 LoByte(Widen(b521));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b522 = M[001887];
                        SetByte 001887 SetBit(b522,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b523 = M[001888];
                        SetByte 001888 SetBit(b523,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b524 = M[Offset(Offset(000751,Mul(Widen(b513),9)),6)];
                    if (Equal(Widen(b524),142)) {
                      Let b525 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b513),9)),6) LoByte(Widen(b525));
                      SetByte 002033 169;
                      Let b526 = M[002278];
                      SetByte 002034 LoByte(Widen(b526));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b527 = M[001889];
                      if (IsZero(Widen(b527))) {
                        SetByte 001889 134;
                        Let b528 = M[001963];
                        SetByte 001890 LoByte(Widen(b528));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b529 = M[001887];
                        SetByte 001887 SetBit(b529,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b530 = M[001888];
                        SetByte 001888 SetBit(b530,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b531 = M[Offset(Offset(000751,Mul(Widen(b527),9)),6)];
                        if (Equal(Widen(b531),126)) {
                          Let b532 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b527),9)),6) LoByte(Widen(b532));
                          SetByte 001889 134;
                          Let b533 = M[001963];
                          SetByte 001890 LoByte(Widen(b533));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b534 = M[001887];
                          SetByte 001887 SetBit(b534,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b535 = M[001888];
                          SetByte 001888 SetBit(b535,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b536 = M[Offset(Offset(000751,Mul(Widen(b511),9)),6)];
                  if (Equal(Widen(b536),123)) {
                    Let b537 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b511),9)),6) LoByte(Widen(b537));
                    SetByte 001862 149;
                    Let b538 = M[002098];
                    SetByte 001863 LoByte(Widen(b538));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b539 = M[002033];
                    if (IsZero(Widen(b539))) {
                      SetByte 002033 169;
                      Let b540 = M[002278];
                      SetByte 002034 LoByte(Widen(b540));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b541 = M[001889];
                      if (IsZero(Widen(b541))) {
                        SetByte 001889 134;
                        Let b542 = M[001963];
                        SetByte 001890 LoByte(Widen(b542));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b543 = M[001887];
                        SetByte 001887 SetBit(b543,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b544 = M[001888];
                        SetByte 001888 SetBit(b544,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b545 = M[Offset(Offset(000751,Mul(Widen(b541),9)),6)];
                        if (Equal(Widen(b545),126)) {
                          Let b546 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b541),9)),6) LoByte(Widen(b546));
                          SetByte 001889 134;
                          Let b547 = M[001963];
                          SetByte 001890 LoByte(Widen(b547));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b548 = M[001887];
                          SetByte 001887 SetBit(b548,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b549 = M[001888];
                          SetByte 001888 SetBit(b549,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b550 = M[Offset(Offset(000751,Mul(Widen(b539),9)),6)];
                      if (Equal(Widen(b550),142)) {
                        Let b551 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b539),9)),6) LoByte(Widen(b551));
                        SetByte 002033 169;
                        Let b552 = M[002278];
                        SetByte 002034 LoByte(Widen(b552));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b553 = M[001889];
                        if (IsZero(Widen(b553))) {
                          SetByte 001889 134;
                          Let b554 = M[001963];
                          SetByte 001890 LoByte(Widen(b554));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b555 = M[001887];
                          SetByte 001887 SetBit(b555,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b556 = M[001888];
                          SetByte 001888 SetBit(b556,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b557 = M[Offset(Offset(000751,Mul(Widen(b553),9)),6)];
                          if (Equal(Widen(b557),126)) {
                            Let b558 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b553),9)),6) LoByte(Widen(b558));
                            SetByte 001889 134;
                            Let b559 = M[001963];
                            SetByte 001890 LoByte(Widen(b559));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b560 = M[001887];
                            SetByte 001887 SetBit(b560,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b561 = M[001888];
                            SetByte 001888 SetBit(b561,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b562 = M[Offset(Offset(000751,Mul(Widen(b453),9)),6)];
            if (Equal(Widen(b562),139)) {
              Let b563 = M[002007];
              SetByte Offset(Offset(000751,Mul(Widen(b453),9)),6) LoByte(Widen(b563));
              SetByte 002006 141;
              Let b564 = M[002026];
              SetByte 002007 LoByte(Widen(b564));
              SetByte 002026 139;
              TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
              Let b565 = M[001853];
              if (IsZero(Widen(b565))) {
                SetByte 001853 141;
                Let b566 = M[002026];
                SetByte 001854 LoByte(Widen(b566));
                SetByte 002026 122;
                TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                Let b567 = M[001862];
                if (IsZero(Widen(b567))) {
                  SetByte 001862 149;
                  Let b568 = M[002098];
                  SetByte 001863 LoByte(Widen(b568));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b569 = M[002033];
                  if (IsZero(Widen(b569))) {
                    SetByte 002033 169;
                    Let b570 = M[002278];
                    SetByte 002034 LoByte(Widen(b570));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b571 = M[001889];
                    if (IsZero(Widen(b571))) {
                      SetByte 001889 134;
                      Let b572 = M[001963];
                      SetByte 001890 LoByte(Widen(b572));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b573 = M[001887];
                      SetByte 001887 SetBit(b573,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b574 = M[001888];
                      SetByte 001888 SetBit(b574,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b575 = M[Offset(Offset(000751,Mul(Widen(b571),9)),6)];
                      if (Equal(Widen(b575),126)) {
                        Let b576 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b571),9)),6) LoByte(Widen(b576));
                        SetByte 001889 134;
                        Let b577 = M[001963];
                        SetByte 001890 LoByte(Widen(b577));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b578 = M[001887];
                        SetByte 001887 SetBit(b578,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b579 = M[001888];
                        SetByte 001888 SetBit(b579,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b580 = M[Offset(Offset(000751,Mul(Widen(b569),9)),6)];
                    if (Equal(Widen(b580),142)) {
                      Let b581 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b569),9)),6) LoByte(Widen(b581));
                      SetByte 002033 169;
                      Let b582 = M[002278];
                      SetByte 002034 LoByte(Widen(b582));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b583 = M[001889];
                      if (IsZero(Widen(b583))) {
                        SetByte 001889 134;
                        Let b584 = M[001963];
                        SetByte 001890 LoByte(Widen(b584));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b585 = M[001887];
                        SetByte 001887 SetBit(b585,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b586 = M[001888];
                        SetByte 001888 SetBit(b586,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b587 = M[Offset(Offset(000751,Mul(Widen(b583),9)),6)];
                        if (Equal(Widen(b587),126)) {
                          Let b588 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b583),9)),6) LoByte(Widen(b588));
                          SetByte 001889 134;
                          Let b589 = M[001963];
                          SetByte 001890 LoByte(Widen(b589));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b590 = M[001887];
                          SetByte 001887 SetBit(b590,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b591 = M[001888];
                          SetByte 001888 SetBit(b591,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b592 = M[Offset(Offset(000751,Mul(Widen(b567),9)),6)];
                  if (Equal(Widen(b592),123)) {
                    Let b593 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b567),9)),6) LoByte(Widen(b593));
                    SetByte 001862 149;
                    Let b594 = M[002098];
                    SetByte 001863 LoByte(Widen(b594));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b595 = M[002033];
                    if (IsZero(Widen(b595))) {
                      SetByte 002033 169;
                      Let b596 = M[002278];
                      SetByte 002034 LoByte(Widen(b596));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b597 = M[001889];
                      if (IsZero(Widen(b597))) {
                        SetByte 001889 134;
                        Let b598 = M[001963];
                        SetByte 001890 LoByte(Widen(b598));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b599 = M[001887];
                        SetByte 001887 SetBit(b599,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b600 = M[001888];
                        SetByte 001888 SetBit(b600,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b601 = M[Offset(Offset(000751,Mul(Widen(b597),9)),6)];
                        if (Equal(Widen(b601),126)) {
                          Let b602 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b597),9)),6) LoByte(Widen(b602));
                          SetByte 001889 134;
                          Let b603 = M[001963];
                          SetByte 001890 LoByte(Widen(b603));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b604 = M[001887];
                          SetByte 001887 SetBit(b604,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b605 = M[001888];
                          SetByte 001888 SetBit(b605,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b606 = M[Offset(Offset(000751,Mul(Widen(b595),9)),6)];
                      if (Equal(Widen(b606),142)) {
                        Let b607 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b595),9)),6) LoByte(Widen(b607));
                        SetByte 002033 169;
                        Let b608 = M[002278];
                        SetByte 002034 LoByte(Widen(b608));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b609 = M[001889];
                        if (IsZero(Widen(b609))) {
                          SetByte 001889 134;
                          Let b610 = M[001963];
                          SetByte 001890 LoByte(Widen(b610));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b611 = M[001887];
                          SetByte 001887 SetBit(b611,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b612 = M[001888];
                          SetByte 001888 SetBit(b612,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b613 = M[Offset(Offset(000751,Mul(Widen(b609),9)),6)];
                          if (Equal(Widen(b613),126)) {
                            Let b614 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b609),9)),6) LoByte(Widen(b614));
                            SetByte 001889 134;
                            Let b615 = M[001963];
                            SetByte 001890 LoByte(Widen(b615));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b616 = M[001887];
                            SetByte 001887 SetBit(b616,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b617 = M[001888];
                            SetByte 001888 SetBit(b617,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b618 = M[Offset(Offset(000751,Mul(Widen(b565),9)),6)];
                if (Equal(Widen(b618),122)) {
                  Let b619 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b565),9)),6) LoByte(Widen(b619));
                  SetByte 001853 141;
                  Let b620 = M[002026];
                  SetByte 001854 LoByte(Widen(b620));
                  SetByte 002026 122;
                  TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                  Let b621 = M[001862];
                  if (IsZero(Widen(b621))) {
                    SetByte 001862 149;
                    Let b622 = M[002098];
                    SetByte 001863 LoByte(Widen(b622));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b623 = M[002033];
                    if (IsZero(Widen(b623))) {
                      SetByte 002033 169;
                      Let b624 = M[002278];
                      SetByte 002034 LoByte(Widen(b624));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b625 = M[001889];
                      if (IsZero(Widen(b625))) {
                        SetByte 001889 134;
                        Let b626 = M[001963];
                        SetByte 001890 LoByte(Widen(b626));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b627 = M[001887];
                        SetByte 001887 SetBit(b627,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b628 = M[001888];
                        SetByte 001888 SetBit(b628,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b629 = M[Offset(Offset(000751,Mul(Widen(b625),9)),6)];
                        if (Equal(Widen(b629),126)) {
                          Let b630 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b625),9)),6) LoByte(Widen(b630));
                          SetByte 001889 134;
                          Let b631 = M[001963];
                          SetByte 001890 LoByte(Widen(b631));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b632 = M[001887];
                          SetByte 001887 SetBit(b632,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b633 = M[001888];
                          SetByte 001888 SetBit(b633,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b634 = M[Offset(Offset(000751,Mul(Widen(b623),9)),6)];
                      if (Equal(Widen(b634),142)) {
                        Let b635 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b623),9)),6) LoByte(Widen(b635));
                        SetByte 002033 169;
                        Let b636 = M[002278];
                        SetByte 002034 LoByte(Widen(b636));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b637 = M[001889];
                        if (IsZero(Widen(b637))) {
                          SetByte 001889 134;
                          Let b638 = M[001963];
                          SetByte 001890 LoByte(Widen(b638));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b639 = M[001887];
                          SetByte 001887 SetBit(b639,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b640 = M[001888];
                          SetByte 001888 SetBit(b640,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b641 = M[Offset(Offset(000751,Mul(Widen(b637),9)),6)];
                          if (Equal(Widen(b641),126)) {
                            Let b642 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b637),9)),6) LoByte(Widen(b642));
                            SetByte 001889 134;
                            Let b643 = M[001963];
                            SetByte 001890 LoByte(Widen(b643));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b644 = M[001887];
                            SetByte 001887 SetBit(b644,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b645 = M[001888];
                            SetByte 001888 SetBit(b645,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b646 = M[Offset(Offset(000751,Mul(Widen(b621),9)),6)];
                    if (Equal(Widen(b646),123)) {
                      Let b647 = M[001863];
                      SetByte Offset(Offset(000751,Mul(Widen(b621),9)),6) LoByte(Widen(b647));
                      SetByte 001862 149;
                      Let b648 = M[002098];
                      SetByte 001863 LoByte(Widen(b648));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b649 = M[002033];
                      if (IsZero(Widen(b649))) {
                        SetByte 002033 169;
                        Let b650 = M[002278];
                        SetByte 002034 LoByte(Widen(b650));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b651 = M[001889];
                        if (IsZero(Widen(b651))) {
                          SetByte 001889 134;
                          Let b652 = M[001963];
                          SetByte 001890 LoByte(Widen(b652));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b653 = M[001887];
                          SetByte 001887 SetBit(b653,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b654 = M[001888];
                          SetByte 001888 SetBit(b654,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b655 = M[Offset(Offset(000751,Mul(Widen(b651),9)),6)];
                          if (Equal(Widen(b655),126)) {
                            Let b656 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b651),9)),6) LoByte(Widen(b656));
                            SetByte 001889 134;
                            Let b657 = M[001963];
                            SetByte 001890 LoByte(Widen(b657));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b658 = M[001887];
                            SetByte 001887 SetBit(b658,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b659 = M[001888];
                            SetByte 001888 SetBit(b659,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b660 = M[Offset(Offset(000751,Mul(Widen(b649),9)),6)];
                        if (Equal(Widen(b660),142)) {
                          Let b661 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b649),9)),6) LoByte(Widen(b661));
                          SetByte 002033 169;
                          Let b662 = M[002278];
                          SetByte 002034 LoByte(Widen(b662));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b663 = M[001889];
                          if (IsZero(Widen(b663))) {
                            SetByte 001889 134;
                            Let b664 = M[001963];
                            SetByte 001890 LoByte(Widen(b664));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b665 = M[001887];
                            SetByte 001887 SetBit(b665,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b666 = M[001888];
                            SetByte 001888 SetBit(b666,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b667 = M[Offset(Offset(000751,Mul(Widen(b663),9)),6)];
                            if (Equal(Widen(b667),126)) {
                              Let b668 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b663),9)),6) LoByte(Widen(b668));
                              SetByte 001889 134;
                              Let b669 = M[001963];
                              SetByte 001890 LoByte(Widen(b669));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b670 = M[001887];
                              SetByte 001887 SetBit(b670,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b671 = M[001888];
                              SetByte 001888 SetBit(b671,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b672 = M[Offset(Offset(000751,Mul(Widen(b451),9)),6)];
          if (Equal(Widen(b672),1)) {
            Let b673 = M[000765];
            SetByte Offset(Offset(000751,Mul(Widen(b451),9)),6) LoByte(Widen(b673));
            SetByte 000764 141;
            Let b674 = M[002026];
            SetByte 000765 LoByte(Widen(b674));
            SetByte 002026 1;
            TraceOperation 068939 (Insert_obj (Con 139) (Con 141));
            Let b675 = M[002006];
            if (IsZero(Widen(b675))) {
              SetByte 002006 141;
              Let b676 = M[002026];
              SetByte 002007 LoByte(Widen(b676));
              SetByte 002026 139;
              TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
              Let b677 = M[001853];
              if (IsZero(Widen(b677))) {
                SetByte 001853 141;
                Let b678 = M[002026];
                SetByte 001854 LoByte(Widen(b678));
                SetByte 002026 122;
                TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                Let b679 = M[001862];
                if (IsZero(Widen(b679))) {
                  SetByte 001862 149;
                  Let b680 = M[002098];
                  SetByte 001863 LoByte(Widen(b680));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b681 = M[002033];
                  if (IsZero(Widen(b681))) {
                    SetByte 002033 169;
                    Let b682 = M[002278];
                    SetByte 002034 LoByte(Widen(b682));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b683 = M[001889];
                    if (IsZero(Widen(b683))) {
                      SetByte 001889 134;
                      Let b684 = M[001963];
                      SetByte 001890 LoByte(Widen(b684));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b685 = M[001887];
                      SetByte 001887 SetBit(b685,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b686 = M[001888];
                      SetByte 001888 SetBit(b686,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b687 = M[Offset(Offset(000751,Mul(Widen(b683),9)),6)];
                      if (Equal(Widen(b687),126)) {
                        Let b688 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b683),9)),6) LoByte(Widen(b688));
                        SetByte 001889 134;
                        Let b689 = M[001963];
                        SetByte 001890 LoByte(Widen(b689));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b690 = M[001887];
                        SetByte 001887 SetBit(b690,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b691 = M[001888];
                        SetByte 001888 SetBit(b691,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b692 = M[Offset(Offset(000751,Mul(Widen(b681),9)),6)];
                    if (Equal(Widen(b692),142)) {
                      Let b693 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b681),9)),6) LoByte(Widen(b693));
                      SetByte 002033 169;
                      Let b694 = M[002278];
                      SetByte 002034 LoByte(Widen(b694));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b695 = M[001889];
                      if (IsZero(Widen(b695))) {
                        SetByte 001889 134;
                        Let b696 = M[001963];
                        SetByte 001890 LoByte(Widen(b696));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b697 = M[001887];
                        SetByte 001887 SetBit(b697,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b698 = M[001888];
                        SetByte 001888 SetBit(b698,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b699 = M[Offset(Offset(000751,Mul(Widen(b695),9)),6)];
                        if (Equal(Widen(b699),126)) {
                          Let b700 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b695),9)),6) LoByte(Widen(b700));
                          SetByte 001889 134;
                          Let b701 = M[001963];
                          SetByte 001890 LoByte(Widen(b701));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b702 = M[001887];
                          SetByte 001887 SetBit(b702,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b703 = M[001888];
                          SetByte 001888 SetBit(b703,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b704 = M[Offset(Offset(000751,Mul(Widen(b679),9)),6)];
                  if (Equal(Widen(b704),123)) {
                    Let b705 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b679),9)),6) LoByte(Widen(b705));
                    SetByte 001862 149;
                    Let b706 = M[002098];
                    SetByte 001863 LoByte(Widen(b706));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b707 = M[002033];
                    if (IsZero(Widen(b707))) {
                      SetByte 002033 169;
                      Let b708 = M[002278];
                      SetByte 002034 LoByte(Widen(b708));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b709 = M[001889];
                      if (IsZero(Widen(b709))) {
                        SetByte 001889 134;
                        Let b710 = M[001963];
                        SetByte 001890 LoByte(Widen(b710));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b711 = M[001887];
                        SetByte 001887 SetBit(b711,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b712 = M[001888];
                        SetByte 001888 SetBit(b712,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b713 = M[Offset(Offset(000751,Mul(Widen(b709),9)),6)];
                        if (Equal(Widen(b713),126)) {
                          Let b714 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b709),9)),6) LoByte(Widen(b714));
                          SetByte 001889 134;
                          Let b715 = M[001963];
                          SetByte 001890 LoByte(Widen(b715));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b716 = M[001887];
                          SetByte 001887 SetBit(b716,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b717 = M[001888];
                          SetByte 001888 SetBit(b717,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b718 = M[Offset(Offset(000751,Mul(Widen(b707),9)),6)];
                      if (Equal(Widen(b718),142)) {
                        Let b719 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b707),9)),6) LoByte(Widen(b719));
                        SetByte 002033 169;
                        Let b720 = M[002278];
                        SetByte 002034 LoByte(Widen(b720));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b721 = M[001889];
                        if (IsZero(Widen(b721))) {
                          SetByte 001889 134;
                          Let b722 = M[001963];
                          SetByte 001890 LoByte(Widen(b722));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b723 = M[001887];
                          SetByte 001887 SetBit(b723,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b724 = M[001888];
                          SetByte 001888 SetBit(b724,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b725 = M[Offset(Offset(000751,Mul(Widen(b721),9)),6)];
                          if (Equal(Widen(b725),126)) {
                            Let b726 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b721),9)),6) LoByte(Widen(b726));
                            SetByte 001889 134;
                            Let b727 = M[001963];
                            SetByte 001890 LoByte(Widen(b727));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b728 = M[001887];
                            SetByte 001887 SetBit(b728,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b729 = M[001888];
                            SetByte 001888 SetBit(b729,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b730 = M[Offset(Offset(000751,Mul(Widen(b677),9)),6)];
                if (Equal(Widen(b730),122)) {
                  Let b731 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b677),9)),6) LoByte(Widen(b731));
                  SetByte 001853 141;
                  Let b732 = M[002026];
                  SetByte 001854 LoByte(Widen(b732));
                  SetByte 002026 122;
                  TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                  Let b733 = M[001862];
                  if (IsZero(Widen(b733))) {
                    SetByte 001862 149;
                    Let b734 = M[002098];
                    SetByte 001863 LoByte(Widen(b734));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b735 = M[002033];
                    if (IsZero(Widen(b735))) {
                      SetByte 002033 169;
                      Let b736 = M[002278];
                      SetByte 002034 LoByte(Widen(b736));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b737 = M[001889];
                      if (IsZero(Widen(b737))) {
                        SetByte 001889 134;
                        Let b738 = M[001963];
                        SetByte 001890 LoByte(Widen(b738));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b739 = M[001887];
                        SetByte 001887 SetBit(b739,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b740 = M[001888];
                        SetByte 001888 SetBit(b740,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b741 = M[Offset(Offset(000751,Mul(Widen(b737),9)),6)];
                        if (Equal(Widen(b741),126)) {
                          Let b742 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b737),9)),6) LoByte(Widen(b742));
                          SetByte 001889 134;
                          Let b743 = M[001963];
                          SetByte 001890 LoByte(Widen(b743));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b744 = M[001887];
                          SetByte 001887 SetBit(b744,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b745 = M[001888];
                          SetByte 001888 SetBit(b745,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b746 = M[Offset(Offset(000751,Mul(Widen(b735),9)),6)];
                      if (Equal(Widen(b746),142)) {
                        Let b747 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b735),9)),6) LoByte(Widen(b747));
                        SetByte 002033 169;
                        Let b748 = M[002278];
                        SetByte 002034 LoByte(Widen(b748));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b749 = M[001889];
                        if (IsZero(Widen(b749))) {
                          SetByte 001889 134;
                          Let b750 = M[001963];
                          SetByte 001890 LoByte(Widen(b750));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b751 = M[001887];
                          SetByte 001887 SetBit(b751,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b752 = M[001888];
                          SetByte 001888 SetBit(b752,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b753 = M[Offset(Offset(000751,Mul(Widen(b749),9)),6)];
                          if (Equal(Widen(b753),126)) {
                            Let b754 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b749),9)),6) LoByte(Widen(b754));
                            SetByte 001889 134;
                            Let b755 = M[001963];
                            SetByte 001890 LoByte(Widen(b755));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b756 = M[001887];
                            SetByte 001887 SetBit(b756,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b757 = M[001888];
                            SetByte 001888 SetBit(b757,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b758 = M[Offset(Offset(000751,Mul(Widen(b733),9)),6)];
                    if (Equal(Widen(b758),123)) {
                      Let b759 = M[001863];
                      SetByte Offset(Offset(000751,Mul(Widen(b733),9)),6) LoByte(Widen(b759));
                      SetByte 001862 149;
                      Let b760 = M[002098];
                      SetByte 001863 LoByte(Widen(b760));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b761 = M[002033];
                      if (IsZero(Widen(b761))) {
                        SetByte 002033 169;
                        Let b762 = M[002278];
                        SetByte 002034 LoByte(Widen(b762));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b763 = M[001889];
                        if (IsZero(Widen(b763))) {
                          SetByte 001889 134;
                          Let b764 = M[001963];
                          SetByte 001890 LoByte(Widen(b764));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b765 = M[001887];
                          SetByte 001887 SetBit(b765,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b766 = M[001888];
                          SetByte 001888 SetBit(b766,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b767 = M[Offset(Offset(000751,Mul(Widen(b763),9)),6)];
                          if (Equal(Widen(b767),126)) {
                            Let b768 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b763),9)),6) LoByte(Widen(b768));
                            SetByte 001889 134;
                            Let b769 = M[001963];
                            SetByte 001890 LoByte(Widen(b769));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b770 = M[001887];
                            SetByte 001887 SetBit(b770,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b771 = M[001888];
                            SetByte 001888 SetBit(b771,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b772 = M[Offset(Offset(000751,Mul(Widen(b761),9)),6)];
                        if (Equal(Widen(b772),142)) {
                          Let b773 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b761),9)),6) LoByte(Widen(b773));
                          SetByte 002033 169;
                          Let b774 = M[002278];
                          SetByte 002034 LoByte(Widen(b774));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b775 = M[001889];
                          if (IsZero(Widen(b775))) {
                            SetByte 001889 134;
                            Let b776 = M[001963];
                            SetByte 001890 LoByte(Widen(b776));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b777 = M[001887];
                            SetByte 001887 SetBit(b777,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b778 = M[001888];
                            SetByte 001888 SetBit(b778,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b779 = M[Offset(Offset(000751,Mul(Widen(b775),9)),6)];
                            if (Equal(Widen(b779),126)) {
                              Let b780 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b775),9)),6) LoByte(Widen(b780));
                              SetByte 001889 134;
                              Let b781 = M[001963];
                              SetByte 001890 LoByte(Widen(b781));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b782 = M[001887];
                              SetByte 001887 SetBit(b782,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b783 = M[001888];
                              SetByte 001888 SetBit(b783,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b784 = M[Offset(Offset(000751,Mul(Widen(b675),9)),6)];
              if (Equal(Widen(b784),139)) {
                Let b785 = M[002007];
                SetByte Offset(Offset(000751,Mul(Widen(b675),9)),6) LoByte(Widen(b785));
                SetByte 002006 141;
                Let b786 = M[002026];
                SetByte 002007 LoByte(Widen(b786));
                SetByte 002026 139;
                TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
                Let b787 = M[001853];
                if (IsZero(Widen(b787))) {
                  SetByte 001853 141;
                  Let b788 = M[002026];
                  SetByte 001854 LoByte(Widen(b788));
                  SetByte 002026 122;
                  TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                  Let b789 = M[001862];
                  if (IsZero(Widen(b789))) {
                    SetByte 001862 149;
                    Let b790 = M[002098];
                    SetByte 001863 LoByte(Widen(b790));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b791 = M[002033];
                    if (IsZero(Widen(b791))) {
                      SetByte 002033 169;
                      Let b792 = M[002278];
                      SetByte 002034 LoByte(Widen(b792));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b793 = M[001889];
                      if (IsZero(Widen(b793))) {
                        SetByte 001889 134;
                        Let b794 = M[001963];
                        SetByte 001890 LoByte(Widen(b794));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b795 = M[001887];
                        SetByte 001887 SetBit(b795,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b796 = M[001888];
                        SetByte 001888 SetBit(b796,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b797 = M[Offset(Offset(000751,Mul(Widen(b793),9)),6)];
                        if (Equal(Widen(b797),126)) {
                          Let b798 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b793),9)),6) LoByte(Widen(b798));
                          SetByte 001889 134;
                          Let b799 = M[001963];
                          SetByte 001890 LoByte(Widen(b799));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b800 = M[001887];
                          SetByte 001887 SetBit(b800,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b801 = M[001888];
                          SetByte 001888 SetBit(b801,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b802 = M[Offset(Offset(000751,Mul(Widen(b791),9)),6)];
                      if (Equal(Widen(b802),142)) {
                        Let b803 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b791),9)),6) LoByte(Widen(b803));
                        SetByte 002033 169;
                        Let b804 = M[002278];
                        SetByte 002034 LoByte(Widen(b804));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b805 = M[001889];
                        if (IsZero(Widen(b805))) {
                          SetByte 001889 134;
                          Let b806 = M[001963];
                          SetByte 001890 LoByte(Widen(b806));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b807 = M[001887];
                          SetByte 001887 SetBit(b807,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b808 = M[001888];
                          SetByte 001888 SetBit(b808,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b809 = M[Offset(Offset(000751,Mul(Widen(b805),9)),6)];
                          if (Equal(Widen(b809),126)) {
                            Let b810 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b805),9)),6) LoByte(Widen(b810));
                            SetByte 001889 134;
                            Let b811 = M[001963];
                            SetByte 001890 LoByte(Widen(b811));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b812 = M[001887];
                            SetByte 001887 SetBit(b812,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b813 = M[001888];
                            SetByte 001888 SetBit(b813,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b814 = M[Offset(Offset(000751,Mul(Widen(b789),9)),6)];
                    if (Equal(Widen(b814),123)) {
                      Let b815 = M[001863];
                      SetByte Offset(Offset(000751,Mul(Widen(b789),9)),6) LoByte(Widen(b815));
                      SetByte 001862 149;
                      Let b816 = M[002098];
                      SetByte 001863 LoByte(Widen(b816));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b817 = M[002033];
                      if (IsZero(Widen(b817))) {
                        SetByte 002033 169;
                        Let b818 = M[002278];
                        SetByte 002034 LoByte(Widen(b818));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b819 = M[001889];
                        if (IsZero(Widen(b819))) {
                          SetByte 001889 134;
                          Let b820 = M[001963];
                          SetByte 001890 LoByte(Widen(b820));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b821 = M[001887];
                          SetByte 001887 SetBit(b821,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b822 = M[001888];
                          SetByte 001888 SetBit(b822,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b823 = M[Offset(Offset(000751,Mul(Widen(b819),9)),6)];
                          if (Equal(Widen(b823),126)) {
                            Let b824 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b819),9)),6) LoByte(Widen(b824));
                            SetByte 001889 134;
                            Let b825 = M[001963];
                            SetByte 001890 LoByte(Widen(b825));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b826 = M[001887];
                            SetByte 001887 SetBit(b826,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b827 = M[001888];
                            SetByte 001888 SetBit(b827,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b828 = M[Offset(Offset(000751,Mul(Widen(b817),9)),6)];
                        if (Equal(Widen(b828),142)) {
                          Let b829 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b817),9)),6) LoByte(Widen(b829));
                          SetByte 002033 169;
                          Let b830 = M[002278];
                          SetByte 002034 LoByte(Widen(b830));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b831 = M[001889];
                          if (IsZero(Widen(b831))) {
                            SetByte 001889 134;
                            Let b832 = M[001963];
                            SetByte 001890 LoByte(Widen(b832));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b833 = M[001887];
                            SetByte 001887 SetBit(b833,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b834 = M[001888];
                            SetByte 001888 SetBit(b834,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b835 = M[Offset(Offset(000751,Mul(Widen(b831),9)),6)];
                            if (Equal(Widen(b835),126)) {
                              Let b836 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b831),9)),6) LoByte(Widen(b836));
                              SetByte 001889 134;
                              Let b837 = M[001963];
                              SetByte 001890 LoByte(Widen(b837));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b838 = M[001887];
                              SetByte 001887 SetBit(b838,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b839 = M[001888];
                              SetByte 001888 SetBit(b839,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b840 = M[Offset(Offset(000751,Mul(Widen(b787),9)),6)];
                  if (Equal(Widen(b840),122)) {
                    Let b841 = M[001854];
                    SetByte Offset(Offset(000751,Mul(Widen(b787),9)),6) LoByte(Widen(b841));
                    SetByte 001853 141;
                    Let b842 = M[002026];
                    SetByte 001854 LoByte(Widen(b842));
                    SetByte 002026 122;
                    TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                    Let b843 = M[001862];
                    if (IsZero(Widen(b843))) {
                      SetByte 001862 149;
                      Let b844 = M[002098];
                      SetByte 001863 LoByte(Widen(b844));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b845 = M[002033];
                      if (IsZero(Widen(b845))) {
                        SetByte 002033 169;
                        Let b846 = M[002278];
                        SetByte 002034 LoByte(Widen(b846));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b847 = M[001889];
                        if (IsZero(Widen(b847))) {
                          SetByte 001889 134;
                          Let b848 = M[001963];
                          SetByte 001890 LoByte(Widen(b848));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b849 = M[001887];
                          SetByte 001887 SetBit(b849,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b850 = M[001888];
                          SetByte 001888 SetBit(b850,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b851 = M[Offset(Offset(000751,Mul(Widen(b847),9)),6)];
                          if (Equal(Widen(b851),126)) {
                            Let b852 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b847),9)),6) LoByte(Widen(b852));
                            SetByte 001889 134;
                            Let b853 = M[001963];
                            SetByte 001890 LoByte(Widen(b853));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b854 = M[001887];
                            SetByte 001887 SetBit(b854,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b855 = M[001888];
                            SetByte 001888 SetBit(b855,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b856 = M[Offset(Offset(000751,Mul(Widen(b845),9)),6)];
                        if (Equal(Widen(b856),142)) {
                          Let b857 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b845),9)),6) LoByte(Widen(b857));
                          SetByte 002033 169;
                          Let b858 = M[002278];
                          SetByte 002034 LoByte(Widen(b858));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b859 = M[001889];
                          if (IsZero(Widen(b859))) {
                            SetByte 001889 134;
                            Let b860 = M[001963];
                            SetByte 001890 LoByte(Widen(b860));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b861 = M[001887];
                            SetByte 001887 SetBit(b861,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b862 = M[001888];
                            SetByte 001888 SetBit(b862,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b863 = M[Offset(Offset(000751,Mul(Widen(b859),9)),6)];
                            if (Equal(Widen(b863),126)) {
                              Let b864 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b859),9)),6) LoByte(Widen(b864));
                              SetByte 001889 134;
                              Let b865 = M[001963];
                              SetByte 001890 LoByte(Widen(b865));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b866 = M[001887];
                              SetByte 001887 SetBit(b866,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b867 = M[001888];
                              SetByte 001888 SetBit(b867,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b868 = M[Offset(Offset(000751,Mul(Widen(b843),9)),6)];
                      if (Equal(Widen(b868),123)) {
                        Let b869 = M[001863];
                        SetByte Offset(Offset(000751,Mul(Widen(b843),9)),6) LoByte(Widen(b869));
                        SetByte 001862 149;
                        Let b870 = M[002098];
                        SetByte 001863 LoByte(Widen(b870));
                        SetByte 002098 123;
                        TraceOperation 068948 (Store (Con 136) (Con 142));
                        SetByte 008148 0;
                        SetByte 008149 142;
                        TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                        Let b871 = M[002033];
                        if (IsZero(Widen(b871))) {
                          SetByte 002033 169;
                          Let b872 = M[002278];
                          SetByte 002034 LoByte(Widen(b872));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b873 = M[001889];
                          if (IsZero(Widen(b873))) {
                            SetByte 001889 134;
                            Let b874 = M[001963];
                            SetByte 001890 LoByte(Widen(b874));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b875 = M[001887];
                            SetByte 001887 SetBit(b875,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b876 = M[001888];
                            SetByte 001888 SetBit(b876,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b877 = M[Offset(Offset(000751,Mul(Widen(b873),9)),6)];
                            if (Equal(Widen(b877),126)) {
                              Let b878 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b873),9)),6) LoByte(Widen(b878));
                              SetByte 001889 134;
                              Let b879 = M[001963];
                              SetByte 001890 LoByte(Widen(b879));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b880 = M[001887];
                              SetByte 001887 SetBit(b880,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b881 = M[001888];
                              SetByte 001888 SetBit(b881,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Let b882 = M[Offset(Offset(000751,Mul(Widen(b871),9)),6)];
                          if (Equal(Widen(b882),142)) {
                            Let b883 = M[002034];
                            SetByte Offset(Offset(000751,Mul(Widen(b871),9)),6) LoByte(Widen(b883));
                            SetByte 002033 169;
                            Let b884 = M[002278];
                            SetByte 002034 LoByte(Widen(b884));
                            SetByte 002278 142;
                            TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                            Let b885 = M[001889];
                            if (IsZero(Widen(b885))) {
                              SetByte 001889 134;
                              Let b886 = M[001963];
                              SetByte 001890 LoByte(Widen(b886));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b887 = M[001887];
                              SetByte 001887 SetBit(b887,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b888 = M[001888];
                              SetByte 001888 SetBit(b888,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Let b889 = M[Offset(Offset(000751,Mul(Widen(b885),9)),6)];
                              if (Equal(Widen(b889),126)) {
                                Let b890 = M[001890];
                                SetByte Offset(Offset(000751,Mul(Widen(b885),9)),6) LoByte(Widen(b890));
                                SetByte 001889 134;
                                Let b891 = M[001963];
                                SetByte 001890 LoByte(Widen(b891));
                                SetByte 001963 126;
                                TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                                Let b892 = M[001887];
                                SetByte 001887 SetBit(b892,2);
                                TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                                Let b893 = M[001888];
                                SetByte 001888 SetBit(b893,4);
                                TraceOperation 068963 (Store (Con 143) (Con 0));
                                SetByte 008162 0;
                                SetByte 008163 0;
                                TraceOperation 068966 (Store (Con 91) (Con 1));
                                SetByte 008058 0;
                                SetByte 008059 1;
                                TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                                PushFrame 068969;
                                SetLocal 1 -28826;
                                SetLocal 2 38;
                                JumpCall: 022320, #actuals: 2
                              } else {
                                Error: unlink/loop
                              }
                            }
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b894 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b894),141)) {
      Let b895 = M[002025];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b895));
      SetByte 002024 31;
      Let b896 = M[001036];
      SetByte 002025 LoByte(Widen(b896));
      SetByte 001036 141;
      TraceOperation 068933 (Insert_obj (Con 7) (Con 141));
      Let b897 = M[000818];
      if (IsZero(Widen(b897))) {
        SetByte 000818 141;
        Let b898 = M[002026];
        SetByte 000819 LoByte(Widen(b898));
        SetByte 002026 7;
        TraceOperation 068936 (Insert_obj (Con 1) (Con 141));
        Let b899 = M[000764];
        if (IsZero(Widen(b899))) {
          SetByte 000764 141;
          Let b900 = M[002026];
          SetByte 000765 LoByte(Widen(b900));
          SetByte 002026 1;
          TraceOperation 068939 (Insert_obj (Con 139) (Con 141));
          Let b901 = M[002006];
          if (IsZero(Widen(b901))) {
            SetByte 002006 141;
            Let b902 = M[002026];
            SetByte 002007 LoByte(Widen(b902));
            SetByte 002026 139;
            TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
            Let b903 = M[001853];
            if (IsZero(Widen(b903))) {
              SetByte 001853 141;
              Let b904 = M[002026];
              SetByte 001854 LoByte(Widen(b904));
              SetByte 002026 122;
              TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
              Let b905 = M[001862];
              if (IsZero(Widen(b905))) {
                SetByte 001862 149;
                Let b906 = M[002098];
                SetByte 001863 LoByte(Widen(b906));
                SetByte 002098 123;
                TraceOperation 068948 (Store (Con 136) (Con 142));
                SetByte 008148 0;
                SetByte 008149 142;
                TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                Let b907 = M[002033];
                if (IsZero(Widen(b907))) {
                  SetByte 002033 169;
                  Let b908 = M[002278];
                  SetByte 002034 LoByte(Widen(b908));
                  SetByte 002278 142;
                  TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                  Let b909 = M[001889];
                  if (IsZero(Widen(b909))) {
                    SetByte 001889 134;
                    Let b910 = M[001963];
                    SetByte 001890 LoByte(Widen(b910));
                    SetByte 001963 126;
                    TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                    Let b911 = M[001887];
                    SetByte 001887 SetBit(b911,2);
                    TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                    Let b912 = M[001888];
                    SetByte 001888 SetBit(b912,4);
                    TraceOperation 068963 (Store (Con 143) (Con 0));
                    SetByte 008162 0;
                    SetByte 008163 0;
                    TraceOperation 068966 (Store (Con 91) (Con 1));
                    SetByte 008058 0;
                    SetByte 008059 1;
                    TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                    PushFrame 068969;
                    SetLocal 1 -28826;
                    SetLocal 2 38;
                    JumpCall: 022320, #actuals: 2
                  } else {
                    Let b913 = M[Offset(Offset(000751,Mul(Widen(b909),9)),6)];
                    if (Equal(Widen(b913),126)) {
                      Let b914 = M[001890];
                      SetByte Offset(Offset(000751,Mul(Widen(b909),9)),6) LoByte(Widen(b914));
                      SetByte 001889 134;
                      Let b915 = M[001963];
                      SetByte 001890 LoByte(Widen(b915));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b916 = M[001887];
                      SetByte 001887 SetBit(b916,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b917 = M[001888];
                      SetByte 001888 SetBit(b917,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b918 = M[Offset(Offset(000751,Mul(Widen(b907),9)),6)];
                  if (Equal(Widen(b918),142)) {
                    Let b919 = M[002034];
                    SetByte Offset(Offset(000751,Mul(Widen(b907),9)),6) LoByte(Widen(b919));
                    SetByte 002033 169;
                    Let b920 = M[002278];
                    SetByte 002034 LoByte(Widen(b920));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b921 = M[001889];
                    if (IsZero(Widen(b921))) {
                      SetByte 001889 134;
                      Let b922 = M[001963];
                      SetByte 001890 LoByte(Widen(b922));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b923 = M[001887];
                      SetByte 001887 SetBit(b923,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b924 = M[001888];
                      SetByte 001888 SetBit(b924,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b925 = M[Offset(Offset(000751,Mul(Widen(b921),9)),6)];
                      if (Equal(Widen(b925),126)) {
                        Let b926 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b921),9)),6) LoByte(Widen(b926));
                        SetByte 001889 134;
                        Let b927 = M[001963];
                        SetByte 001890 LoByte(Widen(b927));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b928 = M[001887];
                        SetByte 001887 SetBit(b928,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b929 = M[001888];
                        SetByte 001888 SetBit(b929,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b930 = M[Offset(Offset(000751,Mul(Widen(b905),9)),6)];
                if (Equal(Widen(b930),123)) {
                  Let b931 = M[001863];
                  SetByte Offset(Offset(000751,Mul(Widen(b905),9)),6) LoByte(Widen(b931));
                  SetByte 001862 149;
                  Let b932 = M[002098];
                  SetByte 001863 LoByte(Widen(b932));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b933 = M[002033];
                  if (IsZero(Widen(b933))) {
                    SetByte 002033 169;
                    Let b934 = M[002278];
                    SetByte 002034 LoByte(Widen(b934));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b935 = M[001889];
                    if (IsZero(Widen(b935))) {
                      SetByte 001889 134;
                      Let b936 = M[001963];
                      SetByte 001890 LoByte(Widen(b936));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b937 = M[001887];
                      SetByte 001887 SetBit(b937,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b938 = M[001888];
                      SetByte 001888 SetBit(b938,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b939 = M[Offset(Offset(000751,Mul(Widen(b935),9)),6)];
                      if (Equal(Widen(b939),126)) {
                        Let b940 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b935),9)),6) LoByte(Widen(b940));
                        SetByte 001889 134;
                        Let b941 = M[001963];
                        SetByte 001890 LoByte(Widen(b941));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b942 = M[001887];
                        SetByte 001887 SetBit(b942,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b943 = M[001888];
                        SetByte 001888 SetBit(b943,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b944 = M[Offset(Offset(000751,Mul(Widen(b933),9)),6)];
                    if (Equal(Widen(b944),142)) {
                      Let b945 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b933),9)),6) LoByte(Widen(b945));
                      SetByte 002033 169;
                      Let b946 = M[002278];
                      SetByte 002034 LoByte(Widen(b946));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b947 = M[001889];
                      if (IsZero(Widen(b947))) {
                        SetByte 001889 134;
                        Let b948 = M[001963];
                        SetByte 001890 LoByte(Widen(b948));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b949 = M[001887];
                        SetByte 001887 SetBit(b949,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b950 = M[001888];
                        SetByte 001888 SetBit(b950,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b951 = M[Offset(Offset(000751,Mul(Widen(b947),9)),6)];
                        if (Equal(Widen(b951),126)) {
                          Let b952 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b947),9)),6) LoByte(Widen(b952));
                          SetByte 001889 134;
                          Let b953 = M[001963];
                          SetByte 001890 LoByte(Widen(b953));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b954 = M[001887];
                          SetByte 001887 SetBit(b954,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b955 = M[001888];
                          SetByte 001888 SetBit(b955,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b956 = M[Offset(Offset(000751,Mul(Widen(b903),9)),6)];
              if (Equal(Widen(b956),122)) {
                Let b957 = M[001854];
                SetByte Offset(Offset(000751,Mul(Widen(b903),9)),6) LoByte(Widen(b957));
                SetByte 001853 141;
                Let b958 = M[002026];
                SetByte 001854 LoByte(Widen(b958));
                SetByte 002026 122;
                TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                Let b959 = M[001862];
                if (IsZero(Widen(b959))) {
                  SetByte 001862 149;
                  Let b960 = M[002098];
                  SetByte 001863 LoByte(Widen(b960));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b961 = M[002033];
                  if (IsZero(Widen(b961))) {
                    SetByte 002033 169;
                    Let b962 = M[002278];
                    SetByte 002034 LoByte(Widen(b962));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b963 = M[001889];
                    if (IsZero(Widen(b963))) {
                      SetByte 001889 134;
                      Let b964 = M[001963];
                      SetByte 001890 LoByte(Widen(b964));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b965 = M[001887];
                      SetByte 001887 SetBit(b965,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b966 = M[001888];
                      SetByte 001888 SetBit(b966,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b967 = M[Offset(Offset(000751,Mul(Widen(b963),9)),6)];
                      if (Equal(Widen(b967),126)) {
                        Let b968 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b963),9)),6) LoByte(Widen(b968));
                        SetByte 001889 134;
                        Let b969 = M[001963];
                        SetByte 001890 LoByte(Widen(b969));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b970 = M[001887];
                        SetByte 001887 SetBit(b970,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b971 = M[001888];
                        SetByte 001888 SetBit(b971,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b972 = M[Offset(Offset(000751,Mul(Widen(b961),9)),6)];
                    if (Equal(Widen(b972),142)) {
                      Let b973 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b961),9)),6) LoByte(Widen(b973));
                      SetByte 002033 169;
                      Let b974 = M[002278];
                      SetByte 002034 LoByte(Widen(b974));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b975 = M[001889];
                      if (IsZero(Widen(b975))) {
                        SetByte 001889 134;
                        Let b976 = M[001963];
                        SetByte 001890 LoByte(Widen(b976));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b977 = M[001887];
                        SetByte 001887 SetBit(b977,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b978 = M[001888];
                        SetByte 001888 SetBit(b978,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b979 = M[Offset(Offset(000751,Mul(Widen(b975),9)),6)];
                        if (Equal(Widen(b979),126)) {
                          Let b980 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b975),9)),6) LoByte(Widen(b980));
                          SetByte 001889 134;
                          Let b981 = M[001963];
                          SetByte 001890 LoByte(Widen(b981));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b982 = M[001887];
                          SetByte 001887 SetBit(b982,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b983 = M[001888];
                          SetByte 001888 SetBit(b983,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b984 = M[Offset(Offset(000751,Mul(Widen(b959),9)),6)];
                  if (Equal(Widen(b984),123)) {
                    Let b985 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b959),9)),6) LoByte(Widen(b985));
                    SetByte 001862 149;
                    Let b986 = M[002098];
                    SetByte 001863 LoByte(Widen(b986));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b987 = M[002033];
                    if (IsZero(Widen(b987))) {
                      SetByte 002033 169;
                      Let b988 = M[002278];
                      SetByte 002034 LoByte(Widen(b988));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b989 = M[001889];
                      if (IsZero(Widen(b989))) {
                        SetByte 001889 134;
                        Let b990 = M[001963];
                        SetByte 001890 LoByte(Widen(b990));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b991 = M[001887];
                        SetByte 001887 SetBit(b991,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b992 = M[001888];
                        SetByte 001888 SetBit(b992,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b993 = M[Offset(Offset(000751,Mul(Widen(b989),9)),6)];
                        if (Equal(Widen(b993),126)) {
                          Let b994 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b989),9)),6) LoByte(Widen(b994));
                          SetByte 001889 134;
                          Let b995 = M[001963];
                          SetByte 001890 LoByte(Widen(b995));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b996 = M[001887];
                          SetByte 001887 SetBit(b996,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b997 = M[001888];
                          SetByte 001888 SetBit(b997,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b998 = M[Offset(Offset(000751,Mul(Widen(b987),9)),6)];
                      if (Equal(Widen(b998),142)) {
                        Let b999 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b987),9)),6) LoByte(Widen(b999));
                        SetByte 002033 169;
                        Let b1000 = M[002278];
                        SetByte 002034 LoByte(Widen(b1000));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1001 = M[001889];
                        if (IsZero(Widen(b1001))) {
                          SetByte 001889 134;
                          Let b1002 = M[001963];
                          SetByte 001890 LoByte(Widen(b1002));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1003 = M[001887];
                          SetByte 001887 SetBit(b1003,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1004 = M[001888];
                          SetByte 001888 SetBit(b1004,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1005 = M[Offset(Offset(000751,Mul(Widen(b1001),9)),6)];
                          if (Equal(Widen(b1005),126)) {
                            Let b1006 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1001),9)),6) LoByte(Widen(b1006));
                            SetByte 001889 134;
                            Let b1007 = M[001963];
                            SetByte 001890 LoByte(Widen(b1007));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1008 = M[001887];
                            SetByte 001887 SetBit(b1008,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1009 = M[001888];
                            SetByte 001888 SetBit(b1009,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b1010 = M[Offset(Offset(000751,Mul(Widen(b901),9)),6)];
            if (Equal(Widen(b1010),139)) {
              Let b1011 = M[002007];
              SetByte Offset(Offset(000751,Mul(Widen(b901),9)),6) LoByte(Widen(b1011));
              SetByte 002006 141;
              Let b1012 = M[002026];
              SetByte 002007 LoByte(Widen(b1012));
              SetByte 002026 139;
              TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
              Let b1013 = M[001853];
              if (IsZero(Widen(b1013))) {
                SetByte 001853 141;
                Let b1014 = M[002026];
                SetByte 001854 LoByte(Widen(b1014));
                SetByte 002026 122;
                TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                Let b1015 = M[001862];
                if (IsZero(Widen(b1015))) {
                  SetByte 001862 149;
                  Let b1016 = M[002098];
                  SetByte 001863 LoByte(Widen(b1016));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b1017 = M[002033];
                  if (IsZero(Widen(b1017))) {
                    SetByte 002033 169;
                    Let b1018 = M[002278];
                    SetByte 002034 LoByte(Widen(b1018));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b1019 = M[001889];
                    if (IsZero(Widen(b1019))) {
                      SetByte 001889 134;
                      Let b1020 = M[001963];
                      SetByte 001890 LoByte(Widen(b1020));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b1021 = M[001887];
                      SetByte 001887 SetBit(b1021,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b1022 = M[001888];
                      SetByte 001888 SetBit(b1022,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b1023 = M[Offset(Offset(000751,Mul(Widen(b1019),9)),6)];
                      if (Equal(Widen(b1023),126)) {
                        Let b1024 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b1019),9)),6) LoByte(Widen(b1024));
                        SetByte 001889 134;
                        Let b1025 = M[001963];
                        SetByte 001890 LoByte(Widen(b1025));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1026 = M[001887];
                        SetByte 001887 SetBit(b1026,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1027 = M[001888];
                        SetByte 001888 SetBit(b1027,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b1028 = M[Offset(Offset(000751,Mul(Widen(b1017),9)),6)];
                    if (Equal(Widen(b1028),142)) {
                      Let b1029 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b1017),9)),6) LoByte(Widen(b1029));
                      SetByte 002033 169;
                      Let b1030 = M[002278];
                      SetByte 002034 LoByte(Widen(b1030));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1031 = M[001889];
                      if (IsZero(Widen(b1031))) {
                        SetByte 001889 134;
                        Let b1032 = M[001963];
                        SetByte 001890 LoByte(Widen(b1032));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1033 = M[001887];
                        SetByte 001887 SetBit(b1033,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1034 = M[001888];
                        SetByte 001888 SetBit(b1034,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1035 = M[Offset(Offset(000751,Mul(Widen(b1031),9)),6)];
                        if (Equal(Widen(b1035),126)) {
                          Let b1036 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1031),9)),6) LoByte(Widen(b1036));
                          SetByte 001889 134;
                          Let b1037 = M[001963];
                          SetByte 001890 LoByte(Widen(b1037));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1038 = M[001887];
                          SetByte 001887 SetBit(b1038,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1039 = M[001888];
                          SetByte 001888 SetBit(b1039,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b1040 = M[Offset(Offset(000751,Mul(Widen(b1015),9)),6)];
                  if (Equal(Widen(b1040),123)) {
                    Let b1041 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b1015),9)),6) LoByte(Widen(b1041));
                    SetByte 001862 149;
                    Let b1042 = M[002098];
                    SetByte 001863 LoByte(Widen(b1042));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b1043 = M[002033];
                    if (IsZero(Widen(b1043))) {
                      SetByte 002033 169;
                      Let b1044 = M[002278];
                      SetByte 002034 LoByte(Widen(b1044));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1045 = M[001889];
                      if (IsZero(Widen(b1045))) {
                        SetByte 001889 134;
                        Let b1046 = M[001963];
                        SetByte 001890 LoByte(Widen(b1046));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1047 = M[001887];
                        SetByte 001887 SetBit(b1047,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1048 = M[001888];
                        SetByte 001888 SetBit(b1048,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1049 = M[Offset(Offset(000751,Mul(Widen(b1045),9)),6)];
                        if (Equal(Widen(b1049),126)) {
                          Let b1050 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1045),9)),6) LoByte(Widen(b1050));
                          SetByte 001889 134;
                          Let b1051 = M[001963];
                          SetByte 001890 LoByte(Widen(b1051));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1052 = M[001887];
                          SetByte 001887 SetBit(b1052,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1053 = M[001888];
                          SetByte 001888 SetBit(b1053,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1054 = M[Offset(Offset(000751,Mul(Widen(b1043),9)),6)];
                      if (Equal(Widen(b1054),142)) {
                        Let b1055 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b1043),9)),6) LoByte(Widen(b1055));
                        SetByte 002033 169;
                        Let b1056 = M[002278];
                        SetByte 002034 LoByte(Widen(b1056));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1057 = M[001889];
                        if (IsZero(Widen(b1057))) {
                          SetByte 001889 134;
                          Let b1058 = M[001963];
                          SetByte 001890 LoByte(Widen(b1058));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1059 = M[001887];
                          SetByte 001887 SetBit(b1059,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1060 = M[001888];
                          SetByte 001888 SetBit(b1060,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1061 = M[Offset(Offset(000751,Mul(Widen(b1057),9)),6)];
                          if (Equal(Widen(b1061),126)) {
                            Let b1062 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1057),9)),6) LoByte(Widen(b1062));
                            SetByte 001889 134;
                            Let b1063 = M[001963];
                            SetByte 001890 LoByte(Widen(b1063));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1064 = M[001887];
                            SetByte 001887 SetBit(b1064,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1065 = M[001888];
                            SetByte 001888 SetBit(b1065,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b1066 = M[Offset(Offset(000751,Mul(Widen(b1013),9)),6)];
                if (Equal(Widen(b1066),122)) {
                  Let b1067 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b1013),9)),6) LoByte(Widen(b1067));
                  SetByte 001853 141;
                  Let b1068 = M[002026];
                  SetByte 001854 LoByte(Widen(b1068));
                  SetByte 002026 122;
                  TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                  Let b1069 = M[001862];
                  if (IsZero(Widen(b1069))) {
                    SetByte 001862 149;
                    Let b1070 = M[002098];
                    SetByte 001863 LoByte(Widen(b1070));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b1071 = M[002033];
                    if (IsZero(Widen(b1071))) {
                      SetByte 002033 169;
                      Let b1072 = M[002278];
                      SetByte 002034 LoByte(Widen(b1072));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1073 = M[001889];
                      if (IsZero(Widen(b1073))) {
                        SetByte 001889 134;
                        Let b1074 = M[001963];
                        SetByte 001890 LoByte(Widen(b1074));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1075 = M[001887];
                        SetByte 001887 SetBit(b1075,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1076 = M[001888];
                        SetByte 001888 SetBit(b1076,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1077 = M[Offset(Offset(000751,Mul(Widen(b1073),9)),6)];
                        if (Equal(Widen(b1077),126)) {
                          Let b1078 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1073),9)),6) LoByte(Widen(b1078));
                          SetByte 001889 134;
                          Let b1079 = M[001963];
                          SetByte 001890 LoByte(Widen(b1079));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1080 = M[001887];
                          SetByte 001887 SetBit(b1080,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1081 = M[001888];
                          SetByte 001888 SetBit(b1081,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1082 = M[Offset(Offset(000751,Mul(Widen(b1071),9)),6)];
                      if (Equal(Widen(b1082),142)) {
                        Let b1083 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b1071),9)),6) LoByte(Widen(b1083));
                        SetByte 002033 169;
                        Let b1084 = M[002278];
                        SetByte 002034 LoByte(Widen(b1084));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1085 = M[001889];
                        if (IsZero(Widen(b1085))) {
                          SetByte 001889 134;
                          Let b1086 = M[001963];
                          SetByte 001890 LoByte(Widen(b1086));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1087 = M[001887];
                          SetByte 001887 SetBit(b1087,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1088 = M[001888];
                          SetByte 001888 SetBit(b1088,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1089 = M[Offset(Offset(000751,Mul(Widen(b1085),9)),6)];
                          if (Equal(Widen(b1089),126)) {
                            Let b1090 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1085),9)),6) LoByte(Widen(b1090));
                            SetByte 001889 134;
                            Let b1091 = M[001963];
                            SetByte 001890 LoByte(Widen(b1091));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1092 = M[001887];
                            SetByte 001887 SetBit(b1092,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1093 = M[001888];
                            SetByte 001888 SetBit(b1093,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b1094 = M[Offset(Offset(000751,Mul(Widen(b1069),9)),6)];
                    if (Equal(Widen(b1094),123)) {
                      Let b1095 = M[001863];
                      SetByte Offset(Offset(000751,Mul(Widen(b1069),9)),6) LoByte(Widen(b1095));
                      SetByte 001862 149;
                      Let b1096 = M[002098];
                      SetByte 001863 LoByte(Widen(b1096));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b1097 = M[002033];
                      if (IsZero(Widen(b1097))) {
                        SetByte 002033 169;
                        Let b1098 = M[002278];
                        SetByte 002034 LoByte(Widen(b1098));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1099 = M[001889];
                        if (IsZero(Widen(b1099))) {
                          SetByte 001889 134;
                          Let b1100 = M[001963];
                          SetByte 001890 LoByte(Widen(b1100));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1101 = M[001887];
                          SetByte 001887 SetBit(b1101,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1102 = M[001888];
                          SetByte 001888 SetBit(b1102,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1103 = M[Offset(Offset(000751,Mul(Widen(b1099),9)),6)];
                          if (Equal(Widen(b1103),126)) {
                            Let b1104 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1099),9)),6) LoByte(Widen(b1104));
                            SetByte 001889 134;
                            Let b1105 = M[001963];
                            SetByte 001890 LoByte(Widen(b1105));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1106 = M[001887];
                            SetByte 001887 SetBit(b1106,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1107 = M[001888];
                            SetByte 001888 SetBit(b1107,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b1108 = M[Offset(Offset(000751,Mul(Widen(b1097),9)),6)];
                        if (Equal(Widen(b1108),142)) {
                          Let b1109 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b1097),9)),6) LoByte(Widen(b1109));
                          SetByte 002033 169;
                          Let b1110 = M[002278];
                          SetByte 002034 LoByte(Widen(b1110));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1111 = M[001889];
                          if (IsZero(Widen(b1111))) {
                            SetByte 001889 134;
                            Let b1112 = M[001963];
                            SetByte 001890 LoByte(Widen(b1112));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1113 = M[001887];
                            SetByte 001887 SetBit(b1113,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1114 = M[001888];
                            SetByte 001888 SetBit(b1114,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1115 = M[Offset(Offset(000751,Mul(Widen(b1111),9)),6)];
                            if (Equal(Widen(b1115),126)) {
                              Let b1116 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1111),9)),6) LoByte(Widen(b1116));
                              SetByte 001889 134;
                              Let b1117 = M[001963];
                              SetByte 001890 LoByte(Widen(b1117));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1118 = M[001887];
                              SetByte 001887 SetBit(b1118,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1119 = M[001888];
                              SetByte 001888 SetBit(b1119,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b1120 = M[Offset(Offset(000751,Mul(Widen(b899),9)),6)];
          if (Equal(Widen(b1120),1)) {
            Let b1121 = M[000765];
            SetByte Offset(Offset(000751,Mul(Widen(b899),9)),6) LoByte(Widen(b1121));
            SetByte 000764 141;
            Let b1122 = M[002026];
            SetByte 000765 LoByte(Widen(b1122));
            SetByte 002026 1;
            TraceOperation 068939 (Insert_obj (Con 139) (Con 141));
            Let b1123 = M[002006];
            if (IsZero(Widen(b1123))) {
              SetByte 002006 141;
              Let b1124 = M[002026];
              SetByte 002007 LoByte(Widen(b1124));
              SetByte 002026 139;
              TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
              Let b1125 = M[001853];
              if (IsZero(Widen(b1125))) {
                SetByte 001853 141;
                Let b1126 = M[002026];
                SetByte 001854 LoByte(Widen(b1126));
                SetByte 002026 122;
                TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                Let b1127 = M[001862];
                if (IsZero(Widen(b1127))) {
                  SetByte 001862 149;
                  Let b1128 = M[002098];
                  SetByte 001863 LoByte(Widen(b1128));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b1129 = M[002033];
                  if (IsZero(Widen(b1129))) {
                    SetByte 002033 169;
                    Let b1130 = M[002278];
                    SetByte 002034 LoByte(Widen(b1130));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b1131 = M[001889];
                    if (IsZero(Widen(b1131))) {
                      SetByte 001889 134;
                      Let b1132 = M[001963];
                      SetByte 001890 LoByte(Widen(b1132));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b1133 = M[001887];
                      SetByte 001887 SetBit(b1133,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b1134 = M[001888];
                      SetByte 001888 SetBit(b1134,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b1135 = M[Offset(Offset(000751,Mul(Widen(b1131),9)),6)];
                      if (Equal(Widen(b1135),126)) {
                        Let b1136 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b1131),9)),6) LoByte(Widen(b1136));
                        SetByte 001889 134;
                        Let b1137 = M[001963];
                        SetByte 001890 LoByte(Widen(b1137));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1138 = M[001887];
                        SetByte 001887 SetBit(b1138,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1139 = M[001888];
                        SetByte 001888 SetBit(b1139,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b1140 = M[Offset(Offset(000751,Mul(Widen(b1129),9)),6)];
                    if (Equal(Widen(b1140),142)) {
                      Let b1141 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b1129),9)),6) LoByte(Widen(b1141));
                      SetByte 002033 169;
                      Let b1142 = M[002278];
                      SetByte 002034 LoByte(Widen(b1142));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1143 = M[001889];
                      if (IsZero(Widen(b1143))) {
                        SetByte 001889 134;
                        Let b1144 = M[001963];
                        SetByte 001890 LoByte(Widen(b1144));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1145 = M[001887];
                        SetByte 001887 SetBit(b1145,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1146 = M[001888];
                        SetByte 001888 SetBit(b1146,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1147 = M[Offset(Offset(000751,Mul(Widen(b1143),9)),6)];
                        if (Equal(Widen(b1147),126)) {
                          Let b1148 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1143),9)),6) LoByte(Widen(b1148));
                          SetByte 001889 134;
                          Let b1149 = M[001963];
                          SetByte 001890 LoByte(Widen(b1149));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1150 = M[001887];
                          SetByte 001887 SetBit(b1150,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1151 = M[001888];
                          SetByte 001888 SetBit(b1151,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b1152 = M[Offset(Offset(000751,Mul(Widen(b1127),9)),6)];
                  if (Equal(Widen(b1152),123)) {
                    Let b1153 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b1127),9)),6) LoByte(Widen(b1153));
                    SetByte 001862 149;
                    Let b1154 = M[002098];
                    SetByte 001863 LoByte(Widen(b1154));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b1155 = M[002033];
                    if (IsZero(Widen(b1155))) {
                      SetByte 002033 169;
                      Let b1156 = M[002278];
                      SetByte 002034 LoByte(Widen(b1156));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1157 = M[001889];
                      if (IsZero(Widen(b1157))) {
                        SetByte 001889 134;
                        Let b1158 = M[001963];
                        SetByte 001890 LoByte(Widen(b1158));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1159 = M[001887];
                        SetByte 001887 SetBit(b1159,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1160 = M[001888];
                        SetByte 001888 SetBit(b1160,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1161 = M[Offset(Offset(000751,Mul(Widen(b1157),9)),6)];
                        if (Equal(Widen(b1161),126)) {
                          Let b1162 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1157),9)),6) LoByte(Widen(b1162));
                          SetByte 001889 134;
                          Let b1163 = M[001963];
                          SetByte 001890 LoByte(Widen(b1163));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1164 = M[001887];
                          SetByte 001887 SetBit(b1164,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1165 = M[001888];
                          SetByte 001888 SetBit(b1165,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1166 = M[Offset(Offset(000751,Mul(Widen(b1155),9)),6)];
                      if (Equal(Widen(b1166),142)) {
                        Let b1167 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b1155),9)),6) LoByte(Widen(b1167));
                        SetByte 002033 169;
                        Let b1168 = M[002278];
                        SetByte 002034 LoByte(Widen(b1168));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1169 = M[001889];
                        if (IsZero(Widen(b1169))) {
                          SetByte 001889 134;
                          Let b1170 = M[001963];
                          SetByte 001890 LoByte(Widen(b1170));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1171 = M[001887];
                          SetByte 001887 SetBit(b1171,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1172 = M[001888];
                          SetByte 001888 SetBit(b1172,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1173 = M[Offset(Offset(000751,Mul(Widen(b1169),9)),6)];
                          if (Equal(Widen(b1173),126)) {
                            Let b1174 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1169),9)),6) LoByte(Widen(b1174));
                            SetByte 001889 134;
                            Let b1175 = M[001963];
                            SetByte 001890 LoByte(Widen(b1175));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1176 = M[001887];
                            SetByte 001887 SetBit(b1176,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1177 = M[001888];
                            SetByte 001888 SetBit(b1177,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b1178 = M[Offset(Offset(000751,Mul(Widen(b1125),9)),6)];
                if (Equal(Widen(b1178),122)) {
                  Let b1179 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b1125),9)),6) LoByte(Widen(b1179));
                  SetByte 001853 141;
                  Let b1180 = M[002026];
                  SetByte 001854 LoByte(Widen(b1180));
                  SetByte 002026 122;
                  TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                  Let b1181 = M[001862];
                  if (IsZero(Widen(b1181))) {
                    SetByte 001862 149;
                    Let b1182 = M[002098];
                    SetByte 001863 LoByte(Widen(b1182));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b1183 = M[002033];
                    if (IsZero(Widen(b1183))) {
                      SetByte 002033 169;
                      Let b1184 = M[002278];
                      SetByte 002034 LoByte(Widen(b1184));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1185 = M[001889];
                      if (IsZero(Widen(b1185))) {
                        SetByte 001889 134;
                        Let b1186 = M[001963];
                        SetByte 001890 LoByte(Widen(b1186));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1187 = M[001887];
                        SetByte 001887 SetBit(b1187,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1188 = M[001888];
                        SetByte 001888 SetBit(b1188,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1189 = M[Offset(Offset(000751,Mul(Widen(b1185),9)),6)];
                        if (Equal(Widen(b1189),126)) {
                          Let b1190 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1185),9)),6) LoByte(Widen(b1190));
                          SetByte 001889 134;
                          Let b1191 = M[001963];
                          SetByte 001890 LoByte(Widen(b1191));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1192 = M[001887];
                          SetByte 001887 SetBit(b1192,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1193 = M[001888];
                          SetByte 001888 SetBit(b1193,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1194 = M[Offset(Offset(000751,Mul(Widen(b1183),9)),6)];
                      if (Equal(Widen(b1194),142)) {
                        Let b1195 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b1183),9)),6) LoByte(Widen(b1195));
                        SetByte 002033 169;
                        Let b1196 = M[002278];
                        SetByte 002034 LoByte(Widen(b1196));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1197 = M[001889];
                        if (IsZero(Widen(b1197))) {
                          SetByte 001889 134;
                          Let b1198 = M[001963];
                          SetByte 001890 LoByte(Widen(b1198));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1199 = M[001887];
                          SetByte 001887 SetBit(b1199,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1200 = M[001888];
                          SetByte 001888 SetBit(b1200,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1201 = M[Offset(Offset(000751,Mul(Widen(b1197),9)),6)];
                          if (Equal(Widen(b1201),126)) {
                            Let b1202 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1197),9)),6) LoByte(Widen(b1202));
                            SetByte 001889 134;
                            Let b1203 = M[001963];
                            SetByte 001890 LoByte(Widen(b1203));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1204 = M[001887];
                            SetByte 001887 SetBit(b1204,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1205 = M[001888];
                            SetByte 001888 SetBit(b1205,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b1206 = M[Offset(Offset(000751,Mul(Widen(b1181),9)),6)];
                    if (Equal(Widen(b1206),123)) {
                      Let b1207 = M[001863];
                      SetByte Offset(Offset(000751,Mul(Widen(b1181),9)),6) LoByte(Widen(b1207));
                      SetByte 001862 149;
                      Let b1208 = M[002098];
                      SetByte 001863 LoByte(Widen(b1208));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b1209 = M[002033];
                      if (IsZero(Widen(b1209))) {
                        SetByte 002033 169;
                        Let b1210 = M[002278];
                        SetByte 002034 LoByte(Widen(b1210));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1211 = M[001889];
                        if (IsZero(Widen(b1211))) {
                          SetByte 001889 134;
                          Let b1212 = M[001963];
                          SetByte 001890 LoByte(Widen(b1212));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1213 = M[001887];
                          SetByte 001887 SetBit(b1213,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1214 = M[001888];
                          SetByte 001888 SetBit(b1214,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1215 = M[Offset(Offset(000751,Mul(Widen(b1211),9)),6)];
                          if (Equal(Widen(b1215),126)) {
                            Let b1216 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1211),9)),6) LoByte(Widen(b1216));
                            SetByte 001889 134;
                            Let b1217 = M[001963];
                            SetByte 001890 LoByte(Widen(b1217));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1218 = M[001887];
                            SetByte 001887 SetBit(b1218,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1219 = M[001888];
                            SetByte 001888 SetBit(b1219,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b1220 = M[Offset(Offset(000751,Mul(Widen(b1209),9)),6)];
                        if (Equal(Widen(b1220),142)) {
                          Let b1221 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b1209),9)),6) LoByte(Widen(b1221));
                          SetByte 002033 169;
                          Let b1222 = M[002278];
                          SetByte 002034 LoByte(Widen(b1222));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1223 = M[001889];
                          if (IsZero(Widen(b1223))) {
                            SetByte 001889 134;
                            Let b1224 = M[001963];
                            SetByte 001890 LoByte(Widen(b1224));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1225 = M[001887];
                            SetByte 001887 SetBit(b1225,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1226 = M[001888];
                            SetByte 001888 SetBit(b1226,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1227 = M[Offset(Offset(000751,Mul(Widen(b1223),9)),6)];
                            if (Equal(Widen(b1227),126)) {
                              Let b1228 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1223),9)),6) LoByte(Widen(b1228));
                              SetByte 001889 134;
                              Let b1229 = M[001963];
                              SetByte 001890 LoByte(Widen(b1229));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1230 = M[001887];
                              SetByte 001887 SetBit(b1230,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1231 = M[001888];
                              SetByte 001888 SetBit(b1231,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b1232 = M[Offset(Offset(000751,Mul(Widen(b1123),9)),6)];
              if (Equal(Widen(b1232),139)) {
                Let b1233 = M[002007];
                SetByte Offset(Offset(000751,Mul(Widen(b1123),9)),6) LoByte(Widen(b1233));
                SetByte 002006 141;
                Let b1234 = M[002026];
                SetByte 002007 LoByte(Widen(b1234));
                SetByte 002026 139;
                TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
                Let b1235 = M[001853];
                if (IsZero(Widen(b1235))) {
                  SetByte 001853 141;
                  Let b1236 = M[002026];
                  SetByte 001854 LoByte(Widen(b1236));
                  SetByte 002026 122;
                  TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                  Let b1237 = M[001862];
                  if (IsZero(Widen(b1237))) {
                    SetByte 001862 149;
                    Let b1238 = M[002098];
                    SetByte 001863 LoByte(Widen(b1238));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b1239 = M[002033];
                    if (IsZero(Widen(b1239))) {
                      SetByte 002033 169;
                      Let b1240 = M[002278];
                      SetByte 002034 LoByte(Widen(b1240));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1241 = M[001889];
                      if (IsZero(Widen(b1241))) {
                        SetByte 001889 134;
                        Let b1242 = M[001963];
                        SetByte 001890 LoByte(Widen(b1242));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1243 = M[001887];
                        SetByte 001887 SetBit(b1243,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1244 = M[001888];
                        SetByte 001888 SetBit(b1244,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1245 = M[Offset(Offset(000751,Mul(Widen(b1241),9)),6)];
                        if (Equal(Widen(b1245),126)) {
                          Let b1246 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1241),9)),6) LoByte(Widen(b1246));
                          SetByte 001889 134;
                          Let b1247 = M[001963];
                          SetByte 001890 LoByte(Widen(b1247));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1248 = M[001887];
                          SetByte 001887 SetBit(b1248,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1249 = M[001888];
                          SetByte 001888 SetBit(b1249,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1250 = M[Offset(Offset(000751,Mul(Widen(b1239),9)),6)];
                      if (Equal(Widen(b1250),142)) {
                        Let b1251 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b1239),9)),6) LoByte(Widen(b1251));
                        SetByte 002033 169;
                        Let b1252 = M[002278];
                        SetByte 002034 LoByte(Widen(b1252));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1253 = M[001889];
                        if (IsZero(Widen(b1253))) {
                          SetByte 001889 134;
                          Let b1254 = M[001963];
                          SetByte 001890 LoByte(Widen(b1254));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1255 = M[001887];
                          SetByte 001887 SetBit(b1255,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1256 = M[001888];
                          SetByte 001888 SetBit(b1256,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1257 = M[Offset(Offset(000751,Mul(Widen(b1253),9)),6)];
                          if (Equal(Widen(b1257),126)) {
                            Let b1258 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1253),9)),6) LoByte(Widen(b1258));
                            SetByte 001889 134;
                            Let b1259 = M[001963];
                            SetByte 001890 LoByte(Widen(b1259));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1260 = M[001887];
                            SetByte 001887 SetBit(b1260,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1261 = M[001888];
                            SetByte 001888 SetBit(b1261,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b1262 = M[Offset(Offset(000751,Mul(Widen(b1237),9)),6)];
                    if (Equal(Widen(b1262),123)) {
                      Let b1263 = M[001863];
                      SetByte Offset(Offset(000751,Mul(Widen(b1237),9)),6) LoByte(Widen(b1263));
                      SetByte 001862 149;
                      Let b1264 = M[002098];
                      SetByte 001863 LoByte(Widen(b1264));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b1265 = M[002033];
                      if (IsZero(Widen(b1265))) {
                        SetByte 002033 169;
                        Let b1266 = M[002278];
                        SetByte 002034 LoByte(Widen(b1266));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1267 = M[001889];
                        if (IsZero(Widen(b1267))) {
                          SetByte 001889 134;
                          Let b1268 = M[001963];
                          SetByte 001890 LoByte(Widen(b1268));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1269 = M[001887];
                          SetByte 001887 SetBit(b1269,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1270 = M[001888];
                          SetByte 001888 SetBit(b1270,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1271 = M[Offset(Offset(000751,Mul(Widen(b1267),9)),6)];
                          if (Equal(Widen(b1271),126)) {
                            Let b1272 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1267),9)),6) LoByte(Widen(b1272));
                            SetByte 001889 134;
                            Let b1273 = M[001963];
                            SetByte 001890 LoByte(Widen(b1273));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1274 = M[001887];
                            SetByte 001887 SetBit(b1274,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1275 = M[001888];
                            SetByte 001888 SetBit(b1275,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b1276 = M[Offset(Offset(000751,Mul(Widen(b1265),9)),6)];
                        if (Equal(Widen(b1276),142)) {
                          Let b1277 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b1265),9)),6) LoByte(Widen(b1277));
                          SetByte 002033 169;
                          Let b1278 = M[002278];
                          SetByte 002034 LoByte(Widen(b1278));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1279 = M[001889];
                          if (IsZero(Widen(b1279))) {
                            SetByte 001889 134;
                            Let b1280 = M[001963];
                            SetByte 001890 LoByte(Widen(b1280));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1281 = M[001887];
                            SetByte 001887 SetBit(b1281,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1282 = M[001888];
                            SetByte 001888 SetBit(b1282,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1283 = M[Offset(Offset(000751,Mul(Widen(b1279),9)),6)];
                            if (Equal(Widen(b1283),126)) {
                              Let b1284 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1279),9)),6) LoByte(Widen(b1284));
                              SetByte 001889 134;
                              Let b1285 = M[001963];
                              SetByte 001890 LoByte(Widen(b1285));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1286 = M[001887];
                              SetByte 001887 SetBit(b1286,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1287 = M[001888];
                              SetByte 001888 SetBit(b1287,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b1288 = M[Offset(Offset(000751,Mul(Widen(b1235),9)),6)];
                  if (Equal(Widen(b1288),122)) {
                    Let b1289 = M[001854];
                    SetByte Offset(Offset(000751,Mul(Widen(b1235),9)),6) LoByte(Widen(b1289));
                    SetByte 001853 141;
                    Let b1290 = M[002026];
                    SetByte 001854 LoByte(Widen(b1290));
                    SetByte 002026 122;
                    TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                    Let b1291 = M[001862];
                    if (IsZero(Widen(b1291))) {
                      SetByte 001862 149;
                      Let b1292 = M[002098];
                      SetByte 001863 LoByte(Widen(b1292));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b1293 = M[002033];
                      if (IsZero(Widen(b1293))) {
                        SetByte 002033 169;
                        Let b1294 = M[002278];
                        SetByte 002034 LoByte(Widen(b1294));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1295 = M[001889];
                        if (IsZero(Widen(b1295))) {
                          SetByte 001889 134;
                          Let b1296 = M[001963];
                          SetByte 001890 LoByte(Widen(b1296));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1297 = M[001887];
                          SetByte 001887 SetBit(b1297,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1298 = M[001888];
                          SetByte 001888 SetBit(b1298,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1299 = M[Offset(Offset(000751,Mul(Widen(b1295),9)),6)];
                          if (Equal(Widen(b1299),126)) {
                            Let b1300 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1295),9)),6) LoByte(Widen(b1300));
                            SetByte 001889 134;
                            Let b1301 = M[001963];
                            SetByte 001890 LoByte(Widen(b1301));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1302 = M[001887];
                            SetByte 001887 SetBit(b1302,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1303 = M[001888];
                            SetByte 001888 SetBit(b1303,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b1304 = M[Offset(Offset(000751,Mul(Widen(b1293),9)),6)];
                        if (Equal(Widen(b1304),142)) {
                          Let b1305 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b1293),9)),6) LoByte(Widen(b1305));
                          SetByte 002033 169;
                          Let b1306 = M[002278];
                          SetByte 002034 LoByte(Widen(b1306));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1307 = M[001889];
                          if (IsZero(Widen(b1307))) {
                            SetByte 001889 134;
                            Let b1308 = M[001963];
                            SetByte 001890 LoByte(Widen(b1308));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1309 = M[001887];
                            SetByte 001887 SetBit(b1309,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1310 = M[001888];
                            SetByte 001888 SetBit(b1310,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1311 = M[Offset(Offset(000751,Mul(Widen(b1307),9)),6)];
                            if (Equal(Widen(b1311),126)) {
                              Let b1312 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1307),9)),6) LoByte(Widen(b1312));
                              SetByte 001889 134;
                              Let b1313 = M[001963];
                              SetByte 001890 LoByte(Widen(b1313));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1314 = M[001887];
                              SetByte 001887 SetBit(b1314,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1315 = M[001888];
                              SetByte 001888 SetBit(b1315,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1316 = M[Offset(Offset(000751,Mul(Widen(b1291),9)),6)];
                      if (Equal(Widen(b1316),123)) {
                        Let b1317 = M[001863];
                        SetByte Offset(Offset(000751,Mul(Widen(b1291),9)),6) LoByte(Widen(b1317));
                        SetByte 001862 149;
                        Let b1318 = M[002098];
                        SetByte 001863 LoByte(Widen(b1318));
                        SetByte 002098 123;
                        TraceOperation 068948 (Store (Con 136) (Con 142));
                        SetByte 008148 0;
                        SetByte 008149 142;
                        TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                        Let b1319 = M[002033];
                        if (IsZero(Widen(b1319))) {
                          SetByte 002033 169;
                          Let b1320 = M[002278];
                          SetByte 002034 LoByte(Widen(b1320));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1321 = M[001889];
                          if (IsZero(Widen(b1321))) {
                            SetByte 001889 134;
                            Let b1322 = M[001963];
                            SetByte 001890 LoByte(Widen(b1322));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1323 = M[001887];
                            SetByte 001887 SetBit(b1323,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1324 = M[001888];
                            SetByte 001888 SetBit(b1324,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1325 = M[Offset(Offset(000751,Mul(Widen(b1321),9)),6)];
                            if (Equal(Widen(b1325),126)) {
                              Let b1326 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1321),9)),6) LoByte(Widen(b1326));
                              SetByte 001889 134;
                              Let b1327 = M[001963];
                              SetByte 001890 LoByte(Widen(b1327));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1328 = M[001887];
                              SetByte 001887 SetBit(b1328,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1329 = M[001888];
                              SetByte 001888 SetBit(b1329,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Let b1330 = M[Offset(Offset(000751,Mul(Widen(b1319),9)),6)];
                          if (Equal(Widen(b1330),142)) {
                            Let b1331 = M[002034];
                            SetByte Offset(Offset(000751,Mul(Widen(b1319),9)),6) LoByte(Widen(b1331));
                            SetByte 002033 169;
                            Let b1332 = M[002278];
                            SetByte 002034 LoByte(Widen(b1332));
                            SetByte 002278 142;
                            TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                            Let b1333 = M[001889];
                            if (IsZero(Widen(b1333))) {
                              SetByte 001889 134;
                              Let b1334 = M[001963];
                              SetByte 001890 LoByte(Widen(b1334));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1335 = M[001887];
                              SetByte 001887 SetBit(b1335,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1336 = M[001888];
                              SetByte 001888 SetBit(b1336,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Let b1337 = M[Offset(Offset(000751,Mul(Widen(b1333),9)),6)];
                              if (Equal(Widen(b1337),126)) {
                                Let b1338 = M[001890];
                                SetByte Offset(Offset(000751,Mul(Widen(b1333),9)),6) LoByte(Widen(b1338));
                                SetByte 001889 134;
                                Let b1339 = M[001963];
                                SetByte 001890 LoByte(Widen(b1339));
                                SetByte 001963 126;
                                TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                                Let b1340 = M[001887];
                                SetByte 001887 SetBit(b1340,2);
                                TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                                Let b1341 = M[001888];
                                SetByte 001888 SetBit(b1341,4);
                                TraceOperation 068963 (Store (Con 143) (Con 0));
                                SetByte 008162 0;
                                SetByte 008163 0;
                                TraceOperation 068966 (Store (Con 91) (Con 1));
                                SetByte 008058 0;
                                SetByte 008059 1;
                                TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                                PushFrame 068969;
                                SetLocal 1 -28826;
                                SetLocal 2 38;
                                JumpCall: 022320, #actuals: 2
                              } else {
                                Error: unlink/loop
                              }
                            }
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b1342 = M[Offset(Offset(000751,Mul(Widen(b897),9)),6)];
        if (Equal(Widen(b1342),7)) {
          Let b1343 = M[000819];
          SetByte Offset(Offset(000751,Mul(Widen(b897),9)),6) LoByte(Widen(b1343));
          SetByte 000818 141;
          Let b1344 = M[002026];
          SetByte 000819 LoByte(Widen(b1344));
          SetByte 002026 7;
          TraceOperation 068936 (Insert_obj (Con 1) (Con 141));
          Let b1345 = M[000764];
          if (IsZero(Widen(b1345))) {
            SetByte 000764 141;
            Let b1346 = M[002026];
            SetByte 000765 LoByte(Widen(b1346));
            SetByte 002026 1;
            TraceOperation 068939 (Insert_obj (Con 139) (Con 141));
            Let b1347 = M[002006];
            if (IsZero(Widen(b1347))) {
              SetByte 002006 141;
              Let b1348 = M[002026];
              SetByte 002007 LoByte(Widen(b1348));
              SetByte 002026 139;
              TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
              Let b1349 = M[001853];
              if (IsZero(Widen(b1349))) {
                SetByte 001853 141;
                Let b1350 = M[002026];
                SetByte 001854 LoByte(Widen(b1350));
                SetByte 002026 122;
                TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                Let b1351 = M[001862];
                if (IsZero(Widen(b1351))) {
                  SetByte 001862 149;
                  Let b1352 = M[002098];
                  SetByte 001863 LoByte(Widen(b1352));
                  SetByte 002098 123;
                  TraceOperation 068948 (Store (Con 136) (Con 142));
                  SetByte 008148 0;
                  SetByte 008149 142;
                  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                  Let b1353 = M[002033];
                  if (IsZero(Widen(b1353))) {
                    SetByte 002033 169;
                    Let b1354 = M[002278];
                    SetByte 002034 LoByte(Widen(b1354));
                    SetByte 002278 142;
                    TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                    Let b1355 = M[001889];
                    if (IsZero(Widen(b1355))) {
                      SetByte 001889 134;
                      Let b1356 = M[001963];
                      SetByte 001890 LoByte(Widen(b1356));
                      SetByte 001963 126;
                      TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                      Let b1357 = M[001887];
                      SetByte 001887 SetBit(b1357,2);
                      TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                      Let b1358 = M[001888];
                      SetByte 001888 SetBit(b1358,4);
                      TraceOperation 068963 (Store (Con 143) (Con 0));
                      SetByte 008162 0;
                      SetByte 008163 0;
                      TraceOperation 068966 (Store (Con 91) (Con 1));
                      SetByte 008058 0;
                      SetByte 008059 1;
                      TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                      PushFrame 068969;
                      SetLocal 1 -28826;
                      SetLocal 2 38;
                      JumpCall: 022320, #actuals: 2
                    } else {
                      Let b1359 = M[Offset(Offset(000751,Mul(Widen(b1355),9)),6)];
                      if (Equal(Widen(b1359),126)) {
                        Let b1360 = M[001890];
                        SetByte Offset(Offset(000751,Mul(Widen(b1355),9)),6) LoByte(Widen(b1360));
                        SetByte 001889 134;
                        Let b1361 = M[001963];
                        SetByte 001890 LoByte(Widen(b1361));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1362 = M[001887];
                        SetByte 001887 SetBit(b1362,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1363 = M[001888];
                        SetByte 001888 SetBit(b1363,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b1364 = M[Offset(Offset(000751,Mul(Widen(b1353),9)),6)];
                    if (Equal(Widen(b1364),142)) {
                      Let b1365 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b1353),9)),6) LoByte(Widen(b1365));
                      SetByte 002033 169;
                      Let b1366 = M[002278];
                      SetByte 002034 LoByte(Widen(b1366));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1367 = M[001889];
                      if (IsZero(Widen(b1367))) {
                        SetByte 001889 134;
                        Let b1368 = M[001963];
                        SetByte 001890 LoByte(Widen(b1368));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1369 = M[001887];
                        SetByte 001887 SetBit(b1369,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1370 = M[001888];
                        SetByte 001888 SetBit(b1370,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1371 = M[Offset(Offset(000751,Mul(Widen(b1367),9)),6)];
                        if (Equal(Widen(b1371),126)) {
                          Let b1372 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1367),9)),6) LoByte(Widen(b1372));
                          SetByte 001889 134;
                          Let b1373 = M[001963];
                          SetByte 001890 LoByte(Widen(b1373));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1374 = M[001887];
                          SetByte 001887 SetBit(b1374,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1375 = M[001888];
                          SetByte 001888 SetBit(b1375,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b1376 = M[Offset(Offset(000751,Mul(Widen(b1351),9)),6)];
                  if (Equal(Widen(b1376),123)) {
                    Let b1377 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b1351),9)),6) LoByte(Widen(b1377));
                    SetByte 001862 149;
                    Let b1378 = M[002098];
                    SetByte 001863 LoByte(Widen(b1378));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b1379 = M[002033];
                    if (IsZero(Widen(b1379))) {
                      SetByte 002033 169;
                      Let b1380 = M[002278];
                      SetByte 002034 LoByte(Widen(b1380));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1381 = M[001889];
                      if (IsZero(Widen(b1381))) {
                        SetByte 001889 134;
                        Let b1382 = M[001963];
                        SetByte 001890 LoByte(Widen(b1382));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1383 = M[001887];
                        SetByte 001887 SetBit(b1383,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1384 = M[001888];
                        SetByte 001888 SetBit(b1384,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1385 = M[Offset(Offset(000751,Mul(Widen(b1381),9)),6)];
                        if (Equal(Widen(b1385),126)) {
                          Let b1386 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1381),9)),6) LoByte(Widen(b1386));
                          SetByte 001889 134;
                          Let b1387 = M[001963];
                          SetByte 001890 LoByte(Widen(b1387));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1388 = M[001887];
                          SetByte 001887 SetBit(b1388,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1389 = M[001888];
                          SetByte 001888 SetBit(b1389,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1390 = M[Offset(Offset(000751,Mul(Widen(b1379),9)),6)];
                      if (Equal(Widen(b1390),142)) {
                        Let b1391 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b1379),9)),6) LoByte(Widen(b1391));
                        SetByte 002033 169;
                        Let b1392 = M[002278];
                        SetByte 002034 LoByte(Widen(b1392));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1393 = M[001889];
                        if (IsZero(Widen(b1393))) {
                          SetByte 001889 134;
                          Let b1394 = M[001963];
                          SetByte 001890 LoByte(Widen(b1394));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1395 = M[001887];
                          SetByte 001887 SetBit(b1395,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1396 = M[001888];
                          SetByte 001888 SetBit(b1396,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1397 = M[Offset(Offset(000751,Mul(Widen(b1393),9)),6)];
                          if (Equal(Widen(b1397),126)) {
                            Let b1398 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1393),9)),6) LoByte(Widen(b1398));
                            SetByte 001889 134;
                            Let b1399 = M[001963];
                            SetByte 001890 LoByte(Widen(b1399));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1400 = M[001887];
                            SetByte 001887 SetBit(b1400,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1401 = M[001888];
                            SetByte 001888 SetBit(b1401,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b1402 = M[Offset(Offset(000751,Mul(Widen(b1349),9)),6)];
                if (Equal(Widen(b1402),122)) {
                  Let b1403 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b1349),9)),6) LoByte(Widen(b1403));
                  SetByte 001853 141;
                  Let b1404 = M[002026];
                  SetByte 001854 LoByte(Widen(b1404));
                  SetByte 002026 122;
                  TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                  Let b1405 = M[001862];
                  if (IsZero(Widen(b1405))) {
                    SetByte 001862 149;
                    Let b1406 = M[002098];
                    SetByte 001863 LoByte(Widen(b1406));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b1407 = M[002033];
                    if (IsZero(Widen(b1407))) {
                      SetByte 002033 169;
                      Let b1408 = M[002278];
                      SetByte 002034 LoByte(Widen(b1408));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1409 = M[001889];
                      if (IsZero(Widen(b1409))) {
                        SetByte 001889 134;
                        Let b1410 = M[001963];
                        SetByte 001890 LoByte(Widen(b1410));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1411 = M[001887];
                        SetByte 001887 SetBit(b1411,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1412 = M[001888];
                        SetByte 001888 SetBit(b1412,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1413 = M[Offset(Offset(000751,Mul(Widen(b1409),9)),6)];
                        if (Equal(Widen(b1413),126)) {
                          Let b1414 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1409),9)),6) LoByte(Widen(b1414));
                          SetByte 001889 134;
                          Let b1415 = M[001963];
                          SetByte 001890 LoByte(Widen(b1415));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1416 = M[001887];
                          SetByte 001887 SetBit(b1416,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1417 = M[001888];
                          SetByte 001888 SetBit(b1417,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1418 = M[Offset(Offset(000751,Mul(Widen(b1407),9)),6)];
                      if (Equal(Widen(b1418),142)) {
                        Let b1419 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b1407),9)),6) LoByte(Widen(b1419));
                        SetByte 002033 169;
                        Let b1420 = M[002278];
                        SetByte 002034 LoByte(Widen(b1420));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1421 = M[001889];
                        if (IsZero(Widen(b1421))) {
                          SetByte 001889 134;
                          Let b1422 = M[001963];
                          SetByte 001890 LoByte(Widen(b1422));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1423 = M[001887];
                          SetByte 001887 SetBit(b1423,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1424 = M[001888];
                          SetByte 001888 SetBit(b1424,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1425 = M[Offset(Offset(000751,Mul(Widen(b1421),9)),6)];
                          if (Equal(Widen(b1425),126)) {
                            Let b1426 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1421),9)),6) LoByte(Widen(b1426));
                            SetByte 001889 134;
                            Let b1427 = M[001963];
                            SetByte 001890 LoByte(Widen(b1427));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1428 = M[001887];
                            SetByte 001887 SetBit(b1428,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1429 = M[001888];
                            SetByte 001888 SetBit(b1429,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b1430 = M[Offset(Offset(000751,Mul(Widen(b1405),9)),6)];
                    if (Equal(Widen(b1430),123)) {
                      Let b1431 = M[001863];
                      SetByte Offset(Offset(000751,Mul(Widen(b1405),9)),6) LoByte(Widen(b1431));
                      SetByte 001862 149;
                      Let b1432 = M[002098];
                      SetByte 001863 LoByte(Widen(b1432));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b1433 = M[002033];
                      if (IsZero(Widen(b1433))) {
                        SetByte 002033 169;
                        Let b1434 = M[002278];
                        SetByte 002034 LoByte(Widen(b1434));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1435 = M[001889];
                        if (IsZero(Widen(b1435))) {
                          SetByte 001889 134;
                          Let b1436 = M[001963];
                          SetByte 001890 LoByte(Widen(b1436));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1437 = M[001887];
                          SetByte 001887 SetBit(b1437,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1438 = M[001888];
                          SetByte 001888 SetBit(b1438,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1439 = M[Offset(Offset(000751,Mul(Widen(b1435),9)),6)];
                          if (Equal(Widen(b1439),126)) {
                            Let b1440 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1435),9)),6) LoByte(Widen(b1440));
                            SetByte 001889 134;
                            Let b1441 = M[001963];
                            SetByte 001890 LoByte(Widen(b1441));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1442 = M[001887];
                            SetByte 001887 SetBit(b1442,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1443 = M[001888];
                            SetByte 001888 SetBit(b1443,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b1444 = M[Offset(Offset(000751,Mul(Widen(b1433),9)),6)];
                        if (Equal(Widen(b1444),142)) {
                          Let b1445 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b1433),9)),6) LoByte(Widen(b1445));
                          SetByte 002033 169;
                          Let b1446 = M[002278];
                          SetByte 002034 LoByte(Widen(b1446));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1447 = M[001889];
                          if (IsZero(Widen(b1447))) {
                            SetByte 001889 134;
                            Let b1448 = M[001963];
                            SetByte 001890 LoByte(Widen(b1448));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1449 = M[001887];
                            SetByte 001887 SetBit(b1449,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1450 = M[001888];
                            SetByte 001888 SetBit(b1450,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1451 = M[Offset(Offset(000751,Mul(Widen(b1447),9)),6)];
                            if (Equal(Widen(b1451),126)) {
                              Let b1452 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1447),9)),6) LoByte(Widen(b1452));
                              SetByte 001889 134;
                              Let b1453 = M[001963];
                              SetByte 001890 LoByte(Widen(b1453));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1454 = M[001887];
                              SetByte 001887 SetBit(b1454,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1455 = M[001888];
                              SetByte 001888 SetBit(b1455,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b1456 = M[Offset(Offset(000751,Mul(Widen(b1347),9)),6)];
              if (Equal(Widen(b1456),139)) {
                Let b1457 = M[002007];
                SetByte Offset(Offset(000751,Mul(Widen(b1347),9)),6) LoByte(Widen(b1457));
                SetByte 002006 141;
                Let b1458 = M[002026];
                SetByte 002007 LoByte(Widen(b1458));
                SetByte 002026 139;
                TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
                Let b1459 = M[001853];
                if (IsZero(Widen(b1459))) {
                  SetByte 001853 141;
                  Let b1460 = M[002026];
                  SetByte 001854 LoByte(Widen(b1460));
                  SetByte 002026 122;
                  TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                  Let b1461 = M[001862];
                  if (IsZero(Widen(b1461))) {
                    SetByte 001862 149;
                    Let b1462 = M[002098];
                    SetByte 001863 LoByte(Widen(b1462));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b1463 = M[002033];
                    if (IsZero(Widen(b1463))) {
                      SetByte 002033 169;
                      Let b1464 = M[002278];
                      SetByte 002034 LoByte(Widen(b1464));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1465 = M[001889];
                      if (IsZero(Widen(b1465))) {
                        SetByte 001889 134;
                        Let b1466 = M[001963];
                        SetByte 001890 LoByte(Widen(b1466));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1467 = M[001887];
                        SetByte 001887 SetBit(b1467,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1468 = M[001888];
                        SetByte 001888 SetBit(b1468,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1469 = M[Offset(Offset(000751,Mul(Widen(b1465),9)),6)];
                        if (Equal(Widen(b1469),126)) {
                          Let b1470 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1465),9)),6) LoByte(Widen(b1470));
                          SetByte 001889 134;
                          Let b1471 = M[001963];
                          SetByte 001890 LoByte(Widen(b1471));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1472 = M[001887];
                          SetByte 001887 SetBit(b1472,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1473 = M[001888];
                          SetByte 001888 SetBit(b1473,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1474 = M[Offset(Offset(000751,Mul(Widen(b1463),9)),6)];
                      if (Equal(Widen(b1474),142)) {
                        Let b1475 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b1463),9)),6) LoByte(Widen(b1475));
                        SetByte 002033 169;
                        Let b1476 = M[002278];
                        SetByte 002034 LoByte(Widen(b1476));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1477 = M[001889];
                        if (IsZero(Widen(b1477))) {
                          SetByte 001889 134;
                          Let b1478 = M[001963];
                          SetByte 001890 LoByte(Widen(b1478));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1479 = M[001887];
                          SetByte 001887 SetBit(b1479,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1480 = M[001888];
                          SetByte 001888 SetBit(b1480,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1481 = M[Offset(Offset(000751,Mul(Widen(b1477),9)),6)];
                          if (Equal(Widen(b1481),126)) {
                            Let b1482 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1477),9)),6) LoByte(Widen(b1482));
                            SetByte 001889 134;
                            Let b1483 = M[001963];
                            SetByte 001890 LoByte(Widen(b1483));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1484 = M[001887];
                            SetByte 001887 SetBit(b1484,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1485 = M[001888];
                            SetByte 001888 SetBit(b1485,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b1486 = M[Offset(Offset(000751,Mul(Widen(b1461),9)),6)];
                    if (Equal(Widen(b1486),123)) {
                      Let b1487 = M[001863];
                      SetByte Offset(Offset(000751,Mul(Widen(b1461),9)),6) LoByte(Widen(b1487));
                      SetByte 001862 149;
                      Let b1488 = M[002098];
                      SetByte 001863 LoByte(Widen(b1488));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b1489 = M[002033];
                      if (IsZero(Widen(b1489))) {
                        SetByte 002033 169;
                        Let b1490 = M[002278];
                        SetByte 002034 LoByte(Widen(b1490));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1491 = M[001889];
                        if (IsZero(Widen(b1491))) {
                          SetByte 001889 134;
                          Let b1492 = M[001963];
                          SetByte 001890 LoByte(Widen(b1492));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1493 = M[001887];
                          SetByte 001887 SetBit(b1493,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1494 = M[001888];
                          SetByte 001888 SetBit(b1494,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1495 = M[Offset(Offset(000751,Mul(Widen(b1491),9)),6)];
                          if (Equal(Widen(b1495),126)) {
                            Let b1496 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1491),9)),6) LoByte(Widen(b1496));
                            SetByte 001889 134;
                            Let b1497 = M[001963];
                            SetByte 001890 LoByte(Widen(b1497));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1498 = M[001887];
                            SetByte 001887 SetBit(b1498,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1499 = M[001888];
                            SetByte 001888 SetBit(b1499,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b1500 = M[Offset(Offset(000751,Mul(Widen(b1489),9)),6)];
                        if (Equal(Widen(b1500),142)) {
                          Let b1501 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b1489),9)),6) LoByte(Widen(b1501));
                          SetByte 002033 169;
                          Let b1502 = M[002278];
                          SetByte 002034 LoByte(Widen(b1502));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1503 = M[001889];
                          if (IsZero(Widen(b1503))) {
                            SetByte 001889 134;
                            Let b1504 = M[001963];
                            SetByte 001890 LoByte(Widen(b1504));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1505 = M[001887];
                            SetByte 001887 SetBit(b1505,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1506 = M[001888];
                            SetByte 001888 SetBit(b1506,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1507 = M[Offset(Offset(000751,Mul(Widen(b1503),9)),6)];
                            if (Equal(Widen(b1507),126)) {
                              Let b1508 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1503),9)),6) LoByte(Widen(b1508));
                              SetByte 001889 134;
                              Let b1509 = M[001963];
                              SetByte 001890 LoByte(Widen(b1509));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1510 = M[001887];
                              SetByte 001887 SetBit(b1510,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1511 = M[001888];
                              SetByte 001888 SetBit(b1511,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b1512 = M[Offset(Offset(000751,Mul(Widen(b1459),9)),6)];
                  if (Equal(Widen(b1512),122)) {
                    Let b1513 = M[001854];
                    SetByte Offset(Offset(000751,Mul(Widen(b1459),9)),6) LoByte(Widen(b1513));
                    SetByte 001853 141;
                    Let b1514 = M[002026];
                    SetByte 001854 LoByte(Widen(b1514));
                    SetByte 002026 122;
                    TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                    Let b1515 = M[001862];
                    if (IsZero(Widen(b1515))) {
                      SetByte 001862 149;
                      Let b1516 = M[002098];
                      SetByte 001863 LoByte(Widen(b1516));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b1517 = M[002033];
                      if (IsZero(Widen(b1517))) {
                        SetByte 002033 169;
                        Let b1518 = M[002278];
                        SetByte 002034 LoByte(Widen(b1518));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1519 = M[001889];
                        if (IsZero(Widen(b1519))) {
                          SetByte 001889 134;
                          Let b1520 = M[001963];
                          SetByte 001890 LoByte(Widen(b1520));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1521 = M[001887];
                          SetByte 001887 SetBit(b1521,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1522 = M[001888];
                          SetByte 001888 SetBit(b1522,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1523 = M[Offset(Offset(000751,Mul(Widen(b1519),9)),6)];
                          if (Equal(Widen(b1523),126)) {
                            Let b1524 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1519),9)),6) LoByte(Widen(b1524));
                            SetByte 001889 134;
                            Let b1525 = M[001963];
                            SetByte 001890 LoByte(Widen(b1525));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1526 = M[001887];
                            SetByte 001887 SetBit(b1526,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1527 = M[001888];
                            SetByte 001888 SetBit(b1527,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b1528 = M[Offset(Offset(000751,Mul(Widen(b1517),9)),6)];
                        if (Equal(Widen(b1528),142)) {
                          Let b1529 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b1517),9)),6) LoByte(Widen(b1529));
                          SetByte 002033 169;
                          Let b1530 = M[002278];
                          SetByte 002034 LoByte(Widen(b1530));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1531 = M[001889];
                          if (IsZero(Widen(b1531))) {
                            SetByte 001889 134;
                            Let b1532 = M[001963];
                            SetByte 001890 LoByte(Widen(b1532));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1533 = M[001887];
                            SetByte 001887 SetBit(b1533,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1534 = M[001888];
                            SetByte 001888 SetBit(b1534,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1535 = M[Offset(Offset(000751,Mul(Widen(b1531),9)),6)];
                            if (Equal(Widen(b1535),126)) {
                              Let b1536 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1531),9)),6) LoByte(Widen(b1536));
                              SetByte 001889 134;
                              Let b1537 = M[001963];
                              SetByte 001890 LoByte(Widen(b1537));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1538 = M[001887];
                              SetByte 001887 SetBit(b1538,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1539 = M[001888];
                              SetByte 001888 SetBit(b1539,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1540 = M[Offset(Offset(000751,Mul(Widen(b1515),9)),6)];
                      if (Equal(Widen(b1540),123)) {
                        Let b1541 = M[001863];
                        SetByte Offset(Offset(000751,Mul(Widen(b1515),9)),6) LoByte(Widen(b1541));
                        SetByte 001862 149;
                        Let b1542 = M[002098];
                        SetByte 001863 LoByte(Widen(b1542));
                        SetByte 002098 123;
                        TraceOperation 068948 (Store (Con 136) (Con 142));
                        SetByte 008148 0;
                        SetByte 008149 142;
                        TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                        Let b1543 = M[002033];
                        if (IsZero(Widen(b1543))) {
                          SetByte 002033 169;
                          Let b1544 = M[002278];
                          SetByte 002034 LoByte(Widen(b1544));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1545 = M[001889];
                          if (IsZero(Widen(b1545))) {
                            SetByte 001889 134;
                            Let b1546 = M[001963];
                            SetByte 001890 LoByte(Widen(b1546));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1547 = M[001887];
                            SetByte 001887 SetBit(b1547,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1548 = M[001888];
                            SetByte 001888 SetBit(b1548,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1549 = M[Offset(Offset(000751,Mul(Widen(b1545),9)),6)];
                            if (Equal(Widen(b1549),126)) {
                              Let b1550 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1545),9)),6) LoByte(Widen(b1550));
                              SetByte 001889 134;
                              Let b1551 = M[001963];
                              SetByte 001890 LoByte(Widen(b1551));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1552 = M[001887];
                              SetByte 001887 SetBit(b1552,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1553 = M[001888];
                              SetByte 001888 SetBit(b1553,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Let b1554 = M[Offset(Offset(000751,Mul(Widen(b1543),9)),6)];
                          if (Equal(Widen(b1554),142)) {
                            Let b1555 = M[002034];
                            SetByte Offset(Offset(000751,Mul(Widen(b1543),9)),6) LoByte(Widen(b1555));
                            SetByte 002033 169;
                            Let b1556 = M[002278];
                            SetByte 002034 LoByte(Widen(b1556));
                            SetByte 002278 142;
                            TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                            Let b1557 = M[001889];
                            if (IsZero(Widen(b1557))) {
                              SetByte 001889 134;
                              Let b1558 = M[001963];
                              SetByte 001890 LoByte(Widen(b1558));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1559 = M[001887];
                              SetByte 001887 SetBit(b1559,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1560 = M[001888];
                              SetByte 001888 SetBit(b1560,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Let b1561 = M[Offset(Offset(000751,Mul(Widen(b1557),9)),6)];
                              if (Equal(Widen(b1561),126)) {
                                Let b1562 = M[001890];
                                SetByte Offset(Offset(000751,Mul(Widen(b1557),9)),6) LoByte(Widen(b1562));
                                SetByte 001889 134;
                                Let b1563 = M[001963];
                                SetByte 001890 LoByte(Widen(b1563));
                                SetByte 001963 126;
                                TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                                Let b1564 = M[001887];
                                SetByte 001887 SetBit(b1564,2);
                                TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                                Let b1565 = M[001888];
                                SetByte 001888 SetBit(b1565,4);
                                TraceOperation 068963 (Store (Con 143) (Con 0));
                                SetByte 008162 0;
                                SetByte 008163 0;
                                TraceOperation 068966 (Store (Con 91) (Con 1));
                                SetByte 008058 0;
                                SetByte 008059 1;
                                TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                                PushFrame 068969;
                                SetLocal 1 -28826;
                                SetLocal 2 38;
                                JumpCall: 022320, #actuals: 2
                              } else {
                                Error: unlink/loop
                              }
                            }
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b1566 = M[Offset(Offset(000751,Mul(Widen(b1345),9)),6)];
            if (Equal(Widen(b1566),1)) {
              Let b1567 = M[000765];
              SetByte Offset(Offset(000751,Mul(Widen(b1345),9)),6) LoByte(Widen(b1567));
              SetByte 000764 141;
              Let b1568 = M[002026];
              SetByte 000765 LoByte(Widen(b1568));
              SetByte 002026 1;
              TraceOperation 068939 (Insert_obj (Con 139) (Con 141));
              Let b1569 = M[002006];
              if (IsZero(Widen(b1569))) {
                SetByte 002006 141;
                Let b1570 = M[002026];
                SetByte 002007 LoByte(Widen(b1570));
                SetByte 002026 139;
                TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
                Let b1571 = M[001853];
                if (IsZero(Widen(b1571))) {
                  SetByte 001853 141;
                  Let b1572 = M[002026];
                  SetByte 001854 LoByte(Widen(b1572));
                  SetByte 002026 122;
                  TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                  Let b1573 = M[001862];
                  if (IsZero(Widen(b1573))) {
                    SetByte 001862 149;
                    Let b1574 = M[002098];
                    SetByte 001863 LoByte(Widen(b1574));
                    SetByte 002098 123;
                    TraceOperation 068948 (Store (Con 136) (Con 142));
                    SetByte 008148 0;
                    SetByte 008149 142;
                    TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                    Let b1575 = M[002033];
                    if (IsZero(Widen(b1575))) {
                      SetByte 002033 169;
                      Let b1576 = M[002278];
                      SetByte 002034 LoByte(Widen(b1576));
                      SetByte 002278 142;
                      TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                      Let b1577 = M[001889];
                      if (IsZero(Widen(b1577))) {
                        SetByte 001889 134;
                        Let b1578 = M[001963];
                        SetByte 001890 LoByte(Widen(b1578));
                        SetByte 001963 126;
                        TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                        Let b1579 = M[001887];
                        SetByte 001887 SetBit(b1579,2);
                        TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                        Let b1580 = M[001888];
                        SetByte 001888 SetBit(b1580,4);
                        TraceOperation 068963 (Store (Con 143) (Con 0));
                        SetByte 008162 0;
                        SetByte 008163 0;
                        TraceOperation 068966 (Store (Con 91) (Con 1));
                        SetByte 008058 0;
                        SetByte 008059 1;
                        TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                        PushFrame 068969;
                        SetLocal 1 -28826;
                        SetLocal 2 38;
                        JumpCall: 022320, #actuals: 2
                      } else {
                        Let b1581 = M[Offset(Offset(000751,Mul(Widen(b1577),9)),6)];
                        if (Equal(Widen(b1581),126)) {
                          Let b1582 = M[001890];
                          SetByte Offset(Offset(000751,Mul(Widen(b1577),9)),6) LoByte(Widen(b1582));
                          SetByte 001889 134;
                          Let b1583 = M[001963];
                          SetByte 001890 LoByte(Widen(b1583));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1584 = M[001887];
                          SetByte 001887 SetBit(b1584,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1585 = M[001888];
                          SetByte 001888 SetBit(b1585,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1586 = M[Offset(Offset(000751,Mul(Widen(b1575),9)),6)];
                      if (Equal(Widen(b1586),142)) {
                        Let b1587 = M[002034];
                        SetByte Offset(Offset(000751,Mul(Widen(b1575),9)),6) LoByte(Widen(b1587));
                        SetByte 002033 169;
                        Let b1588 = M[002278];
                        SetByte 002034 LoByte(Widen(b1588));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1589 = M[001889];
                        if (IsZero(Widen(b1589))) {
                          SetByte 001889 134;
                          Let b1590 = M[001963];
                          SetByte 001890 LoByte(Widen(b1590));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1591 = M[001887];
                          SetByte 001887 SetBit(b1591,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1592 = M[001888];
                          SetByte 001888 SetBit(b1592,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1593 = M[Offset(Offset(000751,Mul(Widen(b1589),9)),6)];
                          if (Equal(Widen(b1593),126)) {
                            Let b1594 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1589),9)),6) LoByte(Widen(b1594));
                            SetByte 001889 134;
                            Let b1595 = M[001963];
                            SetByte 001890 LoByte(Widen(b1595));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1596 = M[001887];
                            SetByte 001887 SetBit(b1596,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1597 = M[001888];
                            SetByte 001888 SetBit(b1597,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b1598 = M[Offset(Offset(000751,Mul(Widen(b1573),9)),6)];
                    if (Equal(Widen(b1598),123)) {
                      Let b1599 = M[001863];
                      SetByte Offset(Offset(000751,Mul(Widen(b1573),9)),6) LoByte(Widen(b1599));
                      SetByte 001862 149;
                      Let b1600 = M[002098];
                      SetByte 001863 LoByte(Widen(b1600));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b1601 = M[002033];
                      if (IsZero(Widen(b1601))) {
                        SetByte 002033 169;
                        Let b1602 = M[002278];
                        SetByte 002034 LoByte(Widen(b1602));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1603 = M[001889];
                        if (IsZero(Widen(b1603))) {
                          SetByte 001889 134;
                          Let b1604 = M[001963];
                          SetByte 001890 LoByte(Widen(b1604));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1605 = M[001887];
                          SetByte 001887 SetBit(b1605,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1606 = M[001888];
                          SetByte 001888 SetBit(b1606,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1607 = M[Offset(Offset(000751,Mul(Widen(b1603),9)),6)];
                          if (Equal(Widen(b1607),126)) {
                            Let b1608 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1603),9)),6) LoByte(Widen(b1608));
                            SetByte 001889 134;
                            Let b1609 = M[001963];
                            SetByte 001890 LoByte(Widen(b1609));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1610 = M[001887];
                            SetByte 001887 SetBit(b1610,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1611 = M[001888];
                            SetByte 001888 SetBit(b1611,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b1612 = M[Offset(Offset(000751,Mul(Widen(b1601),9)),6)];
                        if (Equal(Widen(b1612),142)) {
                          Let b1613 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b1601),9)),6) LoByte(Widen(b1613));
                          SetByte 002033 169;
                          Let b1614 = M[002278];
                          SetByte 002034 LoByte(Widen(b1614));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1615 = M[001889];
                          if (IsZero(Widen(b1615))) {
                            SetByte 001889 134;
                            Let b1616 = M[001963];
                            SetByte 001890 LoByte(Widen(b1616));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1617 = M[001887];
                            SetByte 001887 SetBit(b1617,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1618 = M[001888];
                            SetByte 001888 SetBit(b1618,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1619 = M[Offset(Offset(000751,Mul(Widen(b1615),9)),6)];
                            if (Equal(Widen(b1619),126)) {
                              Let b1620 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1615),9)),6) LoByte(Widen(b1620));
                              SetByte 001889 134;
                              Let b1621 = M[001963];
                              SetByte 001890 LoByte(Widen(b1621));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1622 = M[001887];
                              SetByte 001887 SetBit(b1622,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1623 = M[001888];
                              SetByte 001888 SetBit(b1623,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b1624 = M[Offset(Offset(000751,Mul(Widen(b1571),9)),6)];
                  if (Equal(Widen(b1624),122)) {
                    Let b1625 = M[001854];
                    SetByte Offset(Offset(000751,Mul(Widen(b1571),9)),6) LoByte(Widen(b1625));
                    SetByte 001853 141;
                    Let b1626 = M[002026];
                    SetByte 001854 LoByte(Widen(b1626));
                    SetByte 002026 122;
                    TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                    Let b1627 = M[001862];
                    if (IsZero(Widen(b1627))) {
                      SetByte 001862 149;
                      Let b1628 = M[002098];
                      SetByte 001863 LoByte(Widen(b1628));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b1629 = M[002033];
                      if (IsZero(Widen(b1629))) {
                        SetByte 002033 169;
                        Let b1630 = M[002278];
                        SetByte 002034 LoByte(Widen(b1630));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1631 = M[001889];
                        if (IsZero(Widen(b1631))) {
                          SetByte 001889 134;
                          Let b1632 = M[001963];
                          SetByte 001890 LoByte(Widen(b1632));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1633 = M[001887];
                          SetByte 001887 SetBit(b1633,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1634 = M[001888];
                          SetByte 001888 SetBit(b1634,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1635 = M[Offset(Offset(000751,Mul(Widen(b1631),9)),6)];
                          if (Equal(Widen(b1635),126)) {
                            Let b1636 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1631),9)),6) LoByte(Widen(b1636));
                            SetByte 001889 134;
                            Let b1637 = M[001963];
                            SetByte 001890 LoByte(Widen(b1637));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1638 = M[001887];
                            SetByte 001887 SetBit(b1638,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1639 = M[001888];
                            SetByte 001888 SetBit(b1639,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b1640 = M[Offset(Offset(000751,Mul(Widen(b1629),9)),6)];
                        if (Equal(Widen(b1640),142)) {
                          Let b1641 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b1629),9)),6) LoByte(Widen(b1641));
                          SetByte 002033 169;
                          Let b1642 = M[002278];
                          SetByte 002034 LoByte(Widen(b1642));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1643 = M[001889];
                          if (IsZero(Widen(b1643))) {
                            SetByte 001889 134;
                            Let b1644 = M[001963];
                            SetByte 001890 LoByte(Widen(b1644));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1645 = M[001887];
                            SetByte 001887 SetBit(b1645,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1646 = M[001888];
                            SetByte 001888 SetBit(b1646,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1647 = M[Offset(Offset(000751,Mul(Widen(b1643),9)),6)];
                            if (Equal(Widen(b1647),126)) {
                              Let b1648 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1643),9)),6) LoByte(Widen(b1648));
                              SetByte 001889 134;
                              Let b1649 = M[001963];
                              SetByte 001890 LoByte(Widen(b1649));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1650 = M[001887];
                              SetByte 001887 SetBit(b1650,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1651 = M[001888];
                              SetByte 001888 SetBit(b1651,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1652 = M[Offset(Offset(000751,Mul(Widen(b1627),9)),6)];
                      if (Equal(Widen(b1652),123)) {
                        Let b1653 = M[001863];
                        SetByte Offset(Offset(000751,Mul(Widen(b1627),9)),6) LoByte(Widen(b1653));
                        SetByte 001862 149;
                        Let b1654 = M[002098];
                        SetByte 001863 LoByte(Widen(b1654));
                        SetByte 002098 123;
                        TraceOperation 068948 (Store (Con 136) (Con 142));
                        SetByte 008148 0;
                        SetByte 008149 142;
                        TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                        Let b1655 = M[002033];
                        if (IsZero(Widen(b1655))) {
                          SetByte 002033 169;
                          Let b1656 = M[002278];
                          SetByte 002034 LoByte(Widen(b1656));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1657 = M[001889];
                          if (IsZero(Widen(b1657))) {
                            SetByte 001889 134;
                            Let b1658 = M[001963];
                            SetByte 001890 LoByte(Widen(b1658));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1659 = M[001887];
                            SetByte 001887 SetBit(b1659,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1660 = M[001888];
                            SetByte 001888 SetBit(b1660,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1661 = M[Offset(Offset(000751,Mul(Widen(b1657),9)),6)];
                            if (Equal(Widen(b1661),126)) {
                              Let b1662 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1657),9)),6) LoByte(Widen(b1662));
                              SetByte 001889 134;
                              Let b1663 = M[001963];
                              SetByte 001890 LoByte(Widen(b1663));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1664 = M[001887];
                              SetByte 001887 SetBit(b1664,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1665 = M[001888];
                              SetByte 001888 SetBit(b1665,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Let b1666 = M[Offset(Offset(000751,Mul(Widen(b1655),9)),6)];
                          if (Equal(Widen(b1666),142)) {
                            Let b1667 = M[002034];
                            SetByte Offset(Offset(000751,Mul(Widen(b1655),9)),6) LoByte(Widen(b1667));
                            SetByte 002033 169;
                            Let b1668 = M[002278];
                            SetByte 002034 LoByte(Widen(b1668));
                            SetByte 002278 142;
                            TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                            Let b1669 = M[001889];
                            if (IsZero(Widen(b1669))) {
                              SetByte 001889 134;
                              Let b1670 = M[001963];
                              SetByte 001890 LoByte(Widen(b1670));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1671 = M[001887];
                              SetByte 001887 SetBit(b1671,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1672 = M[001888];
                              SetByte 001888 SetBit(b1672,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Let b1673 = M[Offset(Offset(000751,Mul(Widen(b1669),9)),6)];
                              if (Equal(Widen(b1673),126)) {
                                Let b1674 = M[001890];
                                SetByte Offset(Offset(000751,Mul(Widen(b1669),9)),6) LoByte(Widen(b1674));
                                SetByte 001889 134;
                                Let b1675 = M[001963];
                                SetByte 001890 LoByte(Widen(b1675));
                                SetByte 001963 126;
                                TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                                Let b1676 = M[001887];
                                SetByte 001887 SetBit(b1676,2);
                                TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                                Let b1677 = M[001888];
                                SetByte 001888 SetBit(b1677,4);
                                TraceOperation 068963 (Store (Con 143) (Con 0));
                                SetByte 008162 0;
                                SetByte 008163 0;
                                TraceOperation 068966 (Store (Con 91) (Con 1));
                                SetByte 008058 0;
                                SetByte 008059 1;
                                TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                                PushFrame 068969;
                                SetLocal 1 -28826;
                                SetLocal 2 38;
                                JumpCall: 022320, #actuals: 2
                              } else {
                                Error: unlink/loop
                              }
                            }
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b1678 = M[Offset(Offset(000751,Mul(Widen(b1569),9)),6)];
                if (Equal(Widen(b1678),139)) {
                  Let b1679 = M[002007];
                  SetByte Offset(Offset(000751,Mul(Widen(b1569),9)),6) LoByte(Widen(b1679));
                  SetByte 002006 141;
                  Let b1680 = M[002026];
                  SetByte 002007 LoByte(Widen(b1680));
                  SetByte 002026 139;
                  TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
                  Let b1681 = M[001853];
                  if (IsZero(Widen(b1681))) {
                    SetByte 001853 141;
                    Let b1682 = M[002026];
                    SetByte 001854 LoByte(Widen(b1682));
                    SetByte 002026 122;
                    TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                    Let b1683 = M[001862];
                    if (IsZero(Widen(b1683))) {
                      SetByte 001862 149;
                      Let b1684 = M[002098];
                      SetByte 001863 LoByte(Widen(b1684));
                      SetByte 002098 123;
                      TraceOperation 068948 (Store (Con 136) (Con 142));
                      SetByte 008148 0;
                      SetByte 008149 142;
                      TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                      Let b1685 = M[002033];
                      if (IsZero(Widen(b1685))) {
                        SetByte 002033 169;
                        Let b1686 = M[002278];
                        SetByte 002034 LoByte(Widen(b1686));
                        SetByte 002278 142;
                        TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                        Let b1687 = M[001889];
                        if (IsZero(Widen(b1687))) {
                          SetByte 001889 134;
                          Let b1688 = M[001963];
                          SetByte 001890 LoByte(Widen(b1688));
                          SetByte 001963 126;
                          TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                          Let b1689 = M[001887];
                          SetByte 001887 SetBit(b1689,2);
                          TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                          Let b1690 = M[001888];
                          SetByte 001888 SetBit(b1690,4);
                          TraceOperation 068963 (Store (Con 143) (Con 0));
                          SetByte 008162 0;
                          SetByte 008163 0;
                          TraceOperation 068966 (Store (Con 91) (Con 1));
                          SetByte 008058 0;
                          SetByte 008059 1;
                          TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                          PushFrame 068969;
                          SetLocal 1 -28826;
                          SetLocal 2 38;
                          JumpCall: 022320, #actuals: 2
                        } else {
                          Let b1691 = M[Offset(Offset(000751,Mul(Widen(b1687),9)),6)];
                          if (Equal(Widen(b1691),126)) {
                            Let b1692 = M[001890];
                            SetByte Offset(Offset(000751,Mul(Widen(b1687),9)),6) LoByte(Widen(b1692));
                            SetByte 001889 134;
                            Let b1693 = M[001963];
                            SetByte 001890 LoByte(Widen(b1693));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1694 = M[001887];
                            SetByte 001887 SetBit(b1694,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1695 = M[001888];
                            SetByte 001888 SetBit(b1695,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b1696 = M[Offset(Offset(000751,Mul(Widen(b1685),9)),6)];
                        if (Equal(Widen(b1696),142)) {
                          Let b1697 = M[002034];
                          SetByte Offset(Offset(000751,Mul(Widen(b1685),9)),6) LoByte(Widen(b1697));
                          SetByte 002033 169;
                          Let b1698 = M[002278];
                          SetByte 002034 LoByte(Widen(b1698));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1699 = M[001889];
                          if (IsZero(Widen(b1699))) {
                            SetByte 001889 134;
                            Let b1700 = M[001963];
                            SetByte 001890 LoByte(Widen(b1700));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1701 = M[001887];
                            SetByte 001887 SetBit(b1701,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1702 = M[001888];
                            SetByte 001888 SetBit(b1702,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1703 = M[Offset(Offset(000751,Mul(Widen(b1699),9)),6)];
                            if (Equal(Widen(b1703),126)) {
                              Let b1704 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1699),9)),6) LoByte(Widen(b1704));
                              SetByte 001889 134;
                              Let b1705 = M[001963];
                              SetByte 001890 LoByte(Widen(b1705));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1706 = M[001887];
                              SetByte 001887 SetBit(b1706,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1707 = M[001888];
                              SetByte 001888 SetBit(b1707,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b1708 = M[Offset(Offset(000751,Mul(Widen(b1683),9)),6)];
                      if (Equal(Widen(b1708),123)) {
                        Let b1709 = M[001863];
                        SetByte Offset(Offset(000751,Mul(Widen(b1683),9)),6) LoByte(Widen(b1709));
                        SetByte 001862 149;
                        Let b1710 = M[002098];
                        SetByte 001863 LoByte(Widen(b1710));
                        SetByte 002098 123;
                        TraceOperation 068948 (Store (Con 136) (Con 142));
                        SetByte 008148 0;
                        SetByte 008149 142;
                        TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                        Let b1711 = M[002033];
                        if (IsZero(Widen(b1711))) {
                          SetByte 002033 169;
                          Let b1712 = M[002278];
                          SetByte 002034 LoByte(Widen(b1712));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1713 = M[001889];
                          if (IsZero(Widen(b1713))) {
                            SetByte 001889 134;
                            Let b1714 = M[001963];
                            SetByte 001890 LoByte(Widen(b1714));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1715 = M[001887];
                            SetByte 001887 SetBit(b1715,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1716 = M[001888];
                            SetByte 001888 SetBit(b1716,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1717 = M[Offset(Offset(000751,Mul(Widen(b1713),9)),6)];
                            if (Equal(Widen(b1717),126)) {
                              Let b1718 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1713),9)),6) LoByte(Widen(b1718));
                              SetByte 001889 134;
                              Let b1719 = M[001963];
                              SetByte 001890 LoByte(Widen(b1719));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1720 = M[001887];
                              SetByte 001887 SetBit(b1720,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1721 = M[001888];
                              SetByte 001888 SetBit(b1721,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Let b1722 = M[Offset(Offset(000751,Mul(Widen(b1711),9)),6)];
                          if (Equal(Widen(b1722),142)) {
                            Let b1723 = M[002034];
                            SetByte Offset(Offset(000751,Mul(Widen(b1711),9)),6) LoByte(Widen(b1723));
                            SetByte 002033 169;
                            Let b1724 = M[002278];
                            SetByte 002034 LoByte(Widen(b1724));
                            SetByte 002278 142;
                            TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                            Let b1725 = M[001889];
                            if (IsZero(Widen(b1725))) {
                              SetByte 001889 134;
                              Let b1726 = M[001963];
                              SetByte 001890 LoByte(Widen(b1726));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1727 = M[001887];
                              SetByte 001887 SetBit(b1727,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1728 = M[001888];
                              SetByte 001888 SetBit(b1728,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Let b1729 = M[Offset(Offset(000751,Mul(Widen(b1725),9)),6)];
                              if (Equal(Widen(b1729),126)) {
                                Let b1730 = M[001890];
                                SetByte Offset(Offset(000751,Mul(Widen(b1725),9)),6) LoByte(Widen(b1730));
                                SetByte 001889 134;
                                Let b1731 = M[001963];
                                SetByte 001890 LoByte(Widen(b1731));
                                SetByte 001963 126;
                                TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                                Let b1732 = M[001887];
                                SetByte 001887 SetBit(b1732,2);
                                TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                                Let b1733 = M[001888];
                                SetByte 001888 SetBit(b1733,4);
                                TraceOperation 068963 (Store (Con 143) (Con 0));
                                SetByte 008162 0;
                                SetByte 008163 0;
                                TraceOperation 068966 (Store (Con 91) (Con 1));
                                SetByte 008058 0;
                                SetByte 008059 1;
                                TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                                PushFrame 068969;
                                SetLocal 1 -28826;
                                SetLocal 2 38;
                                JumpCall: 022320, #actuals: 2
                              } else {
                                Error: unlink/loop
                              }
                            }
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b1734 = M[Offset(Offset(000751,Mul(Widen(b1681),9)),6)];
                    if (Equal(Widen(b1734),122)) {
                      Let b1735 = M[001854];
                      SetByte Offset(Offset(000751,Mul(Widen(b1681),9)),6) LoByte(Widen(b1735));
                      SetByte 001853 141;
                      Let b1736 = M[002026];
                      SetByte 001854 LoByte(Widen(b1736));
                      SetByte 002026 122;
                      TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
                      Let b1737 = M[001862];
                      if (IsZero(Widen(b1737))) {
                        SetByte 001862 149;
                        Let b1738 = M[002098];
                        SetByte 001863 LoByte(Widen(b1738));
                        SetByte 002098 123;
                        TraceOperation 068948 (Store (Con 136) (Con 142));
                        SetByte 008148 0;
                        SetByte 008149 142;
                        TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                        Let b1739 = M[002033];
                        if (IsZero(Widen(b1739))) {
                          SetByte 002033 169;
                          Let b1740 = M[002278];
                          SetByte 002034 LoByte(Widen(b1740));
                          SetByte 002278 142;
                          TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                          Let b1741 = M[001889];
                          if (IsZero(Widen(b1741))) {
                            SetByte 001889 134;
                            Let b1742 = M[001963];
                            SetByte 001890 LoByte(Widen(b1742));
                            SetByte 001963 126;
                            TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                            Let b1743 = M[001887];
                            SetByte 001887 SetBit(b1743,2);
                            TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                            Let b1744 = M[001888];
                            SetByte 001888 SetBit(b1744,4);
                            TraceOperation 068963 (Store (Con 143) (Con 0));
                            SetByte 008162 0;
                            SetByte 008163 0;
                            TraceOperation 068966 (Store (Con 91) (Con 1));
                            SetByte 008058 0;
                            SetByte 008059 1;
                            TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                            PushFrame 068969;
                            SetLocal 1 -28826;
                            SetLocal 2 38;
                            JumpCall: 022320, #actuals: 2
                          } else {
                            Let b1745 = M[Offset(Offset(000751,Mul(Widen(b1741),9)),6)];
                            if (Equal(Widen(b1745),126)) {
                              Let b1746 = M[001890];
                              SetByte Offset(Offset(000751,Mul(Widen(b1741),9)),6) LoByte(Widen(b1746));
                              SetByte 001889 134;
                              Let b1747 = M[001963];
                              SetByte 001890 LoByte(Widen(b1747));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1748 = M[001887];
                              SetByte 001887 SetBit(b1748,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1749 = M[001888];
                              SetByte 001888 SetBit(b1749,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Let b1750 = M[Offset(Offset(000751,Mul(Widen(b1739),9)),6)];
                          if (Equal(Widen(b1750),142)) {
                            Let b1751 = M[002034];
                            SetByte Offset(Offset(000751,Mul(Widen(b1739),9)),6) LoByte(Widen(b1751));
                            SetByte 002033 169;
                            Let b1752 = M[002278];
                            SetByte 002034 LoByte(Widen(b1752));
                            SetByte 002278 142;
                            TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                            Let b1753 = M[001889];
                            if (IsZero(Widen(b1753))) {
                              SetByte 001889 134;
                              Let b1754 = M[001963];
                              SetByte 001890 LoByte(Widen(b1754));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1755 = M[001887];
                              SetByte 001887 SetBit(b1755,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1756 = M[001888];
                              SetByte 001888 SetBit(b1756,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Let b1757 = M[Offset(Offset(000751,Mul(Widen(b1753),9)),6)];
                              if (Equal(Widen(b1757),126)) {
                                Let b1758 = M[001890];
                                SetByte Offset(Offset(000751,Mul(Widen(b1753),9)),6) LoByte(Widen(b1758));
                                SetByte 001889 134;
                                Let b1759 = M[001963];
                                SetByte 001890 LoByte(Widen(b1759));
                                SetByte 001963 126;
                                TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                                Let b1760 = M[001887];
                                SetByte 001887 SetBit(b1760,2);
                                TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                                Let b1761 = M[001888];
                                SetByte 001888 SetBit(b1761,4);
                                TraceOperation 068963 (Store (Con 143) (Con 0));
                                SetByte 008162 0;
                                SetByte 008163 0;
                                TraceOperation 068966 (Store (Con 91) (Con 1));
                                SetByte 008058 0;
                                SetByte 008059 1;
                                TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                                PushFrame 068969;
                                SetLocal 1 -28826;
                                SetLocal 2 38;
                                JumpCall: 022320, #actuals: 2
                              } else {
                                Error: unlink/loop
                              }
                            }
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b1762 = M[Offset(Offset(000751,Mul(Widen(b1737),9)),6)];
                        if (Equal(Widen(b1762),123)) {
                          Let b1763 = M[001863];
                          SetByte Offset(Offset(000751,Mul(Widen(b1737),9)),6) LoByte(Widen(b1763));
                          SetByte 001862 149;
                          Let b1764 = M[002098];
                          SetByte 001863 LoByte(Widen(b1764));
                          SetByte 002098 123;
                          TraceOperation 068948 (Store (Con 136) (Con 142));
                          SetByte 008148 0;
                          SetByte 008149 142;
                          TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
                          Let b1765 = M[002033];
                          if (IsZero(Widen(b1765))) {
                            SetByte 002033 169;
                            Let b1766 = M[002278];
                            SetByte 002034 LoByte(Widen(b1766));
                            SetByte 002278 142;
                            TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                            Let b1767 = M[001889];
                            if (IsZero(Widen(b1767))) {
                              SetByte 001889 134;
                              Let b1768 = M[001963];
                              SetByte 001890 LoByte(Widen(b1768));
                              SetByte 001963 126;
                              TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                              Let b1769 = M[001887];
                              SetByte 001887 SetBit(b1769,2);
                              TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                              Let b1770 = M[001888];
                              SetByte 001888 SetBit(b1770,4);
                              TraceOperation 068963 (Store (Con 143) (Con 0));
                              SetByte 008162 0;
                              SetByte 008163 0;
                              TraceOperation 068966 (Store (Con 91) (Con 1));
                              SetByte 008058 0;
                              SetByte 008059 1;
                              TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                              PushFrame 068969;
                              SetLocal 1 -28826;
                              SetLocal 2 38;
                              JumpCall: 022320, #actuals: 2
                            } else {
                              Let b1771 = M[Offset(Offset(000751,Mul(Widen(b1767),9)),6)];
                              if (Equal(Widen(b1771),126)) {
                                Let b1772 = M[001890];
                                SetByte Offset(Offset(000751,Mul(Widen(b1767),9)),6) LoByte(Widen(b1772));
                                SetByte 001889 134;
                                Let b1773 = M[001963];
                                SetByte 001890 LoByte(Widen(b1773));
                                SetByte 001963 126;
                                TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                                Let b1774 = M[001887];
                                SetByte 001887 SetBit(b1774,2);
                                TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                                Let b1775 = M[001888];
                                SetByte 001888 SetBit(b1775,4);
                                TraceOperation 068963 (Store (Con 143) (Con 0));
                                SetByte 008162 0;
                                SetByte 008163 0;
                                TraceOperation 068966 (Store (Con 91) (Con 1));
                                SetByte 008058 0;
                                SetByte 008059 1;
                                TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                                PushFrame 068969;
                                SetLocal 1 -28826;
                                SetLocal 2 38;
                                JumpCall: 022320, #actuals: 2
                              } else {
                                Error: unlink/loop
                              }
                            }
                          } else {
                            Let b1776 = M[Offset(Offset(000751,Mul(Widen(b1765),9)),6)];
                            if (Equal(Widen(b1776),142)) {
                              Let b1777 = M[002034];
                              SetByte Offset(Offset(000751,Mul(Widen(b1765),9)),6) LoByte(Widen(b1777));
                              SetByte 002033 169;
                              Let b1778 = M[002278];
                              SetByte 002034 LoByte(Widen(b1778));
                              SetByte 002278 142;
                              TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
                              Let b1779 = M[001889];
                              if (IsZero(Widen(b1779))) {
                                SetByte 001889 134;
                                Let b1780 = M[001963];
                                SetByte 001890 LoByte(Widen(b1780));
                                SetByte 001963 126;
                                TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                                Let b1781 = M[001887];
                                SetByte 001887 SetBit(b1781,2);
                                TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                                Let b1782 = M[001888];
                                SetByte 001888 SetBit(b1782,4);
                                TraceOperation 068963 (Store (Con 143) (Con 0));
                                SetByte 008162 0;
                                SetByte 008163 0;
                                TraceOperation 068966 (Store (Con 91) (Con 1));
                                SetByte 008058 0;
                                SetByte 008059 1;
                                TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                                PushFrame 068969;
                                SetLocal 1 -28826;
                                SetLocal 2 38;
                                JumpCall: 022320, #actuals: 2
                              } else {
                                Let b1783 = M[Offset(Offset(000751,Mul(Widen(b1779),9)),6)];
                                if (Equal(Widen(b1783),126)) {
                                  Let b1784 = M[001890];
                                  SetByte Offset(Offset(000751,Mul(Widen(b1779),9)),6) LoByte(Widen(b1784));
                                  SetByte 001889 134;
                                  Let b1785 = M[001963];
                                  SetByte 001890 LoByte(Widen(b1785));
                                  SetByte 001963 126;
                                  TraceOperation 068957 (Set_attr (Con 126) (Con 21));
                                  Let b1786 = M[001887];
                                  SetByte 001887 SetBit(b1786,2);
                                  TraceOperation 068960 (Set_attr (Con 126) (Con 27));
                                  Let b1787 = M[001888];
                                  SetByte 001888 SetBit(b1787,4);
                                  TraceOperation 068963 (Store (Con 143) (Con 0));
                                  SetByte 008162 0;
                                  SetByte 008163 0;
                                  TraceOperation 068966 (Store (Con 91) (Con 1));
                                  SetByte 008058 0;
                                  SetByte 008059 1;
                                  TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
                                  PushFrame 068969;
                                  SetLocal 1 -28826;
                                  SetLocal 2 38;
                                  JumpCall: 022320, #actuals: 2
                                } else {
                                  Error: unlink/loop
                                }
                              }
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 068969:
  PushStack call_result;
  TraceOperation 068977 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068982 (Print "You are hurrying up a country lane. The sky is light and clear, but you keep glancing at it with apprehension because you know that it will shortly be torn apart by Vogon ships, and that the hills and trees around you will just burn up and blow away, and you hope there's time for a quick drink beforehand.\n\nYou want to hitch a ride aboard the Vogon fleet, but are anxious because it's so long since you were through a");
  GamePrint "You are hurrying up a country lane. The sky is light and clear, but you keep glancing at it with apprehension because you know that it will shortly be torn apart by Vogon ships, and that the hills and trees around you will just burn up and blow away, and you hope there's time for a quick drink beforehand.\n\nYou want to hitch a ride aboard the Vogon fleet, but are anxious because it's so long since you were through a";
  TraceOperation 069203 (Print_paddr (Var (Global 42)));
  Let b2 = M[007992];
  Let b3 = M[007993];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 069205 (Print ".");
  GamePrint ".";
  TraceOperation 069208 New_line;
  GamePrint "\n";
  TraceOperation 069209 New_line;
  GamePrint "\n";
  TraceOperation 069210 Rtrue;
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: 1
LocOp 069211:
  TraceOperation 069211 (Je [Var (Local 1),Con 6] (Branch F (Dloc 069288)));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 069216 (Test_attr (Con 137) (Con 4) (Branch F (Dloc 069288)));
    Let b1 = M[001984];
    if (TestBit(b1,3)) {
      TraceOperation 069221 (Store (Con 91) (Con 1));
      SetByte 008058 0;
      SetByte 008059 1;
      TraceOperation 069224 (Print "Suddenly a shadow passes in front of the sun. You look up. The shadow is a ");
      GamePrint "Suddenly a shadow passes in front of the sun. You look up. The shadow is a ";
      TraceOperation 069267 (Print_obj (Con 124));
      Let b2 = M[001874];
      Let b3 = M[001875];
      Let b4 = M[Address(MakeHiLo(b2,b3))];
      if (IsZeroByte(b4)) {
        GamePrint "";
        TraceOperation 069269 (Print ". You fumble for ");
        GamePrint ". You fumble for ";
        TraceOperation 069280 (Call (Floc 042734) [Con -11236] Sp);
        PushFrame 069280;
        SetLocal 1 -11236;
        JumpCall: 042734, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
        TraceOperation 069269 (Print ". You fumble for ");
        GamePrint ". You fumble for ";
        TraceOperation 069280 (Call (Floc 042734) [Con -11236] Sp);
        PushFrame 069280;
        SetLocal 1 -11236;
        JumpCall: 042734, #actuals: 1
      }
    } else {
      Jump: 069288
    }
  } else {
    Jump: 069288
  }
LocReturn 069280:
  PushStack call_result;
  TraceOperation 069287 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 069288:
  TraceOperation 069288 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 069292 (Print "The road runs from ");
    GamePrint "The road runs from ";
    TraceOperation 069303 (Je [Var (Global 120),Con 123] (Branch F (Dloc 069313)));
    Let b1 = M[008148];
    Let b2 = M[008149];
    if (Equal(MakeHiLo(b1,b2),123)) {
      TraceOperation 069307 (Print "your");
      GamePrint "your";
      TraceOperation 069310 (Jump 069318);
      Jump: 069318
    } else {
      Jump: 069313
    }
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 069313:
  TraceOperation 069313 (Print "Arthur's");
  GamePrint "Arthur's";
  Jump: 069318
LocOp 069318:
  TraceOperation 069318 (Print_ret " home, to the north, toward the village Pub, to the west.");
  GamePrint " home, to the north, toward the village Pub, to the west.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[463]--------------------------------------------------
LocRoutine 069352:
  MakeRoutineFrame 0;
  Jump: 069353
LocOp 069353:
  TraceOperation 069353 (Je [Var (Global 0),Con 86] (Branch F (Dloc 069935)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),86)) {
    TraceOperation 069358 (Inc (Con 115));
    Let b3 = M[008106];
    Let b4 = M[008107];
    SetByte 008106 HiByte(Add(MakeHiLo(b3,b4),1));
    SetByte 008107 LoByte(Add(MakeHiLo(b3,b4),1));
    TraceOperation 069360 (Jl (Var (Global 99)) (Con 13) (Branch F (Dloc 069368)));
    Let b5 = M[008106];
    Let b6 = M[008107];
    if (LessThan(MakeHiLo(b5,b6),13)) {
      TraceOperation 069364 (Je [Var (Global 203),Con 165] (Branch T Dfalse));
      Let b7 = M[008314];
      Let b8 = M[008315];
      if (Equal(MakeHiLo(b7,b8),165)) {
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 0
      } else {
        Jump: 069368
      }
    } else {
      Jump: 069368
    }
  } else {
    Jump: 069935
  }
LocOp 069368:
  TraceOperation 069368 New_line;
  GamePrint "\n";
  TraceOperation 069369 (Jl (Var (Global 99)) (Con 13) (Branch F (Dloc 069400)));
  Let b1 = M[008106];
  Let b2 = M[008107];
  if (LessThan(MakeHiLo(b1,b2),13)) {
    TraceOperation 069373 (Print_ret "The fleet continues to hurtle sunwards.");
    GamePrint "The fleet continues to hurtle sunwards.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 069400
  }
LocOp 069400:
  TraceOperation 069400 (Jz (Var (Global 128)) (Branch T (Dloc 069925)));
  Let b1 = M[008164];
  Let b2 = M[008165];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 069925
  } else {
    TraceOperation 069404 (Store (Con 102) (Con 0));
    SetByte 008080 0;
    SetByte 008081 0;
    TraceOperation 069407 (Print "Your simple act of kindness at a moment of great personal anxiety (you fed the dog, remember?) now brings rich rewards. ");
    GamePrint "Your simple act of kindness at a moment of great personal anxiety (you fed the dog, remember?) now brings rich rewards. ";
    TraceOperation 069486 (Print_paddr (Var (Global 41)));
    Let b3 = M[007990];
    Let b4 = M[007991];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 069488 (Print " spots the dog (which appears to them as a gigantic monster) cheerfully tucking into a ");
    GamePrint " spots the dog (which appears to them as a gigantic monster) cheerfully tucking into a ";
    TraceOperation 069543 (Print_obj (Con 125));
    Let b5 = M[001883];
    Let b6 = M[001884];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 069545 (Print ".\n\nThe Vl'Hurgs and the G'Gugvunts are moved by this simple picture of happiness, compared with the furious savagery of their own lives. They think back to a day when they used to relax over an odd ");
      GamePrint ".\n\nThe Vl'Hurgs and the G'Gugvunts are moved by this simple picture of happiness, compared with the furious savagery of their own lives. They think back to a day when they used to relax over an odd ";
      TraceOperation 069666 (Print_obj (Con 125));
      Let b8 = M[001883];
      Let b9 = M[001884];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      if (IsZeroByte(b10)) {
        GamePrint "";
        TraceOperation 069668 (Print " themselves, often at sunset after a hearty day working in the fields back in Vl'Hurgon and G'Gugvia, and decide to return and rebuild their homes in a new spirit of harmony and cooperation.\n\nGrateful, they offer to drop you at ");
        GamePrint " themselves, often at sunset after a hearty day working in the fields back in Vl'Hurgon and G'Gugvia, and decide to return and rebuild their homes in a new spirit of harmony and cooperation.\n\nGrateful, they offer to drop you at ";
        TraceOperation 069811 (Print_obj (Con 220));
        Let b11 = M[002738];
        Let b12 = M[002739];
        Let b13 = M[Address(MakeHiLo(b11,b12))];
        if (IsZeroByte(b13)) {
          GamePrint "";
          TraceOperation 069813 (Print " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...");
          GamePrint " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...";
          TraceOperation 069916 New_line;
          GamePrint "\n";
          TraceOperation 069917 New_line;
          GamePrint "\n";
          TraceOperation 069918 (Call (Floc 042574) [Con 81] Sp);
          PushFrame 069918;
          SetLocal 1 81;
          JumpCall: 042574, #actuals: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
          TraceOperation 069813 (Print " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...");
          GamePrint " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...";
          TraceOperation 069916 New_line;
          GamePrint "\n";
          TraceOperation 069917 New_line;
          GamePrint "\n";
          TraceOperation 069918 (Call (Floc 042574) [Con 81] Sp);
          PushFrame 069918;
          SetLocal 1 81;
          JumpCall: 042574, #actuals: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
        TraceOperation 069668 (Print " themselves, often at sunset after a hearty day working in the fields back in Vl'Hurgon and G'Gugvia, and decide to return and rebuild their homes in a new spirit of harmony and cooperation.\n\nGrateful, they offer to drop you at ");
        GamePrint " themselves, often at sunset after a hearty day working in the fields back in Vl'Hurgon and G'Gugvia, and decide to return and rebuild their homes in a new spirit of harmony and cooperation.\n\nGrateful, they offer to drop you at ";
        TraceOperation 069811 (Print_obj (Con 220));
        Let b14 = M[002738];
        Let b15 = M[002739];
        Let b16 = M[Address(MakeHiLo(b14,b15))];
        if (IsZeroByte(b16)) {
          GamePrint "";
          TraceOperation 069813 (Print " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...");
          GamePrint " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...";
          TraceOperation 069916 New_line;
          GamePrint "\n";
          TraceOperation 069917 New_line;
          GamePrint "\n";
          TraceOperation 069918 (Call (Floc 042574) [Con 81] Sp);
          PushFrame 069918;
          SetLocal 1 81;
          JumpCall: 042574, #actuals: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b14,b15)),1));
          TraceOperation 069813 (Print " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...");
          GamePrint " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...";
          TraceOperation 069916 New_line;
          GamePrint "\n";
          TraceOperation 069917 New_line;
          GamePrint "\n";
          TraceOperation 069918 (Call (Floc 042574) [Con 81] Sp);
          PushFrame 069918;
          SetLocal 1 81;
          JumpCall: 042574, #actuals: 1
        }
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 069545 (Print ".\n\nThe Vl'Hurgs and the G'Gugvunts are moved by this simple picture of happiness, compared with the furious savagery of their own lives. They think back to a day when they used to relax over an odd ");
      GamePrint ".\n\nThe Vl'Hurgs and the G'Gugvunts are moved by this simple picture of happiness, compared with the furious savagery of their own lives. They think back to a day when they used to relax over an odd ";
      TraceOperation 069666 (Print_obj (Con 125));
      Let b17 = M[001883];
      Let b18 = M[001884];
      Let b19 = M[Address(MakeHiLo(b17,b18))];
      if (IsZeroByte(b19)) {
        GamePrint "";
        TraceOperation 069668 (Print " themselves, often at sunset after a hearty day working in the fields back in Vl'Hurgon and G'Gugvia, and decide to return and rebuild their homes in a new spirit of harmony and cooperation.\n\nGrateful, they offer to drop you at ");
        GamePrint " themselves, often at sunset after a hearty day working in the fields back in Vl'Hurgon and G'Gugvia, and decide to return and rebuild their homes in a new spirit of harmony and cooperation.\n\nGrateful, they offer to drop you at ";
        TraceOperation 069811 (Print_obj (Con 220));
        Let b20 = M[002738];
        Let b21 = M[002739];
        Let b22 = M[Address(MakeHiLo(b20,b21))];
        if (IsZeroByte(b22)) {
          GamePrint "";
          TraceOperation 069813 (Print " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...");
          GamePrint " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...";
          TraceOperation 069916 New_line;
          GamePrint "\n";
          TraceOperation 069917 New_line;
          GamePrint "\n";
          TraceOperation 069918 (Call (Floc 042574) [Con 81] Sp);
          PushFrame 069918;
          SetLocal 1 81;
          JumpCall: 042574, #actuals: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b20,b21)),1));
          TraceOperation 069813 (Print " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...");
          GamePrint " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...";
          TraceOperation 069916 New_line;
          GamePrint "\n";
          TraceOperation 069917 New_line;
          GamePrint "\n";
          TraceOperation 069918 (Call (Floc 042574) [Con 81] Sp);
          PushFrame 069918;
          SetLocal 1 81;
          JumpCall: 042574, #actuals: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b17,b18)),1));
        TraceOperation 069668 (Print " themselves, often at sunset after a hearty day working in the fields back in Vl'Hurgon and G'Gugvia, and decide to return and rebuild their homes in a new spirit of harmony and cooperation.\n\nGrateful, they offer to drop you at ");
        GamePrint " themselves, often at sunset after a hearty day working in the fields back in Vl'Hurgon and G'Gugvia, and decide to return and rebuild their homes in a new spirit of harmony and cooperation.\n\nGrateful, they offer to drop you at ";
        TraceOperation 069811 (Print_obj (Con 220));
        Let b23 = M[002738];
        Let b24 = M[002739];
        Let b25 = M[Address(MakeHiLo(b23,b24))];
        if (IsZeroByte(b25)) {
          GamePrint "";
          TraceOperation 069813 (Print " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...");
          GamePrint " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...";
          TraceOperation 069916 New_line;
          GamePrint "\n";
          TraceOperation 069917 New_line;
          GamePrint "\n";
          TraceOperation 069918 (Call (Floc 042574) [Con 81] Sp);
          PushFrame 069918;
          SetLocal 1 81;
          JumpCall: 042574, #actuals: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b23,b24)),1));
          TraceOperation 069813 (Print " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...");
          GamePrint " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...";
          TraceOperation 069916 New_line;
          GamePrint "\n";
          TraceOperation 069917 New_line;
          GamePrint "\n";
          TraceOperation 069918 (Call (Floc 042574) [Con 81] Sp);
          PushFrame 069918;
          SetLocal 1 81;
          JumpCall: 042574, #actuals: 1
        }
      }
    }
  }
LocReturn 069918:
  PushStack call_result;
  TraceOperation 069924 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 069925:
  TraceOperation 069925 (Print_paddr (Var (Global 41)));
  Let b1 = M[007990];
  Let b2 = M[007991];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 069927 (Call (Floc 042734) [Con -11216] Sp);
  PushFrame 069927;
  SetLocal 1 -11216;
  JumpCall: 042734, #actuals: 1
LocReturn 069927:
  PushStack call_result;
  TraceOperation 069934 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 069935:
  TraceOperation 069935 (Je [Var (Global 120),Con 142] (Branch F (Dloc 070043)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 069940 (Insert_obj (Con 135) (Var (Global 0)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001970];
    if (IsZero(Widen(b5))) {
      SetByte 001970 b4;
      Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte 001971 LoByte(Widen(b6));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 135;
      TraceOperation 069943 (Call (Floc 022340) [Con -30860] Sp);
      PushFrame 069943;
      SetLocal 1 -30860;
      JumpCall: 022340, #actuals: 1
    } else {
      Let b7 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b7),135)) {
        Let b8 = M[001971];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b8));
        SetByte 001970 b4;
        Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
        SetByte 001971 LoByte(Widen(b9));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 135;
        TraceOperation 069943 (Call (Floc 022340) [Con -30860] Sp);
        PushFrame 069943;
        SetLocal 1 -30860;
        JumpCall: 022340, #actuals: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 070043
  }
LocReturn 069943:
  PushStack call_result;
  TraceOperation 069950 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 069955 (Print "You run up the lane after Arthur. You pass a");
  GamePrint "You run up the lane after Arthur. You pass a";
  TraceOperation 069980 (Jz (Var (Global 128)) (Branch T (Dloc 070020)));
  Let b2 = M[008164];
  Let b3 = M[008165];
  if (IsZero(MakeHiLo(b2,b3))) {
    Jump: 070020
  } else {
    TraceOperation 069983 (Print_ret " serene dog. Fate cannot harm him, he has dined today.");
    GamePrint " serene dog. Fate cannot harm him, he has dined today.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
LocOp 070020:
  TraceOperation 070020 (Print_ret "n irritable dog who yaps at you.");
  GamePrint "n irritable dog who yaps at you.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 070043:
  TraceOperation 070043 (Jin (Con 135) (Var (Global 0)) (Branch T (Dloc 070169)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001970];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 070169
  } else {
    TraceOperation 070048 (Jin (Con 124) (Var (Global 0)) (Branch T (Dloc 070169)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[001871];
    if (Equal(MakeHiLo(b4,b5),Widen(b6))) {
      Jump: 070169
    } else {
      TraceOperation 070053 (Je [Var (Global 0),Con 137] (Branch F (Dloc 070169)));
      Let b7 = M[007908];
      Let b8 = M[007909];
      if (Equal(MakeHiLo(b7,b8),137)) {
        TraceOperation 070058 (Insert_obj (Con 135) (Var (Global 0)));
        Let b9 = M[007908];
        Let b10 = M[007909];
        Let b11 = M[001970];
        if (IsZero(Widen(b11))) {
          SetByte 001970 b10;
          Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6)];
          SetByte 001971 LoByte(Widen(b12));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6) 135;
          TraceOperation 070061 (Call (Floc 022320) [Con -30860,Con 2] Sp);
          PushFrame 070061;
          SetLocal 1 -30860;
          SetLocal 2 2;
          JumpCall: 022320, #actuals: 2
        } else {
          Let b13 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
          if (Equal(Widen(b13),135)) {
            Let b14 = M[001971];
            SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b14));
            SetByte 001970 b10;
            Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6)];
            SetByte 001971 LoByte(Widen(b15));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6) 135;
            TraceOperation 070061 (Call (Floc 022320) [Con -30860,Con 2] Sp);
            PushFrame 070061;
            SetLocal 1 -30860;
            SetLocal 2 2;
            JumpCall: 022320, #actuals: 2
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Jump: 070169
      }
    }
  }
LocReturn 070061:
  PushStack call_result;
  TraceOperation 070069 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 070074 (Print "You see the huge ");
  GamePrint "You see the huge ";
  TraceOperation 070083 (Print_obj (Con 166));
  Let b2 = M[002252];
  Let b3 = M[002253];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 070085 (Print " heaving itself among the cloud of brick dust which is all that remains of ");
    GamePrint " heaving itself among the cloud of brick dust which is all that remains of ";
    TraceOperation 070128 (Print_obj (Con 173));
    Let b5 = M[002315];
    Let b6 = M[002316];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 070130 (Print_ret ". As you start up the lane, a small dog runs up to you, yapping.");
      GamePrint ". As you start up the lane, a small dog runs up to you, yapping.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 070130 (Print_ret ". As you start up the lane, a small dog runs up to you, yapping.");
      GamePrint ". As you start up the lane, a small dog runs up to you, yapping.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 070085 (Print " heaving itself among the cloud of brick dust which is all that remains of ");
    GamePrint " heaving itself among the cloud of brick dust which is all that remains of ";
    TraceOperation 070128 (Print_obj (Con 173));
    Let b10 = M[002315];
    Let b11 = M[002316];
    Let b12 = M[Address(MakeHiLo(b10,b11))];
    if (IsZeroByte(b12)) {
      GamePrint "";
      TraceOperation 070130 (Print_ret ". As you start up the lane, a small dog runs up to you, yapping.");
      GamePrint ". As you start up the lane, a small dog runs up to you, yapping.\n";
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b10,b11)),1));
      TraceOperation 070130 (Print_ret ". As you start up the lane, a small dog runs up to you, yapping.");
      GamePrint ". As you start up the lane, a small dog runs up to you, yapping.\n";
      PopFrame return_address_14;
      JumpReturn: return_address_14, result: 1
    }
  }
LocOp 070169:
  TraceOperation 070169 (Jz (Var (Global 128)) (Branch F Dfalse));
  Let b1 = M[008164];
  Let b2 = M[008165];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070172 (Jin (Con 135) (Var (Global 0)) (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001970];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 070176 (Test_attr (Con 135) (Con 5) (Branch T Dfalse));
      Let b6 = M[001966];
      if (TestBit(b6,2)) {
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      } else {
        TraceOperation 070180 (Set_attr (Con 135) (Con 5));
        Let b8 = M[001966];
        SetByte 001966 SetBit(b8,2);
        TraceOperation 070183 (Print_ret "The dog carries on yapping for a moment and then gulps uncomfortably.");
        GamePrint "The dog carries on yapping for a moment and then gulps uncomfortably.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      }
    } else {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 0
    }
  } else {
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 0
  }
--[464]--------------------------------------------------
LocRoutine 070226:
  MakeRoutineFrame 0;
  Jump: 070227
LocOp 070227:
  TraceOperation 070227 (Je [Var (Global 203),Con 154,Con 66] (Branch F (Dloc 070573)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 070234 (Je [Var (Global 201),Con 125] (Branch F (Dloc 070550)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),125)) {
      TraceOperation 070239 (Je [Var (Global 120),Con 142] (Branch F (Dloc 070303)));
      Let b5 = M[008148];
      Let b6 = M[008149];
      if (Equal(MakeHiLo(b5,b6),142)) {
        TraceOperation 070243 (Insert_obj (Con 125) (Var (Global 0)));
        Let b7 = M[007908];
        Let b8 = M[007909];
        Let b9 = M[001880];
        if (IsZero(Widen(b9))) {
          SetByte 001880 b8;
          Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
          SetByte 001881 LoByte(Widen(b10));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 125;
          TraceOperation 070246 (Print "The dog is in a bad mood and tries to bite ");
          GamePrint "The dog is in a bad mood and tries to bite ";
          TraceOperation 070271 (Print_obj (Con 36));
          Let b11 = M[001082];
          Let b12 = M[001083];
          Let b13 = M[Address(MakeHiLo(b11,b12))];
          if (IsZeroByte(b13)) {
            GamePrint "";
            TraceOperation 070273 (Print ". The ");
            GamePrint ". The ";
            TraceOperation 070278 (Print_obj (Con 125));
            Let b14 = M[001883];
            Let b15 = M[001884];
            Let b16 = M[Address(MakeHiLo(b14,b15))];
            if (IsZeroByte(b16)) {
              GamePrint "";
              TraceOperation 070280 (Print_ret " lies ignored in the roadside dust.");
              GamePrint " lies ignored in the roadside dust.\n";
              PopFrame return_address_17;
              JumpReturn: return_address_17, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b14,b15)),1));
              TraceOperation 070280 (Print_ret " lies ignored in the roadside dust.");
              GamePrint " lies ignored in the roadside dust.\n";
              PopFrame return_address_18;
              JumpReturn: return_address_18, result: 1
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
            TraceOperation 070273 (Print ". The ");
            GamePrint ". The ";
            TraceOperation 070278 (Print_obj (Con 125));
            Let b19 = M[001883];
            Let b20 = M[001884];
            Let b21 = M[Address(MakeHiLo(b19,b20))];
            if (IsZeroByte(b21)) {
              GamePrint "";
              TraceOperation 070280 (Print_ret " lies ignored in the roadside dust.");
              GamePrint " lies ignored in the roadside dust.\n";
              PopFrame return_address_22;
              JumpReturn: return_address_22, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b19,b20)),1));
              TraceOperation 070280 (Print_ret " lies ignored in the roadside dust.");
              GamePrint " lies ignored in the roadside dust.\n";
              PopFrame return_address_23;
              JumpReturn: return_address_23, result: 1
            }
          }
        } else {
          Let b24 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
          if (Equal(Widen(b24),125)) {
            Let b25 = M[001881];
            SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b25));
            SetByte 001880 b8;
            Let b26 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
            SetByte 001881 LoByte(Widen(b26));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 125;
            TraceOperation 070246 (Print "The dog is in a bad mood and tries to bite ");
            GamePrint "The dog is in a bad mood and tries to bite ";
            TraceOperation 070271 (Print_obj (Con 36));
            Let b27 = M[001082];
            Let b28 = M[001083];
            Let b29 = M[Address(MakeHiLo(b27,b28))];
            if (IsZeroByte(b29)) {
              GamePrint "";
              TraceOperation 070273 (Print ". The ");
              GamePrint ". The ";
              TraceOperation 070278 (Print_obj (Con 125));
              Let b30 = M[001883];
              Let b31 = M[001884];
              Let b32 = M[Address(MakeHiLo(b30,b31))];
              if (IsZeroByte(b32)) {
                GamePrint "";
                TraceOperation 070280 (Print_ret " lies ignored in the roadside dust.");
                GamePrint " lies ignored in the roadside dust.\n";
                PopFrame return_address_33;
                JumpReturn: return_address_33, result: 1
              } else {
                GamePrint GetText(Offset(Address(MakeHiLo(b30,b31)),1));
                TraceOperation 070280 (Print_ret " lies ignored in the roadside dust.");
                GamePrint " lies ignored in the roadside dust.\n";
                PopFrame return_address_34;
                JumpReturn: return_address_34, result: 1
              }
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b27,b28)),1));
              TraceOperation 070273 (Print ". The ");
              GamePrint ". The ";
              TraceOperation 070278 (Print_obj (Con 125));
              Let b35 = M[001883];
              Let b36 = M[001884];
              Let b37 = M[Address(MakeHiLo(b35,b36))];
              if (IsZeroByte(b37)) {
                GamePrint "";
                TraceOperation 070280 (Print_ret " lies ignored in the roadside dust.");
                GamePrint " lies ignored in the roadside dust.\n";
                PopFrame return_address_38;
                JumpReturn: return_address_38, result: 1
              } else {
                GamePrint GetText(Offset(Address(MakeHiLo(b35,b36)),1));
                TraceOperation 070280 (Print_ret " lies ignored in the roadside dust.");
                GamePrint " lies ignored in the roadside dust.\n";
                PopFrame return_address_39;
                JumpReturn: return_address_39, result: 1
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Jump: 070303
      }
    } else {
      Jump: 070550
    }
  } else {
    Jump: 070573
  }
LocOp 070303:
  TraceOperation 070303 (Test_attr (Con 135) (Con 5) (Branch F (Dloc 070349)));
  Let b1 = M[001966];
  if (TestBit(b1,2)) {
    TraceOperation 070307 (Print "The dog, which seems to have a slight case of indigestion, ignores the ");
    GamePrint "The dog, which seems to have a slight case of indigestion, ignores the ";
    TraceOperation 070344 (Print_obj (Con 125));
    Let b2 = M[001883];
    Let b3 = M[001884];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 070346 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 070346 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 070349
  }
LocOp 070349:
  TraceOperation 070349 (Insert_obj (Con 125) (Con 219));
  Let b1 = M[001880];
  if (IsZero(Widen(b1))) {
    SetByte 001880 219;
    Let b2 = M[002728];
    SetByte 001881 LoByte(Widen(b2));
    SetByte 002728 125;
    TraceOperation 070352 (Store (Con 144) (Con 1));
    SetByte 008164 0;
    SetByte 008165 1;
    TraceOperation 070355 (Print "The dog is deeply moved. With powerful sweeps of its tail it indicates that it regards this ");
    GamePrint "The dog is deeply moved. With powerful sweeps of its tail it indicates that it regards this ";
    TraceOperation 070410 (Print_obj (Con 125));
    Let b3 = M[001883];
    Let b4 = M[001884];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 070412 (Print " as one of the great ");
      GamePrint " as one of the great ";
      TraceOperation 070425 (Print_obj (Con 125));
      Let b6 = M[001883];
      Let b7 = M[001884];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 070427 (Print "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats");
        GamePrint "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats";
        TraceOperation 070546 (Print_paddr (Var (Global 23)));
        Let b9 = M[007954];
        Let b10 = M[007955];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
        TraceOperation 070548 New_line;
        GamePrint "\n";
        TraceOperation 070549 Rtrue;
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 070427 (Print "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats");
        GamePrint "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats";
        TraceOperation 070546 (Print_paddr (Var (Global 23)));
        Let b12 = M[007954];
        Let b13 = M[007955];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b12,b13)));
        TraceOperation 070548 New_line;
        GamePrint "\n";
        TraceOperation 070549 Rtrue;
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 070412 (Print " as one of the great ");
      GamePrint " as one of the great ";
      TraceOperation 070425 (Print_obj (Con 125));
      Let b15 = M[001883];
      Let b16 = M[001884];
      Let b17 = M[Address(MakeHiLo(b15,b16))];
      if (IsZeroByte(b17)) {
        GamePrint "";
        TraceOperation 070427 (Print "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats");
        GamePrint "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats";
        TraceOperation 070546 (Print_paddr (Var (Global 23)));
        Let b18 = M[007954];
        Let b19 = M[007955];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b18,b19)));
        TraceOperation 070548 New_line;
        GamePrint "\n";
        TraceOperation 070549 Rtrue;
        PopFrame return_address_20;
        JumpReturn: return_address_20, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b15,b16)),1));
        TraceOperation 070427 (Print "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats");
        GamePrint "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats";
        TraceOperation 070546 (Print_paddr (Var (Global 23)));
        Let b21 = M[007954];
        Let b22 = M[007955];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b21,b22)));
        TraceOperation 070548 New_line;
        GamePrint "\n";
        TraceOperation 070549 Rtrue;
        PopFrame return_address_23;
        JumpReturn: return_address_23, result: 1
      }
    }
  } else {
    Let b24 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b24),125)) {
      Let b25 = M[001881];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b25));
      SetByte 001880 219;
      Let b26 = M[002728];
      SetByte 001881 LoByte(Widen(b26));
      SetByte 002728 125;
      TraceOperation 070352 (Store (Con 144) (Con 1));
      SetByte 008164 0;
      SetByte 008165 1;
      TraceOperation 070355 (Print "The dog is deeply moved. With powerful sweeps of its tail it indicates that it regards this ");
      GamePrint "The dog is deeply moved. With powerful sweeps of its tail it indicates that it regards this ";
      TraceOperation 070410 (Print_obj (Con 125));
      Let b27 = M[001883];
      Let b28 = M[001884];
      Let b29 = M[Address(MakeHiLo(b27,b28))];
      if (IsZeroByte(b29)) {
        GamePrint "";
        TraceOperation 070412 (Print " as one of the great ");
        GamePrint " as one of the great ";
        TraceOperation 070425 (Print_obj (Con 125));
        Let b30 = M[001883];
        Let b31 = M[001884];
        Let b32 = M[Address(MakeHiLo(b30,b31))];
        if (IsZeroByte(b32)) {
          GamePrint "";
          TraceOperation 070427 (Print "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats");
          GamePrint "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats";
          TraceOperation 070546 (Print_paddr (Var (Global 23)));
          Let b33 = M[007954];
          Let b34 = M[007955];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b33,b34)));
          TraceOperation 070548 New_line;
          GamePrint "\n";
          TraceOperation 070549 Rtrue;
          PopFrame return_address_35;
          JumpReturn: return_address_35, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b30,b31)),1));
          TraceOperation 070427 (Print "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats");
          GamePrint "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats";
          TraceOperation 070546 (Print_paddr (Var (Global 23)));
          Let b36 = M[007954];
          Let b37 = M[007955];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b36,b37)));
          TraceOperation 070548 New_line;
          GamePrint "\n";
          TraceOperation 070549 Rtrue;
          PopFrame return_address_38;
          JumpReturn: return_address_38, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b27,b28)),1));
        TraceOperation 070412 (Print " as one of the great ");
        GamePrint " as one of the great ";
        TraceOperation 070425 (Print_obj (Con 125));
        Let b39 = M[001883];
        Let b40 = M[001884];
        Let b41 = M[Address(MakeHiLo(b39,b40))];
        if (IsZeroByte(b41)) {
          GamePrint "";
          TraceOperation 070427 (Print "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats");
          GamePrint "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats";
          TraceOperation 070546 (Print_paddr (Var (Global 23)));
          Let b42 = M[007954];
          Let b43 = M[007955];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b42,b43)));
          TraceOperation 070548 New_line;
          GamePrint "\n";
          TraceOperation 070549 Rtrue;
          PopFrame return_address_44;
          JumpReturn: return_address_44, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b39,b40)),1));
          TraceOperation 070427 (Print "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats");
          GamePrint "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats";
          TraceOperation 070546 (Print_paddr (Var (Global 23)));
          Let b45 = M[007954];
          Let b46 = M[007955];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b45,b46)));
          TraceOperation 070548 New_line;
          GamePrint "\n";
          TraceOperation 070549 Rtrue;
          PopFrame return_address_47;
          JumpReturn: return_address_47, result: 1
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 070550:
  TraceOperation 070550 (Je [Var (Global 201),Con 126] (Branch F Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),126)) {
    TraceOperation 070554 (Print_ret "This is a dog, not an elephant.");
    GamePrint "This is a dog, not an elephant.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 070573:
  TraceOperation 070573 (Je [Var (Global 203),Con 61] (Branch F (Dloc 070595)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 070577 (Jz (Var (Global 128)) (Branch F (Dloc 070595)));
    Let b3 = M[008164];
    Let b4 = M[008165];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 070580 (Print_ret "The mongrel looks hungry.");
      GamePrint "The mongrel looks hungry.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 070595
    }
  } else {
    Jump: 070595
  }
LocOp 070595:
  TraceOperation 070595 (Je [Var (Global 203),Con 114,Con 82,Con 159] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),114),Equal(MakeHiLo(b1,b2),82)),Equal(MakeHiLo(b1,b2),159))) {
    TraceOperation 070602 (Print "The dog tries to bite your ");
    GamePrint "The dog tries to bite your ";
    TraceOperation 070617 (Je [Var (Global 203),Con 82] (Branch F (Dloc 070629)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),82)) {
      TraceOperation 070621 (Print "foot");
      GamePrint "foot";
      TraceOperation 070626 (Jump 070634);
      Jump: 070634
    } else {
      Jump: 070629
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 070629:
  TraceOperation 070629 (Print "hand");
  GamePrint "hand";
  Jump: 070634
LocOp 070634:
  TraceOperation 070634 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[465]--------------------------------------------------
LocRoutine 070638:
  MakeRoutineFrame 0;
  Jump: 070639
LocOp 070639:
  TraceOperation 070639 (Je [Var (Global 203),Con 38,Con 21] (Branch F (Dloc 070670)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),21))) {
    TraceOperation 070645 (Je [Var (Global 0),Con 134] (Branch F (Dloc 070653)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),134)) {
      TraceOperation 070649 (Print_paddr (Var (Global 57)));
      Let b5 = M[008022];
      Let b6 = M[008023];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 070651 New_line;
      GamePrint "\n";
      TraceOperation 070652 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 070653
    }
  } else {
    Jump: 070670
  }
LocOp 070653:
  TraceOperation 070653 (Je [Var (Global 0),Con 137] (Branch F (Dloc 070664)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),137)) {
    TraceOperation 070657 (Call (Floc 043620) [Con 19] Sp);
    PushFrame 070657;
    SetLocal 1 19;
    JumpCall: 043620, #actuals: 1
  } else {
    Jump: 070664
  }
LocReturn 070657:
  PushStack call_result;
  TraceOperation 070663 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 070664:
  TraceOperation 070664 (Call (Floc 040326) [] Sp);
  PushFrame 070664;
  JumpCall: 040326, #actuals: 0
LocReturn 070664:
  PushStack call_result;
  TraceOperation 070669 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 070670:
  TraceOperation 070670 (Je [Var (Global 203),Con 48,Con 86,Con 59] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),86)),Equal(MakeHiLo(b1,b2),59))) {
    TraceOperation 070677 (Je [Var (Global 0),Con 134] (Branch F (Dloc 070688)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),134)) {
      TraceOperation 070681 (Call (Floc 043620) [Con 27] Sp);
      PushFrame 070681;
      SetLocal 1 27;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 070688
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 070681:
  PushStack call_result;
  TraceOperation 070687 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 070688:
  TraceOperation 070688 (Print_paddr (Var (Global 57)));
  Let b1 = M[008022];
  Let b2 = M[008023];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 070690 New_line;
  GamePrint "\n";
  TraceOperation 070691 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[466]--------------------------------------------------
LocRoutine 070692:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 070695
LocOp 070695:
  TraceOperation 070695 (Je [Var (Local 1),Con 2] (Branch F (Dloc 070721)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 070699 (Jz (Var (Global 131)) (Branch F (Dloc 070721)));
    Let b1 = M[008170];
    Let b2 = M[008171];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 070702 (Je [Var (Global 120),Con 142] (Branch F (Dloc 070721)));
      Let b3 = M[008148];
      Let b4 = M[008149];
      if (Equal(MakeHiLo(b3,b4),142)) {
        TraceOperation 070706 (Call (Floc 022320) [Con -27242,Con -1] Sp);
        PushFrame 070706;
        SetLocal 1 -27242;
        SetLocal 2 -1;
        JumpCall: 022320, #actuals: 2
      } else {
        Jump: 070721
      }
    } else {
      Jump: 070721
    }
  } else {
    Jump: 070721
  }
LocReturn 070706:
  PushStack call_result;
  TraceOperation 070715 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 070720 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 070721:
  TraceOperation 070721 (Je [Var (Local 1),Con 3] (Branch F (Dloc 070863)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 070726 (Print_ret "The Pub is pleasant and cheerful and full of pleasant and cheerful people who don't know they've got about twelve minutes to live and are therefore having a spot of lunch. Some music is playing on an old jukebox. The exit is east.");
    GamePrint "The Pub is pleasant and cheerful and full of pleasant and cheerful people who don't know they've got about twelve minutes to live and are therefore having a spot of lunch. Some music is playing on an old jukebox. The exit is east.\n";
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    Jump: 070863
  }
LocOp 070863:
  TraceOperation 070863 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 070867 (Test_attr (Con 127) (Con 27) (Branch F Dfalse));
    Let b1 = M[001897];
    if (TestBit(b1,4)) {
      TraceOperation 070871 (Jin (Con 142) (Var (Global 0)) (Branch F Dfalse));
      Let b2 = M[007908];
      Let b3 = M[007909];
      Let b4 = M[002033];
      if (Equal(MakeHiLo(b2,b3),Widen(b4))) {
        TraceOperation 070875 (Je [Var (Global 120),Con 142] (Branch T Dfalse));
        Let b5 = M[008148];
        Let b6 = M[008149];
        if (Equal(MakeHiLo(b5,b6),142)) {
          PopFrame return_address_7;
          JumpReturn: return_address_7, result: 0
        } else {
          TraceOperation 070879 (Clear_attr (Con 127) (Con 27));
          Let b8 = M[001897];
          SetByte 001897 ClearBit(b8,4);
          TraceOperation 070882 (Call (Floc 022320) [Con -32630,Con 2] Sp);
          PushFrame 070882;
          SetLocal 1 -32630;
          SetLocal 2 2;
          JumpCall: 022320, #actuals: 2
        }
      } else {
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 0
      }
    } else {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 0
    }
  } else {
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 0
  }
LocReturn 070882:
  PushStack call_result;
  TraceOperation 070890 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 070895 (Store (Con 153) (Con 5));
  SetByte 008182 0;
  SetByte 008183 5;
  TraceOperation 070898 New_line;
  GamePrint "\n";
  TraceOperation 070899 (Print "Ford buys ");
  GamePrint "Ford buys ";
  TraceOperation 070906 (Print_obj (Con 127));
  Let b2 = M[001901];
  Let b3 = M[001902];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 070908 (Print_ret " and offers half to you. \"Muscle relaxant...\" he says, impenetrably.");
    GamePrint " and offers half to you. \"Muscle relaxant...\" he says, impenetrably.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 070908 (Print_ret " and offers half to you. \"Muscle relaxant...\" he says, impenetrably.");
    GamePrint " and offers half to you. \"Muscle relaxant...\" he says, impenetrably.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
--[467]--------------------------------------------------
LocRoutine 070958:
  MakeRoutineFrame 0;
  Jump: 070959
LocOp 070959:
  TraceOperation 070959 (Je [Var (Global 203),Con 94] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),94)) {
    TraceOperation 070963 (Call (Floc 022042) [Con 61,Con 131] Sp);
    PushFrame 070963;
    SetLocal 1 61;
    SetLocal 2 131;
    JumpCall: 022042, #actuals: 2
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 070963:
  PushStack call_result;
  TraceOperation 070970 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[468]--------------------------------------------------
LocRoutine 070972:
  MakeRoutineFrame 0;
  Jump: 070973
LocOp 070973:
  TraceOperation 070973 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 070977 (Set_attr (Con 131) (Con 27));
    Let b3 = M[001933];
    SetByte 001933 SetBit(b3,4);
    TraceOperation 070980 (Print "On the shelf behind the bar is the usual array of bottles, glasses and soggy beermats");
    GamePrint "On the shelf behind the bar is the usual array of bottles, glasses and soggy beermats";
    TraceOperation 071033 (Jz (Var (Global 127)) (Branch F (Dloc 071071)));
    Let b4 = M[008162];
    Let b5 = M[008163];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 071036 (Set_attr (Con 126) (Con 25));
      Let b6 = M[001888];
      SetByte 001888 SetBit(b6,6);
      TraceOperation 071039 (Set_attr (Con 126) (Con 21));
      Let b7 = M[001887];
      SetByte 001887 SetBit(b7,2);
      TraceOperation 071042 (Jz (Var (Global 126)) (Branch T (Dloc 071053)));
      Let b8 = M[008160];
      Let b9 = M[008161];
      if (IsZero(MakeHiLo(b8,b9))) {
        Jump: 071053
      } else {
        TraceOperation 071045 (Print ", and");
        GamePrint ", and";
        TraceOperation 071050 (Jump 071056);
        Jump: 071056
      }
    } else {
      Jump: 071071
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
LocOp 071053:
  TraceOperation 071053 (Print ",");
  GamePrint ",";
  Jump: 071056
LocOp 071056:
  TraceOperation 071056 (Print " some packets of peanuts");
  GamePrint " some packets of peanuts";
  Jump: 071071
LocOp 071071:
  TraceOperation 071071 (Jz (Var (Global 126)) (Branch F (Dloc 071104)));
  Let b1 = M[008160];
  Let b2 = M[008161];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071074 (Set_attr (Con 125) (Con 25));
    Let b3 = M[001879];
    SetByte 001879 SetBit(b3,6);
    TraceOperation 071077 (Set_attr (Con 125) (Con 21));
    Let b4 = M[001878];
    SetByte 001878 SetBit(b4,2);
    TraceOperation 071080 (Print ", and a plate of uninviting ");
    GamePrint ", and a plate of uninviting ";
    TraceOperation 071099 (Print_obj (Con 125));
    Let b5 = M[001883];
    Let b6 = M[001884];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 071101 (Print "es");
      GamePrint "es";
      Jump: 071104
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 071101 (Print "es");
      GamePrint "es";
      Jump: 071104
    }
  } else {
    Jump: 071104
  }
LocOp 071104:
  TraceOperation 071104 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[469]--------------------------------------------------
LocRoutine 071108:
  MakeRoutineFrame 0;
  Jump: 071109
LocOp 071109:
  TraceOperation 071109 (Je [Var (Global 203),Con 57,Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),74))) {
    TraceOperation 071115 (Call (Floc 022042) [Con 74,Con 129] Sp);
    PushFrame 071115;
    SetLocal 1 74;
    SetLocal 2 129;
    JumpCall: 022042, #actuals: 2
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 071115:
  PushStack call_result;
  TraceOperation 071122 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[470]--------------------------------------------------
LocRoutine 071124:
  MakeRoutineFrame 0;
  Jump: 071125
LocOp 071125:
  TraceOperation 071125 (Je [Var (Global 203),Con 74] (Branch F (Dloc 071381)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 071130 (Print "The song is ");
    GamePrint "The song is ";
    TraceOperation 071137 (Random (Con 100) Sp);
    LetRandom random3 100;
    PushStack random3;
    TraceOperation 071141 (Jl (Con 25) (Var Sp) (Branch T (Dloc 071194)));
    PopStack popped4;
    if (LessThan(25,popped4)) {
      Jump: 071194
    } else {
      TraceOperation 071145 (Print_ret "a Walker Brothers single, \"The Sun Ain't Gonna Shine Anymore.\"");
      GamePrint "a Walker Brothers single, \"The Sun Ain't Gonna Shine Anymore.\"\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 071381
  }
LocOp 071194:
  TraceOperation 071194 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 071198 (Jl (Con 33) (Var Sp) (Branch T (Dloc 071223)));
  PopStack popped2;
  if (LessThan(33,popped2)) {
    Jump: 071223
  } else {
    TraceOperation 071202 (Print_ret "\"Get Back\" by the Beatles.");
    GamePrint "\"Get Back\" by the Beatles.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 071223:
  TraceOperation 071223 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 071227 (Jl (Con 50) (Var Sp) (Branch T (Dloc 071307)));
  PopStack popped2;
  if (LessThan(50,popped2)) {
    Jump: 071307
  } else {
    TraceOperation 071232 (Print_ret "\"Hey Jude\" by the Beatles (Footnote 4). It's a particular favourite, and listening to it calms you down, and cheers you up.");
    GamePrint "\"Hey Jude\" by the Beatles (Footnote 4). It's a particular favourite, and listening to it calms you down, and cheers you up.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 071307:
  TraceOperation 071307 (Print "\"Tie a Yellow Ribbon.\"");
  GamePrint "\"Tie a Yellow Ribbon.\"";
  TraceOperation 071328 (Je [Var (Global 120),Con 142] (Branch F (Dloc 071379)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 071332 (Print " You can't stand it, and are pleased to think that this is probably the last time it will ever be heard.");
    GamePrint " You can't stand it, and are pleased to think that this is probably the last time it will ever be heard.";
    Jump: 071379
  } else {
    Jump: 071379
  }
LocOp 071379:
  TraceOperation 071379 New_line;
  GamePrint "\n";
  TraceOperation 071380 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 071381:
  TraceOperation 071381 (Je [Var (Global 203),Con 40] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),40)) {
    TraceOperation 071385 (Call (Floc 057712) [Con -11164] Sp);
    PushFrame 071385;
    SetLocal 1 -11164;
    JumpCall: 057712, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 071385:
  PushStack call_result;
  TraceOperation 071392 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[471]--------------------------------------------------
LocRoutine 071394:
  MakeRoutineFrame 0;
  Jump: 071395
LocOp 071395:
  TraceOperation 071395 (Je [Con 128,Var (Global 195)] (Branch F (Dloc 071505)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(128,MakeHiLo(b1,b2))) {
    TraceOperation 071400 (Je [Var (Global 203),Con 150] (Branch F (Dloc 071423)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 071404 (Je [Var (Global 201),Con 30] (Branch F (Dloc 071423)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 071408 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 071411 (Call (Floc 022042) [Con 22,Con 128,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame 071411;
        SetLocal 1 22;
        SetLocal 2 128;
        SetLocal 3 MakeHiLo(b7,b8);
        JumpCall: 022042, #actuals: 3
      } else {
        Jump: 071423
      }
    } else {
      Jump: 071423
    }
  } else {
    Jump: 071505
  }
LocReturn 071411:
  PushStack call_result;
  TraceOperation 071419 (Store (Con 211) (Con 128));
  SetByte 008298 0;
  SetByte 008299 128;
  TraceOperation 071422 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 071423:
  TraceOperation 071423 (Je [Var (Global 203),Con 75] (Branch F (Dloc 071441)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 071427 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 071430 (Call (Floc 022042) [Con 75,Con 128] Sp);
    PushFrame 071430;
    SetLocal 1 75;
    SetLocal 2 128;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 071441
  }
LocReturn 071430:
  PushStack call_result;
  TraceOperation 071437 (Store (Con 211) (Con 128));
  SetByte 008298 0;
  SetByte 008299 128;
  TraceOperation 071440 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 071441:
  TraceOperation 071441 (Je [Var (Global 203),Con 66] (Branch F (Dloc 071464)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 071445 (Je [Var (Global 201),Con 30] (Branch F (Dloc 071464)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 071449 (Je [Var (Global 202),Con 126,Con 127,Con 125] (Branch F (Dloc 071464)));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),126),Equal(MakeHiLo(b5,b6),127)),Equal(MakeHiLo(b5,b6),125))) {
        TraceOperation 071456 (Call (Floc 022042) [Con 30,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame 071456;
        SetLocal 1 30;
        SetLocal 2 MakeHiLo(b7,b8);
        JumpCall: 022042, #actuals: 2
      } else {
        Jump: 071464
      }
    } else {
      Jump: 071464
    }
  } else {
    Jump: 071464
  }
LocReturn 071456:
  PushStack call_result;
  TraceOperation 071463 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 071464:
  TraceOperation 071464 (Print_ret "The barman ignores you and keeps polishing the other end of the bar.");
  GamePrint "The barman ignores you and keeps polishing the other end of the bar.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 071505:
  TraceOperation 071505 (Je [Var (Global 203),Con 23] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 071509 (Je [Var (Global 202),Con 126,Con 127,Con 125] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),126),Equal(MakeHiLo(b3,b4),127)),Equal(MakeHiLo(b3,b4),125))) {
      TraceOperation 071516 (Call (Floc 022042) [Con 30,Var (Global 202)] Sp);
      Let b5 = M[008312];
      Let b6 = M[008313];
      PushFrame 071516;
      SetLocal 1 30;
      SetLocal 2 MakeHiLo(b5,b6);
      JumpCall: 022042, #actuals: 2
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocReturn 071516:
  PushStack call_result;
  TraceOperation 071523 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[472]--------------------------------------------------
LocRoutine 071524:
  MakeRoutineFrame 0;
  Jump: 071525
LocOp 071525:
  TraceOperation 071525 (Je [Var (Global 203),Con 43,Con 57,Con 51] (Branch T (Dloc 071539)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),43),Equal(MakeHiLo(b1,b2),57)),Equal(MakeHiLo(b1,b2),51))) {
    Jump: 071539
  } else {
    TraceOperation 071532 (Je [Var (Global 203),Con 124,Con 159,Con 139] (Branch F (Dloc 071564)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),124),Equal(MakeHiLo(b3,b4),159)),Equal(MakeHiLo(b3,b4),139))) {
      Jump: 071539
    } else {
      Jump: 071564
    }
  }
LocOp 071539:
  TraceOperation 071539 (Test_attr (Con 127) (Con 27) (Branch F (Dloc 071564)));
  Let b1 = M[001897];
  if (TestBit(b1,4)) {
    TraceOperation 071543 (Print_ret "You'd better buy some first.");
    GamePrint "You'd better buy some first.\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    Jump: 071564
  }
LocOp 071564:
  TraceOperation 071564 (Je [Var (Global 203),Con 43] (Branch F (Dloc 071575)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 071568 (Print_ret "Lots.");
    GamePrint "Lots.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 071575
  }
LocOp 071575:
  TraceOperation 071575 (Je [Var (Global 203),Con 124] (Branch F (Dloc 071592)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 071579 (Print_ret "Just drink it!");
    GamePrint "Just drink it!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 071592
  }
LocOp 071592:
  TraceOperation 071592 (Je [Var (Global 120),Con 142] (Branch F (Dloc 072053)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 071597 (Je [Var (Global 203),Con 30] (Branch F (Dloc 071859)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 071602 (Test_attr (Con 127) (Con 27) (Branch T (Dloc 071613)));
      Let b5 = M[001897];
      if (TestBit(b5,4)) {
        Jump: 071613
      } else {
        TraceOperation 071606 (Print_ret "You already did!");
        GamePrint "You already did!\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      }
    } else {
      Jump: 071859
    }
  } else {
    Jump: 072053
  }
LocOp 071613:
  TraceOperation 071613 (Clear_attr (Con 127) (Con 27));
  Let b1 = M[001897];
  SetByte 001897 ClearBit(b1,4);
  TraceOperation 071616 (Jin (Con 123) (Var (Global 0)) (Branch F (Dloc 071793)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[001862];
  if (Equal(MakeHiLo(b2,b3),Widen(b4))) {
    TraceOperation 071621 (Print "You order six pints of bitter -- three for you, three for Arthur. According to ");
    GamePrint "You order six pints of bitter -- three for you, three for Arthur. According to ";
    TraceOperation 071668 (Print_obj (Con 1));
    Let b5 = M[000767];
    Let b6 = M[000768];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 071670 (Print " this should");
      GamePrint " this should";
      TraceOperation 071677 (Call (Floc 057960) [] Sp);
      PushFrame 071677;
      JumpCall: 057960, #actuals: 0
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 071670 (Print " this should");
      GamePrint " this should";
      TraceOperation 071677 (Call (Floc 057960) [] Sp);
      PushFrame 071677;
      JumpCall: 057960, #actuals: 0
    }
  } else {
    Jump: 071793
  }
LocReturn 071677:
  PushStack call_result;
  TraceOperation 071682 New_line;
  GamePrint "\n";
  TraceOperation 071683 New_line;
  GamePrint "\n";
  TraceOperation 071684 (Print_ret "As you drink the first pint, you mention to Arthur that you are from a different planet, but it makes little impression. This surprises you, because you thought it was the sort of thing that would interest people.");
  GamePrint "As you drink the first pint, you mention to Arthur that you are from a different planet, but it makes little impression. This surprises you, because you thought it was the sort of thing that would interest people.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[473]--------------------------------------------------
LocRoutine 071834:
  MakeRoutineFrame 0;
  Jump: 071835
LocOp 071835:
  TraceOperation 071835 (Print " This is a tip you picked up from ");
  GamePrint " This is a tip you picked up from ";
  TraceOperation 071854 (Print_obj (Con 1));
  Let b1 = M[000767];
  Let b2 = M[000768];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 071856 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 071856 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[474]--------------------------------------------------
LocRoutine 071886:
  MakeRoutineFrame 0;
  Jump: 071887
LocOp 071887:
  TraceOperation 071887 (Print_paddr (Var (Global 62)));
  Let b1 = M[008032];
  Let b2 = M[008033];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 071889 (Print_ret " At least they managed to get something right on this benighted planet. You decide it's time to tell Arthur that the world is about to end. You tell him. Arthur is completely unperturbed. Curious. You wonder what sort of news it would take to disturb him.");
  GamePrint " At least they managed to get something right on this benighted planet. You decide it's time to tell Arthur that the world is about to end. You tell him. Arthur is completely unperturbed. Curious. You wonder what sort of news it would take to disturb him.\n";
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[475]--------------------------------------------------
LocRoutine 072036:
  MakeRoutineFrame 0;
  Jump: 072037
LocOp 072037:
  TraceOperation 072037 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[476]--------------------------------------------------
LocRoutine 072058:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 4357;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 20820;
    }
  }
  Jump: 072063
LocOp 072063:
  TraceOperation 072063 (Get_prop (Con 149) (Con 146) (Global 49));
  Let b1 = M[002099];
  Let b2 = M[002100];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Error: getPropsA
LocReturn 072134:
  PushStack call_result;
  TraceOperation 072141 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[477]--------------------------------------------------
LocRoutine 072166:
  MakeRoutineFrame 0;
  Jump: 072167
LocOp 072167:
  TraceOperation 072167 (Print_ret "There is a distant crash which Ford explains is nothing to worry about, probably just your house being knocked down.");
  GamePrint "There is a distant crash which Ford explains is nothing to worry about, probably just your house being knocked down.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[478]--------------------------------------------------
LocRoutine 072696:
  MakeRoutineFrame 0;
  Jump: 072697
LocOp 072697:
  TraceOperation 072697 (Je [Var (Global 120),Con 142] (Branch F (Dloc 072794)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 072702 (Je [Var (Global 203),Con 30] (Branch F (Dloc 072794)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 072707 (Jz (Var (Global 127)) (Branch T (Dloc 072717)));
      Let b5 = M[008162];
      Let b6 = M[008163];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 072717
      } else {
        TraceOperation 072710 (Print_ret "You did!");
        GamePrint "You did!\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      }
    } else {
      Jump: 072794
    }
  } else {
    Jump: 072794
  }
LocOp 072717:
  TraceOperation 072717 (Store (Con 143) (Con 1));
  SetByte 008162 0;
  SetByte 008163 1;
  TraceOperation 072720 (Insert_obj (Con 126) (Con 31));
  Let b1 = M[001889];
  if (IsZero(Widen(b1))) {
    SetByte 001889 31;
    Let b2 = M[001036];
    SetByte 001890 LoByte(Widen(b2));
    SetByte 001036 126;
    TraceOperation 072723 (Clear_attr (Con 126) (Con 21));
    Let b3 = M[001887];
    SetByte 001887 ClearBit(b3,2);
    TraceOperation 072726 (Clear_attr (Con 126) (Con 27));
    Let b4 = M[001888];
    SetByte 001888 ClearBit(b4,4);
    TraceOperation 072729 (Print "You buy some peanuts, which you'll need to replace protein loss from the");
    GamePrint "You buy some peanuts, which you'll need to replace protein loss from the";
    TraceOperation 072770 (Print_paddr (Var (Global 42)));
    Let b5 = M[007992];
    Let b6 = M[007993];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 072772 (Print ", a tip you picked up from ");
    GamePrint ", a tip you picked up from ";
    TraceOperation 072789 (Print_obj (Con 1));
    Let b7 = M[000767];
    Let b8 = M[000768];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    if (IsZeroByte(b9)) {
      GamePrint "";
      TraceOperation 072791 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
      TraceOperation 072791 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    }
  } else {
    Let b12 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b12),126)) {
      Let b13 = M[001890];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b13));
      SetByte 001889 31;
      Let b14 = M[001036];
      SetByte 001890 LoByte(Widen(b14));
      SetByte 001036 126;
      TraceOperation 072723 (Clear_attr (Con 126) (Con 21));
      Let b15 = M[001887];
      SetByte 001887 ClearBit(b15,2);
      TraceOperation 072726 (Clear_attr (Con 126) (Con 27));
      Let b16 = M[001888];
      SetByte 001888 ClearBit(b16,4);
      TraceOperation 072729 (Print "You buy some peanuts, which you'll need to replace protein loss from the");
      GamePrint "You buy some peanuts, which you'll need to replace protein loss from the";
      TraceOperation 072770 (Print_paddr (Var (Global 42)));
      Let b17 = M[007992];
      Let b18 = M[007993];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b17,b18)));
      TraceOperation 072772 (Print ", a tip you picked up from ");
      GamePrint ", a tip you picked up from ";
      TraceOperation 072789 (Print_obj (Con 1));
      Let b19 = M[000767];
      Let b20 = M[000768];
      Let b21 = M[Address(MakeHiLo(b19,b20))];
      if (IsZeroByte(b21)) {
        GamePrint "";
        TraceOperation 072791 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_22;
        JumpReturn: return_address_22, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b19,b20)),1));
        TraceOperation 072791 (Print_ret ".");
        GamePrint ".\n";
        PopFrame return_address_23;
        JumpReturn: return_address_23, result: 1
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 072794:
  TraceOperation 072794 (Je [Var (Global 203),Con 103] (Branch F (Dloc 072809)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 072798 (Print_ret "Just eat 'em.");
    GamePrint "Just eat 'em.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 072809
  }
LocOp 072809:
  TraceOperation 072809 (Je [Var (Global 203),Con 57,Con 56] (Branch F (Dloc 072883)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),56))) {
    TraceOperation 072816 (Jz (Var (Global 122)) (Branch T (Dloc 072883)));
    Let b3 = M[008152];
    Let b4 = M[008153];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 072883
    } else {
      TraceOperation 072820 (Jz (Var (Global 71)) (Branch T (Dloc 072883)));
      Let b5 = M[008050];
      Let b6 = M[008051];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 072883
      } else {
        TraceOperation 072823 (Store (Con 87) (Con 0));
        SetByte 008050 0;
        SetByte 008051 0;
        TraceOperation 072826 (Insert_obj (Con 126) (Con 134));
        Let b7 = M[001889];
        if (IsZero(Widen(b7))) {
          SetByte 001889 134;
          Let b8 = M[001963];
          SetByte 001890 LoByte(Widen(b8));
          SetByte 001963 126;
          TraceOperation 072829 (Set_attr (Con 126) (Con 21));
          Let b9 = M[001887];
          SetByte 001887 SetBit(b9,2);
          TraceOperation 072832 (Set_attr (Con 126) (Con 27));
          Let b10 = M[001888];
          SetByte 001888 SetBit(b10,4);
          TraceOperation 072835 (Print "You feel stronger as the peanuts replace some of the protein you lost in the");
          GamePrint "You feel stronger as the peanuts replace some of the protein you lost in the";
          TraceOperation 072878 (Print_paddr (Var (Global 42)));
          Let b11 = M[007992];
          Let b12 = M[007993];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
          TraceOperation 072880 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 1
        } else {
          Let b14 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
          if (Equal(Widen(b14),126)) {
            Let b15 = M[001890];
            SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b15));
            SetByte 001889 134;
            Let b16 = M[001963];
            SetByte 001890 LoByte(Widen(b16));
            SetByte 001963 126;
            TraceOperation 072829 (Set_attr (Con 126) (Con 21));
            Let b17 = M[001887];
            SetByte 001887 SetBit(b17,2);
            TraceOperation 072832 (Set_attr (Con 126) (Con 27));
            Let b18 = M[001888];
            SetByte 001888 SetBit(b18,4);
            TraceOperation 072835 (Print "You feel stronger as the peanuts replace some of the protein you lost in the");
            GamePrint "You feel stronger as the peanuts replace some of the protein you lost in the";
            TraceOperation 072878 (Print_paddr (Var (Global 42)));
            Let b19 = M[007992];
            Let b20 = M[007993];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b19,b20)));
            TraceOperation 072880 (Print_ret ".");
            GamePrint ".\n";
            PopFrame return_address_21;
            JumpReturn: return_address_21, result: 1
          } else {
            Error: unlink/loop
          }
        }
      }
    }
  } else {
    Jump: 072883
  }
LocOp 072883:
  TraceOperation 072883 (Je [Var (Global 203),Con 30] (Branch F (Dloc 072990)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 072888 (Je [Var (Global 0),Con 134] (Branch F (Dloc 072990)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),134)) {
      TraceOperation 072893 (Print_ret "However much you clear your throat, wave your forefinger, or wiggle your eyebrows, the barman pays no attention, but carries on wiping another part of the bar.");
      GamePrint "However much you clear your throat, wave your forefinger, or wiggle your eyebrows, the barman pays no attention, but carries on wiping another part of the bar.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 072990
    }
  } else {
    Jump: 072990
  }
LocOp 072990:
  TraceOperation 072990 (Je [Var (Global 203),Con 56,Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),56),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 072996 (Test_attr (Con 126) (Con 21) (Branch F Dfalse));
    Let b3 = M[001887];
    if (TestBit(b3,2)) {
      TraceOperation 073000 (Je [Var (Global 0),Con 134] (Branch F Dfalse));
      Let b4 = M[007908];
      Let b5 = M[007909];
      if (Equal(MakeHiLo(b4,b5),134)) {
        TraceOperation 073004 (Print_paddr (Var (Global 20)));
        Let b6 = M[007948];
        Let b7 = M[007949];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
        TraceOperation 073006 New_line;
        GamePrint "\n";
        TraceOperation 073007 Rtrue;
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 0
      }
    } else {
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 0
    }
  } else {
    PopFrame return_address_11;
    JumpReturn: return_address_11, result: 0
  }
--[479]--------------------------------------------------
LocRoutine 073008:
  MakeRoutineFrame 0;
  Jump: 073009
LocOp 073009:
  TraceOperation 073009 (Je [Var (Global 203),Con 30] (Branch F (Dloc 073247)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 073014 (Jz (Var (Global 126)) (Branch F (Dloc 073247)));
    Let b3 = M[008160];
    Let b4 = M[008161];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 073018 (Insert_obj (Con 125) (Con 31));
      Let b5 = M[001880];
      if (IsZero(Widen(b5))) {
        SetByte 001880 31;
        Let b6 = M[001036];
        SetByte 001881 LoByte(Widen(b6));
        SetByte 001036 125;
        TraceOperation 073021 (Set_attr (Con 125) (Con 25));
        Let b7 = M[001879];
        SetByte 001879 SetBit(b7,6);
        TraceOperation 073024 (Clear_attr (Con 125) (Con 21));
        Let b8 = M[001878];
        SetByte 001878 ClearBit(b8,2);
        TraceOperation 073027 (Clear_attr (Con 125) (Con 27));
        Let b9 = M[001879];
        SetByte 001879 ClearBit(b9,4);
        TraceOperation 073030 (Store (Con 142) (Con 1));
        SetByte 008160 0;
        SetByte 008161 1;
        TraceOperation 073033 (Print "The barman gives you a ");
        GamePrint "The barman gives you a ";
        TraceOperation 073048 (Print_obj (Con 125));
        Let b10 = M[001883];
        Let b11 = M[001884];
        Let b12 = M[Address(MakeHiLo(b10,b11))];
        if (IsZeroByte(b12)) {
          GamePrint "";
          TraceOperation 073050 (Print_ret ". The bread is like the stuff that stereos come packed in, the cheese would be great for rubbing out spelling mistakes, and margarine and pickle have performed an unedifying chemical reaction to produce something that shouldn't be, but is, turquoise. Since it is clearly unfit for human consumption you are grateful to be charged only a pound for it.");
          GamePrint ". The bread is like the stuff that stereos come packed in, the cheese would be great for rubbing out spelling mistakes, and margarine and pickle have performed an unedifying chemical reaction to produce something that shouldn't be, but is, turquoise. Since it is clearly unfit for human consumption you are grateful to be charged only a pound for it.\n";
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b10,b11)),1));
          TraceOperation 073050 (Print_ret ". The bread is like the stuff that stereos come packed in, the cheese would be great for rubbing out spelling mistakes, and margarine and pickle have performed an unedifying chemical reaction to produce something that shouldn't be, but is, turquoise. Since it is clearly unfit for human consumption you are grateful to be charged only a pound for it.");
          GamePrint ". The bread is like the stuff that stereos come packed in, the cheese would be great for rubbing out spelling mistakes, and margarine and pickle have performed an unedifying chemical reaction to produce something that shouldn't be, but is, turquoise. Since it is clearly unfit for human consumption you are grateful to be charged only a pound for it.\n";
          PopFrame return_address_14;
          JumpReturn: return_address_14, result: 1
        }
      } else {
        Let b15 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b15),125)) {
          Let b16 = M[001881];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b16));
          SetByte 001880 31;
          Let b17 = M[001036];
          SetByte 001881 LoByte(Widen(b17));
          SetByte 001036 125;
          TraceOperation 073021 (Set_attr (Con 125) (Con 25));
          Let b18 = M[001879];
          SetByte 001879 SetBit(b18,6);
          TraceOperation 073024 (Clear_attr (Con 125) (Con 21));
          Let b19 = M[001878];
          SetByte 001878 ClearBit(b19,2);
          TraceOperation 073027 (Clear_attr (Con 125) (Con 27));
          Let b20 = M[001879];
          SetByte 001879 ClearBit(b20,4);
          TraceOperation 073030 (Store (Con 142) (Con 1));
          SetByte 008160 0;
          SetByte 008161 1;
          TraceOperation 073033 (Print "The barman gives you a ");
          GamePrint "The barman gives you a ";
          TraceOperation 073048 (Print_obj (Con 125));
          Let b21 = M[001883];
          Let b22 = M[001884];
          Let b23 = M[Address(MakeHiLo(b21,b22))];
          if (IsZeroByte(b23)) {
            GamePrint "";
            TraceOperation 073050 (Print_ret ". The bread is like the stuff that stereos come packed in, the cheese would be great for rubbing out spelling mistakes, and margarine and pickle have performed an unedifying chemical reaction to produce something that shouldn't be, but is, turquoise. Since it is clearly unfit for human consumption you are grateful to be charged only a pound for it.");
            GamePrint ". The bread is like the stuff that stereos come packed in, the cheese would be great for rubbing out spelling mistakes, and margarine and pickle have performed an unedifying chemical reaction to produce something that shouldn't be, but is, turquoise. Since it is clearly unfit for human consumption you are grateful to be charged only a pound for it.\n";
            PopFrame return_address_24;
            JumpReturn: return_address_24, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b21,b22)),1));
            TraceOperation 073050 (Print_ret ". The bread is like the stuff that stereos come packed in, the cheese would be great for rubbing out spelling mistakes, and margarine and pickle have performed an unedifying chemical reaction to produce something that shouldn't be, but is, turquoise. Since it is clearly unfit for human consumption you are grateful to be charged only a pound for it.");
            GamePrint ". The bread is like the stuff that stereos come packed in, the cheese would be great for rubbing out spelling mistakes, and margarine and pickle have performed an unedifying chemical reaction to produce something that shouldn't be, but is, turquoise. Since it is clearly unfit for human consumption you are grateful to be charged only a pound for it.\n";
            PopFrame return_address_25;
            JumpReturn: return_address_25, result: 1
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 073247
    }
  } else {
    Jump: 073247
  }
LocOp 073247:
  TraceOperation 073247 (Je [Var (Global 203),Con 30] (Branch F (Dloc 073258)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 073251 (Print_ret "You already did.");
    GamePrint "You already did.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 073258
  }
LocOp 073258:
  TraceOperation 073258 (Je [Var (Global 203),Con 57,Con 56,Con 124] (Branch F (Dloc 073277)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),56)),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 073265 (Test_attr (Con 125) (Con 21) (Branch F (Dloc 073277)));
    Let b3 = M[001878];
    if (TestBit(b3,2)) {
      TraceOperation 073269 (Je [Var (Global 0),Con 134] (Branch F (Dloc 073277)));
      Let b4 = M[007908];
      Let b5 = M[007909];
      if (Equal(MakeHiLo(b4,b5),134)) {
        TraceOperation 073273 (Print_paddr (Var (Global 20)));
        Let b6 = M[007948];
        Let b7 = M[007949];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
        TraceOperation 073275 New_line;
        GamePrint "\n";
        TraceOperation 073276 Rtrue;
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        Jump: 073277
      }
    } else {
      Jump: 073277
    }
  } else {
    Jump: 073277
  }
LocOp 073277:
  TraceOperation 073277 (Je [Var (Global 203),Con 57,Con 56] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),56))) {
    TraceOperation 073283 (Insert_obj (Con 125) (Con 219));
    Let b3 = M[001880];
    if (IsZero(Widen(b3))) {
      SetByte 001880 219;
      Let b4 = M[002728];
      SetByte 001881 LoByte(Widen(b4));
      SetByte 002728 125;
      TraceOperation 073286 (Sub (Var (Global 1)) (Con 30) (Global 1));
      Let b5 = M[007910];
      Let b6 = M[007911];
      SetByte 007910 HiByte(Sub(MakeHiLo(b5,b6),30));
      SetByte 007911 LoByte(Sub(MakeHiLo(b5,b6),30));
      TraceOperation 073290 (Je [Var (Global 120),Con 142] (Branch F (Dloc 073379)));
      Let b7 = M[008148];
      Let b8 = M[008149];
      if (Equal(MakeHiLo(b7,b8),142)) {
        TraceOperation 073295 (Print "You swallow with revulsion, astonished that life forms which have spent 4.6 billion years evolving cannot produce a better ");
        GamePrint "You swallow with revulsion, astonished that life forms which have spent 4.6 billion years evolving cannot produce a better ";
        TraceOperation 073368 (Print_obj (Con 125));
        Let b9 = M[001883];
        Let b10 = M[001884];
        Let b11 = M[Address(MakeHiLo(b9,b10))];
        if (IsZeroByte(b11)) {
          GamePrint "";
          TraceOperation 073370 (Print_ret " than this.");
          GamePrint " than this.\n";
          PopFrame return_address_12;
          JumpReturn: return_address_12, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
          TraceOperation 073370 (Print_ret " than this.");
          GamePrint " than this.\n";
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 1
        }
      } else {
        Jump: 073379
      }
    } else {
      Let b14 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b14),125)) {
        Let b15 = M[001881];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b15));
        SetByte 001880 219;
        Let b16 = M[002728];
        SetByte 001881 LoByte(Widen(b16));
        SetByte 002728 125;
        TraceOperation 073286 (Sub (Var (Global 1)) (Con 30) (Global 1));
        Let b17 = M[007910];
        Let b18 = M[007911];
        SetByte 007910 HiByte(Sub(MakeHiLo(b17,b18),30));
        SetByte 007911 LoByte(Sub(MakeHiLo(b17,b18),30));
        TraceOperation 073290 (Je [Var (Global 120),Con 142] (Branch F (Dloc 073379)));
        Let b19 = M[008148];
        Let b20 = M[008149];
        if (Equal(MakeHiLo(b19,b20),142)) {
          TraceOperation 073295 (Print "You swallow with revulsion, astonished that life forms which have spent 4.6 billion years evolving cannot produce a better ");
          GamePrint "You swallow with revulsion, astonished that life forms which have spent 4.6 billion years evolving cannot produce a better ";
          TraceOperation 073368 (Print_obj (Con 125));
          Let b21 = M[001883];
          Let b22 = M[001884];
          Let b23 = M[Address(MakeHiLo(b21,b22))];
          if (IsZeroByte(b23)) {
            GamePrint "";
            TraceOperation 073370 (Print_ret " than this.");
            GamePrint " than this.\n";
            PopFrame return_address_24;
            JumpReturn: return_address_24, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b21,b22)),1));
            TraceOperation 073370 (Print_ret " than this.");
            GamePrint " than this.\n";
            PopFrame return_address_25;
            JumpReturn: return_address_25, result: 1
          }
        } else {
          Jump: 073379
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    PopFrame return_address_26;
    JumpReturn: return_address_26, result: 0
  }
LocOp 073379:
  TraceOperation 073379 (Print_ret "It is one of the least rewarding taste experiences you can recall.");
  GamePrint "It is one of the least rewarding taste experiences you can recall.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[480]--------------------------------------------------
LocRoutine 073420:
  MakeRoutineFrame 0;
  Jump: 073421
LocOp 073421:
  TraceOperation 073421 (Call (Floc 022320) [Con -28826,Con -1] Sp);
  PushFrame 073421;
  SetLocal 1 -28826;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 073421:
  PushStack call_result;
  TraceOperation 073430 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 073435 (Inc (Con 141));
  Let b2 = M[008158];
  Let b3 = M[008159];
  SetByte 008158 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008159 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 073437 (Je [Var (Global 125),Con 1] (Branch F (Dloc 073960)));
  Let b4 = M[008158];
  Let b5 = M[008159];
  if (Equal(MakeHiLo(b4,b5),1)) {
    TraceOperation 073442 (Je [Var (Global 0),Con 134] (Branch F (Dloc 073451)));
    Let b6 = M[007908];
    Let b7 = M[007909];
    if (Equal(MakeHiLo(b6,b7),134)) {
      TraceOperation 073446 (Call (Floc 074788) [] Sp);
      PushFrame 073446;
      JumpCall: 074788, #actuals: 0
    } else {
      Jump: 073451
    }
  } else {
    Jump: 073960
  }
LocReturn 073446:
  PushStack call_result;
  Jump: 073451
LocOp 073451:
  TraceOperation 073451 (Insert_obj (Con 124) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001871];
  if (IsZero(Widen(b3))) {
    SetByte 001871 b2;
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 001872 LoByte(Widen(b4));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 124;
    TraceOperation 073454 New_line;
    GamePrint "\n";
    TraceOperation 073455 (Je [Var (Global 120),Con 142] (Branch F (Dloc 073641)));
    Let b5 = M[008148];
    Let b6 = M[008149];
    if (Equal(MakeHiLo(b5,b6),142)) {
      TraceOperation 073460 (Insert_obj (Con 123) (Var (Global 0)));
      Let b7 = M[007908];
      Let b8 = M[007909];
      Let b9 = M[001862];
      if (IsZero(Widen(b9))) {
        SetByte 001862 b8;
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
        SetByte 001863 LoByte(Widen(b10));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 123;
        TraceOperation 073463 (Print "Right on schedule (according to the news you picked up last night on your Sub-Etha Sens-O-Matic), a huge ");
        GamePrint "Right on schedule (according to the news you picked up last night on your Sub-Etha Sens-O-Matic), a huge ";
        TraceOperation 073536 (Print_obj (Con 124));
        Let b11 = M[001874];
        Let b12 = M[001875];
        Let b13 = M[Address(MakeHiLo(b11,b12))];
        if (IsZeroByte(b13)) {
          GamePrint "";
          TraceOperation 073538 (Print_ret " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.");
          GamePrint " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.\n";
          PopFrame return_address_14;
          JumpReturn: return_address_14, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
          TraceOperation 073538 (Print_ret " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.");
          GamePrint " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.\n";
          PopFrame return_address_15;
          JumpReturn: return_address_15, result: 1
        }
      } else {
        Let b16 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
        if (Equal(Widen(b16),123)) {
          Let b17 = M[001863];
          SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b17));
          SetByte 001862 b8;
          Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
          SetByte 001863 LoByte(Widen(b18));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 123;
          TraceOperation 073463 (Print "Right on schedule (according to the news you picked up last night on your Sub-Etha Sens-O-Matic), a huge ");
          GamePrint "Right on schedule (according to the news you picked up last night on your Sub-Etha Sens-O-Matic), a huge ";
          TraceOperation 073536 (Print_obj (Con 124));
          Let b19 = M[001874];
          Let b20 = M[001875];
          Let b21 = M[Address(MakeHiLo(b19,b20))];
          if (IsZeroByte(b21)) {
            GamePrint "";
            TraceOperation 073538 (Print_ret " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.");
            GamePrint " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.\n";
            PopFrame return_address_22;
            JumpReturn: return_address_22, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b19,b20)),1));
            TraceOperation 073538 (Print_ret " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.");
            GamePrint " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.\n";
            PopFrame return_address_23;
            JumpReturn: return_address_23, result: 1
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 073641
    }
  } else {
    Let b24 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b24),124)) {
      Let b25 = M[001872];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b25));
      SetByte 001871 b2;
      Let b26 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 001872 LoByte(Widen(b26));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 124;
      TraceOperation 073454 New_line;
      GamePrint "\n";
      TraceOperation 073455 (Je [Var (Global 120),Con 142] (Branch F (Dloc 073641)));
      Let b27 = M[008148];
      Let b28 = M[008149];
      if (Equal(MakeHiLo(b27,b28),142)) {
        TraceOperation 073460 (Insert_obj (Con 123) (Var (Global 0)));
        Let b29 = M[007908];
        Let b30 = M[007909];
        Let b31 = M[001862];
        if (IsZero(Widen(b31))) {
          SetByte 001862 b30;
          Let b32 = M[Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),6)];
          SetByte 001863 LoByte(Widen(b32));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),6) 123;
          TraceOperation 073463 (Print "Right on schedule (according to the news you picked up last night on your Sub-Etha Sens-O-Matic), a huge ");
          GamePrint "Right on schedule (according to the news you picked up last night on your Sub-Etha Sens-O-Matic), a huge ";
          TraceOperation 073536 (Print_obj (Con 124));
          Let b33 = M[001874];
          Let b34 = M[001875];
          Let b35 = M[Address(MakeHiLo(b33,b34))];
          if (IsZeroByte(b35)) {
            GamePrint "";
            TraceOperation 073538 (Print_ret " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.");
            GamePrint " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.\n";
            PopFrame return_address_36;
            JumpReturn: return_address_36, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b33,b34)),1));
            TraceOperation 073538 (Print_ret " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.");
            GamePrint " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.\n";
            PopFrame return_address_37;
            JumpReturn: return_address_37, result: 1
          }
        } else {
          Let b38 = M[Offset(Offset(000751,Mul(Widen(b31),9)),6)];
          if (Equal(Widen(b38),123)) {
            Let b39 = M[001863];
            SetByte Offset(Offset(000751,Mul(Widen(b31),9)),6) LoByte(Widen(b39));
            SetByte 001862 b30;
            Let b40 = M[Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),6)];
            SetByte 001863 LoByte(Widen(b40));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),6) 123;
            TraceOperation 073463 (Print "Right on schedule (according to the news you picked up last night on your Sub-Etha Sens-O-Matic), a huge ");
            GamePrint "Right on schedule (according to the news you picked up last night on your Sub-Etha Sens-O-Matic), a huge ";
            TraceOperation 073536 (Print_obj (Con 124));
            Let b41 = M[001874];
            Let b42 = M[001875];
            Let b43 = M[Address(MakeHiLo(b41,b42))];
            if (IsZeroByte(b43)) {
              GamePrint "";
              TraceOperation 073538 (Print_ret " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.");
              GamePrint " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.\n";
              PopFrame return_address_44;
              JumpReturn: return_address_44, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b41,b42)),1));
              TraceOperation 073538 (Print_ret " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.");
              GamePrint " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.\n";
              PopFrame return_address_45;
              JumpReturn: return_address_45, result: 1
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Jump: 073641
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 073641:
  TraceOperation 073641 (Print "With a noise like a cross between Led Zeppelin's farewell concert and the eruption of Krakatoa, a huge ");
  GamePrint "With a noise like a cross between Led Zeppelin's farewell concert and the eruption of Krakatoa, a huge ";
  TraceOperation 073704 (Print_obj (Con 124));
  Let b1 = M[001874];
  Let b2 = M[001875];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 073706 (Print " flies overhead and announces that the Earth will be demolished to make way for a new hyperspace bypass in \"two of your Earth minutes.\"");
    GamePrint " flies overhead and announces that the Earth will be demolished to make way for a new hyperspace bypass in \"two of your Earth minutes.\"";
    TraceOperation 073789 New_line;
    GamePrint "\n";
    TraceOperation 073790 (Jin (Con 142) (Var (Global 0)) (Branch F (Dloc 073846)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[002033];
    if (Equal(MakeHiLo(b4,b5),Widen(b6))) {
      TraceOperation 073794 (Jz (Var (Global 137)) (Branch F (Dloc 073846)));
      Let b7 = M[008182];
      Let b8 = M[008183];
      if (IsZero(MakeHiLo(b7,b8))) {
        TraceOperation 073797 (Insert_obj (Con 142) (Con 219));
        Let b9 = M[002033];
        if (IsZero(Widen(b9))) {
          SetByte 002033 219;
          Let b10 = M[002728];
          SetByte 002034 LoByte(Widen(b10));
          SetByte 002728 142;
          TraceOperation 073800 (Call (Floc 022340) [Con -32630] Sp);
          PushFrame 073800;
          SetLocal 1 -32630;
          JumpCall: 022340, #actuals: 1
        } else {
          Let b11 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
          if (Equal(Widen(b11),142)) {
            Let b12 = M[002034];
            SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b12));
            SetByte 002033 219;
            Let b13 = M[002728];
            SetByte 002034 LoByte(Widen(b13));
            SetByte 002728 142;
            TraceOperation 073800 (Call (Floc 022340) [Con -32630] Sp);
            PushFrame 073800;
            SetLocal 1 -32630;
            JumpCall: 022340, #actuals: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Jump: 073846
      }
    } else {
      Jump: 073846
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 073706 (Print " flies overhead and announces that the Earth will be demolished to make way for a new hyperspace bypass in \"two of your Earth minutes.\"");
    GamePrint " flies overhead and announces that the Earth will be demolished to make way for a new hyperspace bypass in \"two of your Earth minutes.\"";
    TraceOperation 073789 New_line;
    GamePrint "\n";
    TraceOperation 073790 (Jin (Con 142) (Var (Global 0)) (Branch F (Dloc 073846)));
    Let b14 = M[007908];
    Let b15 = M[007909];
    Let b16 = M[002033];
    if (Equal(MakeHiLo(b14,b15),Widen(b16))) {
      TraceOperation 073794 (Jz (Var (Global 137)) (Branch F (Dloc 073846)));
      Let b17 = M[008182];
      Let b18 = M[008183];
      if (IsZero(MakeHiLo(b17,b18))) {
        TraceOperation 073797 (Insert_obj (Con 142) (Con 219));
        Let b19 = M[002033];
        if (IsZero(Widen(b19))) {
          SetByte 002033 219;
          Let b20 = M[002728];
          SetByte 002034 LoByte(Widen(b20));
          SetByte 002728 142;
          TraceOperation 073800 (Call (Floc 022340) [Con -32630] Sp);
          PushFrame 073800;
          SetLocal 1 -32630;
          JumpCall: 022340, #actuals: 1
        } else {
          Let b21 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
          if (Equal(Widen(b21),142)) {
            Let b22 = M[002034];
            SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b22));
            SetByte 002033 219;
            Let b23 = M[002728];
            SetByte 002034 LoByte(Widen(b23));
            SetByte 002728 142;
            TraceOperation 073800 (Call (Floc 022340) [Con -32630] Sp);
            PushFrame 073800;
            SetLocal 1 -32630;
            JumpCall: 022340, #actuals: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Jump: 073846
      }
    } else {
      Jump: 073846
    }
  }
LocReturn 073800:
  PushStack call_result;
  TraceOperation 073807 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 073812 (Store (Con 140) (Con 1));
  SetByte 008156 0;
  SetByte 008157 1;
  TraceOperation 073815 (Insert_obj (Con 139) (Var (Global 0)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[002006];
  if (IsZero(Widen(b4))) {
    SetByte 002006 b3;
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    SetByte 002007 LoByte(Widen(b5));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 139;
    TraceOperation 073818 (Clear_attr (Con 139) (Con 21));
    Let b6 = M[002004];
    SetByte 002004 ClearBit(b6,2);
    TraceOperation 073821 New_line;
    GamePrint "\n";
    TraceOperation 073822 (Print "Ford drops the towel and dashes away.");
    GamePrint "Ford drops the towel and dashes away.";
    TraceOperation 073845 New_line;
    GamePrint "\n";
    Jump: 073846
  } else {
    Let b7 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
    if (Equal(Widen(b7),139)) {
      Let b8 = M[002007];
      SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b8));
      SetByte 002006 b3;
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte 002007 LoByte(Widen(b9));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 139;
      TraceOperation 073818 (Clear_attr (Con 139) (Con 21));
      Let b10 = M[002004];
      SetByte 002004 ClearBit(b10,2);
      TraceOperation 073821 New_line;
      GamePrint "\n";
      TraceOperation 073822 (Print "Ford drops the towel and dashes away.");
      GamePrint "Ford drops the towel and dashes away.";
      TraceOperation 073845 New_line;
      GamePrint "\n";
      Jump: 073846
    } else {
      Error: unlink/loop
    }
  }
LocOp 073846:
  TraceOperation 073846 (Call (Floc 043468) [Con 156] Sp);
  PushFrame 073846;
  SetLocal 1 156;
  JumpCall: 043468, #actuals: 1
LocReturn 073846:
  PushStack call_result;
  TraceOperation 073852 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 073855 (Insert_obj (Con 156) (Con 219));
    Let b3 = M[002159];
    if (IsZero(Widen(b3))) {
      SetByte 002159 219;
      Let b4 = M[002728];
      SetByte 002160 LoByte(Widen(b4));
      SetByte 002728 156;
      TraceOperation 073858 New_line;
      GamePrint "\n";
      TraceOperation 073859 (Print "In all the turmoil, ");
      GamePrint "In all the turmoil, ";
      TraceOperation 073872 (Jin (Con 156) (Con 158) (Branch F (Dloc 073909)));
      Let b5 = M[002159];
      if (Equal(158,Widen(b5))) {
        TraceOperation 073876 (Print "the ");
        GamePrint "the ";
        TraceOperation 073879 (Print_obj (Con 156));
        Let b6 = M[002162];
        Let b7 = M[002163];
        Let b8 = M[Address(MakeHiLo(b6,b7))];
        if (IsZeroByte(b8)) {
          GamePrint "";
          TraceOperation 073881 (Print " drops out of your pocket and rolls away.");
          GamePrint " drops out of your pocket and rolls away.";
          TraceOperation 073906 (Jump 073931);
          Jump: 073931
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
          TraceOperation 073881 (Print " drops out of your pocket and rolls away.");
          GamePrint " drops out of your pocket and rolls away.";
          TraceOperation 073906 (Jump 073931);
          Jump: 073931
        }
      } else {
        Jump: 073909
      }
    } else {
      Let b9 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b9),156)) {
        Let b10 = M[002160];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b10));
        SetByte 002159 219;
        Let b11 = M[002728];
        SetByte 002160 LoByte(Widen(b11));
        SetByte 002728 156;
        TraceOperation 073858 New_line;
        GamePrint "\n";
        TraceOperation 073859 (Print "In all the turmoil, ");
        GamePrint "In all the turmoil, ";
        TraceOperation 073872 (Jin (Con 156) (Con 158) (Branch F (Dloc 073909)));
        Let b12 = M[002159];
        if (Equal(158,Widen(b12))) {
          TraceOperation 073876 (Print "the ");
          GamePrint "the ";
          TraceOperation 073879 (Print_obj (Con 156));
          Let b13 = M[002162];
          Let b14 = M[002163];
          Let b15 = M[Address(MakeHiLo(b13,b14))];
          if (IsZeroByte(b15)) {
            GamePrint "";
            TraceOperation 073881 (Print " drops out of your pocket and rolls away.");
            GamePrint " drops out of your pocket and rolls away.";
            TraceOperation 073906 (Jump 073931);
            Jump: 073931
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
            TraceOperation 073881 (Print " drops out of your pocket and rolls away.");
            GamePrint " drops out of your pocket and rolls away.";
            TraceOperation 073906 (Jump 073931);
            Jump: 073931
          }
        } else {
          Jump: 073909
        }
      } else {
        Error: unlink/loop
      }
    }
  }
--[481]--------------------------------------------------
LocRoutine 074174:
  MakeRoutineFrame 0;
  Jump: 074175
LocOp 074175:
  TraceOperation 074175 (Jz (Var Sp) (Branch T (Dloc 074265)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 074265
  } else {
    TraceOperation 074179 (Jin (Con 7) (Con 31) (Branch F (Dloc 074209)));
    Let b2 = M[000818];
    if (Equal(31,Widen(b2))) {
      TraceOperation 074183 (Print "The ");
      GamePrint "The ";
      TraceOperation 074186 (Print_obj (Con 7));
      Let b3 = M[000821];
      Let b4 = M[000822];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      if (IsZeroByte(b5)) {
        GamePrint "";
        TraceOperation 074188 (Print " in ");
        GamePrint " in ";
        TraceOperation 074191 (Print_obj (Con 36));
        Let b6 = M[001082];
        Let b7 = M[001083];
        Let b8 = M[Address(MakeHiLo(b6,b7))];
        if (IsZeroByte(b8)) {
          GamePrint "";
          TraceOperation 074193 (Print " begins to whine.");
          GamePrint " begins to whine.";
          TraceOperation 074206 (Jump 074231);
          Jump: 074231
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
          TraceOperation 074193 (Print " begins to whine.");
          GamePrint " begins to whine.";
          TraceOperation 074206 (Jump 074231);
          Jump: 074231
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
        TraceOperation 074188 (Print " in ");
        GamePrint " in ";
        TraceOperation 074191 (Print_obj (Con 36));
        Let b9 = M[001082];
        Let b10 = M[001083];
        Let b11 = M[Address(MakeHiLo(b9,b10))];
        if (IsZeroByte(b11)) {
          GamePrint "";
          TraceOperation 074193 (Print " begins to whine.");
          GamePrint " begins to whine.";
          TraceOperation 074206 (Jump 074231);
          Jump: 074231
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
          TraceOperation 074193 (Print " begins to whine.");
          GamePrint " begins to whine.";
          TraceOperation 074206 (Jump 074231);
          Jump: 074231
        }
      }
    } else {
      Jump: 074209
    }
  }
--[482]--------------------------------------------------
LocRoutine 074266:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 22312;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 9073;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 3328;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 23611;
        }
      }
    }
  }
  Jump: 074275
LocOp 074275:
  TraceOperation 074275 (Jg (Con 228) (Con 39) (Branch T (Dloc 080941)));
  Jump: 080941
--[483]--------------------------------------------------
LocRoutine 074424:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 17595;
  }
  Jump: 074427
LocOp 074427:
  TraceOperation 074427 (Print "Fierce gales whip across the land, and thunder bangs continuously through the air in the wake of the giant ships. ");
  GamePrint "Fierce gales whip across the land, and thunder bangs continuously through the air in the wake of the giant ships. ";
  TraceOperation 074490 (Je [Var (Global 120),Con 123] (Branch F (Dloc 074631)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),123)) {
    TraceOperation 074495 (Jz (Var (Global 124)) (Branch F (Dloc 074631)));
    Let b3 = M[008156];
    Let b4 = M[008157];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 074499 (Print "Ford fights to reach you, but the wind is too fierce. Further announcements from the ");
      GamePrint "Ford fights to reach you, but the wind is too fierce. Further announcements from the ";
      TraceOperation 074548 (Print_obj (Con 106));
      Let b5 = M[001712];
      Let b6 = M[001713];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 074550 (Print_ret " make it clear that demolition will begin in just a few seconds.\n\nThrough the blinding rain, you see lights flickering on the small device.");
        GamePrint " make it clear that demolition will begin in just a few seconds.\n\nThrough the blinding rain, you see lights flickering on the small device.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 074550 (Print_ret " make it clear that demolition will begin in just a few seconds.\n\nThrough the blinding rain, you see lights flickering on the small device.");
        GamePrint " make it clear that demolition will begin in just a few seconds.\n\nThrough the blinding rain, you see lights flickering on the small device.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      }
    } else {
      Jump: 074631
    }
  } else {
    Jump: 074631
  }
LocOp 074631:
  TraceOperation 074631 (Je [Var (Global 120),Con 142] (Branch F (Dloc 074746)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 074636 (Jin (Con 7) (Var (Global 0)) (Branch F (Dloc 074746)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[000818];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 074641 (Jz (Var (Global 133)) (Branch T (Dloc 074647)));
      Let b6 = M[008174];
      Let b7 = M[008175];
      if (IsZero(MakeHiLo(b6,b7))) {
        Jump: 074647
      } else {
        TraceOperation 074644 (Set_attr (Con 137) (Con 4));
        Let b8 = M[001984];
        SetByte 001984 SetBit(b8,3);
        Jump: 074647
      }
    } else {
      Jump: 074746
    }
  } else {
    Jump: 074746
  }
LocOp 074647:
  TraceOperation 074647 (Print_paddr (Var (Global 32)));
  Let b1 = M[007972];
  Let b2 = M[007973];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 074649 (Print " Fortunately, at this point, Arthur picks up the Thumb, and somehow manages to push the right button");
  GamePrint " Fortunately, at this point, Arthur picks up the Thumb, and somehow manages to push the right button";
  TraceOperation 074708 (Test_attr (Con 7) (Con 3) (Branch F (Dloc 074733)));
  Let b3 = M[000814];
  if (TestBit(b3,4)) {
    TraceOperation 074712 (Print ". Unfortunately, the");
    GamePrint ". Unfortunately, the";
    TraceOperation 074719 (Print_paddr (Var (Global 35)));
    Let b4 = M[007978];
    Let b5 = M[007979];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 074721 (Store (Con 141) (Con 4));
    SetByte 008158 0;
    SetByte 008159 4;
    TraceOperation 074724 (Print " ");
    GamePrint " ";
    TraceOperation 074727 (Call (Floc 073420) [] Sp);
    PushFrame 074727;
    JumpCall: 073420, #actuals: 0
  } else {
    Jump: 074733
  }
LocReturn 074727:
  PushStack call_result;
  TraceOperation 074732 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 074733:
  TraceOperation 074733 (Print ".");
  GamePrint ".";
  TraceOperation 074736 New_line;
  GamePrint "\n";
  TraceOperation 074737 New_line;
  GamePrint "\n";
  TraceOperation 074738 (Call (Floc 042734) [Con -11152] Sp);
  PushFrame 074738;
  SetLocal 1 -11152;
  JumpCall: 042734, #actuals: 1
LocReturn 074738:
  PushStack call_result;
  TraceOperation 074745 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 074746:
  TraceOperation 074746 New_line;
  GamePrint "\n";
  TraceOperation 074747 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[484]--------------------------------------------------
LocRoutine 074788:
  MakeRoutineFrame 0;
  Jump: 074789
LocOp 074789:
  TraceOperation 074789 (Store (Con 102) (Con 0));
  SetByte 008080 0;
  SetByte 008081 0;
  TraceOperation 074792 New_line;
  GamePrint "\n";
  TraceOperation 074793 (Print "You hear sounds of panic from the street. You ");
  GamePrint "You hear sounds of panic from the street. You ";
  TraceOperation 074818 (Je [Var (Global 120),Con 142] (Branch F (Dloc 074852)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 074822 (Jin (Con 123) (Var (Global 0)) (Branch T (Dloc 074852)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001862];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      Jump: 074852
    } else {
      TraceOperation 074826 (Print "leave the Pub and run into Arthur...");
      GamePrint "leave the Pub and run into Arthur...";
      TraceOperation 074847 New_line;
      GamePrint "\n";
      TraceOperation 074848 New_line;
      GamePrint "\n";
      TraceOperation 074849 (Jump 074886);
      Jump: 074886
    }
  } else {
    Jump: 074852
  }
LocOp 074852:
  TraceOperation 074852 (Je [Var (Global 120),Con 142] (Branch F (Dloc 074864)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 074856 (Print "and Arthur");
    GamePrint "and Arthur";
    TraceOperation 074861 (Jump 074869);
    Jump: 074869
  } else {
    Jump: 074864
  }
LocOp 074864:
  TraceOperation 074864 (Print "and Ford");
  GamePrint "and Ford";
  Jump: 074869
LocOp 074869:
  TraceOperation 074869 (Print " rush outside...");
  GamePrint " rush outside...";
  TraceOperation 074884 New_line;
  GamePrint "\n";
  TraceOperation 074885 New_line;
  GamePrint "\n";
  Jump: 074886
LocOp 074886:
  TraceOperation 074886 (Call (Floc 042574) [Con 137] Sp);
  PushFrame 074886;
  SetLocal 1 137;
  JumpCall: 042574, #actuals: 1
LocReturn 074886:
  PushStack call_result;
  TraceOperation 074892 (Je [Var (Global 120),Con 142] (Branch F (Dloc 074900)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 074896 (Insert_obj (Con 123) (Con 137));
    Let b3 = M[001862];
    if (IsZero(Widen(b3))) {
      SetByte 001862 137;
      Let b4 = M[001990];
      SetByte 001863 LoByte(Widen(b4));
      SetByte 001990 123;
      TraceOperation 074899 Rtrue;
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b6),123)) {
        Let b7 = M[001863];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b7));
        SetByte 001862 137;
        Let b8 = M[001990];
        SetByte 001863 LoByte(Widen(b8));
        SetByte 001990 123;
        TraceOperation 074899 Rtrue;
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 074900
  }
LocOp 074900:
  TraceOperation 074900 (Insert_obj (Con 142) (Con 137));
  Let b1 = M[002033];
  if (IsZero(Widen(b1))) {
    SetByte 002033 137;
    Let b2 = M[001990];
    SetByte 002034 LoByte(Widen(b2));
    SetByte 001990 142;
    TraceOperation 074903 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b4),142)) {
      Let b5 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b5));
      SetByte 002033 137;
      Let b6 = M[001990];
      SetByte 002034 LoByte(Widen(b6));
      SetByte 001990 142;
      TraceOperation 074903 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Error: unlink/loop
    }
  }
--[485]--------------------------------------------------
LocRoutine 074904:
  MakeRoutineFrame 0;
  Jump: 074905
LocOp 074905:
  TraceOperation 074905 (Je [Var (Global 203),Con 57] (Branch F (Dloc 074913)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 074909 (Print_paddr (Var (Global 48)));
    Let b3 = M[008004];
    Let b4 = M[008005];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 074911 New_line;
    GamePrint "\n";
    TraceOperation 074912 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 074913
  }
LocOp 074913:
  TraceOperation 074913 (Je [Var (Global 203),Con 38,Con 21] (Branch F (Dloc 074944)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),21))) {
    TraceOperation 074919 (Store (Con 229) (Con 11));
    SetByte 008334 0;
    SetByte 008335 11;
    TraceOperation 074922 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame 074922;
    SetLocal 1 -14349;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 074944
  }
LocReturn 074922:
  PushStack call_result;
  TraceOperation 074930 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 074935 (Print_ret "From here?");
  GamePrint "From here?\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 074944:
  TraceOperation 074944 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 074948 (Je [Var (Global 0),Con 121,Con 101,Con 108] (Branch T Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),121),Equal(MakeHiLo(b3,b4),101)),Equal(MakeHiLo(b3,b4),108))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 074955 (Print_ret "The fleet consists of terrifying numbers of huge, ugly, yellow ships, all scarred with the results of many such past demolition jobs. Chicago's John Hancock tower, knocked about a bit and painted yellow, is what they each look like. That is, knocked about a bit, painted yellow, and flying.");
      GamePrint "The fleet consists of terrifying numbers of huge, ugly, yellow ships, all scarred with the results of many such past demolition jobs. Chicago's John Hancock tower, knocked about a bit and painted yellow, is what they each look like. That is, knocked about a bit, painted yellow, and flying.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
--[486]--------------------------------------------------
LocRoutine 075134:
  MakeRoutineFrame 0;
  Jump: 075135
LocOp 075135:
  TraceOperation 075135 (Call (Floc 022340) [Con 29202] Sp);
  PushFrame 075135;
  SetLocal 1 29202;
  JumpCall: 022340, #actuals: 1
LocReturn 075135:
  PushStack call_result;
  TraceOperation 075142 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 075147 (Call (Floc 022340) [Con 30621] Sp);
  PushFrame 075147;
  SetLocal 1 30621;
  JumpCall: 022340, #actuals: 1
LocReturn 075147:
  PushStack call_result;
  TraceOperation 075154 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 075159 (Call (Floc 022340) [Con 31225] Sp);
  PushFrame 075159;
  SetLocal 1 31225;
  JumpCall: 022340, #actuals: 1
LocReturn 075159:
  PushStack call_result;
  TraceOperation 075166 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 075171 (Call (Floc 022340) [Con -32630] Sp);
  PushFrame 075171;
  SetLocal 1 -32630;
  JumpCall: 022340, #actuals: 1
LocReturn 075171:
  PushStack call_result;
  TraceOperation 075178 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 075183 (Call (Floc 022340) [Con -28826] Sp);
  PushFrame 075183;
  SetLocal 1 -28826;
  JumpCall: 022340, #actuals: 1
LocReturn 075183:
  PushStack call_result;
  TraceOperation 075190 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 075195 (Store (Con 160) (Con 0));
  SetByte 008196 0;
  SetByte 008197 0;
  TraceOperation 075198 (Store (Con 158) (Con 0));
  SetByte 008192 0;
  SetByte 008193 0;
  TraceOperation 075201 (Store (Con 156) (Con 0));
  SetByte 008188 0;
  SetByte 008189 0;
  TraceOperation 075204 (Store (Con 155) (Con 0));
  SetByte 008186 0;
  SetByte 008187 0;
  TraceOperation 075207 (Store (Con 153) (Con 0));
  SetByte 008182 0;
  SetByte 008183 0;
  TraceOperation 075210 (Store (Con 146) (Con 0));
  SetByte 008168 0;
  SetByte 008169 0;
  TraceOperation 075213 (Store (Con 161) (Con 0));
  SetByte 008198 0;
  SetByte 008199 0;
  TraceOperation 075216 (Store (Con 141) (Con 0));
  SetByte 008158 0;
  SetByte 008159 0;
  TraceOperation 075219 (Store (Con 138) (Con 1));
  SetByte 008152 0;
  SetByte 008153 1;
  TraceOperation 075222 (Store (Con 136) (Con 123));
  SetByte 008148 0;
  SetByte 008149 123;
  TraceOperation 075225 (Insert_obj (Con 123) (Con 169));
  Let b2 = M[001862];
  if (IsZero(Widen(b2))) {
    SetByte 001862 169;
    Let b3 = M[002278];
    SetByte 001863 LoByte(Widen(b3));
    SetByte 002278 123;
    TraceOperation 075228 (Insert_obj (Con 135) (Con 219));
    Let b4 = M[001970];
    if (IsZero(Widen(b4))) {
      SetByte 001970 219;
      Let b5 = M[002728];
      SetByte 001971 LoByte(Widen(b5));
      SetByte 002728 135;
      TraceOperation 075231 (Insert_obj (Con 124) (Con 219));
      Let b6 = M[001871];
      if (IsZero(Widen(b6))) {
        SetByte 001871 219;
        Let b7 = M[002728];
        SetByte 001872 LoByte(Widen(b7));
        SetByte 002728 124;
        TraceOperation 075234 (Insert_obj (Con 142) (Con 219));
        Let b8 = M[002033];
        if (IsZero(Widen(b8))) {
          SetByte 002033 219;
          Let b9 = M[002728];
          SetByte 002034 LoByte(Widen(b9));
          SetByte 002728 142;
          TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
          PushFrame 075237;
          SetLocal 1 125;
          JumpCall: 043468, #actuals: 1
        } else {
          Let b10 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
          if (Equal(Widen(b10),142)) {
            Let b11 = M[002034];
            SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b11));
            SetByte 002033 219;
            Let b12 = M[002728];
            SetByte 002034 LoByte(Widen(b12));
            SetByte 002728 142;
            TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
            PushFrame 075237;
            SetLocal 1 125;
            JumpCall: 043468, #actuals: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b13 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
        if (Equal(Widen(b13),124)) {
          Let b14 = M[001872];
          SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b14));
          SetByte 001871 219;
          Let b15 = M[002728];
          SetByte 001872 LoByte(Widen(b15));
          SetByte 002728 124;
          TraceOperation 075234 (Insert_obj (Con 142) (Con 219));
          Let b16 = M[002033];
          if (IsZero(Widen(b16))) {
            SetByte 002033 219;
            Let b17 = M[002728];
            SetByte 002034 LoByte(Widen(b17));
            SetByte 002728 142;
            TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
            PushFrame 075237;
            SetLocal 1 125;
            JumpCall: 043468, #actuals: 1
          } else {
            Let b18 = M[Offset(Offset(000751,Mul(Widen(b16),9)),6)];
            if (Equal(Widen(b18),142)) {
              Let b19 = M[002034];
              SetByte Offset(Offset(000751,Mul(Widen(b16),9)),6) LoByte(Widen(b19));
              SetByte 002033 219;
              Let b20 = M[002728];
              SetByte 002034 LoByte(Widen(b20));
              SetByte 002728 142;
              TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
              PushFrame 075237;
              SetLocal 1 125;
              JumpCall: 043468, #actuals: 1
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b21 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b21),135)) {
        Let b22 = M[001971];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b22));
        SetByte 001970 219;
        Let b23 = M[002728];
        SetByte 001971 LoByte(Widen(b23));
        SetByte 002728 135;
        TraceOperation 075231 (Insert_obj (Con 124) (Con 219));
        Let b24 = M[001871];
        if (IsZero(Widen(b24))) {
          SetByte 001871 219;
          Let b25 = M[002728];
          SetByte 001872 LoByte(Widen(b25));
          SetByte 002728 124;
          TraceOperation 075234 (Insert_obj (Con 142) (Con 219));
          Let b26 = M[002033];
          if (IsZero(Widen(b26))) {
            SetByte 002033 219;
            Let b27 = M[002728];
            SetByte 002034 LoByte(Widen(b27));
            SetByte 002728 142;
            TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
            PushFrame 075237;
            SetLocal 1 125;
            JumpCall: 043468, #actuals: 1
          } else {
            Let b28 = M[Offset(Offset(000751,Mul(Widen(b26),9)),6)];
            if (Equal(Widen(b28),142)) {
              Let b29 = M[002034];
              SetByte Offset(Offset(000751,Mul(Widen(b26),9)),6) LoByte(Widen(b29));
              SetByte 002033 219;
              Let b30 = M[002728];
              SetByte 002034 LoByte(Widen(b30));
              SetByte 002728 142;
              TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
              PushFrame 075237;
              SetLocal 1 125;
              JumpCall: 043468, #actuals: 1
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b31 = M[Offset(Offset(000751,Mul(Widen(b24),9)),6)];
          if (Equal(Widen(b31),124)) {
            Let b32 = M[001872];
            SetByte Offset(Offset(000751,Mul(Widen(b24),9)),6) LoByte(Widen(b32));
            SetByte 001871 219;
            Let b33 = M[002728];
            SetByte 001872 LoByte(Widen(b33));
            SetByte 002728 124;
            TraceOperation 075234 (Insert_obj (Con 142) (Con 219));
            Let b34 = M[002033];
            if (IsZero(Widen(b34))) {
              SetByte 002033 219;
              Let b35 = M[002728];
              SetByte 002034 LoByte(Widen(b35));
              SetByte 002728 142;
              TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
              PushFrame 075237;
              SetLocal 1 125;
              JumpCall: 043468, #actuals: 1
            } else {
              Let b36 = M[Offset(Offset(000751,Mul(Widen(b34),9)),6)];
              if (Equal(Widen(b36),142)) {
                Let b37 = M[002034];
                SetByte Offset(Offset(000751,Mul(Widen(b34),9)),6) LoByte(Widen(b37));
                SetByte 002033 219;
                Let b38 = M[002728];
                SetByte 002034 LoByte(Widen(b38));
                SetByte 002728 142;
                TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
                PushFrame 075237;
                SetLocal 1 125;
                JumpCall: 043468, #actuals: 1
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b39 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b39),123)) {
      Let b40 = M[001863];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b40));
      SetByte 001862 169;
      Let b41 = M[002278];
      SetByte 001863 LoByte(Widen(b41));
      SetByte 002278 123;
      TraceOperation 075228 (Insert_obj (Con 135) (Con 219));
      Let b42 = M[001970];
      if (IsZero(Widen(b42))) {
        SetByte 001970 219;
        Let b43 = M[002728];
        SetByte 001971 LoByte(Widen(b43));
        SetByte 002728 135;
        TraceOperation 075231 (Insert_obj (Con 124) (Con 219));
        Let b44 = M[001871];
        if (IsZero(Widen(b44))) {
          SetByte 001871 219;
          Let b45 = M[002728];
          SetByte 001872 LoByte(Widen(b45));
          SetByte 002728 124;
          TraceOperation 075234 (Insert_obj (Con 142) (Con 219));
          Let b46 = M[002033];
          if (IsZero(Widen(b46))) {
            SetByte 002033 219;
            Let b47 = M[002728];
            SetByte 002034 LoByte(Widen(b47));
            SetByte 002728 142;
            TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
            PushFrame 075237;
            SetLocal 1 125;
            JumpCall: 043468, #actuals: 1
          } else {
            Let b48 = M[Offset(Offset(000751,Mul(Widen(b46),9)),6)];
            if (Equal(Widen(b48),142)) {
              Let b49 = M[002034];
              SetByte Offset(Offset(000751,Mul(Widen(b46),9)),6) LoByte(Widen(b49));
              SetByte 002033 219;
              Let b50 = M[002728];
              SetByte 002034 LoByte(Widen(b50));
              SetByte 002728 142;
              TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
              PushFrame 075237;
              SetLocal 1 125;
              JumpCall: 043468, #actuals: 1
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b51 = M[Offset(Offset(000751,Mul(Widen(b44),9)),6)];
          if (Equal(Widen(b51),124)) {
            Let b52 = M[001872];
            SetByte Offset(Offset(000751,Mul(Widen(b44),9)),6) LoByte(Widen(b52));
            SetByte 001871 219;
            Let b53 = M[002728];
            SetByte 001872 LoByte(Widen(b53));
            SetByte 002728 124;
            TraceOperation 075234 (Insert_obj (Con 142) (Con 219));
            Let b54 = M[002033];
            if (IsZero(Widen(b54))) {
              SetByte 002033 219;
              Let b55 = M[002728];
              SetByte 002034 LoByte(Widen(b55));
              SetByte 002728 142;
              TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
              PushFrame 075237;
              SetLocal 1 125;
              JumpCall: 043468, #actuals: 1
            } else {
              Let b56 = M[Offset(Offset(000751,Mul(Widen(b54),9)),6)];
              if (Equal(Widen(b56),142)) {
                Let b57 = M[002034];
                SetByte Offset(Offset(000751,Mul(Widen(b54),9)),6) LoByte(Widen(b57));
                SetByte 002033 219;
                Let b58 = M[002728];
                SetByte 002034 LoByte(Widen(b58));
                SetByte 002728 142;
                TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
                PushFrame 075237;
                SetLocal 1 125;
                JumpCall: 043468, #actuals: 1
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b59 = M[Offset(Offset(000751,Mul(Widen(b42),9)),6)];
        if (Equal(Widen(b59),135)) {
          Let b60 = M[001971];
          SetByte Offset(Offset(000751,Mul(Widen(b42),9)),6) LoByte(Widen(b60));
          SetByte 001970 219;
          Let b61 = M[002728];
          SetByte 001971 LoByte(Widen(b61));
          SetByte 002728 135;
          TraceOperation 075231 (Insert_obj (Con 124) (Con 219));
          Let b62 = M[001871];
          if (IsZero(Widen(b62))) {
            SetByte 001871 219;
            Let b63 = M[002728];
            SetByte 001872 LoByte(Widen(b63));
            SetByte 002728 124;
            TraceOperation 075234 (Insert_obj (Con 142) (Con 219));
            Let b64 = M[002033];
            if (IsZero(Widen(b64))) {
              SetByte 002033 219;
              Let b65 = M[002728];
              SetByte 002034 LoByte(Widen(b65));
              SetByte 002728 142;
              TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
              PushFrame 075237;
              SetLocal 1 125;
              JumpCall: 043468, #actuals: 1
            } else {
              Let b66 = M[Offset(Offset(000751,Mul(Widen(b64),9)),6)];
              if (Equal(Widen(b66),142)) {
                Let b67 = M[002034];
                SetByte Offset(Offset(000751,Mul(Widen(b64),9)),6) LoByte(Widen(b67));
                SetByte 002033 219;
                Let b68 = M[002728];
                SetByte 002034 LoByte(Widen(b68));
                SetByte 002728 142;
                TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
                PushFrame 075237;
                SetLocal 1 125;
                JumpCall: 043468, #actuals: 1
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b69 = M[Offset(Offset(000751,Mul(Widen(b62),9)),6)];
            if (Equal(Widen(b69),124)) {
              Let b70 = M[001872];
              SetByte Offset(Offset(000751,Mul(Widen(b62),9)),6) LoByte(Widen(b70));
              SetByte 001871 219;
              Let b71 = M[002728];
              SetByte 001872 LoByte(Widen(b71));
              SetByte 002728 124;
              TraceOperation 075234 (Insert_obj (Con 142) (Con 219));
              Let b72 = M[002033];
              if (IsZero(Widen(b72))) {
                SetByte 002033 219;
                Let b73 = M[002728];
                SetByte 002034 LoByte(Widen(b73));
                SetByte 002728 142;
                TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
                PushFrame 075237;
                SetLocal 1 125;
                JumpCall: 043468, #actuals: 1
              } else {
                Let b74 = M[Offset(Offset(000751,Mul(Widen(b72),9)),6)];
                if (Equal(Widen(b74),142)) {
                  Let b75 = M[002034];
                  SetByte Offset(Offset(000751,Mul(Widen(b72),9)),6) LoByte(Widen(b75));
                  SetByte 002033 219;
                  Let b76 = M[002728];
                  SetByte 002034 LoByte(Widen(b76));
                  SetByte 002728 142;
                  TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
                  PushFrame 075237;
                  SetLocal 1 125;
                  JumpCall: 043468, #actuals: 1
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 075237:
  PushStack call_result;
  TraceOperation 075243 (Jz (Var Sp) (Branch F (Dloc 075252)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 075246 (Jz (Var (Global 126)) (Branch T (Dloc 075252)));
    Let b2 = M[008160];
    Let b3 = M[008161];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 075252
    } else {
      TraceOperation 075249 (Insert_obj (Con 125) (Con 219));
      Let b4 = M[001880];
      if (IsZero(Widen(b4))) {
        SetByte 001880 219;
        Let b5 = M[002728];
        SetByte 001881 LoByte(Widen(b5));
        SetByte 002728 125;
        Jump: 075252
      } else {
        Let b6 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
        if (Equal(Widen(b6),125)) {
          Let b7 = M[001881];
          SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b7));
          SetByte 001880 219;
          Let b8 = M[002728];
          SetByte 001881 LoByte(Widen(b8));
          SetByte 002728 125;
          Jump: 075252
        } else {
          Error: unlink/loop
        }
      }
    }
  } else {
    Jump: 075252
  }
LocOp 075252:
  TraceOperation 075252 (Set_attr (Con 127) (Con 27));
  Let b1 = M[001897];
  SetByte 001897 SetBit(b1,4);
  TraceOperation 075255 (Clear_attr (Con 145) (Con 5));
  Let b2 = M[002056];
  SetByte 002056 ClearBit(b2,2);
  TraceOperation 075258 (Clear_attr (Con 149) (Con 27));
  Let b3 = M[002095];
  SetByte 002095 ClearBit(b3,4);
  TraceOperation 075261 (Clear_attr (Con 149) (Con 5));
  Let b4 = M[002092];
  SetByte 002092 ClearBit(b4,2);
  TraceOperation 075264 (Clear_attr (Con 137) (Con 5));
  Let b5 = M[001984];
  SetByte 001984 ClearBit(b5,2);
  TraceOperation 075267 Rtrue;
  PopFrame return_address_6;
  JumpReturn: return_address_6, result: 1
--[487]--------------------------------------------------
LocRoutine 075268:
  MakeRoutineFrame 0;
  Jump: 075269
LocOp 075269:
  TraceOperation 075269 (Je [Var (Global 120),Con 123] (Branch F (Dloc 075295)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),123)) {
    TraceOperation 075273 (Je [Con 123,Var (Global 201)] (Branch F (Dloc 075286)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(123,MakeHiLo(b3,b4))) {
      TraceOperation 075277 (Call (Floc 022042) [Var (Global 203),Con 30,Var (Global 202)] Sp);
      Let b5 = M[008314];
      Let b6 = M[008315];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame 075277;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 30;
      SetLocal 3 MakeHiLo(b7,b8);
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 075286
    }
  } else {
    Jump: 075295
  }
LocReturn 075277:
  PushStack call_result;
  TraceOperation 075285 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 075286:
  TraceOperation 075286 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 30] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 075286;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 30;
  JumpCall: 022042, #actuals: 3
LocReturn 075286:
  PushStack call_result;
  TraceOperation 075294 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 075295:
  TraceOperation 075295 (Je [Con 123,Var (Global 195)] (Branch F (Dloc 075436)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(123,MakeHiLo(b1,b2))) {
    TraceOperation 075300 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 075310)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001871];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 075304 (Print_paddr (Var (Global 40)));
      Let b6 = M[007988];
      Let b7 = M[007989];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 075306 New_line;
      GamePrint "\n";
      TraceOperation 075307 (Jump 075430);
      Jump: 075430
    } else {
      Jump: 075310
    }
  } else {
    Jump: 075436
  }
--[488]--------------------------------------------------
LocRoutine 075342:
  MakeRoutineFrame 0;
  Jump: 075343
LocOp 075343:
  TraceOperation 075343 (Mod (Var (Global 208)) (Con 15) (Global 97));
  Let b1 = M[008324];
  Let b2 = M[008325];
  SetByte 008102 HiByte(Mod(MakeHiLo(b1,b2),15));
  SetByte 008103 LoByte(Mod(MakeHiLo(b1,b2),15));
  TraceOperation 075347 (Loadb (Con 212) (Con 157) Sp);
  Let b3 = M[000369];
  PushStack Widen(b3);
  TraceOperation 075351 New_line;
  GamePrint "\n";
  TraceOperation 075352 (Jump 075430);
  Jump: 075430
--[489]--------------------------------------------------
LocRoutine 075376:
  MakeRoutineFrame 0;
  Jump: 075377
LocOp 075377:
  TraceOperation 075377 (Store (Con 211) (Con 123));
  SetByte 008298 0;
  SetByte 008299 123;
  TraceOperation 075380 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[490]--------------------------------------------------
LocRoutine 075398:
  MakeRoutineFrame 0;
  Jump: 075399
LocOp 075399:
  TraceOperation 075399 (Test (Con 69) (Var (Global 54)) (Branch T (Dloc 068412)));
  Let b1 = M[008016];
  Let b2 = M[008017];
  if (Equal(And(69,MakeHiLo(b1,b2)),MakeHiLo(b1,b2))) {
    Jump: 068412
  } else {
    TraceOperation 075404 New_line;
    GamePrint "\n";
    TraceOperation 075405 (Jump 075430);
    Jump: 075430
  }
--[491]--------------------------------------------------
LocRoutine 075420:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 12010;
  }
  Jump: 075423
LocOp 075423:
  TraceOperation 075423 (Jl (Var (Global 164)) (Var (Global 61)) (Branch F (Dloc 068714)));
  Let b1 = M[008236];
  Let b2 = M[008237];
  Let b3 = M[008030];
  Let b4 = M[008031];
  if (LessThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 075428 (Inc (Var (Global 171)));
    Let b5 = M[008250];
    Let b6 = M[008251];
    if (IsZeroByte(b6)) {
      PopStack popped7;
      PushStack Add(popped7,1);
      TraceOperation 075430 (Call (Floc 043634) [] Sp);
      PushFrame 075430;
      JumpCall: 043634, #actuals: 0
    } else {
      if (LessThanByte(b6,16)) {
        SetLocal b6 Add(GetLocal(b6),1);
        TraceOperation 075430 (Call (Floc 043634) [] Sp);
        PushFrame 075430;
        JumpCall: 043634, #actuals: 0
      } else {
        Let b8 = M[Offset(007908,Mul(2,Widen(MinusByte(b6,16))))];
        Let b9 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b6,16)))),1)];
        SetByte Offset(007908,Mul(2,Widen(MinusByte(b6,16)))) HiByte(Add(MakeHiLo(b8,b9),1));
        SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b6,16)))),1) LoByte(Add(MakeHiLo(b8,b9),1));
        TraceOperation 075430 (Call (Floc 043634) [] Sp);
        PushFrame 075430;
        JumpCall: 043634, #actuals: 0
      }
    }
  } else {
    Jump: 068714
  }
LocReturn 075430:
  PushStack call_result;
  TraceOperation 075435 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[492]--------------------------------------------------
LocRoutine 075458:
  MakeRoutineFrame 0;
  Jump: 075459
LocOp 075459:
  TraceOperation 075459 (Jl (Var (Global 144)) (Var (Global 95)) (Branch T (Dloc 075471)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  Let b3 = M[008098];
  Let b4 = M[008099];
  if (LessThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 075471
  } else {
    TraceOperation 075463 (Call (Floc 076828) [] Sp);
    PushFrame 075463;
    JumpCall: 076828, #actuals: 0
  }
LocReturn 075463:
  PushStack call_result;
  TraceOperation 075468 (Jump 075537);
  Jump: 075537
LocOp 075471:
  TraceOperation 075471 (Print "You approach Arthur. He seems to find your tone a little cool, smiles unhappily, and wanders to the other end of the room.");
  GamePrint "You approach Arthur. He seems to find your tone a little cool, smiles unhappily, and wanders to the other end of the room.";
  TraceOperation 075536 New_line;
  GamePrint "\n";
  Jump: 075537
LocOp 075537:
  TraceOperation 075537 (Call (Floc 022320) [Con -27122,Con 2] Sp);
  PushFrame 075537;
  SetLocal 1 -27122;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 075537:
  PushStack call_result;
  TraceOperation 075545 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 075550 (Call (Floc 043634) [] Sp);
  PushFrame 075550;
  JumpCall: 043634, #actuals: 0
LocReturn 075550:
  PushStack call_result;
  TraceOperation 075555 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[493]--------------------------------------------------
LocRoutine 075594:
  MakeRoutineFrame 0;
  Jump: 075595
LocOp 075595:
  TraceOperation 075595 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[494]--------------------------------------------------
LocRoutine 075862:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 848;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -14296;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 29797;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 -16118;
        }
      }
    }
  }
  Jump: 075871
LocOp 075871:
  TraceOperation 075871 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[495]--------------------------------------------------
LocRoutine 075890:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 14162;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 32257;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 -21938;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 -16106;
        }
      }
    }
  }
  Jump: 075899
LocOp 075899:
  TraceOperation 075899 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[496]--------------------------------------------------
LocRoutine 075956:
  MakeRoutineFrame 0;
  Jump: 075957
LocOp 075957:
  TraceOperation 075957 (Jz (Var Sp) (Branch T (Dloc 075996)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075996
  } else {
    TraceOperation 075960 (Print "Thank you. An idiot is exactly what you feel like.");
    GamePrint "Thank you. An idiot is exactly what you feel like.";
    TraceOperation 075993 (Jump 076035);
    Jump: 076035
  }
LocOp 075996:
  TraceOperation 075996 (Print "No, actually, \"idiot\" was the word I was looking for.");
  GamePrint "No, actually, \"idiot\" was the word I was looking for.";
  Jump: 076035
LocOp 076035:
  TraceOperation 076035 New_line;
  GamePrint "\n";
  TraceOperation 076036 New_line;
  GamePrint "\n";
  TraceOperation 076037 (Print "In a reckless moment you go completely mad and decide that you ought to take Arthur with you. You try to tell Arthur about the importance of getting a drink, but he's rambling on about a man called Prosser.");
  GamePrint "In a reckless moment you go completely mad and decide that you ought to take Arthur with you. You try to tell Arthur about the importance of getting a drink, but he's rambling on about a man called Prosser.";
  TraceOperation 076152 New_line;
  GamePrint "\n";
  TraceOperation 076153 (Ret (Con 2));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 2
--[497]--------------------------------------------------
LocRoutine 076234:
  MakeRoutineFrame 0;
  Jump: 076235
LocOp 076235:
  TraceOperation 076235 (Insert_obj (Var (Global 49)) (Var (Global 201)));
  Let b1 = M[008006];
  Let b2 = M[008007];
  Let b3 = M[008310];
  Let b4 = M[008311];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 076238 (Jump 076344);
    Jump: 076344
  } else {
    Let b7 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b7),MakeHiLo(b1,b2))) {
      Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b8));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b9));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 076238 (Jump 076344);
      Jump: 076344
    } else {
      Error: unlink/loop
    }
  }
--[498]--------------------------------------------------
LocRoutine 076330:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 14138;
  }
  Jump: 076333
LocOp 076333:
  TraceOperation 076333 (Loadb (Var (Global 80)) (Var (Local 1)) (Global 57));
  Let b1 = M[008068];
  Let b2 = M[008069];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),GetLocal(1))];
  SetByte 008022 HiByte(Widen(b3));
  SetByte 008023 LoByte(Widen(b3));
  TraceOperation 076337 (Load (Var (Global 56)) (Global 162));
  Let b4 = M[008020];
  Let b5 = M[008021];
  if (IsZeroByte(b5)) {
    PopStack popped6;
    PushStack popped6;
    SetByte 008232 HiByte(popped6);
    SetByte 008233 LoByte(popped6);
    TraceOperation 076340 (Mul (Con 69) (Con 200) (Global 149));
    SetByte 008206 53;
    SetByte 008207 232;
    TraceOperation 076344 (Je [Var (Global 203),Con 61] (Branch F (Dloc 076502)));
    Let b7 = M[008314];
    Let b8 = M[008315];
    if (Equal(MakeHiLo(b7,b8),61)) {
      TraceOperation 076349 (Je [Var (Global 120),Con 194] (Branch F (Dloc 076502)));
      Let b9 = M[008148];
      Let b10 = M[008149];
      if (Equal(MakeHiLo(b9,b10),194)) {
        TraceOperation 076354 (Print "Arthur seems nice and well meaning, but also terribly shy.");
        GamePrint "Arthur seems nice and well meaning, but also terribly shy.";
        TraceOperation 076387 (Jz (Var (Global 95)) (Branch F (Dloc 076500)));
        Let b11 = M[008098];
        Let b12 = M[008099];
        if (IsZero(MakeHiLo(b11,b12))) {
          TraceOperation 076391 (Insert_obj (Con 69) (Var (Global 0)));
          Let b13 = M[007908];
          Let b14 = M[007909];
          Let b15 = M[001376];
          if (IsZero(Widen(b15))) {
            SetByte 001376 b14;
            Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6)];
            SetByte 001377 LoByte(Widen(b16));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6) 69;
            TraceOperation 076394 (Call (Floc 022320) [Con -27122,Con -1] Sp);
            PushFrame 076394;
            SetLocal 1 -27122;
            SetLocal 2 -1;
            JumpCall: 022320, #actuals: 2
          } else {
            Let b17 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
            if (Equal(Widen(b17),69)) {
              Let b18 = M[001377];
              SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b18));
              SetByte 001376 b14;
              Let b19 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6)];
              SetByte 001377 LoByte(Widen(b19));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6) 69;
              TraceOperation 076394 (Call (Floc 022320) [Con -27122,Con -1] Sp);
              PushFrame 076394;
              SetLocal 1 -27122;
              SetLocal 2 -1;
              JumpCall: 022320, #actuals: 2
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Jump: 076500
        }
      } else {
        Jump: 076502
      }
    } else {
      Jump: 076502
    }
  } else {
    if (LessThanByte(b5,16)) {
      SetByte 008232 HiByte(GetLocal(b5));
      SetByte 008233 LoByte(GetLocal(b5));
      TraceOperation 076340 (Mul (Con 69) (Con 200) (Global 149));
      SetByte 008206 53;
      SetByte 008207 232;
      TraceOperation 076344 (Je [Var (Global 203),Con 61] (Branch F (Dloc 076502)));
      Let b20 = M[008314];
      Let b21 = M[008315];
      if (Equal(MakeHiLo(b20,b21),61)) {
        TraceOperation 076349 (Je [Var (Global 120),Con 194] (Branch F (Dloc 076502)));
        Let b22 = M[008148];
        Let b23 = M[008149];
        if (Equal(MakeHiLo(b22,b23),194)) {
          TraceOperation 076354 (Print "Arthur seems nice and well meaning, but also terribly shy.");
          GamePrint "Arthur seems nice and well meaning, but also terribly shy.";
          TraceOperation 076387 (Jz (Var (Global 95)) (Branch F (Dloc 076500)));
          Let b24 = M[008098];
          Let b25 = M[008099];
          if (IsZero(MakeHiLo(b24,b25))) {
            TraceOperation 076391 (Insert_obj (Con 69) (Var (Global 0)));
            Let b26 = M[007908];
            Let b27 = M[007909];
            Let b28 = M[001376];
            if (IsZero(Widen(b28))) {
              SetByte 001376 b27;
              Let b29 = M[Offset(Offset(000751,Mul(MakeHiLo(b26,b27),9)),6)];
              SetByte 001377 LoByte(Widen(b29));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b26,b27),9)),6) 69;
              TraceOperation 076394 (Call (Floc 022320) [Con -27122,Con -1] Sp);
              PushFrame 076394;
              SetLocal 1 -27122;
              SetLocal 2 -1;
              JumpCall: 022320, #actuals: 2
            } else {
              Let b30 = M[Offset(Offset(000751,Mul(Widen(b28),9)),6)];
              if (Equal(Widen(b30),69)) {
                Let b31 = M[001377];
                SetByte Offset(Offset(000751,Mul(Widen(b28),9)),6) LoByte(Widen(b31));
                SetByte 001376 b27;
                Let b32 = M[Offset(Offset(000751,Mul(MakeHiLo(b26,b27),9)),6)];
                SetByte 001377 LoByte(Widen(b32));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b26,b27),9)),6) 69;
                TraceOperation 076394 (Call (Floc 022320) [Con -27122,Con -1] Sp);
                PushFrame 076394;
                SetLocal 1 -27122;
                SetLocal 2 -1;
                JumpCall: 022320, #actuals: 2
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Jump: 076500
          }
        } else {
          Jump: 076502
        }
      } else {
        Jump: 076502
      }
    } else {
      Let b33 = M[Offset(007908,Mul(2,Widen(MinusByte(b5,16))))];
      Let b34 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b5,16)))),1)];
      SetByte 008232 b33;
      SetByte 008233 b34;
      TraceOperation 076340 (Mul (Con 69) (Con 200) (Global 149));
      SetByte 008206 53;
      SetByte 008207 232;
      TraceOperation 076344 (Je [Var (Global 203),Con 61] (Branch F (Dloc 076502)));
      Let b35 = M[008314];
      Let b36 = M[008315];
      if (Equal(MakeHiLo(b35,b36),61)) {
        TraceOperation 076349 (Je [Var (Global 120),Con 194] (Branch F (Dloc 076502)));
        Let b37 = M[008148];
        Let b38 = M[008149];
        if (Equal(MakeHiLo(b37,b38),194)) {
          TraceOperation 076354 (Print "Arthur seems nice and well meaning, but also terribly shy.");
          GamePrint "Arthur seems nice and well meaning, but also terribly shy.";
          TraceOperation 076387 (Jz (Var (Global 95)) (Branch F (Dloc 076500)));
          Let b39 = M[008098];
          Let b40 = M[008099];
          if (IsZero(MakeHiLo(b39,b40))) {
            TraceOperation 076391 (Insert_obj (Con 69) (Var (Global 0)));
            Let b41 = M[007908];
            Let b42 = M[007909];
            Let b43 = M[001376];
            if (IsZero(Widen(b43))) {
              SetByte 001376 b42;
              Let b44 = M[Offset(Offset(000751,Mul(MakeHiLo(b41,b42),9)),6)];
              SetByte 001377 LoByte(Widen(b44));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b41,b42),9)),6) 69;
              TraceOperation 076394 (Call (Floc 022320) [Con -27122,Con -1] Sp);
              PushFrame 076394;
              SetLocal 1 -27122;
              SetLocal 2 -1;
              JumpCall: 022320, #actuals: 2
            } else {
              Let b45 = M[Offset(Offset(000751,Mul(Widen(b43),9)),6)];
              if (Equal(Widen(b45),69)) {
                Let b46 = M[001377];
                SetByte Offset(Offset(000751,Mul(Widen(b43),9)),6) LoByte(Widen(b46));
                SetByte 001376 b42;
                Let b47 = M[Offset(Offset(000751,Mul(MakeHiLo(b41,b42),9)),6)];
                SetByte 001377 LoByte(Widen(b47));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b41,b42),9)),6) 69;
                TraceOperation 076394 (Call (Floc 022320) [Con -27122,Con -1] Sp);
                PushFrame 076394;
                SetLocal 1 -27122;
                SetLocal 2 -1;
                JumpCall: 022320, #actuals: 2
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Jump: 076500
          }
        } else {
          Jump: 076502
        }
      } else {
        Jump: 076502
      }
    }
  }
LocReturn 076394:
  PushStack call_result;
  TraceOperation 076403 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 076408 (Print " He has tried to start a ");
  GamePrint " He has tried to start a ";
  TraceOperation 076423 (Print_obj (Con 148));
  Let b2 = M[002090];
  Let b3 = M[002091];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 076425 (Print " with you several times, but still hasn't gotten past \"Hello.\" He has an enormous, unsightly ball of fluff on his jacket.");
    GamePrint " with you several times, but still hasn't gotten past \"Hello.\" He has an enormous, unsightly ball of fluff on his jacket.";
    Jump: 076500
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 076425 (Print " with you several times, but still hasn't gotten past \"Hello.\" He has an enormous, unsightly ball of fluff on his jacket.");
    GamePrint " with you several times, but still hasn't gotten past \"Hello.\" He has an enormous, unsightly ball of fluff on his jacket.";
    Jump: 076500
  }
LocOp 076500:
  TraceOperation 076500 New_line;
  GamePrint "\n";
  TraceOperation 076501 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 076502:
  TraceOperation 076502 (Je [Var (Global 203),Con 69] (Branch F (Dloc 076517)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 076506 (Je [Var (Global 151),Con 4] (Branch F (Dloc 076517)));
    Let b3 = M[008210];
    Let b4 = M[008211];
    if (Equal(MakeHiLo(b3,b4),4)) {
      TraceOperation 076510 (Call (Floc 043620) [Con 27] Sp);
      PushFrame 076510;
      SetLocal 1 27;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 076517
    }
  } else {
    Jump: 076517
  }
LocReturn 076510:
  PushStack call_result;
  TraceOperation 076516 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 076517:
  TraceOperation 076517 (Je [Var (Global 203),Con 108] (Branch F (Dloc 076533)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 076521 (Je [Var (Global 120),Con 194] (Branch F (Dloc 076533)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),194)) {
      TraceOperation 076525 (Call (Floc 022042) [Con 108,Con 195] Sp);
      PushFrame 076525;
      SetLocal 1 108;
      SetLocal 2 195;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 076533
    }
  } else {
    Jump: 076533
  }
LocReturn 076525:
  PushStack call_result;
  TraceOperation 076532 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 076533:
  TraceOperation 076533 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 076537 (Je [Var (Global 120),Con 194] (Branch F Dfalse));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),194)) {
      TraceOperation 076541 (Jz (Var (Global 95)) (Branch T Dfalse));
      Let b5 = M[008098];
      Let b6 = M[008099];
      if (IsZero(MakeHiLo(b5,b6))) {
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      } else {
        TraceOperation 076544 (Print_ret "Unfortunately, you seem to have no choice.");
        GamePrint "Unfortunately, you seem to have no choice.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      }
    } else {
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 0
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
--[499]--------------------------------------------------
LocRoutine 076564:
  MakeRoutineFrame 0;
  Jump: 076565
LocOp 076565:
  TraceOperation 076565 New_line;
  GamePrint "\n";
  TraceOperation 076566 New_line;
  GamePrint "\n";
  TraceOperation 076567 (Print ">");
  GamePrint ">";
  TraceOperation 076572 (Sread (Var (Global 193)) (Var (Global 194)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    Let b6 = M[007910];
    Let b7 = M[007911];
    Let b8 = M[007912];
    Let b9 = M[007913];
    ReadInputFromUser (Just (StatusInfo {room = "", score = MakeHiLo(b6,b7), turns = MakeHiLo(b8,b9)})) user_command_line_10;
    Let b11 = M[008294];
    Let b12 = M[008295];
    Let b13 = M[008296];
    Let b14 = M[008297];
    Tokenize user_command_line_10 (num_tokens_15,position_words_16,canonicalized17);
    StringBytes canonicalized17 string_bytes_18;
    ForeachB: (index19,byte20) in (string_bytes_18) {
      SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),1),index19) byte20;
    }
    SetByte Offset(Address(MakeHiLo(b13,b14)),1) num_tokens_15;
    ForeachB: (index21,pos22,word23) in (position_words_16) {
      Let lookee24 = LookupInDict(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),0) HiByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),1) LoByte(DeAddress(lookee24));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),2) StringLength(word23);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b13,b14)),2),Mul(4,index21)),3) pos22;
    }
    TraceOperation 076576 (Loadw (Var (Global 194)) (Con 1) Sp);
    Let b25 = M[008296];
    Let b26 = M[008297];
    Let b27 = M[Offset(Address(MakeHiLo(b25,b26)),2)];
    Let b28 = M[Offset(Offset(Address(MakeHiLo(b25,b26)),2),1)];
    PushStack MakeHiLo(b27,b28);
    TraceOperation 076580 (Je [Var Sp,Con 16444] (Branch F Dfalse));
    PopStack popped29;
    if (Equal(popped29,16444)) {
      TraceOperation 076586 Rtrue;
      PopFrame return_address_30;
      JumpReturn: return_address_30, result: 1
    } else {
      PopFrame return_address_31;
      JumpReturn: return_address_31, result: 0
    }
  } else {
    Let b32 = M[007910];
    Let b33 = M[007911];
    Let b34 = M[007912];
    Let b35 = M[007913];
    ReadInputFromUser (Just (StatusInfo {room = GetText(Offset(Address(MakeHiLo(b3,b4)),1)), score = MakeHiLo(b32,b33), turns = MakeHiLo(b34,b35)})) user_command_line_36;
    Let b37 = M[008294];
    Let b38 = M[008295];
    Let b39 = M[008296];
    Let b40 = M[008297];
    Tokenize user_command_line_36 (num_tokens_41,position_words_42,canonicalized43);
    StringBytes canonicalized43 string_bytes_44;
    ForeachB: (index45,byte46) in (string_bytes_44) {
      SetByte Offset(Offset(Address(MakeHiLo(b37,b38)),1),index45) byte46;
    }
    SetByte Offset(Address(MakeHiLo(b39,b40)),1) num_tokens_41;
    ForeachB: (index47,pos48,word49) in (position_words_42) {
      Let lookee50 = LookupInDict(word49);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),0) HiByte(DeAddress(lookee50));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),1) LoByte(DeAddress(lookee50));
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),2) StringLength(word49);
      SetByte Offset(Offset(Offset(Address(MakeHiLo(b39,b40)),2),Mul(4,index47)),3) pos48;
    }
    TraceOperation 076576 (Loadw (Var (Global 194)) (Con 1) Sp);
    Let b51 = M[008296];
    Let b52 = M[008297];
    Let b53 = M[Offset(Address(MakeHiLo(b51,b52)),2)];
    Let b54 = M[Offset(Offset(Address(MakeHiLo(b51,b52)),2),1)];
    PushStack MakeHiLo(b53,b54);
    TraceOperation 076580 (Je [Var Sp,Con 16444] (Branch F Dfalse));
    PopStack popped55;
    if (Equal(popped55,16444)) {
      TraceOperation 076586 Rtrue;
      PopFrame return_address_56;
      JumpReturn: return_address_56, result: 1
    } else {
      PopFrame return_address_57;
      JumpReturn: return_address_57, result: 0
    }
  }
--[500]--------------------------------------------------
LocRoutine 076588:
  MakeRoutineFrame 0;
  Jump: 076589
LocOp 076589:
  TraceOperation 076589 (Inc (Con 137));
  Let b1 = M[008150];
  Let b2 = M[008151];
  SetByte 008150 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008151 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 076591 (Je [Var (Global 0),Con 134] (Branch T (Dloc 076608)));
  Let b3 = M[007908];
  Let b4 = M[007909];
  if (Equal(MakeHiLo(b3,b4),134)) {
    Jump: 076608
  } else {
    TraceOperation 076595 (Call (Floc 022340) [Con -27242] Sp);
    PushFrame 076595;
    SetLocal 1 -27242;
    JumpCall: 022340, #actuals: 1
  }
LocReturn 076595:
  PushStack call_result;
  TraceOperation 076602 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 076607 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 076608:
  TraceOperation 076608 New_line;
  GamePrint "\n";
  TraceOperation 076609 (Je [Var (Global 121),Con 1] (Branch F (Dloc 076628)));
  Let b1 = M[008150];
  Let b2 = M[008151];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 076613 (Print_ret "You feel uneasy about something.");
    GamePrint "You feel uneasy about something.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 076628
  }
LocOp 076628:
  TraceOperation 076628 (Je [Var (Global 121),Con 2,Con 3,Con 4] (Branch F (Dloc 076650)));
  Let b1 = M[008150];
  Let b2 = M[008151];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),2),Equal(MakeHiLo(b1,b2),3)),Equal(MakeHiLo(b1,b2),4))) {
    TraceOperation 076635 (Print_ret "You still feel uneasy.");
    GamePrint "You still feel uneasy.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 076650
  }
LocOp 076650:
  TraceOperation 076650 (Print "The sense of uneasiness you've been so busy ignoring now utterly engulfs you, as you realise that you've broken the fundamental rule of time travel: \"Do as you would have done by.\" The rational foundation of the Universe crashes and within a few seconds the whole of creation ceases ever to have exis");
  GamePrint "The sense of uneasiness you've been so busy ignoring now utterly engulfs you, as you realise that you've broken the fundamental rule of time travel: \"Do as you would have done by.\" The rational foundation of the Universe crashes and within a few seconds the whole of creation ceases ever to have exis";
  TraceOperation 076823 New_line;
  GamePrint "\n";
  TraceOperation 076824 New_line;
  GamePrint "\n";
  TraceOperation 076825 New_line;
  GamePrint "\n";
  TraceOperation 076826 Quit;
  Quit
--[501]--------------------------------------------------
LocRoutine 076828:
  MakeRoutineFrame 0;
  Jump: 076829
LocOp 076829:
  TraceOperation 076829 (Call (Floc 022320) [Con -27122,Con -1] Sp);
  PushFrame 076829;
  SetLocal 1 -27122;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 076829:
  PushStack call_result;
  TraceOperation 076838 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 076843 (Je [Var (Global 120),Con 194] (Branch F (Dloc 077022)));
  Let b2 = M[008148];
  Let b3 = M[008149];
  if (Equal(MakeHiLo(b2,b3),194)) {
    TraceOperation 076848 (Jz (Var (Global 95)) (Branch T (Dloc 076926)));
    Let b4 = M[008098];
    Let b5 = M[008099];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 076926
    } else {
      TraceOperation 076852 New_line;
      GamePrint "\n";
      TraceOperation 076853 (Jin (Con 123) (Var (Global 0)) (Branch T (Dloc 076881)));
      Let b6 = M[007908];
      Let b7 = M[007909];
      Let b8 = M[001862];
      if (Equal(MakeHiLo(b6,b7),Widen(b8))) {
        Jump: 076881
      } else {
        TraceOperation 076857 (Insert_obj (Con 123) (Var (Global 0)));
        Let b9 = M[007908];
        Let b10 = M[007909];
        Let b11 = M[001862];
        if (IsZero(Widen(b11))) {
          SetByte 001862 b10;
          Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6)];
          SetByte 001863 LoByte(Widen(b12));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6) 123;
          TraceOperation 076860 (Print_ret "Arthur follows you like an eager puppy.");
          GamePrint "Arthur follows you like an eager puppy.\n";
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 1
        } else {
          Let b14 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
          if (Equal(Widen(b14),123)) {
            Let b15 = M[001863];
            SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b15));
            SetByte 001862 b10;
            Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6)];
            SetByte 001863 LoByte(Widen(b16));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6) 123;
            TraceOperation 076860 (Print_ret "Arthur follows you like an eager puppy.");
            GamePrint "Arthur follows you like an eager puppy.\n";
            PopFrame return_address_17;
            JumpReturn: return_address_17, result: 1
          } else {
            Error: unlink/loop
          }
        }
      }
    }
  } else {
    Jump: 077022
  }
--[502]--------------------------------------------------
LocRoutine 077012:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 21284;
  }
  Jump: 077015
LocOp 077015:
  TraceOperation 077015 (Je [Con 36,Con 32] (Branch F (Dloc 077047)));
  Jump: 077047
--[503]--------------------------------------------------
LocRoutine 077040:
  MakeRoutineFrame 0;
  Jump: 077041
LocOp 077041:
  TraceOperation 077041 (Insert_obj (Con 123) (Con 149));
  Let b1 = M[001862];
  if (IsZero(Widen(b1))) {
    SetByte 001862 149;
    Let b2 = M[002098];
    SetByte 001863 LoByte(Widen(b2));
    SetByte 002098 123;
    TraceOperation 077044 (Call (Floc 022340) [Con -27122] Sp);
    PushFrame 077044;
    SetLocal 1 -27122;
    JumpCall: 022340, #actuals: 1
  } else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b3),123)) {
      Let b4 = M[001863];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b4));
      SetByte 001862 149;
      Let b5 = M[002098];
      SetByte 001863 LoByte(Widen(b5));
      SetByte 002098 123;
      TraceOperation 077044 (Call (Floc 022340) [Con -27122] Sp);
      PushFrame 077044;
      SetLocal 1 -27122;
      JumpCall: 022340, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 077044:
  PushStack call_result;
  TraceOperation 077051 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 077056 (Store (Con 161) (Con 1));
  SetByte 008198 0;
  SetByte 008199 1;
  TraceOperation 077059 (Store (Con 155) (Con 0));
  SetByte 008186 0;
  SetByte 008187 0;
  TraceOperation 077062 (Store (Con 167) (Con 4));
  SetByte 008210 0;
  SetByte 008211 4;
  TraceOperation 077065 (Call (Floc 022320) [Con 16277,Con 2] Sp);
  PushFrame 077065;
  SetLocal 1 16277;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 077065:
  PushStack call_result;
  TraceOperation 077073 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077078 (Print " You hear a muffled crash. It's probably Arthur's little house getting knocked down, which you tell him. This DOES upset him, and he tears out the door.\n\nThrough the window, you see him running up the lane. A small dog chases after him, yapping, ");
  GamePrint " You hear a muffled crash. It's probably Arthur's little house getting knocked down, which you tell him. This DOES upset him, and he tears out the door.\n\nThrough the window, you see him running up the lane. A small dog chases after him, yapping, ";
  TraceOperation 077219 (Jz (Var (Global 128)) (Branch F (Dloc 077226)));
  Let b2 = M[008164];
  Let b3 = M[008165];
  if (IsZero(MakeHiLo(b2,b3))) {
    TraceOperation 077222 (Jin (Con 125) (Con 123) (Branch F (Dloc 077267)));
    Let b4 = M[001880];
    if (Equal(123,Widen(b4))) {
      Jump: 077226
    } else {
      Jump: 077267
    }
  } else {
    Jump: 077226
  }
LocOp 077226:
  TraceOperation 077226 (Store (Con 144) (Con 1));
  SetByte 008164 0;
  SetByte 008165 1;
  TraceOperation 077229 (Print "and he throws it a ");
  GamePrint "and he throws it a ";
  TraceOperation 077242 (Print_obj (Con 125));
  Let b1 = M[001883];
  Let b2 = M[001884];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 077244 (Print ". The dog devours the sandwich");
    GamePrint ". The dog devours the sandwich";
    TraceOperation 077263 (Print_paddr (Var (Global 23)));
    Let b4 = M[007954];
    Let b5 = M[007955];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 077265 New_line;
    GamePrint "\n";
    TraceOperation 077266 Rtrue;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 077244 (Print ". The dog devours the sandwich");
    GamePrint ". The dog devours the sandwich";
    TraceOperation 077263 (Print_paddr (Var (Global 23)));
    Let b7 = M[007954];
    Let b8 = M[007955];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 077265 New_line;
    GamePrint "\n";
    TraceOperation 077266 Rtrue;
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  }
--[504]--------------------------------------------------
LocRoutine 077298:
  MakeRoutineFrame 0;
  Jump: 077299
LocOp 077299:
  TraceOperation 077299 (Je [Var (Global 203),Con 52,Con 51] (Branch F (Dloc 077391)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),52),Equal(MakeHiLo(b1,b2),51))) {
    TraceOperation 077306 (Print_ret "Bad idea. Even Santraginus Five seawater is illegal on most planets. (You can imagine what kind of beach communities they have.)");
    GamePrint "Bad idea. Even Santraginus Five seawater is illegal on most planets. (You can imagine what kind of beach communities they have.)\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 077391
  }
LocOp 077391:
  TraceOperation 077391 (Je [Var (Global 203),Con 63] (Branch F (Dloc 077403)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 077395 (Call (Floc 022042) [Con 61,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 077395;
    SetLocal 1 61;
    SetLocal 2 MakeHiLo(b3,b4);
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 077403
  }
LocReturn 077395:
  PushStack call_result;
  TraceOperation 077402 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 077403:
  TraceOperation 077403 (Je [Var (Global 203),Con 39,Con 103] (Branch F (Dloc 077450)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 077409 (Print_ret "This is one of those clever new always-open always-closed bottles.");
    GamePrint "This is one of those clever new always-open always-closed bottles.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 077450
  }
LocOp 077450:
  TraceOperation 077450 (Je [Var (Global 203),Con 154,Con 112] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),112))) {
    TraceOperation 077456 (Call (Floc 049650) [] Sp);
    PushFrame 077456;
    JumpCall: 049650, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 077456:
  PushStack call_result;
  TraceOperation 077461 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[505]--------------------------------------------------
LocRoutine 077462:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 077465
LocOp 077465:
  TraceOperation 077465 (Je [Var (Local 1),Con 6] (Branch F (Dloc 077651)));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 077470 (Test_attr (Con 121) (Con 27) (Branch T (Dloc 077651)));
    Let b1 = M[001843];
    if (TestBit(b1,4)) {
      Jump: 077651
    } else {
      TraceOperation 077475 (Set_attr (Con 121) (Con 27));
      Let b2 = M[001843];
      SetByte 001843 SetBit(b2,4);
      TraceOperation 077478 (Set_attr (Con 126) (Con 25));
      Let b3 = M[001888];
      SetByte 001888 SetBit(b3,6);
      TraceOperation 077481 (Clear_attr (Con 126) (Con 27));
      Let b4 = M[001888];
      SetByte 001888 ClearBit(b4,4);
      TraceOperation 077484 (Clear_attr (Con 126) (Con 21));
      Let b5 = M[001887];
      SetByte 001887 ClearBit(b5,2);
      TraceOperation 077487 (Insert_obj (Con 126) (Con 31));
      Let b6 = M[001889];
      if (IsZero(Widen(b6))) {
        SetByte 001889 31;
        Let b7 = M[001036];
        SetByte 001890 LoByte(Widen(b7));
        SetByte 001036 126;
        TraceOperation 077490 (Insert_obj (Con 142) (Var (Global 0)));
        Let b8 = M[007908];
        Let b9 = M[007909];
        Let b10 = M[002033];
        if (IsZero(Widen(b10))) {
          SetByte 002033 b9;
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6)];
          SetByte 002034 LoByte(Widen(b11));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6) 142;
          TraceOperation 077493 (Insert_obj (Con 122) (Con 142));
          Let b12 = M[001853];
          if (IsZero(Widen(b12))) {
            SetByte 001853 142;
            Let b13 = M[002035];
            SetByte 001854 LoByte(Widen(b13));
            SetByte 002035 122;
            TraceOperation 077496 (Store (Con 87) (Con 1));
            SetByte 008050 0;
            SetByte 008051 1;
            TraceOperation 077499 (Call (Floc 022320) [Con -26581,Con 3] Sp);
            PushFrame 077499;
            SetLocal 1 -26581;
            SetLocal 2 3;
            JumpCall: 022320, #actuals: 2
          } else {
            Let b14 = M[Offset(Offset(000751,Mul(Widen(b12),9)),6)];
            if (Equal(Widen(b14),122)) {
              Let b15 = M[001854];
              SetByte Offset(Offset(000751,Mul(Widen(b12),9)),6) LoByte(Widen(b15));
              SetByte 001853 142;
              Let b16 = M[002035];
              SetByte 001854 LoByte(Widen(b16));
              SetByte 002035 122;
              TraceOperation 077496 (Store (Con 87) (Con 1));
              SetByte 008050 0;
              SetByte 008051 1;
              TraceOperation 077499 (Call (Floc 022320) [Con -26581,Con 3] Sp);
              PushFrame 077499;
              SetLocal 1 -26581;
              SetLocal 2 3;
              JumpCall: 022320, #actuals: 2
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b17 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
          if (Equal(Widen(b17),142)) {
            Let b18 = M[002034];
            SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b18));
            SetByte 002033 b9;
            Let b19 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6)];
            SetByte 002034 LoByte(Widen(b19));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6) 142;
            TraceOperation 077493 (Insert_obj (Con 122) (Con 142));
            Let b20 = M[001853];
            if (IsZero(Widen(b20))) {
              SetByte 001853 142;
              Let b21 = M[002035];
              SetByte 001854 LoByte(Widen(b21));
              SetByte 002035 122;
              TraceOperation 077496 (Store (Con 87) (Con 1));
              SetByte 008050 0;
              SetByte 008051 1;
              TraceOperation 077499 (Call (Floc 022320) [Con -26581,Con 3] Sp);
              PushFrame 077499;
              SetLocal 1 -26581;
              SetLocal 2 3;
              JumpCall: 022320, #actuals: 2
            } else {
              Let b22 = M[Offset(Offset(000751,Mul(Widen(b20),9)),6)];
              if (Equal(Widen(b22),122)) {
                Let b23 = M[001854];
                SetByte Offset(Offset(000751,Mul(Widen(b20),9)),6) LoByte(Widen(b23));
                SetByte 001853 142;
                Let b24 = M[002035];
                SetByte 001854 LoByte(Widen(b24));
                SetByte 002035 122;
                TraceOperation 077496 (Store (Con 87) (Con 1));
                SetByte 008050 0;
                SetByte 008051 1;
                TraceOperation 077499 (Call (Floc 022320) [Con -26581,Con 3] Sp);
                PushFrame 077499;
                SetLocal 1 -26581;
                SetLocal 2 3;
                JumpCall: 022320, #actuals: 2
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b25 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
        if (Equal(Widen(b25),126)) {
          Let b26 = M[001890];
          SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b26));
          SetByte 001889 31;
          Let b27 = M[001036];
          SetByte 001890 LoByte(Widen(b27));
          SetByte 001036 126;
          TraceOperation 077490 (Insert_obj (Con 142) (Var (Global 0)));
          Let b28 = M[007908];
          Let b29 = M[007909];
          Let b30 = M[002033];
          if (IsZero(Widen(b30))) {
            SetByte 002033 b29;
            Let b31 = M[Offset(Offset(000751,Mul(MakeHiLo(b28,b29),9)),6)];
            SetByte 002034 LoByte(Widen(b31));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b28,b29),9)),6) 142;
            TraceOperation 077493 (Insert_obj (Con 122) (Con 142));
            Let b32 = M[001853];
            if (IsZero(Widen(b32))) {
              SetByte 001853 142;
              Let b33 = M[002035];
              SetByte 001854 LoByte(Widen(b33));
              SetByte 002035 122;
              TraceOperation 077496 (Store (Con 87) (Con 1));
              SetByte 008050 0;
              SetByte 008051 1;
              TraceOperation 077499 (Call (Floc 022320) [Con -26581,Con 3] Sp);
              PushFrame 077499;
              SetLocal 1 -26581;
              SetLocal 2 3;
              JumpCall: 022320, #actuals: 2
            } else {
              Let b34 = M[Offset(Offset(000751,Mul(Widen(b32),9)),6)];
              if (Equal(Widen(b34),122)) {
                Let b35 = M[001854];
                SetByte Offset(Offset(000751,Mul(Widen(b32),9)),6) LoByte(Widen(b35));
                SetByte 001853 142;
                Let b36 = M[002035];
                SetByte 001854 LoByte(Widen(b36));
                SetByte 002035 122;
                TraceOperation 077496 (Store (Con 87) (Con 1));
                SetByte 008050 0;
                SetByte 008051 1;
                TraceOperation 077499 (Call (Floc 022320) [Con -26581,Con 3] Sp);
                PushFrame 077499;
                SetLocal 1 -26581;
                SetLocal 2 3;
                JumpCall: 022320, #actuals: 2
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b37 = M[Offset(Offset(000751,Mul(Widen(b30),9)),6)];
            if (Equal(Widen(b37),142)) {
              Let b38 = M[002034];
              SetByte Offset(Offset(000751,Mul(Widen(b30),9)),6) LoByte(Widen(b38));
              SetByte 002033 b29;
              Let b39 = M[Offset(Offset(000751,Mul(MakeHiLo(b28,b29),9)),6)];
              SetByte 002034 LoByte(Widen(b39));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b28,b29),9)),6) 142;
              TraceOperation 077493 (Insert_obj (Con 122) (Con 142));
              Let b40 = M[001853];
              if (IsZero(Widen(b40))) {
                SetByte 001853 142;
                Let b41 = M[002035];
                SetByte 001854 LoByte(Widen(b41));
                SetByte 002035 122;
                TraceOperation 077496 (Store (Con 87) (Con 1));
                SetByte 008050 0;
                SetByte 008051 1;
                TraceOperation 077499 (Call (Floc 022320) [Con -26581,Con 3] Sp);
                PushFrame 077499;
                SetLocal 1 -26581;
                SetLocal 2 3;
                JumpCall: 022320, #actuals: 2
              } else {
                Let b42 = M[Offset(Offset(000751,Mul(Widen(b40),9)),6)];
                if (Equal(Widen(b42),122)) {
                  Let b43 = M[001854];
                  SetByte Offset(Offset(000751,Mul(Widen(b40),9)),6) LoByte(Widen(b43));
                  SetByte 001853 142;
                  Let b44 = M[002035];
                  SetByte 001854 LoByte(Widen(b44));
                  SetByte 002035 122;
                  TraceOperation 077496 (Store (Con 87) (Con 1));
                  SetByte 008050 0;
                  SetByte 008051 1;
                  TraceOperation 077499 (Call (Floc 022320) [Con -26581,Con 3] Sp);
                  PushFrame 077499;
                  SetLocal 1 -26581;
                  SetLocal 2 3;
                  JumpCall: 022320, #actuals: 2
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    }
  } else {
    Jump: 077651
  }
LocReturn 077499:
  PushStack call_result;
  TraceOperation 077507 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077512 (Call (Floc 022320) [Con -32630,Con 6] Sp);
  PushFrame 077512;
  SetLocal 1 -32630;
  SetLocal 2 6;
  JumpCall: 022320, #actuals: 2
LocReturn 077512:
  PushStack call_result;
  TraceOperation 077520 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077525 (Call (Floc 022320) [Con -25227,Con 18] Sp);
  PushFrame 077525;
  SetLocal 1 -25227;
  SetLocal 2 18;
  JumpCall: 022320, #actuals: 2
LocReturn 077525:
  PushStack call_result;
  TraceOperation 077533 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077538 (Call (Floc 022320) [Con -25112,Con 36] Sp);
  PushFrame 077538;
  SetLocal 1 -25112;
  SetLocal 2 36;
  JumpCall: 022320, #actuals: 2
LocReturn 077538:
  PushStack call_result;
  TraceOperation 077546 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077551 (Random (Con 6) (Global 107));
  LetRandom random2 6;
  SetByte 008122 HiByte(random2);
  SetByte 008123 LoByte(random2);
  TraceOperation 077555 (Random (Con 3) (Global 106));
  LetRandom random3 3;
  SetByte 008120 HiByte(random3);
  SetByte 008121 LoByte(random3);
  TraceOperation 077559 (Add (Var (Global 1)) (Con 8) (Global 1));
  Let b4 = M[007910];
  Let b5 = M[007911];
  SetByte 007910 HiByte(Add(MakeHiLo(b4,b5),8));
  SetByte 007911 LoByte(Add(MakeHiLo(b4,b5),8));
  TraceOperation 077563 (Store (Con 207) (Con 126));
  SetByte 008290 0;
  SetByte 008291 126;
  TraceOperation 077566 New_line;
  GamePrint "\n";
  TraceOperation 077567 (Print "Ford removes the bottle of ");
  GamePrint "Ford removes the bottle of ";
  TraceOperation 077582 (Print_obj (Con 122));
  Let b6 = M[001856];
  Let b7 = M[001857];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  if (IsZeroByte(b8)) {
    GamePrint "";
    TraceOperation 077584 (Print_ret " which he's been waving under your nose. He tells you that you are aboard a Vogon spaceship, and gives you some peanuts.");
    GamePrint " which he's been waving under your nose. He tells you that you are aboard a Vogon spaceship, and gives you some peanuts.\n";
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
    TraceOperation 077584 (Print_ret " which he's been waving under your nose. He tells you that you are aboard a Vogon spaceship, and gives you some peanuts.");
    GamePrint " which he's been waving under your nose. He tells you that you are aboard a Vogon spaceship, and gives you some peanuts.\n";
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 1
  }
LocOp 077651:
  TraceOperation 077651 (Je [Var (Local 1),Con 6] (Branch F (Dloc 077670)));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 077655 (Test_attr (Con 121) (Con 4) (Branch F (Dloc 077670)));
    Let b1 = M[001840];
    if (TestBit(b1,3)) {
      TraceOperation 077659 (Store (Con 91) (Con 1));
      SetByte 008058 0;
      SetByte 008059 1;
      TraceOperation 077662 (Call (Floc 042734) [Con -11018] Sp);
      PushFrame 077662;
      SetLocal 1 -11018;
      JumpCall: 042734, #actuals: 1
    } else {
      Jump: 077670
    }
  } else {
    Jump: 077670
  }
LocReturn 077662:
  PushStack call_result;
  TraceOperation 077669 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 077670:
  TraceOperation 077670 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 077674 (Print "This is a squalid room filled with grubby mattresses, unwashed cups, and unidentifiable bits of smelly alien underwear. A door lies to port, and an airlock lies to starboard.");
    GamePrint "This is a squalid room filled with grubby mattresses, unwashed cups, and unidentifiable bits of smelly alien underwear. A door lies to port, and an airlock lies to starboard.";
    TraceOperation 077783 (Jz (Var (Global 117)) (Branch T (Dloc 077814)));
    Let b1 = M[008142];
    Let b2 = M[008143];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 077814
    } else {
      TraceOperation 077786 (Print " Your gown is hanging from a hook");
      GamePrint " Your gown is hanging from a hook";
      TraceOperation 077807 (Test_attr (Con 139) (Con 8) (Branch T (Dloc 077814)));
      Let b3 = M[002003];
      if (TestBit(b3,7)) {
        Jump: 077814
      } else {
        TraceOperation 077811 (Print ".");
        GamePrint ".";
        Jump: 077814
      }
    }
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocOp 077814:
  TraceOperation 077814 (Test_attr (Con 139) (Con 8) (Branch F (Dloc 077861)));
  Let b1 = M[002003];
  if (TestBit(b1,7)) {
    TraceOperation 077818 (Jz (Var (Global 117)) (Branch T (Dloc 077829)));
    Let b2 = M[008142];
    Let b3 = M[008143];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 077829
    } else {
      TraceOperation 077821 (Print " and a ");
      GamePrint " and a ";
      TraceOperation 077826 (Jump 077834);
      Jump: 077834
    }
  } else {
    Jump: 077861
  }
LocOp 077829:
  TraceOperation 077829 (Print " A ");
  GamePrint " A ";
  Jump: 077834
LocOp 077834:
  TraceOperation 077834 (Print "towel is draped over a drain on the floor.");
  GamePrint "towel is draped over a drain on the floor.";
  Jump: 077861
LocOp 077861:
  TraceOperation 077861 (Jz (Var (Global 116)) (Branch T (Dloc 077907)));
  Let b1 = M[008140];
  Let b2 = M[008141];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 077907
  } else {
    TraceOperation 077864 (Je [Var (Global 116),Con 141] (Branch T (Dloc 077907)));
    Let b3 = M[008140];
    Let b4 = M[008141];
    if (Equal(MakeHiLo(b3,b4),141)) {
      Jump: 077907
    } else {
      TraceOperation 077868 (Print " Resting in front of a ");
      GamePrint " Resting in front of a ";
      TraceOperation 077881 (Print_obj (Con 112));
      Let b5 = M[001766];
      Let b6 = M[001767];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 077883 (Print " at the base of one wall is");
        GamePrint " at the base of one wall is";
        TraceOperation 077898 (Call (Floc 043738) [Var (Global 116)] Sp);
        Let b8 = M[008140];
        Let b9 = M[008141];
        PushFrame 077898;
        SetLocal 1 MakeHiLo(b8,b9);
        JumpCall: 043738, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 077883 (Print " at the base of one wall is");
        GamePrint " at the base of one wall is";
        TraceOperation 077898 (Call (Floc 043738) [Var (Global 116)] Sp);
        Let b10 = M[008140];
        Let b11 = M[008141];
        PushFrame 077898;
        SetLocal 1 MakeHiLo(b10,b11);
        JumpCall: 043738, #actuals: 1
      }
    }
  }
LocReturn 077898:
  PushStack call_result;
  TraceOperation 077904 (Print ".");
  GamePrint ".";
  Jump: 077907
LocOp 077907:
  TraceOperation 077907 New_line;
  GamePrint "\n";
  TraceOperation 077908 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[506]--------------------------------------------------
LocRoutine 077910:
  MakeRoutineFrame 0;
  Jump: 077911
LocOp 077911:
  TraceOperation 077911 (Call (Floc 022320) [Con -26581,Con -1] Sp);
  PushFrame 077911;
  SetLocal 1 -26581;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 077911:
  PushStack call_result;
  TraceOperation 077920 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077925 (Inc (Con 134));
  Let b2 = M[008144];
  Let b3 = M[008145];
  SetByte 008144 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008145 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 077927 (Jz (Var (Global 71)) (Branch F (Dloc 077946)));
  Let b4 = M[008050];
  Let b5 = M[008051];
  if (IsZero(MakeHiLo(b4,b5))) {
    TraceOperation 077930 (Call (Floc 022340) [Con -26581] Sp);
    PushFrame 077930;
    SetLocal 1 -26581;
    JumpCall: 022340, #actuals: 1
  } else {
    Jump: 077946
  }
LocReturn 077930:
  PushStack call_result;
  TraceOperation 077937 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 077942 (Store (Con 134) (Con 0));
  SetByte 008144 0;
  SetByte 008145 0;
  TraceOperation 077945 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 077946:
  TraceOperation 077946 New_line;
  GamePrint "\n";
  TraceOperation 077947 (Je [Var (Global 118),Con 1,Con 2] (Branch F (Dloc 077986)));
  Let b1 = M[008144];
  Let b2 = M[008145];
  if (LogOr(Equal(MakeHiLo(b1,b2),1),Equal(MakeHiLo(b1,b2),2))) {
    TraceOperation 077953 (Print "You begin to feel ");
    GamePrint "You begin to feel ";
    TraceOperation 077964 (Je [Var (Global 118),Con 2] (Branch F (Dloc 077971)));
    Let b3 = M[008144];
    Let b4 = M[008145];
    if (Equal(MakeHiLo(b3,b4),2)) {
      TraceOperation 077968 (Print "in");
      GamePrint "in";
      Jump: 077971
    } else {
      Jump: 077971
    }
  } else {
    Jump: 077986
  }
LocOp 077971:
  TraceOperation 077971 (Print_ret "distinctly groggy.");
  GamePrint "distinctly groggy.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 077986:
  TraceOperation 077986 (Je [Var (Global 118),Con 3] (Branch F (Dloc 078011)));
  Let b1 = M[008144];
  Let b2 = M[008145];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 077990 (Print_ret "You begin to feel very indistinct.");
    GamePrint "You begin to feel very indistinct.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 078011
  }
LocOp 078011:
  TraceOperation 078011 (Print "Your serious allergic reaction to protein loss from");
  GamePrint "Your serious allergic reaction to protein loss from";
  TraceOperation 078046 (Print_paddr (Var (Global 42)));
  Let b1 = M[007992];
  Let b2 = M[007993];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 078048 (Print "s becomes a cause celebre amongst various holistic pressure groups in the Galaxy and leads to a total ban on dematerialisation. Within fifty years, space travel is replaced by a keen interest in old furniture restoration and market gardening. In this new, quieter Galaxy, the art of telepathy flourishes as never before, creating a new universal harmony which brings all life together, converts all matter into thought and brings about the rebirth of the entire Universe on a higher and better plane of existence.\n\nHowever, none of this affects you, because you are dead.");
  GamePrint "s becomes a cause celebre amongst various holistic pressure groups in the Galaxy and leads to a total ban on dematerialisation. Within fifty years, space travel is replaced by a keen interest in old furniture restoration and market gardening. In this new, quieter Galaxy, the art of telepathy flourishes as never before, creating a new universal harmony which brings all life together, converts all matter into thought and brings about the rebirth of the entire Universe on a higher and better plane of existence.\n\nHowever, none of this affects you, because you are dead.";
  TraceOperation 078397 New_line;
  GamePrint "\n";
  TraceOperation 078398 (Call (Floc 028948) [] Sp);
  PushFrame 078398;
  JumpCall: 028948, #actuals: 0
LocReturn 078398:
  PushStack call_result;
  TraceOperation 078403 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[507]--------------------------------------------------
LocRoutine 078404:
  MakeRoutineFrame 0;
  Jump: 078405
LocOp 078405:
  TraceOperation 078405 (Je [Var (Global 203),Con 61] (Branch F (Dloc 078508)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 078410 (Print "The dispenser is tall, has a button at around eye-level, and says \"Babel Fish\" in large letters. Anything dispensed would probably come out the slot at around knee-level.");
    GamePrint "The dispenser is tall, has a button at around eye-level, and says \"Babel Fish\" in large letters. Anything dispensed would probably come out the slot at around knee-level.";
    TraceOperation 078501 (Call (Floc 057998) [] Sp);
    PushFrame 078501;
    JumpCall: 057998, #actuals: 0
  } else {
    Jump: 078508
  }
LocReturn 078501:
  PushStack call_result;
  TraceOperation 078506 New_line;
  GamePrint "\n";
  TraceOperation 078507 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 078508:
  TraceOperation 078508 (Je [Var (Global 203),Con 54] (Branch F (Dloc 078553)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 078512 (Je [Var (Global 201),Con 32,Con 34] (Branch F (Dloc 078553)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),32),Equal(MakeHiLo(b3,b4),34))) {
      TraceOperation 078518 (Store (Con 102) (Con 1));
      SetByte 008080 0;
      SetByte 008081 1;
      TraceOperation 078521 (Print "You are now lying down with your ear near the ");
      GamePrint "You are now lying down with your ear near the ";
      TraceOperation 078544 (Print_obj (Con 117));
      Let b5 = M[001811];
      Let b6 = M[001812];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 078546 (Print_ret " slot.");
        GamePrint " slot.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 078546 (Print_ret " slot.");
        GamePrint " slot.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      }
    } else {
      Jump: 078553
    }
  } else {
    Jump: 078553
  }
LocOp 078553:
  TraceOperation 078553 (Je [Var (Global 203),Con 87] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 078557 (Jz (Var (Global 204)) (Branch T Dfalse));
    Let b3 = M[008316];
    Let b4 = M[008317];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 078560 (Call (Floc 022042) [Con 54,Con 34,Con 117] Sp);
      PushFrame 078560;
      SetLocal 1 54;
      SetLocal 2 34;
      SetLocal 3 117;
      JumpCall: 022042, #actuals: 3
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 078560:
  PushStack call_result;
  TraceOperation 078568 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[508]--------------------------------------------------
LocRoutine 078570:
  MakeRoutineFrame 0;
  Jump: 078571
LocOp 078571:
  TraceOperation 078571 (Je [Var (Global 203),Con 114] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),114)) {
    TraceOperation 078575 (Jz (Var (Global 86)) (Branch T (Dloc 078593)));
    Let b3 = M[008080];
    Let b4 = M[008081];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 078593
    } else {
      TraceOperation 078578 (Print_ret "You can't reach it from down here.");
      GamePrint "You can't reach it from down here.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 078593:
  TraceOperation 078593 (Jz (Var (Global 114)) (Branch F (Dloc 078603)));
  Let b1 = M[008136];
  Let b2 = M[008137];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 078596 (Print_ret "Click.");
    GamePrint "Click.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 078603
  }
LocOp 078603:
  TraceOperation 078603 (Dec (Con 130));
  Let b1 = M[008136];
  Let b2 = M[008137];
  SetByte 008136 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 008137 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 078605 (Print "A single ");
  GamePrint "A single ";
  TraceOperation 078614 (Print_obj (Con 111));
  Let b3 = M[001757];
  Let b4 = M[001758];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 078616 (Print " shoots out of the slot. It sails across the room and ");
    GamePrint " shoots out of the slot. It sails across the room and ";
    TraceOperation 078643 (Jz (Var (Global 117)) (Branch F (Dloc 078673)));
    Let b6 = M[008142];
    Let b7 = M[008143];
    if (IsZero(MakeHiLo(b6,b7))) {
      TraceOperation 078646 (Print "through a ");
      GamePrint "through a ";
      TraceOperation 078651 (Print_obj (Con 115));
      Let b8 = M[001793];
      Let b9 = M[001794];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      if (IsZeroByte(b10)) {
        GamePrint "";
        TraceOperation 078653 (Print " in the wall, just under a ");
        GamePrint " in the wall, just under a ";
        TraceOperation 078668 (Print_obj (Con 114));
        Let b11 = M[001784];
        Let b12 = M[001785];
        Let b13 = M[Address(MakeHiLo(b11,b12))];
        if (IsZeroByte(b13)) {
          GamePrint "";
          TraceOperation 078670 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_14;
          JumpReturn: return_address_14, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
          TraceOperation 078670 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_15;
          JumpReturn: return_address_15, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
        TraceOperation 078653 (Print " in the wall, just under a ");
        GamePrint " in the wall, just under a ";
        TraceOperation 078668 (Print_obj (Con 114));
        Let b16 = M[001784];
        Let b17 = M[001785];
        Let b18 = M[Address(MakeHiLo(b16,b17))];
        if (IsZeroByte(b18)) {
          GamePrint "";
          TraceOperation 078670 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_19;
          JumpReturn: return_address_19, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b16,b17)),1));
          TraceOperation 078670 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_20;
          JumpReturn: return_address_20, result: 1
        }
      }
    } else {
      Jump: 078673
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 078616 (Print " shoots out of the slot. It sails across the room and ");
    GamePrint " shoots out of the slot. It sails across the room and ";
    TraceOperation 078643 (Jz (Var (Global 117)) (Branch F (Dloc 078673)));
    Let b21 = M[008142];
    Let b22 = M[008143];
    if (IsZero(MakeHiLo(b21,b22))) {
      TraceOperation 078646 (Print "through a ");
      GamePrint "through a ";
      TraceOperation 078651 (Print_obj (Con 115));
      Let b23 = M[001793];
      Let b24 = M[001794];
      Let b25 = M[Address(MakeHiLo(b23,b24))];
      if (IsZeroByte(b25)) {
        GamePrint "";
        TraceOperation 078653 (Print " in the wall, just under a ");
        GamePrint " in the wall, just under a ";
        TraceOperation 078668 (Print_obj (Con 114));
        Let b26 = M[001784];
        Let b27 = M[001785];
        Let b28 = M[Address(MakeHiLo(b26,b27))];
        if (IsZeroByte(b28)) {
          GamePrint "";
          TraceOperation 078670 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_29;
          JumpReturn: return_address_29, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b26,b27)),1));
          TraceOperation 078670 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_30;
          JumpReturn: return_address_30, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b23,b24)),1));
        TraceOperation 078653 (Print " in the wall, just under a ");
        GamePrint " in the wall, just under a ";
        TraceOperation 078668 (Print_obj (Con 114));
        Let b31 = M[001784];
        Let b32 = M[001785];
        Let b33 = M[Address(MakeHiLo(b31,b32))];
        if (IsZeroByte(b33)) {
          GamePrint "";
          TraceOperation 078670 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_34;
          JumpReturn: return_address_34, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b31,b32)),1));
          TraceOperation 078670 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_35;
          JumpReturn: return_address_35, result: 1
        }
      }
    } else {
      Jump: 078673
    }
  }
LocOp 078673:
  TraceOperation 078673 (Print "hits the dressing gown. The fish slides down the ");
  GamePrint "hits the dressing gown. The fish slides down the ";
  TraceOperation 078702 (Jz (Var (Global 143)) (Branch T (Dloc 078727)));
  Let b1 = M[008194];
  Let b2 = M[008195];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 078727
  } else {
    TraceOperation 078705 (Print "inside (nice try, though)");
    GamePrint "inside (nice try, though)";
    TraceOperation 078724 (Jump 078732);
    Jump: 078732
  }
LocOp 078727:
  TraceOperation 078727 (Print "sleeve");
  GamePrint "sleeve";
  Jump: 078732
LocOp 078732:
  TraceOperation 078732 (Print " of the gown and falls to the floor, ");
  GamePrint " of the gown and falls to the floor, ";
  TraceOperation 078753 (Test_attr (Con 139) (Con 8) (Branch T (Dloc 078792)));
  Let b1 = M[002003];
  if (TestBit(b1,7)) {
    Jump: 078792
  } else {
    TraceOperation 078757 (Print_ret "vanishing through the grating of a hitherto unnoticed drain.");
    GamePrint "vanishing through the grating of a hitherto unnoticed drain.\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 078792:
  TraceOperation 078792 (Print "landing on the towel. A split-second later, a tiny cleaning robot whizzes across the floor, grabs the fish, and continues its breakneck pace toward a ");
  GamePrint "landing on the towel. A split-second later, a tiny cleaning robot whizzes across the floor, grabs the fish, and continues its breakneck pace toward a ";
  TraceOperation 078883 (Print_obj (Con 112));
  Let b1 = M[001766];
  Let b2 = M[001767];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 078885 (Print " at the base of the wall. ");
    GamePrint " at the base of the wall. ";
    TraceOperation 078900 (Jz (Var (Global 116)) (Branch F (Dloc 078928)));
    Let b4 = M[008140];
    Let b5 = M[008141];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 078903 (Print_ret "The robot zips through the panel, and is gone.");
      GamePrint "The robot zips through the panel, and is gone.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      Jump: 078928
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 078885 (Print " at the base of the wall. ");
    GamePrint " at the base of the wall. ";
    TraceOperation 078900 (Jz (Var (Global 116)) (Branch F (Dloc 078928)));
    Let b7 = M[008140];
    Let b8 = M[008141];
    if (IsZero(MakeHiLo(b7,b8))) {
      TraceOperation 078903 (Print_ret "The robot zips through the panel, and is gone.");
      GamePrint "The robot zips through the panel, and is gone.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Jump: 078928
    }
  }
LocOp 078928:
  TraceOperation 078928 (Je [Var (Global 116),Con 141] (Branch T (Dloc 078970)));
  Let b1 = M[008140];
  Let b2 = M[008141];
  if (Equal(MakeHiLo(b1,b2),141)) {
    Jump: 078970
  } else {
    TraceOperation 078932 (Print "The robot zips around");
    GamePrint "The robot zips around";
    TraceOperation 078947 (Call (Floc 043738) [Var (Global 116)] Sp);
    Let b3 = M[008140];
    Let b4 = M[008141];
    PushFrame 078947;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 043738, #actuals: 1
  }
LocReturn 078947:
  PushStack call_result;
  TraceOperation 078953 (Print_ret ", through the panel, and is gone.");
  GamePrint ", through the panel, and is gone.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 078970:
  TraceOperation 078970 (Print "The robot plows into the satchel, sending the ");
  GamePrint "The robot plows into the satchel, sending the ";
  TraceOperation 078997 (Print_obj (Con 111));
  Let b1 = M[001757];
  Let b2 = M[001758];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 078999 (Je [Var (Global 115),Con 150] (Branch T (Dloc 079018)));
    Let b4 = M[008138];
    Let b5 = M[008139];
    if (Equal(MakeHiLo(b4,b5),150)) {
      Jump: 079018
    } else {
      TraceOperation 079003 (Jz (Var (Global 115)) (Branch T (Dloc 079018)));
      Let b6 = M[008138];
      Let b7 = M[008139];
      if (IsZero(MakeHiLo(b6,b7))) {
        Jump: 079018
      } else {
        TraceOperation 079006 (Print " and");
        GamePrint " and";
        TraceOperation 079011 (Call (Floc 043738) [Var (Global 115),Con 1] Sp);
        Let b8 = M[008138];
        Let b9 = M[008139];
        PushFrame 079011;
        SetLocal 1 MakeHiLo(b8,b9);
        SetLocal 2 1;
        JumpCall: 043738, #actuals: 2
      }
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 078999 (Je [Var (Global 115),Con 150] (Branch T (Dloc 079018)));
    Let b10 = M[008138];
    Let b11 = M[008139];
    if (Equal(MakeHiLo(b10,b11),150)) {
      Jump: 079018
    } else {
      TraceOperation 079003 (Jz (Var (Global 115)) (Branch T (Dloc 079018)));
      Let b12 = M[008138];
      Let b13 = M[008139];
      if (IsZero(MakeHiLo(b12,b13))) {
        Jump: 079018
      } else {
        TraceOperation 079006 (Print " and");
        GamePrint " and";
        TraceOperation 079011 (Call (Floc 043738) [Var (Global 115),Con 1] Sp);
        Let b14 = M[008138];
        Let b15 = M[008139];
        PushFrame 079011;
        SetLocal 1 MakeHiLo(b14,b15);
        SetLocal 2 1;
        JumpCall: 043738, #actuals: 2
      }
    }
  }
LocReturn 079011:
  PushStack call_result;
  Jump: 079018
LocOp 079018:
  TraceOperation 079018 (Print " flying through the air in a graceful arc");
  GamePrint " flying through the air in a graceful arc";
  TraceOperation 079041 (Je [Var (Global 115),Con 150] (Branch T (Dloc 079133)));
  Let b1 = M[008138];
  Let b2 = M[008139];
  if (Equal(MakeHiLo(b1,b2),150)) {
    Jump: 079133
  } else {
    TraceOperation 079046 (Print ". ");
    GamePrint ". ";
    TraceOperation 079049 (Print_paddr (Var (Global 9)));
    Let b3 = M[007926];
    Let b4 = M[007927];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 079051 (Print "catches the ");
    GamePrint "catches the ";
    TraceOperation 079060 (Print_obj (Con 111));
    Let b5 = M[001757];
    Let b6 = M[001758];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 079062 (Print " ");
      GamePrint " ";
      TraceOperation 079065 (Jz (Var (Global 115)) (Branch T (Dloc 079101)));
      Let b8 = M[008138];
      Let b9 = M[008139];
      if (IsZero(MakeHiLo(b8,b9))) {
        Jump: 079101
      } else {
        TraceOperation 079068 (Insert_obj (Var (Global 115)) (Con 219));
        Let b10 = M[008138];
        Let b11 = M[008139];
        Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),4)];
        if (IsZero(Widen(b12))) {
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),4) 219;
          Let b13 = M[002728];
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),5) LoByte(Widen(b13));
          SetByte 002728 b11;
          TraceOperation 079071 (Print "and also manages to catch");
          GamePrint "and also manages to catch";
          TraceOperation 079088 (Call (Floc 043738) [Var (Global 115),Con 1] Sp);
          Let b14 = M[008138];
          Let b15 = M[008139];
          PushFrame 079088;
          SetLocal 1 MakeHiLo(b14,b15);
          SetLocal 2 1;
          JumpCall: 043738, #actuals: 2
        } else {
          Let b16 = M[Offset(Offset(000751,Mul(Widen(b12),9)),6)];
          if (Equal(Widen(b16),MakeHiLo(b10,b11))) {
            Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),5)];
            SetByte Offset(Offset(000751,Mul(Widen(b12),9)),6) LoByte(Widen(b17));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),4) 219;
            Let b18 = M[002728];
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),5) LoByte(Widen(b18));
            SetByte 002728 b11;
            TraceOperation 079071 (Print "and also manages to catch");
            GamePrint "and also manages to catch";
            TraceOperation 079088 (Call (Floc 043738) [Var (Global 115),Con 1] Sp);
            Let b19 = M[008138];
            Let b20 = M[008139];
            PushFrame 079088;
            SetLocal 1 MakeHiLo(b19,b20);
            SetLocal 2 1;
            JumpCall: 043738, #actuals: 2
          } else {
            Error: unlink/loop
          }
        }
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 079062 (Print " ");
      GamePrint " ";
      TraceOperation 079065 (Jz (Var (Global 115)) (Branch T (Dloc 079101)));
      Let b21 = M[008138];
      Let b22 = M[008139];
      if (IsZero(MakeHiLo(b21,b22))) {
        Jump: 079101
      } else {
        TraceOperation 079068 (Insert_obj (Var (Global 115)) (Con 219));
        Let b23 = M[008138];
        Let b24 = M[008139];
        Let b25 = M[Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),4)];
        if (IsZero(Widen(b25))) {
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),4) 219;
          Let b26 = M[002728];
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),5) LoByte(Widen(b26));
          SetByte 002728 b24;
          TraceOperation 079071 (Print "and also manages to catch");
          GamePrint "and also manages to catch";
          TraceOperation 079088 (Call (Floc 043738) [Var (Global 115),Con 1] Sp);
          Let b27 = M[008138];
          Let b28 = M[008139];
          PushFrame 079088;
          SetLocal 1 MakeHiLo(b27,b28);
          SetLocal 2 1;
          JumpCall: 043738, #actuals: 2
        } else {
          Let b29 = M[Offset(Offset(000751,Mul(Widen(b25),9)),6)];
          if (Equal(Widen(b29),MakeHiLo(b23,b24))) {
            Let b30 = M[Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),5)];
            SetByte Offset(Offset(000751,Mul(Widen(b25),9)),6) LoByte(Widen(b30));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),4) 219;
            Let b31 = M[002728];
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),5) LoByte(Widen(b31));
            SetByte 002728 b24;
            TraceOperation 079071 (Print "and also manages to catch");
            GamePrint "and also manages to catch";
            TraceOperation 079088 (Call (Floc 043738) [Var (Global 115),Con 1] Sp);
            Let b32 = M[008138];
            Let b33 = M[008139];
            PushFrame 079088;
            SetLocal 1 MakeHiLo(b32,b33);
            SetLocal 2 1;
            JumpCall: 043738, #actuals: 2
          } else {
            Error: unlink/loop
          }
        }
      }
    }
  }
LocReturn 079088:
  PushStack call_result;
  TraceOperation 079095 (Store (Con 131) (Con 0));
  SetByte 008138 0;
  SetByte 008139 0;
  TraceOperation 079098 (Jump 079124);
  Jump: 079124
LocOp 079101:
  TraceOperation 079101 (Print "(which is all the flying junk it can find)");
  GamePrint "(which is all the flying junk it can find)";
  Jump: 079124
LocOp 079124:
  TraceOperation 079124 (Print_ret ", and exits.");
  GamePrint ", and exits.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079133:
  TraceOperation 079133 (Je [Var (Global 115),Con 150] (Branch F Dfalse));
  Let b1 = M[008138];
  Let b2 = M[008139];
  if (Equal(MakeHiLo(b1,b2),150)) {
    TraceOperation 079137 (Insert_obj (Con 150) (Con 219));
    Let b3 = M[002105];
    if (IsZero(Widen(b3))) {
      SetByte 002105 219;
      Let b4 = M[002728];
      SetByte 002106 LoByte(Widen(b4));
      SetByte 002728 150;
      TraceOperation 079140 (Add (Var (Global 1)) (Con 12) (Global 1));
      Let b5 = M[007910];
      Let b6 = M[007911];
      SetByte 007910 HiByte(Add(MakeHiLo(b5,b6),12));
      SetByte 007911 LoByte(Add(MakeHiLo(b5,b6),12));
      TraceOperation 079144 (Insert_obj (Con 111) (Con 31));
      Let b7 = M[001754];
      if (IsZero(Widen(b7))) {
        SetByte 001754 31;
        Let b8 = M[001036];
        SetByte 001755 LoByte(Widen(b8));
        SetByte 001036 111;
        TraceOperation 079147 (Call (Floc 020662) [Con -25227] Sp);
        PushFrame 079147;
        SetLocal 1 -25227;
        JumpCall: 020662, #actuals: 1
      } else {
        Let b9 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
        if (Equal(Widen(b9),111)) {
          Let b10 = M[001755];
          SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b10));
          SetByte 001754 31;
          Let b11 = M[001036];
          SetByte 001755 LoByte(Widen(b11));
          SetByte 001036 111;
          TraceOperation 079147 (Call (Floc 020662) [Con -25227] Sp);
          PushFrame 079147;
          SetLocal 1 -25227;
          JumpCall: 020662, #actuals: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b12 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b12),150)) {
        Let b13 = M[002106];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b13));
        SetByte 002105 219;
        Let b14 = M[002728];
        SetByte 002106 LoByte(Widen(b14));
        SetByte 002728 150;
        TraceOperation 079140 (Add (Var (Global 1)) (Con 12) (Global 1));
        Let b15 = M[007910];
        Let b16 = M[007911];
        SetByte 007910 HiByte(Add(MakeHiLo(b15,b16),12));
        SetByte 007911 LoByte(Add(MakeHiLo(b15,b16),12));
        TraceOperation 079144 (Insert_obj (Con 111) (Con 31));
        Let b17 = M[001754];
        if (IsZero(Widen(b17))) {
          SetByte 001754 31;
          Let b18 = M[001036];
          SetByte 001755 LoByte(Widen(b18));
          SetByte 001036 111;
          TraceOperation 079147 (Call (Floc 020662) [Con -25227] Sp);
          PushFrame 079147;
          SetLocal 1 -25227;
          JumpCall: 020662, #actuals: 1
        } else {
          Let b19 = M[Offset(Offset(000751,Mul(Widen(b17),9)),6)];
          if (Equal(Widen(b19),111)) {
            Let b20 = M[001755];
            SetByte Offset(Offset(000751,Mul(Widen(b17),9)),6) LoByte(Widen(b20));
            SetByte 001754 31;
            Let b21 = M[001036];
            SetByte 001755 LoByte(Widen(b21));
            SetByte 001036 111;
            TraceOperation 079147 (Call (Floc 020662) [Con -25227] Sp);
            PushFrame 079147;
            SetLocal 1 -25227;
            JumpCall: 020662, #actuals: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    PopFrame return_address_22;
    JumpReturn: return_address_22, result: 0
  }
LocReturn 079147:
  PushStack call_result;
  TraceOperation 079154 (Jz (Var Sp) (Branch T (Dloc 079173)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 079173
  } else {
    TraceOperation 079157 (Call (Floc 022320) [Con -25112,Con 4] Sp);
    PushFrame 079157;
    SetLocal 1 -25112;
    SetLocal 2 4;
    JumpCall: 022320, #actuals: 2
  }
LocReturn 079157:
  PushStack call_result;
  TraceOperation 079165 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 079170 (Jump 079199);
  Jump: 079199
LocOp 079173:
  TraceOperation 079173 (Call (Floc 022320) [Con -25227,Con 4] Sp);
  PushFrame 079173;
  SetLocal 1 -25227;
  SetLocal 2 4;
  JumpCall: 022320, #actuals: 2
LocReturn 079173:
  PushStack call_result;
  TraceOperation 079181 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 079186 (Call (Floc 022320) [Con -25112,Con 7] Sp);
  PushFrame 079186;
  SetLocal 1 -25112;
  SetLocal 2 7;
  JumpCall: 022320, #actuals: 2
LocReturn 079186:
  PushStack call_result;
  TraceOperation 079194 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  Jump: 079199
LocOp 079199:
  TraceOperation 079199 (Store (Con 130) (Con 0));
  SetByte 008136 0;
  SetByte 008137 0;
  TraceOperation 079202 (Store (Con 131) (Con 0));
  SetByte 008138 0;
  SetByte 008139 0;
  TraceOperation 079205 (Print " surrounded by a cloud of junk mail. Another robot flies in and begins madly collecting the cluttered plume of mail. The ");
  GamePrint " surrounded by a cloud of junk mail. Another robot flies in and begins madly collecting the cluttered plume of mail. The ";
  TraceOperation 079282 (Print_obj (Con 111));
  Let b1 = M[001757];
  Let b2 = M[001758];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 079284 (Print_ret " continues its flight, landing with a loud \"squish\" in your ear.");
    GamePrint " continues its flight, landing with a loud \"squish\" in your ear.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 079284 (Print_ret " continues its flight, landing with a loud \"squish\" in your ear.");
    GamePrint " continues its flight, landing with a loud \"squish\" in your ear.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[509]--------------------------------------------------
LocRoutine 079326:
  MakeRoutineFrame 0;
  Jump: 079327
LocOp 079327:
  TraceOperation 079327 (Je [Var (Global 203),Con 63] (Branch F (Dloc 079343)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 079331 (Print "You see only ");
    GamePrint "You see only ";
    TraceOperation 079338 (Print_obj (Con 24));
    Let b3 = M[000974];
    Let b4 = M[000975];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 079340 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 079340 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 079343
  }
LocOp 079343:
  TraceOperation 079343 (Je [Var (Global 203),Con 46] (Branch F (Dloc 079407)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 079348 (Je [Var (Global 202),Con 115] (Branch F (Dloc 079407)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),115)) {
      TraceOperation 079352 (Test_attr (Var (Global 201)) (Con 22) (Branch F (Dloc 079362)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),2)];
      if (TestBit(b7,1)) {
        TraceOperation 079356 (Call (Floc 057842) [] Sp);
        PushFrame 079356;
        JumpCall: 057842, #actuals: 0
      } else {
        Jump: 079362
      }
    } else {
      Jump: 079407
    }
  } else {
    Jump: 079407
  }
LocReturn 079356:
  PushStack call_result;
  TraceOperation 079361 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 079362:
  TraceOperation 079362 (Get_prop (Var (Global 201)) (Con 22) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocOp 079394:
  TraceOperation 079394 (Print_ret "It doesn't fit through the hole.");
  GamePrint "It doesn't fit through the hole.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079407:
  TraceOperation 079407 (Je [Var (Global 203),Con 54,Con 55] (Branch F (Dloc 079445)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),54),Equal(MakeHiLo(b1,b2),55))) {
    TraceOperation 079413 (Je [Var (Global 202),Con 115] (Branch F (Dloc 079445)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),115)) {
      TraceOperation 079417 (Je [Var (Global 201),Con 30,Con 32,Con 36] (Branch T (Dloc 079428)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),30),Equal(MakeHiLo(b5,b6),32)),Equal(MakeHiLo(b5,b6),36))) {
        Jump: 079428
      } else {
        TraceOperation 079424 (Je [Var (Global 201),Con 34] (Branch F (Dloc 079436)));
        Let b7 = M[008310];
        Let b8 = M[008311];
        if (Equal(MakeHiLo(b7,b8),34)) {
          Jump: 079428
        } else {
          Jump: 079436
        }
      }
    } else {
      Jump: 079445
    }
  } else {
    Jump: 079445
  }
LocOp 079428:
  TraceOperation 079428 (Call (Floc 022042) [Con 144,Con 115] Sp);
  PushFrame 079428;
  SetLocal 1 144;
  SetLocal 2 115;
  JumpCall: 022042, #actuals: 2
LocReturn 079428:
  PushStack call_result;
  TraceOperation 079435 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079436:
  TraceOperation 079436 (Call (Floc 022042) [Con 73,Var (Global 201),Con 114] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 079436;
  SetLocal 1 73;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 114;
  JumpCall: 022042, #actuals: 3
LocReturn 079436:
  PushStack call_result;
  TraceOperation 079444 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079445:
  TraceOperation 079445 (Je [Var (Global 203),Con 42,Con 27] (Branch F (Dloc 079464)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),42),Equal(MakeHiLo(b1,b2),27))) {
    TraceOperation 079451 (Je [Var (Global 201),Con 115] (Branch F (Dloc 079464)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),115)) {
      TraceOperation 079455 (Call (Floc 022042) [Con 73,Var (Global 202),Con 114] Sp);
      Let b5 = M[008312];
      Let b6 = M[008313];
      PushFrame 079455;
      SetLocal 1 73;
      SetLocal 2 MakeHiLo(b5,b6);
      SetLocal 3 114;
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 079464
    }
  } else {
    Jump: 079464
  }
LocReturn 079455:
  PushStack call_result;
  TraceOperation 079463 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079464:
  TraceOperation 079464 (Je [Var (Global 203),Con 26] (Branch F (Dloc 079476)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 079468 (Call (Floc 022042) [Con 144,Con 115] Sp);
    PushFrame 079468;
    SetLocal 1 144;
    SetLocal 2 115;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 079476
  }
LocReturn 079468:
  PushStack call_result;
  TraceOperation 079475 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079476:
  TraceOperation 079476 (Je [Var (Global 203),Con 87] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 079480 (Jz (Var (Global 204)) (Branch T Dfalse));
    Let b3 = M[008316];
    Let b4 = M[008317];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 079483 (Call (Floc 022042) [Con 144,Con 115] Sp);
      PushFrame 079483;
      SetLocal 1 144;
      SetLocal 2 115;
      JumpCall: 022042, #actuals: 2
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 079483:
  PushStack call_result;
  TraceOperation 079490 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[510]--------------------------------------------------
LocRoutine 079492:
  MakeRoutineFrame 0;
  Jump: 079493
LocOp 079493:
  TraceOperation 079493 (Je [Var (Global 203),Con 61] (Branch F (Dloc 079556)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 079497 (Jz (Var (Global 117)) (Branch T (Dloc 079519)));
    Let b3 = M[008142];
    Let b4 = M[008143];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 079519
    } else {
      TraceOperation 079500 (Print_ret "Your gown is hanging from it.");
      GamePrint "Your gown is hanging from it.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 079556
  }
LocOp 079519:
  TraceOperation 079519 (Print_ret "The hook is attached to the wall, inches above a tiny hole.");
  GamePrint "The hook is attached to the wall, inches above a tiny hole.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079556:
  TraceOperation 079556 (Je [Var (Global 203),Con 55,Con 73] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),55),Equal(MakeHiLo(b1,b2),73))) {
    TraceOperation 079562 (Jz (Var (Global 86)) (Branch T (Dloc 079569)));
    Let b3 = M[008080];
    Let b4 = M[008081];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 079569
    } else {
      TraceOperation 079565 (Print_paddr (Var (Global 50)));
      Let b5 = M[008008];
      Let b6 = M[008009];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 079567 New_line;
      GamePrint "\n";
      TraceOperation 079568 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocOp 079569:
  TraceOperation 079569 (Je [Var (Global 201),Con 158] (Branch F (Dloc 079636)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),158)) {
    TraceOperation 079574 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 079584)));
    Let b3 = M[002174];
    if (TestBit(b3,6)) {
      TraceOperation 079578 (Call (Floc 041208) [] Sp);
      PushFrame 079578;
      JumpCall: 041208, #actuals: 0
    } else {
      Jump: 079584
    }
  } else {
    Jump: 079636
  }
LocReturn 079578:
  PushStack call_result;
  TraceOperation 079583 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079584:
  TraceOperation 079584 (Store (Con 133) (Con 1));
  SetByte 008142 0;
  SetByte 008143 1;
  TraceOperation 079587 (Insert_obj (Con 158) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002177];
  if (IsZero(Widen(b3))) {
    SetByte 002177 b2;
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 002178 LoByte(Widen(b4));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 158;
    TraceOperation 079590 (Set_attr (Con 158) (Con 27));
    Let b5 = M[002176];
    SetByte 002176 SetBit(b5,4);
    TraceOperation 079593 (Set_attr (Con 158) (Con 21));
    Let b6 = M[002175];
    SetByte 002175 SetBit(b6,2);
    TraceOperation 079596 (Clear_attr (Con 158) (Con 23));
    Let b7 = M[002175];
    SetByte 002175 ClearBit(b7,0);
    TraceOperation 079599 (Print_ret "The gown is now hanging from the hook, covering a tiny hole.");
    GamePrint "The gown is now hanging from the hook, covering a tiny hole.\n";
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  } else {
    Let b9 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b9),158)) {
      Let b10 = M[002178];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b10));
      SetByte 002177 b2;
      Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 002178 LoByte(Widen(b11));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 158;
      TraceOperation 079590 (Set_attr (Con 158) (Con 27));
      Let b12 = M[002176];
      SetByte 002176 SetBit(b12,4);
      TraceOperation 079593 (Set_attr (Con 158) (Con 21));
      Let b13 = M[002175];
      SetByte 002175 SetBit(b13,2);
      TraceOperation 079596 (Clear_attr (Con 158) (Con 23));
      Let b14 = M[002175];
      SetByte 002175 ClearBit(b14,0);
      TraceOperation 079599 (Print_ret "The gown is now hanging from the hook, covering a tiny hole.");
      GamePrint "The gown is now hanging from the hook, covering a tiny hole.\n";
      PopFrame return_address_15;
      JumpReturn: return_address_15, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 079636:
  TraceOperation 079636 (Je [Var (Global 201),Con 34,Con 32,Con 36] (Branch F (Dloc 079651)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),34),Equal(MakeHiLo(b1,b2),32)),Equal(MakeHiLo(b1,b2),36))) {
    TraceOperation 079643 (Call (Floc 022042) [Con 144,Con 114] Sp);
    PushFrame 079643;
    SetLocal 1 144;
    SetLocal 2 114;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 079651
  }
LocReturn 079643:
  PushStack call_result;
  TraceOperation 079650 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079651:
  TraceOperation 079651 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 079689)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,6)) {
    TraceOperation 079655 (Test_attr (Var (Global 201)) (Con 21) (Branch F (Dloc 079671)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,2)) {
      TraceOperation 079659 (Print_paddr (Var (Global 24)));
      Let b7 = M[007956];
      Let b8 = M[007957];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
      TraceOperation 079661 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
      Let b9 = M[008310];
      Let b10 = M[008311];
      PushFrame 079661;
      SetLocal 1 MakeHiLo(b9,b10);
      SetLocal 2 1;
      JumpCall: 043738, #actuals: 2
    } else {
      Jump: 079671
    }
  } else {
    Jump: 079689
  }
LocReturn 079661:
  PushStack call_result;
  TraceOperation 079668 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079671:
  TraceOperation 079671 (Insert_obj (Var (Global 201)) (Var (Global 0)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 079674 (Print_ret "It slips off the hook.");
    GamePrint "It slips off the hook.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    Let b8 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b8),MakeHiLo(b1,b2))) {
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b9));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b10));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 079674 (Print_ret "It slips off the hook.");
      GamePrint "It slips off the hook.\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 079689:
  TraceOperation 079689 (Call (Floc 031360) [] Sp);
  PushFrame 079689;
  JumpCall: 031360, #actuals: 0
LocReturn 079689:
  PushStack call_result;
  TraceOperation 079694 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[511]--------------------------------------------------
LocRoutine 079696:
  MakeRoutineFrame 0;
  Jump: 079697
LocOp 079697:
  TraceOperation 079697 (Je [Var (Global 203),Con 55] (Branch F (Dloc 079797)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 079702 (Test_attr (Con 139) (Con 8) (Branch F (Dloc 079729)));
    Let b3 = M[002003];
    if (TestBit(b3,7)) {
      TraceOperation 079706 (Print_ret "The drain is already covered by the towel.");
      GamePrint "The drain is already covered by the towel.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      Jump: 079729
    }
  } else {
    Jump: 079797
  }
LocOp 079729:
  TraceOperation 079729 (Jz (Var (Global 86)) (Branch T (Dloc 079736)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 079736
  } else {
    TraceOperation 079732 (Print_paddr (Var (Global 50)));
    Let b3 = M[008008];
    Let b4 = M[008009];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 079734 New_line;
    GamePrint "\n";
    TraceOperation 079735 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 079736:
  TraceOperation 079736 (Je [Var (Global 201),Con 139] (Branch F (Dloc 079766)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 079740 (Set_attr (Con 139) (Con 24));
    Let b3 = M[002005];
    SetByte 002005 SetBit(b3,7);
    TraceOperation 079743 (Set_attr (Con 139) (Con 8));
    Let b4 = M[002003];
    SetByte 002003 SetBit(b4,7);
    TraceOperation 079746 (Set_attr (Con 139) (Con 23));
    Let b5 = M[002004];
    SetByte 002004 SetBit(b5,0);
    TraceOperation 079749 (Set_attr (Con 139) (Con 27));
    Let b6 = M[002005];
    SetByte 002005 SetBit(b6,4);
    TraceOperation 079752 (Set_attr (Con 139) (Con 21));
    Let b7 = M[002004];
    SetByte 002004 SetBit(b7,2);
    TraceOperation 079755 (Insert_obj (Con 139) (Var (Global 0)));
    Let b8 = M[007908];
    Let b9 = M[007909];
    Let b10 = M[002006];
    if (IsZero(Widen(b10))) {
      SetByte 002006 b9;
      Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6)];
      SetByte 002007 LoByte(Widen(b11));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6) 139;
      TraceOperation 079758 (Call (Floc 022042) [Con 61,Con 113] Sp);
      PushFrame 079758;
      SetLocal 1 61;
      SetLocal 2 113;
      JumpCall: 022042, #actuals: 2
    } else {
      Let b12 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
      if (Equal(Widen(b12),139)) {
        Let b13 = M[002007];
        SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b13));
        SetByte 002006 b9;
        Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6)];
        SetByte 002007 LoByte(Widen(b14));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6) 139;
        TraceOperation 079758 (Call (Floc 022042) [Con 61,Con 113] Sp);
        PushFrame 079758;
        SetLocal 1 61;
        SetLocal 2 113;
        JumpCall: 022042, #actuals: 2
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 079766
  }
LocReturn 079758:
  PushStack call_result;
  TraceOperation 079765 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079766:
  TraceOperation 079766 (Print "The drain is too large to be covered by");
  GamePrint "The drain is too large to be covered by";
  TraceOperation 079787 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 079787;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 079787:
  PushStack call_result;
  TraceOperation 079794 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079797:
  TraceOperation 079797 (Je [Var (Global 203),Con 63] (Branch F (Dloc 079809)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 079801 (Call (Floc 022042) [Con 63,Con 115] Sp);
    PushFrame 079801;
    SetLocal 1 63;
    SetLocal 2 115;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 079809
  }
LocReturn 079801:
  PushStack call_result;
  TraceOperation 079808 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079809:
  TraceOperation 079809 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 079813 (Test_attr (Con 139) (Con 8) (Branch F Dfalse));
    Let b3 = M[002003];
    if (TestBit(b3,7)) {
      TraceOperation 079817 (Print_ret "The towel completely covers the drain.");
      GamePrint "The towel completely covers the drain.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
--[512]--------------------------------------------------
LocRoutine 079842:
  MakeRoutineFrame 0;
  Jump: 079843
LocOp 079843:
  TraceOperation 079843 (Je [Var (Global 203),Con 39,Con 61] (Branch F (Dloc 079878)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 079849 (Print_ret "The panel, only a few inches high, is currently closed.");
    GamePrint "The panel, only a few inches high, is currently closed.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 079878
  }
LocOp 079878:
  TraceOperation 079878 (Je [Var (Global 203),Con 103] (Branch F (Dloc 079886)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 079882 (Print_paddr (Var (Global 26)));
    Let b3 = M[007960];
    Let b4 = M[007961];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 079884 New_line;
    GamePrint "\n";
    TraceOperation 079885 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 079886
  }
LocOp 079886:
  TraceOperation 079886 (Je [Var (Global 203),Con 26] (Branch F (Dloc 079930)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 079890 (Store (Con 229) (Con 6));
    SetByte 008334 0;
    SetByte 008335 6;
    TraceOperation 079893 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame 079893;
    SetLocal 1 -14349;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 079930
  }
LocReturn 079893:
  PushStack call_result;
  TraceOperation 079901 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 079906 (Print "With ");
  GamePrint "With ";
  TraceOperation 079911 (Print_obj (Con 36));
  Let b2 = M[001082];
  Let b3 = M[001083];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 079913 (Print_ret "s? By force of will?");
    GamePrint "s? By force of will?\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 079913 (Print_ret "s? By force of will?");
    GamePrint "s? By force of will?\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
LocOp 079930:
  TraceOperation 079930 (Je [Var (Global 203),Con 87] (Branch F (Dloc 079945)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 079934 (Jz (Var (Global 204)) (Branch T (Dloc 079945)));
    Let b3 = M[008316];
    Let b4 = M[008317];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 079945
    } else {
      TraceOperation 079937 (Call (Floc 022042) [Con 144,Con 112] Sp);
      PushFrame 079937;
      SetLocal 1 144;
      SetLocal 2 112;
      JumpCall: 022042, #actuals: 2
    }
  } else {
    Jump: 079945
  }
LocReturn 079937:
  PushStack call_result;
  TraceOperation 079944 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079945:
  TraceOperation 079945 (Je [Var (Global 203),Con 55,Con 54,Con 54] (Branch F (Dloc 079965)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),55),Equal(MakeHiLo(b1,b2),54)),Equal(MakeHiLo(b1,b2),54))) {
    TraceOperation 079952 (Je [Var (Global 202),Con 112] (Branch F (Dloc 079965)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),112)) {
      TraceOperation 079956 (Call (Floc 022042) [Con 27,Con 112,Var (Global 201)] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame 079956;
      SetLocal 1 27;
      SetLocal 2 112;
      SetLocal 3 MakeHiLo(b5,b6);
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 079965
    }
  } else {
    Jump: 079965
  }
LocReturn 079956:
  PushStack call_result;
  TraceOperation 079964 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 079965:
  TraceOperation 079965 (Je [Var (Global 203),Con 42,Con 27] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),42),Equal(MakeHiLo(b1,b2),27))) {
    TraceOperation 079971 (Je [Var (Global 201),Con 112] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),112)) {
      TraceOperation 079975 (Je [Var (Global 202),Con 32,Con 36,Con 34] (Branch T (Dloc 079986)));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),32),Equal(MakeHiLo(b5,b6),36)),Equal(MakeHiLo(b5,b6),34))) {
        Jump: 079986
      } else {
        TraceOperation 079982 (Je [Var (Global 202),Con 33] (Branch F (Dloc 079992)));
        Let b7 = M[008312];
        Let b8 = M[008313];
        if (Equal(MakeHiLo(b7,b8),33)) {
          Jump: 079986
        } else {
          Jump: 079992
        }
      }
    } else {
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 0
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
LocOp 079986:
  TraceOperation 079986 (Call (Floc 031360) [] Sp);
  PushFrame 079986;
  JumpCall: 031360, #actuals: 0
LocReturn 079986:
  PushStack call_result;
  TraceOperation 079991 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 079992:
  TraceOperation 079992 (Call (Floc 043468) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 079992;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043468, #actuals: 1
LocReturn 079992:
  PushStack call_result;
  TraceOperation 079998 (Jz (Var Sp) (Branch F (Dloc 080013)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 080001 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 080003 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
    Let b4 = M[008312];
    Let b5 = M[008313];
    PushFrame 080003;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  } else {
    Jump: 080013
  }
LocReturn 080003:
  PushStack call_result;
  TraceOperation 080010 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 080013:
  TraceOperation 080013 (Jz (Var (Global 116)) (Branch T (Dloc 080044)));
  Let b1 = M[008140];
  Let b2 = M[008141];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 080044
  } else {
    TraceOperation 080016 (Print "But");
    GamePrint "But";
    TraceOperation 080021 (Call (Floc 043738) [Var (Global 116),Con 1] Sp);
    Let b3 = M[008140];
    Let b4 = M[008141];
    PushFrame 080021;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  }
LocReturn 080021:
  PushStack call_result;
  TraceOperation 080028 (Print " is already in front of the ");
  GamePrint " is already in front of the ";
  TraceOperation 080039 (Print_obj (Con 112));
  Let b1 = M[001766];
  Let b2 = M[001767];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 080041 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 080041 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 080044:
  TraceOperation 080044 (Jz (Var (Global 86)) (Branch T (Dloc 080051)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 080051
  } else {
    TraceOperation 080047 (Print_paddr (Var (Global 50)));
    Let b3 = M[008008];
    Let b4 = M[008009];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 080049 New_line;
    GamePrint "\n";
    TraceOperation 080050 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 080051:
  TraceOperation 080051 (Insert_obj (Var (Global 202)) (Var (Global 0)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 080054 (Store (Con 132) (Var (Global 202)));
    Let b7 = M[008312];
    Let b8 = M[008313];
    SetByte 008140 b7;
    SetByte 008141 b8;
    TraceOperation 080057 (Set_attr (Var (Global 202)) (Con 21));
    Let b9 = M[008312];
    Let b10 = M[008313];
    Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),2)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),2) SetBit(b11,2);
    TraceOperation 080060 (Print "Okay,");
    GamePrint "Okay,";
    TraceOperation 080067 (Je [Var (Global 202),Con 141] (Branch F (Dloc 080095)));
    Let b12 = M[008312];
    Let b13 = M[008313];
    if (Equal(MakeHiLo(b12,b13),141)) {
      TraceOperation 080071 (Print " the satchel is lying on its side");
      GamePrint " the satchel is lying on its side";
      TraceOperation 080092 (Jump 080114);
      Jump: 080114
    } else {
      Jump: 080095
    }
  } else {
    Let b14 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b14),MakeHiLo(b1,b2))) {
      Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b15));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b16));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 080054 (Store (Con 132) (Var (Global 202)));
      Let b17 = M[008312];
      Let b18 = M[008313];
      SetByte 008140 b17;
      SetByte 008141 b18;
      TraceOperation 080057 (Set_attr (Var (Global 202)) (Con 21));
      Let b19 = M[008312];
      Let b20 = M[008313];
      Let b21 = M[Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),2)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),2) SetBit(b21,2);
      TraceOperation 080060 (Print "Okay,");
      GamePrint "Okay,";
      TraceOperation 080067 (Je [Var (Global 202),Con 141] (Branch F (Dloc 080095)));
      Let b22 = M[008312];
      Let b23 = M[008313];
      if (Equal(MakeHiLo(b22,b23),141)) {
        TraceOperation 080071 (Print " the satchel is lying on its side");
        GamePrint " the satchel is lying on its side";
        TraceOperation 080092 (Jump 080114);
        Jump: 080114
      } else {
        Jump: 080095
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 080095:
  TraceOperation 080095 (Set_attr (Var (Global 202)) (Con 27));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3) SetBit(b3,4);
  TraceOperation 080098 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b4 = M[008312];
  Let b5 = M[008313];
  PushFrame 080098;
  SetLocal 1 MakeHiLo(b4,b5);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 080098:
  PushStack call_result;
  TraceOperation 080105 (Print " is sitting");
  GamePrint " is sitting";
  Jump: 080114
LocOp 080114:
  TraceOperation 080114 (Print " in front of the ");
  GamePrint " in front of the ";
  TraceOperation 080121 (Print_obj (Con 112));
  Let b1 = M[001766];
  Let b2 = M[001767];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 080123 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 080123 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[513]--------------------------------------------------
LocRoutine 080126:
  MakeRoutineFrame 0;
  Jump: 080127
LocOp 080127:
  TraceOperation 080127 (Je [Var (Global 203),Con 123,Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),123),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 080133 (Print "That would be foolish. Having a ");
    GamePrint "That would be foolish. Having a ";
    TraceOperation 080154 (Print_obj (Con 111));
    Let b3 = M[001757];
    Let b4 = M[001758];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 080156 (Print_ret " in your ear is terribly useful.");
      GamePrint " in your ear is terribly useful.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 080156 (Print_ret " in your ear is terribly useful.");
      GamePrint " in your ear is terribly useful.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
--[514]--------------------------------------------------
LocRoutine 080178:
  MakeRoutineFrame 0;
  Jump: 080179
LocOp 080179:
  TraceOperation 080179 (Je [Var (Global 203),Con 61] (Branch F (Dloc 080234)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 080183 (Print "The ");
    GamePrint "The ";
    TraceOperation 080186 (Print_obj (Con 181));
    Let b3 = M[002387];
    Let b4 = M[002388];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 080188 (Print " is ");
      GamePrint " is ";
      TraceOperation 080191 (Test_attr (Con 181) (Con 23) (Branch F (Dloc 080203)));
      Let b6 = M[002382];
      if (TestBit(b6,0)) {
        TraceOperation 080195 (Print "open");
        GamePrint "open";
        TraceOperation 080200 (Jump 080206);
        Jump: 080206
      } else {
        Jump: 080203
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 080188 (Print " is ");
      GamePrint " is ";
      TraceOperation 080191 (Test_attr (Con 181) (Con 23) (Branch F (Dloc 080203)));
      Let b7 = M[002382];
      if (TestBit(b7,0)) {
        TraceOperation 080195 (Print "open");
        GamePrint "open";
        TraceOperation 080200 (Jump 080206);
        Jump: 080206
      } else {
        Jump: 080203
      }
    }
  } else {
    Jump: 080234
  }
LocOp 080203:
  TraceOperation 080203 (Print "closed");
  GamePrint "closed";
  Jump: 080206
LocOp 080206:
  TraceOperation 080206 (Print ". Attached to it are a ");
  GamePrint ". Attached to it are a ";
  TraceOperation 080221 (Print_obj (Con 110));
  Let b1 = M[001748];
  Let b2 = M[001749];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 080223 (Print_ret " and a switch.");
    GamePrint " and a switch.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 080223 (Print_ret " and a switch.");
    GamePrint " and a switch.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 080234:
  TraceOperation 080234 (Je [Var (Global 203),Con 103] (Branch F (Dloc 080246)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 080238 (Test_attr (Con 181) (Con 23) (Branch T (Dloc 080246)));
    Let b3 = M[002382];
    if (TestBit(b3,0)) {
      Jump: 080246
    } else {
      TraceOperation 080242 (Print_paddr (Var (Global 26)));
      Let b4 = M[007960];
      Let b5 = M[007961];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 080244 New_line;
      GamePrint "\n";
      TraceOperation 080245 Rtrue;
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 080246
  }
LocOp 080246:
  TraceOperation 080246 (Je [Var (Global 203),Con 45] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),45)) {
    TraceOperation 080250 (Print "The hold of the Vogon ship is virtually undamaged by the explosion of the ");
    GamePrint "The hold of the Vogon ship is virtually undamaged by the explosion of the ";
    TraceOperation 080293 (Print_obj (Con 181));
    Let b3 = M[002387];
    Let b4 = M[002388];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 080295 (Call (Floc 042734) [Con -10946] Sp);
      PushFrame 080295;
      SetLocal 1 -10946;
      JumpCall: 042734, #actuals: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 080295 (Call (Floc 042734) [Con -10946] Sp);
      PushFrame 080295;
      SetLocal 1 -10946;
      JumpCall: 042734, #actuals: 1
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 080295:
  PushStack call_result;
  TraceOperation 080302 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[515]--------------------------------------------------
LocRoutine 080304:
  MakeRoutineFrame 0;
  Jump: 080305
LocOp 080305:
  TraceOperation 080305 (Test_attr (Con 181) (Con 23) (Branch F (Dloc 080329)));
  Let b1 = M[002382];
  if (TestBit(b1,0)) {
    TraceOperation 080309 (Print "Nothing happens.");
    GamePrint "Nothing happens.";
    TraceOperation 080322 New_line;
    GamePrint "\n";
    TraceOperation 080323 (Call (Floc 043634) [] Sp);
    PushFrame 080323;
    JumpCall: 043634, #actuals: 0
  } else {
    Jump: 080329
  }
LocReturn 080323:
  PushStack call_result;
  TraceOperation 080328 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 080329:
  TraceOperation 080329 (Set_attr (Con 181) (Con 23));
  Let b1 = M[002382];
  SetByte 002382 SetBit(b1,0);
  TraceOperation 080332 (Print "The ");
  GamePrint "The ";
  TraceOperation 080335 (Print_obj (Con 181));
  Let b2 = M[002387];
  Let b3 = M[002388];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 080337 (Print " opens.");
    GamePrint " opens.";
    TraceOperation 080344 New_line;
    GamePrint "\n";
    TraceOperation 080345 (Clear_attr (Con 182) (Con 21));
    Let b5 = M[002391];
    SetByte 002391 ClearBit(b5,2);
    TraceOperation 080348 (Jz (Var (Global 113)) (Branch F (Dloc 080358)));
    Let b6 = M[008134];
    Let b7 = M[008135];
    if (IsZero(MakeHiLo(b6,b7))) {
      TraceOperation 080351 (Store (Con 129) (Con 1));
      SetByte 008134 0;
      SetByte 008135 1;
      TraceOperation 080354 (Add (Var (Global 1)) (Con 25) (Global 1));
      Let b8 = M[007910];
      Let b9 = M[007911];
      SetByte 007910 HiByte(Add(MakeHiLo(b8,b9),25));
      SetByte 007911 LoByte(Add(MakeHiLo(b8,b9),25));
      Jump: 080358
    } else {
      Jump: 080358
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 080337 (Print " opens.");
    GamePrint " opens.";
    TraceOperation 080344 New_line;
    GamePrint "\n";
    TraceOperation 080345 (Clear_attr (Con 182) (Con 21));
    Let b10 = M[002391];
    SetByte 002391 ClearBit(b10,2);
    TraceOperation 080348 (Jz (Var (Global 113)) (Branch F (Dloc 080358)));
    Let b11 = M[008134];
    Let b12 = M[008135];
    if (IsZero(MakeHiLo(b11,b12))) {
      TraceOperation 080351 (Store (Con 129) (Con 1));
      SetByte 008134 0;
      SetByte 008135 1;
      TraceOperation 080354 (Add (Var (Global 1)) (Con 25) (Global 1));
      Let b13 = M[007910];
      Let b14 = M[007911];
      SetByte 007910 HiByte(Add(MakeHiLo(b13,b14),25));
      SetByte 007911 LoByte(Add(MakeHiLo(b13,b14),25));
      Jump: 080358
    } else {
      Jump: 080358
    }
  }
LocOp 080358:
  TraceOperation 080358 (Call (Floc 043634) [] Sp);
  PushFrame 080358;
  JumpCall: 043634, #actuals: 0
LocReturn 080358:
  PushStack call_result;
  TraceOperation 080363 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[516]--------------------------------------------------
LocRoutine 080364:
  MakeRoutineFrame 0;
  Jump: 080365
LocOp 080365:
  TraceOperation 080365 (Je [Var (Global 203),Con 114,Con 145,Con 88] (Branch T (Dloc 080378)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),114),Equal(MakeHiLo(b1,b2),145)),Equal(MakeHiLo(b1,b2),88))) {
    Jump: 080378
  } else {
    TraceOperation 080372 (Je [Var (Global 203),Con 154,Con 98] (Branch F Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),154),Equal(MakeHiLo(b3,b4),98))) {
      Jump: 080378
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  }
LocOp 080378:
  TraceOperation 080378 (Call (Floc 043468) [Con 111] Sp);
  PushFrame 080378;
  SetLocal 1 111;
  JumpCall: 043468, #actuals: 1
LocReturn 080378:
  PushStack call_result;
  TraceOperation 080384 (Jz (Var Sp) (Branch T (Dloc 080543)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 080543
  } else {
    TraceOperation 080388 (Print "A recording plays: \"To open the case, type in the ");
    GamePrint "A recording plays: \"To open the case, type in the ";
    TraceOperation 080423 (Je [Var (Global 106),Con 1] (Branch F (Dloc 080435)));
    Let b2 = M[008120];
    Let b3 = M[008121];
    if (Equal(MakeHiLo(b2,b3),1)) {
      TraceOperation 080427 (Print "first");
      GamePrint "first";
      TraceOperation 080432 (Jump 080456);
      Jump: 080456
    } else {
      Jump: 080435
    }
  }
LocOp 080435:
  TraceOperation 080435 (Je [Var (Global 106),Con 2] (Branch F (Dloc 080447)));
  Let b1 = M[008120];
  Let b2 = M[008121];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 080439 (Print "second");
    GamePrint "second";
    TraceOperation 080444 (Jump 080456);
    Jump: 080456
  } else {
    Jump: 080447
  }
LocOp 080447:
  TraceOperation 080447 (Je [Var (Global 106),Con 3] (Branch F (Dloc 080456)));
  Let b1 = M[008120];
  Let b2 = M[008121];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 080451 (Print "third");
    GamePrint "third";
    Jump: 080456
  } else {
    Jump: 080456
  }
LocOp 080456:
  TraceOperation 080456 (Print_ret " word from the second verse of the Captain's current favourite poem. WARNING: An incorrect input will cause the case to explode.\"");
  GamePrint " word from the second verse of the Captain's current favourite poem. WARNING: An incorrect input will cause the case to explode.\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 080543:
  TraceOperation 080543 (Print "A recording plays: \"A");
  GamePrint "A recording plays: \"A";
  TraceOperation 080562 (Call (Floc 080570) [Con 5] Sp);
  PushFrame 080562;
  SetLocal 1 5;
  JumpCall: 080570, #actuals: 1
LocReturn 080562:
  PushStack call_result;
  TraceOperation 080568 New_line;
  GamePrint "\n";
  TraceOperation 080569 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[517]--------------------------------------------------
LocRoutine 080570:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 080577
LocOp 080577:
  TraceOperation 080577 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 080580
LocOp 080580:
  TraceOperation 080580 (Inc (Con 3));
  SetLocal 3 Add(GetLocal(3),1);
  TraceOperation 080582 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 080585
LocOp 080585:
  TraceOperation 080585 (Inc (Con 2));
  SetLocal 2 Add(GetLocal(2),1);
  TraceOperation 080587 (Call (Floc 020718) [Var (Global 112)] Sp);
  Let b1 = M[008132];
  Let b2 = M[008133];
  PushFrame 080587;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020718, #actuals: 1
LocReturn 080587:
  PushStack call_result;
  TraceOperation 080593 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 080595 (Je [Var (Local 2),Con 10] (Branch F (Dloc 080585)));
  if (Equal(GetLocal(2),10)) {
    TraceOperation 080600 (Je [Var (Local 3),Var (Local 1)] (Branch T (Dloc 080607)));
    if (Equal(GetLocal(3),GetLocal(1))) {
      Jump: 080607
    } else {
      TraceOperation 080604 (Print " o");
      GamePrint " o";
      Jump: 080607
    }
  } else {
    Jump: 080585
  }
LocOp 080607:
  TraceOperation 080607 (Je [Var (Local 3),Var (Local 1)] (Branch F (Dloc 080580)));
  if (Equal(GetLocal(3),GetLocal(1))) {
    TraceOperation 080612 (Print ".\"");
    GamePrint ".\"";
    TraceOperation 080617 Rtrue;
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 1
  } else {
    Jump: 080580
  }
--[518]--------------------------------------------------
LocRoutine 080618:
  MakeRoutineFrame 0;
  Jump: 080619
LocOp 080619:
  TraceOperation 080619 (Call (Floc 022320) [Con -25227,Con -1] Sp);
  PushFrame 080619;
  SetLocal 1 -25227;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 080619:
  PushStack call_result;
  TraceOperation 080628 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 080633 New_line;
  GamePrint "\n";
  TraceOperation 080634 (Print "An announcement is coming over the ship's intercom. \"");
  GamePrint "An announcement is coming over the ship's intercom. \"";
  TraceOperation 080671 (Call (Floc 043468) [Con 111,Con 31] Sp);
  PushFrame 080671;
  SetLocal 1 111;
  SetLocal 2 31;
  JumpCall: 043468, #actuals: 2
LocReturn 080671:
  PushStack call_result;
  TraceOperation 080678 (Jz (Var Sp) (Branch T (Dloc 080837)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 080837
  } else {
    TraceOperation 080682 (Print_ret "This is the Captain. My instruments show that we've picked up a couple of hitchhikers. I hate freeloaders, and when my guards find you I'll have you thrown into space. On second thought, maybe I'll read you some of my poetry first. Repeating...\"");
    GamePrint "This is the Captain. My instruments show that we've picked up a couple of hitchhikers. I hate freeloaders, and when my guards find you I'll have you thrown into space. On second thought, maybe I'll read you some of my poetry first. Repeating...\"\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 080837:
  TraceOperation 080837 (Print "E");
  GamePrint "E";
  TraceOperation 080840 (Call (Floc 080570) [Con 10] Sp);
  PushFrame 080840;
  SetLocal 1 10;
  JumpCall: 080570, #actuals: 1
LocReturn 080840:
  PushStack call_result;
  TraceOperation 080846 New_line;
  GamePrint "\n";
  TraceOperation 080847 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[519]--------------------------------------------------
LocRoutine 080848:
  MakeRoutineFrame 0;
  Jump: 080849
LocOp 080849:
  TraceOperation 080849 (Je [Var (Global 0),Con 121] (Branch F (Dloc 081007)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 080854 (Call (Floc 022340) [Con -25227] Sp);
    PushFrame 080854;
    SetLocal 1 -25227;
    JumpCall: 022340, #actuals: 1
  } else {
    Jump: 081007
  }
LocReturn 080854:
  PushStack call_result;
  TraceOperation 080861 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 080866 New_line;
  GamePrint "\n";
  TraceOperation 080867 (Print "Guards burst in and grab you and Ford, who comes slowly awake. They drag you down the corridor to a large cabin, where they strap you into large, menacing chairs...");
  GamePrint "Guards burst in and grab you and Ford, who comes slowly awake. They drag you down the corridor to a large cabin, where they strap you into large, menacing chairs...";
  TraceOperation 080962 New_line;
  GamePrint "\n";
  TraceOperation 080963 New_line;
  GamePrint "\n";
  TraceOperation 080964 (Store (Con 16) (Con 108));
  SetByte 007908 0;
  SetByte 007909 108;
  TraceOperation 080967 (Insert_obj (Con 94) (Var (Global 0)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[001601];
  if (IsZero(Widen(b4))) {
    SetByte 001601 b3;
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    SetByte 001602 LoByte(Widen(b5));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 94;
    TraceOperation 080970 (Store (Con 102) (Con 0));
    SetByte 008080 0;
    SetByte 008081 0;
    TraceOperation 080973 (Call (Floc 022320) [Con -24890,Con 2] Sp);
    PushFrame 080973;
    SetLocal 1 -24890;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
    if (Equal(Widen(b6),94)) {
      Let b7 = M[001602];
      SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b7));
      SetByte 001601 b3;
      Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte 001602 LoByte(Widen(b8));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 94;
      TraceOperation 080970 (Store (Con 102) (Con 0));
      SetByte 008080 0;
      SetByte 008081 0;
      TraceOperation 080973 (Call (Floc 022320) [Con -24890,Con 2] Sp);
      PushFrame 080973;
      SetLocal 1 -24890;
      SetLocal 2 2;
      JumpCall: 022320, #actuals: 2
    } else {
      Error: unlink/loop
    }
  }
LocReturn 080973:
  PushStack call_result;
  TraceOperation 080981 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 080986 (Store (Con 152) (Con 0));
  SetByte 008180 0;
  SetByte 008181 0;
  TraceOperation 080989 (Set_attr (Con 142) (Con 27));
  Let b2 = M[002032];
  SetByte 002032 SetBit(b2,4);
  TraceOperation 080992 (Insert_obj (Con 31) (Con 107));
  Let b3 = M[001034];
  if (IsZero(Widen(b3))) {
    SetByte 001034 107;
    Let b4 = M[001720];
    SetByte 001035 LoByte(Widen(b4));
    SetByte 001720 31;
    TraceOperation 080995 (Call (Floc 034400) [] Sp);
    PushFrame 080995;
    JumpCall: 034400, #actuals: 0
  } else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b5),31)) {
      Let b6 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
      SetByte 001034 107;
      Let b7 = M[001720];
      SetByte 001035 LoByte(Widen(b7));
      SetByte 001720 31;
      TraceOperation 080995 (Call (Floc 034400) [] Sp);
      PushFrame 080995;
      JumpCall: 034400, #actuals: 0
    } else {
      Error: unlink/loop
    }
  }
LocReturn 080995:
  PushStack call_result;
  TraceOperation 081000 (Insert_obj (Con 142) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002033];
  if (IsZero(Widen(b3))) {
    SetByte 002033 b2;
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 002034 LoByte(Widen(b4));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 142;
    TraceOperation 081003 (Insert_obj (Con 27) (Var (Global 0)));
    Let b5 = M[007908];
    Let b6 = M[007909];
    Let b7 = M[000998];
    if (IsZero(Widen(b7))) {
      SetByte 000998 b6;
      Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte 000999 LoByte(Widen(b8));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 27;
      TraceOperation 081006 Rtrue;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Let b10 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b10),27)) {
        Let b11 = M[000999];
        SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b11));
        SetByte 000998 b6;
        Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
        SetByte 000999 LoByte(Widen(b12));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 27;
        TraceOperation 081006 Rtrue;
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b14 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b14),142)) {
      Let b15 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b15));
      SetByte 002033 b2;
      Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 002034 LoByte(Widen(b16));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 142;
      TraceOperation 081003 (Insert_obj (Con 27) (Var (Global 0)));
      Let b17 = M[007908];
      Let b18 = M[007909];
      Let b19 = M[000998];
      if (IsZero(Widen(b19))) {
        SetByte 000998 b18;
        Let b20 = M[Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6)];
        SetByte 000999 LoByte(Widen(b20));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6) 27;
        TraceOperation 081006 Rtrue;
        PopFrame return_address_21;
        JumpReturn: return_address_21, result: 1
      } else {
        Let b22 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
        if (Equal(Widen(b22),27)) {
          Let b23 = M[000999];
          SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b23));
          SetByte 000998 b18;
          Let b24 = M[Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6)];
          SetByte 000999 LoByte(Widen(b24));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),6) 27;
          TraceOperation 081006 Rtrue;
          PopFrame return_address_25;
          JumpReturn: return_address_25, result: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 081007:
  TraceOperation 081007 (Jin (Con 51) (Con 219) (Branch T Dfalse));
  Let b1 = M[001214];
  if (Equal(219,Widen(b1))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 081011 New_line;
    GamePrint "\n";
    TraceOperation 081012 (Print_paddr (Var (Global 31)));
    Let b3 = M[007970];
    Let b4 = M[007971];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 081014 (Print "They");
    GamePrint "They";
    TraceOperation 081019 (Call (Floc 092666) [] Sp);
    PushFrame 081019;
    JumpCall: 092666, #actuals: 0
  }
LocReturn 081019:
  PushStack call_result;
  TraceOperation 081024 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[520]--------------------------------------------------
LocRoutine 081026:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 081029
LocOp 081029:
  TraceOperation 081029 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 081033 (Print "This is the cabin of the ");
    GamePrint "This is the cabin of the ";
    TraceOperation 081044 (Print_obj (Con 106));
    Let b1 = M[001712];
    Let b2 = M[001713];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 081046 (Print ". You and Ford are strapped into ");
      GamePrint ". You and Ford are strapped into ";
      TraceOperation 081061 (Print_obj (Con 107));
      Let b4 = M[001721];
      Let b5 = M[001722];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      if (IsZeroByte(b6)) {
        GamePrint "";
        TraceOperation 081063 (Print_ret "s.");
        GamePrint "s.\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
        TraceOperation 081063 (Print_ret "s.");
        GamePrint "s.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 081046 (Print ". You and Ford are strapped into ");
      GamePrint ". You and Ford are strapped into ";
      TraceOperation 081061 (Print_obj (Con 107));
      Let b9 = M[001721];
      Let b10 = M[001722];
      Let b11 = M[Address(MakeHiLo(b9,b10))];
      if (IsZeroByte(b11)) {
        GamePrint "";
        TraceOperation 081063 (Print_ret "s.");
        GamePrint "s.\n";
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
        TraceOperation 081063 (Print_ret "s.");
        GamePrint "s.\n";
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      }
    }
  } else {
    PopFrame return_address_14;
    JumpReturn: return_address_14, result: 0
  }
--[521]--------------------------------------------------
LocRoutine 081066:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 081069
LocOp 081069:
  TraceOperation 081069 (Jz (Var (Local 1)) (Branch F Dfalse));
  if (IsZero(GetLocal(1))) {
    TraceOperation 081072 (Je [Var (Global 203),Con 81,Con 169,Con 48] (Branch T (Dloc 081083)));
    Let b1 = M[008314];
    Let b2 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),81),Equal(MakeHiLo(b1,b2),169)),Equal(MakeHiLo(b1,b2),48))) {
      Jump: 081083
    } else {
      TraceOperation 081079 (Je [Var (Global 203),Con 168] (Branch F (Dloc 081118)));
      Let b3 = M[008314];
      Let b4 = M[008315];
      if (Equal(MakeHiLo(b3,b4),168)) {
        Jump: 081083
      } else {
        Jump: 081118
      }
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 081083:
  TraceOperation 081083 (Store (Con 229) (Con 7));
  SetByte 008334 0;
  SetByte 008335 7;
  TraceOperation 081086 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame 081086;
  SetLocal 1 -14349;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 081086:
  PushStack call_result;
  TraceOperation 081094 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 081099 (Print_ret "You're strapped in, remember?");
  GamePrint "You're strapped in, remember?\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 081118:
  TraceOperation 081118 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 081124 (Je [Var (Global 201),Con 107] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),107)) {
      TraceOperation 081128 (Call (Floc 057650) [] Sp);
      PushFrame 081128;
      JumpCall: 057650, #actuals: 0
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 081128:
  PushStack call_result;
  TraceOperation 081133 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[522]--------------------------------------------------
LocRoutine 081134:
  MakeRoutineFrame 0;
  Jump: 081135
LocOp 081135:
  TraceOperation 081135 (Je [Var (Global 203),Con 153,Con 75,Con 15] (Branch T (Dloc 081154)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),153),Equal(MakeHiLo(b1,b2),75)),Equal(MakeHiLo(b1,b2),15))) {
    Jump: 081154
  } else {
    TraceOperation 081142 (Je [Var (Global 203),Con 23,Con 22] (Branch F (Dloc 081275)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),23),Equal(MakeHiLo(b3,b4),22))) {
      TraceOperation 081149 (Je [Con 106,Var (Global 201)] (Branch F (Dloc 081275)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(106,MakeHiLo(b5,b6))) {
        Jump: 081154
      } else {
        Jump: 081275
      }
    } else {
      Jump: 081275
    }
  }
LocOp 081154:
  TraceOperation 081154 (Print "One of the guards lightly bashes your skull with the butt of his weapon");
  GamePrint "One of the guards lightly bashes your skull with the butt of his weapon";
  TraceOperation 081195 (Call (Floc 043468) [Con 111] Sp);
  PushFrame 081195;
  SetLocal 1 111;
  JumpCall: 043468, #actuals: 1
LocReturn 081195:
  PushStack call_result;
  TraceOperation 081201 (Jz (Var Sp) (Branch T (Dloc 081251)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 081251
  } else {
    TraceOperation 081204 (Print ". \"This is a poetry appreciation session, prisoner. No talking!\"");
    GamePrint ". \"This is a poetry appreciation session, prisoner. No talking!\"";
    TraceOperation 081247 New_line;
    GamePrint "\n";
    TraceOperation 081248 (Jump 081269);
    Jump: 081269
  }
LocOp 081251:
  TraceOperation 081251 (Print " and says, \"A");
  GamePrint " and says, \"A";
  TraceOperation 081262 (Call (Floc 080570) [Con 2] Sp);
  PushFrame 081262;
  SetLocal 1 2;
  JumpCall: 080570, #actuals: 1
LocReturn 081262:
  PushStack call_result;
  TraceOperation 081268 New_line;
  GamePrint "\n";
  Jump: 081269
LocOp 081269:
  TraceOperation 081269 (Call (Floc 043634) [] Sp);
  PushFrame 081269;
  JumpCall: 043634, #actuals: 0
LocReturn 081269:
  PushStack call_result;
  TraceOperation 081274 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 081275:
  TraceOperation 081275 (Jin (Con 105) (Var (Global 0)) (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001700];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 081279 (Je [Var (Global 203),Con 26] (Branch F Dfalse));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),26)) {
      TraceOperation 081283 (Call (Floc 022042) [Con 74,Con 105] Sp);
      PushFrame 081283;
      SetLocal 1 74;
      SetLocal 2 105;
      JumpCall: 022042, #actuals: 2
    } else {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocReturn 081283:
  PushStack call_result;
  TraceOperation 081290 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[523]--------------------------------------------------
LocRoutine 081292:
  MakeRoutineFrame 0;
  Jump: 081293
LocOp 081293:
  TraceOperation 081293 (Call (Floc 022320) [Con -24890,Con -1] Sp);
  PushFrame 081293;
  SetLocal 1 -24890;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 081293:
  PushStack call_result;
  TraceOperation 081302 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 081307 (Inc (Con 127));
  Let b2 = M[008130];
  Let b3 = M[008131];
  SetByte 008130 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008131 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 081309 New_line;
  GamePrint "\n";
  TraceOperation 081310 (Je [Var (Global 111),Con 1] (Branch F (Dloc 081398)));
  Let b4 = M[008130];
  Let b5 = M[008131];
  if (Equal(MakeHiLo(b4,b5),1)) {
    TraceOperation 081315 (Print "\"If he's going to read us his poetry,\" mutters Ford, sweating profusely, \"just pray he softens us up with some cudgels first...\"");
    GamePrint "\"If he's going to read us his poetry,\" mutters Ford, sweating profusely, \"just pray he softens us up with some cudgels first...\"";
    TraceOperation 081396 New_line;
    GamePrint "\n";
    TraceOperation 081397 New_line;
    GamePrint "\n";
    Jump: 081398
  } else {
    Jump: 081398
  }
LocOp 081398:
  TraceOperation 081398 (Call (Floc 043468) [Con 111,Con 31] Sp);
  PushFrame 081398;
  SetLocal 1 111;
  SetLocal 2 31;
  JumpCall: 043468, #actuals: 2
LocReturn 081398:
  PushStack call_result;
  TraceOperation 081405 (Jz (Var Sp) (Branch F (Dloc 081440)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 081408 (Print "The ");
    GamePrint "The ";
    TraceOperation 081411 (Print_obj (Con 106));
    Let b2 = M[001712];
    Let b3 = M[001713];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 081413 (Print " says, \"O");
      GamePrint " says, \"O";
      TraceOperation 081422 (Call (Floc 080570) [Con 2] Sp);
      PushFrame 081422;
      SetLocal 1 2;
      JumpCall: 080570, #actuals: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 081413 (Print " says, \"O");
      GamePrint " says, \"O";
      TraceOperation 081422 (Call (Floc 080570) [Con 2] Sp);
      PushFrame 081422;
      SetLocal 1 2;
      JumpCall: 080570, #actuals: 1
    }
  } else {
    Jump: 081440
  }
LocReturn 081422:
  PushStack call_result;
  TraceOperation 081428 (Je [Var (Global 111),Con 6] (Branch F (Dloc 081438)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 081432 (Call (Floc 082066) [] Sp);
    PushFrame 081432;
    JumpCall: 082066, #actuals: 0
  } else {
    Jump: 081438
  }
LocReturn 081432:
  PushStack call_result;
  TraceOperation 081437 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 081438:
  TraceOperation 081438 New_line;
  GamePrint "\n";
  TraceOperation 081439 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 081440:
  TraceOperation 081440 (Je [Var (Global 111),Con 1] (Branch F (Dloc 081507)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 081445 (Print "\"Hello, hitchhikers!\" begins the ");
    GamePrint "\"Hello, hitchhikers!\" begins the ";
    TraceOperation 081470 (Print_obj (Con 106));
    Let b3 = M[001712];
    Let b4 = M[001713];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 081472 (Print_ret ". \"I've decided to read you a verse of my poetry!\"");
      GamePrint ". \"I've decided to read you a verse of my poetry!\"\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 081472 (Print_ret ". \"I've decided to read you a verse of my poetry!\"");
      GamePrint ". \"I've decided to read you a verse of my poetry!\"\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 081507
  }
LocOp 081507:
  TraceOperation 081507 (Je [Var (Global 111),Con 2] (Branch F (Dloc 081550)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 081511 (Print_ret "\"Oh freddled gruntbuggly, thy nacturations are to me!\"");
    GamePrint "\"Oh freddled gruntbuggly, thy nacturations are to me!\"\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 081550
  }
LocOp 081550:
  TraceOperation 081550 (Je [Var (Global 111),Con 3] (Branch F (Dloc 081589)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 081554 (Print_ret "\"As plurdled gabbleblotchits on a lurgid bee.\"");
    GamePrint "\"As plurdled gabbleblotchits on a lurgid bee.\"\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 081589
  }
LocOp 081589:
  TraceOperation 081589 (Je [Var (Global 111),Con 4] (Branch F (Dloc 081630)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 081593 (Print_ret "\"Groop I implore thee, my foonting turlingdromes.\"");
    GamePrint "\"Groop I implore thee, my foonting turlingdromes.\"\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 081630
  }
LocOp 081630:
  TraceOperation 081630 (Je [Var (Global 111),Con 5] (Branch F (Dloc 081722)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 081635 (Print_ret "\"And hooptiously drangle me with crinkly bindlewurdles, or I will rend thee in the gobberwarts with my blurglecruncheon, see if I don't!\"");
    GamePrint "\"And hooptiously drangle me with crinkly bindlewurdles, or I will rend thee in the gobberwarts with my blurglecruncheon, see if I don't!\"\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 081722
  }
LocOp 081722:
  TraceOperation 081722 (Je [Var (Global 111),Con 6] (Branch F (Dloc 081851)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 081727 (Jz (Var (Global 105)) (Branch T (Dloc 081794)));
    Let b3 = M[008118];
    Let b4 = M[008119];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 081794
    } else {
      TraceOperation 081731 (Print_ret "\"You looked like you enjoyed my poem. I think...yes, I think I'll read the NEXT verse, also!\"");
      GamePrint "\"You looked like you enjoyed my poem. I think...yes, I think I'll read the NEXT verse, also!\"\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 081851
  }
LocOp 081794:
  TraceOperation 081794 (Print "\"You didn't seem to enjoy my poem at all! Guards, toss them out the airlock!\"");
  GamePrint "\"You didn't seem to enjoy my poem at all! Guards, toss them out the airlock!\"";
  TraceOperation 081845 (Call (Floc 082066) [] Sp);
  PushFrame 081845;
  JumpCall: 082066, #actuals: 0
LocReturn 081845:
  PushStack call_result;
  TraceOperation 081850 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 081851:
  TraceOperation 081851 (Je [Var (Global 111),Con 7] (Branch F (Dloc 081879)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 081855 (Je [Var (Global 107),Con 1,Con 2] (Branch F (Dloc 081865)));
    Let b3 = M[008122];
    Let b4 = M[008123];
    if (LogOr(Equal(MakeHiLo(b3,b4),1),Equal(MakeHiLo(b3,b4),2))) {
      TraceOperation 081861 (Print_paddr (Var (Global 110)));
      Let b5 = M[008128];
      Let b6 = M[008129];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 081863 New_line;
      GamePrint "\n";
      TraceOperation 081864 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 081865
    }
  } else {
    Jump: 081879
  }
LocOp 081865:
  TraceOperation 081865 (Je [Var (Global 107),Con 3,Con 4] (Branch F (Dloc 081875)));
  Let b1 = M[008122];
  Let b2 = M[008123];
  if (LogOr(Equal(MakeHiLo(b1,b2),3),Equal(MakeHiLo(b1,b2),4))) {
    TraceOperation 081871 (Print_paddr (Var (Global 109)));
    Let b3 = M[008126];
    Let b4 = M[008127];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 081873 New_line;
    GamePrint "\n";
    TraceOperation 081874 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 081875
  }
LocOp 081875:
  TraceOperation 081875 (Print_paddr (Var (Global 108)));
  Let b1 = M[008124];
  Let b2 = M[008125];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 081877 New_line;
  GamePrint "\n";
  TraceOperation 081878 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
LocOp 081879:
  TraceOperation 081879 (Je [Var (Global 111),Con 8] (Branch F (Dloc 081907)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 081883 (Je [Var (Global 107),Con 3,Con 5] (Branch F (Dloc 081893)));
    Let b3 = M[008122];
    Let b4 = M[008123];
    if (LogOr(Equal(MakeHiLo(b3,b4),3),Equal(MakeHiLo(b3,b4),5))) {
      TraceOperation 081889 (Print_paddr (Var (Global 110)));
      Let b5 = M[008128];
      Let b6 = M[008129];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 081891 New_line;
      GamePrint "\n";
      TraceOperation 081892 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 081893
    }
  } else {
    Jump: 081907
  }
LocOp 081893:
  TraceOperation 081893 (Je [Var (Global 107),Con 1,Con 6] (Branch F (Dloc 081903)));
  Let b1 = M[008122];
  Let b2 = M[008123];
  if (LogOr(Equal(MakeHiLo(b1,b2),1),Equal(MakeHiLo(b1,b2),6))) {
    TraceOperation 081899 (Print_paddr (Var (Global 109)));
    Let b3 = M[008126];
    Let b4 = M[008127];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 081901 New_line;
    GamePrint "\n";
    TraceOperation 081902 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 081903
  }
LocOp 081903:
  TraceOperation 081903 (Print_paddr (Var (Global 108)));
  Let b1 = M[008124];
  Let b2 = M[008125];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 081905 New_line;
  GamePrint "\n";
  TraceOperation 081906 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
LocOp 081907:
  TraceOperation 081907 (Je [Var (Global 111),Con 9] (Branch F (Dloc 081935)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 081911 (Je [Var (Global 107),Con 4,Con 6] (Branch F (Dloc 081921)));
    Let b3 = M[008122];
    Let b4 = M[008123];
    if (LogOr(Equal(MakeHiLo(b3,b4),4),Equal(MakeHiLo(b3,b4),6))) {
      TraceOperation 081917 (Print_paddr (Var (Global 110)));
      Let b5 = M[008128];
      Let b6 = M[008129];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 081919 New_line;
      GamePrint "\n";
      TraceOperation 081920 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 081921
    }
  } else {
    Jump: 081935
  }
LocOp 081921:
  TraceOperation 081921 (Je [Var (Global 107),Con 2,Con 5] (Branch F (Dloc 081931)));
  Let b1 = M[008122];
  Let b2 = M[008123];
  if (LogOr(Equal(MakeHiLo(b1,b2),2),Equal(MakeHiLo(b1,b2),5))) {
    TraceOperation 081927 (Print_paddr (Var (Global 109)));
    Let b3 = M[008126];
    Let b4 = M[008127];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 081929 New_line;
    GamePrint "\n";
    TraceOperation 081930 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 081931
  }
LocOp 081931:
  TraceOperation 081931 (Print_paddr (Var (Global 108)));
  Let b1 = M[008124];
  Let b2 = M[008125];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 081933 New_line;
  GamePrint "\n";
  TraceOperation 081934 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
LocOp 081935:
  TraceOperation 081935 (Je [Var (Global 111),Con 10] (Branch F (Dloc 081986)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 081939 (Print_ret "\"Gerond withoutitude form into formless bloit, why not then? Moose.\"");
    GamePrint "\"Gerond withoutitude form into formless bloit, why not then? Moose.\"\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 081986
  }
LocOp 081986:
  TraceOperation 081986 (Je [Var (Global 111),Con 11] (Branch F Dfalse));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 081990 (Print "\"Since you have somehow managed to survive two verses of my poetry, I have no choice but to space you. Guards!\"");
    GamePrint "\"Since you have somehow managed to survive two verses of my poetry, I have no choice but to space you. Guards!\"";
    TraceOperation 082059 (Call (Floc 082066) [] Sp);
    PushFrame 082059;
    JumpCall: 082066, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 082059:
  PushStack call_result;
  TraceOperation 082064 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[524]--------------------------------------------------
LocRoutine 082066:
  MakeRoutineFrame 0;
  Jump: 082067
LocOp 082067:
  TraceOperation 082067 (Call (Floc 022340) [Con -24890] Sp);
  PushFrame 082067;
  SetLocal 1 -24890;
  JumpCall: 022340, #actuals: 1
LocReturn 082067:
  PushStack call_result;
  TraceOperation 082074 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 082079 (Print " A guard grabs you and Ford, and drags you toward the hold. Ford whispers, \"Don't worry, I'll think of something!\"");
  GamePrint " A guard grabs you and Ford, and drags you toward the hold. Ford whispers, \"Don't worry, I'll think of something!\"";
  TraceOperation 082140 New_line;
  GamePrint "\n";
  TraceOperation 082141 New_line;
  GamePrint "\n";
  TraceOperation 082142 (Clear_attr (Con 121) (Con 5));
  Let b2 = M[001840];
  SetByte 001840 ClearBit(b2,2);
  TraceOperation 082145 (Call (Floc 042574) [Con 121] Sp);
  PushFrame 082145;
  SetLocal 1 121;
  JumpCall: 042574, #actuals: 1
LocReturn 082145:
  PushStack call_result;
  TraceOperation 082151 (Clear_attr (Con 142) (Con 27));
  Let b1 = M[002032];
  SetByte 002032 ClearBit(b1,4);
  TraceOperation 082154 (Insert_obj (Con 27) (Var (Global 0)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[000998];
  if (IsZero(Widen(b4))) {
    SetByte 000998 b3;
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    SetByte 000999 LoByte(Widen(b5));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 27;
    TraceOperation 082157 (Insert_obj (Con 142) (Var (Global 0)));
    Let b6 = M[007908];
    Let b7 = M[007909];
    Let b8 = M[002033];
    if (IsZero(Widen(b8))) {
      SetByte 002033 b7;
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
      SetByte 002034 LoByte(Widen(b9));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 142;
      TraceOperation 082160 (Call (Floc 022320) [Con -32630,Con 1] Sp);
      PushFrame 082160;
      SetLocal 1 -32630;
      SetLocal 2 1;
      JumpCall: 022320, #actuals: 2
    } else {
      Let b10 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
      if (Equal(Widen(b10),142)) {
        Let b11 = M[002034];
        SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b11));
        SetByte 002033 b7;
        Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
        SetByte 002034 LoByte(Widen(b12));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 142;
        TraceOperation 082160 (Call (Floc 022320) [Con -32630,Con 1] Sp);
        PushFrame 082160;
        SetLocal 1 -32630;
        SetLocal 2 1;
        JumpCall: 022320, #actuals: 2
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b13 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
    if (Equal(Widen(b13),27)) {
      Let b14 = M[000999];
      SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b14));
      SetByte 000998 b3;
      Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte 000999 LoByte(Widen(b15));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 27;
      TraceOperation 082157 (Insert_obj (Con 142) (Var (Global 0)));
      Let b16 = M[007908];
      Let b17 = M[007909];
      Let b18 = M[002033];
      if (IsZero(Widen(b18))) {
        SetByte 002033 b17;
        Let b19 = M[Offset(Offset(000751,Mul(MakeHiLo(b16,b17),9)),6)];
        SetByte 002034 LoByte(Widen(b19));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b16,b17),9)),6) 142;
        TraceOperation 082160 (Call (Floc 022320) [Con -32630,Con 1] Sp);
        PushFrame 082160;
        SetLocal 1 -32630;
        SetLocal 2 1;
        JumpCall: 022320, #actuals: 2
      } else {
        Let b20 = M[Offset(Offset(000751,Mul(Widen(b18),9)),6)];
        if (Equal(Widen(b20),142)) {
          Let b21 = M[002034];
          SetByte Offset(Offset(000751,Mul(Widen(b18),9)),6) LoByte(Widen(b21));
          SetByte 002033 b17;
          Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b16,b17),9)),6)];
          SetByte 002034 LoByte(Widen(b22));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b16,b17),9)),6) 142;
          TraceOperation 082160 (Call (Floc 022320) [Con -32630,Con 1] Sp);
          PushFrame 082160;
          SetLocal 1 -32630;
          SetLocal 2 1;
          JumpCall: 022320, #actuals: 2
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 082160:
  PushStack call_result;
  TraceOperation 082168 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 082173 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[525]--------------------------------------------------
LocRoutine 082174:
  MakeRoutineFrame 0;
  Jump: 082175
LocOp 082175:
  TraceOperation 082175 (Je [Var (Global 203),Con 74,Con 57] (Branch F (Dloc 082205)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),74),Equal(MakeHiLo(b1,b2),57))) {
    TraceOperation 082181 (Jl (Var (Global 111)) (Con 2) (Branch F (Dloc 082205)));
    Let b3 = M[008130];
    Let b4 = M[008131];
    if (LessThan(MakeHiLo(b3,b4),2)) {
      TraceOperation 082185 (Print "The ");
      GamePrint "The ";
      TraceOperation 082188 (Print_obj (Con 106));
      Let b5 = M[001712];
      Let b6 = M[001713];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 082190 (Print_ret " hasn't begun yet!");
        GamePrint " hasn't begun yet!\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 082190 (Print_ret " hasn't begun yet!");
        GamePrint " hasn't begun yet!\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      }
    } else {
      Jump: 082205
    }
  } else {
    Jump: 082205
  }
LocOp 082205:
  TraceOperation 082205 (Je [Var (Global 203),Con 57] (Branch F (Dloc 082429)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 082210 (Call (Floc 043468) [Con 111] Sp);
    PushFrame 082210;
    SetLocal 1 111;
    JumpCall: 043468, #actuals: 1
  } else {
    Jump: 082429
  }
LocReturn 082210:
  PushStack call_result;
  TraceOperation 082216 (Jz (Var Sp) (Branch F (Dloc 082246)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 082219 (Print_ret "You can't even understand it, let alone enjoy it!");
    GamePrint "You can't even understand it, let alone enjoy it!\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    Jump: 082246
  }
LocOp 082246:
  TraceOperation 082246 (Jz (Var (Global 105)) (Branch T (Dloc 082288)));
  Let b1 = M[008118];
  Let b2 = M[008119];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 082288
  } else {
    TraceOperation 082249 (Store (Con 229) (Con 8));
    SetByte 008334 0;
    SetByte 008335 8;
    TraceOperation 082252 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame 082252;
    SetLocal 1 -14349;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  }
LocReturn 082252:
  PushStack call_result;
  TraceOperation 082260 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 082265 (Print_ret "Hey, let's not overdo it, okay?");
  GamePrint "Hey, let's not overdo it, okay?\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 082288:
  TraceOperation 082288 (Store (Con 121) (Con 1));
  SetByte 008118 0;
  SetByte 008119 1;
  TraceOperation 082291 (Add (Var (Global 1)) (Con 15) (Global 1));
  Let b1 = M[007910];
  Let b2 = M[007911];
  SetByte 007910 HiByte(Add(MakeHiLo(b1,b2),15));
  SetByte 007911 LoByte(Add(MakeHiLo(b1,b2),15));
  TraceOperation 082295 (Print "You realise that, although the ");
  GamePrint "You realise that, although the ";
  TraceOperation 082314 (Print_obj (Con 105));
  Let b3 = M[001703];
  Let b4 = M[001704];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 082316 (Print_ret " is indeed astoundingly bad, worse things happen at sea, and in fact, at school. With an effort for which Hercules himself would have patted you on the back, you grit your teeth and enjoy the stuff.");
    GamePrint " is indeed astoundingly bad, worse things happen at sea, and in fact, at school. With an effort for which Hercules himself would have patted you on the back, you grit your teeth and enjoy the stuff.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 082316 (Print_ret " is indeed astoundingly bad, worse things happen at sea, and in fact, at school. With an effort for which Hercules himself would have patted you on the back, you grit your teeth and enjoy the stuff.");
    GamePrint " is indeed astoundingly bad, worse things happen at sea, and in fact, at school. With an effort for which Hercules himself would have patted you on the back, you grit your teeth and enjoy the stuff.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 082429:
  TraceOperation 082429 (Je [Var (Global 203),Con 74] (Branch F (Dloc 082462)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 082433 (Print_ret "You have no choice. Why not relax and enjoy it?");
    GamePrint "You have no choice. Why not relax and enjoy it?\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 082462
  }
LocOp 082462:
  TraceOperation 082462 (Jin (Con 105) (Var (Global 0)) (Branch F (Dloc 082478)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001700];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 082466 (Je [Var (Global 203),Con 26] (Branch F (Dloc 082478)));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),26)) {
      TraceOperation 082470 (Call (Floc 022042) [Con 74,Con 105] Sp);
      PushFrame 082470;
      SetLocal 1 74;
      SetLocal 2 105;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 082478
    }
  } else {
    Jump: 082478
  }
LocReturn 082470:
  PushStack call_result;
  TraceOperation 082477 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 082478:
  TraceOperation 082478 (Je [Var (Global 203),Con 61,Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),61),Equal(MakeHiLo(b1,b2),120))) {
    TraceOperation 082484 (Print_ret "You can't see it from here.");
    GamePrint "You can't see it from here.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[526]--------------------------------------------------
LocRoutine 082496:
  MakeRoutineFrame 0;
  Jump: 082497
LocOp 082497:
  TraceOperation 082497 (Je [Var (Global 203),Con 38,Con 162,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),162)),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 082504 (Call (Floc 043620) [Con 19] Sp);
    PushFrame 082504;
    SetLocal 1 19;
    JumpCall: 043620, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 082504:
  PushStack call_result;
  TraceOperation 082510 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[527]--------------------------------------------------
LocRoutine 082512:
  MakeRoutineFrame 0;
  Jump: 082513
LocOp 082513:
  TraceOperation 082513 (Je [Var (Global 203),Con 38,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 082519 (Print_paddr (Var (Global 26)));
    Let b3 = M[007960];
    Let b4 = M[007961];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 082521 New_line;
    GamePrint "\n";
    TraceOperation 082522 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
--[528]--------------------------------------------------
LocRoutine 082524:
  MakeRoutineFrame 0;
  Jump: 082525
LocOp 082525:
  TraceOperation 082525 (Je [Var (Global 203),Con 21,Con 38] (Branch F (Dloc 082550)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),21),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 082531 (Je [Var (Global 0),Con 101] (Branch F (Dloc 082539)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),101)) {
      TraceOperation 082535 (Print_paddr (Var (Global 57)));
      Let b5 = M[008022];
      Let b6 = M[008023];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 082537 New_line;
      GamePrint "\n";
      TraceOperation 082538 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 082539
    }
  } else {
    Jump: 082550
  }
LocOp 082539:
  TraceOperation 082539 (Je [Var (Global 0),Con 121] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 082543 (Call (Floc 043620) [Con 19] Sp);
    PushFrame 082543;
    SetLocal 1 19;
    JumpCall: 043620, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 082543:
  PushStack call_result;
  TraceOperation 082549 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 082550:
  TraceOperation 082550 (Je [Var (Global 203),Con 48,Con 59,Con 86] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),59)),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 082557 (Je [Var (Global 0),Con 101] (Branch F (Dloc 082568)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),101)) {
      TraceOperation 082561 (Call (Floc 043620) [Con 27] Sp);
      PushFrame 082561;
      SetLocal 1 27;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 082568
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 082561:
  PushStack call_result;
  TraceOperation 082567 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 082568:
  TraceOperation 082568 (Print_paddr (Var (Global 57)));
  Let b1 = M[008022];
  Let b2 = M[008023];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 082570 New_line;
  GamePrint "\n";
  TraceOperation 082571 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[529]--------------------------------------------------
LocRoutine 082572:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 082575
LocOp 082575:
  TraceOperation 082575 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 082579 (Inc (Con 120));
    Let b1 = M[008116];
    Let b2 = M[008117];
    SetByte 008116 HiByte(Add(MakeHiLo(b1,b2),1));
    SetByte 008117 LoByte(Add(MakeHiLo(b1,b2),1));
    TraceOperation 082581 New_line;
    GamePrint "\n";
    TraceOperation 082582 (Je [Var (Global 104),Con 1] (Branch F (Dloc 082669)));
    Let b3 = M[008116];
    Let b4 = M[008117];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 082587 (Print "Ford points at the ");
      GamePrint "Ford points at the ";
      TraceOperation 082598 (Print_obj (Con 103));
      Let b5 = M[001685];
      Let b6 = M[001686];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 082600 (Print_ret ". \"In about two minutes, it will open and we'll be ejected into the vacuum of space. But don't panic, I'll think of something.\"");
        GamePrint ". \"In about two minutes, it will open and we'll be ejected into the vacuum of space. But don't panic, I'll think of something.\"\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 082600 (Print_ret ". \"In about two minutes, it will open and we'll be ejected into the vacuum of space. But don't panic, I'll think of something.\"");
        GamePrint ". \"In about two minutes, it will open and we'll be ejected into the vacuum of space. But don't panic, I'll think of something.\"\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      }
    } else {
      Jump: 082669
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
LocOp 082669:
  TraceOperation 082669 (Je [Var (Global 104),Con 2] (Branch F (Dloc 082690)));
  Let b1 = M[008116];
  Let b2 = M[008117];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 082673 (Print_ret "Ford is mumbling to himself.");
    GamePrint "Ford is mumbling to himself.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 082690
  }
LocOp 082690:
  TraceOperation 082690 (Je [Var (Global 104),Con 3] (Branch F (Dloc 082735)));
  Let b1 = M[008116];
  Let b2 = M[008117];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 082694 (Print_ret "Ford produces a pencil and begins scribbling equations on the wall.");
    GamePrint "Ford produces a pencil and begins scribbling equations on the wall.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 082735
  }
LocOp 082735:
  TraceOperation 082735 (Je [Var (Global 104),Con 4] (Branch F Dfalse));
  Let b1 = M[008116];
  Let b2 = M[008117];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 082739 (Print "Ford's eyes light up. \"Do you still have the Electronic Sub-Etha Auto Hitching Thu...\" At that moment, the airlock door opens, and you and Ford are blown out into space.\n\n");
    GamePrint "Ford's eyes light up. \"Do you still have the Electronic Sub-Etha Auto Hitching Thu...\" At that moment, the airlock door opens, and you and Ford are blown out into space.\n\n";
    TraceOperation 082846 (Call (Floc 043468) [Con 1] Sp);
    PushFrame 082846;
    SetLocal 1 1;
    JumpCall: 043468, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 082846:
  PushStack call_result;
  TraceOperation 082852 (Jz (Var Sp) (Branch T (Dloc 082949)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082949
  } else {
    TraceOperation 082856 (Print "Your elbow must have struck some key on ");
    GamePrint "Your elbow must have struck some key on ";
    TraceOperation 082881 (Print_obj (Con 1));
    Let b2 = M[000767];
    Let b3 = M[000768];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 082883 (Print " because it begins droning out an entry, coincidentally enough the entry on SPACE. \"");
      GamePrint " because it begins droning out an entry, coincidentally enough the entry on SPACE. \"";
      TraceOperation 082936 (Print_paddr (Var (Global 63)));
      Let b5 = M[008034];
      Let b6 = M[008035];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 082938 (Print "\" (Footnote 9)");
      GamePrint "\" (Footnote 9)";
      TraceOperation 082947 New_line;
      GamePrint "\n";
      TraceOperation 082948 New_line;
      GamePrint "\n";
      Jump: 082949
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 082883 (Print " because it begins droning out an entry, coincidentally enough the entry on SPACE. \"");
      GamePrint " because it begins droning out an entry, coincidentally enough the entry on SPACE. \"";
      TraceOperation 082936 (Print_paddr (Var (Global 63)));
      Let b7 = M[008034];
      Let b8 = M[008035];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
      TraceOperation 082938 (Print "\" (Footnote 9)");
      GamePrint "\" (Footnote 9)";
      TraceOperation 082947 New_line;
      GamePrint "\n";
      TraceOperation 082948 New_line;
      GamePrint "\n";
      Jump: 082949
    }
  }
LocOp 082949:
  TraceOperation 082949 (Print "Precisely twenty-nine seconds later, you and Ford are scooped up by a passing ship. Gasping for air, you pass out...");
  GamePrint "Precisely twenty-nine seconds later, you and Ford are scooped up by a passing ship. Gasping for air, you pass out...";
  TraceOperation 083024 New_line;
  GamePrint "\n";
  TraceOperation 083025 New_line;
  GamePrint "\n";
  TraceOperation 083026 (Store (Con 98) (Con 100));
  SetByte 008072 0;
  SetByte 008073 100;
  TraceOperation 083029 (Call (Floc 042574) [Con 25] Sp);
  PushFrame 083029;
  SetLocal 1 25;
  JumpCall: 042574, #actuals: 1
LocReturn 083029:
  PushStack call_result;
  TraceOperation 083035 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[530]--------------------------------------------------
LocRoutine 083036:
  MakeRoutineFrame 0;
  Jump: 083037
LocOp 083037:
  TraceOperation 083037 (Je [Var (Global 203),Con 48,Con 59,Con 86] (Branch T (Dloc 083051)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),59)),Equal(MakeHiLo(b1,b2),86))) {
    Jump: 083051
  } else {
    TraceOperation 083044 (Je [Var (Global 203),Con 21,Con 28,Con 38] (Branch F Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),21),Equal(MakeHiLo(b3,b4),28)),Equal(MakeHiLo(b3,b4),38))) {
      Jump: 083051
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  }
LocOp 083051:
  TraceOperation 083051 (Call (Floc 040326) [] Sp);
  PushFrame 083051;
  JumpCall: 040326, #actuals: 0
LocReturn 083051:
  PushStack call_result;
  TraceOperation 083056 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[531]--------------------------------------------------
LocRoutine 083058:
  MakeRoutineFrame 0;
  Jump: 083059
LocOp 083059:
  TraceOperation 083059 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 083065)));
  Let b1 = M[001606];
  if (TestBit(b1,4)) {
    TraceOperation 083063 (Ret (Con 90));
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 90
  } else {
    Jump: 083065
  }
LocOp 083065:
  TraceOperation 083065 (Print "The Beast blocks the exit.");
  GamePrint "The Beast blocks the exit.";
  TraceOperation 083080 New_line;
  GamePrint "\n";
  TraceOperation 083081 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[532]--------------------------------------------------
LocRoutine 083082:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 083085
LocOp 083085:
  TraceOperation 083085 (Je [Var (Local 1),Con 3] (Branch F (Dloc 083123)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 083089 (Print "This is the lair of the ");
    GamePrint "This is the lair of the ";
    TraceOperation 083100 (Print_obj (Con 95));
    Let b1 = M[001613];
    Let b2 = M[001614];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 083102 (Print_ret ". There are exits east and southwest.");
      GamePrint ". There are exits east and southwest.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 083102 (Print_ret ". There are exits east and southwest.");
      GamePrint ". There are exits east and southwest.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 083123
  }
LocOp 083123:
  TraceOperation 083123 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 083127 (Test_attr (Con 99) (Con 27) (Branch T Dfalse));
    Let b1 = M[001645];
    if (TestBit(b1,4)) {
      PopFrame return_address_2;
      JumpReturn: return_address_2, result: 0
    } else {
      TraceOperation 083131 (Store (Con 91) (Con 1));
      SetByte 008058 0;
      SetByte 008059 1;
      TraceOperation 083134 (Set_attr (Con 99) (Con 27));
      Let b3 = M[001645];
      SetByte 001645 SetBit(b3,4);
      TraceOperation 083137 (Clear_attr (Con 93) (Con 6));
      Let b4 = M[001588];
      SetByte 001588 ClearBit(b4,1);
      TraceOperation 083140 (Clear_attr (Con 91) (Con 6));
      Let b5 = M[001570];
      SetByte 001570 ClearBit(b5,1);
      TraceOperation 083143 (Call (Floc 022320) [Con -22735,Con 2] Sp);
      PushFrame 083143;
      SetLocal 1 -22735;
      SetLocal 2 2;
      JumpCall: 022320, #actuals: 2
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 083143:
  PushStack call_result;
  TraceOperation 083151 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 083156 New_line;
  GamePrint "\n";
  TraceOperation 083157 (Print "The Beast whips its evil-smelling tail away from your nose and bellows a brain-shattering roar. By suddenly popping out of nowhere you have disturbed its train of thought. However, ");
  GamePrint "The Beast whips its evil-smelling tail away from your nose and bellows a brain-shattering roar. By suddenly popping out of nowhere you have disturbed its train of thought. However, ";
  TraceOperation 083264 (Test_attr (Con 99) (Con 4) (Branch F (Dloc 083334)));
  Let b2 = M[001642];
  if (TestBit(b2,3)) {
    TraceOperation 083269 (Print "the Beast is beginning to get used to this sort of thing, shrugs it off, and sinks ten or so of");
    GamePrint "the Beast is beginning to get used to this sort of thing, shrugs it off, and sinks ten or so of";
    TraceOperation 083324 (Print_paddr (Var (Global 45)));
    Let b3 = M[007998];
    Let b4 = M[007999];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 083326 (Call (Floc 042734) [Con -10741] Sp);
    PushFrame 083326;
    SetLocal 1 -10741;
    JumpCall: 042734, #actuals: 1
  } else {
    Jump: 083334
  }
LocReturn 083326:
  PushStack call_result;
  TraceOperation 083333 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 083334:
  TraceOperation 083334 (Print "since its train of thought was the usual one, and in fact the only one it knows, which goes like this \"hungry ... hungry ... hungry ... hungry ... bad-tempered ... hungry ...\", it soon starts to chug along again.");
  GamePrint "since its train of thought was the usual one, and in fact the only one it knows, which goes like this \"hungry ... hungry ... hungry ... hungry ... bad-tempered ... hungry ...\", it soon starts to chug along again.";
  TraceOperation 083473 New_line;
  GamePrint "\n";
  TraceOperation 083474 New_line;
  GamePrint "\n";
  TraceOperation 083475 (Print_paddr (Var (Global 25)));
  Let b1 = M[007958];
  Let b2 = M[007959];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 083477 (Print_ret " It advances on you, and roars out a demand that you say your name.");
  GamePrint " It advances on you, and roars out a demand that you say your name.\n";
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[533]--------------------------------------------------
LocRoutine 083512:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 083515
LocOp 083515:
  TraceOperation 083515 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 083519 (Print "This is a large walled courtyard. Strewn about are a profusion of gnawed bones bleaching in the sun. In case the significance of these fails to strike you, there is also a ");
    GamePrint "This is a large walled courtyard. Strewn about are a profusion of gnawed bones bleaching in the sun. In case the significance of these fails to strike you, there is also a ";
    TraceOperation 083618 (Print_obj (Con 97));
    Let b1 = M[001631];
    Let b2 = M[001632];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 083620 (Print " in the middle of the courtyard, on which the Beast has roughly carved the names of all its victims.");
      GamePrint " in the middle of the courtyard, on which the Beast has roughly carved the names of all its victims.";
      TraceOperation 083673 (Jin (Con 96) (Var (Global 0)) (Branch F (Dloc 083704)));
      Let b4 = M[007908];
      Let b5 = M[007909];
      Let b6 = M[001619];
      if (Equal(MakeHiLo(b4,b5),Widen(b6))) {
        TraceOperation 083677 New_line;
        GamePrint "\n";
        TraceOperation 083678 (Print "Some ");
        GamePrint "Some ";
        TraceOperation 083683 (Print_obj (Con 96));
        Let b7 = M[001622];
        Let b8 = M[001623];
        Let b9 = M[Address(MakeHiLo(b7,b8))];
        if (IsZeroByte(b9)) {
          GamePrint "";
          TraceOperation 083685 (Print "s lie near the exit to the west.");
          GamePrint "s lie near the exit to the west.";
          TraceOperation 083704 New_line;
          GamePrint "\n";
          TraceOperation 083705 Rtrue;
          PopFrame return_address_10;
          JumpReturn: return_address_10, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
          TraceOperation 083685 (Print "s lie near the exit to the west.");
          GamePrint "s lie near the exit to the west.";
          TraceOperation 083704 New_line;
          GamePrint "\n";
          TraceOperation 083705 Rtrue;
          PopFrame return_address_11;
          JumpReturn: return_address_11, result: 1
        }
      } else {
        TraceOperation 083704 New_line;
        GamePrint "\n";
        TraceOperation 083705 Rtrue;
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 083620 (Print " in the middle of the courtyard, on which the Beast has roughly carved the names of all its victims.");
      GamePrint " in the middle of the courtyard, on which the Beast has roughly carved the names of all its victims.";
      TraceOperation 083673 (Jin (Con 96) (Var (Global 0)) (Branch F (Dloc 083704)));
      Let b13 = M[007908];
      Let b14 = M[007909];
      Let b15 = M[001619];
      if (Equal(MakeHiLo(b13,b14),Widen(b15))) {
        TraceOperation 083677 New_line;
        GamePrint "\n";
        TraceOperation 083678 (Print "Some ");
        GamePrint "Some ";
        TraceOperation 083683 (Print_obj (Con 96));
        Let b16 = M[001622];
        Let b17 = M[001623];
        Let b18 = M[Address(MakeHiLo(b16,b17))];
        if (IsZeroByte(b18)) {
          GamePrint "";
          TraceOperation 083685 (Print "s lie near the exit to the west.");
          GamePrint "s lie near the exit to the west.";
          TraceOperation 083704 New_line;
          GamePrint "\n";
          TraceOperation 083705 Rtrue;
          PopFrame return_address_19;
          JumpReturn: return_address_19, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b16,b17)),1));
          TraceOperation 083685 (Print "s lie near the exit to the west.");
          GamePrint "s lie near the exit to the west.";
          TraceOperation 083704 New_line;
          GamePrint "\n";
          TraceOperation 083705 Rtrue;
          PopFrame return_address_20;
          JumpReturn: return_address_20, result: 1
        }
      } else {
        TraceOperation 083704 New_line;
        GamePrint "\n";
        TraceOperation 083705 Rtrue;
        PopFrame return_address_21;
        JumpReturn: return_address_21, result: 1
      }
    }
  } else {
    PopFrame return_address_22;
    JumpReturn: return_address_22, result: 0
  }
--[534]--------------------------------------------------
LocRoutine 083706:
  MakeRoutineFrame 0;
  Jump: 083707
LocOp 083707:
  TraceOperation 083707 (Je [Var (Global 203),Con 31] (Branch F (Dloc 084704)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),31)) {
    TraceOperation 083712 (Je [Con 97,Var (Global 202)] (Branch F (Dloc 084704)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(97,MakeHiLo(b3,b4))) {
      TraceOperation 083717 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 083727)));
      Let b5 = M[001606];
      if (TestBit(b5,4)) {
        TraceOperation 083721 (Call (Floc 031422) [] Sp);
        PushFrame 083721;
        JumpCall: 031422, #actuals: 0
      } else {
        Jump: 083727
      }
    } else {
      Jump: 084704
    }
  } else {
    Jump: 084704
  }
LocReturn 083721:
  PushStack call_result;
  TraceOperation 083726 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 083727:
  TraceOperation 083727 (Je [Var (Global 201),Con 94] (Branch F (Dloc 083898)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),94)) {
    TraceOperation 083732 (Print "Whose name? The ");
    GamePrint "Whose name? The ";
    TraceOperation 083745 (Print_obj (Con 91));
    Let b3 = M[001577];
    Let b4 = M[001578];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 083747 (Print_ret "? Your aunt's name? One of the Infinite Unknowable names of Buddha? How about the name of Fred who runs (or rather ran) your local chip shop? At least that's a short name -- you might have time to write it before the Beast eats you.");
      GamePrint "? Your aunt's name? One of the Infinite Unknowable names of Buddha? How about the name of Fred who runs (or rather ran) your local chip shop? At least that's a short name -- you might have time to write it before the Beast eats you.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 083747 (Print_ret "? Your aunt's name? One of the Infinite Unknowable names of Buddha? How about the name of Fred who runs (or rather ran) your local chip shop? At least that's a short name -- you might have time to write it before the Beast eats you.");
      GamePrint "? Your aunt's name? One of the Infinite Unknowable names of Buddha? How about the name of Fred who runs (or rather ran) your local chip shop? At least that's a short name -- you might have time to write it before the Beast eats you.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 083898
  }
LocOp 083898:
  TraceOperation 083898 (Je [Var (Global 201),Con 93] (Branch F (Dloc 083959)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 083902 (Print_ret "Concentrate. Learn to distinguish between genuinely helpful suggestions and mere sarcasm.");
    GamePrint "Concentrate. Learn to distinguish between genuinely helpful suggestions and mere sarcasm.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 083959
  }
LocOp 083959:
  TraceOperation 083959 (Test_attr (Con 139) (Con 9) (Branch T (Dloc 084040)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    Jump: 084040
  } else {
    TraceOperation 083964 (Call (Floc 022320) [Con -22735,Con 2] Sp);
    PushFrame 083964;
    SetLocal 1 -22735;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  }
LocReturn 083964:
  PushStack call_result;
  TraceOperation 083972 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 083977 (Print "Before you even chip the first letter, the Beast sees you and hurls you spinning away with a bellow of rage.");
  GamePrint "Before you even chip the first letter, the Beast sees you and hurls you spinning away with a bellow of rage.";
  TraceOperation 084036 (Print_paddr (Var (Global 30)));
  Let b2 = M[007968];
  Let b3 = M[007969];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 084038 New_line;
  GamePrint "\n";
  TraceOperation 084039 Rtrue;
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: 1
LocOp 084040:
  TraceOperation 084040 (Jz (Var (Global 102)) (Branch T (Dloc 084127)));
  Let b1 = M[008112];
  Let b2 = M[008113];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 084127
  } else {
    TraceOperation 084044 (Print_ret "You cannot see and have lost your bearings. You stumble hopelessly and begin to arouse the Beast's suspicions. It's stupid but not THAT stupid.");
    GamePrint "You cannot see and have lost your bearings. You stumble hopelessly and begin to arouse the Beast's suspicions. It's stupid but not THAT stupid.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 084127:
  TraceOperation 084127 (Je [Var (Global 201),Con 30,Con 123,Con 92] (Branch F (Dloc 084579)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),30),Equal(MakeHiLo(b1,b2),123)),Equal(MakeHiLo(b1,b2),92))) {
    TraceOperation 084135 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 084150)));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      TraceOperation 084139 (Print_ret "You already did that!");
      GamePrint "You already did that!\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      Jump: 084150
    }
  } else {
    Jump: 084579
  }
LocOp 084150:
  TraceOperation 084150 (Print "You chip away with the stone. It's not your best writing, what with your mounting sense of panic and a towel wrapped around your head. However, it suffices...");
  GamePrint "You chip away with the stone. It's not your best writing, what with your mounting sense of panic and a towel wrapped around your head. However, it suffices...";
  TraceOperation 084235 New_line;
  GamePrint "\n";
  TraceOperation 084236 New_line;
  GamePrint "\n";
  TraceOperation 084237 (Print_paddr (Var (Global 27)));
  Let b1 = M[007962];
  Let b2 = M[007963];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 084239 (Jz (Var (Global 103)) (Branch T (Dloc 084460)));
  Let b3 = M[008114];
  Let b4 = M[008115];
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 084460
  } else {
    TraceOperation 084243 (Set_attr (Con 95) (Con 3));
    Let b5 = M[001606];
    SetByte 001606 SetBit(b5,4);
    TraceOperation 084246 (Call (Floc 022320) [Con -22735,Con 9] Sp);
    PushFrame 084246;
    SetLocal 1 -22735;
    SetLocal 2 9;
    JumpCall: 022320, #actuals: 2
  }
LocReturn 084246:
  PushStack call_result;
  TraceOperation 084254 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 084259 (Print_ret "suddenly sees your name freshly carved on its memorial of remembrance. Mystery solved. It realises it must have already eaten you in a fit of absent-mindedness. (Its mind is very very small and quite frequently absent.) It decides to give up the rest of its afternoon to the twin arts of digestion and contemplation. It settles down for a snooze.");
  GamePrint "suddenly sees your name freshly carved on its memorial of remembrance. Mystery solved. It realises it must have already eaten you in a fit of absent-mindedness. (Its mind is very very small and quite frequently absent.) It decides to give up the rest of its afternoon to the twin arts of digestion and contemplation. It settles down for a snooze.\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 084460:
  TraceOperation 084460 (Print "sees \"");
  GamePrint "sees \"";
  TraceOperation 084467 (Print_obj (Con 123));
  Let b1 = M[001865];
  Let b2 = M[001866];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 084469 (Print "\" freshly carved on the ");
    GamePrint "\" freshly carved on the ";
    TraceOperation 084486 (Print_obj (Con 97));
    Let b4 = M[001631];
    Let b5 = M[001632];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 084488 (Print_ret ". This doesn't ring any bells with the Beast. It roars with fury, and eyes the thing it can't see because it's got a towel on its head (i.e. you) with deepening suspicion.");
      GamePrint ". This doesn't ring any bells with the Beast. It roars with fury, and eyes the thing it can't see because it's got a towel on its head (i.e. you) with deepening suspicion.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 084488 (Print_ret ". This doesn't ring any bells with the Beast. It roars with fury, and eyes the thing it can't see because it's got a towel on its head (i.e. you) with deepening suspicion.");
      GamePrint ". This doesn't ring any bells with the Beast. It roars with fury, and eyes the thing it can't see because it's got a towel on its head (i.e. you) with deepening suspicion.\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 084469 (Print "\" freshly carved on the ");
    GamePrint "\" freshly carved on the ";
    TraceOperation 084486 (Print_obj (Con 97));
    Let b9 = M[001631];
    Let b10 = M[001632];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    if (IsZeroByte(b11)) {
      GamePrint "";
      TraceOperation 084488 (Print_ret ". This doesn't ring any bells with the Beast. It roars with fury, and eyes the thing it can't see because it's got a towel on its head (i.e. you) with deepening suspicion.");
      GamePrint ". This doesn't ring any bells with the Beast. It roars with fury, and eyes the thing it can't see because it's got a towel on its head (i.e. you) with deepening suspicion.\n";
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
      TraceOperation 084488 (Print_ret ". This doesn't ring any bells with the Beast. It roars with fury, and eyes the thing it can't see because it's got a towel on its head (i.e. you) with deepening suspicion.");
      GamePrint ". This doesn't ring any bells with the Beast. It roars with fury, and eyes the thing it can't see because it's got a towel on its head (i.e. you) with deepening suspicion.\n";
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    }
  }
LocOp 084579:
  TraceOperation 084579 (Print_paddr (Var (Global 27)));
  Let b1 = M[007962];
  Let b2 = M[007963];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 084581 (Print "suddenly sees ");
  GamePrint "suddenly sees ";
  TraceOperation 084592 (Je [Var (Global 201),Con 91,Con 95] (Branch F (Dloc 084610)));
  Let b3 = M[008310];
  Let b4 = M[008311];
  if (LogOr(Equal(MakeHiLo(b3,b4),91),Equal(MakeHiLo(b3,b4),95))) {
    TraceOperation 084598 (Print "its own name");
    GamePrint "its own name";
    TraceOperation 084607 (Jump 084618);
    Jump: 084618
  } else {
    Jump: 084610
  }
LocOp 084610:
  TraceOperation 084610 (Print "\"");
  GamePrint "\"";
  TraceOperation 084613 (Print_obj (Var (Global 201)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 084615 (Print "\"");
    GamePrint "\"";
    Jump: 084618
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 084615 (Print "\"");
    GamePrint "\"";
    Jump: 084618
  }
LocOp 084618:
  TraceOperation 084618 (Print " freshly carved on the ");
  GamePrint " freshly carved on the ";
  TraceOperation 084633 (Print_obj (Con 97));
  Let b1 = M[001631];
  Let b2 = M[001632];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 084635 (Print ". This disconcerts it, as it has no recollection of eating ");
    GamePrint ". This disconcerts it, as it has no recollection of eating ";
    TraceOperation 084670 (Je [Var (Global 201),Con 91,Con 95] (Branch F (Dloc 084684)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (LogOr(Equal(MakeHiLo(b4,b5),91),Equal(MakeHiLo(b4,b5),95))) {
      TraceOperation 084676 (Print "itself");
      GamePrint "itself";
      TraceOperation 084681 (Jump 084697);
      Jump: 084697
    } else {
      Jump: 084684
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 084635 (Print ". This disconcerts it, as it has no recollection of eating ");
    GamePrint ". This disconcerts it, as it has no recollection of eating ";
    TraceOperation 084670 (Je [Var (Global 201),Con 91,Con 95] (Branch F (Dloc 084684)));
    Let b6 = M[008310];
    Let b7 = M[008311];
    if (LogOr(Equal(MakeHiLo(b6,b7),91),Equal(MakeHiLo(b6,b7),95))) {
      TraceOperation 084676 (Print "itself");
      GamePrint "itself";
      TraceOperation 084681 (Jump 084697);
      Jump: 084697
    } else {
      Jump: 084684
    }
  }
LocOp 084684:
  TraceOperation 084684 (Print "anyone by that name");
  GamePrint "anyone by that name";
  Jump: 084697
LocOp 084697:
  TraceOperation 084697 (Print ".");
  GamePrint ".";
  TraceOperation 084700 (Print_paddr (Var (Global 12)));
  Let b1 = M[007932];
  Let b2 = M[007933];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 084702 New_line;
  GamePrint "\n";
  TraceOperation 084703 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
LocOp 084704:
  TraceOperation 084704 (Je [Var (Global 203),Con 120] (Branch F (Dloc 084804)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),120)) {
    TraceOperation 084709 (Print "Gleb Snardfitz, Bibs Trench, Zeke Fitzberry, Elmo Smith, ");
    GamePrint "Gleb Snardfitz, Bibs Trench, Zeke Fitzberry, Elmo Smith, ";
    TraceOperation 084754 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 084763)));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      TraceOperation 084758 (Print_obj (Con 123));
      Let b4 = M[001865];
      Let b5 = M[001866];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      if (IsZeroByte(b6)) {
        GamePrint "";
        TraceOperation 084760 (Print ", ");
        GamePrint ", ";
        Jump: 084763
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
        TraceOperation 084760 (Print ", ");
        GamePrint ", ";
        Jump: 084763
      }
    } else {
      Jump: 084763
    }
  } else {
    Jump: 084804
  }
LocOp 084763:
  TraceOperation 084763 (Print_ret "Brian \"Spike\" Berkowitz, Clybert Quackentotter...");
  GamePrint "Brian \"Spike\" Berkowitz, Clybert Quackentotter...\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 084804:
  TraceOperation 084804 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 084808 (Print "There are countless names carved on the ");
    GamePrint "There are countless names carved on the ";
    TraceOperation 084831 (Print_obj (Con 97));
    Let b3 = M[001631];
    Let b4 = M[001632];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 084833 (Print ":");
      GamePrint ":";
      TraceOperation 084836 New_line;
      GamePrint "\n";
      TraceOperation 084837 (Call (Floc 022042) [Con 120,Con 97] Sp);
      PushFrame 084837;
      SetLocal 1 120;
      SetLocal 2 97;
      JumpCall: 022042, #actuals: 2
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 084833 (Print ":");
      GamePrint ":";
      TraceOperation 084836 New_line;
      GamePrint "\n";
      TraceOperation 084837 (Call (Floc 022042) [Con 120,Con 97] Sp);
      PushFrame 084837;
      SetLocal 1 120;
      SetLocal 2 97;
      JumpCall: 022042, #actuals: 2
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 084837:
  PushStack call_result;
  TraceOperation 084844 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[535]--------------------------------------------------
LocRoutine 084846:
  MakeRoutineFrame 0;
  Jump: 084847
LocOp 084847:
  TraceOperation 084847 (Je [Var (Global 203),Con 124] (Branch F (Dloc 084862)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 084851 (Test_attr (Con 96) (Con 21) (Branch F (Dloc 084862)));
    Let b3 = M[001617];
    if (TestBit(b3,2)) {
      TraceOperation 084855 (Clear_attr (Con 96) (Con 27));
      Let b4 = M[001618];
      SetByte 001618 ClearBit(b4,4);
      TraceOperation 084858 (Clear_attr (Con 96) (Con 21));
      Let b5 = M[001617];
      SetByte 001617 ClearBit(b5,2);
      TraceOperation 084861 Rfalse;
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      Jump: 084862
    }
  } else {
    Jump: 084862
  }
LocOp 084862:
  TraceOperation 084862 (Je [Var (Global 203),Con 53] (Branch F (Dloc 084877)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 084866 (Je [Var (Global 0),Con 98] (Branch F (Dloc 084877)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),98)) {
      TraceOperation 084870 (Set_attr (Con 96) (Con 27));
      Let b5 = M[001618];
      SetByte 001618 SetBit(b5,4);
      TraceOperation 084873 (Set_attr (Con 96) (Con 21));
      Let b6 = M[001617];
      SetByte 001617 SetBit(b6,2);
      TraceOperation 084876 Rfalse;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    } else {
      Jump: 084877
    }
  } else {
    Jump: 084877
  }
LocOp 084877:
  TraceOperation 084877 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 084881 (Print_ret "It's hard as a rock.");
    GamePrint "It's hard as a rock.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[536]--------------------------------------------------
LocRoutine 084894:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 084897
LocOp 084897:
  TraceOperation 084897 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 084934)));
  Let b1 = M[001606];
  if (TestBit(b1,4)) {
    TraceOperation 084901 (Print_ret "The Beast is in the corner, sleeping peacefully (Footnote 5).");
    GamePrint "The Beast is in the corner, sleeping peacefully (Footnote 5).\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    Jump: 084934
  }
LocOp 084934:
  TraceOperation 084934 (Print "The ");
  GamePrint "The ";
  TraceOperation 084937 (Print_obj (Con 95));
  Let b1 = M[001613];
  Let b2 = M[001614];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 084939 (Print_ret " is here, looking particularly nasty and hungry.");
    GamePrint " is here, looking particularly nasty and hungry.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 084939 (Print_ret " is here, looking particularly nasty and hungry.");
    GamePrint " is here, looking particularly nasty and hungry.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[537]--------------------------------------------------
LocRoutine 084970:
  MakeRoutineFrame 0;
  Jump: 084971
LocOp 084971:
  TraceOperation 084971 (Je [Con 95,Var (Global 195)] (Branch F (Dloc 085152)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(95,MakeHiLo(b1,b2))) {
    TraceOperation 084976 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 084986)));
    Let b3 = M[002003];
    if (TestBit(b3,6)) {
      TraceOperation 084980 (Call (Floc 036558) [] Sp);
      PushFrame 084980;
      JumpCall: 036558, #actuals: 0
    } else {
      Jump: 084986
    }
  } else {
    Jump: 085152
  }
LocReturn 084980:
  PushStack call_result;
  TraceOperation 084985 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 084986:
  TraceOperation 084986 (Je [Var (Global 203),Con 150] (Branch F (Dloc 085009)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),150)) {
    TraceOperation 084990 (Je [Var (Global 201),Con 30] (Branch F (Dloc 085009)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 084994 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 084997 (Call (Floc 022042) [Con 22,Con 95,Var (Global 202)] Sp);
      Let b5 = M[008312];
      Let b6 = M[008313];
      PushFrame 084997;
      SetLocal 1 22;
      SetLocal 2 95;
      SetLocal 3 MakeHiLo(b5,b6);
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 085009
    }
  } else {
    Jump: 085009
  }
LocReturn 084997:
  PushStack call_result;
  TraceOperation 085005 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085008 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085009:
  TraceOperation 085009 (Je [Var (Global 203),Con 75] (Branch F (Dloc 085027)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 085013 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 085016 (Call (Floc 022042) [Con 75,Con 95] Sp);
    PushFrame 085016;
    SetLocal 1 75;
    SetLocal 2 95;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 085027
  }
LocReturn 085016:
  PushStack call_result;
  TraceOperation 085023 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085026 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085027:
  TraceOperation 085027 (Je [Var (Global 203),Con 174] (Branch F (Dloc 085050)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 085031 (Je [Var (Global 201),Con 28] (Branch F (Dloc 085050)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 085035 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 085038 (Call (Floc 022042) [Con 22,Con 95,Con 28] Sp);
      PushFrame 085038;
      SetLocal 1 22;
      SetLocal 2 95;
      SetLocal 3 28;
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 085050
    }
  } else {
    Jump: 085050
  }
LocReturn 085038:
  PushStack call_result;
  TraceOperation 085046 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085049 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085050:
  TraceOperation 085050 (Jz (Var (Global 103)) (Branch F (Dloc 085093)));
  Let b1 = M[008114];
  Let b2 = M[008115];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 085053 (Je [Var (Global 203),Con 101] (Branch F (Dloc 085093)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),101)) {
      TraceOperation 085057 (Je [Var (Global 201),Con 94] (Branch F (Dloc 085093)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),94)) {
        TraceOperation 085061 (Je [Var (Global 202),Con 123] (Branch F (Dloc 085079)));
        Let b7 = M[008312];
        Let b8 = M[008313];
        if (Equal(MakeHiLo(b7,b8),123)) {
          TraceOperation 085065 (Store (Con 211) (Con 31));
          SetByte 008298 0;
          SetByte 008299 31;
          TraceOperation 085068 (Call (Floc 022042) [Con 127,Con 92] Sp);
          PushFrame 085068;
          SetLocal 1 127;
          SetLocal 2 92;
          JumpCall: 022042, #actuals: 2
        } else {
          Jump: 085079
        }
      } else {
        Jump: 085093
      }
    } else {
      Jump: 085093
    }
  } else {
    Jump: 085093
  }
LocReturn 085068:
  PushStack call_result;
  TraceOperation 085075 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085078 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085079:
  TraceOperation 085079 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 085082 (Call (Floc 022042) [Con 127,Con 91] Sp);
  PushFrame 085082;
  SetLocal 1 127;
  SetLocal 2 91;
  JumpCall: 022042, #actuals: 2
LocReturn 085082:
  PushStack call_result;
  TraceOperation 085089 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085092 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085093:
  TraceOperation 085093 (Jz (Var (Global 103)) (Branch F (Dloc 085132)));
  Let b1 = M[008114];
  Let b2 = M[008115];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 085096 (Je [Var (Global 203),Con 5] (Branch F (Dloc 085132)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),5)) {
      TraceOperation 085100 (Je [Var (Global 201),Con 123] (Branch F (Dloc 085118)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),123)) {
        TraceOperation 085104 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 085107 (Call (Floc 022042) [Con 127,Con 92] Sp);
        PushFrame 085107;
        SetLocal 1 127;
        SetLocal 2 92;
        JumpCall: 022042, #actuals: 2
      } else {
        Jump: 085118
      }
    } else {
      Jump: 085132
    }
  } else {
    Jump: 085132
  }
LocReturn 085107:
  PushStack call_result;
  TraceOperation 085114 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085117 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085118:
  TraceOperation 085118 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 085121 (Call (Floc 022042) [Con 127,Con 91] Sp);
  PushFrame 085121;
  SetLocal 1 127;
  SetLocal 2 91;
  JumpCall: 022042, #actuals: 2
LocReturn 085121:
  PushStack call_result;
  TraceOperation 085128 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085131 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085132:
  TraceOperation 085132 (Print "The Beast just roars at you.");
  GamePrint "The Beast just roars at you.";
  TraceOperation 085145 New_line;
  GamePrint "\n";
  TraceOperation 085146 (Call (Floc 043634) [] Sp);
  PushFrame 085146;
  JumpCall: 043634, #actuals: 0
LocReturn 085146:
  PushStack call_result;
  TraceOperation 085151 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 085152:
  TraceOperation 085152 (Je [Var (Global 203),Con 22,Con 75,Con 15] (Branch T (Dloc 085165)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),22),Equal(MakeHiLo(b1,b2),75)),Equal(MakeHiLo(b1,b2),15))) {
    Jump: 085165
  } else {
    TraceOperation 085159 (Je [Var (Global 203),Con 150,Con 23] (Branch F (Dloc 085208)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),150),Equal(MakeHiLo(b3,b4),23))) {
      Jump: 085165
    } else {
      Jump: 085208
    }
  }
LocOp 085165:
  TraceOperation 085165 (Je [Var (Global 201),Con 95] (Branch F (Dloc 085208)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),95)) {
    TraceOperation 085169 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 085193)));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      TraceOperation 085173 (Print "The Beast is sleeping!");
      GamePrint "The Beast is sleeping!";
      TraceOperation 085186 New_line;
      GamePrint "\n";
      TraceOperation 085187 (Call (Floc 043634) [] Sp);
      PushFrame 085187;
      JumpCall: 043634, #actuals: 0
    } else {
      Jump: 085193
    }
  } else {
    Jump: 085208
  }
LocReturn 085187:
  PushStack call_result;
  TraceOperation 085192 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 085193:
  TraceOperation 085193 (Test_attr (Con 139) (Con 9) (Branch F Dfalse));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 085197 (Call (Floc 036802) [] Sp);
    PushFrame 085197;
    JumpCall: 036802, #actuals: 0
  } else {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  }
LocReturn 085197:
  PushStack call_result;
  TraceOperation 085202 (Call (Floc 043634) [] Sp);
  PushFrame 085202;
  JumpCall: 043634, #actuals: 0
LocReturn 085202:
  PushStack call_result;
  TraceOperation 085207 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 085208:
  TraceOperation 085208 (Je [Var (Global 203),Con 151] (Branch F (Dloc 085224)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),151)) {
    TraceOperation 085212 (Je [Var (Global 202),Con 92] (Branch F (Dloc 085224)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),92)) {
      TraceOperation 085216 (Call (Floc 022042) [Con 127,Con 92] Sp);
      PushFrame 085216;
      SetLocal 1 127;
      SetLocal 2 92;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 085224
    }
  } else {
    Jump: 085224
  }
LocReturn 085216:
  PushStack call_result;
  TraceOperation 085223 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085224:
  TraceOperation 085224 (Je [Var (Global 203),Con 152] (Branch F (Dloc 085240)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),152)) {
    TraceOperation 085228 (Je [Var (Global 201),Con 92] (Branch F (Dloc 085240)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),92)) {
      TraceOperation 085232 (Call (Floc 022042) [Con 127,Con 92] Sp);
      PushFrame 085232;
      SetLocal 1 127;
      SetLocal 2 92;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 085240
    }
  } else {
    Jump: 085240
  }
LocReturn 085232:
  PushStack call_result;
  TraceOperation 085239 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085240:
  TraceOperation 085240 (Je [Var (Global 203),Con 66,Con 134] (Branch F (Dloc 085376)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),66),Equal(MakeHiLo(b1,b2),134))) {
    TraceOperation 085247 (Je [Con 156,Var (Global 201)] (Branch F (Dloc 085376)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(156,MakeHiLo(b3,b4))) {
      TraceOperation 085252 (Call (Floc 022320) [Con -22735,Con 2] Sp);
      PushFrame 085252;
      SetLocal 1 -22735;
      SetLocal 2 2;
      JumpCall: 022320, #actuals: 2
    } else {
      Jump: 085376
    }
  } else {
    Jump: 085376
  }
LocReturn 085252:
  PushStack call_result;
  TraceOperation 085260 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 085265 (Print_ret "The Beast stops in its tracks, deeply impressed, and compliments you on the quality of your aunts, and complains that all its aunts are complete horrors. It then continues its dreadful attack.");
  GamePrint "The Beast stops in its tracks, deeply impressed, and compliments you on the quality of your aunts, and complains that all its aunts are complete horrors. It then continues its dreadful attack.\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 085376:
  TraceOperation 085376 (Je [Var (Global 203),Con 154] (Branch F (Dloc 085403)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),154)) {
    TraceOperation 085380 (Je [Var (Global 202),Con 95] (Branch F (Dloc 085403)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),95)) {
      TraceOperation 085384 (Call (Floc 041208) [] Sp);
      PushFrame 085384;
      JumpCall: 041208, #actuals: 0
    } else {
      Jump: 085403
    }
  } else {
    Jump: 085403
  }
LocReturn 085384:
  PushStack call_result;
  TraceOperation 085389 (Jz (Var Sp) (Branch F (Dloc 085403)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 085392 (Insert_obj (Var (Global 201)) (Var (Global 0)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),4)];
    if (IsZero(Widen(b6))) {
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),4) b5;
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),5) LoByte(Widen(b7));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6) b3;
      TraceOperation 085395 (Call (Floc 022042) [Con 24,Con 95] Sp);
      PushFrame 085395;
      SetLocal 1 24;
      SetLocal 2 95;
      JumpCall: 022042, #actuals: 2
    } else {
      Let b8 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
      if (Equal(Widen(b8),MakeHiLo(b2,b3))) {
        Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b9));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),4) b5;
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),5) LoByte(Widen(b10));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6) b3;
        TraceOperation 085395 (Call (Floc 022042) [Con 24,Con 95] Sp);
        PushFrame 085395;
        SetLocal 1 24;
        SetLocal 2 95;
        JumpCall: 022042, #actuals: 2
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 085403
  }
LocReturn 085395:
  PushStack call_result;
  TraceOperation 085402 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085403:
  TraceOperation 085403 (Je [Var (Global 203),Con 24] (Branch F (Dloc 085487)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),24)) {
    TraceOperation 085408 (Je [Var (Global 201),Con 95] (Branch F (Dloc 085487)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),95)) {
      TraceOperation 085413 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 085425)));
      Let b5 = M[001606];
      if (TestBit(b5,4)) {
        TraceOperation 085417 (Call (Floc 022042) [Con 167,Con 95] Sp);
        PushFrame 085417;
        SetLocal 1 167;
        SetLocal 2 95;
        JumpCall: 022042, #actuals: 2
      } else {
        Jump: 085425
      }
    } else {
      Jump: 085487
    }
  } else {
    Jump: 085487
  }
LocReturn 085417:
  PushStack call_result;
  TraceOperation 085424 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085425:
  TraceOperation 085425 (Call (Floc 022320) [Con -22735,Con 2] Sp);
  PushFrame 085425;
  SetLocal 1 -22735;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 085425:
  PushStack call_result;
  TraceOperation 085433 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 085438 (Print_ret "A footling effort. The shock waves of the Beast's laughter push you back.");
  GamePrint "A footling effort. The shock waves of the Beast's laughter push you back.\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
LocOp 085487:
  TraceOperation 085487 (Je [Var (Global 203),Con 167] (Branch F (Dloc 085530)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),167)) {
    TraceOperation 085491 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 085530)));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      TraceOperation 085495 (Print "The Beast casually brushes you away with one of");
      GamePrint "The Beast casually brushes you away with one of";
      TraceOperation 085520 (Print_paddr (Var (Global 45)));
      Let b4 = M[007998];
      Let b5 = M[007999];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 085522 (Call (Floc 042734) [Con -11702] Sp);
      PushFrame 085522;
      SetLocal 1 -11702;
      JumpCall: 042734, #actuals: 1
    } else {
      Jump: 085530
    }
  } else {
    Jump: 085530
  }
LocReturn 085522:
  PushStack call_result;
  TraceOperation 085529 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085530:
  TraceOperation 085530 (Je [Var (Global 203),Con 22] (Branch F (Dloc 085593)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 085534 (Je [Var (Global 202),Con 28] (Branch F (Dloc 085593)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 085538 (Print_ret "\"Eat. Carve name on memorial. Sleep. Eat more. Roar a lot. Stuff like that.\"");
      GamePrint "\"Eat. Carve name on memorial. Sleep. Eat more. Roar a lot. Stuff like that.\"\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 085593
    }
  } else {
    Jump: 085593
  }
LocOp 085593:
  TraceOperation 085593 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 085597 (Print_paddr (Var (Global 25)));
    Let b3 = M[007958];
    Let b4 = M[007959];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 085599 New_line;
    GamePrint "\n";
    TraceOperation 085600 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
--[538]--------------------------------------------------
LocRoutine 085602:
  MakeRoutineFrame 0;
  Jump: 085603
LocOp 085603:
  TraceOperation 085603 (Call (Floc 022320) [Con -22735,Con -1] Sp);
  PushFrame 085603;
  SetLocal 1 -22735;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 085603:
  PushStack call_result;
  TraceOperation 085612 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 085617 New_line;
  GamePrint "\n";
  TraceOperation 085618 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 085639)));
  Let b2 = M[001606];
  if (TestBit(b2,4)) {
    TraceOperation 085622 (Insert_obj (Con 10) (Con 31));
    Let b3 = M[000845];
    if (IsZero(Widen(b3))) {
      SetByte 000845 31;
      Let b4 = M[001036];
      SetByte 000846 LoByte(Widen(b4));
      SetByte 001036 10;
      TraceOperation 085625 (Clear_attr (Con 99) (Con 27));
      Let b5 = M[001645];
      SetByte 001645 ClearBit(b5,4);
      TraceOperation 085628 (Set_attr (Con 99) (Con 4));
      Let b6 = M[001642];
      SetByte 001642 SetBit(b6,3);
      TraceOperation 085631 (Call (Floc 042734) [Con -10738] Sp);
      PushFrame 085631;
      SetLocal 1 -10738;
      JumpCall: 042734, #actuals: 1
    } else {
      Let b7 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b7),10)) {
        Let b8 = M[000846];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b8));
        SetByte 000845 31;
        Let b9 = M[001036];
        SetByte 000846 LoByte(Widen(b9));
        SetByte 001036 10;
        TraceOperation 085625 (Clear_attr (Con 99) (Con 27));
        Let b10 = M[001645];
        SetByte 001645 ClearBit(b10,4);
        TraceOperation 085628 (Set_attr (Con 99) (Con 4));
        Let b11 = M[001642];
        SetByte 001642 SetBit(b11,3);
        TraceOperation 085631 (Call (Floc 042734) [Con -10738] Sp);
        PushFrame 085631;
        SetLocal 1 -10738;
        JumpCall: 042734, #actuals: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 085639
  }
LocReturn 085631:
  PushStack call_result;
  TraceOperation 085638 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085639:
  TraceOperation 085639 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 085737)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 085644 (Print "The Beast still thinks it can't see you, but it's so irritated at having an invisible object stumble around its lair that it swipes out angrily with one of");
    GamePrint "The Beast still thinks it can't see you, but it's so irritated at having an invisible object stumble around its lair that it swipes out angrily with one of";
    TraceOperation 085727 (Print_paddr (Var (Global 45)));
    Let b2 = M[007998];
    Let b3 = M[007999];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 085729 (Call (Floc 042734) [Con -10451] Sp);
    PushFrame 085729;
    SetLocal 1 -10451;
    JumpCall: 042734, #actuals: 1
  } else {
    Jump: 085737
  }
LocReturn 085729:
  PushStack call_result;
  TraceOperation 085736 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085737:
  TraceOperation 085737 (Jin (Con 95) (Var (Global 0)) (Branch T (Dloc 085779)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 085779
  } else {
    TraceOperation 085741 (Insert_obj (Con 95) (Var (Global 0)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[001610];
    if (IsZero(Widen(b6))) {
      SetByte 001610 b5;
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
      SetByte 001611 LoByte(Widen(b7));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6) 95;
      TraceOperation 085744 (Insert_obj (Con 94) (Var (Global 0)));
      Let b8 = M[007908];
      Let b9 = M[007909];
      Let b10 = M[001601];
      if (IsZero(Widen(b10))) {
        SetByte 001601 b9;
        Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6)];
        SetByte 001602 LoByte(Widen(b11));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6) 94;
        TraceOperation 085747 (Store (Con 117) (Con 0));
        SetByte 008110 0;
        SetByte 008111 0;
        TraceOperation 085750 (Print_ret "Bellowing with rage, the Beast charges after you.");
        GamePrint "Bellowing with rage, the Beast charges after you.\n";
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      } else {
        Let b13 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
        if (Equal(Widen(b13),94)) {
          Let b14 = M[001602];
          SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b14));
          SetByte 001601 b9;
          Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6)];
          SetByte 001602 LoByte(Widen(b15));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6) 94;
          TraceOperation 085747 (Store (Con 117) (Con 0));
          SetByte 008110 0;
          SetByte 008111 0;
          TraceOperation 085750 (Print_ret "Bellowing with rage, the Beast charges after you.");
          GamePrint "Bellowing with rage, the Beast charges after you.\n";
          PopFrame return_address_16;
          JumpReturn: return_address_16, result: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b17 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
      if (Equal(Widen(b17),95)) {
        Let b18 = M[001611];
        SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b18));
        SetByte 001610 b5;
        Let b19 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
        SetByte 001611 LoByte(Widen(b19));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6) 95;
        TraceOperation 085744 (Insert_obj (Con 94) (Var (Global 0)));
        Let b20 = M[007908];
        Let b21 = M[007909];
        Let b22 = M[001601];
        if (IsZero(Widen(b22))) {
          SetByte 001601 b21;
          Let b23 = M[Offset(Offset(000751,Mul(MakeHiLo(b20,b21),9)),6)];
          SetByte 001602 LoByte(Widen(b23));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b20,b21),9)),6) 94;
          TraceOperation 085747 (Store (Con 117) (Con 0));
          SetByte 008110 0;
          SetByte 008111 0;
          TraceOperation 085750 (Print_ret "Bellowing with rage, the Beast charges after you.");
          GamePrint "Bellowing with rage, the Beast charges after you.\n";
          PopFrame return_address_24;
          JumpReturn: return_address_24, result: 1
        } else {
          Let b25 = M[Offset(Offset(000751,Mul(Widen(b22),9)),6)];
          if (Equal(Widen(b25),94)) {
            Let b26 = M[001602];
            SetByte Offset(Offset(000751,Mul(Widen(b22),9)),6) LoByte(Widen(b26));
            SetByte 001601 b21;
            Let b27 = M[Offset(Offset(000751,Mul(MakeHiLo(b20,b21),9)),6)];
            SetByte 001602 LoByte(Widen(b27));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b20,b21),9)),6) 94;
            TraceOperation 085747 (Store (Con 117) (Con 0));
            SetByte 008110 0;
            SetByte 008111 0;
            TraceOperation 085750 (Print_ret "Bellowing with rage, the Beast charges after you.");
            GamePrint "Bellowing with rage, the Beast charges after you.\n";
            PopFrame return_address_28;
            JumpReturn: return_address_28, result: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  }
--[539]--------------------------------------------------
LocRoutine 085820:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 621;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 16757;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 -31566;
      }
    }
  }
  Jump: 085827
LocOp 085827:
  TraceOperation 085827 (Jz (Var (Global 103)) (Branch F (Dloc 085870)));
  Let b1 = M[008114];
  Let b2 = M[008115];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 085830 (Print "The Beast, sharpening");
    GamePrint "The Beast, sharpening";
    TraceOperation 085845 (Print_paddr (Var (Global 45)));
    Let b3 = M[007998];
    Let b4 = M[007999];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 085847 (Print_ret ", demands again that you say your name.");
    GamePrint ", demands again that you say your name.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 085870
  }
LocOp 085870:
  TraceOperation 085870 (Jg (Var (Global 101)) (Con 4) (Branch F (Dloc 085880)));
  Let b1 = M[008110];
  Let b2 = M[008111];
  if (GreaterThan(MakeHiLo(b1,b2),4)) {
    TraceOperation 085874 (Call (Floc 085896) [] Sp);
    PushFrame 085874;
    JumpCall: 085896, #actuals: 0
  } else {
    Jump: 085880
  }
LocReturn 085874:
  PushStack call_result;
  TraceOperation 085879 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 085880:
  TraceOperation 085880 (Print_ret "The Beast is nearly upon you.");
  GamePrint "The Beast is nearly upon you.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[540]--------------------------------------------------
LocRoutine 085896:
  MakeRoutineFrame 0;
  Jump: 085897
LocOp 085897:
  TraceOperation 085897 (Print "With a vast savage roar, the Beast tears you limb from limb with");
  GamePrint "With a vast savage roar, the Beast tears you limb from limb with";
  TraceOperation 085934 (Print_paddr (Var (Global 45)));
  Let b1 = M[007998];
  Let b2 = M[007999];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 085936 (Call (Floc 042734) [Con -10436] Sp);
  PushFrame 085936;
  SetLocal 1 -10436;
  JumpCall: 042734, #actuals: 1
LocReturn 085936:
  PushStack call_result;
  TraceOperation 085943 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[541]--------------------------------------------------
LocRoutine 085944:
  MakeRoutineFrame 0;
  Jump: 085945
LocOp 085945:
  TraceOperation 085945 (Je [Var (Global 203),Con 174] (Branch F (Dloc 085957)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 085949 (Call (Floc 022042) [Con 178,Con 30] Sp);
    PushFrame 085949;
    SetLocal 1 178;
    SetLocal 2 30;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 085957
  }
LocReturn 085949:
  PushStack call_result;
  TraceOperation 085956 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 085957:
  TraceOperation 085957 (Je [Var (Global 0),Con 98] (Branch F (Dloc 085965)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),98)) {
    TraceOperation 085961 (Test_attr (Con 95) (Con 3) (Branch T Dfalse));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      Jump: 085965
    }
  } else {
    Jump: 085965
  }
LocOp 085965:
  TraceOperation 085965 (Je [Var (Global 203),Con 98,Con 159,Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),98),Equal(MakeHiLo(b1,b2),159)),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 085972 (Print_ret "Huh?");
    GamePrint "Huh?\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[542]--------------------------------------------------
LocRoutine 085978:
  MakeRoutineFrame 0;
  Jump: 085979
LocOp 085979:
  TraceOperation 085979 (Je [Var (Global 203),Con 124] (Branch F (Dloc 086001)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 085983 (Test_attr (Con 88) (Con 21) (Branch F (Dloc 086001)));
    Let b3 = M[001545];
    if (TestBit(b3,2)) {
      TraceOperation 085987 (Clear_attr (Con 88) (Con 21));
      Let b4 = M[001545];
      SetByte 001545 ClearBit(b4,2);
      TraceOperation 085990 (Clear_attr (Con 88) (Con 27));
      Let b5 = M[001546];
      SetByte 001546 ClearBit(b5,4);
      TraceOperation 085993 (Set_attr (Con 89) (Con 5));
      Let b6 = M[001552];
      SetByte 001552 SetBit(b6,2);
      TraceOperation 085996 (Add (Var (Global 1)) (Con 25) (Global 1));
      Let b7 = M[007910];
      Let b8 = M[007911];
      SetByte 007910 HiByte(Add(MakeHiLo(b7,b8),25));
      SetByte 007911 LoByte(Add(MakeHiLo(b7,b8),25));
      TraceOperation 086000 Rfalse;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 0
    } else {
      Jump: 086001
    }
  } else {
    Jump: 086001
  }
LocOp 086001:
  TraceOperation 086001 (Je [Var (Global 203),Con 124] (Branch F (Dloc 086038)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 086005 (Call (Floc 020662) [Con -16129] Sp);
    PushFrame 086005;
    SetLocal 1 -16129;
    JumpCall: 020662, #actuals: 1
  } else {
    Jump: 086038
  }
LocReturn 086005:
  PushStack call_result;
  TraceOperation 086012 (Jz (Var Sp) (Branch T (Dloc 086038)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 086038
  } else {
    TraceOperation 086015 (Print_ret "You get a powerful electric shock.");
    GamePrint "You get a powerful electric shock.\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
LocOp 086038:
  TraceOperation 086038 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 086042 (Print "The ");
    GamePrint "The ";
    TraceOperation 086045 (Print_obj (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 086047 (Print " is square, about ten inches on each side.");
      GamePrint " is square, about ten inches on each side.";
      TraceOperation 086074 (Call (Floc 057998) [] Sp);
      PushFrame 086074;
      JumpCall: 057998, #actuals: 0
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 086047 (Print " is square, about ten inches on each side.");
      GamePrint " is square, about ten inches on each side.";
      TraceOperation 086074 (Call (Floc 057998) [] Sp);
      PushFrame 086074;
      JumpCall: 057998, #actuals: 0
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocReturn 086074:
  PushStack call_result;
  TraceOperation 086079 New_line;
  GamePrint "\n";
  TraceOperation 086080 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[543]--------------------------------------------------
LocRoutine 086082:
  MakeRoutineFrame 0;
  Jump: 086083
LocOp 086083:
  TraceOperation 086083 New_line;
  GamePrint "\n";
  TraceOperation 086084 (Store (Con 96) (Con 60));
  SetByte 008068 0;
  SetByte 008069 60;
  TraceOperation 086087 (Print "It is of course well known that careless talk costs lives, but the full scale of the problem is not always appreciated. For instance, at the exact moment you said \"");
  GamePrint "It is of course well known that careless talk costs lives, but the full scale of the problem is not always appreciated. For instance, at the exact moment you said \"";
  TraceOperation 086186 (Call (Floc 021902) [Var (Global 233)] Sp);
  Let b1 = M[008374];
  Let b2 = M[008375];
  PushFrame 086186;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 021902, #actuals: 1
LocReturn 086186:
  PushStack call_result;
  TraceOperation 086192 (Print "\" a freak wormhole opened in the fabric of the space-time continuum and carried your words far far back in time across almost infinite reaches of space to a distant galaxy where strange and warlike beings were poised on the brink of frightful interstellar battle.\n\nThe two opposing leaders were meeting for the last time. A dreadful silence fell across the conference table as the commander of the Vl'Hurgs, resplendent in his");
  GamePrint "\" a freak wormhole opened in the fabric of the space-time continuum and carried your words far far back in time across almost infinite reaches of space to a distant galaxy where strange and warlike beings were poised on the brink of frightful interstellar battle.\n\nThe two opposing leaders were meeting for the last time. A dreadful silence fell across the conference table as the commander of the Vl'Hurgs, resplendent in his";
  TraceOperation 086451 (Print_paddr (Var (Global 39)));
  Let b1 = M[007986];
  Let b2 = M[007987];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 086453 (Print "gazed levelly at the ");
  GamePrint "gazed levelly at the ";
  TraceOperation 086466 (Print_obj (Con 83));
  Let b3 = M[001505];
  Let b4 = M[001506];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 086468 (Print " squatting opposite him");
    GamePrint " squatting opposite him";
    TraceOperation 086485 (Print_paddr (Var (Global 38)));
    Let b6 = M[007984];
    Let b7 = M[007985];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
    TraceOperation 086487 (Print "As a million sleek and horribly beweaponed star cruisers poised to unleash electric death at his single word of command, the Vl'Hurg challenged his vile enemy to take back what it had said about his mother.\n\nThe creature stirred in its sickly broiling vapour, and at that very moment the words \"");
    GamePrint "As a million sleek and horribly beweaponed star cruisers poised to unleash electric death at his single word of command, the Vl'Hurg challenged his vile enemy to take back what it had said about his mother.\n\nThe creature stirred in its sickly broiling vapour, and at that very moment the words \"";
    TraceOperation 086666 (Call (Floc 021902) [Var (Global 233)] Sp);
    Let b8 = M[008374];
    Let b9 = M[008375];
    PushFrame 086666;
    SetLocal 1 MakeHiLo(b8,b9);
    JumpCall: 021902, #actuals: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 086468 (Print " squatting opposite him");
    GamePrint " squatting opposite him";
    TraceOperation 086485 (Print_paddr (Var (Global 38)));
    Let b10 = M[007984];
    Let b11 = M[007985];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
    TraceOperation 086487 (Print "As a million sleek and horribly beweaponed star cruisers poised to unleash electric death at his single word of command, the Vl'Hurg challenged his vile enemy to take back what it had said about his mother.\n\nThe creature stirred in its sickly broiling vapour, and at that very moment the words \"");
    GamePrint "As a million sleek and horribly beweaponed star cruisers poised to unleash electric death at his single word of command, the Vl'Hurg challenged his vile enemy to take back what it had said about his mother.\n\nThe creature stirred in its sickly broiling vapour, and at that very moment the words \"";
    TraceOperation 086666 (Call (Floc 021902) [Var (Global 233)] Sp);
    Let b12 = M[008374];
    Let b13 = M[008375];
    PushFrame 086666;
    SetLocal 1 MakeHiLo(b12,b13);
    JumpCall: 021902, #actuals: 1
  }
LocReturn 086666:
  PushStack call_result;
  TraceOperation 086672 (Print_ret "\" drifted across the conference table. Unfortunately, in the Vl'hurg tongue this was the most dreadful insult imaginable, and there was nothing for it but to wage terrible war for centuries. Eventually the error was detected, but over two hundred and fifty thousand worlds, their peoples and cultures perished in the holocaust.\n\nYou have destroyed most of a small galaxy. Please pick your words with greater care.");
  GamePrint "\" drifted across the conference table. Unfortunately, in the Vl'hurg tongue this was the most dreadful insult imaginable, and there was nothing for it but to wage terrible war for centuries. Eventually the error was detected, but over two hundred and fifty thousand worlds, their peoples and cultures perished in the holocaust.\n\nYou have destroyed most of a small galaxy. Please pick your words with greater care.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[544]--------------------------------------------------
LocRoutine 086904:
  MakeRoutineFrame 0;
  Jump: 086905
LocOp 086905:
  TraceOperation 086905 (Je [Var (Global 203),Con 38] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 086909 (Print_paddr (Var (Global 57)));
    Let b3 = M[008022];
    Let b4 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 086911 New_line;
    GamePrint "\n";
    TraceOperation 086912 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
--[545]--------------------------------------------------
LocRoutine 086914:
  MakeRoutineFrame 0;
  Jump: 086915
LocOp 086915:
  TraceOperation 086915 (Je [Var (Global 203),Con 63] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 086919 (Print "Through the ");
    GamePrint "Through the ";
    TraceOperation 086928 (Print_obj (Con 85));
    Let b3 = M[001523];
    Let b4 = M[001524];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 086930 (Print " of the ship you can see a vast ");
      GamePrint " of the ship you can see a vast ";
      TraceOperation 086947 (Print_obj (Con 87));
      Let b6 = M[001541];
      Let b7 = M[001542];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 086949 (Print_ret " flying in formation behind you through the black, glittering emptiness of space. Ahead is a star system towards which you are hurtling at a terrifying speed.");
        GamePrint " flying in formation behind you through the black, glittering emptiness of space. Ahead is a star system towards which you are hurtling at a terrifying speed.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 086949 (Print_ret " flying in formation behind you through the black, glittering emptiness of space. Ahead is a star system towards which you are hurtling at a terrifying speed.");
        GamePrint " flying in formation behind you through the black, glittering emptiness of space. Ahead is a star system towards which you are hurtling at a terrifying speed.\n";
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 086930 (Print " of the ship you can see a vast ");
      GamePrint " of the ship you can see a vast ";
      TraceOperation 086947 (Print_obj (Con 87));
      Let b11 = M[001541];
      Let b12 = M[001542];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      if (IsZeroByte(b13)) {
        GamePrint "";
        TraceOperation 086949 (Print_ret " flying in formation behind you through the black, glittering emptiness of space. Ahead is a star system towards which you are hurtling at a terrifying speed.");
        GamePrint " flying in formation behind you through the black, glittering emptiness of space. Ahead is a star system towards which you are hurtling at a terrifying speed.\n";
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
        TraceOperation 086949 (Print_ret " flying in formation behind you through the black, glittering emptiness of space. Ahead is a star system towards which you are hurtling at a terrifying speed.");
        GamePrint " flying in formation behind you through the black, glittering emptiness of space. Ahead is a star system towards which you are hurtling at a terrifying speed.\n";
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 1
      }
    }
  } else {
    PopFrame return_address_16;
    JumpReturn: return_address_16, result: 0
  }
--[546]--------------------------------------------------
LocRoutine 087042:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 087045
LocOp 087045:
  TraceOperation 087045 (Je [Var (Local 1),Con 2] (Branch F (Dloc 087073)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 087049 (Clear_attr (Con 148) (Con 6));
    Let b1 = M[002083];
    SetByte 002083 ClearBit(b1,1);
    TraceOperation 087052 (Insert_obj (Con 163) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[002222];
    if (IsZero(Widen(b4))) {
      SetByte 002222 b3;
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
      SetByte 002223 LoByte(Widen(b5));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 163;
      TraceOperation 087055 (Store (Con 91) (Con 1));
      SetByte 008058 0;
      SetByte 008059 1;
      TraceOperation 087058 (Call (Floc 022320) [Con -30860,Con -1] Sp);
      PushFrame 087058;
      SetLocal 1 -30860;
      SetLocal 2 -1;
      JumpCall: 022320, #actuals: 2
    } else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b6),163)) {
        Let b7 = M[002223];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b7));
        SetByte 002222 b3;
        Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
        SetByte 002223 LoByte(Widen(b8));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 163;
        TraceOperation 087055 (Store (Con 91) (Con 1));
        SetByte 008058 0;
        SetByte 008059 1;
        TraceOperation 087058 (Call (Floc 022320) [Con -30860,Con -1] Sp);
        PushFrame 087058;
        SetLocal 1 -30860;
        SetLocal 2 -1;
        JumpCall: 022320, #actuals: 2
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 087073
  }
LocReturn 087058:
  PushStack call_result;
  TraceOperation 087067 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 087072 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 087073:
  TraceOperation 087073 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 087077 (Print "Spread before you, astonishingly enough, is the ");
    GamePrint "Spread before you, astonishingly enough, is the ";
    TraceOperation 087108 (Print_obj (Con 86));
    Let b1 = M[001532];
    Let b2 = M[001533];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 087110 (Print " of a star battle cruiser. ");
      GamePrint " of a star battle cruiser. ";
      TraceOperation 087129 (Call (Floc 022042) [Con 63,Con 85] Sp);
      PushFrame 087129;
      SetLocal 1 63;
      SetLocal 2 85;
      JumpCall: 022042, #actuals: 2
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 087110 (Print " of a star battle cruiser. ");
      GamePrint " of a star battle cruiser. ";
      TraceOperation 087129 (Call (Floc 022042) [Con 63,Con 85] Sp);
      PushFrame 087129;
      SetLocal 1 63;
      SetLocal 2 85;
      JumpCall: 022042, #actuals: 2
    }
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocReturn 087129:
  PushStack call_result;
  TraceOperation 087136 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[547]--------------------------------------------------
LocRoutine 087138:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 087141
LocOp 087141:
  TraceOperation 087141 New_line;
  GamePrint "\n";
  TraceOperation 087142 (Print "Standing near you are two creatures who are gazing at the star system with terrible hatred in their eyes. One is wearing");
  GamePrint "Standing near you are two creatures who are gazing at the star system with terrible hatred in their eyes. One is wearing";
  TraceOperation 087213 (Print_paddr (Var (Global 39)));
  Let b1 = M[007986];
  Let b2 = M[007987];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 087215 (Print "and the other is wreathed");
  GamePrint "and the other is wreathed";
  TraceOperation 087230 (Print_paddr (Var (Global 38)));
  Let b3 = M[007984];
  Let b4 = M[007985];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
  TraceOperation 087232 (Print "They are engaged in ");
  GamePrint "They are engaged in ";
  TraceOperation 087245 (Print_obj (Con 148));
  Let b5 = M[002090];
  Let b6 = M[002091];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  if (IsZeroByte(b7)) {
    GamePrint "";
    TraceOperation 087247 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
    TraceOperation 087247 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  }
--[548]--------------------------------------------------
LocRoutine 087250:
  MakeRoutineFrame 0;
  Jump: 087251
LocOp 087251:
  TraceOperation 087251 (Je [Var (Global 203),Con 15] (Branch F (Dloc 087383)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 087256 (Print "You are clearly the worst diplomat that ever lived, and are about to become the worst one that ever died. That is an even worse insult in the G'Gugvunt tongue than \"");
    GamePrint "You are clearly the worst diplomat that ever lived, and are about to become the worst one that ever died. That is an even worse insult in the G'Gugvunt tongue than \"";
    TraceOperation 087349 (Call (Floc 021902) [Var (Global 233)] Sp);
    Let b3 = M[008374];
    Let b4 = M[008375];
    PushFrame 087349;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 021902, #actuals: 1
  } else {
    Jump: 087383
  }
LocReturn 087349:
  PushStack call_result;
  TraceOperation 087355 (Print "\" is in the Vl'Hurg tongue.");
  GamePrint "\" is in the Vl'Hurg tongue.";
  TraceOperation 087376 New_line;
  GamePrint "\n";
  TraceOperation 087377 (Call (Floc 043634) [] Sp);
  PushFrame 087377;
  JumpCall: 043634, #actuals: 0
LocReturn 087377:
  PushStack call_result;
  TraceOperation 087382 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 087383:
  TraceOperation 087383 (Je [Var (Global 203),Con 61] (Branch F (Dloc 087413)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 087387 (Print "The ");
    GamePrint "The ";
    TraceOperation 087390 (Print_obj (Con 84));
    Let b3 = M[001514];
    Let b4 = M[001515];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 087392 (Print_ret " looks typically Vl'Hurgish.");
      GamePrint " looks typically Vl'Hurgish.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 087392 (Print_ret " looks typically Vl'Hurgish.");
      GamePrint " looks typically Vl'Hurgish.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 087413
  }
LocOp 087413:
  TraceOperation 087413 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 087417 (Test_attr (Con 84) (Con 3) (Branch F (Dloc 087456)));
    Let b3 = M[001507];
    if (TestBit(b3,4)) {
      TraceOperation 087421 (Print_ret "The creatures are speculating about who you are and what to do with you.");
      GamePrint "The creatures are speculating about who you are and what to do with you.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      Jump: 087456
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 087456:
  TraceOperation 087456 (Set_attr (Con 84) (Con 3));
  Let b1 = M[001507];
  SetByte 001507 SetBit(b1,4);
  TraceOperation 087459 (Print "  \"Hated planet!\" snarls the Vl'Hurg.\n  \"Home of he that dared to say '");
  GamePrint "  \"Hated planet!\" snarls the Vl'Hurg.\n  \"Home of he that dared to say '";
  TraceOperation 087512 (Call (Floc 021902) [Var (Global 233)] Sp);
  Let b2 = M[008374];
  Let b3 = M[008375];
  PushFrame 087512;
  SetLocal 1 MakeHiLo(b2,b3);
  JumpCall: 021902, #actuals: 1
LocReturn 087512:
  PushStack call_result;
  TraceOperation 087518 (Print "'\" rasps the G'Gugvunt.\n  \"Detested words! Even now it sticks my soul to hear them uttered,\" barks the Vl'Hurg, \"even though ten thousand years have passed...\"\n  \"And as many senseless megadeaths! Worlds destroyed! My race and yours laid to waste! All because of he that dared shape the words '");
  GamePrint "'\" rasps the G'Gugvunt.\n  \"Detested words! Even now it sticks my soul to hear them uttered,\" barks the Vl'Hurg, \"even though ten thousand years have passed...\"\n  \"And as many senseless megadeaths! Worlds destroyed! My race and yours laid to waste! All because of he that dared shape the words '";
  TraceOperation 087717 (Call (Floc 021902) [Var (Global 233)] Sp);
  Let b1 = M[008374];
  Let b2 = M[008375];
  PushFrame 087717;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 021902, #actuals: 1
LocReturn 087717:
  PushStack call_result;
  TraceOperation 087723 (Print "'.\"\n  \"Torture to my Vl'Hurgish warrior heart to hear it spoken! Yet, even now, the hot breath of our vengeance blows hard upon this little world...\"\n  \"Vengeance on him who said '");
  GamePrint "'.\"\n  \"Torture to my Vl'Hurgish warrior heart to hear it spoken! Yet, even now, the hot breath of our vengeance blows hard upon this little world...\"\n  \"Vengeance on him who said '";
  TraceOperation 087844 (Call (Floc 021902) [Var (Global 233)] Sp);
  Let b1 = M[008374];
  Let b2 = M[008375];
  PushFrame 087844;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 021902, #actuals: 1
LocReturn 087844:
  PushStack call_result;
  TraceOperation 087850 (Print "'.\"\n  \"Yes, there's no need to keep repeating it,\" growls the Vl'Hurg.\n  \"One happy thought,\" adds the G'Gugvunt. \"After millenia of bloody and perpetual conflict, our races have been brought together by this Quest for the Source of the Offending Remark. Perhaps, after our vengeance has been exacted on him who said '");
  GamePrint "'.\"\n  \"Yes, there's no need to keep repeating it,\" growls the Vl'Hurg.\n  \"One happy thought,\" adds the G'Gugvunt. \"After millenia of bloody and perpetual conflict, our races have been brought together by this Quest for the Source of the Offending Remark. Perhaps, after our vengeance has been exacted on him who said '";
  TraceOperation 088065 (Call (Floc 021902) [Var (Global 233)] Sp);
  Let b1 = M[008374];
  Let b2 = M[008375];
  PushFrame 088065;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 021902, #actuals: 1
LocReturn 088065:
  PushStack call_result;
  TraceOperation 088071 (Print_ret "'...\"\n  \"Will you stop saying it?\"\n  \"...perhaps we will continue to live in peace and harmony and...\"\n  \"We will talk about that AFTER we ... who's this?\"\n\nThe two creatures turn and stare at you.");
  GamePrint "'...\"\n  \"Will you stop saying it?\"\n  \"...perhaps we will continue to live in peace and harmony and...\"\n  \"We will talk about that AFTER we ... who's this?\"\n\nThe two creatures turn and stare at you.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[549]--------------------------------------------------
LocRoutine 088210:
  MakeRoutineFrame 0;
  Jump: 088211
LocOp 088211:
  TraceOperation 088211 (Je [Var (Global 203),Con 15] (Branch F (Dloc 088228)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 088215 (Call (Floc 022042) [Con 15,Con 84] Sp);
    PushFrame 088215;
    SetLocal 1 15;
    SetLocal 2 84;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 088228
  }
LocReturn 088215:
  PushStack call_result;
  TraceOperation 088222 (Call (Floc 043634) [] Sp);
  PushFrame 088222;
  JumpCall: 043634, #actuals: 0
LocReturn 088222:
  PushStack call_result;
  TraceOperation 088227 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 088228:
  TraceOperation 088228 (Je [Var (Global 203),Con 61] (Branch F (Dloc 088264)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 088232 (Print "The ");
    GamePrint "The ";
    TraceOperation 088235 (Print_obj (Con 83));
    Let b3 = M[001505];
    Let b4 = M[001506];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 088237 (Print_ret " is looking typically G'Gugvuntish.");
      GamePrint " is looking typically G'Gugvuntish.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 088237 (Print_ret " is looking typically G'Gugvuntish.");
      GamePrint " is looking typically G'Gugvuntish.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 088264
  }
LocOp 088264:
  TraceOperation 088264 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 088268 (Call (Floc 022042) [Con 74,Con 84] Sp);
    PushFrame 088268;
    SetLocal 1 74;
    SetLocal 2 84;
    JumpCall: 022042, #actuals: 2
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 088268:
  PushStack call_result;
  TraceOperation 088275 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[550]--------------------------------------------------
LocRoutine 088276:
  MakeRoutineFrame 0;
  Jump: 088277
LocOp 088277:
  TraceOperation 088277 (Jz (Var (Global 122)) (Branch F (Dloc 088302)));
  Let b1 = M[008152];
  Let b2 = M[008153];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 088280 (Je [Var (Global 201),Con 163] (Branch F (Dloc 088293)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),163)) {
      TraceOperation 088284 (Call (Floc 022042) [Var (Global 203),Con 42,Var (Global 202)] Sp);
      Let b5 = M[008314];
      Let b6 = M[008315];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame 088284;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 42;
      SetLocal 3 MakeHiLo(b7,b8);
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 088293
    }
  } else {
    Jump: 088302
  }
LocReturn 088284:
  PushStack call_result;
  TraceOperation 088292 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 088293:
  TraceOperation 088293 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 42] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 088293;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 42;
  JumpCall: 022042, #actuals: 3
LocReturn 088293:
  PushStack call_result;
  TraceOperation 088301 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 088302:
  TraceOperation 088302 (Je [Var (Global 203),Con 48,Con 86] (Branch F (Dloc 088315)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 088308 (Print_ret "You did!");
    GamePrint "You did!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 088315
  }
LocOp 088315:
  TraceOperation 088315 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 088319 (Print "It is an utterly insignificant little blue-green planet, of the sort where they probably still wear ");
    GamePrint "It is an utterly insignificant little blue-green planet, of the sort where they probably still wear ";
    TraceOperation 088376 (Print_obj (Con 144));
    Let b3 = M[002054];
    Let b4 = M[002055];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 088378 (Print_ret "es.");
      GamePrint "es.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 088378 (Print_ret "es.");
      GamePrint "es.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
--[551]--------------------------------------------------
LocRoutine 088384:
  MakeRoutineFrame 0;
  Jump: 088385
LocOp 088385:
  TraceOperation 088385 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 088389 (Jl (Con 40) (Var Sp) (Branch T (Dloc 088440)));
  PopStack popped2;
  if (LessThan(40,popped2)) {
    Jump: 088440
  } else {
    TraceOperation 088393 (Print "An electrical impulse across a synapse gap temporarily blocks your way.");
    GamePrint "An electrical impulse across a synapse gap temporarily blocks your way.";
    TraceOperation 088438 New_line;
    GamePrint "\n";
    TraceOperation 088439 Rfalse;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 088440:
  TraceOperation 088440 (Inc (Con 114));
  Let b1 = M[008104];
  Let b2 = M[008105];
  SetByte 008104 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008105 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 088442 (Je [Var (Global 98),Con 3,Con 17,Con 36] (Branch F (Dloc 088455)));
  Let b3 = M[008104];
  Let b4 = M[008105];
  if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),3),Equal(MakeHiLo(b3,b4),17)),Equal(MakeHiLo(b3,b4),36))) {
    TraceOperation 088449 (Insert_obj (Con 78) (Var (Global 0)));
    Let b5 = M[007908];
    Let b6 = M[007909];
    Let b7 = M[001457];
    if (IsZero(Widen(b7))) {
      SetByte 001457 b6;
      Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte 001458 LoByte(Widen(b8));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 78;
      TraceOperation 088452 (Jump 088458);
      Jump: 088458
    } else {
      Let b9 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b9),78)) {
        Let b10 = M[001458];
        SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b10));
        SetByte 001457 b6;
        Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
        SetByte 001458 LoByte(Widen(b11));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 78;
        TraceOperation 088452 (Jump 088458);
        Jump: 088458
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 088455
  }
LocOp 088455:
  TraceOperation 088455 (Insert_obj (Con 78) (Con 219));
  Let b1 = M[001457];
  if (IsZero(Widen(b1))) {
    SetByte 001457 219;
    Let b2 = M[002728];
    SetByte 001458 LoByte(Widen(b2));
    SetByte 002728 78;
    Jump: 088458
  } else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b3),78)) {
      Let b4 = M[001458];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b4));
      SetByte 001457 219;
      Let b5 = M[002728];
      SetByte 001458 LoByte(Widen(b5));
      SetByte 002728 78;
      Jump: 088458
    } else {
      Error: unlink/loop
    }
  }
LocOp 088458:
  TraceOperation 088458 (Call (Floc 034400) [] Sp);
  PushFrame 088458;
  JumpCall: 034400, #actuals: 0
LocReturn 088458:
  PushStack call_result;
  TraceOperation 088463 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[552]--------------------------------------------------
LocRoutine 088464:
  MakeRoutineFrame 0;
  Jump: 088465
LocOp 088465:
  TraceOperation 088465 (Je [Var (Global 203),Con 98,Con 124] (Branch F (Dloc 088505)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),98),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 088471 (Insert_obj (Con 78) (Con 219));
    Let b3 = M[001457];
    if (IsZero(Widen(b3))) {
      SetByte 001457 219;
      Let b4 = M[002728];
      SetByte 001458 LoByte(Widen(b4));
      SetByte 002728 78;
      TraceOperation 088474 (Set_attr (Con 78) (Con 3));
      Let b5 = M[001453];
      SetByte 001453 SetBit(b5,4);
      TraceOperation 088477 (Add (Var (Global 1)) (Con 25) (Global 1));
      Let b6 = M[007910];
      Let b7 = M[007911];
      SetByte 007910 HiByte(Add(MakeHiLo(b6,b7),25));
      SetByte 007911 LoByte(Add(MakeHiLo(b6,b7),25));
      TraceOperation 088481 (Set_attr (Con 86) (Con 4));
      Let b8 = M[001525];
      SetByte 001525 SetBit(b8,3);
      TraceOperation 088484 (Print "As you remove the ");
      GamePrint "As you remove the ";
      TraceOperation 088495 (Print_obj (Con 78));
      Let b9 = M[001460];
      Let b10 = M[001461];
      Let b11 = M[Address(MakeHiLo(b9,b10))];
      if (IsZeroByte(b11)) {
        GamePrint "";
        TraceOperation 088497 (Call (Floc 042734) [Con -10308] Sp);
        PushFrame 088497;
        SetLocal 1 -10308;
        JumpCall: 042734, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
        TraceOperation 088497 (Call (Floc 042734) [Con -10308] Sp);
        PushFrame 088497;
        SetLocal 1 -10308;
        JumpCall: 042734, #actuals: 1
      }
    } else {
      Let b12 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b12),78)) {
        Let b13 = M[001458];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b13));
        SetByte 001457 219;
        Let b14 = M[002728];
        SetByte 001458 LoByte(Widen(b14));
        SetByte 002728 78;
        TraceOperation 088474 (Set_attr (Con 78) (Con 3));
        Let b15 = M[001453];
        SetByte 001453 SetBit(b15,4);
        TraceOperation 088477 (Add (Var (Global 1)) (Con 25) (Global 1));
        Let b16 = M[007910];
        Let b17 = M[007911];
        SetByte 007910 HiByte(Add(MakeHiLo(b16,b17),25));
        SetByte 007911 LoByte(Add(MakeHiLo(b16,b17),25));
        TraceOperation 088481 (Set_attr (Con 86) (Con 4));
        Let b18 = M[001525];
        SetByte 001525 SetBit(b18,3);
        TraceOperation 088484 (Print "As you remove the ");
        GamePrint "As you remove the ";
        TraceOperation 088495 (Print_obj (Con 78));
        Let b19 = M[001460];
        Let b20 = M[001461];
        Let b21 = M[Address(MakeHiLo(b19,b20))];
        if (IsZeroByte(b21)) {
          GamePrint "";
          TraceOperation 088497 (Call (Floc 042734) [Con -10308] Sp);
          PushFrame 088497;
          SetLocal 1 -10308;
          JumpCall: 042734, #actuals: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b19,b20)),1));
          TraceOperation 088497 (Call (Floc 042734) [Con -10308] Sp);
          PushFrame 088497;
          SetLocal 1 -10308;
          JumpCall: 042734, #actuals: 1
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 088505
  }
LocReturn 088497:
  PushStack call_result;
  TraceOperation 088504 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 088505:
  TraceOperation 088505 (Je [Var (Global 203),Con 120,Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),120),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 088511 (Print "As you look closer you see, inscribed in tiny letters on the ");
    GamePrint "As you look closer you see, inscribed in tiny letters on the ";
    TraceOperation 088548 (Print_obj (Con 78));
    Let b3 = M[001460];
    Let b4 = M[001461];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 088550 (Print_ret ":\n\n  Sense, Common for:\n     Dent, Arthur\n   (for replacement,\n  order part #31-541)");
      GamePrint ":\n\n  Sense, Common for:\n     Dent, Arthur\n   (for replacement,\n  order part #31-541)\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 088550 (Print_ret ":\n\n  Sense, Common for:\n     Dent, Arthur\n   (for replacement,\n  order part #31-541)");
      GamePrint ":\n\n  Sense, Common for:\n     Dent, Arthur\n   (for replacement,\n  order part #31-541)\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
--[553]--------------------------------------------------
LocRoutine 088618:
  MakeRoutineFrame 0;
  Jump: 088619
LocOp 088619:
  TraceOperation 088619 (Je [Var (Global 203),Con 59,Con 86] (Branch F (Dloc 088642)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),59),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 088625 (Je [Var (Global 0),Con 76] (Branch F (Dloc 088636)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),76)) {
      TraceOperation 088629 (Call (Floc 043620) [Con 16] Sp);
      PushFrame 088629;
      SetLocal 1 16;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 088636
    }
  } else {
    Jump: 088642
  }
LocReturn 088629:
  PushStack call_result;
  TraceOperation 088635 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 088636:
  TraceOperation 088636 (Call (Floc 040326) [] Sp);
  PushFrame 088636;
  JumpCall: 040326, #actuals: 0
LocReturn 088636:
  PushStack call_result;
  TraceOperation 088641 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 088642:
  TraceOperation 088642 (Je [Var (Global 203),Con 38] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 088646 (Print_paddr (Var (Global 57)));
    Let b3 = M[008022];
    Let b4 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 088648 New_line;
    GamePrint "\n";
    TraceOperation 088649 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
--[554]--------------------------------------------------
LocRoutine 088650:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 088653
LocOp 088653:
  TraceOperation 088653 (Print "You are in a large ");
  GamePrint "You are in a large ";
  TraceOperation 088662 (Print_obj (Var (Local 1)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),7)];
  Let b2 = M[Offset(Offset(Offset(000751,Mul(GetLocal(1),9)),7),1)];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 088664 (Print ". There is a party going on. Other rooms lie to the ");
    GamePrint ". There is a party going on. Other rooms lie to the ";
    TraceOperation 088693 Rtrue;
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 088664 (Print ". There is a party going on. Other rooms lie to the ");
    GamePrint ". There is a party going on. Other rooms lie to the ";
    TraceOperation 088693 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[555]--------------------------------------------------
LocRoutine 088694:
  MakeRoutineFrame 0;
  Jump: 088695
LocOp 088695:
  TraceOperation 088695 (Test_attr (Con 75) (Con 23) (Branch F (Dloc 088742)));
  Let b1 = M[001428];
  if (TestBit(b1,0)) {
    TraceOperation 088699 (Print "What! Leave a fun party like this?");
    GamePrint "What! Leave a fun party like this?";
    TraceOperation 088724 New_line;
    GamePrint "\n";
    TraceOperation 088725 (Store (Con 229) (Con 3));
    SetByte 008334 0;
    SetByte 008335 3;
    TraceOperation 088728 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame 088728;
    SetLocal 1 -14349;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 088742
  }
LocReturn 088728:
  PushStack call_result;
  TraceOperation 088736 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 088741 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 088742:
  TraceOperation 088742 (Print "The door is closed.");
  GamePrint "The door is closed.";
  TraceOperation 088753 New_line;
  GamePrint "\n";
  TraceOperation 088754 (Store (Con 207) (Con 75));
  SetByte 008290 0;
  SetByte 008291 75;
  TraceOperation 088757 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[556]--------------------------------------------------
LocRoutine 088758:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 088761
LocOp 088761:
  TraceOperation 088761 (Je [Var (Local 1),Con 2] (Branch F (Dloc 089029)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 088766 (Je [Var (Global 120),Con 194] (Branch T (Dloc 089029)));
    Let b1 = M[008148];
    Let b2 = M[008149];
    if (Equal(MakeHiLo(b1,b2),194)) {
      Jump: 089029
    } else {
      TraceOperation 088771 (Get_parent (Con 193) Sp);
      Let b3 = M[002492];
      PushStack Widen(b3);
      TraceOperation 088774 (Storew (Var (Global 94)) (Con 0) (Var Sp));
      Let b4 = M[008096];
      Let b5 = M[008097];
      PopStack popped6;
      SetByte Offset(Address(MakeHiLo(b4,b5)),0) HiByte(popped6);
      SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),0),1) LoByte(popped6);
      TraceOperation 088779 (Get_parent (Con 13) Sp);
      Let b7 = M[000872];
      PushStack Widen(b7);
      TraceOperation 088782 (Storew (Var (Global 94)) (Con 1) (Var Sp));
      Let b8 = M[008096];
      Let b9 = M[008097];
      PopStack popped10;
      SetByte Offset(Address(MakeHiLo(b8,b9)),2) HiByte(popped10);
      SetByte Offset(Offset(Address(MakeHiLo(b8,b9)),2),1) LoByte(popped10);
      TraceOperation 088787 (Test_attr (Con 193) (Con 23) (Branch F (Dloc 088799)));
      Let b11 = M[002490];
      if (TestBit(b11,0)) {
        TraceOperation 088791 (Storew (Var (Global 94)) (Con 2) (Con 1));
        Let b12 = M[008096];
        Let b13 = M[008097];
        SetByte Offset(Address(MakeHiLo(b12,b13)),4) 0;
        SetByte Offset(Offset(Address(MakeHiLo(b12,b13)),4),1) 1;
        TraceOperation 088796 (Jump 088804);
        Jump: 088804
      } else {
        Jump: 088799
      }
    }
  } else {
    Jump: 089029
  }
LocOp 088799:
  TraceOperation 088799 (Storew (Var (Global 94)) (Con 2) (Con 0));
  Let b1 = M[008096];
  Let b2 = M[008097];
  SetByte Offset(Address(MakeHiLo(b1,b2)),4) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),4),1) 0;
  Jump: 088804
LocOp 088804:
  TraceOperation 088804 (Store (Con 136) (Con 194));
  SetByte 008148 0;
  SetByte 008149 194;
  TraceOperation 088807 (Insert_obj (Con 194) (Con 169));
  Let b1 = M[002501];
  if (IsZero(Widen(b1))) {
    SetByte 002501 169;
    Let b2 = M[002278];
    SetByte 002502 LoByte(Widen(b2));
    SetByte 002278 194;
    TraceOperation 088810 (Store (Con 91) (Con 1));
    SetByte 008058 0;
    SetByte 008059 1;
    TraceOperation 088813 (Call (Floc 043644) [Con 31,Con 97] Sp);
    PushFrame 088813;
    SetLocal 1 31;
    SetLocal 2 97;
    JumpCall: 043644, #actuals: 2
  } else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b3),194)) {
      Let b4 = M[002502];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b4));
      SetByte 002501 169;
      Let b5 = M[002278];
      SetByte 002502 LoByte(Widen(b5));
      SetByte 002278 194;
      TraceOperation 088810 (Store (Con 91) (Con 1));
      SetByte 008058 0;
      SetByte 008059 1;
      TraceOperation 088813 (Call (Floc 043644) [Con 31,Con 97] Sp);
      PushFrame 088813;
      SetLocal 1 31;
      SetLocal 2 97;
      JumpCall: 043644, #actuals: 2
    } else {
      Error: unlink/loop
    }
  }
LocReturn 088813:
  PushStack call_result;
  TraceOperation 088820 (Call (Floc 043644) [Con 193,Con 174] Sp);
  PushFrame 088820;
  SetLocal 1 193;
  SetLocal 2 174;
  JumpCall: 043644, #actuals: 2
LocReturn 088820:
  PushStack call_result;
  TraceOperation 088827 (Clear_attr (Con 193) (Con 23));
  Let b1 = M[002490];
  SetByte 002490 ClearBit(b1,0);
  TraceOperation 088830 (Insert_obj (Con 193) (Con 31));
  Let b2 = M[002492];
  if (IsZero(Widen(b2))) {
    SetByte 002492 31;
    Let b3 = M[001036];
    SetByte 002493 LoByte(Widen(b3));
    SetByte 001036 193;
    TraceOperation 088833 (Insert_obj (Con 13) (Con 193));
    Let b4 = M[000872];
    if (IsZero(Widen(b4))) {
      SetByte 000872 193;
      Let b5 = M[002494];
      SetByte 000873 LoByte(Widen(b5));
      SetByte 002494 13;
      TraceOperation 088836 (Insert_obj (Con 72) (Con 31));
      Let b6 = M[001403];
      if (IsZero(Widen(b6))) {
        SetByte 001403 31;
        Let b7 = M[001036];
        SetByte 001404 LoByte(Widen(b7));
        SetByte 001036 72;
        TraceOperation 088839 (Insert_obj (Con 71) (Con 31));
        Let b8 = M[001394];
        if (IsZero(Widen(b8))) {
          SetByte 001394 31;
          Let b9 = M[001036];
          SetByte 001395 LoByte(Widen(b9));
          SetByte 001036 71;
          TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
          Let b10 = M[007908];
          Let b11 = M[007909];
          Let b12 = M[001862];
          if (IsZero(Widen(b12))) {
            SetByte 001862 b11;
            Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),6)];
            SetByte 001863 LoByte(Widen(b13));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),6) 123;
            TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
            Let b14 = M[007908];
            Let b15 = M[007909];
            Let b16 = M[002519];
            if (IsZero(Widen(b16))) {
              SetByte 002519 b15;
              Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),6)];
              SetByte 002520 LoByte(Widen(b17));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),6) 196;
              TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
              Let b18 = M[007908];
              Let b19 = M[007909];
              Let b20 = M[001367];
              if (IsZero(Widen(b20))) {
                SetByte 001367 b19;
                Let b21 = M[Offset(Offset(000751,Mul(MakeHiLo(b18,b19),9)),6)];
                SetByte 001368 LoByte(Widen(b21));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b18,b19),9)),6) 68;
                TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                TraceOperation 089026 New_line;
                GamePrint "\n";
                TraceOperation 089027 New_line;
                GamePrint "\n";
                TraceOperation 089028 Rtrue;
                PopFrame return_address_22;
                JumpReturn: return_address_22, result: 1
              } else {
                Let b23 = M[Offset(Offset(000751,Mul(Widen(b20),9)),6)];
                if (Equal(Widen(b23),68)) {
                  Let b24 = M[001368];
                  SetByte Offset(Offset(000751,Mul(Widen(b20),9)),6) LoByte(Widen(b24));
                  SetByte 001367 b19;
                  Let b25 = M[Offset(Offset(000751,Mul(MakeHiLo(b18,b19),9)),6)];
                  SetByte 001368 LoByte(Widen(b25));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b18,b19),9)),6) 68;
                  TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                  GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                  TraceOperation 089026 New_line;
                  GamePrint "\n";
                  TraceOperation 089027 New_line;
                  GamePrint "\n";
                  TraceOperation 089028 Rtrue;
                  PopFrame return_address_26;
                  JumpReturn: return_address_26, result: 1
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b27 = M[Offset(Offset(000751,Mul(Widen(b16),9)),6)];
              if (Equal(Widen(b27),196)) {
                Let b28 = M[002520];
                SetByte Offset(Offset(000751,Mul(Widen(b16),9)),6) LoByte(Widen(b28));
                SetByte 002519 b15;
                Let b29 = M[Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),6)];
                SetByte 002520 LoByte(Widen(b29));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),6) 196;
                TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                Let b30 = M[007908];
                Let b31 = M[007909];
                Let b32 = M[001367];
                if (IsZero(Widen(b32))) {
                  SetByte 001367 b31;
                  Let b33 = M[Offset(Offset(000751,Mul(MakeHiLo(b30,b31),9)),6)];
                  SetByte 001368 LoByte(Widen(b33));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b30,b31),9)),6) 68;
                  TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                  GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                  TraceOperation 089026 New_line;
                  GamePrint "\n";
                  TraceOperation 089027 New_line;
                  GamePrint "\n";
                  TraceOperation 089028 Rtrue;
                  PopFrame return_address_34;
                  JumpReturn: return_address_34, result: 1
                } else {
                  Let b35 = M[Offset(Offset(000751,Mul(Widen(b32),9)),6)];
                  if (Equal(Widen(b35),68)) {
                    Let b36 = M[001368];
                    SetByte Offset(Offset(000751,Mul(Widen(b32),9)),6) LoByte(Widen(b36));
                    SetByte 001367 b31;
                    Let b37 = M[Offset(Offset(000751,Mul(MakeHiLo(b30,b31),9)),6)];
                    SetByte 001368 LoByte(Widen(b37));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b30,b31),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_38;
                    JumpReturn: return_address_38, result: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b39 = M[Offset(Offset(000751,Mul(Widen(b12),9)),6)];
            if (Equal(Widen(b39),123)) {
              Let b40 = M[001863];
              SetByte Offset(Offset(000751,Mul(Widen(b12),9)),6) LoByte(Widen(b40));
              SetByte 001862 b11;
              Let b41 = M[Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),6)];
              SetByte 001863 LoByte(Widen(b41));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),6) 123;
              TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
              Let b42 = M[007908];
              Let b43 = M[007909];
              Let b44 = M[002519];
              if (IsZero(Widen(b44))) {
                SetByte 002519 b43;
                Let b45 = M[Offset(Offset(000751,Mul(MakeHiLo(b42,b43),9)),6)];
                SetByte 002520 LoByte(Widen(b45));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b42,b43),9)),6) 196;
                TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                Let b46 = M[007908];
                Let b47 = M[007909];
                Let b48 = M[001367];
                if (IsZero(Widen(b48))) {
                  SetByte 001367 b47;
                  Let b49 = M[Offset(Offset(000751,Mul(MakeHiLo(b46,b47),9)),6)];
                  SetByte 001368 LoByte(Widen(b49));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b46,b47),9)),6) 68;
                  TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                  GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                  TraceOperation 089026 New_line;
                  GamePrint "\n";
                  TraceOperation 089027 New_line;
                  GamePrint "\n";
                  TraceOperation 089028 Rtrue;
                  PopFrame return_address_50;
                  JumpReturn: return_address_50, result: 1
                } else {
                  Let b51 = M[Offset(Offset(000751,Mul(Widen(b48),9)),6)];
                  if (Equal(Widen(b51),68)) {
                    Let b52 = M[001368];
                    SetByte Offset(Offset(000751,Mul(Widen(b48),9)),6) LoByte(Widen(b52));
                    SetByte 001367 b47;
                    Let b53 = M[Offset(Offset(000751,Mul(MakeHiLo(b46,b47),9)),6)];
                    SetByte 001368 LoByte(Widen(b53));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b46,b47),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_54;
                    JumpReturn: return_address_54, result: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b55 = M[Offset(Offset(000751,Mul(Widen(b44),9)),6)];
                if (Equal(Widen(b55),196)) {
                  Let b56 = M[002520];
                  SetByte Offset(Offset(000751,Mul(Widen(b44),9)),6) LoByte(Widen(b56));
                  SetByte 002519 b43;
                  Let b57 = M[Offset(Offset(000751,Mul(MakeHiLo(b42,b43),9)),6)];
                  SetByte 002520 LoByte(Widen(b57));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b42,b43),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b58 = M[007908];
                  Let b59 = M[007909];
                  Let b60 = M[001367];
                  if (IsZero(Widen(b60))) {
                    SetByte 001367 b59;
                    Let b61 = M[Offset(Offset(000751,Mul(MakeHiLo(b58,b59),9)),6)];
                    SetByte 001368 LoByte(Widen(b61));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b58,b59),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_62;
                    JumpReturn: return_address_62, result: 1
                  } else {
                    Let b63 = M[Offset(Offset(000751,Mul(Widen(b60),9)),6)];
                    if (Equal(Widen(b63),68)) {
                      Let b64 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b60),9)),6) LoByte(Widen(b64));
                      SetByte 001367 b59;
                      Let b65 = M[Offset(Offset(000751,Mul(MakeHiLo(b58,b59),9)),6)];
                      SetByte 001368 LoByte(Widen(b65));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b58,b59),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_66;
                      JumpReturn: return_address_66, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b67 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
          if (Equal(Widen(b67),71)) {
            Let b68 = M[001395];
            SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b68));
            SetByte 001394 31;
            Let b69 = M[001036];
            SetByte 001395 LoByte(Widen(b69));
            SetByte 001036 71;
            TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
            Let b70 = M[007908];
            Let b71 = M[007909];
            Let b72 = M[001862];
            if (IsZero(Widen(b72))) {
              SetByte 001862 b71;
              Let b73 = M[Offset(Offset(000751,Mul(MakeHiLo(b70,b71),9)),6)];
              SetByte 001863 LoByte(Widen(b73));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b70,b71),9)),6) 123;
              TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
              Let b74 = M[007908];
              Let b75 = M[007909];
              Let b76 = M[002519];
              if (IsZero(Widen(b76))) {
                SetByte 002519 b75;
                Let b77 = M[Offset(Offset(000751,Mul(MakeHiLo(b74,b75),9)),6)];
                SetByte 002520 LoByte(Widen(b77));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b74,b75),9)),6) 196;
                TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                Let b78 = M[007908];
                Let b79 = M[007909];
                Let b80 = M[001367];
                if (IsZero(Widen(b80))) {
                  SetByte 001367 b79;
                  Let b81 = M[Offset(Offset(000751,Mul(MakeHiLo(b78,b79),9)),6)];
                  SetByte 001368 LoByte(Widen(b81));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b78,b79),9)),6) 68;
                  TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                  GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                  TraceOperation 089026 New_line;
                  GamePrint "\n";
                  TraceOperation 089027 New_line;
                  GamePrint "\n";
                  TraceOperation 089028 Rtrue;
                  PopFrame return_address_82;
                  JumpReturn: return_address_82, result: 1
                } else {
                  Let b83 = M[Offset(Offset(000751,Mul(Widen(b80),9)),6)];
                  if (Equal(Widen(b83),68)) {
                    Let b84 = M[001368];
                    SetByte Offset(Offset(000751,Mul(Widen(b80),9)),6) LoByte(Widen(b84));
                    SetByte 001367 b79;
                    Let b85 = M[Offset(Offset(000751,Mul(MakeHiLo(b78,b79),9)),6)];
                    SetByte 001368 LoByte(Widen(b85));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b78,b79),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_86;
                    JumpReturn: return_address_86, result: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b87 = M[Offset(Offset(000751,Mul(Widen(b76),9)),6)];
                if (Equal(Widen(b87),196)) {
                  Let b88 = M[002520];
                  SetByte Offset(Offset(000751,Mul(Widen(b76),9)),6) LoByte(Widen(b88));
                  SetByte 002519 b75;
                  Let b89 = M[Offset(Offset(000751,Mul(MakeHiLo(b74,b75),9)),6)];
                  SetByte 002520 LoByte(Widen(b89));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b74,b75),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b90 = M[007908];
                  Let b91 = M[007909];
                  Let b92 = M[001367];
                  if (IsZero(Widen(b92))) {
                    SetByte 001367 b91;
                    Let b93 = M[Offset(Offset(000751,Mul(MakeHiLo(b90,b91),9)),6)];
                    SetByte 001368 LoByte(Widen(b93));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b90,b91),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_94;
                    JumpReturn: return_address_94, result: 1
                  } else {
                    Let b95 = M[Offset(Offset(000751,Mul(Widen(b92),9)),6)];
                    if (Equal(Widen(b95),68)) {
                      Let b96 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b92),9)),6) LoByte(Widen(b96));
                      SetByte 001367 b91;
                      Let b97 = M[Offset(Offset(000751,Mul(MakeHiLo(b90,b91),9)),6)];
                      SetByte 001368 LoByte(Widen(b97));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b90,b91),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_98;
                      JumpReturn: return_address_98, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b99 = M[Offset(Offset(000751,Mul(Widen(b72),9)),6)];
              if (Equal(Widen(b99),123)) {
                Let b100 = M[001863];
                SetByte Offset(Offset(000751,Mul(Widen(b72),9)),6) LoByte(Widen(b100));
                SetByte 001862 b71;
                Let b101 = M[Offset(Offset(000751,Mul(MakeHiLo(b70,b71),9)),6)];
                SetByte 001863 LoByte(Widen(b101));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b70,b71),9)),6) 123;
                TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                Let b102 = M[007908];
                Let b103 = M[007909];
                Let b104 = M[002519];
                if (IsZero(Widen(b104))) {
                  SetByte 002519 b103;
                  Let b105 = M[Offset(Offset(000751,Mul(MakeHiLo(b102,b103),9)),6)];
                  SetByte 002520 LoByte(Widen(b105));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b102,b103),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b106 = M[007908];
                  Let b107 = M[007909];
                  Let b108 = M[001367];
                  if (IsZero(Widen(b108))) {
                    SetByte 001367 b107;
                    Let b109 = M[Offset(Offset(000751,Mul(MakeHiLo(b106,b107),9)),6)];
                    SetByte 001368 LoByte(Widen(b109));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b106,b107),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_110;
                    JumpReturn: return_address_110, result: 1
                  } else {
                    Let b111 = M[Offset(Offset(000751,Mul(Widen(b108),9)),6)];
                    if (Equal(Widen(b111),68)) {
                      Let b112 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b108),9)),6) LoByte(Widen(b112));
                      SetByte 001367 b107;
                      Let b113 = M[Offset(Offset(000751,Mul(MakeHiLo(b106,b107),9)),6)];
                      SetByte 001368 LoByte(Widen(b113));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b106,b107),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_114;
                      JumpReturn: return_address_114, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b115 = M[Offset(Offset(000751,Mul(Widen(b104),9)),6)];
                  if (Equal(Widen(b115),196)) {
                    Let b116 = M[002520];
                    SetByte Offset(Offset(000751,Mul(Widen(b104),9)),6) LoByte(Widen(b116));
                    SetByte 002519 b103;
                    Let b117 = M[Offset(Offset(000751,Mul(MakeHiLo(b102,b103),9)),6)];
                    SetByte 002520 LoByte(Widen(b117));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b102,b103),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b118 = M[007908];
                    Let b119 = M[007909];
                    Let b120 = M[001367];
                    if (IsZero(Widen(b120))) {
                      SetByte 001367 b119;
                      Let b121 = M[Offset(Offset(000751,Mul(MakeHiLo(b118,b119),9)),6)];
                      SetByte 001368 LoByte(Widen(b121));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b118,b119),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_122;
                      JumpReturn: return_address_122, result: 1
                    } else {
                      Let b123 = M[Offset(Offset(000751,Mul(Widen(b120),9)),6)];
                      if (Equal(Widen(b123),68)) {
                        Let b124 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b120),9)),6) LoByte(Widen(b124));
                        SetByte 001367 b119;
                        Let b125 = M[Offset(Offset(000751,Mul(MakeHiLo(b118,b119),9)),6)];
                        SetByte 001368 LoByte(Widen(b125));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b118,b119),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_126;
                        JumpReturn: return_address_126, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b127 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
        if (Equal(Widen(b127),72)) {
          Let b128 = M[001404];
          SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b128));
          SetByte 001403 31;
          Let b129 = M[001036];
          SetByte 001404 LoByte(Widen(b129));
          SetByte 001036 72;
          TraceOperation 088839 (Insert_obj (Con 71) (Con 31));
          Let b130 = M[001394];
          if (IsZero(Widen(b130))) {
            SetByte 001394 31;
            Let b131 = M[001036];
            SetByte 001395 LoByte(Widen(b131));
            SetByte 001036 71;
            TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
            Let b132 = M[007908];
            Let b133 = M[007909];
            Let b134 = M[001862];
            if (IsZero(Widen(b134))) {
              SetByte 001862 b133;
              Let b135 = M[Offset(Offset(000751,Mul(MakeHiLo(b132,b133),9)),6)];
              SetByte 001863 LoByte(Widen(b135));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b132,b133),9)),6) 123;
              TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
              Let b136 = M[007908];
              Let b137 = M[007909];
              Let b138 = M[002519];
              if (IsZero(Widen(b138))) {
                SetByte 002519 b137;
                Let b139 = M[Offset(Offset(000751,Mul(MakeHiLo(b136,b137),9)),6)];
                SetByte 002520 LoByte(Widen(b139));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b136,b137),9)),6) 196;
                TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                Let b140 = M[007908];
                Let b141 = M[007909];
                Let b142 = M[001367];
                if (IsZero(Widen(b142))) {
                  SetByte 001367 b141;
                  Let b143 = M[Offset(Offset(000751,Mul(MakeHiLo(b140,b141),9)),6)];
                  SetByte 001368 LoByte(Widen(b143));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b140,b141),9)),6) 68;
                  TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                  GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                  TraceOperation 089026 New_line;
                  GamePrint "\n";
                  TraceOperation 089027 New_line;
                  GamePrint "\n";
                  TraceOperation 089028 Rtrue;
                  PopFrame return_address_144;
                  JumpReturn: return_address_144, result: 1
                } else {
                  Let b145 = M[Offset(Offset(000751,Mul(Widen(b142),9)),6)];
                  if (Equal(Widen(b145),68)) {
                    Let b146 = M[001368];
                    SetByte Offset(Offset(000751,Mul(Widen(b142),9)),6) LoByte(Widen(b146));
                    SetByte 001367 b141;
                    Let b147 = M[Offset(Offset(000751,Mul(MakeHiLo(b140,b141),9)),6)];
                    SetByte 001368 LoByte(Widen(b147));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b140,b141),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_148;
                    JumpReturn: return_address_148, result: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b149 = M[Offset(Offset(000751,Mul(Widen(b138),9)),6)];
                if (Equal(Widen(b149),196)) {
                  Let b150 = M[002520];
                  SetByte Offset(Offset(000751,Mul(Widen(b138),9)),6) LoByte(Widen(b150));
                  SetByte 002519 b137;
                  Let b151 = M[Offset(Offset(000751,Mul(MakeHiLo(b136,b137),9)),6)];
                  SetByte 002520 LoByte(Widen(b151));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b136,b137),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b152 = M[007908];
                  Let b153 = M[007909];
                  Let b154 = M[001367];
                  if (IsZero(Widen(b154))) {
                    SetByte 001367 b153;
                    Let b155 = M[Offset(Offset(000751,Mul(MakeHiLo(b152,b153),9)),6)];
                    SetByte 001368 LoByte(Widen(b155));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b152,b153),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_156;
                    JumpReturn: return_address_156, result: 1
                  } else {
                    Let b157 = M[Offset(Offset(000751,Mul(Widen(b154),9)),6)];
                    if (Equal(Widen(b157),68)) {
                      Let b158 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b154),9)),6) LoByte(Widen(b158));
                      SetByte 001367 b153;
                      Let b159 = M[Offset(Offset(000751,Mul(MakeHiLo(b152,b153),9)),6)];
                      SetByte 001368 LoByte(Widen(b159));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b152,b153),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_160;
                      JumpReturn: return_address_160, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b161 = M[Offset(Offset(000751,Mul(Widen(b134),9)),6)];
              if (Equal(Widen(b161),123)) {
                Let b162 = M[001863];
                SetByte Offset(Offset(000751,Mul(Widen(b134),9)),6) LoByte(Widen(b162));
                SetByte 001862 b133;
                Let b163 = M[Offset(Offset(000751,Mul(MakeHiLo(b132,b133),9)),6)];
                SetByte 001863 LoByte(Widen(b163));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b132,b133),9)),6) 123;
                TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                Let b164 = M[007908];
                Let b165 = M[007909];
                Let b166 = M[002519];
                if (IsZero(Widen(b166))) {
                  SetByte 002519 b165;
                  Let b167 = M[Offset(Offset(000751,Mul(MakeHiLo(b164,b165),9)),6)];
                  SetByte 002520 LoByte(Widen(b167));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b164,b165),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b168 = M[007908];
                  Let b169 = M[007909];
                  Let b170 = M[001367];
                  if (IsZero(Widen(b170))) {
                    SetByte 001367 b169;
                    Let b171 = M[Offset(Offset(000751,Mul(MakeHiLo(b168,b169),9)),6)];
                    SetByte 001368 LoByte(Widen(b171));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b168,b169),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_172;
                    JumpReturn: return_address_172, result: 1
                  } else {
                    Let b173 = M[Offset(Offset(000751,Mul(Widen(b170),9)),6)];
                    if (Equal(Widen(b173),68)) {
                      Let b174 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b170),9)),6) LoByte(Widen(b174));
                      SetByte 001367 b169;
                      Let b175 = M[Offset(Offset(000751,Mul(MakeHiLo(b168,b169),9)),6)];
                      SetByte 001368 LoByte(Widen(b175));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b168,b169),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_176;
                      JumpReturn: return_address_176, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b177 = M[Offset(Offset(000751,Mul(Widen(b166),9)),6)];
                  if (Equal(Widen(b177),196)) {
                    Let b178 = M[002520];
                    SetByte Offset(Offset(000751,Mul(Widen(b166),9)),6) LoByte(Widen(b178));
                    SetByte 002519 b165;
                    Let b179 = M[Offset(Offset(000751,Mul(MakeHiLo(b164,b165),9)),6)];
                    SetByte 002520 LoByte(Widen(b179));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b164,b165),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b180 = M[007908];
                    Let b181 = M[007909];
                    Let b182 = M[001367];
                    if (IsZero(Widen(b182))) {
                      SetByte 001367 b181;
                      Let b183 = M[Offset(Offset(000751,Mul(MakeHiLo(b180,b181),9)),6)];
                      SetByte 001368 LoByte(Widen(b183));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b180,b181),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_184;
                      JumpReturn: return_address_184, result: 1
                    } else {
                      Let b185 = M[Offset(Offset(000751,Mul(Widen(b182),9)),6)];
                      if (Equal(Widen(b185),68)) {
                        Let b186 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b182),9)),6) LoByte(Widen(b186));
                        SetByte 001367 b181;
                        Let b187 = M[Offset(Offset(000751,Mul(MakeHiLo(b180,b181),9)),6)];
                        SetByte 001368 LoByte(Widen(b187));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b180,b181),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_188;
                        JumpReturn: return_address_188, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b189 = M[Offset(Offset(000751,Mul(Widen(b130),9)),6)];
            if (Equal(Widen(b189),71)) {
              Let b190 = M[001395];
              SetByte Offset(Offset(000751,Mul(Widen(b130),9)),6) LoByte(Widen(b190));
              SetByte 001394 31;
              Let b191 = M[001036];
              SetByte 001395 LoByte(Widen(b191));
              SetByte 001036 71;
              TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
              Let b192 = M[007908];
              Let b193 = M[007909];
              Let b194 = M[001862];
              if (IsZero(Widen(b194))) {
                SetByte 001862 b193;
                Let b195 = M[Offset(Offset(000751,Mul(MakeHiLo(b192,b193),9)),6)];
                SetByte 001863 LoByte(Widen(b195));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b192,b193),9)),6) 123;
                TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                Let b196 = M[007908];
                Let b197 = M[007909];
                Let b198 = M[002519];
                if (IsZero(Widen(b198))) {
                  SetByte 002519 b197;
                  Let b199 = M[Offset(Offset(000751,Mul(MakeHiLo(b196,b197),9)),6)];
                  SetByte 002520 LoByte(Widen(b199));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b196,b197),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b200 = M[007908];
                  Let b201 = M[007909];
                  Let b202 = M[001367];
                  if (IsZero(Widen(b202))) {
                    SetByte 001367 b201;
                    Let b203 = M[Offset(Offset(000751,Mul(MakeHiLo(b200,b201),9)),6)];
                    SetByte 001368 LoByte(Widen(b203));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b200,b201),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_204;
                    JumpReturn: return_address_204, result: 1
                  } else {
                    Let b205 = M[Offset(Offset(000751,Mul(Widen(b202),9)),6)];
                    if (Equal(Widen(b205),68)) {
                      Let b206 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b202),9)),6) LoByte(Widen(b206));
                      SetByte 001367 b201;
                      Let b207 = M[Offset(Offset(000751,Mul(MakeHiLo(b200,b201),9)),6)];
                      SetByte 001368 LoByte(Widen(b207));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b200,b201),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_208;
                      JumpReturn: return_address_208, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b209 = M[Offset(Offset(000751,Mul(Widen(b198),9)),6)];
                  if (Equal(Widen(b209),196)) {
                    Let b210 = M[002520];
                    SetByte Offset(Offset(000751,Mul(Widen(b198),9)),6) LoByte(Widen(b210));
                    SetByte 002519 b197;
                    Let b211 = M[Offset(Offset(000751,Mul(MakeHiLo(b196,b197),9)),6)];
                    SetByte 002520 LoByte(Widen(b211));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b196,b197),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b212 = M[007908];
                    Let b213 = M[007909];
                    Let b214 = M[001367];
                    if (IsZero(Widen(b214))) {
                      SetByte 001367 b213;
                      Let b215 = M[Offset(Offset(000751,Mul(MakeHiLo(b212,b213),9)),6)];
                      SetByte 001368 LoByte(Widen(b215));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b212,b213),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_216;
                      JumpReturn: return_address_216, result: 1
                    } else {
                      Let b217 = M[Offset(Offset(000751,Mul(Widen(b214),9)),6)];
                      if (Equal(Widen(b217),68)) {
                        Let b218 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b214),9)),6) LoByte(Widen(b218));
                        SetByte 001367 b213;
                        Let b219 = M[Offset(Offset(000751,Mul(MakeHiLo(b212,b213),9)),6)];
                        SetByte 001368 LoByte(Widen(b219));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b212,b213),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_220;
                        JumpReturn: return_address_220, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b221 = M[Offset(Offset(000751,Mul(Widen(b194),9)),6)];
                if (Equal(Widen(b221),123)) {
                  Let b222 = M[001863];
                  SetByte Offset(Offset(000751,Mul(Widen(b194),9)),6) LoByte(Widen(b222));
                  SetByte 001862 b193;
                  Let b223 = M[Offset(Offset(000751,Mul(MakeHiLo(b192,b193),9)),6)];
                  SetByte 001863 LoByte(Widen(b223));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b192,b193),9)),6) 123;
                  TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                  Let b224 = M[007908];
                  Let b225 = M[007909];
                  Let b226 = M[002519];
                  if (IsZero(Widen(b226))) {
                    SetByte 002519 b225;
                    Let b227 = M[Offset(Offset(000751,Mul(MakeHiLo(b224,b225),9)),6)];
                    SetByte 002520 LoByte(Widen(b227));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b224,b225),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b228 = M[007908];
                    Let b229 = M[007909];
                    Let b230 = M[001367];
                    if (IsZero(Widen(b230))) {
                      SetByte 001367 b229;
                      Let b231 = M[Offset(Offset(000751,Mul(MakeHiLo(b228,b229),9)),6)];
                      SetByte 001368 LoByte(Widen(b231));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b228,b229),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_232;
                      JumpReturn: return_address_232, result: 1
                    } else {
                      Let b233 = M[Offset(Offset(000751,Mul(Widen(b230),9)),6)];
                      if (Equal(Widen(b233),68)) {
                        Let b234 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b230),9)),6) LoByte(Widen(b234));
                        SetByte 001367 b229;
                        Let b235 = M[Offset(Offset(000751,Mul(MakeHiLo(b228,b229),9)),6)];
                        SetByte 001368 LoByte(Widen(b235));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b228,b229),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_236;
                        JumpReturn: return_address_236, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b237 = M[Offset(Offset(000751,Mul(Widen(b226),9)),6)];
                    if (Equal(Widen(b237),196)) {
                      Let b238 = M[002520];
                      SetByte Offset(Offset(000751,Mul(Widen(b226),9)),6) LoByte(Widen(b238));
                      SetByte 002519 b225;
                      Let b239 = M[Offset(Offset(000751,Mul(MakeHiLo(b224,b225),9)),6)];
                      SetByte 002520 LoByte(Widen(b239));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b224,b225),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b240 = M[007908];
                      Let b241 = M[007909];
                      Let b242 = M[001367];
                      if (IsZero(Widen(b242))) {
                        SetByte 001367 b241;
                        Let b243 = M[Offset(Offset(000751,Mul(MakeHiLo(b240,b241),9)),6)];
                        SetByte 001368 LoByte(Widen(b243));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b240,b241),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_244;
                        JumpReturn: return_address_244, result: 1
                      } else {
                        Let b245 = M[Offset(Offset(000751,Mul(Widen(b242),9)),6)];
                        if (Equal(Widen(b245),68)) {
                          Let b246 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b242),9)),6) LoByte(Widen(b246));
                          SetByte 001367 b241;
                          Let b247 = M[Offset(Offset(000751,Mul(MakeHiLo(b240,b241),9)),6)];
                          SetByte 001368 LoByte(Widen(b247));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b240,b241),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_248;
                          JumpReturn: return_address_248, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b249 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b249),13)) {
        Let b250 = M[000873];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b250));
        SetByte 000872 193;
        Let b251 = M[002494];
        SetByte 000873 LoByte(Widen(b251));
        SetByte 002494 13;
        TraceOperation 088836 (Insert_obj (Con 72) (Con 31));
        Let b252 = M[001403];
        if (IsZero(Widen(b252))) {
          SetByte 001403 31;
          Let b253 = M[001036];
          SetByte 001404 LoByte(Widen(b253));
          SetByte 001036 72;
          TraceOperation 088839 (Insert_obj (Con 71) (Con 31));
          Let b254 = M[001394];
          if (IsZero(Widen(b254))) {
            SetByte 001394 31;
            Let b255 = M[001036];
            SetByte 001395 LoByte(Widen(b255));
            SetByte 001036 71;
            TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
            Let b256 = M[007908];
            Let b257 = M[007909];
            Let b258 = M[001862];
            if (IsZero(Widen(b258))) {
              SetByte 001862 b257;
              Let b259 = M[Offset(Offset(000751,Mul(MakeHiLo(b256,b257),9)),6)];
              SetByte 001863 LoByte(Widen(b259));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b256,b257),9)),6) 123;
              TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
              Let b260 = M[007908];
              Let b261 = M[007909];
              Let b262 = M[002519];
              if (IsZero(Widen(b262))) {
                SetByte 002519 b261;
                Let b263 = M[Offset(Offset(000751,Mul(MakeHiLo(b260,b261),9)),6)];
                SetByte 002520 LoByte(Widen(b263));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b260,b261),9)),6) 196;
                TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                Let b264 = M[007908];
                Let b265 = M[007909];
                Let b266 = M[001367];
                if (IsZero(Widen(b266))) {
                  SetByte 001367 b265;
                  Let b267 = M[Offset(Offset(000751,Mul(MakeHiLo(b264,b265),9)),6)];
                  SetByte 001368 LoByte(Widen(b267));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b264,b265),9)),6) 68;
                  TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                  GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                  TraceOperation 089026 New_line;
                  GamePrint "\n";
                  TraceOperation 089027 New_line;
                  GamePrint "\n";
                  TraceOperation 089028 Rtrue;
                  PopFrame return_address_268;
                  JumpReturn: return_address_268, result: 1
                } else {
                  Let b269 = M[Offset(Offset(000751,Mul(Widen(b266),9)),6)];
                  if (Equal(Widen(b269),68)) {
                    Let b270 = M[001368];
                    SetByte Offset(Offset(000751,Mul(Widen(b266),9)),6) LoByte(Widen(b270));
                    SetByte 001367 b265;
                    Let b271 = M[Offset(Offset(000751,Mul(MakeHiLo(b264,b265),9)),6)];
                    SetByte 001368 LoByte(Widen(b271));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b264,b265),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_272;
                    JumpReturn: return_address_272, result: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b273 = M[Offset(Offset(000751,Mul(Widen(b262),9)),6)];
                if (Equal(Widen(b273),196)) {
                  Let b274 = M[002520];
                  SetByte Offset(Offset(000751,Mul(Widen(b262),9)),6) LoByte(Widen(b274));
                  SetByte 002519 b261;
                  Let b275 = M[Offset(Offset(000751,Mul(MakeHiLo(b260,b261),9)),6)];
                  SetByte 002520 LoByte(Widen(b275));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b260,b261),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b276 = M[007908];
                  Let b277 = M[007909];
                  Let b278 = M[001367];
                  if (IsZero(Widen(b278))) {
                    SetByte 001367 b277;
                    Let b279 = M[Offset(Offset(000751,Mul(MakeHiLo(b276,b277),9)),6)];
                    SetByte 001368 LoByte(Widen(b279));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b276,b277),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_280;
                    JumpReturn: return_address_280, result: 1
                  } else {
                    Let b281 = M[Offset(Offset(000751,Mul(Widen(b278),9)),6)];
                    if (Equal(Widen(b281),68)) {
                      Let b282 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b278),9)),6) LoByte(Widen(b282));
                      SetByte 001367 b277;
                      Let b283 = M[Offset(Offset(000751,Mul(MakeHiLo(b276,b277),9)),6)];
                      SetByte 001368 LoByte(Widen(b283));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b276,b277),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_284;
                      JumpReturn: return_address_284, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b285 = M[Offset(Offset(000751,Mul(Widen(b258),9)),6)];
              if (Equal(Widen(b285),123)) {
                Let b286 = M[001863];
                SetByte Offset(Offset(000751,Mul(Widen(b258),9)),6) LoByte(Widen(b286));
                SetByte 001862 b257;
                Let b287 = M[Offset(Offset(000751,Mul(MakeHiLo(b256,b257),9)),6)];
                SetByte 001863 LoByte(Widen(b287));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b256,b257),9)),6) 123;
                TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                Let b288 = M[007908];
                Let b289 = M[007909];
                Let b290 = M[002519];
                if (IsZero(Widen(b290))) {
                  SetByte 002519 b289;
                  Let b291 = M[Offset(Offset(000751,Mul(MakeHiLo(b288,b289),9)),6)];
                  SetByte 002520 LoByte(Widen(b291));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b288,b289),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b292 = M[007908];
                  Let b293 = M[007909];
                  Let b294 = M[001367];
                  if (IsZero(Widen(b294))) {
                    SetByte 001367 b293;
                    Let b295 = M[Offset(Offset(000751,Mul(MakeHiLo(b292,b293),9)),6)];
                    SetByte 001368 LoByte(Widen(b295));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b292,b293),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_296;
                    JumpReturn: return_address_296, result: 1
                  } else {
                    Let b297 = M[Offset(Offset(000751,Mul(Widen(b294),9)),6)];
                    if (Equal(Widen(b297),68)) {
                      Let b298 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b294),9)),6) LoByte(Widen(b298));
                      SetByte 001367 b293;
                      Let b299 = M[Offset(Offset(000751,Mul(MakeHiLo(b292,b293),9)),6)];
                      SetByte 001368 LoByte(Widen(b299));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b292,b293),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_300;
                      JumpReturn: return_address_300, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b301 = M[Offset(Offset(000751,Mul(Widen(b290),9)),6)];
                  if (Equal(Widen(b301),196)) {
                    Let b302 = M[002520];
                    SetByte Offset(Offset(000751,Mul(Widen(b290),9)),6) LoByte(Widen(b302));
                    SetByte 002519 b289;
                    Let b303 = M[Offset(Offset(000751,Mul(MakeHiLo(b288,b289),9)),6)];
                    SetByte 002520 LoByte(Widen(b303));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b288,b289),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b304 = M[007908];
                    Let b305 = M[007909];
                    Let b306 = M[001367];
                    if (IsZero(Widen(b306))) {
                      SetByte 001367 b305;
                      Let b307 = M[Offset(Offset(000751,Mul(MakeHiLo(b304,b305),9)),6)];
                      SetByte 001368 LoByte(Widen(b307));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b304,b305),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_308;
                      JumpReturn: return_address_308, result: 1
                    } else {
                      Let b309 = M[Offset(Offset(000751,Mul(Widen(b306),9)),6)];
                      if (Equal(Widen(b309),68)) {
                        Let b310 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b306),9)),6) LoByte(Widen(b310));
                        SetByte 001367 b305;
                        Let b311 = M[Offset(Offset(000751,Mul(MakeHiLo(b304,b305),9)),6)];
                        SetByte 001368 LoByte(Widen(b311));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b304,b305),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_312;
                        JumpReturn: return_address_312, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b313 = M[Offset(Offset(000751,Mul(Widen(b254),9)),6)];
            if (Equal(Widen(b313),71)) {
              Let b314 = M[001395];
              SetByte Offset(Offset(000751,Mul(Widen(b254),9)),6) LoByte(Widen(b314));
              SetByte 001394 31;
              Let b315 = M[001036];
              SetByte 001395 LoByte(Widen(b315));
              SetByte 001036 71;
              TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
              Let b316 = M[007908];
              Let b317 = M[007909];
              Let b318 = M[001862];
              if (IsZero(Widen(b318))) {
                SetByte 001862 b317;
                Let b319 = M[Offset(Offset(000751,Mul(MakeHiLo(b316,b317),9)),6)];
                SetByte 001863 LoByte(Widen(b319));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b316,b317),9)),6) 123;
                TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                Let b320 = M[007908];
                Let b321 = M[007909];
                Let b322 = M[002519];
                if (IsZero(Widen(b322))) {
                  SetByte 002519 b321;
                  Let b323 = M[Offset(Offset(000751,Mul(MakeHiLo(b320,b321),9)),6)];
                  SetByte 002520 LoByte(Widen(b323));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b320,b321),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b324 = M[007908];
                  Let b325 = M[007909];
                  Let b326 = M[001367];
                  if (IsZero(Widen(b326))) {
                    SetByte 001367 b325;
                    Let b327 = M[Offset(Offset(000751,Mul(MakeHiLo(b324,b325),9)),6)];
                    SetByte 001368 LoByte(Widen(b327));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b324,b325),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_328;
                    JumpReturn: return_address_328, result: 1
                  } else {
                    Let b329 = M[Offset(Offset(000751,Mul(Widen(b326),9)),6)];
                    if (Equal(Widen(b329),68)) {
                      Let b330 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b326),9)),6) LoByte(Widen(b330));
                      SetByte 001367 b325;
                      Let b331 = M[Offset(Offset(000751,Mul(MakeHiLo(b324,b325),9)),6)];
                      SetByte 001368 LoByte(Widen(b331));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b324,b325),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_332;
                      JumpReturn: return_address_332, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b333 = M[Offset(Offset(000751,Mul(Widen(b322),9)),6)];
                  if (Equal(Widen(b333),196)) {
                    Let b334 = M[002520];
                    SetByte Offset(Offset(000751,Mul(Widen(b322),9)),6) LoByte(Widen(b334));
                    SetByte 002519 b321;
                    Let b335 = M[Offset(Offset(000751,Mul(MakeHiLo(b320,b321),9)),6)];
                    SetByte 002520 LoByte(Widen(b335));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b320,b321),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b336 = M[007908];
                    Let b337 = M[007909];
                    Let b338 = M[001367];
                    if (IsZero(Widen(b338))) {
                      SetByte 001367 b337;
                      Let b339 = M[Offset(Offset(000751,Mul(MakeHiLo(b336,b337),9)),6)];
                      SetByte 001368 LoByte(Widen(b339));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b336,b337),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_340;
                      JumpReturn: return_address_340, result: 1
                    } else {
                      Let b341 = M[Offset(Offset(000751,Mul(Widen(b338),9)),6)];
                      if (Equal(Widen(b341),68)) {
                        Let b342 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b338),9)),6) LoByte(Widen(b342));
                        SetByte 001367 b337;
                        Let b343 = M[Offset(Offset(000751,Mul(MakeHiLo(b336,b337),9)),6)];
                        SetByte 001368 LoByte(Widen(b343));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b336,b337),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_344;
                        JumpReturn: return_address_344, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b345 = M[Offset(Offset(000751,Mul(Widen(b318),9)),6)];
                if (Equal(Widen(b345),123)) {
                  Let b346 = M[001863];
                  SetByte Offset(Offset(000751,Mul(Widen(b318),9)),6) LoByte(Widen(b346));
                  SetByte 001862 b317;
                  Let b347 = M[Offset(Offset(000751,Mul(MakeHiLo(b316,b317),9)),6)];
                  SetByte 001863 LoByte(Widen(b347));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b316,b317),9)),6) 123;
                  TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                  Let b348 = M[007908];
                  Let b349 = M[007909];
                  Let b350 = M[002519];
                  if (IsZero(Widen(b350))) {
                    SetByte 002519 b349;
                    Let b351 = M[Offset(Offset(000751,Mul(MakeHiLo(b348,b349),9)),6)];
                    SetByte 002520 LoByte(Widen(b351));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b348,b349),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b352 = M[007908];
                    Let b353 = M[007909];
                    Let b354 = M[001367];
                    if (IsZero(Widen(b354))) {
                      SetByte 001367 b353;
                      Let b355 = M[Offset(Offset(000751,Mul(MakeHiLo(b352,b353),9)),6)];
                      SetByte 001368 LoByte(Widen(b355));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b352,b353),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_356;
                      JumpReturn: return_address_356, result: 1
                    } else {
                      Let b357 = M[Offset(Offset(000751,Mul(Widen(b354),9)),6)];
                      if (Equal(Widen(b357),68)) {
                        Let b358 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b354),9)),6) LoByte(Widen(b358));
                        SetByte 001367 b353;
                        Let b359 = M[Offset(Offset(000751,Mul(MakeHiLo(b352,b353),9)),6)];
                        SetByte 001368 LoByte(Widen(b359));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b352,b353),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_360;
                        JumpReturn: return_address_360, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b361 = M[Offset(Offset(000751,Mul(Widen(b350),9)),6)];
                    if (Equal(Widen(b361),196)) {
                      Let b362 = M[002520];
                      SetByte Offset(Offset(000751,Mul(Widen(b350),9)),6) LoByte(Widen(b362));
                      SetByte 002519 b349;
                      Let b363 = M[Offset(Offset(000751,Mul(MakeHiLo(b348,b349),9)),6)];
                      SetByte 002520 LoByte(Widen(b363));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b348,b349),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b364 = M[007908];
                      Let b365 = M[007909];
                      Let b366 = M[001367];
                      if (IsZero(Widen(b366))) {
                        SetByte 001367 b365;
                        Let b367 = M[Offset(Offset(000751,Mul(MakeHiLo(b364,b365),9)),6)];
                        SetByte 001368 LoByte(Widen(b367));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b364,b365),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_368;
                        JumpReturn: return_address_368, result: 1
                      } else {
                        Let b369 = M[Offset(Offset(000751,Mul(Widen(b366),9)),6)];
                        if (Equal(Widen(b369),68)) {
                          Let b370 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b366),9)),6) LoByte(Widen(b370));
                          SetByte 001367 b365;
                          Let b371 = M[Offset(Offset(000751,Mul(MakeHiLo(b364,b365),9)),6)];
                          SetByte 001368 LoByte(Widen(b371));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b364,b365),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_372;
                          JumpReturn: return_address_372, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b373 = M[Offset(Offset(000751,Mul(Widen(b252),9)),6)];
          if (Equal(Widen(b373),72)) {
            Let b374 = M[001404];
            SetByte Offset(Offset(000751,Mul(Widen(b252),9)),6) LoByte(Widen(b374));
            SetByte 001403 31;
            Let b375 = M[001036];
            SetByte 001404 LoByte(Widen(b375));
            SetByte 001036 72;
            TraceOperation 088839 (Insert_obj (Con 71) (Con 31));
            Let b376 = M[001394];
            if (IsZero(Widen(b376))) {
              SetByte 001394 31;
              Let b377 = M[001036];
              SetByte 001395 LoByte(Widen(b377));
              SetByte 001036 71;
              TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
              Let b378 = M[007908];
              Let b379 = M[007909];
              Let b380 = M[001862];
              if (IsZero(Widen(b380))) {
                SetByte 001862 b379;
                Let b381 = M[Offset(Offset(000751,Mul(MakeHiLo(b378,b379),9)),6)];
                SetByte 001863 LoByte(Widen(b381));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b378,b379),9)),6) 123;
                TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                Let b382 = M[007908];
                Let b383 = M[007909];
                Let b384 = M[002519];
                if (IsZero(Widen(b384))) {
                  SetByte 002519 b383;
                  Let b385 = M[Offset(Offset(000751,Mul(MakeHiLo(b382,b383),9)),6)];
                  SetByte 002520 LoByte(Widen(b385));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b382,b383),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b386 = M[007908];
                  Let b387 = M[007909];
                  Let b388 = M[001367];
                  if (IsZero(Widen(b388))) {
                    SetByte 001367 b387;
                    Let b389 = M[Offset(Offset(000751,Mul(MakeHiLo(b386,b387),9)),6)];
                    SetByte 001368 LoByte(Widen(b389));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b386,b387),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_390;
                    JumpReturn: return_address_390, result: 1
                  } else {
                    Let b391 = M[Offset(Offset(000751,Mul(Widen(b388),9)),6)];
                    if (Equal(Widen(b391),68)) {
                      Let b392 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b388),9)),6) LoByte(Widen(b392));
                      SetByte 001367 b387;
                      Let b393 = M[Offset(Offset(000751,Mul(MakeHiLo(b386,b387),9)),6)];
                      SetByte 001368 LoByte(Widen(b393));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b386,b387),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_394;
                      JumpReturn: return_address_394, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b395 = M[Offset(Offset(000751,Mul(Widen(b384),9)),6)];
                  if (Equal(Widen(b395),196)) {
                    Let b396 = M[002520];
                    SetByte Offset(Offset(000751,Mul(Widen(b384),9)),6) LoByte(Widen(b396));
                    SetByte 002519 b383;
                    Let b397 = M[Offset(Offset(000751,Mul(MakeHiLo(b382,b383),9)),6)];
                    SetByte 002520 LoByte(Widen(b397));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b382,b383),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b398 = M[007908];
                    Let b399 = M[007909];
                    Let b400 = M[001367];
                    if (IsZero(Widen(b400))) {
                      SetByte 001367 b399;
                      Let b401 = M[Offset(Offset(000751,Mul(MakeHiLo(b398,b399),9)),6)];
                      SetByte 001368 LoByte(Widen(b401));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b398,b399),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_402;
                      JumpReturn: return_address_402, result: 1
                    } else {
                      Let b403 = M[Offset(Offset(000751,Mul(Widen(b400),9)),6)];
                      if (Equal(Widen(b403),68)) {
                        Let b404 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b400),9)),6) LoByte(Widen(b404));
                        SetByte 001367 b399;
                        Let b405 = M[Offset(Offset(000751,Mul(MakeHiLo(b398,b399),9)),6)];
                        SetByte 001368 LoByte(Widen(b405));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b398,b399),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_406;
                        JumpReturn: return_address_406, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b407 = M[Offset(Offset(000751,Mul(Widen(b380),9)),6)];
                if (Equal(Widen(b407),123)) {
                  Let b408 = M[001863];
                  SetByte Offset(Offset(000751,Mul(Widen(b380),9)),6) LoByte(Widen(b408));
                  SetByte 001862 b379;
                  Let b409 = M[Offset(Offset(000751,Mul(MakeHiLo(b378,b379),9)),6)];
                  SetByte 001863 LoByte(Widen(b409));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b378,b379),9)),6) 123;
                  TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                  Let b410 = M[007908];
                  Let b411 = M[007909];
                  Let b412 = M[002519];
                  if (IsZero(Widen(b412))) {
                    SetByte 002519 b411;
                    Let b413 = M[Offset(Offset(000751,Mul(MakeHiLo(b410,b411),9)),6)];
                    SetByte 002520 LoByte(Widen(b413));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b410,b411),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b414 = M[007908];
                    Let b415 = M[007909];
                    Let b416 = M[001367];
                    if (IsZero(Widen(b416))) {
                      SetByte 001367 b415;
                      Let b417 = M[Offset(Offset(000751,Mul(MakeHiLo(b414,b415),9)),6)];
                      SetByte 001368 LoByte(Widen(b417));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b414,b415),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_418;
                      JumpReturn: return_address_418, result: 1
                    } else {
                      Let b419 = M[Offset(Offset(000751,Mul(Widen(b416),9)),6)];
                      if (Equal(Widen(b419),68)) {
                        Let b420 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b416),9)),6) LoByte(Widen(b420));
                        SetByte 001367 b415;
                        Let b421 = M[Offset(Offset(000751,Mul(MakeHiLo(b414,b415),9)),6)];
                        SetByte 001368 LoByte(Widen(b421));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b414,b415),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_422;
                        JumpReturn: return_address_422, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b423 = M[Offset(Offset(000751,Mul(Widen(b412),9)),6)];
                    if (Equal(Widen(b423),196)) {
                      Let b424 = M[002520];
                      SetByte Offset(Offset(000751,Mul(Widen(b412),9)),6) LoByte(Widen(b424));
                      SetByte 002519 b411;
                      Let b425 = M[Offset(Offset(000751,Mul(MakeHiLo(b410,b411),9)),6)];
                      SetByte 002520 LoByte(Widen(b425));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b410,b411),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b426 = M[007908];
                      Let b427 = M[007909];
                      Let b428 = M[001367];
                      if (IsZero(Widen(b428))) {
                        SetByte 001367 b427;
                        Let b429 = M[Offset(Offset(000751,Mul(MakeHiLo(b426,b427),9)),6)];
                        SetByte 001368 LoByte(Widen(b429));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b426,b427),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_430;
                        JumpReturn: return_address_430, result: 1
                      } else {
                        Let b431 = M[Offset(Offset(000751,Mul(Widen(b428),9)),6)];
                        if (Equal(Widen(b431),68)) {
                          Let b432 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b428),9)),6) LoByte(Widen(b432));
                          SetByte 001367 b427;
                          Let b433 = M[Offset(Offset(000751,Mul(MakeHiLo(b426,b427),9)),6)];
                          SetByte 001368 LoByte(Widen(b433));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b426,b427),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_434;
                          JumpReturn: return_address_434, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b435 = M[Offset(Offset(000751,Mul(Widen(b376),9)),6)];
              if (Equal(Widen(b435),71)) {
                Let b436 = M[001395];
                SetByte Offset(Offset(000751,Mul(Widen(b376),9)),6) LoByte(Widen(b436));
                SetByte 001394 31;
                Let b437 = M[001036];
                SetByte 001395 LoByte(Widen(b437));
                SetByte 001036 71;
                TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
                Let b438 = M[007908];
                Let b439 = M[007909];
                Let b440 = M[001862];
                if (IsZero(Widen(b440))) {
                  SetByte 001862 b439;
                  Let b441 = M[Offset(Offset(000751,Mul(MakeHiLo(b438,b439),9)),6)];
                  SetByte 001863 LoByte(Widen(b441));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b438,b439),9)),6) 123;
                  TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                  Let b442 = M[007908];
                  Let b443 = M[007909];
                  Let b444 = M[002519];
                  if (IsZero(Widen(b444))) {
                    SetByte 002519 b443;
                    Let b445 = M[Offset(Offset(000751,Mul(MakeHiLo(b442,b443),9)),6)];
                    SetByte 002520 LoByte(Widen(b445));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b442,b443),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b446 = M[007908];
                    Let b447 = M[007909];
                    Let b448 = M[001367];
                    if (IsZero(Widen(b448))) {
                      SetByte 001367 b447;
                      Let b449 = M[Offset(Offset(000751,Mul(MakeHiLo(b446,b447),9)),6)];
                      SetByte 001368 LoByte(Widen(b449));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b446,b447),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_450;
                      JumpReturn: return_address_450, result: 1
                    } else {
                      Let b451 = M[Offset(Offset(000751,Mul(Widen(b448),9)),6)];
                      if (Equal(Widen(b451),68)) {
                        Let b452 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b448),9)),6) LoByte(Widen(b452));
                        SetByte 001367 b447;
                        Let b453 = M[Offset(Offset(000751,Mul(MakeHiLo(b446,b447),9)),6)];
                        SetByte 001368 LoByte(Widen(b453));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b446,b447),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_454;
                        JumpReturn: return_address_454, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b455 = M[Offset(Offset(000751,Mul(Widen(b444),9)),6)];
                    if (Equal(Widen(b455),196)) {
                      Let b456 = M[002520];
                      SetByte Offset(Offset(000751,Mul(Widen(b444),9)),6) LoByte(Widen(b456));
                      SetByte 002519 b443;
                      Let b457 = M[Offset(Offset(000751,Mul(MakeHiLo(b442,b443),9)),6)];
                      SetByte 002520 LoByte(Widen(b457));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b442,b443),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b458 = M[007908];
                      Let b459 = M[007909];
                      Let b460 = M[001367];
                      if (IsZero(Widen(b460))) {
                        SetByte 001367 b459;
                        Let b461 = M[Offset(Offset(000751,Mul(MakeHiLo(b458,b459),9)),6)];
                        SetByte 001368 LoByte(Widen(b461));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b458,b459),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_462;
                        JumpReturn: return_address_462, result: 1
                      } else {
                        Let b463 = M[Offset(Offset(000751,Mul(Widen(b460),9)),6)];
                        if (Equal(Widen(b463),68)) {
                          Let b464 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b460),9)),6) LoByte(Widen(b464));
                          SetByte 001367 b459;
                          Let b465 = M[Offset(Offset(000751,Mul(MakeHiLo(b458,b459),9)),6)];
                          SetByte 001368 LoByte(Widen(b465));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b458,b459),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_466;
                          JumpReturn: return_address_466, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b467 = M[Offset(Offset(000751,Mul(Widen(b440),9)),6)];
                  if (Equal(Widen(b467),123)) {
                    Let b468 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b440),9)),6) LoByte(Widen(b468));
                    SetByte 001862 b439;
                    Let b469 = M[Offset(Offset(000751,Mul(MakeHiLo(b438,b439),9)),6)];
                    SetByte 001863 LoByte(Widen(b469));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b438,b439),9)),6) 123;
                    TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                    Let b470 = M[007908];
                    Let b471 = M[007909];
                    Let b472 = M[002519];
                    if (IsZero(Widen(b472))) {
                      SetByte 002519 b471;
                      Let b473 = M[Offset(Offset(000751,Mul(MakeHiLo(b470,b471),9)),6)];
                      SetByte 002520 LoByte(Widen(b473));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b470,b471),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b474 = M[007908];
                      Let b475 = M[007909];
                      Let b476 = M[001367];
                      if (IsZero(Widen(b476))) {
                        SetByte 001367 b475;
                        Let b477 = M[Offset(Offset(000751,Mul(MakeHiLo(b474,b475),9)),6)];
                        SetByte 001368 LoByte(Widen(b477));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b474,b475),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_478;
                        JumpReturn: return_address_478, result: 1
                      } else {
                        Let b479 = M[Offset(Offset(000751,Mul(Widen(b476),9)),6)];
                        if (Equal(Widen(b479),68)) {
                          Let b480 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b476),9)),6) LoByte(Widen(b480));
                          SetByte 001367 b475;
                          Let b481 = M[Offset(Offset(000751,Mul(MakeHiLo(b474,b475),9)),6)];
                          SetByte 001368 LoByte(Widen(b481));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b474,b475),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_482;
                          JumpReturn: return_address_482, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b483 = M[Offset(Offset(000751,Mul(Widen(b472),9)),6)];
                      if (Equal(Widen(b483),196)) {
                        Let b484 = M[002520];
                        SetByte Offset(Offset(000751,Mul(Widen(b472),9)),6) LoByte(Widen(b484));
                        SetByte 002519 b471;
                        Let b485 = M[Offset(Offset(000751,Mul(MakeHiLo(b470,b471),9)),6)];
                        SetByte 002520 LoByte(Widen(b485));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b470,b471),9)),6) 196;
                        TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                        Let b486 = M[007908];
                        Let b487 = M[007909];
                        Let b488 = M[001367];
                        if (IsZero(Widen(b488))) {
                          SetByte 001367 b487;
                          Let b489 = M[Offset(Offset(000751,Mul(MakeHiLo(b486,b487),9)),6)];
                          SetByte 001368 LoByte(Widen(b489));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b486,b487),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_490;
                          JumpReturn: return_address_490, result: 1
                        } else {
                          Let b491 = M[Offset(Offset(000751,Mul(Widen(b488),9)),6)];
                          if (Equal(Widen(b491),68)) {
                            Let b492 = M[001368];
                            SetByte Offset(Offset(000751,Mul(Widen(b488),9)),6) LoByte(Widen(b492));
                            SetByte 001367 b487;
                            Let b493 = M[Offset(Offset(000751,Mul(MakeHiLo(b486,b487),9)),6)];
                            SetByte 001368 LoByte(Widen(b493));
                            SetByte Offset(Offset(000751,Mul(MakeHiLo(b486,b487),9)),6) 68;
                            TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                            GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                            TraceOperation 089026 New_line;
                            GamePrint "\n";
                            TraceOperation 089027 New_line;
                            GamePrint "\n";
                            TraceOperation 089028 Rtrue;
                            PopFrame return_address_494;
                            JumpReturn: return_address_494, result: 1
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b495 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b495),193)) {
      Let b496 = M[002493];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b496));
      SetByte 002492 31;
      Let b497 = M[001036];
      SetByte 002493 LoByte(Widen(b497));
      SetByte 001036 193;
      TraceOperation 088833 (Insert_obj (Con 13) (Con 193));
      Let b498 = M[000872];
      if (IsZero(Widen(b498))) {
        SetByte 000872 193;
        Let b499 = M[002494];
        SetByte 000873 LoByte(Widen(b499));
        SetByte 002494 13;
        TraceOperation 088836 (Insert_obj (Con 72) (Con 31));
        Let b500 = M[001403];
        if (IsZero(Widen(b500))) {
          SetByte 001403 31;
          Let b501 = M[001036];
          SetByte 001404 LoByte(Widen(b501));
          SetByte 001036 72;
          TraceOperation 088839 (Insert_obj (Con 71) (Con 31));
          Let b502 = M[001394];
          if (IsZero(Widen(b502))) {
            SetByte 001394 31;
            Let b503 = M[001036];
            SetByte 001395 LoByte(Widen(b503));
            SetByte 001036 71;
            TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
            Let b504 = M[007908];
            Let b505 = M[007909];
            Let b506 = M[001862];
            if (IsZero(Widen(b506))) {
              SetByte 001862 b505;
              Let b507 = M[Offset(Offset(000751,Mul(MakeHiLo(b504,b505),9)),6)];
              SetByte 001863 LoByte(Widen(b507));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b504,b505),9)),6) 123;
              TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
              Let b508 = M[007908];
              Let b509 = M[007909];
              Let b510 = M[002519];
              if (IsZero(Widen(b510))) {
                SetByte 002519 b509;
                Let b511 = M[Offset(Offset(000751,Mul(MakeHiLo(b508,b509),9)),6)];
                SetByte 002520 LoByte(Widen(b511));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b508,b509),9)),6) 196;
                TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                Let b512 = M[007908];
                Let b513 = M[007909];
                Let b514 = M[001367];
                if (IsZero(Widen(b514))) {
                  SetByte 001367 b513;
                  Let b515 = M[Offset(Offset(000751,Mul(MakeHiLo(b512,b513),9)),6)];
                  SetByte 001368 LoByte(Widen(b515));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b512,b513),9)),6) 68;
                  TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                  GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                  TraceOperation 089026 New_line;
                  GamePrint "\n";
                  TraceOperation 089027 New_line;
                  GamePrint "\n";
                  TraceOperation 089028 Rtrue;
                  PopFrame return_address_516;
                  JumpReturn: return_address_516, result: 1
                } else {
                  Let b517 = M[Offset(Offset(000751,Mul(Widen(b514),9)),6)];
                  if (Equal(Widen(b517),68)) {
                    Let b518 = M[001368];
                    SetByte Offset(Offset(000751,Mul(Widen(b514),9)),6) LoByte(Widen(b518));
                    SetByte 001367 b513;
                    Let b519 = M[Offset(Offset(000751,Mul(MakeHiLo(b512,b513),9)),6)];
                    SetByte 001368 LoByte(Widen(b519));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b512,b513),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_520;
                    JumpReturn: return_address_520, result: 1
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b521 = M[Offset(Offset(000751,Mul(Widen(b510),9)),6)];
                if (Equal(Widen(b521),196)) {
                  Let b522 = M[002520];
                  SetByte Offset(Offset(000751,Mul(Widen(b510),9)),6) LoByte(Widen(b522));
                  SetByte 002519 b509;
                  Let b523 = M[Offset(Offset(000751,Mul(MakeHiLo(b508,b509),9)),6)];
                  SetByte 002520 LoByte(Widen(b523));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b508,b509),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b524 = M[007908];
                  Let b525 = M[007909];
                  Let b526 = M[001367];
                  if (IsZero(Widen(b526))) {
                    SetByte 001367 b525;
                    Let b527 = M[Offset(Offset(000751,Mul(MakeHiLo(b524,b525),9)),6)];
                    SetByte 001368 LoByte(Widen(b527));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b524,b525),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_528;
                    JumpReturn: return_address_528, result: 1
                  } else {
                    Let b529 = M[Offset(Offset(000751,Mul(Widen(b526),9)),6)];
                    if (Equal(Widen(b529),68)) {
                      Let b530 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b526),9)),6) LoByte(Widen(b530));
                      SetByte 001367 b525;
                      Let b531 = M[Offset(Offset(000751,Mul(MakeHiLo(b524,b525),9)),6)];
                      SetByte 001368 LoByte(Widen(b531));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b524,b525),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_532;
                      JumpReturn: return_address_532, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b533 = M[Offset(Offset(000751,Mul(Widen(b506),9)),6)];
              if (Equal(Widen(b533),123)) {
                Let b534 = M[001863];
                SetByte Offset(Offset(000751,Mul(Widen(b506),9)),6) LoByte(Widen(b534));
                SetByte 001862 b505;
                Let b535 = M[Offset(Offset(000751,Mul(MakeHiLo(b504,b505),9)),6)];
                SetByte 001863 LoByte(Widen(b535));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b504,b505),9)),6) 123;
                TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                Let b536 = M[007908];
                Let b537 = M[007909];
                Let b538 = M[002519];
                if (IsZero(Widen(b538))) {
                  SetByte 002519 b537;
                  Let b539 = M[Offset(Offset(000751,Mul(MakeHiLo(b536,b537),9)),6)];
                  SetByte 002520 LoByte(Widen(b539));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b536,b537),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b540 = M[007908];
                  Let b541 = M[007909];
                  Let b542 = M[001367];
                  if (IsZero(Widen(b542))) {
                    SetByte 001367 b541;
                    Let b543 = M[Offset(Offset(000751,Mul(MakeHiLo(b540,b541),9)),6)];
                    SetByte 001368 LoByte(Widen(b543));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b540,b541),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_544;
                    JumpReturn: return_address_544, result: 1
                  } else {
                    Let b545 = M[Offset(Offset(000751,Mul(Widen(b542),9)),6)];
                    if (Equal(Widen(b545),68)) {
                      Let b546 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b542),9)),6) LoByte(Widen(b546));
                      SetByte 001367 b541;
                      Let b547 = M[Offset(Offset(000751,Mul(MakeHiLo(b540,b541),9)),6)];
                      SetByte 001368 LoByte(Widen(b547));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b540,b541),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_548;
                      JumpReturn: return_address_548, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b549 = M[Offset(Offset(000751,Mul(Widen(b538),9)),6)];
                  if (Equal(Widen(b549),196)) {
                    Let b550 = M[002520];
                    SetByte Offset(Offset(000751,Mul(Widen(b538),9)),6) LoByte(Widen(b550));
                    SetByte 002519 b537;
                    Let b551 = M[Offset(Offset(000751,Mul(MakeHiLo(b536,b537),9)),6)];
                    SetByte 002520 LoByte(Widen(b551));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b536,b537),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b552 = M[007908];
                    Let b553 = M[007909];
                    Let b554 = M[001367];
                    if (IsZero(Widen(b554))) {
                      SetByte 001367 b553;
                      Let b555 = M[Offset(Offset(000751,Mul(MakeHiLo(b552,b553),9)),6)];
                      SetByte 001368 LoByte(Widen(b555));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b552,b553),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_556;
                      JumpReturn: return_address_556, result: 1
                    } else {
                      Let b557 = M[Offset(Offset(000751,Mul(Widen(b554),9)),6)];
                      if (Equal(Widen(b557),68)) {
                        Let b558 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b554),9)),6) LoByte(Widen(b558));
                        SetByte 001367 b553;
                        Let b559 = M[Offset(Offset(000751,Mul(MakeHiLo(b552,b553),9)),6)];
                        SetByte 001368 LoByte(Widen(b559));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b552,b553),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_560;
                        JumpReturn: return_address_560, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b561 = M[Offset(Offset(000751,Mul(Widen(b502),9)),6)];
            if (Equal(Widen(b561),71)) {
              Let b562 = M[001395];
              SetByte Offset(Offset(000751,Mul(Widen(b502),9)),6) LoByte(Widen(b562));
              SetByte 001394 31;
              Let b563 = M[001036];
              SetByte 001395 LoByte(Widen(b563));
              SetByte 001036 71;
              TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
              Let b564 = M[007908];
              Let b565 = M[007909];
              Let b566 = M[001862];
              if (IsZero(Widen(b566))) {
                SetByte 001862 b565;
                Let b567 = M[Offset(Offset(000751,Mul(MakeHiLo(b564,b565),9)),6)];
                SetByte 001863 LoByte(Widen(b567));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b564,b565),9)),6) 123;
                TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                Let b568 = M[007908];
                Let b569 = M[007909];
                Let b570 = M[002519];
                if (IsZero(Widen(b570))) {
                  SetByte 002519 b569;
                  Let b571 = M[Offset(Offset(000751,Mul(MakeHiLo(b568,b569),9)),6)];
                  SetByte 002520 LoByte(Widen(b571));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b568,b569),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b572 = M[007908];
                  Let b573 = M[007909];
                  Let b574 = M[001367];
                  if (IsZero(Widen(b574))) {
                    SetByte 001367 b573;
                    Let b575 = M[Offset(Offset(000751,Mul(MakeHiLo(b572,b573),9)),6)];
                    SetByte 001368 LoByte(Widen(b575));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b572,b573),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_576;
                    JumpReturn: return_address_576, result: 1
                  } else {
                    Let b577 = M[Offset(Offset(000751,Mul(Widen(b574),9)),6)];
                    if (Equal(Widen(b577),68)) {
                      Let b578 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b574),9)),6) LoByte(Widen(b578));
                      SetByte 001367 b573;
                      Let b579 = M[Offset(Offset(000751,Mul(MakeHiLo(b572,b573),9)),6)];
                      SetByte 001368 LoByte(Widen(b579));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b572,b573),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_580;
                      JumpReturn: return_address_580, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b581 = M[Offset(Offset(000751,Mul(Widen(b570),9)),6)];
                  if (Equal(Widen(b581),196)) {
                    Let b582 = M[002520];
                    SetByte Offset(Offset(000751,Mul(Widen(b570),9)),6) LoByte(Widen(b582));
                    SetByte 002519 b569;
                    Let b583 = M[Offset(Offset(000751,Mul(MakeHiLo(b568,b569),9)),6)];
                    SetByte 002520 LoByte(Widen(b583));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b568,b569),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b584 = M[007908];
                    Let b585 = M[007909];
                    Let b586 = M[001367];
                    if (IsZero(Widen(b586))) {
                      SetByte 001367 b585;
                      Let b587 = M[Offset(Offset(000751,Mul(MakeHiLo(b584,b585),9)),6)];
                      SetByte 001368 LoByte(Widen(b587));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b584,b585),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_588;
                      JumpReturn: return_address_588, result: 1
                    } else {
                      Let b589 = M[Offset(Offset(000751,Mul(Widen(b586),9)),6)];
                      if (Equal(Widen(b589),68)) {
                        Let b590 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b586),9)),6) LoByte(Widen(b590));
                        SetByte 001367 b585;
                        Let b591 = M[Offset(Offset(000751,Mul(MakeHiLo(b584,b585),9)),6)];
                        SetByte 001368 LoByte(Widen(b591));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b584,b585),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_592;
                        JumpReturn: return_address_592, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b593 = M[Offset(Offset(000751,Mul(Widen(b566),9)),6)];
                if (Equal(Widen(b593),123)) {
                  Let b594 = M[001863];
                  SetByte Offset(Offset(000751,Mul(Widen(b566),9)),6) LoByte(Widen(b594));
                  SetByte 001862 b565;
                  Let b595 = M[Offset(Offset(000751,Mul(MakeHiLo(b564,b565),9)),6)];
                  SetByte 001863 LoByte(Widen(b595));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b564,b565),9)),6) 123;
                  TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                  Let b596 = M[007908];
                  Let b597 = M[007909];
                  Let b598 = M[002519];
                  if (IsZero(Widen(b598))) {
                    SetByte 002519 b597;
                    Let b599 = M[Offset(Offset(000751,Mul(MakeHiLo(b596,b597),9)),6)];
                    SetByte 002520 LoByte(Widen(b599));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b596,b597),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b600 = M[007908];
                    Let b601 = M[007909];
                    Let b602 = M[001367];
                    if (IsZero(Widen(b602))) {
                      SetByte 001367 b601;
                      Let b603 = M[Offset(Offset(000751,Mul(MakeHiLo(b600,b601),9)),6)];
                      SetByte 001368 LoByte(Widen(b603));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b600,b601),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_604;
                      JumpReturn: return_address_604, result: 1
                    } else {
                      Let b605 = M[Offset(Offset(000751,Mul(Widen(b602),9)),6)];
                      if (Equal(Widen(b605),68)) {
                        Let b606 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b602),9)),6) LoByte(Widen(b606));
                        SetByte 001367 b601;
                        Let b607 = M[Offset(Offset(000751,Mul(MakeHiLo(b600,b601),9)),6)];
                        SetByte 001368 LoByte(Widen(b607));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b600,b601),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_608;
                        JumpReturn: return_address_608, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b609 = M[Offset(Offset(000751,Mul(Widen(b598),9)),6)];
                    if (Equal(Widen(b609),196)) {
                      Let b610 = M[002520];
                      SetByte Offset(Offset(000751,Mul(Widen(b598),9)),6) LoByte(Widen(b610));
                      SetByte 002519 b597;
                      Let b611 = M[Offset(Offset(000751,Mul(MakeHiLo(b596,b597),9)),6)];
                      SetByte 002520 LoByte(Widen(b611));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b596,b597),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b612 = M[007908];
                      Let b613 = M[007909];
                      Let b614 = M[001367];
                      if (IsZero(Widen(b614))) {
                        SetByte 001367 b613;
                        Let b615 = M[Offset(Offset(000751,Mul(MakeHiLo(b612,b613),9)),6)];
                        SetByte 001368 LoByte(Widen(b615));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b612,b613),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_616;
                        JumpReturn: return_address_616, result: 1
                      } else {
                        Let b617 = M[Offset(Offset(000751,Mul(Widen(b614),9)),6)];
                        if (Equal(Widen(b617),68)) {
                          Let b618 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b614),9)),6) LoByte(Widen(b618));
                          SetByte 001367 b613;
                          Let b619 = M[Offset(Offset(000751,Mul(MakeHiLo(b612,b613),9)),6)];
                          SetByte 001368 LoByte(Widen(b619));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b612,b613),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_620;
                          JumpReturn: return_address_620, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b621 = M[Offset(Offset(000751,Mul(Widen(b500),9)),6)];
          if (Equal(Widen(b621),72)) {
            Let b622 = M[001404];
            SetByte Offset(Offset(000751,Mul(Widen(b500),9)),6) LoByte(Widen(b622));
            SetByte 001403 31;
            Let b623 = M[001036];
            SetByte 001404 LoByte(Widen(b623));
            SetByte 001036 72;
            TraceOperation 088839 (Insert_obj (Con 71) (Con 31));
            Let b624 = M[001394];
            if (IsZero(Widen(b624))) {
              SetByte 001394 31;
              Let b625 = M[001036];
              SetByte 001395 LoByte(Widen(b625));
              SetByte 001036 71;
              TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
              Let b626 = M[007908];
              Let b627 = M[007909];
              Let b628 = M[001862];
              if (IsZero(Widen(b628))) {
                SetByte 001862 b627;
                Let b629 = M[Offset(Offset(000751,Mul(MakeHiLo(b626,b627),9)),6)];
                SetByte 001863 LoByte(Widen(b629));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b626,b627),9)),6) 123;
                TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                Let b630 = M[007908];
                Let b631 = M[007909];
                Let b632 = M[002519];
                if (IsZero(Widen(b632))) {
                  SetByte 002519 b631;
                  Let b633 = M[Offset(Offset(000751,Mul(MakeHiLo(b630,b631),9)),6)];
                  SetByte 002520 LoByte(Widen(b633));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b630,b631),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b634 = M[007908];
                  Let b635 = M[007909];
                  Let b636 = M[001367];
                  if (IsZero(Widen(b636))) {
                    SetByte 001367 b635;
                    Let b637 = M[Offset(Offset(000751,Mul(MakeHiLo(b634,b635),9)),6)];
                    SetByte 001368 LoByte(Widen(b637));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b634,b635),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_638;
                    JumpReturn: return_address_638, result: 1
                  } else {
                    Let b639 = M[Offset(Offset(000751,Mul(Widen(b636),9)),6)];
                    if (Equal(Widen(b639),68)) {
                      Let b640 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b636),9)),6) LoByte(Widen(b640));
                      SetByte 001367 b635;
                      Let b641 = M[Offset(Offset(000751,Mul(MakeHiLo(b634,b635),9)),6)];
                      SetByte 001368 LoByte(Widen(b641));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b634,b635),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_642;
                      JumpReturn: return_address_642, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b643 = M[Offset(Offset(000751,Mul(Widen(b632),9)),6)];
                  if (Equal(Widen(b643),196)) {
                    Let b644 = M[002520];
                    SetByte Offset(Offset(000751,Mul(Widen(b632),9)),6) LoByte(Widen(b644));
                    SetByte 002519 b631;
                    Let b645 = M[Offset(Offset(000751,Mul(MakeHiLo(b630,b631),9)),6)];
                    SetByte 002520 LoByte(Widen(b645));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b630,b631),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b646 = M[007908];
                    Let b647 = M[007909];
                    Let b648 = M[001367];
                    if (IsZero(Widen(b648))) {
                      SetByte 001367 b647;
                      Let b649 = M[Offset(Offset(000751,Mul(MakeHiLo(b646,b647),9)),6)];
                      SetByte 001368 LoByte(Widen(b649));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b646,b647),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_650;
                      JumpReturn: return_address_650, result: 1
                    } else {
                      Let b651 = M[Offset(Offset(000751,Mul(Widen(b648),9)),6)];
                      if (Equal(Widen(b651),68)) {
                        Let b652 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b648),9)),6) LoByte(Widen(b652));
                        SetByte 001367 b647;
                        Let b653 = M[Offset(Offset(000751,Mul(MakeHiLo(b646,b647),9)),6)];
                        SetByte 001368 LoByte(Widen(b653));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b646,b647),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_654;
                        JumpReturn: return_address_654, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b655 = M[Offset(Offset(000751,Mul(Widen(b628),9)),6)];
                if (Equal(Widen(b655),123)) {
                  Let b656 = M[001863];
                  SetByte Offset(Offset(000751,Mul(Widen(b628),9)),6) LoByte(Widen(b656));
                  SetByte 001862 b627;
                  Let b657 = M[Offset(Offset(000751,Mul(MakeHiLo(b626,b627),9)),6)];
                  SetByte 001863 LoByte(Widen(b657));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b626,b627),9)),6) 123;
                  TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                  Let b658 = M[007908];
                  Let b659 = M[007909];
                  Let b660 = M[002519];
                  if (IsZero(Widen(b660))) {
                    SetByte 002519 b659;
                    Let b661 = M[Offset(Offset(000751,Mul(MakeHiLo(b658,b659),9)),6)];
                    SetByte 002520 LoByte(Widen(b661));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b658,b659),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b662 = M[007908];
                    Let b663 = M[007909];
                    Let b664 = M[001367];
                    if (IsZero(Widen(b664))) {
                      SetByte 001367 b663;
                      Let b665 = M[Offset(Offset(000751,Mul(MakeHiLo(b662,b663),9)),6)];
                      SetByte 001368 LoByte(Widen(b665));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b662,b663),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_666;
                      JumpReturn: return_address_666, result: 1
                    } else {
                      Let b667 = M[Offset(Offset(000751,Mul(Widen(b664),9)),6)];
                      if (Equal(Widen(b667),68)) {
                        Let b668 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b664),9)),6) LoByte(Widen(b668));
                        SetByte 001367 b663;
                        Let b669 = M[Offset(Offset(000751,Mul(MakeHiLo(b662,b663),9)),6)];
                        SetByte 001368 LoByte(Widen(b669));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b662,b663),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_670;
                        JumpReturn: return_address_670, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b671 = M[Offset(Offset(000751,Mul(Widen(b660),9)),6)];
                    if (Equal(Widen(b671),196)) {
                      Let b672 = M[002520];
                      SetByte Offset(Offset(000751,Mul(Widen(b660),9)),6) LoByte(Widen(b672));
                      SetByte 002519 b659;
                      Let b673 = M[Offset(Offset(000751,Mul(MakeHiLo(b658,b659),9)),6)];
                      SetByte 002520 LoByte(Widen(b673));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b658,b659),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b674 = M[007908];
                      Let b675 = M[007909];
                      Let b676 = M[001367];
                      if (IsZero(Widen(b676))) {
                        SetByte 001367 b675;
                        Let b677 = M[Offset(Offset(000751,Mul(MakeHiLo(b674,b675),9)),6)];
                        SetByte 001368 LoByte(Widen(b677));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b674,b675),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_678;
                        JumpReturn: return_address_678, result: 1
                      } else {
                        Let b679 = M[Offset(Offset(000751,Mul(Widen(b676),9)),6)];
                        if (Equal(Widen(b679),68)) {
                          Let b680 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b676),9)),6) LoByte(Widen(b680));
                          SetByte 001367 b675;
                          Let b681 = M[Offset(Offset(000751,Mul(MakeHiLo(b674,b675),9)),6)];
                          SetByte 001368 LoByte(Widen(b681));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b674,b675),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_682;
                          JumpReturn: return_address_682, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b683 = M[Offset(Offset(000751,Mul(Widen(b624),9)),6)];
              if (Equal(Widen(b683),71)) {
                Let b684 = M[001395];
                SetByte Offset(Offset(000751,Mul(Widen(b624),9)),6) LoByte(Widen(b684));
                SetByte 001394 31;
                Let b685 = M[001036];
                SetByte 001395 LoByte(Widen(b685));
                SetByte 001036 71;
                TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
                Let b686 = M[007908];
                Let b687 = M[007909];
                Let b688 = M[001862];
                if (IsZero(Widen(b688))) {
                  SetByte 001862 b687;
                  Let b689 = M[Offset(Offset(000751,Mul(MakeHiLo(b686,b687),9)),6)];
                  SetByte 001863 LoByte(Widen(b689));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b686,b687),9)),6) 123;
                  TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                  Let b690 = M[007908];
                  Let b691 = M[007909];
                  Let b692 = M[002519];
                  if (IsZero(Widen(b692))) {
                    SetByte 002519 b691;
                    Let b693 = M[Offset(Offset(000751,Mul(MakeHiLo(b690,b691),9)),6)];
                    SetByte 002520 LoByte(Widen(b693));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b690,b691),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b694 = M[007908];
                    Let b695 = M[007909];
                    Let b696 = M[001367];
                    if (IsZero(Widen(b696))) {
                      SetByte 001367 b695;
                      Let b697 = M[Offset(Offset(000751,Mul(MakeHiLo(b694,b695),9)),6)];
                      SetByte 001368 LoByte(Widen(b697));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b694,b695),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_698;
                      JumpReturn: return_address_698, result: 1
                    } else {
                      Let b699 = M[Offset(Offset(000751,Mul(Widen(b696),9)),6)];
                      if (Equal(Widen(b699),68)) {
                        Let b700 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b696),9)),6) LoByte(Widen(b700));
                        SetByte 001367 b695;
                        Let b701 = M[Offset(Offset(000751,Mul(MakeHiLo(b694,b695),9)),6)];
                        SetByte 001368 LoByte(Widen(b701));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b694,b695),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_702;
                        JumpReturn: return_address_702, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b703 = M[Offset(Offset(000751,Mul(Widen(b692),9)),6)];
                    if (Equal(Widen(b703),196)) {
                      Let b704 = M[002520];
                      SetByte Offset(Offset(000751,Mul(Widen(b692),9)),6) LoByte(Widen(b704));
                      SetByte 002519 b691;
                      Let b705 = M[Offset(Offset(000751,Mul(MakeHiLo(b690,b691),9)),6)];
                      SetByte 002520 LoByte(Widen(b705));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b690,b691),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b706 = M[007908];
                      Let b707 = M[007909];
                      Let b708 = M[001367];
                      if (IsZero(Widen(b708))) {
                        SetByte 001367 b707;
                        Let b709 = M[Offset(Offset(000751,Mul(MakeHiLo(b706,b707),9)),6)];
                        SetByte 001368 LoByte(Widen(b709));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b706,b707),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_710;
                        JumpReturn: return_address_710, result: 1
                      } else {
                        Let b711 = M[Offset(Offset(000751,Mul(Widen(b708),9)),6)];
                        if (Equal(Widen(b711),68)) {
                          Let b712 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b708),9)),6) LoByte(Widen(b712));
                          SetByte 001367 b707;
                          Let b713 = M[Offset(Offset(000751,Mul(MakeHiLo(b706,b707),9)),6)];
                          SetByte 001368 LoByte(Widen(b713));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b706,b707),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_714;
                          JumpReturn: return_address_714, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b715 = M[Offset(Offset(000751,Mul(Widen(b688),9)),6)];
                  if (Equal(Widen(b715),123)) {
                    Let b716 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b688),9)),6) LoByte(Widen(b716));
                    SetByte 001862 b687;
                    Let b717 = M[Offset(Offset(000751,Mul(MakeHiLo(b686,b687),9)),6)];
                    SetByte 001863 LoByte(Widen(b717));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b686,b687),9)),6) 123;
                    TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                    Let b718 = M[007908];
                    Let b719 = M[007909];
                    Let b720 = M[002519];
                    if (IsZero(Widen(b720))) {
                      SetByte 002519 b719;
                      Let b721 = M[Offset(Offset(000751,Mul(MakeHiLo(b718,b719),9)),6)];
                      SetByte 002520 LoByte(Widen(b721));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b718,b719),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b722 = M[007908];
                      Let b723 = M[007909];
                      Let b724 = M[001367];
                      if (IsZero(Widen(b724))) {
                        SetByte 001367 b723;
                        Let b725 = M[Offset(Offset(000751,Mul(MakeHiLo(b722,b723),9)),6)];
                        SetByte 001368 LoByte(Widen(b725));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b722,b723),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_726;
                        JumpReturn: return_address_726, result: 1
                      } else {
                        Let b727 = M[Offset(Offset(000751,Mul(Widen(b724),9)),6)];
                        if (Equal(Widen(b727),68)) {
                          Let b728 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b724),9)),6) LoByte(Widen(b728));
                          SetByte 001367 b723;
                          Let b729 = M[Offset(Offset(000751,Mul(MakeHiLo(b722,b723),9)),6)];
                          SetByte 001368 LoByte(Widen(b729));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b722,b723),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_730;
                          JumpReturn: return_address_730, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b731 = M[Offset(Offset(000751,Mul(Widen(b720),9)),6)];
                      if (Equal(Widen(b731),196)) {
                        Let b732 = M[002520];
                        SetByte Offset(Offset(000751,Mul(Widen(b720),9)),6) LoByte(Widen(b732));
                        SetByte 002519 b719;
                        Let b733 = M[Offset(Offset(000751,Mul(MakeHiLo(b718,b719),9)),6)];
                        SetByte 002520 LoByte(Widen(b733));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b718,b719),9)),6) 196;
                        TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                        Let b734 = M[007908];
                        Let b735 = M[007909];
                        Let b736 = M[001367];
                        if (IsZero(Widen(b736))) {
                          SetByte 001367 b735;
                          Let b737 = M[Offset(Offset(000751,Mul(MakeHiLo(b734,b735),9)),6)];
                          SetByte 001368 LoByte(Widen(b737));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b734,b735),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_738;
                          JumpReturn: return_address_738, result: 1
                        } else {
                          Let b739 = M[Offset(Offset(000751,Mul(Widen(b736),9)),6)];
                          if (Equal(Widen(b739),68)) {
                            Let b740 = M[001368];
                            SetByte Offset(Offset(000751,Mul(Widen(b736),9)),6) LoByte(Widen(b740));
                            SetByte 001367 b735;
                            Let b741 = M[Offset(Offset(000751,Mul(MakeHiLo(b734,b735),9)),6)];
                            SetByte 001368 LoByte(Widen(b741));
                            SetByte Offset(Offset(000751,Mul(MakeHiLo(b734,b735),9)),6) 68;
                            TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                            GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                            TraceOperation 089026 New_line;
                            GamePrint "\n";
                            TraceOperation 089027 New_line;
                            GamePrint "\n";
                            TraceOperation 089028 Rtrue;
                            PopFrame return_address_742;
                            JumpReturn: return_address_742, result: 1
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b743 = M[Offset(Offset(000751,Mul(Widen(b498),9)),6)];
        if (Equal(Widen(b743),13)) {
          Let b744 = M[000873];
          SetByte Offset(Offset(000751,Mul(Widen(b498),9)),6) LoByte(Widen(b744));
          SetByte 000872 193;
          Let b745 = M[002494];
          SetByte 000873 LoByte(Widen(b745));
          SetByte 002494 13;
          TraceOperation 088836 (Insert_obj (Con 72) (Con 31));
          Let b746 = M[001403];
          if (IsZero(Widen(b746))) {
            SetByte 001403 31;
            Let b747 = M[001036];
            SetByte 001404 LoByte(Widen(b747));
            SetByte 001036 72;
            TraceOperation 088839 (Insert_obj (Con 71) (Con 31));
            Let b748 = M[001394];
            if (IsZero(Widen(b748))) {
              SetByte 001394 31;
              Let b749 = M[001036];
              SetByte 001395 LoByte(Widen(b749));
              SetByte 001036 71;
              TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
              Let b750 = M[007908];
              Let b751 = M[007909];
              Let b752 = M[001862];
              if (IsZero(Widen(b752))) {
                SetByte 001862 b751;
                Let b753 = M[Offset(Offset(000751,Mul(MakeHiLo(b750,b751),9)),6)];
                SetByte 001863 LoByte(Widen(b753));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b750,b751),9)),6) 123;
                TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                Let b754 = M[007908];
                Let b755 = M[007909];
                Let b756 = M[002519];
                if (IsZero(Widen(b756))) {
                  SetByte 002519 b755;
                  Let b757 = M[Offset(Offset(000751,Mul(MakeHiLo(b754,b755),9)),6)];
                  SetByte 002520 LoByte(Widen(b757));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b754,b755),9)),6) 196;
                  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                  Let b758 = M[007908];
                  Let b759 = M[007909];
                  Let b760 = M[001367];
                  if (IsZero(Widen(b760))) {
                    SetByte 001367 b759;
                    Let b761 = M[Offset(Offset(000751,Mul(MakeHiLo(b758,b759),9)),6)];
                    SetByte 001368 LoByte(Widen(b761));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b758,b759),9)),6) 68;
                    TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                    GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                    TraceOperation 089026 New_line;
                    GamePrint "\n";
                    TraceOperation 089027 New_line;
                    GamePrint "\n";
                    TraceOperation 089028 Rtrue;
                    PopFrame return_address_762;
                    JumpReturn: return_address_762, result: 1
                  } else {
                    Let b763 = M[Offset(Offset(000751,Mul(Widen(b760),9)),6)];
                    if (Equal(Widen(b763),68)) {
                      Let b764 = M[001368];
                      SetByte Offset(Offset(000751,Mul(Widen(b760),9)),6) LoByte(Widen(b764));
                      SetByte 001367 b759;
                      Let b765 = M[Offset(Offset(000751,Mul(MakeHiLo(b758,b759),9)),6)];
                      SetByte 001368 LoByte(Widen(b765));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b758,b759),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_766;
                      JumpReturn: return_address_766, result: 1
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b767 = M[Offset(Offset(000751,Mul(Widen(b756),9)),6)];
                  if (Equal(Widen(b767),196)) {
                    Let b768 = M[002520];
                    SetByte Offset(Offset(000751,Mul(Widen(b756),9)),6) LoByte(Widen(b768));
                    SetByte 002519 b755;
                    Let b769 = M[Offset(Offset(000751,Mul(MakeHiLo(b754,b755),9)),6)];
                    SetByte 002520 LoByte(Widen(b769));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b754,b755),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b770 = M[007908];
                    Let b771 = M[007909];
                    Let b772 = M[001367];
                    if (IsZero(Widen(b772))) {
                      SetByte 001367 b771;
                      Let b773 = M[Offset(Offset(000751,Mul(MakeHiLo(b770,b771),9)),6)];
                      SetByte 001368 LoByte(Widen(b773));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b770,b771),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_774;
                      JumpReturn: return_address_774, result: 1
                    } else {
                      Let b775 = M[Offset(Offset(000751,Mul(Widen(b772),9)),6)];
                      if (Equal(Widen(b775),68)) {
                        Let b776 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b772),9)),6) LoByte(Widen(b776));
                        SetByte 001367 b771;
                        Let b777 = M[Offset(Offset(000751,Mul(MakeHiLo(b770,b771),9)),6)];
                        SetByte 001368 LoByte(Widen(b777));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b770,b771),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_778;
                        JumpReturn: return_address_778, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b779 = M[Offset(Offset(000751,Mul(Widen(b752),9)),6)];
                if (Equal(Widen(b779),123)) {
                  Let b780 = M[001863];
                  SetByte Offset(Offset(000751,Mul(Widen(b752),9)),6) LoByte(Widen(b780));
                  SetByte 001862 b751;
                  Let b781 = M[Offset(Offset(000751,Mul(MakeHiLo(b750,b751),9)),6)];
                  SetByte 001863 LoByte(Widen(b781));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b750,b751),9)),6) 123;
                  TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                  Let b782 = M[007908];
                  Let b783 = M[007909];
                  Let b784 = M[002519];
                  if (IsZero(Widen(b784))) {
                    SetByte 002519 b783;
                    Let b785 = M[Offset(Offset(000751,Mul(MakeHiLo(b782,b783),9)),6)];
                    SetByte 002520 LoByte(Widen(b785));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b782,b783),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b786 = M[007908];
                    Let b787 = M[007909];
                    Let b788 = M[001367];
                    if (IsZero(Widen(b788))) {
                      SetByte 001367 b787;
                      Let b789 = M[Offset(Offset(000751,Mul(MakeHiLo(b786,b787),9)),6)];
                      SetByte 001368 LoByte(Widen(b789));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b786,b787),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_790;
                      JumpReturn: return_address_790, result: 1
                    } else {
                      Let b791 = M[Offset(Offset(000751,Mul(Widen(b788),9)),6)];
                      if (Equal(Widen(b791),68)) {
                        Let b792 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b788),9)),6) LoByte(Widen(b792));
                        SetByte 001367 b787;
                        Let b793 = M[Offset(Offset(000751,Mul(MakeHiLo(b786,b787),9)),6)];
                        SetByte 001368 LoByte(Widen(b793));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b786,b787),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_794;
                        JumpReturn: return_address_794, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b795 = M[Offset(Offset(000751,Mul(Widen(b784),9)),6)];
                    if (Equal(Widen(b795),196)) {
                      Let b796 = M[002520];
                      SetByte Offset(Offset(000751,Mul(Widen(b784),9)),6) LoByte(Widen(b796));
                      SetByte 002519 b783;
                      Let b797 = M[Offset(Offset(000751,Mul(MakeHiLo(b782,b783),9)),6)];
                      SetByte 002520 LoByte(Widen(b797));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b782,b783),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b798 = M[007908];
                      Let b799 = M[007909];
                      Let b800 = M[001367];
                      if (IsZero(Widen(b800))) {
                        SetByte 001367 b799;
                        Let b801 = M[Offset(Offset(000751,Mul(MakeHiLo(b798,b799),9)),6)];
                        SetByte 001368 LoByte(Widen(b801));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b798,b799),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_802;
                        JumpReturn: return_address_802, result: 1
                      } else {
                        Let b803 = M[Offset(Offset(000751,Mul(Widen(b800),9)),6)];
                        if (Equal(Widen(b803),68)) {
                          Let b804 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b800),9)),6) LoByte(Widen(b804));
                          SetByte 001367 b799;
                          Let b805 = M[Offset(Offset(000751,Mul(MakeHiLo(b798,b799),9)),6)];
                          SetByte 001368 LoByte(Widen(b805));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b798,b799),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_806;
                          JumpReturn: return_address_806, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b807 = M[Offset(Offset(000751,Mul(Widen(b748),9)),6)];
              if (Equal(Widen(b807),71)) {
                Let b808 = M[001395];
                SetByte Offset(Offset(000751,Mul(Widen(b748),9)),6) LoByte(Widen(b808));
                SetByte 001394 31;
                Let b809 = M[001036];
                SetByte 001395 LoByte(Widen(b809));
                SetByte 001036 71;
                TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
                Let b810 = M[007908];
                Let b811 = M[007909];
                Let b812 = M[001862];
                if (IsZero(Widen(b812))) {
                  SetByte 001862 b811;
                  Let b813 = M[Offset(Offset(000751,Mul(MakeHiLo(b810,b811),9)),6)];
                  SetByte 001863 LoByte(Widen(b813));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b810,b811),9)),6) 123;
                  TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                  Let b814 = M[007908];
                  Let b815 = M[007909];
                  Let b816 = M[002519];
                  if (IsZero(Widen(b816))) {
                    SetByte 002519 b815;
                    Let b817 = M[Offset(Offset(000751,Mul(MakeHiLo(b814,b815),9)),6)];
                    SetByte 002520 LoByte(Widen(b817));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b814,b815),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b818 = M[007908];
                    Let b819 = M[007909];
                    Let b820 = M[001367];
                    if (IsZero(Widen(b820))) {
                      SetByte 001367 b819;
                      Let b821 = M[Offset(Offset(000751,Mul(MakeHiLo(b818,b819),9)),6)];
                      SetByte 001368 LoByte(Widen(b821));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b818,b819),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_822;
                      JumpReturn: return_address_822, result: 1
                    } else {
                      Let b823 = M[Offset(Offset(000751,Mul(Widen(b820),9)),6)];
                      if (Equal(Widen(b823),68)) {
                        Let b824 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b820),9)),6) LoByte(Widen(b824));
                        SetByte 001367 b819;
                        Let b825 = M[Offset(Offset(000751,Mul(MakeHiLo(b818,b819),9)),6)];
                        SetByte 001368 LoByte(Widen(b825));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b818,b819),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_826;
                        JumpReturn: return_address_826, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b827 = M[Offset(Offset(000751,Mul(Widen(b816),9)),6)];
                    if (Equal(Widen(b827),196)) {
                      Let b828 = M[002520];
                      SetByte Offset(Offset(000751,Mul(Widen(b816),9)),6) LoByte(Widen(b828));
                      SetByte 002519 b815;
                      Let b829 = M[Offset(Offset(000751,Mul(MakeHiLo(b814,b815),9)),6)];
                      SetByte 002520 LoByte(Widen(b829));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b814,b815),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b830 = M[007908];
                      Let b831 = M[007909];
                      Let b832 = M[001367];
                      if (IsZero(Widen(b832))) {
                        SetByte 001367 b831;
                        Let b833 = M[Offset(Offset(000751,Mul(MakeHiLo(b830,b831),9)),6)];
                        SetByte 001368 LoByte(Widen(b833));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b830,b831),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_834;
                        JumpReturn: return_address_834, result: 1
                      } else {
                        Let b835 = M[Offset(Offset(000751,Mul(Widen(b832),9)),6)];
                        if (Equal(Widen(b835),68)) {
                          Let b836 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b832),9)),6) LoByte(Widen(b836));
                          SetByte 001367 b831;
                          Let b837 = M[Offset(Offset(000751,Mul(MakeHiLo(b830,b831),9)),6)];
                          SetByte 001368 LoByte(Widen(b837));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b830,b831),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_838;
                          JumpReturn: return_address_838, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b839 = M[Offset(Offset(000751,Mul(Widen(b812),9)),6)];
                  if (Equal(Widen(b839),123)) {
                    Let b840 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b812),9)),6) LoByte(Widen(b840));
                    SetByte 001862 b811;
                    Let b841 = M[Offset(Offset(000751,Mul(MakeHiLo(b810,b811),9)),6)];
                    SetByte 001863 LoByte(Widen(b841));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b810,b811),9)),6) 123;
                    TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                    Let b842 = M[007908];
                    Let b843 = M[007909];
                    Let b844 = M[002519];
                    if (IsZero(Widen(b844))) {
                      SetByte 002519 b843;
                      Let b845 = M[Offset(Offset(000751,Mul(MakeHiLo(b842,b843),9)),6)];
                      SetByte 002520 LoByte(Widen(b845));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b842,b843),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b846 = M[007908];
                      Let b847 = M[007909];
                      Let b848 = M[001367];
                      if (IsZero(Widen(b848))) {
                        SetByte 001367 b847;
                        Let b849 = M[Offset(Offset(000751,Mul(MakeHiLo(b846,b847),9)),6)];
                        SetByte 001368 LoByte(Widen(b849));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b846,b847),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_850;
                        JumpReturn: return_address_850, result: 1
                      } else {
                        Let b851 = M[Offset(Offset(000751,Mul(Widen(b848),9)),6)];
                        if (Equal(Widen(b851),68)) {
                          Let b852 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b848),9)),6) LoByte(Widen(b852));
                          SetByte 001367 b847;
                          Let b853 = M[Offset(Offset(000751,Mul(MakeHiLo(b846,b847),9)),6)];
                          SetByte 001368 LoByte(Widen(b853));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b846,b847),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_854;
                          JumpReturn: return_address_854, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b855 = M[Offset(Offset(000751,Mul(Widen(b844),9)),6)];
                      if (Equal(Widen(b855),196)) {
                        Let b856 = M[002520];
                        SetByte Offset(Offset(000751,Mul(Widen(b844),9)),6) LoByte(Widen(b856));
                        SetByte 002519 b843;
                        Let b857 = M[Offset(Offset(000751,Mul(MakeHiLo(b842,b843),9)),6)];
                        SetByte 002520 LoByte(Widen(b857));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b842,b843),9)),6) 196;
                        TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                        Let b858 = M[007908];
                        Let b859 = M[007909];
                        Let b860 = M[001367];
                        if (IsZero(Widen(b860))) {
                          SetByte 001367 b859;
                          Let b861 = M[Offset(Offset(000751,Mul(MakeHiLo(b858,b859),9)),6)];
                          SetByte 001368 LoByte(Widen(b861));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b858,b859),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_862;
                          JumpReturn: return_address_862, result: 1
                        } else {
                          Let b863 = M[Offset(Offset(000751,Mul(Widen(b860),9)),6)];
                          if (Equal(Widen(b863),68)) {
                            Let b864 = M[001368];
                            SetByte Offset(Offset(000751,Mul(Widen(b860),9)),6) LoByte(Widen(b864));
                            SetByte 001367 b859;
                            Let b865 = M[Offset(Offset(000751,Mul(MakeHiLo(b858,b859),9)),6)];
                            SetByte 001368 LoByte(Widen(b865));
                            SetByte Offset(Offset(000751,Mul(MakeHiLo(b858,b859),9)),6) 68;
                            TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                            GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                            TraceOperation 089026 New_line;
                            GamePrint "\n";
                            TraceOperation 089027 New_line;
                            GamePrint "\n";
                            TraceOperation 089028 Rtrue;
                            PopFrame return_address_866;
                            JumpReturn: return_address_866, result: 1
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b867 = M[Offset(Offset(000751,Mul(Widen(b746),9)),6)];
            if (Equal(Widen(b867),72)) {
              Let b868 = M[001404];
              SetByte Offset(Offset(000751,Mul(Widen(b746),9)),6) LoByte(Widen(b868));
              SetByte 001403 31;
              Let b869 = M[001036];
              SetByte 001404 LoByte(Widen(b869));
              SetByte 001036 72;
              TraceOperation 088839 (Insert_obj (Con 71) (Con 31));
              Let b870 = M[001394];
              if (IsZero(Widen(b870))) {
                SetByte 001394 31;
                Let b871 = M[001036];
                SetByte 001395 LoByte(Widen(b871));
                SetByte 001036 71;
                TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
                Let b872 = M[007908];
                Let b873 = M[007909];
                Let b874 = M[001862];
                if (IsZero(Widen(b874))) {
                  SetByte 001862 b873;
                  Let b875 = M[Offset(Offset(000751,Mul(MakeHiLo(b872,b873),9)),6)];
                  SetByte 001863 LoByte(Widen(b875));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b872,b873),9)),6) 123;
                  TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                  Let b876 = M[007908];
                  Let b877 = M[007909];
                  Let b878 = M[002519];
                  if (IsZero(Widen(b878))) {
                    SetByte 002519 b877;
                    Let b879 = M[Offset(Offset(000751,Mul(MakeHiLo(b876,b877),9)),6)];
                    SetByte 002520 LoByte(Widen(b879));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b876,b877),9)),6) 196;
                    TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                    Let b880 = M[007908];
                    Let b881 = M[007909];
                    Let b882 = M[001367];
                    if (IsZero(Widen(b882))) {
                      SetByte 001367 b881;
                      Let b883 = M[Offset(Offset(000751,Mul(MakeHiLo(b880,b881),9)),6)];
                      SetByte 001368 LoByte(Widen(b883));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b880,b881),9)),6) 68;
                      TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                      GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                      TraceOperation 089026 New_line;
                      GamePrint "\n";
                      TraceOperation 089027 New_line;
                      GamePrint "\n";
                      TraceOperation 089028 Rtrue;
                      PopFrame return_address_884;
                      JumpReturn: return_address_884, result: 1
                    } else {
                      Let b885 = M[Offset(Offset(000751,Mul(Widen(b882),9)),6)];
                      if (Equal(Widen(b885),68)) {
                        Let b886 = M[001368];
                        SetByte Offset(Offset(000751,Mul(Widen(b882),9)),6) LoByte(Widen(b886));
                        SetByte 001367 b881;
                        Let b887 = M[Offset(Offset(000751,Mul(MakeHiLo(b880,b881),9)),6)];
                        SetByte 001368 LoByte(Widen(b887));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b880,b881),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_888;
                        JumpReturn: return_address_888, result: 1
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b889 = M[Offset(Offset(000751,Mul(Widen(b878),9)),6)];
                    if (Equal(Widen(b889),196)) {
                      Let b890 = M[002520];
                      SetByte Offset(Offset(000751,Mul(Widen(b878),9)),6) LoByte(Widen(b890));
                      SetByte 002519 b877;
                      Let b891 = M[Offset(Offset(000751,Mul(MakeHiLo(b876,b877),9)),6)];
                      SetByte 002520 LoByte(Widen(b891));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b876,b877),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b892 = M[007908];
                      Let b893 = M[007909];
                      Let b894 = M[001367];
                      if (IsZero(Widen(b894))) {
                        SetByte 001367 b893;
                        Let b895 = M[Offset(Offset(000751,Mul(MakeHiLo(b892,b893),9)),6)];
                        SetByte 001368 LoByte(Widen(b895));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b892,b893),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_896;
                        JumpReturn: return_address_896, result: 1
                      } else {
                        Let b897 = M[Offset(Offset(000751,Mul(Widen(b894),9)),6)];
                        if (Equal(Widen(b897),68)) {
                          Let b898 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b894),9)),6) LoByte(Widen(b898));
                          SetByte 001367 b893;
                          Let b899 = M[Offset(Offset(000751,Mul(MakeHiLo(b892,b893),9)),6)];
                          SetByte 001368 LoByte(Widen(b899));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b892,b893),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_900;
                          JumpReturn: return_address_900, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b901 = M[Offset(Offset(000751,Mul(Widen(b874),9)),6)];
                  if (Equal(Widen(b901),123)) {
                    Let b902 = M[001863];
                    SetByte Offset(Offset(000751,Mul(Widen(b874),9)),6) LoByte(Widen(b902));
                    SetByte 001862 b873;
                    Let b903 = M[Offset(Offset(000751,Mul(MakeHiLo(b872,b873),9)),6)];
                    SetByte 001863 LoByte(Widen(b903));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b872,b873),9)),6) 123;
                    TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                    Let b904 = M[007908];
                    Let b905 = M[007909];
                    Let b906 = M[002519];
                    if (IsZero(Widen(b906))) {
                      SetByte 002519 b905;
                      Let b907 = M[Offset(Offset(000751,Mul(MakeHiLo(b904,b905),9)),6)];
                      SetByte 002520 LoByte(Widen(b907));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b904,b905),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b908 = M[007908];
                      Let b909 = M[007909];
                      Let b910 = M[001367];
                      if (IsZero(Widen(b910))) {
                        SetByte 001367 b909;
                        Let b911 = M[Offset(Offset(000751,Mul(MakeHiLo(b908,b909),9)),6)];
                        SetByte 001368 LoByte(Widen(b911));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b908,b909),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_912;
                        JumpReturn: return_address_912, result: 1
                      } else {
                        Let b913 = M[Offset(Offset(000751,Mul(Widen(b910),9)),6)];
                        if (Equal(Widen(b913),68)) {
                          Let b914 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b910),9)),6) LoByte(Widen(b914));
                          SetByte 001367 b909;
                          Let b915 = M[Offset(Offset(000751,Mul(MakeHiLo(b908,b909),9)),6)];
                          SetByte 001368 LoByte(Widen(b915));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b908,b909),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_916;
                          JumpReturn: return_address_916, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b917 = M[Offset(Offset(000751,Mul(Widen(b906),9)),6)];
                      if (Equal(Widen(b917),196)) {
                        Let b918 = M[002520];
                        SetByte Offset(Offset(000751,Mul(Widen(b906),9)),6) LoByte(Widen(b918));
                        SetByte 002519 b905;
                        Let b919 = M[Offset(Offset(000751,Mul(MakeHiLo(b904,b905),9)),6)];
                        SetByte 002520 LoByte(Widen(b919));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b904,b905),9)),6) 196;
                        TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                        Let b920 = M[007908];
                        Let b921 = M[007909];
                        Let b922 = M[001367];
                        if (IsZero(Widen(b922))) {
                          SetByte 001367 b921;
                          Let b923 = M[Offset(Offset(000751,Mul(MakeHiLo(b920,b921),9)),6)];
                          SetByte 001368 LoByte(Widen(b923));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b920,b921),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_924;
                          JumpReturn: return_address_924, result: 1
                        } else {
                          Let b925 = M[Offset(Offset(000751,Mul(Widen(b922),9)),6)];
                          if (Equal(Widen(b925),68)) {
                            Let b926 = M[001368];
                            SetByte Offset(Offset(000751,Mul(Widen(b922),9)),6) LoByte(Widen(b926));
                            SetByte 001367 b921;
                            Let b927 = M[Offset(Offset(000751,Mul(MakeHiLo(b920,b921),9)),6)];
                            SetByte 001368 LoByte(Widen(b927));
                            SetByte Offset(Offset(000751,Mul(MakeHiLo(b920,b921),9)),6) 68;
                            TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                            GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                            TraceOperation 089026 New_line;
                            GamePrint "\n";
                            TraceOperation 089027 New_line;
                            GamePrint "\n";
                            TraceOperation 089028 Rtrue;
                            PopFrame return_address_928;
                            JumpReturn: return_address_928, result: 1
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b929 = M[Offset(Offset(000751,Mul(Widen(b870),9)),6)];
                if (Equal(Widen(b929),71)) {
                  Let b930 = M[001395];
                  SetByte Offset(Offset(000751,Mul(Widen(b870),9)),6) LoByte(Widen(b930));
                  SetByte 001394 31;
                  Let b931 = M[001036];
                  SetByte 001395 LoByte(Widen(b931));
                  SetByte 001036 71;
                  TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
                  Let b932 = M[007908];
                  Let b933 = M[007909];
                  Let b934 = M[001862];
                  if (IsZero(Widen(b934))) {
                    SetByte 001862 b933;
                    Let b935 = M[Offset(Offset(000751,Mul(MakeHiLo(b932,b933),9)),6)];
                    SetByte 001863 LoByte(Widen(b935));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b932,b933),9)),6) 123;
                    TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                    Let b936 = M[007908];
                    Let b937 = M[007909];
                    Let b938 = M[002519];
                    if (IsZero(Widen(b938))) {
                      SetByte 002519 b937;
                      Let b939 = M[Offset(Offset(000751,Mul(MakeHiLo(b936,b937),9)),6)];
                      SetByte 002520 LoByte(Widen(b939));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b936,b937),9)),6) 196;
                      TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                      Let b940 = M[007908];
                      Let b941 = M[007909];
                      Let b942 = M[001367];
                      if (IsZero(Widen(b942))) {
                        SetByte 001367 b941;
                        Let b943 = M[Offset(Offset(000751,Mul(MakeHiLo(b940,b941),9)),6)];
                        SetByte 001368 LoByte(Widen(b943));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b940,b941),9)),6) 68;
                        TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                        GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                        TraceOperation 089026 New_line;
                        GamePrint "\n";
                        TraceOperation 089027 New_line;
                        GamePrint "\n";
                        TraceOperation 089028 Rtrue;
                        PopFrame return_address_944;
                        JumpReturn: return_address_944, result: 1
                      } else {
                        Let b945 = M[Offset(Offset(000751,Mul(Widen(b942),9)),6)];
                        if (Equal(Widen(b945),68)) {
                          Let b946 = M[001368];
                          SetByte Offset(Offset(000751,Mul(Widen(b942),9)),6) LoByte(Widen(b946));
                          SetByte 001367 b941;
                          Let b947 = M[Offset(Offset(000751,Mul(MakeHiLo(b940,b941),9)),6)];
                          SetByte 001368 LoByte(Widen(b947));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b940,b941),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_948;
                          JumpReturn: return_address_948, result: 1
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b949 = M[Offset(Offset(000751,Mul(Widen(b938),9)),6)];
                      if (Equal(Widen(b949),196)) {
                        Let b950 = M[002520];
                        SetByte Offset(Offset(000751,Mul(Widen(b938),9)),6) LoByte(Widen(b950));
                        SetByte 002519 b937;
                        Let b951 = M[Offset(Offset(000751,Mul(MakeHiLo(b936,b937),9)),6)];
                        SetByte 002520 LoByte(Widen(b951));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b936,b937),9)),6) 196;
                        TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                        Let b952 = M[007908];
                        Let b953 = M[007909];
                        Let b954 = M[001367];
                        if (IsZero(Widen(b954))) {
                          SetByte 001367 b953;
                          Let b955 = M[Offset(Offset(000751,Mul(MakeHiLo(b952,b953),9)),6)];
                          SetByte 001368 LoByte(Widen(b955));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b952,b953),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_956;
                          JumpReturn: return_address_956, result: 1
                        } else {
                          Let b957 = M[Offset(Offset(000751,Mul(Widen(b954),9)),6)];
                          if (Equal(Widen(b957),68)) {
                            Let b958 = M[001368];
                            SetByte Offset(Offset(000751,Mul(Widen(b954),9)),6) LoByte(Widen(b958));
                            SetByte 001367 b953;
                            Let b959 = M[Offset(Offset(000751,Mul(MakeHiLo(b952,b953),9)),6)];
                            SetByte 001368 LoByte(Widen(b959));
                            SetByte Offset(Offset(000751,Mul(MakeHiLo(b952,b953),9)),6) 68;
                            TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                            GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                            TraceOperation 089026 New_line;
                            GamePrint "\n";
                            TraceOperation 089027 New_line;
                            GamePrint "\n";
                            TraceOperation 089028 Rtrue;
                            PopFrame return_address_960;
                            JumpReturn: return_address_960, result: 1
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b961 = M[Offset(Offset(000751,Mul(Widen(b934),9)),6)];
                    if (Equal(Widen(b961),123)) {
                      Let b962 = M[001863];
                      SetByte Offset(Offset(000751,Mul(Widen(b934),9)),6) LoByte(Widen(b962));
                      SetByte 001862 b933;
                      Let b963 = M[Offset(Offset(000751,Mul(MakeHiLo(b932,b933),9)),6)];
                      SetByte 001863 LoByte(Widen(b963));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b932,b933),9)),6) 123;
                      TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
                      Let b964 = M[007908];
                      Let b965 = M[007909];
                      Let b966 = M[002519];
                      if (IsZero(Widen(b966))) {
                        SetByte 002519 b965;
                        Let b967 = M[Offset(Offset(000751,Mul(MakeHiLo(b964,b965),9)),6)];
                        SetByte 002520 LoByte(Widen(b967));
                        SetByte Offset(Offset(000751,Mul(MakeHiLo(b964,b965),9)),6) 196;
                        TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                        Let b968 = M[007908];
                        Let b969 = M[007909];
                        Let b970 = M[001367];
                        if (IsZero(Widen(b970))) {
                          SetByte 001367 b969;
                          Let b971 = M[Offset(Offset(000751,Mul(MakeHiLo(b968,b969),9)),6)];
                          SetByte 001368 LoByte(Widen(b971));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b968,b969),9)),6) 68;
                          TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                          GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                          TraceOperation 089026 New_line;
                          GamePrint "\n";
                          TraceOperation 089027 New_line;
                          GamePrint "\n";
                          TraceOperation 089028 Rtrue;
                          PopFrame return_address_972;
                          JumpReturn: return_address_972, result: 1
                        } else {
                          Let b973 = M[Offset(Offset(000751,Mul(Widen(b970),9)),6)];
                          if (Equal(Widen(b973),68)) {
                            Let b974 = M[001368];
                            SetByte Offset(Offset(000751,Mul(Widen(b970),9)),6) LoByte(Widen(b974));
                            SetByte 001367 b969;
                            Let b975 = M[Offset(Offset(000751,Mul(MakeHiLo(b968,b969),9)),6)];
                            SetByte 001368 LoByte(Widen(b975));
                            SetByte Offset(Offset(000751,Mul(MakeHiLo(b968,b969),9)),6) 68;
                            TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                            GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                            TraceOperation 089026 New_line;
                            GamePrint "\n";
                            TraceOperation 089027 New_line;
                            GamePrint "\n";
                            TraceOperation 089028 Rtrue;
                            PopFrame return_address_976;
                            JumpReturn: return_address_976, result: 1
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b977 = M[Offset(Offset(000751,Mul(Widen(b966),9)),6)];
                        if (Equal(Widen(b977),196)) {
                          Let b978 = M[002520];
                          SetByte Offset(Offset(000751,Mul(Widen(b966),9)),6) LoByte(Widen(b978));
                          SetByte 002519 b965;
                          Let b979 = M[Offset(Offset(000751,Mul(MakeHiLo(b964,b965),9)),6)];
                          SetByte 002520 LoByte(Widen(b979));
                          SetByte Offset(Offset(000751,Mul(MakeHiLo(b964,b965),9)),6) 196;
                          TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
                          Let b980 = M[007908];
                          Let b981 = M[007909];
                          Let b982 = M[001367];
                          if (IsZero(Widen(b982))) {
                            SetByte 001367 b981;
                            Let b983 = M[Offset(Offset(000751,Mul(MakeHiLo(b980,b981),9)),6)];
                            SetByte 001368 LoByte(Widen(b983));
                            SetByte Offset(Offset(000751,Mul(MakeHiLo(b980,b981),9)),6) 68;
                            TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                            GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                            TraceOperation 089026 New_line;
                            GamePrint "\n";
                            TraceOperation 089027 New_line;
                            GamePrint "\n";
                            TraceOperation 089028 Rtrue;
                            PopFrame return_address_984;
                            JumpReturn: return_address_984, result: 1
                          } else {
                            Let b985 = M[Offset(Offset(000751,Mul(Widen(b982),9)),6)];
                            if (Equal(Widen(b985),68)) {
                              Let b986 = M[001368];
                              SetByte Offset(Offset(000751,Mul(Widen(b982),9)),6) LoByte(Widen(b986));
                              SetByte 001367 b981;
                              Let b987 = M[Offset(Offset(000751,Mul(MakeHiLo(b980,b981),9)),6)];
                              SetByte 001368 LoByte(Widen(b987));
                              SetByte Offset(Offset(000751,Mul(MakeHiLo(b980,b981),9)),6) 68;
                              TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
                              GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
                              TraceOperation 089026 New_line;
                              GamePrint "\n";
                              TraceOperation 089027 New_line;
                              GamePrint "\n";
                              TraceOperation 089028 Rtrue;
                              PopFrame return_address_988;
                              JumpReturn: return_address_988, result: 1
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 089029:
  TraceOperation 089029 (Je [Var (Local 1),Con 6] (Branch F (Dloc 089046)));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 089033 (Test_attr (Con 76) (Con 4) (Branch F (Dloc 089046)));
    Let b1 = M[001435];
    if (TestBit(b1,3)) {
      TraceOperation 089037 New_line;
      GamePrint "\n";
      TraceOperation 089038 (Call (Floc 042734) [Con -10272] Sp);
      PushFrame 089038;
      SetLocal 1 -10272;
      JumpCall: 042734, #actuals: 1
    } else {
      Jump: 089046
    }
  } else {
    Jump: 089046
  }
LocReturn 089038:
  PushStack call_result;
  TraceOperation 089045 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 089046:
  TraceOperation 089046 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 089050 (Call (Floc 088650) [Con 76] Sp);
    PushFrame 089050;
    SetLocal 1 76;
    JumpCall: 088650, #actuals: 1
  } else {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  }
LocReturn 089050:
  PushStack call_result;
  TraceOperation 089056 (Print "west and southwest, and the ");
  GamePrint "west and southwest, and the ";
  TraceOperation 089073 (Print_obj (Con 77));
  Let b1 = M[001451];
  Let b2 = M[001452];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 089075 (Print_ret "'s front door is south of here.");
    GamePrint "'s front door is south of here.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 089075 (Print_ret "'s front door is south of here.");
    GamePrint "'s front door is south of here.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[557]--------------------------------------------------
LocRoutine 089094:
  MakeRoutineFrame 0;
  Jump: 089095
LocOp 089095:
  TraceOperation 089095 (Je [Var (Global 203),Con 38] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 089099 (Call (Floc 043620) [Con 16] Sp);
    PushFrame 089099;
    SetLocal 1 16;
    JumpCall: 043620, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 089099:
  PushStack call_result;
  TraceOperation 089105 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[558]--------------------------------------------------
LocRoutine 089106:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089109
LocOp 089109:
  TraceOperation 089109 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 089113 (Call (Floc 088650) [Con 74] Sp);
    PushFrame 089113;
    SetLocal 1 74;
    JumpCall: 088650, #actuals: 1
  } else {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  }
LocReturn 089113:
  PushStack call_result;
  TraceOperation 089119 (Print_ret "south and east.");
  GamePrint "south and east.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[559]--------------------------------------------------
LocRoutine 089130:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089133
LocOp 089133:
  TraceOperation 089133 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 089137 (Call (Floc 088650) [Con 73] Sp);
    PushFrame 089137;
    SetLocal 1 73;
    JumpCall: 088650, #actuals: 1
  } else {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  }
LocReturn 089137:
  PushStack call_result;
  TraceOperation 089143 (Print_ret "north and northeast.");
  GamePrint "north and northeast.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[560]--------------------------------------------------
LocRoutine 089158:
  MakeRoutineFrame 0;
  Jump: 089159
LocOp 089159:
  TraceOperation 089159 (Je [Var (Global 203),Con 57,Con 51] (Branch F (Dloc 089194)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),51))) {
    TraceOperation 089165 (Print_ret "You take a sip, and the room spins a little faster.");
    GamePrint "You take a sip, and the room spins a little faster.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 089194
  }
LocOp 089194:
  TraceOperation 089194 (Je [Var (Global 203),Con 112,Con 154] (Branch F (Dloc 089206)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),112),Equal(MakeHiLo(b1,b2),154))) {
    TraceOperation 089200 (Call (Floc 089406) [] Sp);
    PushFrame 089200;
    JumpCall: 089406, #actuals: 0
  } else {
    Jump: 089206
  }
LocReturn 089200:
  PushStack call_result;
  TraceOperation 089205 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 089206:
  TraceOperation 089206 (Je [Var (Global 203),Con 53] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 089210 (Call (Floc 089360) [] Sp);
    PushFrame 089210;
    JumpCall: 089360, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 089210:
  PushStack call_result;
  TraceOperation 089215 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[561]--------------------------------------------------
LocRoutine 089216:
  MakeRoutineFrame 0;
  Jump: 089217
LocOp 089217:
  TraceOperation 089217 (Je [Var (Global 203),Con 57,Con 56] (Branch F (Dloc 089294)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),56))) {
    TraceOperation 089224 (Print "You nibble at one of the hors d'oeuvres. It tastes ");
    GamePrint "You nibble at one of the hors d'oeuvres. It tastes ";
    TraceOperation 089255 (Random (Con 100) Sp);
    LetRandom random3 100;
    PushStack random3;
    TraceOperation 089259 (Jl (Con 40) (Var Sp) (Branch T (Dloc 089268)));
    PopStack popped4;
    if (LessThan(40,popped4)) {
      Jump: 089268
    } else {
      TraceOperation 089263 (Print_ret "okay.");
      GamePrint "okay.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 089294
  }
LocOp 089268:
  TraceOperation 089268 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 089272 (Jl (Con 50) (Var Sp) (Branch T (Dloc 089285)));
  PopStack popped2;
  if (LessThan(50,popped2)) {
    Jump: 089285
  } else {
    TraceOperation 089276 (Print_ret "delicious.");
    GamePrint "delicious.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 089285:
  TraceOperation 089285 (Print_ret "terrible.");
  GamePrint "terrible.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 089294:
  TraceOperation 089294 (Je [Var (Global 203),Con 154] (Branch F (Dloc 089304)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),154)) {
    TraceOperation 089298 (Call (Floc 089406) [] Sp);
    PushFrame 089298;
    JumpCall: 089406, #actuals: 0
  } else {
    Jump: 089304
  }
LocReturn 089298:
  PushStack call_result;
  TraceOperation 089303 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 089304:
  TraceOperation 089304 (Je [Var (Global 203),Con 43] (Branch F (Dloc 089349)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 089308 (Print_ret "More than three, which is as high as you can count in your condition.");
    GamePrint "More than three, which is as high as you can count in your condition.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 089349
  }
LocOp 089349:
  TraceOperation 089349 (Je [Var (Global 203),Con 53] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 089353 (Call (Floc 089360) [] Sp);
    PushFrame 089353;
    JumpCall: 089360, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 089353:
  PushStack call_result;
  TraceOperation 089358 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[562]--------------------------------------------------
LocRoutine 089360:
  MakeRoutineFrame 0;
  Jump: 089361
LocOp 089361:
  TraceOperation 089361 (Jz (Var (Global 96)) (Branch F (Dloc 089383)));
  Let b1 = M[008100];
  Let b2 = M[008101];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 089364 (Store (Con 112) (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    SetByte 008100 b3;
    SetByte 008101 b4;
    TraceOperation 089367 (Set_attr (Con 70) (Con 27));
    Let b5 = M[001384];
    SetByte 001384 SetBit(b5,4);
    TraceOperation 089370 (Call (Floc 022320) [Con -20734,Con 3] Sp);
    PushFrame 089370;
    SetLocal 1 -20734;
    SetLocal 2 3;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 089383
  }
LocReturn 089370:
  PushStack call_result;
  TraceOperation 089378 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  Jump: 089383
LocOp 089383:
  TraceOperation 089383 (Insert_obj (Var (Global 201)) (Var (Global 0)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b6));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
    TraceOperation 089386 (Je [Var (Global 203),Con 53] (Branch F (Dloc 089399)));
    Let b7 = M[008314];
    Let b8 = M[008315];
    if (Equal(MakeHiLo(b7,b8),53)) {
      TraceOperation 089390 (Print_ret "Dropped.");
      GamePrint "Dropped.\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    } else {
      Jump: 089399
    }
  } else {
    Let b10 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
      Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b11));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
      Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
      TraceOperation 089386 (Je [Var (Global 203),Con 53] (Branch F (Dloc 089399)));
      Let b13 = M[008314];
      Let b14 = M[008315];
      if (Equal(MakeHiLo(b13,b14),53)) {
        TraceOperation 089390 (Print_ret "Dropped.");
        GamePrint "Dropped.\n";
        PopFrame return_address_15;
        JumpReturn: return_address_15, result: 1
      } else {
        Jump: 089399
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 089399:
  TraceOperation 089399 (Print_ret "Thrown.");
  GamePrint "Thrown.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[563]--------------------------------------------------
LocRoutine 089406:
  MakeRoutineFrame 0;
  Jump: 089407
LocOp 089407:
  TraceOperation 089407 (Print "The hostess lets out a blood-chilling shriek. \"My new carpet!\" ");
  GamePrint "The hostess lets out a blood-chilling shriek. \"My new carpet!\" ";
  TraceOperation 089452 (Je [Var (Global 203),Con 154] (Branch F (Dloc 089485)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),154)) {
    TraceOperation 089456 (Print "Grabbing a shard from your broken ");
    GamePrint "Grabbing a shard from your broken ";
    TraceOperation 089477 (Print_obj (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 089479 (Print ", s");
      GamePrint ", s";
      TraceOperation 089482 (Jump 089488);
      Jump: 089488
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 089479 (Print ", s");
      GamePrint ", s";
      TraceOperation 089482 (Jump 089488);
      Jump: 089488
    }
  } else {
    Jump: 089485
  }
LocOp 089485:
  TraceOperation 089485 (Print "S");
  GamePrint "S";
  Jump: 089488
LocOp 089488:
  TraceOperation 089488 (Call (Floc 042734) [Con -10247] Sp);
  PushFrame 089488;
  SetLocal 1 -10247;
  JumpCall: 042734, #actuals: 1
LocReturn 089488:
  PushStack call_result;
  TraceOperation 089495 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[564]--------------------------------------------------
LocRoutine 089496:
  MakeRoutineFrame 0;
  Jump: 089497
LocOp 089497:
  TraceOperation 089497 (Je [Con 70,Var (Global 195)] (Branch F (Dloc 089560)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(70,MakeHiLo(b1,b2))) {
    TraceOperation 089502 (Je [Var (Global 203),Con 181] (Branch F (Dloc 089523)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),181)) {
      TraceOperation 089506 (Je [Var (Global 213),Con 4] (Branch F (Dloc 089523)));
      Let b5 = M[008334];
      Let b6 = M[008335];
      if (Equal(MakeHiLo(b5,b6),4)) {
        TraceOperation 089510 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 089513 (Call (Floc 040748) [] Sp);
        PushFrame 089513;
        JumpCall: 040748, #actuals: 0
      } else {
        Jump: 089523
      }
    } else {
      Jump: 089523
    }
  } else {
    Jump: 089560
  }
LocReturn 089513:
  PushStack call_result;
  TraceOperation 089518 (Store (Con 211) (Con 70));
  SetByte 008298 0;
  SetByte 008299 70;
  TraceOperation 089521 (Ret (Var (Global 195)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
LocOp 089523:
  TraceOperation 089523 (Je [Var (Global 203),Con 102] (Branch F (Dloc 089544)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),102)) {
    TraceOperation 089527 (Je [Var (Global 213),Con 4] (Branch F (Dloc 089544)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),4)) {
      TraceOperation 089531 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 089534 (Call (Floc 035052) [] Sp);
      PushFrame 089534;
      JumpCall: 035052, #actuals: 0
    } else {
      Jump: 089544
    }
  } else {
    Jump: 089544
  }
LocReturn 089534:
  PushStack call_result;
  TraceOperation 089539 (Store (Con 211) (Con 70));
  SetByte 008298 0;
  SetByte 008299 70;
  TraceOperation 089542 (Ret (Var (Global 195)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
LocOp 089544:
  TraceOperation 089544 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 089547 (Call (Floc 022042) [Con 75,Con 70] Sp);
  PushFrame 089547;
  SetLocal 1 75;
  SetLocal 2 70;
  JumpCall: 022042, #actuals: 2
LocReturn 089547:
  PushStack call_result;
  TraceOperation 089554 (Call (Floc 043634) [] Sp);
  PushFrame 089554;
  JumpCall: 043634, #actuals: 0
LocReturn 089554:
  PushStack call_result;
  TraceOperation 089559 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 089560:
  TraceOperation 089560 (Je [Var (Global 203),Con 150,Con 22,Con 75] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),150),Equal(MakeHiLo(b1,b2),22)),Equal(MakeHiLo(b1,b2),75))) {
    TraceOperation 089567 (Je [Var (Global 201),Con 70] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),70)) {
      TraceOperation 089571 (Print "The hostess is delighted to engage in ");
      GamePrint "The hostess is delighted to engage in ";
      TraceOperation 089594 (Print_obj (Con 148));
      Let b5 = M[002090];
      Let b6 = M[002091];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 089596 (Call (Floc 042734) [Con -10200] Sp);
        PushFrame 089596;
        SetLocal 1 -10200;
        JumpCall: 042734, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 089596 (Call (Floc 042734) [Con -10200] Sp);
        PushFrame 089596;
        SetLocal 1 -10200;
        JumpCall: 042734, #actuals: 1
      }
    } else {
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 0
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
LocReturn 089596:
  PushStack call_result;
  TraceOperation 089603 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[565]--------------------------------------------------
LocRoutine 089604:
  MakeRoutineFrame 0;
  Jump: 089605
LocOp 089605:
  TraceOperation 089605 (Call (Floc 022320) [Con -20734,Con -1] Sp);
  PushFrame 089605;
  SetLocal 1 -20734;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 089605:
  PushStack call_result;
  TraceOperation 089614 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 089619 (Jz (Var (Global 96)) (Branch F (Dloc 089638)));
  Let b2 = M[008100];
  Let b3 = M[008101];
  if (IsZero(MakeHiLo(b2,b3))) {
    TraceOperation 089622 (Clear_attr (Con 70) (Con 5));
    Let b4 = M[001381];
    SetByte 001381 ClearBit(b4,2);
    TraceOperation 089625 (Call (Floc 022340) [Con -20734] Sp);
    PushFrame 089625;
    SetLocal 1 -20734;
    JumpCall: 022340, #actuals: 1
  } else {
    Jump: 089638
  }
LocReturn 089625:
  PushStack call_result;
  TraceOperation 089632 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 089637 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 089638:
  TraceOperation 089638 (Insert_obj (Con 70) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001385];
  if (IsZero(Widen(b3))) {
    SetByte 001385 b2;
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
    SetByte 001386 LoByte(Widen(b4));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 70;
    TraceOperation 089641 (Insert_obj (Var (Global 96)) (Var (Global 0)));
    Let b5 = M[008100];
    Let b6 = M[008101];
    Let b7 = M[007908];
    Let b8 = M[007909];
    Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
    if (IsZero(Widen(b9))) {
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) b8;
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b10));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) b6;
      TraceOperation 089644 New_line;
      GamePrint "\n";
      TraceOperation 089645 (Test_attr (Con 70) (Con 5) (Branch F (Dloc 089712)));
      Let b11 = M[001381];
      if (TestBit(b11,2)) {
        TraceOperation 089650 (Store (Con 229) (Con 4));
        SetByte 008334 0;
        SetByte 008335 4;
        TraceOperation 089653 (Call (Floc 022320) [Con -14349,Con 2] Sp);
        PushFrame 089653;
        SetLocal 1 -14349;
        SetLocal 2 2;
        JumpCall: 022320, #actuals: 2
      } else {
        Jump: 089712
      }
    } else {
      Let b12 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
      if (Equal(Widen(b12),MakeHiLo(b5,b6))) {
        Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b13));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) b8;
        Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b14));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) b6;
        TraceOperation 089644 New_line;
        GamePrint "\n";
        TraceOperation 089645 (Test_attr (Con 70) (Con 5) (Branch F (Dloc 089712)));
        Let b15 = M[001381];
        if (TestBit(b15,2)) {
          TraceOperation 089650 (Store (Con 229) (Con 4));
          SetByte 008334 0;
          SetByte 008335 4;
          TraceOperation 089653 (Call (Floc 022320) [Con -14349,Con 2] Sp);
          PushFrame 089653;
          SetLocal 1 -14349;
          SetLocal 2 2;
          JumpCall: 022320, #actuals: 2
        } else {
          Jump: 089712
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b16 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b16),70)) {
      Let b17 = M[001386];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b17));
      SetByte 001385 b2;
      Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
      SetByte 001386 LoByte(Widen(b18));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 70;
      TraceOperation 089641 (Insert_obj (Var (Global 96)) (Var (Global 0)));
      Let b19 = M[008100];
      Let b20 = M[008101];
      Let b21 = M[007908];
      Let b22 = M[007909];
      Let b23 = M[Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),4)];
      if (IsZero(Widen(b23))) {
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),4) b22;
        Let b24 = M[Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),6)];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),5) LoByte(Widen(b24));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),6) b20;
        TraceOperation 089644 New_line;
        GamePrint "\n";
        TraceOperation 089645 (Test_attr (Con 70) (Con 5) (Branch F (Dloc 089712)));
        Let b25 = M[001381];
        if (TestBit(b25,2)) {
          TraceOperation 089650 (Store (Con 229) (Con 4));
          SetByte 008334 0;
          SetByte 008335 4;
          TraceOperation 089653 (Call (Floc 022320) [Con -14349,Con 2] Sp);
          PushFrame 089653;
          SetLocal 1 -14349;
          SetLocal 2 2;
          JumpCall: 022320, #actuals: 2
        } else {
          Jump: 089712
        }
      } else {
        Let b26 = M[Offset(Offset(000751,Mul(Widen(b23),9)),6)];
        if (Equal(Widen(b26),MakeHiLo(b19,b20))) {
          Let b27 = M[Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b23),9)),6) LoByte(Widen(b27));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),4) b22;
          Let b28 = M[Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),6)];
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),5) LoByte(Widen(b28));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),6) b20;
          TraceOperation 089644 New_line;
          GamePrint "\n";
          TraceOperation 089645 (Test_attr (Con 70) (Con 5) (Branch F (Dloc 089712)));
          Let b29 = M[001381];
          if (TestBit(b29,2)) {
            TraceOperation 089650 (Store (Con 229) (Con 4));
            SetByte 008334 0;
            SetByte 008335 4;
            TraceOperation 089653 (Call (Floc 022320) [Con -14349,Con 2] Sp);
            PushFrame 089653;
            SetLocal 1 -14349;
            SetLocal 2 2;
            JumpCall: 022320, #actuals: 2
          } else {
            Jump: 089712
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 089653:
  PushStack call_result;
  TraceOperation 089661 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 089666 (Print "\"Tricia dear,\" says the hostess insistently, \"don't you want your ");
  GamePrint "\"Tricia dear,\" says the hostess insistently, \"don't you want your ";
  TraceOperation 089705 (Print_obj (Var (Global 96)));
  Let b2 = M[008100];
  Let b3 = M[008101];
  Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7)];
  Let b5 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7),1)];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  if (IsZeroByte(b6)) {
    GamePrint "";
    TraceOperation 089707 (Print_ret "?\"");
    GamePrint "?\"\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
    TraceOperation 089707 (Print_ret "?\"");
    GamePrint "?\"\n";
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  }
LocOp 089712:
  TraceOperation 089712 (Set_attr (Con 70) (Con 5));
  Let b1 = M[001381];
  SetByte 001381 SetBit(b1,2);
  TraceOperation 089715 (Store (Con 207) (Var (Global 96)));
  Let b2 = M[008100];
  Let b3 = M[008101];
  SetByte 008290 b2;
  SetByte 008291 b3;
  TraceOperation 089718 (Set_attr (Var (Global 96)) (Con 27));
  Let b4 = M[008100];
  Let b5 = M[008101];
  Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3) SetBit(b6,4);
  TraceOperation 089721 (Print "The hostess, whom you've been avoiding all evening, scurries up with your ");
  GamePrint "The hostess, whom you've been avoiding all evening, scurries up with your ";
  TraceOperation 089762 (Print_obj (Var (Global 96)));
  Let b7 = M[008100];
  Let b8 = M[008101];
  Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),7)];
  Let b10 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),7),1)];
  Let b11 = M[Address(MakeHiLo(b9,b10))];
  if (IsZeroByte(b11)) {
    GamePrint "";
    TraceOperation 089764 (Print_ret ". \"Oh, hello Tricia, how lovely to see you, I think you dropped this, dear.\"");
    GamePrint ". \"Oh, hello Tricia, how lovely to see you, I think you dropped this, dear.\"\n";
    PopFrame return_address_12;
    JumpReturn: return_address_12, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
    TraceOperation 089764 (Print_ret ". \"Oh, hello Tricia, how lovely to see you, I think you dropped this, dear.\"");
    GamePrint ". \"Oh, hello Tricia, how lovely to see you, I think you dropped this, dear.\"\n";
    PopFrame return_address_13;
    JumpReturn: return_address_13, result: 1
  }
--[566]--------------------------------------------------
LocRoutine 089814:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089817
LocOp 089817:
  TraceOperation 089817 (Je [Var (Local 1),Con 2] (Branch F (Dloc 090013)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 089822 (Store (Con 91) (Con 1));
    SetByte 008058 0;
    SetByte 008059 1;
    TraceOperation 089825 (Store (Con 136) (Con 195));
    SetByte 008148 0;
    SetByte 008149 195;
    TraceOperation 089828 (Insert_obj (Con 195) (Con 169));
    Let b1 = M[002510];
    if (IsZero(Widen(b1))) {
      SetByte 002510 169;
      Let b2 = M[002278];
      SetByte 002511 LoByte(Widen(b2));
      SetByte 002278 195;
      TraceOperation 089831 (Insert_obj (Con 17) (Con 60));
      Let b3 = M[000908];
      if (IsZero(Widen(b3))) {
        SetByte 000908 60;
        Let b4 = M[001297];
        SetByte 000909 LoByte(Widen(b4));
        SetByte 001297 17;
        TraceOperation 089834 (Insert_obj (Con 59) (Con 60));
        Let b5 = M[001286];
        if (IsZero(Widen(b5))) {
          SetByte 001286 60;
          Let b6 = M[001297];
          SetByte 001287 LoByte(Widen(b6));
          SetByte 001297 59;
          TraceOperation 089837 (Clear_attr (Con 60) (Con 23));
          Let b7 = M[001293];
          SetByte 001293 ClearBit(b7,0);
          TraceOperation 089840 (Call (Floc 043644) [Con 31,Con 97] Sp);
          PushFrame 089840;
          SetLocal 1 31;
          SetLocal 2 97;
          JumpCall: 043644, #actuals: 2
        } else {
          Let b8 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
          if (Equal(Widen(b8),59)) {
            Let b9 = M[001287];
            SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b9));
            SetByte 001286 60;
            Let b10 = M[001297];
            SetByte 001287 LoByte(Widen(b10));
            SetByte 001297 59;
            TraceOperation 089837 (Clear_attr (Con 60) (Con 23));
            Let b11 = M[001293];
            SetByte 001293 ClearBit(b11,0);
            TraceOperation 089840 (Call (Floc 043644) [Con 31,Con 97] Sp);
            PushFrame 089840;
            SetLocal 1 31;
            SetLocal 2 97;
            JumpCall: 043644, #actuals: 2
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b12 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
        if (Equal(Widen(b12),17)) {
          Let b13 = M[000909];
          SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b13));
          SetByte 000908 60;
          Let b14 = M[001297];
          SetByte 000909 LoByte(Widen(b14));
          SetByte 001297 17;
          TraceOperation 089834 (Insert_obj (Con 59) (Con 60));
          Let b15 = M[001286];
          if (IsZero(Widen(b15))) {
            SetByte 001286 60;
            Let b16 = M[001297];
            SetByte 001287 LoByte(Widen(b16));
            SetByte 001297 59;
            TraceOperation 089837 (Clear_attr (Con 60) (Con 23));
            Let b17 = M[001293];
            SetByte 001293 ClearBit(b17,0);
            TraceOperation 089840 (Call (Floc 043644) [Con 31,Con 97] Sp);
            PushFrame 089840;
            SetLocal 1 31;
            SetLocal 2 97;
            JumpCall: 043644, #actuals: 2
          } else {
            Let b18 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
            if (Equal(Widen(b18),59)) {
              Let b19 = M[001287];
              SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b19));
              SetByte 001286 60;
              Let b20 = M[001297];
              SetByte 001287 LoByte(Widen(b20));
              SetByte 001297 59;
              TraceOperation 089837 (Clear_attr (Con 60) (Con 23));
              Let b21 = M[001293];
              SetByte 001293 ClearBit(b21,0);
              TraceOperation 089840 (Call (Floc 043644) [Con 31,Con 97] Sp);
              PushFrame 089840;
              SetLocal 1 31;
              SetLocal 2 97;
              JumpCall: 043644, #actuals: 2
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b22 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
      if (Equal(Widen(b22),195)) {
        Let b23 = M[002511];
        SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b23));
        SetByte 002510 169;
        Let b24 = M[002278];
        SetByte 002511 LoByte(Widen(b24));
        SetByte 002278 195;
        TraceOperation 089831 (Insert_obj (Con 17) (Con 60));
        Let b25 = M[000908];
        if (IsZero(Widen(b25))) {
          SetByte 000908 60;
          Let b26 = M[001297];
          SetByte 000909 LoByte(Widen(b26));
          SetByte 001297 17;
          TraceOperation 089834 (Insert_obj (Con 59) (Con 60));
          Let b27 = M[001286];
          if (IsZero(Widen(b27))) {
            SetByte 001286 60;
            Let b28 = M[001297];
            SetByte 001287 LoByte(Widen(b28));
            SetByte 001297 59;
            TraceOperation 089837 (Clear_attr (Con 60) (Con 23));
            Let b29 = M[001293];
            SetByte 001293 ClearBit(b29,0);
            TraceOperation 089840 (Call (Floc 043644) [Con 31,Con 97] Sp);
            PushFrame 089840;
            SetLocal 1 31;
            SetLocal 2 97;
            JumpCall: 043644, #actuals: 2
          } else {
            Let b30 = M[Offset(Offset(000751,Mul(Widen(b27),9)),6)];
            if (Equal(Widen(b30),59)) {
              Let b31 = M[001287];
              SetByte Offset(Offset(000751,Mul(Widen(b27),9)),6) LoByte(Widen(b31));
              SetByte 001286 60;
              Let b32 = M[001297];
              SetByte 001287 LoByte(Widen(b32));
              SetByte 001297 59;
              TraceOperation 089837 (Clear_attr (Con 60) (Con 23));
              Let b33 = M[001293];
              SetByte 001293 ClearBit(b33,0);
              TraceOperation 089840 (Call (Floc 043644) [Con 31,Con 97] Sp);
              PushFrame 089840;
              SetLocal 1 31;
              SetLocal 2 97;
              JumpCall: 043644, #actuals: 2
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b34 = M[Offset(Offset(000751,Mul(Widen(b25),9)),6)];
          if (Equal(Widen(b34),17)) {
            Let b35 = M[000909];
            SetByte Offset(Offset(000751,Mul(Widen(b25),9)),6) LoByte(Widen(b35));
            SetByte 000908 60;
            Let b36 = M[001297];
            SetByte 000909 LoByte(Widen(b36));
            SetByte 001297 17;
            TraceOperation 089834 (Insert_obj (Con 59) (Con 60));
            Let b37 = M[001286];
            if (IsZero(Widen(b37))) {
              SetByte 001286 60;
              Let b38 = M[001297];
              SetByte 001287 LoByte(Widen(b38));
              SetByte 001297 59;
              TraceOperation 089837 (Clear_attr (Con 60) (Con 23));
              Let b39 = M[001293];
              SetByte 001293 ClearBit(b39,0);
              TraceOperation 089840 (Call (Floc 043644) [Con 31,Con 97] Sp);
              PushFrame 089840;
              SetLocal 1 31;
              SetLocal 2 97;
              JumpCall: 043644, #actuals: 2
            } else {
              Let b40 = M[Offset(Offset(000751,Mul(Widen(b37),9)),6)];
              if (Equal(Widen(b40),59)) {
                Let b41 = M[001287];
                SetByte Offset(Offset(000751,Mul(Widen(b37),9)),6) LoByte(Widen(b41));
                SetByte 001286 60;
                Let b42 = M[001297];
                SetByte 001287 LoByte(Widen(b42));
                SetByte 001297 59;
                TraceOperation 089837 (Clear_attr (Con 60) (Con 23));
                Let b43 = M[001293];
                SetByte 001293 ClearBit(b43,0);
                TraceOperation 089840 (Call (Floc 043644) [Con 31,Con 97] Sp);
                PushFrame 089840;
                SetLocal 1 31;
                SetLocal 2 97;
                JumpCall: 043644, #actuals: 2
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 090013
  }
LocReturn 089840:
  PushStack call_result;
  TraceOperation 089847 (Insert_obj (Con 31) (Con 63));
  Let b1 = M[001034];
  if (IsZero(Widen(b1))) {
    SetByte 001034 63;
    Let b2 = M[001324];
    SetByte 001035 LoByte(Widen(b2));
    SetByte 001324 31;
    TraceOperation 089850 (Store (Con 107) (Con 57));
    SetByte 008090 0;
    SetByte 008091 57;
    TraceOperation 089853 (Call (Floc 022320) [Con -20422,Con 2] Sp);
    PushFrame 089853;
    SetLocal 1 -20422;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b3),31)) {
      Let b4 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b4));
      SetByte 001034 63;
      Let b5 = M[001324];
      SetByte 001035 LoByte(Widen(b5));
      SetByte 001324 31;
      TraceOperation 089850 (Store (Con 107) (Con 57));
      SetByte 008090 0;
      SetByte 008091 57;
      TraceOperation 089853 (Call (Floc 022320) [Con -20422,Con 2] Sp);
      PushFrame 089853;
      SetLocal 1 -20422;
      SetLocal 2 2;
      JumpCall: 022320, #actuals: 2
    } else {
      Error: unlink/loop
    }
  }
LocReturn 089853:
  PushStack call_result;
  TraceOperation 089861 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 089866 (Print "The pain at the back of your eyes is from partying until very late last night, and both your heads are suffering the worst hangover you've ever experienced. You remember formulating a plan to steal ");
  GamePrint "The pain at the back of your eyes is from partying until very late last night, and both your heads are suffering the worst hangover you've ever experienced. You remember formulating a plan to steal ";
  TraceOperation 089977 (Print_obj (Con 220));
  Let b2 = M[002738];
  Let b3 = M[002739];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 089979 (Print ", but you can't for the life of you remember any details.");
    GamePrint ", but you can't for the life of you remember any details.";
    TraceOperation 090010 New_line;
    GamePrint "\n";
    TraceOperation 090011 New_line;
    GamePrint "\n";
    TraceOperation 090012 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 089979 (Print ", but you can't for the life of you remember any details.");
    GamePrint ", but you can't for the life of you remember any details.";
    TraceOperation 090010 New_line;
    GamePrint "\n";
    TraceOperation 090011 New_line;
    GamePrint "\n";
    TraceOperation 090012 Rtrue;
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  }
LocOp 090013:
  TraceOperation 090013 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 090017 (Jz (Var (Global 90)) (Branch T (Dloc 090091)));
    Let b1 = M[008088];
    Let b2 = M[008089];
    if (IsZero(MakeHiLo(b1,b2))) {
      Jump: 090091
    } else {
      TraceOperation 090021 (Print "The boat is resting atop a plume of water. The dais for the dedication ceremonies for ");
      GamePrint "The boat is resting atop a plume of water. The dais for the dedication ceremonies for ";
      TraceOperation 090070 (Print_obj (Con 220));
      Let b3 = M[002738];
      Let b4 = M[002739];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      if (IsZeroByte(b5)) {
        GamePrint "";
        TraceOperation 090072 (Print_ret " lies immediately north.");
        GamePrint " lies immediately north.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
        TraceOperation 090072 (Print_ret " lies immediately north.");
        GamePrint " lies immediately north.\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      }
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocOp 090091:
  TraceOperation 090091 (Print "You are piloting the ");
  GamePrint "You are piloting the ";
  TraceOperation 090102 (Print_obj (Con 64));
  Let b1 = M[001334];
  Let b2 = M[001335];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 090104 (Print ", which features very simple controls, toward the island of France (Footnote 3), where the dedication ceremonies for ");
    GamePrint ", which features very simple controls, toward the island of France (Footnote 3), where the dedication ceremonies for ";
    TraceOperation 090165 (Print_obj (Con 220));
    Let b4 = M[002738];
    Let b5 = M[002739];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 090167 (Print " will occur. You are currently steering the boat toward");
      GamePrint " will occur. You are currently steering the boat toward";
      TraceOperation 090194 (Je [Var (Global 91),Con 57] (Branch F (Dloc 090218)));
      Let b7 = M[008090];
      Let b8 = M[008091];
      if (Equal(MakeHiLo(b7,b8),57)) {
        TraceOperation 090198 (Print " a ");
        GamePrint " a ";
        TraceOperation 090201 (Print_obj (Con 57));
        Let b9 = M[001271];
        Let b10 = M[001272];
        Let b11 = M[Address(MakeHiLo(b9,b10))];
        if (IsZeroByte(b11)) {
          GamePrint "";
          TraceOperation 090203 (Print " between ");
          GamePrint " between ";
          TraceOperation 090206 (Print_obj (Con 55));
          Let b12 = M[001253];
          Let b13 = M[001254];
          Let b14 = M[Address(MakeHiLo(b12,b13))];
          if (IsZeroByte(b14)) {
            GamePrint "";
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b15 = M[001262];
            Let b16 = M[001263];
            Let b17 = M[Address(MakeHiLo(b15,b16))];
            if (IsZeroByte(b17)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_18;
              JumpReturn: return_address_18, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b15,b16)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_19;
              JumpReturn: return_address_19, result: 1
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b12,b13)),1));
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b20 = M[001262];
            Let b21 = M[001263];
            Let b22 = M[Address(MakeHiLo(b20,b21))];
            if (IsZeroByte(b22)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_23;
              JumpReturn: return_address_23, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b20,b21)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_24;
              JumpReturn: return_address_24, result: 1
            }
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
          TraceOperation 090203 (Print " between ");
          GamePrint " between ";
          TraceOperation 090206 (Print_obj (Con 55));
          Let b25 = M[001253];
          Let b26 = M[001254];
          Let b27 = M[Address(MakeHiLo(b25,b26))];
          if (IsZeroByte(b27)) {
            GamePrint "";
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b28 = M[001262];
            Let b29 = M[001263];
            Let b30 = M[Address(MakeHiLo(b28,b29))];
            if (IsZeroByte(b30)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_31;
              JumpReturn: return_address_31, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b28,b29)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_32;
              JumpReturn: return_address_32, result: 1
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b25,b26)),1));
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b33 = M[001262];
            Let b34 = M[001263];
            Let b35 = M[Address(MakeHiLo(b33,b34))];
            if (IsZeroByte(b35)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_36;
              JumpReturn: return_address_36, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b33,b34)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_37;
              JumpReturn: return_address_37, result: 1
            }
          }
        }
      } else {
        Jump: 090218
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 090167 (Print " will occur. You are currently steering the boat toward");
      GamePrint " will occur. You are currently steering the boat toward";
      TraceOperation 090194 (Je [Var (Global 91),Con 57] (Branch F (Dloc 090218)));
      Let b38 = M[008090];
      Let b39 = M[008091];
      if (Equal(MakeHiLo(b38,b39),57)) {
        TraceOperation 090198 (Print " a ");
        GamePrint " a ";
        TraceOperation 090201 (Print_obj (Con 57));
        Let b40 = M[001271];
        Let b41 = M[001272];
        Let b42 = M[Address(MakeHiLo(b40,b41))];
        if (IsZeroByte(b42)) {
          GamePrint "";
          TraceOperation 090203 (Print " between ");
          GamePrint " between ";
          TraceOperation 090206 (Print_obj (Con 55));
          Let b43 = M[001253];
          Let b44 = M[001254];
          Let b45 = M[Address(MakeHiLo(b43,b44))];
          if (IsZeroByte(b45)) {
            GamePrint "";
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b46 = M[001262];
            Let b47 = M[001263];
            Let b48 = M[Address(MakeHiLo(b46,b47))];
            if (IsZeroByte(b48)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_49;
              JumpReturn: return_address_49, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b46,b47)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_50;
              JumpReturn: return_address_50, result: 1
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b43,b44)),1));
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b51 = M[001262];
            Let b52 = M[001263];
            Let b53 = M[Address(MakeHiLo(b51,b52))];
            if (IsZeroByte(b53)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_54;
              JumpReturn: return_address_54, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b51,b52)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_55;
              JumpReturn: return_address_55, result: 1
            }
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b40,b41)),1));
          TraceOperation 090203 (Print " between ");
          GamePrint " between ";
          TraceOperation 090206 (Print_obj (Con 55));
          Let b56 = M[001253];
          Let b57 = M[001254];
          Let b58 = M[Address(MakeHiLo(b56,b57))];
          if (IsZeroByte(b58)) {
            GamePrint "";
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b59 = M[001262];
            Let b60 = M[001263];
            Let b61 = M[Address(MakeHiLo(b59,b60))];
            if (IsZeroByte(b61)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_62;
              JumpReturn: return_address_62, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b59,b60)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_63;
              JumpReturn: return_address_63, result: 1
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b56,b57)),1));
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b64 = M[001262];
            Let b65 = M[001263];
            Let b66 = M[Address(MakeHiLo(b64,b65))];
            if (IsZeroByte(b66)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_67;
              JumpReturn: return_address_67, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b64,b65)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_68;
              JumpReturn: return_address_68, result: 1
            }
          }
        }
      } else {
        Jump: 090218
      }
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 090104 (Print ", which features very simple controls, toward the island of France (Footnote 3), where the dedication ceremonies for ");
    GamePrint ", which features very simple controls, toward the island of France (Footnote 3), where the dedication ceremonies for ";
    TraceOperation 090165 (Print_obj (Con 220));
    Let b69 = M[002738];
    Let b70 = M[002739];
    Let b71 = M[Address(MakeHiLo(b69,b70))];
    if (IsZeroByte(b71)) {
      GamePrint "";
      TraceOperation 090167 (Print " will occur. You are currently steering the boat toward");
      GamePrint " will occur. You are currently steering the boat toward";
      TraceOperation 090194 (Je [Var (Global 91),Con 57] (Branch F (Dloc 090218)));
      Let b72 = M[008090];
      Let b73 = M[008091];
      if (Equal(MakeHiLo(b72,b73),57)) {
        TraceOperation 090198 (Print " a ");
        GamePrint " a ";
        TraceOperation 090201 (Print_obj (Con 57));
        Let b74 = M[001271];
        Let b75 = M[001272];
        Let b76 = M[Address(MakeHiLo(b74,b75))];
        if (IsZeroByte(b76)) {
          GamePrint "";
          TraceOperation 090203 (Print " between ");
          GamePrint " between ";
          TraceOperation 090206 (Print_obj (Con 55));
          Let b77 = M[001253];
          Let b78 = M[001254];
          Let b79 = M[Address(MakeHiLo(b77,b78))];
          if (IsZeroByte(b79)) {
            GamePrint "";
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b80 = M[001262];
            Let b81 = M[001263];
            Let b82 = M[Address(MakeHiLo(b80,b81))];
            if (IsZeroByte(b82)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_83;
              JumpReturn: return_address_83, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b80,b81)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_84;
              JumpReturn: return_address_84, result: 1
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b77,b78)),1));
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b85 = M[001262];
            Let b86 = M[001263];
            Let b87 = M[Address(MakeHiLo(b85,b86))];
            if (IsZeroByte(b87)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_88;
              JumpReturn: return_address_88, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b85,b86)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_89;
              JumpReturn: return_address_89, result: 1
            }
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b74,b75)),1));
          TraceOperation 090203 (Print " between ");
          GamePrint " between ";
          TraceOperation 090206 (Print_obj (Con 55));
          Let b90 = M[001253];
          Let b91 = M[001254];
          Let b92 = M[Address(MakeHiLo(b90,b91))];
          if (IsZeroByte(b92)) {
            GamePrint "";
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b93 = M[001262];
            Let b94 = M[001263];
            Let b95 = M[Address(MakeHiLo(b93,b94))];
            if (IsZeroByte(b95)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_96;
              JumpReturn: return_address_96, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b93,b94)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_97;
              JumpReturn: return_address_97, result: 1
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b90,b91)),1));
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b98 = M[001262];
            Let b99 = M[001263];
            Let b100 = M[Address(MakeHiLo(b98,b99))];
            if (IsZeroByte(b100)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_101;
              JumpReturn: return_address_101, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b98,b99)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_102;
              JumpReturn: return_address_102, result: 1
            }
          }
        }
      } else {
        Jump: 090218
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b69,b70)),1));
      TraceOperation 090167 (Print " will occur. You are currently steering the boat toward");
      GamePrint " will occur. You are currently steering the boat toward";
      TraceOperation 090194 (Je [Var (Global 91),Con 57] (Branch F (Dloc 090218)));
      Let b103 = M[008090];
      Let b104 = M[008091];
      if (Equal(MakeHiLo(b103,b104),57)) {
        TraceOperation 090198 (Print " a ");
        GamePrint " a ";
        TraceOperation 090201 (Print_obj (Con 57));
        Let b105 = M[001271];
        Let b106 = M[001272];
        Let b107 = M[Address(MakeHiLo(b105,b106))];
        if (IsZeroByte(b107)) {
          GamePrint "";
          TraceOperation 090203 (Print " between ");
          GamePrint " between ";
          TraceOperation 090206 (Print_obj (Con 55));
          Let b108 = M[001253];
          Let b109 = M[001254];
          Let b110 = M[Address(MakeHiLo(b108,b109))];
          if (IsZeroByte(b110)) {
            GamePrint "";
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b111 = M[001262];
            Let b112 = M[001263];
            Let b113 = M[Address(MakeHiLo(b111,b112))];
            if (IsZeroByte(b113)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_114;
              JumpReturn: return_address_114, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b111,b112)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_115;
              JumpReturn: return_address_115, result: 1
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b108,b109)),1));
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b116 = M[001262];
            Let b117 = M[001263];
            Let b118 = M[Address(MakeHiLo(b116,b117))];
            if (IsZeroByte(b118)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_119;
              JumpReturn: return_address_119, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b116,b117)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_120;
              JumpReturn: return_address_120, result: 1
            }
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b105,b106)),1));
          TraceOperation 090203 (Print " between ");
          GamePrint " between ";
          TraceOperation 090206 (Print_obj (Con 55));
          Let b121 = M[001253];
          Let b122 = M[001254];
          Let b123 = M[Address(MakeHiLo(b121,b122))];
          if (IsZeroByte(b123)) {
            GamePrint "";
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b124 = M[001262];
            Let b125 = M[001263];
            Let b126 = M[Address(MakeHiLo(b124,b125))];
            if (IsZeroByte(b126)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_127;
              JumpReturn: return_address_127, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b124,b125)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_128;
              JumpReturn: return_address_128, result: 1
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b121,b122)),1));
            TraceOperation 090208 (Print " and a ");
            GamePrint " and a ";
            TraceOperation 090213 (Print_obj (Con 56));
            Let b129 = M[001262];
            Let b130 = M[001263];
            Let b131 = M[Address(MakeHiLo(b129,b130))];
            if (IsZeroByte(b131)) {
              GamePrint "";
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_132;
              JumpReturn: return_address_132, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b129,b130)),1));
              TraceOperation 090215 (Print_ret ".");
              GamePrint ".\n";
              PopFrame return_address_133;
              JumpReturn: return_address_133, result: 1
            }
          }
        }
      } else {
        Jump: 090218
      }
    }
  }
LocOp 090218:
  TraceOperation 090218 (Call (Floc 043738) [Var (Global 91)] Sp);
  Let b1 = M[008090];
  Let b2 = M[008091];
  PushFrame 090218;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 090218:
  PushStack call_result;
  TraceOperation 090224 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[567]--------------------------------------------------
LocRoutine 090228:
  MakeRoutineFrame 0;
  Jump: 090229
LocOp 090229:
  TraceOperation 090229 (Inc (Con 108));
  Let b1 = M[008092];
  Let b2 = M[008093];
  SetByte 008092 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008093 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 090231 (Call (Floc 022320) [Con -20422,Con -1] Sp);
  PushFrame 090231;
  SetLocal 1 -20422;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 090231:
  PushStack call_result;
  TraceOperation 090240 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 090245 (Je [Var (Global 91),Con 55,Con 56] (Branch F (Dloc 090489)));
  Let b2 = M[008090];
  Let b3 = M[008091];
  if (LogOr(Equal(MakeHiLo(b2,b3),55),Equal(MakeHiLo(b2,b3),56))) {
    TraceOperation 090252 (Inc (Con 109));
    Let b4 = M[008094];
    Let b5 = M[008095];
    SetByte 008094 HiByte(Add(MakeHiLo(b4,b5),1));
    SetByte 008095 LoByte(Add(MakeHiLo(b4,b5),1));
    TraceOperation 090254 (Je [Var (Global 93),Con 4] (Branch F (Dloc 090489)));
    Let b6 = M[008094];
    Let b7 = M[008095];
    if (Equal(MakeHiLo(b6,b7),4)) {
      TraceOperation 090259 (Store (Con 106) (Con 1));
      SetByte 008088 0;
      SetByte 008089 1;
      TraceOperation 090262 (Call (Floc 022340) [Con -20422] Sp);
      PushFrame 090262;
      SetLocal 1 -20422;
      JumpCall: 022340, #actuals: 1
    } else {
      Jump: 090489
    }
  } else {
    Jump: 090489
  }
LocReturn 090262:
  PushStack call_result;
  TraceOperation 090269 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 090274 New_line;
  GamePrint "\n";
  TraceOperation 090275 (Print "Suddenly, the autopilot leaps to life, steering the boat away from the ");
  GamePrint "Suddenly, the autopilot leaps to life, steering the boat away from the ";
  TraceOperation 090318 (Print_obj (Var (Global 91)));
  Let b2 = M[008090];
  Let b3 = M[008091];
  Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7)];
  Let b5 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7),1)];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  if (IsZeroByte(b6)) {
    GamePrint "";
    TraceOperation 090320 (Print ". The crowd gathered for the dedication oohs and aahs as the boat swerves through the ");
    GamePrint ". The crowd gathered for the dedication oohs and aahs as the boat swerves through the ";
    TraceOperation 090365 (Print_obj (Con 57));
    Let b7 = M[001271];
    Let b8 = M[001272];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    if (IsZeroByte(b9)) {
      GamePrint "";
      TraceOperation 090367 (Print ". As it reaches the base of the ");
      GamePrint ". As it reaches the base of the ";
      TraceOperation 090386 (Print_obj (Con 55));
      Let b10 = M[001253];
      Let b11 = M[001254];
      Let b12 = M[Address(MakeHiLo(b10,b11))];
      if (IsZeroByte(b12)) {
        GamePrint "";
        TraceOperation 090388 (Print_ret " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.");
        GamePrint " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.\n";
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b10,b11)),1));
        TraceOperation 090388 (Print_ret " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.");
        GamePrint " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.\n";
        PopFrame return_address_14;
        JumpReturn: return_address_14, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
      TraceOperation 090367 (Print ". As it reaches the base of the ");
      GamePrint ". As it reaches the base of the ";
      TraceOperation 090386 (Print_obj (Con 55));
      Let b15 = M[001253];
      Let b16 = M[001254];
      Let b17 = M[Address(MakeHiLo(b15,b16))];
      if (IsZeroByte(b17)) {
        GamePrint "";
        TraceOperation 090388 (Print_ret " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.");
        GamePrint " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.\n";
        PopFrame return_address_18;
        JumpReturn: return_address_18, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b15,b16)),1));
        TraceOperation 090388 (Print_ret " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.");
        GamePrint " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.\n";
        PopFrame return_address_19;
        JumpReturn: return_address_19, result: 1
      }
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
    TraceOperation 090320 (Print ". The crowd gathered for the dedication oohs and aahs as the boat swerves through the ");
    GamePrint ". The crowd gathered for the dedication oohs and aahs as the boat swerves through the ";
    TraceOperation 090365 (Print_obj (Con 57));
    Let b20 = M[001271];
    Let b21 = M[001272];
    Let b22 = M[Address(MakeHiLo(b20,b21))];
    if (IsZeroByte(b22)) {
      GamePrint "";
      TraceOperation 090367 (Print ". As it reaches the base of the ");
      GamePrint ". As it reaches the base of the ";
      TraceOperation 090386 (Print_obj (Con 55));
      Let b23 = M[001253];
      Let b24 = M[001254];
      Let b25 = M[Address(MakeHiLo(b23,b24))];
      if (IsZeroByte(b25)) {
        GamePrint "";
        TraceOperation 090388 (Print_ret " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.");
        GamePrint " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.\n";
        PopFrame return_address_26;
        JumpReturn: return_address_26, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b23,b24)),1));
        TraceOperation 090388 (Print_ret " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.");
        GamePrint " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.\n";
        PopFrame return_address_27;
        JumpReturn: return_address_27, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b20,b21)),1));
      TraceOperation 090367 (Print ". As it reaches the base of the ");
      GamePrint ". As it reaches the base of the ";
      TraceOperation 090386 (Print_obj (Con 55));
      Let b28 = M[001253];
      Let b29 = M[001254];
      Let b30 = M[Address(MakeHiLo(b28,b29))];
      if (IsZeroByte(b30)) {
        GamePrint "";
        TraceOperation 090388 (Print_ret " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.");
        GamePrint " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.\n";
        PopFrame return_address_31;
        JumpReturn: return_address_31, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b28,b29)),1));
        TraceOperation 090388 (Print_ret " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.");
        GamePrint " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.\n";
        PopFrame return_address_32;
        JumpReturn: return_address_32, result: 1
      }
    }
  }
LocOp 090489:
  TraceOperation 090489 (Je [Var (Global 203),Con 110,Con 111] (Branch T Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),110),Equal(MakeHiLo(b1,b2),111))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 090495 (Je [Var (Global 203),Con 16] (Branch F (Dloc 090505)));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),16)) {
      TraceOperation 090499 (Je [Var (Global 232),Con 111,Con 110] (Branch T Dfalse));
      Let b6 = M[008372];
      Let b7 = M[008373];
      if (LogOr(Equal(MakeHiLo(b6,b7),111),Equal(MakeHiLo(b6,b7),110))) {
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      } else {
        Jump: 090505
      }
    } else {
      Jump: 090505
    }
  }
LocOp 090505:
  TraceOperation 090505 New_line;
  GamePrint "\n";
  TraceOperation 090506 (Jl (Var (Global 92)) (Con 7) (Branch F (Dloc 090532)));
  Let b1 = M[008092];
  Let b2 = M[008093];
  if (LessThan(MakeHiLo(b1,b2),7)) {
    TraceOperation 090510 (Print "You continue to steer toward the ");
    GamePrint "You continue to steer toward the ";
    TraceOperation 090527 (Print_obj (Var (Global 91)));
    Let b3 = M[008090];
    Let b4 = M[008091];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 090529 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 090529 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    Jump: 090532
  }
LocOp 090532:
  TraceOperation 090532 (Call (Floc 022340) [Con -20422] Sp);
  PushFrame 090532;
  SetLocal 1 -20422;
  JumpCall: 022340, #actuals: 1
LocReturn 090532:
  PushStack call_result;
  TraceOperation 090539 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 090544 (Print "You almost make it through the ");
  GamePrint "You almost make it through the ";
  TraceOperation 090559 (Print_obj (Con 57));
  Let b2 = M[001271];
  Let b3 = M[001272];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 090561 (Print " but the turbulent waters push the boat toward the rocks. The ");
    GamePrint " but the turbulent waters push the boat toward the rocks. The ";
    TraceOperation 090594 (Print_obj (Con 58));
    Let b5 = M[001280];
    Let b6 = M[001281];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 090596 (Print " lights up and an ");
      GamePrint " lights up and an ";
      TraceOperation 090609 (Print_paddr (Var (Global 13)));
      Let b8 = M[007934];
      Let b9 = M[007935];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b8,b9)));
      TraceOperation 090611 (Call (Floc 042734) [Con -10177] Sp);
      PushFrame 090611;
      SetLocal 1 -10177;
      JumpCall: 042734, #actuals: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 090596 (Print " lights up and an ");
      GamePrint " lights up and an ";
      TraceOperation 090609 (Print_paddr (Var (Global 13)));
      Let b10 = M[007934];
      Let b11 = M[007935];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
      TraceOperation 090611 (Call (Floc 042734) [Con -10177] Sp);
      PushFrame 090611;
      SetLocal 1 -10177;
      JumpCall: 042734, #actuals: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 090561 (Print " but the turbulent waters push the boat toward the rocks. The ");
    GamePrint " but the turbulent waters push the boat toward the rocks. The ";
    TraceOperation 090594 (Print_obj (Con 58));
    Let b12 = M[001280];
    Let b13 = M[001281];
    Let b14 = M[Address(MakeHiLo(b12,b13))];
    if (IsZeroByte(b14)) {
      GamePrint "";
      TraceOperation 090596 (Print " lights up and an ");
      GamePrint " lights up and an ";
      TraceOperation 090609 (Print_paddr (Var (Global 13)));
      Let b15 = M[007934];
      Let b16 = M[007935];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b15,b16)));
      TraceOperation 090611 (Call (Floc 042734) [Con -10177] Sp);
      PushFrame 090611;
      SetLocal 1 -10177;
      JumpCall: 042734, #actuals: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b12,b13)),1));
      TraceOperation 090596 (Print " lights up and an ");
      GamePrint " lights up and an ";
      TraceOperation 090609 (Print_paddr (Var (Global 13)));
      Let b17 = M[007934];
      Let b18 = M[007935];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b17,b18)));
      TraceOperation 090611 (Call (Floc 042734) [Con -10177] Sp);
      PushFrame 090611;
      SetLocal 1 -10177;
      JumpCall: 042734, #actuals: 1
    }
  }
LocReturn 090611:
  PushStack call_result;
  TraceOperation 090618 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[568]--------------------------------------------------
LocRoutine 090620:
  MakeRoutineFrame 0;
  Jump: 090621
LocOp 090621:
  TraceOperation 090621 (Je [Var (Global 203),Con 111] (Branch F (Dloc 090761)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),111)) {
    TraceOperation 090626 (Je [Var (Global 201),Con 64] (Branch F (Dloc 090761)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),64)) {
      TraceOperation 090631 (Jz (Var (Global 90)) (Branch T (Dloc 090659)));
      Let b5 = M[008088];
      Let b6 = M[008089];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 090659
      } else {
        TraceOperation 090634 (Print_ret "You've already reached your destination!");
        GamePrint "You've already reached your destination!\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      }
    } else {
      Jump: 090761
    }
  } else {
    Jump: 090761
  }
LocOp 090659:
  TraceOperation 090659 (Je [Var (Global 202),Var (Global 91)] (Branch F (Dloc 090689)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008090];
  Let b4 = M[008091];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 090663 (Print "You already ARE steering the boat toward the ");
    GamePrint "You already ARE steering the boat toward the ";
    TraceOperation 090684 (Print_obj (Var (Global 91)));
    Let b5 = M[008090];
    Let b6 = M[008091];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7)];
    Let b8 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7),1)];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    if (IsZeroByte(b9)) {
      GamePrint "";
      TraceOperation 090686 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_10;
      JumpReturn: return_address_10, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
      TraceOperation 090686 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 1
    }
  } else {
    Jump: 090689
  }
LocOp 090689:
  TraceOperation 090689 (Je [Var (Global 202),Con 57,Con 56,Con 55] (Branch T (Dloc 090723)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),56)),Equal(MakeHiLo(b1,b2),55))) {
    Jump: 090723
  } else {
    TraceOperation 090696 (Print "You can't steer the boat toward");
    GamePrint "You can't steer the boat toward";
    TraceOperation 090713 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame 090713;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    JumpCall: 043738, #actuals: 2
  }
LocReturn 090713:
  PushStack call_result;
  TraceOperation 090720 (Print_ret "!");
  GamePrint "!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 090723:
  TraceOperation 090723 (Store (Con 107) (Var (Global 202)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  SetByte 008090 b1;
  SetByte 008091 b2;
  TraceOperation 090726 (Jg (Var (Global 92)) (Con 3) (Branch F (Dloc 090733)));
  Let b3 = M[008092];
  Let b4 = M[008093];
  if (GreaterThan(MakeHiLo(b3,b4),3)) {
    TraceOperation 090730 (Store (Con 108) (Con 3));
    SetByte 008092 0;
    SetByte 008093 3;
    Jump: 090733
  } else {
    Jump: 090733
  }
LocOp 090733:
  TraceOperation 090733 (Print "The boat is now heading straight at the ");
  GamePrint "The boat is now heading straight at the ";
  TraceOperation 090756 (Print_obj (Var (Global 91)));
  Let b1 = M[008090];
  Let b2 = M[008091];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 090758 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 090758 (Print_ret ".");
    GamePrint ".\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 090761:
  TraceOperation 090761 (Je [Var (Global 203),Con 48,Con 86,Con 59] (Branch T (Dloc 090772)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),86)),Equal(MakeHiLo(b1,b2),59))) {
    Jump: 090772
  } else {
    TraceOperation 090768 (Je [Var (Global 203),Con 38] (Branch F Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),38)) {
      Jump: 090772
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  }
LocOp 090772:
  TraceOperation 090772 (Jz (Var (Global 90)) (Branch T (Dloc 090782)));
  Let b1 = M[008088];
  Let b2 = M[008089];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 090782
  } else {
    TraceOperation 090775 (Call (Floc 043620) [Con 17] Sp);
    PushFrame 090775;
    SetLocal 1 17;
    JumpCall: 043620, #actuals: 1
  }
LocReturn 090775:
  PushStack call_result;
  TraceOperation 090781 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 090782:
  TraceOperation 090782 (Print_paddr (Var (Global 16)));
  Let b1 = M[007940];
  Let b2 = M[007941];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 090784 New_line;
  GamePrint "\n";
  TraceOperation 090785 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[569]--------------------------------------------------
LocRoutine 090786:
  MakeRoutineFrame 0;
  Jump: 090787
LocOp 090787:
  TraceOperation 090787 (Je [Var (Global 203),Con 28,Con 38] (Branch F (Dloc 090797)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),28),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 090793 (Print_paddr (Var (Global 16)));
    Let b3 = M[007940];
    Let b4 = M[007941];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 090795 New_line;
    GamePrint "\n";
    TraceOperation 090796 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 090797
  }
LocOp 090797:
  TraceOperation 090797 (Je [Var (Global 203),Con 154,Con 46] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),46))) {
    TraceOperation 090803 (Je [Var (Global 202),Con 48] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),48)) {
      TraceOperation 090807 (Insert_obj (Var (Global 201)) (Con 219));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      if (IsZero(Widen(b7))) {
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) 219;
        Let b8 = M[002728];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b8));
        SetByte 002728 b6;
        TraceOperation 090810 (Print_ret "Glub...");
        GamePrint "Glub...\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      } else {
        Let b10 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
        if (Equal(Widen(b10),MakeHiLo(b5,b6))) {
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b11));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) 219;
          Let b12 = M[002728];
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b12));
          SetByte 002728 b6;
          TraceOperation 090810 (Print_ret "Glub...");
          GamePrint "Glub...\n";
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      PopFrame return_address_14;
      JumpReturn: return_address_14, result: 0
    }
  } else {
    PopFrame return_address_15;
    JumpReturn: return_address_15, result: 0
  }
--[570]--------------------------------------------------
LocRoutine 090820:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 090823
LocOp 090823:
  TraceOperation 090823 (Je [Var (Local 1),Con 1] (Branch F (Dloc 090838)));
  if (Equal(GetLocal(1),1)) {
    TraceOperation 090827 (Je [Var (Global 203),Con 169] (Branch F Dfalse));
    Let b1 = M[008314];
    Let b2 = M[008315];
    if (Equal(MakeHiLo(b1,b2),169)) {
      TraceOperation 090831 (Call (Floc 057682) [Con 63] Sp);
      PushFrame 090831;
      SetLocal 1 63;
      JumpCall: 057682, #actuals: 1
    } else {
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 0
    }
  } else {
    Jump: 090838
  }
LocReturn 090831:
  PushStack call_result;
  TraceOperation 090837 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 090838:
  TraceOperation 090838 (Jz (Var (Local 1)) (Branch F Dfalse));
  if (IsZero(GetLocal(1))) {
    TraceOperation 090841 (Je [Var (Global 203),Con 129,Con 118,Con 93] (Branch T (Dloc 090852)));
    Let b1 = M[008314];
    Let b2 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),129),Equal(MakeHiLo(b1,b2),118)),Equal(MakeHiLo(b1,b2),93))) {
      Jump: 090852
    } else {
      TraceOperation 090848 (Je [Var (Global 203),Con 124] (Branch F (Dloc 090909)));
      Let b3 = M[008314];
      Let b4 = M[008315];
      if (Equal(MakeHiLo(b3,b4),124)) {
        Jump: 090852
      } else {
        Jump: 090909
      }
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocOp 090852:
  TraceOperation 090852 (Jin (Con 62) (Con 219) (Branch F (Dloc 090909)));
  Let b1 = M[001313];
  if (Equal(219,Widen(b1))) {
    TraceOperation 090856 (Insert_obj (Con 61) (Con 31));
    Let b2 = M[001304];
    if (IsZero(Widen(b2))) {
      SetByte 001304 31;
      Let b3 = M[001036];
      SetByte 001305 LoByte(Widen(b3));
      SetByte 001036 61;
      TraceOperation 090859 (Insert_obj (Con 62) (Con 31));
      Let b4 = M[001313];
      if (IsZero(Widen(b4))) {
        SetByte 001313 31;
        Let b5 = M[001036];
        SetByte 001314 LoByte(Widen(b5));
        SetByte 001036 62;
        TraceOperation 090862 (Print_ret "You discover and pick up a small key and a piece of fluff under the seat cushion.");
        GamePrint "You discover and pick up a small key and a piece of fluff under the seat cushion.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      } else {
        Let b7 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
        if (Equal(Widen(b7),62)) {
          Let b8 = M[001314];
          SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b8));
          SetByte 001313 31;
          Let b9 = M[001036];
          SetByte 001314 LoByte(Widen(b9));
          SetByte 001036 62;
          TraceOperation 090862 (Print_ret "You discover and pick up a small key and a piece of fluff under the seat cushion.");
          GamePrint "You discover and pick up a small key and a piece of fluff under the seat cushion.\n";
          PopFrame return_address_10;
          JumpReturn: return_address_10, result: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b11 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b11),61)) {
        Let b12 = M[001305];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b12));
        SetByte 001304 31;
        Let b13 = M[001036];
        SetByte 001305 LoByte(Widen(b13));
        SetByte 001036 61;
        TraceOperation 090859 (Insert_obj (Con 62) (Con 31));
        Let b14 = M[001313];
        if (IsZero(Widen(b14))) {
          SetByte 001313 31;
          Let b15 = M[001036];
          SetByte 001314 LoByte(Widen(b15));
          SetByte 001036 62;
          TraceOperation 090862 (Print_ret "You discover and pick up a small key and a piece of fluff under the seat cushion.");
          GamePrint "You discover and pick up a small key and a piece of fluff under the seat cushion.\n";
          PopFrame return_address_16;
          JumpReturn: return_address_16, result: 1
        } else {
          Let b17 = M[Offset(Offset(000751,Mul(Widen(b14),9)),6)];
          if (Equal(Widen(b17),62)) {
            Let b18 = M[001314];
            SetByte Offset(Offset(000751,Mul(Widen(b14),9)),6) LoByte(Widen(b18));
            SetByte 001313 31;
            Let b19 = M[001036];
            SetByte 001314 LoByte(Widen(b19));
            SetByte 001036 62;
            TraceOperation 090862 (Print_ret "You discover and pick up a small key and a piece of fluff under the seat cushion.");
            GamePrint "You discover and pick up a small key and a piece of fluff under the seat cushion.\n";
            PopFrame return_address_20;
            JumpReturn: return_address_20, result: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 090909
  }
LocOp 090909:
  TraceOperation 090909 (Je [Var (Global 203),Con 61] (Branch F (Dloc 090948)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 090913 (Print_ret "The chair is very comfortable, with a thick plush cushion.");
    GamePrint "The chair is very comfortable, with a thick plush cushion.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 090948
  }
LocOp 090948:
  TraceOperation 090948 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 090954 (Je [Var (Global 201),Con 63] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),63)) {
      TraceOperation 090958 (Call (Floc 057650) [] Sp);
      PushFrame 090958;
      JumpCall: 057650, #actuals: 0
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 090958:
  PushStack call_result;
  TraceOperation 090963 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[571]--------------------------------------------------
LocRoutine 090964:
  MakeRoutineFrame 0;
  Jump: 090965
LocOp 090965:
  TraceOperation 090965 (Je [Var (Global 203),Con 177] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),177)) {
    TraceOperation 090969 (Je [Var (Global 0),Con 66] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),66)) {
      TraceOperation 090973 (Jin (Con 62) (Con 219) (Branch F Dfalse));
      Let b5 = M[001313];
      if (Equal(219,Widen(b5))) {
        TraceOperation 090977 (Print_ret "It's probably around the boat somewhere.");
        GamePrint "It's probably around the boat somewhere.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      } else {
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 0
      }
    } else {
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 0
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
--[572]--------------------------------------------------
LocRoutine 090992:
  MakeRoutineFrame 0;
  Jump: 090993
LocOp 090993:
  TraceOperation 090993 (Je [Var (Global 203),Con 103] (Branch F (Dloc 091013)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 090997 (Jz (Var (Global 202)) (Branch F (Dloc 091013)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 091000 (Test_attr (Con 60) (Con 23) (Branch T (Dloc 091013)));
      Let b5 = M[001293];
      if (TestBit(b5,0)) {
        Jump: 091013
      } else {
        TraceOperation 091004 (Print_ret "It's locked.");
        GamePrint "It's locked.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      }
    } else {
      Jump: 091013
    }
  } else {
    Jump: 091013
  }
LocOp 091013:
  TraceOperation 091013 (Je [Var (Global 203),Con 89] (Branch F (Dloc 091034)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),89)) {
    TraceOperation 091017 (Test_attr (Con 60) (Con 23) (Branch F (Dloc 091029)));
    Let b3 = M[001293];
    if (TestBit(b3,0)) {
      TraceOperation 091021 (Call (Floc 022042) [Con 39,Con 60] Sp);
      PushFrame 091021;
      SetLocal 1 39;
      SetLocal 2 60;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 091029
    }
  } else {
    Jump: 091034
  }
LocReturn 091021:
  PushStack call_result;
  TraceOperation 091028 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 091029:
  TraceOperation 091029 (Print_ret "It is.");
  GamePrint "It is.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 091034:
  TraceOperation 091034 (Je [Var (Global 203),Con 162,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),162),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 091040 (Test_attr (Con 60) (Con 23) (Branch F (Dloc 091048)));
    Let b3 = M[001293];
    if (TestBit(b3,0)) {
      TraceOperation 091044 (Print_paddr (Var (Global 53)));
      Let b4 = M[008014];
      Let b5 = M[008015];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 091046 New_line;
      GamePrint "\n";
      TraceOperation 091047 Rtrue;
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      Jump: 091048
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocOp 091048:
  TraceOperation 091048 (Jz (Var (Global 202)) (Branch F (Dloc 091073)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 091051 (Call (Floc 043468) [Con 62] Sp);
    PushFrame 091051;
    SetLocal 1 62;
    JumpCall: 043468, #actuals: 1
  } else {
    Jump: 091073
  }
LocReturn 091051:
  PushStack call_result;
  TraceOperation 091057 (Jz (Var Sp) (Branch T (Dloc 091073)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 091073
  } else {
    TraceOperation 091060 (Store (Con 218) (Con 62));
    SetByte 008312 0;
    SetByte 008313 62;
    TraceOperation 091063 (Print "(with the key)");
    GamePrint "(with the key)";
    TraceOperation 091072 New_line;
    GamePrint "\n";
    Jump: 091073
  }
LocOp 091073:
  TraceOperation 091073 (Je [Var (Global 202),Con 62] (Branch F (Dloc 091115)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),62)) {
    TraceOperation 091077 (Set_attr (Con 60) (Con 23));
    Let b3 = M[001293];
    SetByte 001293 SetBit(b3,0);
    TraceOperation 091080 (Print "The tool box opens");
    GamePrint "The tool box opens";
    TraceOperation 091093 (Get_child (Con 60) Sp (Branch F (Dloc 091112)));
    Let b4 = M[001297];
    PushStack Widen(b4);
    if (IsZero(Widen(b4))) {
      TraceOperation 091112 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      TraceOperation 091097 (Print " revealing");
      GamePrint " revealing";
      TraceOperation 091106 (Call (Floc 042360) [Con 60] Sp);
      PushFrame 091106;
      SetLocal 1 60;
      JumpCall: 042360, #actuals: 1
    }
  } else {
    Jump: 091115
  }
LocReturn 091106:
  PushStack call_result;
  TraceOperation 091112 (Print_ret ".");
  GamePrint ".\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 091115:
  TraceOperation 091115 (Print "You can't unlock it with");
  GamePrint "You can't unlock it with";
  TraceOperation 091128 (Jz (Var (Global 202)) (Branch T (Dloc 091140)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 091140
  } else {
    TraceOperation 091131 (Call (Floc 043738) [Var (Global 202)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame 091131;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 043738, #actuals: 1
  }
LocReturn 091131:
  PushStack call_result;
  TraceOperation 091137 (Jump 091145);
  Jump: 091145
LocOp 091140:
  TraceOperation 091140 (Print " ");
  GamePrint " ";
  TraceOperation 091143 (Print_obj (Con 36));
  Let b1 = M[001082];
  Let b2 = M[001083];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    Jump: 091145
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    Jump: 091145
  }
LocOp 091145:
  TraceOperation 091145 (Print_ret "!");
  GamePrint "!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[573]--------------------------------------------------
LocRoutine 091148:
  MakeRoutineFrame 0;
  Jump: 091149
LocOp 091149:
  TraceOperation 091149 (Je [Var (Global 203),Con 63] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 091153 (Print_ret "You see your environs upside-down and slightly distorted.");
    GamePrint "You see your environs upside-down and slightly distorted.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[574]--------------------------------------------------
LocRoutine 091186:
  MakeRoutineFrame 0;
  Jump: 091187
LocOp 091187:
  TraceOperation 091187 (Je [Var (Global 203),Con 88,Con 114] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),88),Equal(MakeHiLo(b1,b2),114))) {
    TraceOperation 091193 (Inc (Con 105));
    Let b3 = M[008086];
    Let b4 = M[008087];
    SetByte 008086 HiByte(Add(MakeHiLo(b3,b4),1));
    SetByte 008087 LoByte(Add(MakeHiLo(b3,b4),1));
    TraceOperation 091195 (Print "The button glows. An ");
    GamePrint "The button glows. An ";
    TraceOperation 091210 (Print_paddr (Var (Global 13)));
    Let b5 = M[007934];
    Let b6 = M[007935];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 091212 (Print "looks around, and withdraws. The light fades.");
    GamePrint "looks around, and withdraws. The light fades.";
    TraceOperation 091239 (Je [Var (Global 89),Con 3] (Branch F (Dloc 091252)));
    Let b7 = M[008086];
    Let b8 = M[008087];
    if (Equal(MakeHiLo(b7,b8),3)) {
      TraceOperation 091243 (Print " (Footnote 13)");
      GamePrint " (Footnote 13)";
      Jump: 091252
    } else {
      Jump: 091252
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
LocOp 091252:
  TraceOperation 091252 New_line;
  GamePrint "\n";
  TraceOperation 091253 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[575]--------------------------------------------------
LocRoutine 091254:
  MakeRoutineFrame 0;
  Jump: 091255
LocOp 091255:
  TraceOperation 091255 (Je [Var (Global 203),Con 21] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),21)) {
    TraceOperation 091259 (Jz (Var (Global 90)) (Branch F Dfalse));
    Let b3 = M[008088];
    Let b4 = M[008089];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 091262 (Call (Floc 022042) [Con 111,Con 64,Var (Global 201)] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame 091262;
      SetLocal 1 111;
      SetLocal 2 64;
      SetLocal 3 MakeHiLo(b5,b6);
      JumpCall: 022042, #actuals: 3
    } else {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
LocReturn 091262:
  PushStack call_result;
  TraceOperation 091270 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[576]--------------------------------------------------
LocRoutine 091272:
  MakeRoutineFrame 0;
  Jump: 091273
LocOp 091273:
  TraceOperation 091273 (Jin (Con 27) (Var (Global 0)) (Branch T (Dloc 091330)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[000998];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 091330
  } else {
    TraceOperation 091277 (Store (Con 229) (Con 5));
    SetByte 008334 0;
    SetByte 008335 5;
    TraceOperation 091280 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame 091280;
    SetLocal 1 -14349;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  }
LocReturn 091280:
  PushStack call_result;
  TraceOperation 091288 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 091293 (Print "Don't you think it would be a bad idea to leave the ceremonies?");
  GamePrint "Don't you think it would be a bad idea to leave the ceremonies?";
  TraceOperation 091328 New_line;
  GamePrint "\n";
  TraceOperation 091329 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
--[577]--------------------------------------------------
LocRoutine 091382:
  MakeRoutineFrame 0;
  Jump: 091383
LocOp 091383:
  TraceOperation 091383 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[578]--------------------------------------------------
LocRoutine 091390:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 15903;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 5973;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 -9248;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 3636;
        }
      }
    }
  }
  Jump: 091399
LocOp 091399:
  TraceOperation 091399 (Print " .You and ");
  GamePrint " .You and ";
  TraceOperation 091406 (Print_obj (Con 194));
  Let b1 = M[002504];
  Let b2 = M[002505];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 091408 (Print " enter ");
    GamePrint " enter ";
    TraceOperation 091415 (Print_obj (Con 220));
    Let b4 = M[002738];
    Let b5 = M[002739];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 091417 (Print ", that beautiful bauble you've been coveting ever since your decision to run for");
      GamePrint ", that beautiful bauble you've been coveting ever since your decision to run for";
      TraceOperation 091464 (Print_paddr (Var (Global 44)));
      Let b7 = M[007996];
      Let b8 = M[007997];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
      TraceOperation 091466 (Call (Floc 042734) [Con -10155] Sp);
      PushFrame 091466;
      SetLocal 1 -10155;
      JumpCall: 042734, #actuals: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 091417 (Print ", that beautiful bauble you've been coveting ever since your decision to run for");
      GamePrint ", that beautiful bauble you've been coveting ever since your decision to run for";
      TraceOperation 091464 (Print_paddr (Var (Global 44)));
      Let b9 = M[007996];
      Let b10 = M[007997];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
      TraceOperation 091466 (Call (Floc 042734) [Con -10155] Sp);
      PushFrame 091466;
      SetLocal 1 -10155;
      JumpCall: 042734, #actuals: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 091408 (Print " enter ");
    GamePrint " enter ";
    TraceOperation 091415 (Print_obj (Con 220));
    Let b11 = M[002738];
    Let b12 = M[002739];
    Let b13 = M[Address(MakeHiLo(b11,b12))];
    if (IsZeroByte(b13)) {
      GamePrint "";
      TraceOperation 091417 (Print ", that beautiful bauble you've been coveting ever since your decision to run for");
      GamePrint ", that beautiful bauble you've been coveting ever since your decision to run for";
      TraceOperation 091464 (Print_paddr (Var (Global 44)));
      Let b14 = M[007996];
      Let b15 = M[007997];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b14,b15)));
      TraceOperation 091466 (Call (Floc 042734) [Con -10155] Sp);
      PushFrame 091466;
      SetLocal 1 -10155;
      JumpCall: 042734, #actuals: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
      TraceOperation 091417 (Print ", that beautiful bauble you've been coveting ever since your decision to run for");
      GamePrint ", that beautiful bauble you've been coveting ever since your decision to run for";
      TraceOperation 091464 (Print_paddr (Var (Global 44)));
      Let b16 = M[007996];
      Let b17 = M[007997];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b16,b17)));
      TraceOperation 091466 (Call (Floc 042734) [Con -10155] Sp);
      PushFrame 091466;
      SetLocal 1 -10155;
      JumpCall: 042734, #actuals: 1
    }
  }
LocReturn 091466:
  PushStack call_result;
  TraceOperation 091473 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[579]--------------------------------------------------
LocRoutine 091474:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 091477
LocOp 091477:
  TraceOperation 091477 (Je [Var (Local 1),Con 6] (Branch F (Dloc 091496)));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 091481 (Test_attr (Con 66) (Con 4) (Branch F (Dloc 091496)));
    Let b1 = M[001345];
    if (TestBit(b1,3)) {
      TraceOperation 091485 (Store (Con 91) (Con 1));
      SetByte 008058 0;
      SetByte 008059 1;
      TraceOperation 091488 (Call (Floc 042734) [Con -10129] Sp);
      PushFrame 091488;
      SetLocal 1 -10129;
      JumpCall: 042734, #actuals: 1
    } else {
      Jump: 091496
    }
  } else {
    Jump: 091496
  }
LocReturn 091488:
  PushStack call_result;
  TraceOperation 091495 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 091496:
  TraceOperation 091496 (Je [Var (Local 1),Con 2] (Branch F (Dloc 091598)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 091501 (Test_attr (Con 66) (Con 4) (Branch T (Dloc 091598)));
    Let b1 = M[001345];
    if (TestBit(b1,3)) {
      Jump: 091598
    } else {
      TraceOperation 091506 (Put_prop (Con 31) (Con 29) (Con -19638));
      Let b2 = M[001037];
      Let b3 = M[001038];
      Let b4 = M[Address(MakeHiLo(b2,b3))];
      Error: getPropsA
    }
  } else {
    Jump: 091598
  }
LocOp 091598:
  TraceOperation 091598 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 091602 (Print "This is a platform surrounded by a crowd. ");
    GamePrint "This is a platform surrounded by a crowd. ";
    TraceOperation 091629 (Jin (Con 53) (Var (Global 0)) (Branch F (Dloc 091666)));
    Let b1 = M[007908];
    Let b2 = M[007909];
    Let b3 = M[001232];
    if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
      TraceOperation 091633 (Print "Several members of the crowd are holding a huge banner. ");
      GamePrint "Several members of the crowd are holding a huge banner. ";
      TraceOperation 091666 (Print "Just to the east is ");
      GamePrint "Just to the east is ";
      TraceOperation 091679 (Print_obj (Con 220));
      Let b4 = M[002738];
      Let b5 = M[002739];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      if (IsZeroByte(b6)) {
        GamePrint "";
        TraceOperation 091681 (Jin (Con 51) (Con 27) (Branch F (Dloc 091724)));
        Let b7 = M[001214];
        if (Equal(27,Widen(b7))) {
          TraceOperation 091685 (Print ". A semi-circle of guards are aiming ");
          GamePrint ". A semi-circle of guards are aiming ";
          TraceOperation 091710 (Print_obj (Con 51));
          Let b8 = M[001217];
          Let b9 = M[001218];
          Let b10 = M[Address(MakeHiLo(b8,b9))];
          if (IsZeroByte(b10)) {
            GamePrint "";
            TraceOperation 091712 (Print "s at you and ");
            GamePrint "s at you and ";
            TraceOperation 091719 (Print_obj (Con 194));
            Let b11 = M[002504];
            Let b12 = M[002505];
            Let b13 = M[Address(MakeHiLo(b11,b12))];
            if (IsZeroByte(b13)) {
              GamePrint "";
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
            TraceOperation 091712 (Print "s at you and ");
            GamePrint "s at you and ";
            TraceOperation 091719 (Print_obj (Con 194));
            Let b14 = M[002504];
            Let b15 = M[002505];
            Let b16 = M[Address(MakeHiLo(b14,b15))];
            if (IsZeroByte(b16)) {
              GamePrint "";
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b14,b15)),1));
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            }
          }
        } else {
          Jump: 091724
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
        TraceOperation 091681 (Jin (Con 51) (Con 27) (Branch F (Dloc 091724)));
        Let b17 = M[001214];
        if (Equal(27,Widen(b17))) {
          TraceOperation 091685 (Print ". A semi-circle of guards are aiming ");
          GamePrint ". A semi-circle of guards are aiming ";
          TraceOperation 091710 (Print_obj (Con 51));
          Let b18 = M[001217];
          Let b19 = M[001218];
          Let b20 = M[Address(MakeHiLo(b18,b19))];
          if (IsZeroByte(b20)) {
            GamePrint "";
            TraceOperation 091712 (Print "s at you and ");
            GamePrint "s at you and ";
            TraceOperation 091719 (Print_obj (Con 194));
            Let b21 = M[002504];
            Let b22 = M[002505];
            Let b23 = M[Address(MakeHiLo(b21,b22))];
            if (IsZeroByte(b23)) {
              GamePrint "";
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b21,b22)),1));
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b18,b19)),1));
            TraceOperation 091712 (Print "s at you and ");
            GamePrint "s at you and ";
            TraceOperation 091719 (Print_obj (Con 194));
            Let b24 = M[002504];
            Let b25 = M[002505];
            Let b26 = M[Address(MakeHiLo(b24,b25))];
            if (IsZeroByte(b26)) {
              GamePrint "";
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b24,b25)),1));
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            }
          }
        } else {
          Jump: 091724
        }
      }
    } else {
      TraceOperation 091666 (Print "Just to the east is ");
      GamePrint "Just to the east is ";
      TraceOperation 091679 (Print_obj (Con 220));
      Let b27 = M[002738];
      Let b28 = M[002739];
      Let b29 = M[Address(MakeHiLo(b27,b28))];
      if (IsZeroByte(b29)) {
        GamePrint "";
        TraceOperation 091681 (Jin (Con 51) (Con 27) (Branch F (Dloc 091724)));
        Let b30 = M[001214];
        if (Equal(27,Widen(b30))) {
          TraceOperation 091685 (Print ". A semi-circle of guards are aiming ");
          GamePrint ". A semi-circle of guards are aiming ";
          TraceOperation 091710 (Print_obj (Con 51));
          Let b31 = M[001217];
          Let b32 = M[001218];
          Let b33 = M[Address(MakeHiLo(b31,b32))];
          if (IsZeroByte(b33)) {
            GamePrint "";
            TraceOperation 091712 (Print "s at you and ");
            GamePrint "s at you and ";
            TraceOperation 091719 (Print_obj (Con 194));
            Let b34 = M[002504];
            Let b35 = M[002505];
            Let b36 = M[Address(MakeHiLo(b34,b35))];
            if (IsZeroByte(b36)) {
              GamePrint "";
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b34,b35)),1));
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b31,b32)),1));
            TraceOperation 091712 (Print "s at you and ");
            GamePrint "s at you and ";
            TraceOperation 091719 (Print_obj (Con 194));
            Let b37 = M[002504];
            Let b38 = M[002505];
            Let b39 = M[Address(MakeHiLo(b37,b38))];
            if (IsZeroByte(b39)) {
              GamePrint "";
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b37,b38)),1));
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            }
          }
        } else {
          Jump: 091724
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b27,b28)),1));
        TraceOperation 091681 (Jin (Con 51) (Con 27) (Branch F (Dloc 091724)));
        Let b40 = M[001214];
        if (Equal(27,Widen(b40))) {
          TraceOperation 091685 (Print ". A semi-circle of guards are aiming ");
          GamePrint ". A semi-circle of guards are aiming ";
          TraceOperation 091710 (Print_obj (Con 51));
          Let b41 = M[001217];
          Let b42 = M[001218];
          Let b43 = M[Address(MakeHiLo(b41,b42))];
          if (IsZeroByte(b43)) {
            GamePrint "";
            TraceOperation 091712 (Print "s at you and ");
            GamePrint "s at you and ";
            TraceOperation 091719 (Print_obj (Con 194));
            Let b44 = M[002504];
            Let b45 = M[002505];
            Let b46 = M[Address(MakeHiLo(b44,b45))];
            if (IsZeroByte(b46)) {
              GamePrint "";
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b44,b45)),1));
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b41,b42)),1));
            TraceOperation 091712 (Print "s at you and ");
            GamePrint "s at you and ";
            TraceOperation 091719 (Print_obj (Con 194));
            Let b47 = M[002504];
            Let b48 = M[002505];
            Let b49 = M[Address(MakeHiLo(b47,b48))];
            if (IsZeroByte(b49)) {
              GamePrint "";
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b47,b48)),1));
              TraceOperation 091721 (Jump 091763);
              Jump: 091763
            }
          }
        } else {
          Jump: 091724
        }
      }
    }
  } else {
    PopFrame return_address_50;
    JumpReturn: return_address_50, result: 0
  }
--[580]--------------------------------------------------
LocRoutine 091744:
  MakeRoutineFrame 0;
  Jump: 091745
LocOp 091745:
  TraceOperation 091745 (Inc_chk (Con 243) (Con 42) (Branch T (Dloc 091806)));
  Let b1 = M[008362];
  Let b2 = M[008363];
  SetByte 008362 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008363 LoByte(Add(MakeHiLo(b1,b2),1));
  if (GreaterThanEqual(MakeHiLo(b1,b2),42)) {
    Jump: 091806
  } else {
    TraceOperation 091749 (Get_next_prop (Var (Global 72)) (Con 71) (Global 176));
    Let b3 = M[008052];
    Let b4 = M[008053];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Error: getPropsA
  }
--[581]--------------------------------------------------
LocRoutine 091796:
  MakeRoutineFrame 0;
  Jump: 091797
LocOp 091797:
  TraceOperation 091797 (Je [Var (Global 203),Con 8,Con 7,Con 6] (Branch T Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),7)),Equal(MakeHiLo(b1,b2),6))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 091804 (Je [Var (Global 203),Con 9,Con 13,Con 10] (Branch T Dfalse));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),9),Equal(MakeHiLo(b4,b5),13)),Equal(MakeHiLo(b4,b5),10))) {
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      TraceOperation 091811 (Je [Var (Global 203),Con 0,Con 169,Con 16] (Branch T Dfalse));
      Let b7 = M[008314];
      Let b8 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),0),Equal(MakeHiLo(b7,b8),169)),Equal(MakeHiLo(b7,b8),16))) {
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 0
      } else {
        TraceOperation 091818 (Je [Var (Global 203),Con 11,Con 2,Con 1] (Branch T Dfalse));
        Let b10 = M[008314];
        Let b11 = M[008315];
        if (LogOr(LogOr(Equal(MakeHiLo(b10,b11),11),Equal(MakeHiLo(b10,b11),2)),Equal(MakeHiLo(b10,b11),1))) {
          PopFrame return_address_12;
          JumpReturn: return_address_12, result: 0
        } else {
          TraceOperation 091825 (Je [Var (Global 203),Con 90,Con 70,Con 12] (Branch T Dfalse));
          Let b13 = M[008314];
          Let b14 = M[008315];
          if (LogOr(LogOr(Equal(MakeHiLo(b13,b14),90),Equal(MakeHiLo(b13,b14),70)),Equal(MakeHiLo(b13,b14),12))) {
            PopFrame return_address_15;
            JumpReturn: return_address_15, result: 0
          } else {
            TraceOperation 091832 (Je [Var (Global 203),Con 178,Con 76,Con 4] (Branch T Dfalse));
            Let b16 = M[008314];
            Let b17 = M[008315];
            if (LogOr(LogOr(Equal(MakeHiLo(b16,b17),178),Equal(MakeHiLo(b16,b17),76)),Equal(MakeHiLo(b16,b17),4))) {
              PopFrame return_address_18;
              JumpReturn: return_address_18, result: 0
            } else {
              TraceOperation 091839 (Je [Var (Global 203),Con 179,Con 177,Con 174] (Branch T Dfalse));
              Let b19 = M[008314];
              Let b20 = M[008315];
              if (LogOr(LogOr(Equal(MakeHiLo(b19,b20),179),Equal(MakeHiLo(b19,b20),177)),Equal(MakeHiLo(b19,b20),174))) {
                PopFrame return_address_21;
                JumpReturn: return_address_21, result: 0
              } else {
                TraceOperation 091846 (Je [Var (Global 203),Con 38,Con 102,Con 181] (Branch T Dfalse));
                Let b22 = M[008314];
                Let b23 = M[008315];
                if (LogOr(LogOr(Equal(MakeHiLo(b22,b23),38),Equal(MakeHiLo(b22,b23),102)),Equal(MakeHiLo(b22,b23),181))) {
                  PopFrame return_address_24;
                  JumpReturn: return_address_24, result: 0
                } else {
                  TraceOperation 091853 (Je [Var (Global 201),Con 48,Con 53] (Branch F (Dloc 091870)));
                  Let b25 = M[008310];
                  Let b26 = M[008311];
                  if (LogOr(Equal(MakeHiLo(b25,b26),48),Equal(MakeHiLo(b25,b26),53))) {
                    TraceOperation 091859 (Je [Var (Global 203),Con 38,Con 61,Con 43] (Branch T Dfalse));
                    Let b27 = M[008314];
                    Let b28 = M[008315];
                    if (LogOr(LogOr(Equal(MakeHiLo(b27,b28),38),Equal(MakeHiLo(b27,b28),61)),Equal(MakeHiLo(b27,b28),43))) {
                      PopFrame return_address_29;
                      JumpReturn: return_address_29, result: 0
                    } else {
                      TraceOperation 091866 (Je [Var (Global 203),Con 120] (Branch T Dfalse));
                      Let b30 = M[008314];
                      Let b31 = M[008315];
                      if (Equal(MakeHiLo(b30,b31),120)) {
                        PopFrame return_address_32;
                        JumpReturn: return_address_32, result: 0
                      } else {
                        Jump: 091870
                      }
                    }
                  } else {
                    Jump: 091870
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LocOp 091870:
  TraceOperation 091870 (Inc (Con 104));
  Let b1 = M[008084];
  Let b2 = M[008085];
  SetByte 008084 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008085 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 091872 (Print_paddr (Var (Global 15)));
  Let b3 = M[007938];
  Let b4 = M[007939];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
  TraceOperation 091874 (Je [Var (Global 88),Con 4] (Branch F (Dloc 092083)));
  Let b5 = M[008084];
  Let b6 = M[008085];
  if (Equal(MakeHiLo(b5,b6),4)) {
    TraceOperation 091879 (Put_prop (Con 31) (Con 29) (Con 22672));
    Let b7 = M[001037];
    Let b8 = M[001038];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Error: getPropsA
  } else {
    Jump: 092083
  }
LocReturn 091897:
  PushStack call_result;
  TraceOperation 091905 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 091910 (Print " Suddenly, ");
  GamePrint " Suddenly, ";
  TraceOperation 091919 (Print_obj (Con 194));
  Let b2 = M[002504];
  Let b3 = M[002505];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 091921 (Print " leaps out of the crowd, grabs you by the necks, and points a blaster at your left head. Guards rush up, ");
    GamePrint " leaps out of the crowd, grabs you by the necks, and points a blaster at your left head. Guards rush up, ";
    TraceOperation 091984 (Print_obj (Con 51));
    Let b5 = M[001217];
    Let b6 = M[001218];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 091986 (Print "s poised to shoot. \"Stay back!\" shouts ");
      GamePrint "s poised to shoot. \"Stay back!\" shouts ";
      TraceOperation 092015 (Print_obj (Con 194));
      Let b8 = M[002504];
      Let b9 = M[002505];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      if (IsZeroByte(b10)) {
        GamePrint "";
        TraceOperation 092017 (Print ". \"One more step and the");
        GamePrint ". \"One more step and the";
        TraceOperation 092034 (Print_paddr (Var (Global 44)));
        Let b11 = M[007996];
        Let b12 = M[007997];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
        TraceOperation 092036 (Print " is fried meat!\" The guards seem unsure, and look at you for instructions.");
        GamePrint " is fried meat!\" The guards seem unsure, and look at you for instructions.";
        Jump: 092083
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
        TraceOperation 092017 (Print ". \"One more step and the");
        GamePrint ". \"One more step and the";
        TraceOperation 092034 (Print_paddr (Var (Global 44)));
        Let b13 = M[007996];
        Let b14 = M[007997];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b13,b14)));
        TraceOperation 092036 (Print " is fried meat!\" The guards seem unsure, and look at you for instructions.");
        GamePrint " is fried meat!\" The guards seem unsure, and look at you for instructions.";
        Jump: 092083
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 091986 (Print "s poised to shoot. \"Stay back!\" shouts ");
      GamePrint "s poised to shoot. \"Stay back!\" shouts ";
      TraceOperation 092015 (Print_obj (Con 194));
      Let b15 = M[002504];
      Let b16 = M[002505];
      Let b17 = M[Address(MakeHiLo(b15,b16))];
      if (IsZeroByte(b17)) {
        GamePrint "";
        TraceOperation 092017 (Print ". \"One more step and the");
        GamePrint ". \"One more step and the";
        TraceOperation 092034 (Print_paddr (Var (Global 44)));
        Let b18 = M[007996];
        Let b19 = M[007997];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b18,b19)));
        TraceOperation 092036 (Print " is fried meat!\" The guards seem unsure, and look at you for instructions.");
        GamePrint " is fried meat!\" The guards seem unsure, and look at you for instructions.";
        Jump: 092083
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b15,b16)),1));
        TraceOperation 092017 (Print ". \"One more step and the");
        GamePrint ". \"One more step and the";
        TraceOperation 092034 (Print_paddr (Var (Global 44)));
        Let b20 = M[007996];
        Let b21 = M[007997];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b20,b21)));
        TraceOperation 092036 (Print " is fried meat!\" The guards seem unsure, and look at you for instructions.");
        GamePrint " is fried meat!\" The guards seem unsure, and look at you for instructions.";
        Jump: 092083
      }
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 091921 (Print " leaps out of the crowd, grabs you by the necks, and points a blaster at your left head. Guards rush up, ");
    GamePrint " leaps out of the crowd, grabs you by the necks, and points a blaster at your left head. Guards rush up, ";
    TraceOperation 091984 (Print_obj (Con 51));
    Let b22 = M[001217];
    Let b23 = M[001218];
    Let b24 = M[Address(MakeHiLo(b22,b23))];
    if (IsZeroByte(b24)) {
      GamePrint "";
      TraceOperation 091986 (Print "s poised to shoot. \"Stay back!\" shouts ");
      GamePrint "s poised to shoot. \"Stay back!\" shouts ";
      TraceOperation 092015 (Print_obj (Con 194));
      Let b25 = M[002504];
      Let b26 = M[002505];
      Let b27 = M[Address(MakeHiLo(b25,b26))];
      if (IsZeroByte(b27)) {
        GamePrint "";
        TraceOperation 092017 (Print ". \"One more step and the");
        GamePrint ". \"One more step and the";
        TraceOperation 092034 (Print_paddr (Var (Global 44)));
        Let b28 = M[007996];
        Let b29 = M[007997];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b28,b29)));
        TraceOperation 092036 (Print " is fried meat!\" The guards seem unsure, and look at you for instructions.");
        GamePrint " is fried meat!\" The guards seem unsure, and look at you for instructions.";
        Jump: 092083
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b25,b26)),1));
        TraceOperation 092017 (Print ". \"One more step and the");
        GamePrint ". \"One more step and the";
        TraceOperation 092034 (Print_paddr (Var (Global 44)));
        Let b30 = M[007996];
        Let b31 = M[007997];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b30,b31)));
        TraceOperation 092036 (Print " is fried meat!\" The guards seem unsure, and look at you for instructions.");
        GamePrint " is fried meat!\" The guards seem unsure, and look at you for instructions.";
        Jump: 092083
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b22,b23)),1));
      TraceOperation 091986 (Print "s poised to shoot. \"Stay back!\" shouts ");
      GamePrint "s poised to shoot. \"Stay back!\" shouts ";
      TraceOperation 092015 (Print_obj (Con 194));
      Let b32 = M[002504];
      Let b33 = M[002505];
      Let b34 = M[Address(MakeHiLo(b32,b33))];
      if (IsZeroByte(b34)) {
        GamePrint "";
        TraceOperation 092017 (Print ". \"One more step and the");
        GamePrint ". \"One more step and the";
        TraceOperation 092034 (Print_paddr (Var (Global 44)));
        Let b35 = M[007996];
        Let b36 = M[007997];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b35,b36)));
        TraceOperation 092036 (Print " is fried meat!\" The guards seem unsure, and look at you for instructions.");
        GamePrint " is fried meat!\" The guards seem unsure, and look at you for instructions.";
        Jump: 092083
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b32,b33)),1));
        TraceOperation 092017 (Print ". \"One more step and the");
        GamePrint ". \"One more step and the";
        TraceOperation 092034 (Print_paddr (Var (Global 44)));
        Let b37 = M[007996];
        Let b38 = M[007997];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b37,b38)));
        TraceOperation 092036 (Print " is fried meat!\" The guards seem unsure, and look at you for instructions.");
        GamePrint " is fried meat!\" The guards seem unsure, and look at you for instructions.";
        Jump: 092083
      }
    }
  }
LocOp 092083:
  TraceOperation 092083 (Call (Floc 043634) [] Sp);
  PushFrame 092083;
  JumpCall: 043634, #actuals: 0
LocReturn 092083:
  PushStack call_result;
  TraceOperation 092088 New_line;
  GamePrint "\n";
  TraceOperation 092089 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[582]--------------------------------------------------
LocRoutine 092090:
  MakeRoutineFrame 0;
  Jump: 092091
LocOp 092091:
  TraceOperation 092091 (Je [Var (Global 203),Con 61,Con 43] (Branch F (Dloc 092104)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),61),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 092097 (Print_ret "It's big.");
    GamePrint "It's big.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 092104
  }
LocOp 092104:
  TraceOperation 092104 (Je [Var (Global 203),Con 132] (Branch F (Dloc 092147)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 092108 (Call (Floc 092464) [] Sp);
    PushFrame 092108;
    JumpCall: 092464, #actuals: 0
  } else {
    Jump: 092147
  }
LocReturn 092108:
  PushStack call_result;
  TraceOperation 092113 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 092116 (Print_ret "You may be a scoundrel, but you're not a mass murderer.");
    GamePrint "You may be a scoundrel, but you're not a mass murderer.\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocOp 092147:
  TraceOperation 092147 (Je [Var (Global 203),Con 38] (Branch F (Dloc 092184)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 092151 (Print_ret "You'd be crushed by the enthusiasm of your admirers.");
    GamePrint "You'd be crushed by the enthusiasm of your admirers.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 092184
  }
LocOp 092184:
  TraceOperation 092184 (Je [Var (Global 203),Con 173,Con 15] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),173),Equal(MakeHiLo(b1,b2),15))) {
    TraceOperation 092190 (Print_paddr (Var (Global 15)));
    Let b3 = M[007938];
    Let b4 = M[007939];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 092192 New_line;
    GamePrint "\n";
    TraceOperation 092193 (Call (Floc 043634) [] Sp);
    PushFrame 092193;
    JumpCall: 043634, #actuals: 0
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 092193:
  PushStack call_result;
  TraceOperation 092198 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[583]--------------------------------------------------
LocRoutine 092200:
  MakeRoutineFrame 0;
  Jump: 092201
LocOp 092201:
  TraceOperation 092201 (Je [Var (Global 0),Con 66] (Branch F (Dloc 092215)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 092205 (Jz (Var (Global 90)) (Branch F (Dloc 092215)));
    Let b3 = M[008088];
    Let b4 = M[008089];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 092208 (Call (Floc 057596) [Con 65] Sp);
      PushFrame 092208;
      SetLocal 1 65;
      JumpCall: 057596, #actuals: 1
    } else {
      Jump: 092215
    }
  } else {
    Jump: 092215
  }
LocReturn 092208:
  PushStack call_result;
  TraceOperation 092214 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 092215:
  TraceOperation 092215 (Je [Var (Global 203),Con 21,Con 38] (Branch F (Dloc 092236)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),21),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 092221 (Je [Var (Global 0),Con 54] (Branch F (Dloc 092229)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),54)) {
      TraceOperation 092225 (Print_paddr (Var (Global 57)));
      Let b5 = M[008022];
      Let b6 = M[008023];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 092227 New_line;
      GamePrint "\n";
      TraceOperation 092228 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 092229
    }
  } else {
    Jump: 092236
  }
LocOp 092229:
  TraceOperation 092229 (Call (Floc 043620) [Con 17] Sp);
  PushFrame 092229;
  SetLocal 1 17;
  JumpCall: 043620, #actuals: 1
LocReturn 092229:
  PushStack call_result;
  TraceOperation 092235 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 092236:
  TraceOperation 092236 (Je [Var (Global 203),Con 48,Con 86] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 092242 (Je [Var (Global 0),Con 54] (Branch F (Dloc 092253)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),54)) {
      TraceOperation 092246 (Call (Floc 043620) [Con 27] Sp);
      PushFrame 092246;
      SetLocal 1 27;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 092253
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 092246:
  PushStack call_result;
  TraceOperation 092252 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 092253:
  TraceOperation 092253 (Print_paddr (Var (Global 57)));
  Let b1 = M[008022];
  Let b2 = M[008023];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 092255 New_line;
  GamePrint "\n";
  TraceOperation 092256 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[584]--------------------------------------------------
LocRoutine 092258:
  MakeRoutineFrame 0;
  Jump: 092259
LocOp 092259:
  TraceOperation 092259 (Je [Var (Global 203),Con 124] (Branch F (Dloc 092349)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 092264 (Test_attr (Con 52) (Con 21) (Branch F (Dloc 092349)));
    Let b3 = M[001221];
    if (TestBit(b3,2)) {
      TraceOperation 092269 (Print_paddr (Var (Global 31)));
      Let b4 = M[007970];
      Let b5 = M[007971];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 092271 (Print "They");
      GamePrint "They";
      TraceOperation 092276 (Jin (Con 51) (Con 27) (Branch F (Dloc 092286)));
      Let b6 = M[001214];
      if (Equal(27,Widen(b6))) {
        TraceOperation 092280 (Call (Floc 092666) [] Sp);
        PushFrame 092280;
        JumpCall: 092666, #actuals: 0
      } else {
        Jump: 092286
      }
    } else {
      Jump: 092349
    }
  } else {
    Jump: 092349
  }
LocReturn 092280:
  PushStack call_result;
  TraceOperation 092285 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[585]--------------------------------------------------
LocRoutine 092302:
  MakeRoutineFrame 0;
  Jump: 092303
LocOp 092303:
  TraceOperation 092303 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 092308 (Print_ret " are disarmed, though, and unable to do anything as you take the blaster.");
  GamePrint " are disarmed, though, and unable to do anything as you take the blaster.\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[586]--------------------------------------------------
LocRoutine 092384:
  MakeRoutineFrame 0;
  Jump: 092385
LocOp 092385:
  TraceOperation 092385 (Jg (Var (Global 62)) (Con 217) (Branch T (Dloc 092414)));
  Let b1 = M[008032];
  Let b2 = M[008033];
  if (GreaterThan(MakeHiLo(b1,b2),217)) {
    Jump: 092414
  } else {
    TraceOperation 092389 (Print "With a cloud of sparks");
    GamePrint "With a cloud of sparks";
    TraceOperation 092406 (Je [Var (Global 201),Con 51] (Branch F (Dloc 092427)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),51)) {
      TraceOperation 092410 (Print " the pile of ");
      GamePrint " the pile of ";
      TraceOperation 092419 (Print_obj (Con 51));
      Let b5 = M[001217];
      Let b6 = M[001218];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 092421 (Print "s");
        GamePrint "s";
        TraceOperation 092424 (Jump 092434);
        Jump: 092434
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 092421 (Print "s");
        GamePrint "s";
        TraceOperation 092424 (Jump 092434);
        Jump: 092434
      }
    } else {
      Jump: 092427
    }
  }
LocOp 092427:
  TraceOperation 092427 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame 092427;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 092427:
  PushStack call_result;
  Jump: 092434
LocOp 092434:
  TraceOperation 092434 (Print " disintegrates. ");
  GamePrint " disintegrates. ";
  TraceOperation 092447 (Print_paddr (Var (Global 15)));
  Let b1 = M[007938];
  Let b2 = M[007939];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 092449 New_line;
  GamePrint "\n";
  TraceOperation 092450 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[587]--------------------------------------------------
LocRoutine 092464:
  MakeRoutineFrame 0;
  Jump: 092465
LocOp 092465:
  TraceOperation 092465 (Call (Floc 043468) [Con 52] Sp);
  PushFrame 092465;
  SetLocal 1 52;
  JumpCall: 043468, #actuals: 1
LocReturn 092465:
  PushStack call_result;
  TraceOperation 092471 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 092474 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 092476 (Print " the ");
    GamePrint " the ";
    TraceOperation 092479 (Print_obj (Con 52));
    Let b4 = M[001226];
    Let b5 = M[001227];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 092481 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 092481 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
--[588]--------------------------------------------------
LocRoutine 092484:
  MakeRoutineFrame 0;
  Jump: 092485
LocOp 092485:
  TraceOperation 092485 (Je [Var (Global 203),Con 132] (Branch F (Dloc 092581)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 092490 (Call (Floc 092464) [] Sp);
    PushFrame 092490;
    JumpCall: 092464, #actuals: 0
  } else {
    Jump: 092581
  }
LocReturn 092490:
  PushStack call_result;
  TraceOperation 092495 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 092498 (Jin (Con 51) (Con 27) (Branch F (Dloc 092510)));
    Let b2 = M[001214];
    if (Equal(27,Widen(b2))) {
      TraceOperation 092502 (Call (Floc 022042) [Con 132,Con 27] Sp);
      PushFrame 092502;
      SetLocal 1 132;
      SetLocal 2 27;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 092510
    }
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  }
LocReturn 092502:
  PushStack call_result;
  TraceOperation 092509 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[589]--------------------------------------------------
LocRoutine 092514:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 -19130;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 43;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 28971;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 -18631;
        }
      }
    }
  }
  Jump: 092523
LocOp 092523:
  TraceOperation 092523 (Remove_obj (Con 10241));
  Let b1 = M[001423];
  if (Equal(Widen(b1),10241)) {
    SetByte 001423 4;
    SetByte 027388 0;
    TraceOperation 092526 (Or (Var (Global 176)) (Con 46) (Global 22));
    Let b2 = M[008260];
    Let b3 = M[008261];
    SetByte 007952 HiByte(Or(MakeHiLo(b2,b3),46));
    SetByte 007953 LoByte(Or(MakeHiLo(b2,b3),46));
    TraceOperation 092530 (Je [Var (Global 174),Var (Local 1)] (Branch F (Dloc 088023)));
    Let b4 = M[008256];
    Let b5 = M[008257];
    if (Equal(MakeHiLo(b4,b5),GetLocal(1))) {
      TraceOperation 092535 Rfalse;
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 0
    } else {
      Jump: 088023
    }
  } else {
    Error: unlink/loop
  }
--[590]--------------------------------------------------
LocRoutine 092664:
  MakeRoutineFrame 0;
  Jump: 092665
LocOp 092665:
  TraceOperation 092665 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[591]--------------------------------------------------
LocRoutine 092666:
  MakeRoutineFrame 0;
  Jump: 092667
LocOp 092667:
  TraceOperation 092667 (Call (Floc 043370) [Con 51] Sp);
  PushFrame 092667;
  SetLocal 1 51;
  JumpCall: 043370, #actuals: 1
LocReturn 092667:
  PushStack call_result;
  TraceOperation 092673 (Jz (Var Sp) (Branch F (Dloc 092694)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 092676 (Print " grab the blaster and");
    GamePrint " grab the blaster and";
    TraceOperation 092691 (Jump 092713);
    Jump: 092713
  } else {
    Jump: 092694
  }
LocOp 092694:
  TraceOperation 092694 (Jin (Con 51) (Con 27) (Branch T (Dloc 092713)));
  Let b1 = M[001214];
  if (Equal(27,Widen(b1))) {
    Jump: 092713
  } else {
    TraceOperation 092698 (Print " pick up their rifles and");
    GamePrint " pick up their rifles and";
    Jump: 092713
  }
LocOp 092713:
  TraceOperation 092713 (Call (Floc 042734) [Con -10055] Sp);
  PushFrame 092713;
  SetLocal 1 -10055;
  JumpCall: 042734, #actuals: 1
LocReturn 092713:
  PushStack call_result;
  TraceOperation 092720 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[592]--------------------------------------------------
LocRoutine 092722:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 092725
LocOp 092725:
  TraceOperation 092725 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 092729 (Call (Floc 022320) [Con -19163,Con 11] Sp);
    PushFrame 092729;
    SetLocal 1 -19163;
    SetLocal 2 11;
    JumpCall: 022320, #actuals: 2
  } else {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  }
LocReturn 092729:
  PushStack call_result;
  TraceOperation 092737 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 092742 (Store (Con 91) (Con 1));
  SetByte 008058 0;
  SetByte 008059 1;
  TraceOperation 092745 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
--[593]--------------------------------------------------
LocRoutine 092746:
  MakeRoutineFrame 0;
  Jump: 092747
LocOp 092747:
  TraceOperation 092747 (Je [Var (Global 0),Con 213] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),213)) {
    TraceOperation 092751 New_line;
    GamePrint "\n";
    TraceOperation 092752 (Call (Floc 042734) [Con -10018] Sp);
    PushFrame 092752;
    SetLocal 1 -10018;
    JumpCall: 042734, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 092752:
  PushStack call_result;
  TraceOperation 092759 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[594]--------------------------------------------------
LocRoutine 092760:
  MakeRoutineFrame 0;
  Jump: 092761
LocOp 092761:
  TraceOperation 092761 (Je [Var (Global 203),Con 48,Con 86,Con 59] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),86)),Equal(MakeHiLo(b1,b2),59))) {
    TraceOperation 092768 (Call (Floc 040326) [] Sp);
    PushFrame 092768;
    JumpCall: 040326, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 092768:
  PushStack call_result;
  TraceOperation 092773 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[595]--------------------------------------------------
LocRoutine 092774:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 092777
LocOp 092777:
  TraceOperation 092777 (Call (Floc 043406) [Var (Local 1)] Sp);
  PushFrame 092777;
  SetLocal 1 GetLocal(1);
  JumpCall: 043406, #actuals: 1
LocReturn 092777:
  PushStack call_result;
  TraceOperation 092783 (Je [Var Sp,Con 190,Con 192,Con 191] (Branch T Dtrue));
  PopStack popped1;
  if (LogOr(LogOr(Equal(popped1,190),Equal(popped1,192)),Equal(popped1,191))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    TraceOperation 092790 (Call (Floc 043406) [Var (Local 1)] Sp);
    PushFrame 092790;
    SetLocal 1 GetLocal(1);
    JumpCall: 043406, #actuals: 1
  }
LocReturn 092790:
  PushStack call_result;
  TraceOperation 092796 (Je [Var Sp,Con 210,Con 201,Con 188] (Branch T Dtrue));
  PopStack popped1;
  if (LogOr(LogOr(Equal(popped1,210),Equal(popped1,201)),Equal(popped1,188))) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    TraceOperation 092803 (Call (Floc 043406) [Var (Local 1)] Sp);
    PushFrame 092803;
    SetLocal 1 GetLocal(1);
    JumpCall: 043406, #actuals: 1
  }
LocReturn 092803:
  PushStack call_result;
  TraceOperation 092809 (Je [Var Sp,Con 178,Con 218,Con 175] (Branch F Dfalse));
  PopStack popped1;
  if (LogOr(LogOr(Equal(popped1,178),Equal(popped1,218)),Equal(popped1,175))) {
    TraceOperation 092816 Rtrue;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
--[596]--------------------------------------------------
LocRoutine 092818:
  MakeRoutineFrame 0;
  Jump: 092819
LocOp 092819:
  TraceOperation 092819 (Je [Var (Global 203),Con 48,Con 59,Con 86] (Branch F (Dloc 092851)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),59)),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 092826 (Je [Var (Global 0),Con 178] (Branch F (Dloc 092837)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),178)) {
      TraceOperation 092830 (Call (Floc 043620) [Con 20] Sp);
      PushFrame 092830;
      SetLocal 1 20;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 092837
    }
  } else {
    Jump: 092851
  }
LocReturn 092830:
  PushStack call_result;
  TraceOperation 092836 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 092837:
  TraceOperation 092837 (Je [Var (Global 0),Con 54] (Branch F (Dloc 092845)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 092841 (Print_paddr (Var (Global 57)));
    Let b3 = M[008022];
    Let b4 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 092843 New_line;
    GamePrint "\n";
    TraceOperation 092844 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 092845
  }
LocOp 092845:
  TraceOperation 092845 (Call (Floc 040326) [] Sp);
  PushFrame 092845;
  JumpCall: 040326, #actuals: 0
LocReturn 092845:
  PushStack call_result;
  TraceOperation 092850 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 092851:
  TraceOperation 092851 (Je [Var (Global 203),Con 28,Con 21,Con 38] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),28),Equal(MakeHiLo(b1,b2),21)),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 092858 (Je [Var (Global 0),Con 54] (Branch F (Dloc 092869)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),54)) {
      TraceOperation 092862 (Call (Floc 043620) [Con 27] Sp);
      PushFrame 092862;
      SetLocal 1 27;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 092869
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 092862:
  PushStack call_result;
  TraceOperation 092868 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 092869:
  TraceOperation 092869 (Call (Floc 092774) [Con 31] Sp);
  PushFrame 092869;
  SetLocal 1 31;
  JumpCall: 092774, #actuals: 1
LocReturn 092869:
  PushStack call_result;
  TraceOperation 092875 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 092878 (Print_paddr (Var (Global 57)));
    Let b3 = M[008022];
    Let b4 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 092880 New_line;
    GamePrint "\n";
    TraceOperation 092881 Rtrue;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[597]--------------------------------------------------
LocRoutine 092882:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 092885
LocOp 092885:
  TraceOperation 092885 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 092889 (Jz (Var (Global 214)) (Branch F (Dloc 092907)));
    Let b1 = M[008336];
    Let b2 = M[008337];
    if (IsZero(MakeHiLo(b1,b2))) {
      TraceOperation 092892 (Insert_obj (Con 215) (Var (Global 0)));
      Let b3 = M[007908];
      Let b4 = M[007909];
      Let b5 = M[002690];
      if (IsZero(Widen(b5))) {
        SetByte 002690 b4;
        Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
        SetByte 002691 LoByte(Widen(b6));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 215;
        TraceOperation 092895 (Call (Floc 022340) [Con -17989] Sp);
        PushFrame 092895;
        SetLocal 1 -17989;
        JumpCall: 022340, #actuals: 1
      } else {
        Let b7 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b7),215)) {
          Let b8 = M[002691];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b8));
          SetByte 002690 b4;
          Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
          SetByte 002691 LoByte(Widen(b9));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 215;
          TraceOperation 092895 (Call (Floc 022340) [Con -17989] Sp);
          PushFrame 092895;
          SetLocal 1 -17989;
          JumpCall: 022340, #actuals: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 092907
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
LocReturn 092895:
  PushStack call_result;
  TraceOperation 092902 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  Jump: 092907
LocOp 092907:
  TraceOperation 092907 (Test_attr (Con 216) (Con 3) (Branch F (Dloc 092989)));
  Let b1 = M[002695];
  if (TestBit(b1,4)) {
    TraceOperation 092912 (Print "As you pass the door, it slams against you, bruising your upper arm, and then opens again. \"Take that, door-kicker.\"");
    GamePrint "As you pass the door, it slams against you, bruising your upper arm, and then opens again. \"Take that, door-kicker.\"";
    TraceOperation 092987 New_line;
    GamePrint "\n";
    TraceOperation 092988 New_line;
    GamePrint "\n";
    Jump: 092989
  } else {
    Jump: 092989
  }
LocOp 092989:
  TraceOperation 092989 (Print "Upon entering the room, you are battered by tidal waves of depression. ");
  GamePrint "Upon entering the room, you are battered by tidal waves of depression. ";
  TraceOperation 093034 (Jl (Var (Global 1)) (Con 300) (Branch F (Dloc 093048)));
  Let b1 = M[007910];
  Let b2 = M[007911];
  if (LessThan(MakeHiLo(b1,b2),300)) {
    TraceOperation 093040 (Call (Floc 042734) [Con -12364] Sp);
    PushFrame 093040;
    SetLocal 1 -12364;
    JumpCall: 042734, #actuals: 1
  } else {
    Jump: 093048
  }
LocReturn 093040:
  PushStack call_result;
  TraceOperation 093047 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 093048:
  TraceOperation 093048 (Test_attr (Con 218) (Con 4) (Branch T (Dloc 093059)));
  Let b1 = M[002713];
  if (TestBit(b1,3)) {
    Jump: 093059
  } else {
    TraceOperation 093052 (Set_attr (Con 218) (Con 4));
    Let b2 = M[002713];
    SetByte 002713 SetBit(b2,3);
    TraceOperation 093055 (Add (Var (Global 1)) (Con 25) (Global 1));
    Let b3 = M[007910];
    Let b4 = M[007911];
    SetByte 007910 HiByte(Add(MakeHiLo(b3,b4),25));
    SetByte 007911 LoByte(Add(MakeHiLo(b3,b4),25));
    Jump: 093059
  }
LocOp 093059:
  TraceOperation 093059 (Print "However, the happiness derived from your high score and that thoroughly excellent cup of tea you had recently help you to survive.");
  GamePrint "However, the happiness derived from your high score and that thoroughly excellent cup of tea you had recently help you to survive.";
  TraceOperation 093136 New_line;
  GamePrint "\n";
  TraceOperation 093137 New_line;
  GamePrint "\n";
  TraceOperation 093138 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[598]--------------------------------------------------
LocRoutine 093140:
  MakeRoutineFrame 0;
  Jump: 093141
LocOp 093141:
  TraceOperation 093141 (Je [Con 216,Var (Global 195)] (Branch F (Dloc 093284)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(216,MakeHiLo(b1,b2))) {
    TraceOperation 093146 (Je [Var (Global 203),Con 150] (Branch F (Dloc 093169)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 093150 (Je [Var (Global 201),Con 30] (Branch F (Dloc 093169)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 093154 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 093157 (Call (Floc 022042) [Con 22,Con 216,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame 093157;
        SetLocal 1 22;
        SetLocal 2 216;
        SetLocal 3 MakeHiLo(b7,b8);
        JumpCall: 022042, #actuals: 3
      } else {
        Jump: 093169
      }
    } else {
      Jump: 093169
    }
  } else {
    Jump: 093284
  }
LocReturn 093157:
  PushStack call_result;
  TraceOperation 093165 (Store (Con 211) (Con 216));
  SetByte 008298 0;
  SetByte 008299 216;
  TraceOperation 093168 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 093169:
  TraceOperation 093169 (Je [Var (Global 203),Con 75] (Branch F (Dloc 093187)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 093173 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 093176 (Call (Floc 022042) [Con 75,Con 216] Sp);
    PushFrame 093176;
    SetLocal 1 75;
    SetLocal 2 216;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 093187
  }
LocReturn 093176:
  PushStack call_result;
  TraceOperation 093183 (Store (Con 211) (Con 216));
  SetByte 008298 0;
  SetByte 008299 216;
  TraceOperation 093186 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 093187:
  TraceOperation 093187 (Je [Var (Global 203),Con 174] (Branch F (Dloc 093210)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 093191 (Je [Var (Global 201),Con 28] (Branch F (Dloc 093210)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 093195 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 093198 (Call (Floc 022042) [Con 22,Con 216,Con 28] Sp);
      PushFrame 093198;
      SetLocal 1 22;
      SetLocal 2 216;
      SetLocal 3 28;
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 093210
    }
  } else {
    Jump: 093210
  }
LocReturn 093198:
  PushStack call_result;
  TraceOperation 093206 (Store (Con 211) (Con 216));
  SetByte 008298 0;
  SetByte 008299 216;
  TraceOperation 093209 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 093210:
  TraceOperation 093210 (Print "\"Unless you're here to show me some clear sign of your intelligence, please leave me alone. I'm a very busy door.\"");
  GamePrint "\"Unless you're here to show me some clear sign of your intelligence, please leave me alone. I'm a very busy door.\"";
  TraceOperation 093277 New_line;
  GamePrint "\n";
  TraceOperation 093278 (Call (Floc 043634) [] Sp);
  PushFrame 093278;
  JumpCall: 043634, #actuals: 0
LocReturn 093278:
  PushStack call_result;
  TraceOperation 093283 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 093284:
  TraceOperation 093284 (Test_attr (Con 216) (Con 23) (Branch F (Dloc 093318)));
  Let b1 = M[002697];
  if (TestBit(b1,0)) {
    TraceOperation 093288 (Je [Var (Global 203),Con 85,Con 66,Con 134] (Branch T (Dloc 093299)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b2,b3),85),Equal(MakeHiLo(b2,b3),66)),Equal(MakeHiLo(b2,b3),134))) {
      Jump: 093299
    } else {
      TraceOperation 093295 (Je [Var (Global 203),Con 103] (Branch F (Dloc 093318)));
      Let b4 = M[008314];
      Let b5 = M[008315];
      if (Equal(MakeHiLo(b4,b5),103)) {
        Jump: 093299
      } else {
        Jump: 093318
      }
    }
  } else {
    Jump: 093318
  }
LocOp 093299:
  TraceOperation 093299 (Print_ret "You already induced the door to open.");
  GamePrint "You already induced the door to open.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 093318:
  TraceOperation 093318 (Test_attr (Con 216) (Con 23) (Branch F (Dloc 093369)));
  Let b1 = M[002697];
  if (TestBit(b1,0)) {
    TraceOperation 093322 (Je [Var (Global 203),Con 39] (Branch F (Dloc 093369)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (Equal(MakeHiLo(b2,b3),39)) {
      TraceOperation 093326 (Print_ret "The door snaps, \"Hey! I'm resting. I've had a very busy day.\"");
      GamePrint "The door snaps, \"Hey! I'm resting. I've had a very busy day.\"\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      Jump: 093369
    }
  } else {
    Jump: 093369
  }
LocOp 093369:
  TraceOperation 093369 (Je [Var (Global 203),Con 82] (Branch F (Dloc 093472)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),82)) {
    TraceOperation 093374 (Set_attr (Con 216) (Con 3));
    Let b3 = M[002695];
    SetByte 002695 SetBit(b3,4);
    TraceOperation 093377 (Print_ret "\"I suppose you think that since you have legs and I have not, you can get away with that sort of thing. Well,\" the door continues stiffly, \"maybe you can and maybe you can't.\"");
    GamePrint "\"I suppose you think that since you have legs and I have not, you can get away with that sort of thing. Well,\" the door continues stiffly, \"maybe you can and maybe you can't.\"\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 093472
  }
LocOp 093472:
  TraceOperation 093472 (Je [Var (Global 203),Con 66,Con 134] (Branch F (Dloc 093576)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),66),Equal(MakeHiLo(b1,b2),134))) {
    TraceOperation 093479 (Je [Var (Global 201),Con 8,Con 9] (Branch F (Dloc 093512)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),8),Equal(MakeHiLo(b3,b4),9))) {
      TraceOperation 093485 (Jz (Var (Global 222)) (Branch T (Dloc 093512)));
      Let b5 = M[008352];
      Let b6 = M[008353];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 093512
      } else {
        TraceOperation 093488 (Call (Floc 043468) [Con 9] Sp);
        PushFrame 093488;
        SetLocal 1 9;
        JumpCall: 043468, #actuals: 1
      }
    } else {
      Jump: 093512
    }
  } else {
    Jump: 093576
  }
LocReturn 093488:
  PushStack call_result;
  TraceOperation 093494 (Jz (Var Sp) (Branch T (Dloc 093512)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 093512
  } else {
    TraceOperation 093497 (Jz (Var (Global 66)) (Branch T (Dloc 093512)));
    Let b2 = M[008040];
    Let b3 = M[008041];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 093512
    } else {
      TraceOperation 093500 (Je [Var (Global 201),Var (Global 222)] (Branch T (Dloc 093512)));
      Let b4 = M[008310];
      Let b5 = M[008311];
      Let b6 = M[008352];
      Let b7 = M[008353];
      if (Equal(MakeHiLo(b4,b5),MakeHiLo(b6,b7))) {
        Jump: 093512
      } else {
        TraceOperation 093504 (Call (Floc 022042) [Con 85,Con 216] Sp);
        PushFrame 093504;
        SetLocal 1 85;
        SetLocal 2 216;
        JumpCall: 022042, #actuals: 2
      }
    }
  }
LocReturn 093504:
  PushStack call_result;
  TraceOperation 093511 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 093512:
  TraceOperation 093512 (Je [Var (Global 201),Con 8,Con 9] (Branch F (Dloc 093521)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),9))) {
    TraceOperation 093518 (Store (Con 238) (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    SetByte 008352 b3;
    SetByte 008353 b4;
    Jump: 093521
  } else {
    Jump: 093521
  }
LocOp 093521:
  TraceOperation 093521 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 093525 (Jl (Con 50) (Var Sp) (Branch T (Dloc 093565)));
  PopStack popped2;
  if (LessThan(50,popped2)) {
    Jump: 093565
  } else {
    TraceOperation 093529 (Print "The door says \"Big deal. Anyone can have");
    GamePrint "The door says \"Big deal. Anyone can have";
    TraceOperation 093554 (Call (Floc 043738) [Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame 093554;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 043738, #actuals: 1
  }
LocReturn 093554:
  PushStack call_result;
  TraceOperation 093560 (Print_ret ".\"");
  GamePrint ".\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 093565:
  TraceOperation 093565 (Print_ret "The door yawns.");
  GamePrint "The door yawns.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 093576:
  TraceOperation 093576 (Je [Var (Global 203),Con 85,Con 103] (Branch F (Dloc 093866)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),85),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 093583 (Call (Floc 043468) [Con 9] Sp);
    PushFrame 093583;
    SetLocal 1 9;
    JumpCall: 043468, #actuals: 1
  } else {
    Jump: 093866
  }
LocReturn 093583:
  PushStack call_result;
  TraceOperation 093589 (Jz (Var Sp) (Branch T (Dloc 093705)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 093705
  } else {
    TraceOperation 093593 (Jz (Var (Global 66)) (Branch T (Dloc 093705)));
    Let b2 = M[008040];
    Let b3 = M[008041];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 093705
    } else {
      TraceOperation 093597 (Set_attr (Con 216) (Con 23));
      Let b4 = M[002697];
      SetByte 002697 SetBit(b4,0);
      TraceOperation 093600 (Print_ret "The door is almost speechless with admiration. \"Wow. Simultaneous tea and no tea. My apologies. You are clearly a heavy-duty philosopher.\" It opens respectfully.");
      GamePrint "The door is almost speechless with admiration. \"Wow. Simultaneous tea and no tea. My apologies. You are clearly a heavy-duty philosopher.\" It opens respectfully.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  }
LocOp 093705:
  TraceOperation 093705 (Print_ret "The door explains, in a haughty tone, that the room is occupied by a super-intelligent robot and that lesser beings (by which it means you) are not to be admitted. \"Show me some tiny example of your intelligence,\" it says, \"and maybe, just maybe, I might reconsider.\"");
  GamePrint "The door explains, in a haughty tone, that the room is occupied by a super-intelligent robot and that lesser beings (by which it means you) are not to be admitted. \"Show me some tiny example of your intelligence,\" it says, \"and maybe, just maybe, I might reconsider.\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 093866:
  TraceOperation 093866 (Je [Var (Global 203),Con 22] (Branch F (Dloc 093903)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 093870 (Je [Var (Global 202),Con 28] (Branch F (Dloc 093903)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 093874 (Print_ret "\"To keep out sub-intelligent beings.\"");
      GamePrint "\"To keep out sub-intelligent beings.\"\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 093903
    }
  } else {
    Jump: 093903
  }
LocOp 093903:
  TraceOperation 093903 (Je [Var (Global 203),Con 38] (Branch F (Dloc 093925)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 093907 (Je [Var (Global 0),Con 218] (Branch F (Dloc 093918)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),218)) {
      TraceOperation 093911 (Call (Floc 043620) [Con 27] Sp);
      PushFrame 093911;
      SetLocal 1 27;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 093918
    }
  } else {
    Jump: 093925
  }
LocReturn 093911:
  PushStack call_result;
  TraceOperation 093917 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 093918:
  TraceOperation 093918 (Call (Floc 043620) [Con 19] Sp);
  PushFrame 093918;
  SetLocal 1 19;
  JumpCall: 043620, #actuals: 1
LocReturn 093918:
  PushStack call_result;
  TraceOperation 093924 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 093925:
  TraceOperation 093925 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 093929 (Clear_attr (Con 216) (Con 26));
    Let b3 = M[002698];
    SetByte 002698 ClearBit(b3,5);
    TraceOperation 093932 (Call (Floc 034480) [] Sp);
    PushFrame 093932;
    JumpCall: 034480, #actuals: 0
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocReturn 093932:
  PushStack call_result;
  TraceOperation 093937 (Set_attr (Con 216) (Con 26));
  Let b1 = M[002698];
  SetByte 002698 SetBit(b1,5);
  TraceOperation 093940 Rtrue;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[599]--------------------------------------------------
LocRoutine 093942:
  MakeRoutineFrame 0;
  Jump: 093943
LocOp 093943:
  TraceOperation 093943 (Je [Con 215,Var (Global 195)] (Branch F (Dloc 094605)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(215,MakeHiLo(b1,b2))) {
    TraceOperation 093948 (Je [Var (Global 203),Con 150] (Branch F (Dloc 093971)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 093952 (Je [Var (Global 201),Con 30] (Branch F (Dloc 093971)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 093956 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 093959 (Call (Floc 022042) [Con 22,Con 215,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame 093959;
        SetLocal 1 22;
        SetLocal 2 215;
        SetLocal 3 MakeHiLo(b7,b8);
        JumpCall: 022042, #actuals: 3
      } else {
        Jump: 093971
      }
    } else {
      Jump: 093971
    }
  } else {
    Jump: 094605
  }
LocReturn 093959:
  PushStack call_result;
  TraceOperation 093967 (Store (Con 211) (Con 215));
  SetByte 008298 0;
  SetByte 008299 215;
  TraceOperation 093970 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 093971:
  TraceOperation 093971 (Je [Var (Global 203),Con 75] (Branch F (Dloc 093989)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 093975 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 093978 (Call (Floc 022042) [Con 75,Con 215] Sp);
    PushFrame 093978;
    SetLocal 1 75;
    SetLocal 2 215;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 093989
  }
LocReturn 093978:
  PushStack call_result;
  TraceOperation 093985 (Store (Con 211) (Con 215));
  SetByte 008298 0;
  SetByte 008299 215;
  TraceOperation 093988 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 093989:
  TraceOperation 093989 (Je [Var (Global 203),Con 174] (Branch F (Dloc 094012)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 093993 (Je [Var (Global 201),Con 28] (Branch F (Dloc 094012)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 093997 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 094000 (Call (Floc 022042) [Con 22,Con 215,Con 28] Sp);
      PushFrame 094000;
      SetLocal 1 22;
      SetLocal 2 215;
      SetLocal 3 28;
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 094012
    }
  } else {
    Jump: 094012
  }
LocReturn 094000:
  PushStack call_result;
  TraceOperation 094008 (Store (Con 211) (Con 215));
  SetByte 008298 0;
  SetByte 008299 215;
  TraceOperation 094011 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 094012:
  TraceOperation 094012 (Je [Var (Global 0),Con 218] (Branch F (Dloc 094565)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),218)) {
    TraceOperation 094017 (Je [Var (Global 203),Con 103,Con 125] (Branch F (Dloc 094409)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),103),Equal(MakeHiLo(b3,b4),125))) {
      TraceOperation 094024 (Je [Var (Global 201),Con 176,Con 177] (Branch F (Dloc 094409)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (LogOr(Equal(MakeHiLo(b5,b6),176),Equal(MakeHiLo(b5,b6),177))) {
        TraceOperation 094031 (Jz (Var (Global 214)) (Branch F (Dloc 094131)));
        Let b7 = M[008336];
        Let b8 = M[008337];
        if (IsZero(MakeHiLo(b7,b8))) {
          TraceOperation 094035 (Print "\"");
          GamePrint "\"";
          TraceOperation 094038 (Print_paddr (Var (Global 14)));
          Let b9 = M[007936];
          Let b10 = M[007937];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
          TraceOperation 094040 (Print_ret "stupid. Are you aware,\" he asks, \"that this ship is in space, that space is an almost perfect vacuum, and that the hatch is the only thing holding in all the air?\"");
          GamePrint "stupid. Are you aware,\" he asks, \"that this ship is in space, that space is an almost perfect vacuum, and that the hatch is the only thing holding in all the air?\"\n";
          PopFrame return_address_11;
          JumpReturn: return_address_11, result: 1
        } else {
          Jump: 094131
        }
      } else {
        Jump: 094409
      }
    } else {
      Jump: 094409
    }
  } else {
    Jump: 094565
  }
LocOp 094131:
  TraceOperation 094131 (Je [Var (Global 220),Con 3] (Branch F (Dloc 094179)));
  Let b1 = M[008348];
  Let b2 = M[008349];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 094135 (Print "\"After the help I got last time? ");
    GamePrint "\"After the help I got last time? ";
    TraceOperation 094160 (Print_paddr (Var (Global 14)));
    Let b3 = M[007936];
    Let b4 = M[007937];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 094162 (Print_ret "ungrateful. Go away.\"");
    GamePrint "ungrateful. Go away.\"\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 094179
  }
LocOp 094179:
  TraceOperation 094179 (Je [Var (Global 220),Con 4] (Branch F (Dloc 094192)));
  Let b1 = M[008348];
  Let b2 = M[008349];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 094183 (Print_ret "\"I did.\"");
    GamePrint "\"I did.\"\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 094192
  }
LocOp 094192:
  TraceOperation 094192 (Jg (Var (Global 220)) (Con 0) (Branch F (Dloc 094230)));
  Let b1 = M[008348];
  Let b2 = M[008349];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 094196 (Print "\"Yes, I said I'd do it! ");
    GamePrint "\"Yes, I said I'd do it! ";
    TraceOperation 094217 (Print_paddr (Var (Global 14)));
    Let b3 = M[007936];
    Let b4 = M[007937];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 094219 (Print_ret "repetitious.\"");
    GamePrint "repetitious.\"\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  } else {
    Jump: 094230
  }
LocOp 094230:
  TraceOperation 094230 (Store (Con 236) (Con 1));
  SetByte 008348 0;
  SetByte 008349 1;
  TraceOperation 094233 (Call (Floc 022320) [Con -17989,Con 12] Sp);
  PushFrame 094233;
  SetLocal 1 -17989;
  SetLocal 2 12;
  JumpCall: 022320, #actuals: 2
LocReturn 094233:
  PushStack call_result;
  TraceOperation 094241 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 094246 (Print "\"");
  GamePrint "\"";
  TraceOperation 094249 (Print_paddr (Var (Global 14)));
  Let b2 = M[007936];
  Let b3 = M[007937];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 094251 (Print "demanding. Do this. Pick up that. Unjam the opening mechanism of the other. Meet me in the hatchway ");
  GamePrint "demanding. Do this. Pick up that. Unjam the opening mechanism of the other. Meet me in the hatchway ";
  TraceOperation 094316 (Print_obj (Con 175));
  Let b4 = M[002333];
  Let b5 = M[002334];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  if (IsZeroByte(b6)) {
    GamePrint "";
    TraceOperation 094318 (Print_ret " in twelve turns. I suppose,\" he mutters, \"you can count up to twelve. So hard to know with morons. And don't forget to bring the proper tool.\"");
    GamePrint " in twelve turns. I suppose,\" he mutters, \"you can count up to twelve. So hard to know with morons. And don't forget to bring the proper tool.\"\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
    TraceOperation 094318 (Print_ret " in twelve turns. I suppose,\" he mutters, \"you can count up to twelve. So hard to know with morons. And don't forget to bring the proper tool.\"");
    GamePrint " in twelve turns. I suppose,\" he mutters, \"you can count up to twelve. So hard to know with morons. And don't forget to bring the proper tool.\"\n";
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 1
  }
LocOp 094409:
  TraceOperation 094409 (Je [Var (Global 203),Con 174] (Branch F (Dloc 094511)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 094414 (Je [Var (Global 201),Con 13] (Branch F (Dloc 094511)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),13)) {
      TraceOperation 094419 (Jg (Var (Global 220)) (Con 0) (Branch F (Dloc 094511)));
      Let b5 = M[008348];
      Let b6 = M[008349];
      if (GreaterThan(MakeHiLo(b5,b6),0)) {
        TraceOperation 094424 (Print_ret "Marvin looks scornful. \"How did you get past my door if you're so primordially benighted that you don't even know which tool is needed for a job like this?\"");
        GamePrint "Marvin looks scornful. \"How did you get past my door if you're so primordially benighted that you don't even know which tool is needed for a job like this?\"\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      } else {
        Jump: 094511
      }
    } else {
      Jump: 094511
    }
  } else {
    Jump: 094511
  }
LocOp 094511:
  TraceOperation 094511 (Print "\"Please don't feel you have to take any notice of me. I'm just a menial robot.\"");
  GamePrint "\"Please don't feel you have to take any notice of me. I'm just a menial robot.\"";
  TraceOperation 094558 New_line;
  GamePrint "\n";
  TraceOperation 094559 (Call (Floc 043634) [] Sp);
  PushFrame 094559;
  JumpCall: 043634, #actuals: 0
LocReturn 094559:
  PushStack call_result;
  TraceOperation 094564 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 094565:
  TraceOperation 094565 (Print "\"I think you ought to know I'm feeling very depressed.\"");
  GamePrint "\"I think you ought to know I'm feeling very depressed.\"";
  TraceOperation 094598 New_line;
  GamePrint "\n";
  TraceOperation 094599 (Call (Floc 043634) [] Sp);
  PushFrame 094599;
  JumpCall: 043634, #actuals: 0
LocReturn 094599:
  PushStack call_result;
  TraceOperation 094604 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 094605:
  TraceOperation 094605 (Je [Var (Global 203),Con 22] (Branch F (Dloc 094722)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 094610 (Je [Var (Global 202),Con 28] (Branch F (Dloc 094722)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 094615 (Print_ret "\"Being clever doesn't always make you happy, you know. Look at me, brain the size of a planet, how many points do you think I've got? Minus thirty zillion at the last count.\"");
      GamePrint "\"Being clever doesn't always make you happy, you know. Look at me, brain the size of a planet, how many points do you think I've got? Minus thirty zillion at the last count.\"\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 094722
    }
  } else {
    Jump: 094722
  }
LocOp 094722:
  TraceOperation 094722 (Je [Var (Global 203),Con 69] (Branch F (Dloc 094751)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 094726 (Je [Var (Global 151),Con 2] (Branch F (Dloc 094751)));
    Let b3 = M[008210];
    Let b4 = M[008211];
    if (Equal(MakeHiLo(b3,b4),2)) {
      TraceOperation 094730 (Jin (Con 215) (Con 218) (Branch F (Dloc 094741)));
      Let b5 = M[002690];
      if (Equal(218,Widen(b5))) {
        TraceOperation 094734 (Call (Floc 043620) [Con 19] Sp);
        PushFrame 094734;
        SetLocal 1 19;
        JumpCall: 043620, #actuals: 1
      } else {
        Jump: 094741
      }
    } else {
      Jump: 094751
    }
  } else {
    Jump: 094751
  }
LocReturn 094734:
  PushStack call_result;
  TraceOperation 094740 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[600]--------------------------------------------------
LocRoutine 094764:
  MakeRoutineFrame 0;
  Jump: 094765
LocOp 094765:
  TraceOperation 094765 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[601]--------------------------------------------------
LocRoutine 094796:
  MakeRoutineFrame 0;
  Jump: 094797
LocOp 094797:
  TraceOperation 094797 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 094802 (Call (Floc 022340) [Con -17989] Sp);
  PushFrame 094802;
  SetLocal 1 -17989;
  JumpCall: 022340, #actuals: 1
LocReturn 094802:
  PushStack call_result;
  TraceOperation 094809 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 094814 (Set_attr (Con 177) (Con 23));
  Let b2 = M[002346];
  SetByte 002346 SetBit(b2,0);
  TraceOperation 094817 (Insert_obj (Con 215) (Con 218));
  Let b3 = M[002690];
  if (IsZero(Widen(b3))) {
    SetByte 002690 218;
    Let b4 = M[002719];
    SetByte 002691 LoByte(Widen(b4));
    SetByte 002719 215;
    TraceOperation 094820 (Insert_obj (Var (Global 219)) (Con 215));
    Let b5 = M[008346];
    Let b6 = M[008347];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
    if (IsZero(Widen(b7))) {
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) 215;
      Let b8 = M[002692];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b8));
      SetByte 002692 b6;
      TraceOperation 094823 (Print "Marvin fiddles inside the ");
      GamePrint "Marvin fiddles inside the ";
      TraceOperation 094840 (Print_obj (Con 176));
      Let b9 = M[002342];
      Let b10 = M[002343];
      Let b11 = M[Address(MakeHiLo(b9,b10))];
      if (IsZeroByte(b11)) {
        GamePrint "";
        TraceOperation 094842 (Print " with the ");
        GamePrint " with the ";
        TraceOperation 094847 (Print_obj (Var (Global 219)));
        Let b12 = M[008346];
        Let b13 = M[008347];
        Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),7)];
        Let b15 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),7),1)];
        Let b16 = M[Address(MakeHiLo(b14,b15))];
        if (IsZeroByte(b16)) {
          GamePrint "";
          TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
          GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
          PopFrame return_address_17;
          JumpReturn: return_address_17, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b14,b15)),1));
          TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
          GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
          PopFrame return_address_18;
          JumpReturn: return_address_18, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
        TraceOperation 094842 (Print " with the ");
        GamePrint " with the ";
        TraceOperation 094847 (Print_obj (Var (Global 219)));
        Let b19 = M[008346];
        Let b20 = M[008347];
        Let b21 = M[Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),7)];
        Let b22 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),7),1)];
        Let b23 = M[Address(MakeHiLo(b21,b22))];
        if (IsZeroByte(b23)) {
          GamePrint "";
          TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
          GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
          PopFrame return_address_24;
          JumpReturn: return_address_24, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b21,b22)),1));
          TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
          GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
          PopFrame return_address_25;
          JumpReturn: return_address_25, result: 1
        }
      }
    } else {
      Let b26 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b26),MakeHiLo(b5,b6))) {
        Let b27 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b27));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) 215;
        Let b28 = M[002692];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b28));
        SetByte 002692 b6;
        TraceOperation 094823 (Print "Marvin fiddles inside the ");
        GamePrint "Marvin fiddles inside the ";
        TraceOperation 094840 (Print_obj (Con 176));
        Let b29 = M[002342];
        Let b30 = M[002343];
        Let b31 = M[Address(MakeHiLo(b29,b30))];
        if (IsZeroByte(b31)) {
          GamePrint "";
          TraceOperation 094842 (Print " with the ");
          GamePrint " with the ";
          TraceOperation 094847 (Print_obj (Var (Global 219)));
          Let b32 = M[008346];
          Let b33 = M[008347];
          Let b34 = M[Offset(Offset(000751,Mul(MakeHiLo(b32,b33),9)),7)];
          Let b35 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b32,b33),9)),7),1)];
          Let b36 = M[Address(MakeHiLo(b34,b35))];
          if (IsZeroByte(b36)) {
            GamePrint "";
            TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
            GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
            PopFrame return_address_37;
            JumpReturn: return_address_37, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b34,b35)),1));
            TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
            GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
            PopFrame return_address_38;
            JumpReturn: return_address_38, result: 1
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b29,b30)),1));
          TraceOperation 094842 (Print " with the ");
          GamePrint " with the ";
          TraceOperation 094847 (Print_obj (Var (Global 219)));
          Let b39 = M[008346];
          Let b40 = M[008347];
          Let b41 = M[Offset(Offset(000751,Mul(MakeHiLo(b39,b40),9)),7)];
          Let b42 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b39,b40),9)),7),1)];
          Let b43 = M[Address(MakeHiLo(b41,b42))];
          if (IsZeroByte(b43)) {
            GamePrint "";
            TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
            GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
            PopFrame return_address_44;
            JumpReturn: return_address_44, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b41,b42)),1));
            TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
            GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
            PopFrame return_address_45;
            JumpReturn: return_address_45, result: 1
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b46 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b46),215)) {
      Let b47 = M[002691];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b47));
      SetByte 002690 218;
      Let b48 = M[002719];
      SetByte 002691 LoByte(Widen(b48));
      SetByte 002719 215;
      TraceOperation 094820 (Insert_obj (Var (Global 219)) (Con 215));
      Let b49 = M[008346];
      Let b50 = M[008347];
      Let b51 = M[Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),4)];
      if (IsZero(Widen(b51))) {
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),4) 215;
        Let b52 = M[002692];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),5) LoByte(Widen(b52));
        SetByte 002692 b50;
        TraceOperation 094823 (Print "Marvin fiddles inside the ");
        GamePrint "Marvin fiddles inside the ";
        TraceOperation 094840 (Print_obj (Con 176));
        Let b53 = M[002342];
        Let b54 = M[002343];
        Let b55 = M[Address(MakeHiLo(b53,b54))];
        if (IsZeroByte(b55)) {
          GamePrint "";
          TraceOperation 094842 (Print " with the ");
          GamePrint " with the ";
          TraceOperation 094847 (Print_obj (Var (Global 219)));
          Let b56 = M[008346];
          Let b57 = M[008347];
          Let b58 = M[Offset(Offset(000751,Mul(MakeHiLo(b56,b57),9)),7)];
          Let b59 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b56,b57),9)),7),1)];
          Let b60 = M[Address(MakeHiLo(b58,b59))];
          if (IsZeroByte(b60)) {
            GamePrint "";
            TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
            GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
            PopFrame return_address_61;
            JumpReturn: return_address_61, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b58,b59)),1));
            TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
            GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
            PopFrame return_address_62;
            JumpReturn: return_address_62, result: 1
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b53,b54)),1));
          TraceOperation 094842 (Print " with the ");
          GamePrint " with the ";
          TraceOperation 094847 (Print_obj (Var (Global 219)));
          Let b63 = M[008346];
          Let b64 = M[008347];
          Let b65 = M[Offset(Offset(000751,Mul(MakeHiLo(b63,b64),9)),7)];
          Let b66 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b63,b64),9)),7),1)];
          Let b67 = M[Address(MakeHiLo(b65,b66))];
          if (IsZeroByte(b67)) {
            GamePrint "";
            TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
            GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
            PopFrame return_address_68;
            JumpReturn: return_address_68, result: 1
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b65,b66)),1));
            TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
            GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
            PopFrame return_address_69;
            JumpReturn: return_address_69, result: 1
          }
        }
      } else {
        Let b70 = M[Offset(Offset(000751,Mul(Widen(b51),9)),6)];
        if (Equal(Widen(b70),MakeHiLo(b49,b50))) {
          Let b71 = M[Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b51),9)),6) LoByte(Widen(b71));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),4) 215;
          Let b72 = M[002692];
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),5) LoByte(Widen(b72));
          SetByte 002692 b50;
          TraceOperation 094823 (Print "Marvin fiddles inside the ");
          GamePrint "Marvin fiddles inside the ";
          TraceOperation 094840 (Print_obj (Con 176));
          Let b73 = M[002342];
          Let b74 = M[002343];
          Let b75 = M[Address(MakeHiLo(b73,b74))];
          if (IsZeroByte(b75)) {
            GamePrint "";
            TraceOperation 094842 (Print " with the ");
            GamePrint " with the ";
            TraceOperation 094847 (Print_obj (Var (Global 219)));
            Let b76 = M[008346];
            Let b77 = M[008347];
            Let b78 = M[Offset(Offset(000751,Mul(MakeHiLo(b76,b77),9)),7)];
            Let b79 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b76,b77),9)),7),1)];
            Let b80 = M[Address(MakeHiLo(b78,b79))];
            if (IsZeroByte(b80)) {
              GamePrint "";
              TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
              GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
              PopFrame return_address_81;
              JumpReturn: return_address_81, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b78,b79)),1));
              TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
              GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
              PopFrame return_address_82;
              JumpReturn: return_address_82, result: 1
            }
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b73,b74)),1));
            TraceOperation 094842 (Print " with the ");
            GamePrint " with the ";
            TraceOperation 094847 (Print_obj (Var (Global 219)));
            Let b83 = M[008346];
            Let b84 = M[008347];
            Let b85 = M[Offset(Offset(000751,Mul(MakeHiLo(b83,b84),9)),7)];
            Let b86 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b83,b84),9)),7),1)];
            Let b87 = M[Address(MakeHiLo(b85,b86))];
            if (IsZeroByte(b87)) {
              GamePrint "";
              TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
              GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
              PopFrame return_address_88;
              JumpReturn: return_address_88, result: 1
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b85,b86)),1));
              TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
              GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
              PopFrame return_address_89;
              JumpReturn: return_address_89, result: 1
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
--[602]--------------------------------------------------
LocRoutine 095088:
  MakeRoutineFrame 0;
  Jump: 095089
LocOp 095089:
  TraceOperation 095089 (Print_ret ".\"");
  GamePrint ".\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[603]--------------------------------------------------
LocRoutine 095094:
  MakeRoutineFrame 0;
  Jump: 095095
LocOp 095095:
  TraceOperation 095095 (Call (Floc 022320) [Con -17989,Con -1] Sp);
  PushFrame 095095;
  SetLocal 1 -17989;
  SetLocal 2 -1;
  JumpCall: 022320, #actuals: 2
LocReturn 095095:
  PushStack call_result;
  TraceOperation 095104 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 095109 (Je [Var (Global 220),Con 2] (Branch F (Dloc 095154)));
  Let b2 = M[008348];
  Let b3 = M[008349];
  if (Equal(MakeHiLo(b2,b3),2)) {
    TraceOperation 095113 (Store (Con 236) (Con 3));
    SetByte 008348 0;
    SetByte 008349 3;
    TraceOperation 095116 New_line;
    GamePrint "\n";
    TraceOperation 095117 (Je [Var (Global 0),Con 178] (Branch F (Dloc 095141)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    if (Equal(MakeHiLo(b4,b5),178)) {
      TraceOperation 095121 (Print "Marvin emerges from the ");
      GamePrint "Marvin emerges from the ";
      TraceOperation 095136 (Print_obj (Con 175));
      Let b6 = M[002333];
      Let b7 = M[002334];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 095138 (Print ". ");
        GamePrint ". ";
        Jump: 095141
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 095138 (Print ". ");
        GamePrint ". ";
        Jump: 095141
      }
    } else {
      Jump: 095141
    }
  } else {
    Jump: 095154
  }
LocOp 095141:
  TraceOperation 095141 (Print "\"");
  GamePrint "\"";
  TraceOperation 095144 (Call (Floc 095546) [] Sp);
  PushFrame 095144;
  JumpCall: 095546, #actuals: 0
LocReturn 095144:
  PushStack call_result;
  TraceOperation 095149 (Store (Con 236) (Con 3));
  SetByte 008348 0;
  SetByte 008349 3;
  TraceOperation 095152 (Ret (Var (Global 220)));
  Let b1 = M[008348];
  Let b2 = M[008349];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
LocOp 095154:
  TraceOperation 095154 (Jin (Con 215) (Con 175) (Branch F (Dloc 095279)));
  Let b1 = M[002690];
  if (Equal(175,Widen(b1))) {
    TraceOperation 095159 (Je [Var (Global 0),Con 175] (Branch F (Dloc 095222)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    if (Equal(MakeHiLo(b2,b3),175)) {
      TraceOperation 095163 (Jz (Var (Global 219)) (Branch F (Dloc 095183)));
      Let b4 = M[008346];
      Let b5 = M[008347];
      if (IsZero(MakeHiLo(b4,b5))) {
        Jump: 095166
      } else {
        Jump: 095183
      }
    } else {
      Jump: 095222
    }
  } else {
    Jump: 095279
  }
LocOp 095166:
  TraceOperation 095166 (Call (Floc 020718) [Var (Global 67)] (Global 219));
  Let b1 = M[008042];
  Let b2 = M[008043];
  PushFrame 095166;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020718, #actuals: 1
LocReturn 095166:
  SetByte 008346 HiByte(call_result);
  SetByte 008347 LoByte(call_result);
  TraceOperation 095172 (Call (Floc 043468) [Var (Global 219),Con 31] Sp);
  Let b1 = M[008346];
  Let b2 = M[008347];
  PushFrame 095172;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 31;
  JumpCall: 043468, #actuals: 2
LocReturn 095172:
  PushStack call_result;
  TraceOperation 095179 (Jz (Var Sp) (Branch F (Dloc 095166)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 095183
  } else {
    Jump: 095166
  }
LocOp 095183:
  TraceOperation 095183 (Store (Con 236) (Con 2));
  SetByte 008348 0;
  SetByte 008349 2;
  TraceOperation 095186 (Print "Marvin, looking bored, says \"Hand me");
  GamePrint "Marvin, looking bored, says \"Hand me";
  TraceOperation 095211 (Call (Floc 043738) [Var (Global 219)] Sp);
  Let b1 = M[008346];
  Let b2 = M[008347];
  PushFrame 095211;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 043738, #actuals: 1
LocReturn 095211:
  PushStack call_result;
  TraceOperation 095217 (Print_ret ".\"");
  GamePrint ".\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 095222:
  TraceOperation 095222 New_line;
  GamePrint "\n";
  TraceOperation 095223 (Print "Marvin wanders up to you. \"I went to the ");
  GamePrint "Marvin wanders up to you. \"I went to the ";
  TraceOperation 095250 (Print_obj (Con 175));
  Let b1 = M[002333];
  Let b2 = M[002334];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 095252 (Print " but you never showed up. ");
    GamePrint " but you never showed up. ";
    TraceOperation 095269 (Call (Floc 095546) [] Sp);
    PushFrame 095269;
    JumpCall: 095546, #actuals: 0
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 095252 (Print " but you never showed up. ");
    GamePrint " but you never showed up. ";
    TraceOperation 095269 (Call (Floc 095546) [] Sp);
    PushFrame 095269;
    JumpCall: 095546, #actuals: 0
  }
LocReturn 095269:
  PushStack call_result;
  TraceOperation 095274 (Store (Con 236) (Con 3));
  SetByte 008348 0;
  SetByte 008349 3;
  TraceOperation 095277 (Ret (Var (Global 220)));
  Let b1 = M[008348];
  Let b2 = M[008349];
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: MakeHiLo(b1,b2)
--[604]--------------------------------------------------
LocRoutine 095546:
  MakeRoutineFrame 0;
  Jump: 095547
LocOp 095547:
  TraceOperation 095547 (Call (Floc 022340) [Con -17989] Sp);
  PushFrame 095547;
  SetLocal 1 -17989;
  JumpCall: 022340, #actuals: 1
LocReturn 095547:
  PushStack call_result;
  TraceOperation 095554 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 095559 (Insert_obj (Con 215) (Con 218));
  Let b2 = M[002690];
  if (IsZero(Widen(b2))) {
    SetByte 002690 218;
    Let b3 = M[002719];
    SetByte 002691 LoByte(Widen(b3));
    SetByte 002719 215;
    TraceOperation 095562 (Print "Ah. I was misled into thinking that you wanted me to open the hatch, probably by the fact that you asked me to. Obviously you changed your mind or I misunderstood you or you are a moronic imbecile. I wonder which");
    GamePrint "Ah. I was misled into thinking that you wanted me to open the hatch, probably by the fact that you asked me to. Obviously you changed your mind or I misunderstood you or you are a moronic imbecile. I wonder which";
    TraceOperation 095683 (Je [Var (Global 0),Con 218] (Branch T (Dloc 095718)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    if (Equal(MakeHiLo(b4,b5),218)) {
      Jump: 095718
    } else {
      TraceOperation 095687 (Print ". I'm going back to my pantry to be alone with my grief");
      GamePrint ". I'm going back to my pantry to be alone with my grief";
      Jump: 095718
    }
  } else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b6),215)) {
      Let b7 = M[002691];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b7));
      SetByte 002690 218;
      Let b8 = M[002719];
      SetByte 002691 LoByte(Widen(b8));
      SetByte 002719 215;
      TraceOperation 095562 (Print "Ah. I was misled into thinking that you wanted me to open the hatch, probably by the fact that you asked me to. Obviously you changed your mind or I misunderstood you or you are a moronic imbecile. I wonder which");
      GamePrint "Ah. I was misled into thinking that you wanted me to open the hatch, probably by the fact that you asked me to. Obviously you changed your mind or I misunderstood you or you are a moronic imbecile. I wonder which";
      TraceOperation 095683 (Je [Var (Global 0),Con 218] (Branch T (Dloc 095718)));
      Let b9 = M[007908];
      Let b10 = M[007909];
      if (Equal(MakeHiLo(b9,b10),218)) {
        Jump: 095718
      } else {
        TraceOperation 095687 (Print ". I'm going back to my pantry to be alone with my grief");
        GamePrint ". I'm going back to my pantry to be alone with my grief";
        Jump: 095718
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 095718:
  TraceOperation 095718 (Print_ret ".\" Marvin stalks miserably away.");
  GamePrint ".\" Marvin stalks miserably away.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[605]--------------------------------------------------
LocRoutine 095744:
  MakeRoutineFrame 0;
  Jump: 095745
LocOp 095745:
  TraceOperation 095745 (Je [Var (Global 203),Con 171] (Branch F (Dloc 095766)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),171)) {
    TraceOperation 095749 (Je [Var (Global 201),Con 214] (Branch F (Dloc 095766)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),214)) {
      TraceOperation 095753 (Jin (Con 212) (Con 214) (Branch F (Dloc 095766)));
      Let b5 = M[002663];
      if (Equal(214,Widen(b5))) {
        TraceOperation 095757 (Call (Floc 022042) [Con 171,Con 212,Var (Global 202)] Sp);
        Let b6 = M[008312];
        Let b7 = M[008313];
        PushFrame 095757;
        SetLocal 1 171;
        SetLocal 2 212;
        SetLocal 3 MakeHiLo(b6,b7);
        JumpCall: 022042, #actuals: 3
      } else {
        Jump: 095766
      }
    } else {
      Jump: 095766
    }
  } else {
    Jump: 095766
  }
LocReturn 095757:
  PushStack call_result;
  TraceOperation 095765 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 095766:
  TraceOperation 095766 (Je [Var (Global 203),Con 63,Con 120,Con 61] (Branch F (Dloc 095963)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),120)),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 095774 (Print "The pot is filled with fertile soil");
    GamePrint "The pot is filled with fertile soil";
    TraceOperation 095795 (Jin (Con 212) (Con 214) (Branch F (Dloc 095849)));
    Let b3 = M[002663];
    if (Equal(214,Widen(b3))) {
      TraceOperation 095799 (Print ", out of which has sprouted a ");
      GamePrint ", out of which has sprouted a ";
      TraceOperation 095814 (Jz (Var (Global 217)) (Branch T (Dloc 095833)));
      Let b4 = M[008342];
      Let b5 = M[008343];
      if (IsZero(MakeHiLo(b4,b5))) {
        Jump: 095833
      } else {
        TraceOperation 095817 (Print "large, leafy plant");
        GamePrint "large, leafy plant";
        TraceOperation 095830 (Jump 095960);
        Jump: 095960
      }
    } else {
      Jump: 095849
    }
  } else {
    Jump: 095963
  }
LocOp 095833:
  TraceOperation 095833 (Print "tiny plant stalk");
  GamePrint "tiny plant stalk";
  TraceOperation 095846 (Jump 095960);
  Jump: 095960
--[606]--------------------------------------------------
LocRoutine 095868:
  MakeRoutineFrame 0;
  Jump: 095869
LocOp 095869:
  TraceOperation 095869 (Jump 122951);
  Jump: 122951
--[607]--------------------------------------------------
LocRoutine 095950:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 -9887;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 10753;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 -29414;
      }
    }
  }
  Jump: 095957
LocOp 095957:
  TraceOperation 095957 (Get_prop (Var (Global 156)) (Con 165) (Global 163));
  Let b1 = M[008220];
  Let b2 = M[008221];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Error: getPropsA
LocOp 095980:
  TraceOperation 095980 (Insert_obj (Var (Global 201)) (Con 219));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 219;
    Let b4 = M[002728];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b4));
    SetByte 002728 b2;
    TraceOperation 095983 (Inc (Con 234));
    Let b5 = M[008344];
    Let b6 = M[008345];
    SetByte 008344 HiByte(Add(MakeHiLo(b5,b6),1));
    SetByte 008345 LoByte(Add(MakeHiLo(b5,b6),1));
    TraceOperation 095985 (Je [Var (Global 218),Con 4] (Branch F (Dloc 096002)));
    Let b7 = M[008344];
    Let b8 = M[008345];
    if (Equal(MakeHiLo(b7,b8),4)) {
      TraceOperation 095989 (Call (Floc 022320) [Con -17504,Con 10] Sp);
      PushFrame 095989;
      SetLocal 1 -17504;
      SetLocal 2 10;
      JumpCall: 022320, #actuals: 2
    } else {
      Jump: 096002
    }
  } else {
    Let b9 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b9),MakeHiLo(b1,b2))) {
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b10));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 219;
      Let b11 = M[002728];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b11));
      SetByte 002728 b2;
      TraceOperation 095983 (Inc (Con 234));
      Let b12 = M[008344];
      Let b13 = M[008345];
      SetByte 008344 HiByte(Add(MakeHiLo(b12,b13),1));
      SetByte 008345 LoByte(Add(MakeHiLo(b12,b13),1));
      TraceOperation 095985 (Je [Var (Global 218),Con 4] (Branch F (Dloc 096002)));
      Let b14 = M[008344];
      Let b15 = M[008345];
      if (Equal(MakeHiLo(b14,b15),4)) {
        TraceOperation 095989 (Call (Floc 022320) [Con -17504,Con 10] Sp);
        PushFrame 095989;
        SetLocal 1 -17504;
        SetLocal 2 10;
        JumpCall: 022320, #actuals: 2
      } else {
        Jump: 096002
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 095989:
  PushStack call_result;
  TraceOperation 095997 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  Jump: 096002
LocOp 096002:
  TraceOperation 096002 (Print "You dig a ");
  GamePrint "You dig a ";
  TraceOperation 096009 (Print_obj (Con 115));
  Let b1 = M[001793];
  Let b2 = M[001794];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 096011 (Print_ret ", gingerly place the fluff at the bottom, and cover it over.");
    GamePrint ", gingerly place the fluff at the bottom, and cover it over.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 096011 (Print_ret ", gingerly place the fluff at the bottom, and cover it over.");
    GamePrint ", gingerly place the fluff at the bottom, and cover it over.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
LocOp 096048:
  TraceOperation 096048 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 096054 (Je [Var (Global 201),Con 214] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),214)) {
      TraceOperation 096058 (Call (Floc 057650) [] Sp);
      PushFrame 096058;
      JumpCall: 057650, #actuals: 0
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 096058:
  PushStack call_result;
  TraceOperation 096063 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[608]--------------------------------------------------
LocRoutine 096064:
  MakeRoutineFrame 0;
  Jump: 096065
LocOp 096065:
  TraceOperation 096065 (Insert_obj (Con 212) (Con 214));
  Let b1 = M[002663];
  if (IsZero(Widen(b1))) {
    SetByte 002663 214;
    Let b2 = M[002683];
    SetByte 002664 LoByte(Widen(b2));
    SetByte 002683 212;
    TraceOperation 096068 (Call (Floc 043370) [Con 214] Sp);
    PushFrame 096068;
    SetLocal 1 214;
    JumpCall: 043370, #actuals: 1
  } else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b3),212)) {
      Let b4 = M[002664];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b4));
      SetByte 002663 214;
      Let b5 = M[002683];
      SetByte 002664 LoByte(Widen(b5));
      SetByte 002683 212;
      TraceOperation 096068 (Call (Floc 043370) [Con 214] Sp);
      PushFrame 096068;
      SetLocal 1 214;
      JumpCall: 043370, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 096068:
  PushStack call_result;
  TraceOperation 096074 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 096077 New_line;
    GamePrint "\n";
    TraceOperation 096078 (Print "You notice a tiny movement from the ");
    GamePrint "You notice a tiny movement from the ";
    TraceOperation 096099 (Print_obj (Con 214));
    Let b3 = M[002684];
    Let b4 = M[002685];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 096101 (Print_ret ". You look closely, and see a tiny sprout poking out of the soil.");
      GamePrint ". You look closely, and see a tiny sprout poking out of the soil.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 096101 (Print_ret ". You look closely, and see a tiny sprout poking out of the soil.");
      GamePrint ". You look closely, and see a tiny sprout poking out of the soil.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  }
--[609]--------------------------------------------------
LocRoutine 096138:
  MakeRoutineFrame 0;
  Jump: 096139
LocOp 096139:
  TraceOperation 096139 (Je [Var (Global 203),Con 61] (Branch F (Dloc 096230)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 096144 (Jz (Var (Global 217)) (Branch T (Dloc 096211)));
    Let b3 = M[008342];
    Let b4 = M[008343];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 096211
    } else {
      TraceOperation 096148 (Print "The plant is now large and leafy.");
      GamePrint "The plant is now large and leafy.";
      TraceOperation 096167 (Test_attr (Con 211) (Con 27) (Branch F (Dloc 096209)));
      Let b5 = M[002653];
      if (TestBit(b5,4)) {
        TraceOperation 096171 (Call (Floc 043370) [Con 211] Sp);
        PushFrame 096171;
        SetLocal 1 211;
        JumpCall: 043370, #actuals: 1
      } else {
        Jump: 096209
      }
    }
  } else {
    Jump: 096230
  }
LocReturn 096171:
  PushStack call_result;
  TraceOperation 096177 (Jz (Var Sp) (Branch T (Dloc 096209)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 096209
  } else {
    TraceOperation 096180 (Print " Hanging from it is a large, succulent fruit.");
    GamePrint " Hanging from it is a large, succulent fruit.";
    Jump: 096209
  }
LocOp 096209:
  TraceOperation 096209 New_line;
  GamePrint "\n";
  TraceOperation 096210 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 096211:
  TraceOperation 096211 (Print_ret "The plant is just a tiny stem.");
  GamePrint "The plant is just a tiny stem.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 096230:
  TraceOperation 096230 (Je [Var (Global 203),Con 53,Con 124] (Branch F (Dloc 096258)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),53),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 096236 (Je [Var (Global 201),Con 212] (Branch F (Dloc 096258)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),212)) {
      TraceOperation 096240 (Jz (Var (Global 202)) (Branch T (Dloc 096249)));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 096249
      } else {
        TraceOperation 096243 (Call (Floc 057842) [] Sp);
        PushFrame 096243;
        JumpCall: 057842, #actuals: 0
      }
    } else {
      Jump: 096258
    }
  } else {
    Jump: 096258
  }
LocReturn 096243:
  PushStack call_result;
  TraceOperation 096248 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 096249:
  TraceOperation 096249 (Call (Floc 022042) [Var (Global 203),Con 214,Var (Global 202)] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008312];
  Let b4 = M[008313];
  PushFrame 096249;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 214;
  SetLocal 3 MakeHiLo(b3,b4);
  JumpCall: 022042, #actuals: 3
LocReturn 096249:
  PushStack call_result;
  TraceOperation 096257 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 096258:
  TraceOperation 096258 (Je [Var (Global 203),Con 171] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),171)) {
    TraceOperation 096262 (Jz (Var (Global 217)) (Branch F Dfalse));
    Let b3 = M[008342];
    Let b4 = M[008343];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 096265 (Je [Var (Global 202),Con 9,Con 204,Con 122] (Branch F Dfalse));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),9),Equal(MakeHiLo(b5,b6),204)),Equal(MakeHiLo(b5,b6),122))) {
        TraceOperation 096272 (Insert_obj (Var (Global 202)) (Con 219));
        Let b7 = M[008312];
        Let b8 = M[008313];
        Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),4)];
        if (IsZero(Widen(b9))) {
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),4) 219;
          Let b10 = M[002728];
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),5) LoByte(Widen(b10));
          SetByte 002728 b8;
          TraceOperation 096275 (Insert_obj (Con 212) (Con 219));
          Let b11 = M[002663];
          if (IsZero(Widen(b11))) {
            SetByte 002663 219;
            Let b12 = M[002728];
            SetByte 002664 LoByte(Widen(b12));
            SetByte 002728 212;
            TraceOperation 096278 (Print "After several seconds, the plant shrivels up.");
            GamePrint "After several seconds, the plant shrivels up.";
            TraceOperation 096309 (Call (Floc 049734) [Con -12342] Sp);
            PushFrame 096309;
            SetLocal 1 -12342;
            JumpCall: 049734, #actuals: 1
          } else {
            Let b13 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
            if (Equal(Widen(b13),212)) {
              Let b14 = M[002664];
              SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b14));
              SetByte 002663 219;
              Let b15 = M[002728];
              SetByte 002664 LoByte(Widen(b15));
              SetByte 002728 212;
              TraceOperation 096278 (Print "After several seconds, the plant shrivels up.");
              GamePrint "After several seconds, the plant shrivels up.";
              TraceOperation 096309 (Call (Floc 049734) [Con -12342] Sp);
              PushFrame 096309;
              SetLocal 1 -12342;
              JumpCall: 049734, #actuals: 1
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b16 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
          if (Equal(Widen(b16),MakeHiLo(b7,b8))) {
            Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),5)];
            SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b17));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),4) 219;
            Let b18 = M[002728];
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),5) LoByte(Widen(b18));
            SetByte 002728 b8;
            TraceOperation 096275 (Insert_obj (Con 212) (Con 219));
            Let b19 = M[002663];
            if (IsZero(Widen(b19))) {
              SetByte 002663 219;
              Let b20 = M[002728];
              SetByte 002664 LoByte(Widen(b20));
              SetByte 002728 212;
              TraceOperation 096278 (Print "After several seconds, the plant shrivels up.");
              GamePrint "After several seconds, the plant shrivels up.";
              TraceOperation 096309 (Call (Floc 049734) [Con -12342] Sp);
              PushFrame 096309;
              SetLocal 1 -12342;
              JumpCall: 049734, #actuals: 1
            } else {
              Let b21 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
              if (Equal(Widen(b21),212)) {
                Let b22 = M[002664];
                SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b22));
                SetByte 002663 219;
                Let b23 = M[002728];
                SetByte 002664 LoByte(Widen(b23));
                SetByte 002728 212;
                TraceOperation 096278 (Print "After several seconds, the plant shrivels up.");
                GamePrint "After several seconds, the plant shrivels up.";
                TraceOperation 096309 (Call (Floc 049734) [Con -12342] Sp);
                PushFrame 096309;
                SetLocal 1 -12342;
                JumpCall: 049734, #actuals: 1
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        PopFrame return_address_24;
        JumpReturn: return_address_24, result: 0
      }
    } else {
      PopFrame return_address_25;
      JumpReturn: return_address_25, result: 0
    }
  } else {
    PopFrame return_address_26;
    JumpReturn: return_address_26, result: 0
  }
LocReturn 096309:
  PushStack call_result;
  TraceOperation 096316 New_line;
  GamePrint "\n";
  TraceOperation 096317 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[610]--------------------------------------------------
LocRoutine 096318:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 096321
LocOp 096321:
  TraceOperation 096321 (Je [Var (Global 203),Con 107,Con 124] (Branch F (Dloc 096347)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),107),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 096327 (Test_attr (Con 211) (Con 21) (Branch F (Dloc 096347)));
    Let b3 = M[002652];
    if (TestBit(b3,2)) {
      TraceOperation 096331 (Clear_attr (Con 211) (Con 21));
      Let b4 = M[002652];
      SetByte 002652 ClearBit(b4,2);
      TraceOperation 096334 (Clear_attr (Con 211) (Con 27));
      Let b5 = M[002653];
      SetByte 002653 ClearBit(b5,4);
      TraceOperation 096337 (Insert_obj (Con 211) (Con 31));
      Let b6 = M[002654];
      if (IsZero(Widen(b6))) {
        SetByte 002654 31;
        Let b7 = M[001036];
        SetByte 002655 LoByte(Widen(b7));
        SetByte 001036 211;
        TraceOperation 096340 (Print_ret "Done.");
        GamePrint "Done.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      } else {
        Let b9 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
        if (Equal(Widen(b9),211)) {
          Let b10 = M[002655];
          SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b10));
          SetByte 002654 31;
          Let b11 = M[001036];
          SetByte 002655 LoByte(Widen(b11));
          SetByte 001036 211;
          TraceOperation 096340 (Print_ret "Done.");
          GamePrint "Done.\n";
          PopFrame return_address_12;
          JumpReturn: return_address_12, result: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 096347
    }
  } else {
    Jump: 096347
  }
LocOp 096347:
  TraceOperation 096347 (Je [Var (Global 203),Con 154,Con 53] (Branch F (Dloc 096386)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),53))) {
    TraceOperation 096353 (Test_attr (Con 211) (Con 21) (Branch F (Dloc 096386)));
    Let b3 = M[002652];
    if (TestBit(b3,2)) {
      TraceOperation 096357 (Clear_attr (Con 211) (Con 21));
      Let b4 = M[002652];
      SetByte 002652 ClearBit(b4,2);
      TraceOperation 096360 (Clear_attr (Con 211) (Con 27));
      Let b5 = M[002653];
      SetByte 002653 ClearBit(b5,4);
      TraceOperation 096363 (Insert_obj (Con 211) (Var (Global 0)));
      Let b6 = M[007908];
      Let b7 = M[007909];
      Let b8 = M[002654];
      if (IsZero(Widen(b8))) {
        SetByte 002654 b7;
        Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
        SetByte 002655 LoByte(Widen(b9));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 211;
        TraceOperation 096366 (Je [Var (Global 203),Con 53] (Branch F (Dloc 096379)));
        Let b10 = M[008314];
        Let b11 = M[008315];
        if (Equal(MakeHiLo(b10,b11),53)) {
          TraceOperation 096370 (Print_ret "Dropped.");
          GamePrint "Dropped.\n";
          PopFrame return_address_12;
          JumpReturn: return_address_12, result: 1
        } else {
          Jump: 096379
        }
      } else {
        Let b13 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
        if (Equal(Widen(b13),211)) {
          Let b14 = M[002655];
          SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b14));
          SetByte 002654 b7;
          Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
          SetByte 002655 LoByte(Widen(b15));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 211;
          TraceOperation 096366 (Je [Var (Global 203),Con 53] (Branch F (Dloc 096379)));
          Let b16 = M[008314];
          Let b17 = M[008315];
          if (Equal(MakeHiLo(b16,b17),53)) {
            TraceOperation 096370 (Print_ret "Dropped.");
            GamePrint "Dropped.\n";
            PopFrame return_address_18;
            JumpReturn: return_address_18, result: 1
          } else {
            Jump: 096379
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 096386
    }
  } else {
    Jump: 096386
  }
LocOp 096379:
  TraceOperation 096379 (Print_ret "Thrown.");
  GamePrint "Thrown.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 096386:
  TraceOperation 096386 (Je [Var (Global 203),Con 56] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),56)) {
    Jump: 096390
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 096390:
  TraceOperation 096390 (Call (Floc 020718) [Var (Global 67)] (Global 219));
  Let b1 = M[008042];
  Let b2 = M[008043];
  PushFrame 096390;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 020718, #actuals: 1
LocReturn 096390:
  SetByte 008346 HiByte(call_result);
  SetByte 008347 LoByte(call_result);
  TraceOperation 096396 (Inc (Con 1));
  SetLocal 1 Add(GetLocal(1),1);
  TraceOperation 096398 (Call (Floc 092774) [Var (Global 219)] Sp);
  Let b1 = M[008346];
  Let b2 = M[008347];
  PushFrame 096398;
  SetLocal 1 MakeHiLo(b1,b2);
  JumpCall: 092774, #actuals: 1
LocReturn 096398:
  PushStack call_result;
  TraceOperation 096404 (Jz (Var Sp) (Branch T (Dloc 096412)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 096412
  } else {
    TraceOperation 096407 (Jg (Var (Local 1)) (Con 50) (Branch F (Dloc 096390)));
    if (GreaterThan(GetLocal(1),50)) {
      Jump: 096412
    } else {
      Jump: 096390
    }
  }
LocOp 096412:
  TraceOperation 096412 (Insert_obj (Con 211) (Con 219));
  Let b1 = M[002654];
  if (IsZero(Widen(b1))) {
    SetByte 002654 219;
    Let b2 = M[002728];
    SetByte 002655 LoByte(Widen(b2));
    SetByte 002728 211;
    TraceOperation 096415 (Print "The fruit has a zesty taste, and you devour it greedily. Suddenly, your vision wavers, and you see yourself, as though from a distance, standing near Marvin, who asks you for");
    GamePrint "The fruit has a zesty taste, and you devour it greedily. Suddenly, your vision wavers, and you see yourself, as though from a distance, standing near Marvin, who asks you for";
    TraceOperation 096516 (Call (Floc 043738) [Var (Global 219)] Sp);
    Let b3 = M[008346];
    Let b4 = M[008347];
    PushFrame 096516;
    SetLocal 1 MakeHiLo(b3,b4);
    JumpCall: 043738, #actuals: 1
  } else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b5),211)) {
      Let b6 = M[002655];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b6));
      SetByte 002654 219;
      Let b7 = M[002728];
      SetByte 002655 LoByte(Widen(b7));
      SetByte 002728 211;
      TraceOperation 096415 (Print "The fruit has a zesty taste, and you devour it greedily. Suddenly, your vision wavers, and you see yourself, as though from a distance, standing near Marvin, who asks you for");
      GamePrint "The fruit has a zesty taste, and you devour it greedily. Suddenly, your vision wavers, and you see yourself, as though from a distance, standing near Marvin, who asks you for";
      TraceOperation 096516 (Call (Floc 043738) [Var (Global 219)] Sp);
      Let b8 = M[008346];
      Let b9 = M[008347];
      PushFrame 096516;
      SetLocal 1 MakeHiLo(b8,b9);
      JumpCall: 043738, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 096516:
  PushStack call_result;
  TraceOperation 096522 (Print ". Then, the image vanishes like a movie when the film breaks, and you find yourself still in");
  GamePrint ". Then, the image vanishes like a movie when the film breaks, and you find yourself still in";
  TraceOperation 096577 (Call (Floc 043738) [Var (Global 0),Con 1] Sp);
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame 096577;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  JumpCall: 043738, #actuals: 2
LocReturn 096577:
  PushStack call_result;
  TraceOperation 096584 (Print_ret ".\n\nIt seems that this plant is a rare horticultural phenomenon long thought to be extinct: The Tree of Foreknowledge.");
  GamePrint ".\n\nIt seems that this plant is a rare horticultural phenomenon long thought to be extinct: The Tree of Foreknowledge.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[611]--------------------------------------------------
LocRoutine 096656:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 096659
LocOp 096659:
  TraceOperation 096659 (Je [Var (Local 1),Con 3] (Branch F (Dloc 096759)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 096664 (Print "You are in the Galley area of the ship, containing a machine which is the state of the art in Nutritional Technology, a ");
    GamePrint "You are in the Galley area of the ship, containing a machine which is the state of the art in Nutritional Technology, a ";
    TraceOperation 096733 (Print_paddr (Var (Global 43)));
    Let b1 = M[007994];
    Let b2 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
    TraceOperation 096735 (Print " ");
    GamePrint " ";
    TraceOperation 096738 (Print_obj (Con 209));
    Let b3 = M[002639];
    Let b4 = M[002640];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 096740 (Print_ret ". There is an exit to starboard.");
      GamePrint ". There is an exit to starboard.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 096740 (Print_ret ". There is an exit to starboard.");
      GamePrint ". There is an exit to starboard.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    Jump: 096759
  }
LocOp 096759:
  TraceOperation 096759 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 096763 (Call (Floc 020662) [Con -16129] Sp);
    PushFrame 096763;
    SetLocal 1 -16129;
    JumpCall: 020662, #actuals: 1
  } else {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  }
LocReturn 096763:
  PushStack call_result;
  TraceOperation 096770 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 096773 (Random (Con 100) Sp);
    LetRandom random2 100;
    PushStack random2;
    TraceOperation 096777 (Jl (Con 3) (Var Sp) (Branch T Dfalse));
    PopStack popped3;
    if (LessThan(3,popped3)) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      TraceOperation 096781 (Store (Con 167) (Con 6));
      SetByte 008210 0;
      SetByte 008211 6;
      TraceOperation 096784 (Call (Floc 022320) [Con 16277,Con 2] Sp);
      PushFrame 096784;
      SetLocal 1 16277;
      SetLocal 2 2;
      JumpCall: 022320, #actuals: 2
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
LocReturn 096784:
  PushStack call_result;
  TraceOperation 096792 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 096797 New_line;
  GamePrint "\n";
  TraceOperation 096798 (Print_obj (Con 195));
  Let b2 = M[002513];
  Let b3 = M[002514];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 096800 (Print " walks in and presses the ");
    GamePrint " walks in and presses the ";
    TraceOperation 096815 (Print_obj (Con 208));
    Let b5 = M[002630];
    Let b6 = M[002631];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 096817 (Print ". The ");
      GamePrint ". The ";
      TraceOperation 096822 (Print_obj (Con 209));
      Let b8 = M[002639];
      Let b9 = M[002640];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      if (IsZeroByte(b10)) {
        GamePrint "";
        TraceOperation 096824 (Print_ret " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.");
        GamePrint " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
        TraceOperation 096824 (Print_ret " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.");
        GamePrint " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.\n";
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 096817 (Print ". The ");
      GamePrint ". The ";
      TraceOperation 096822 (Print_obj (Con 209));
      Let b13 = M[002639];
      Let b14 = M[002640];
      Let b15 = M[Address(MakeHiLo(b13,b14))];
      if (IsZeroByte(b15)) {
        GamePrint "";
        TraceOperation 096824 (Print_ret " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.");
        GamePrint " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.\n";
        PopFrame return_address_16;
        JumpReturn: return_address_16, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
        TraceOperation 096824 (Print_ret " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.");
        GamePrint " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.\n";
        PopFrame return_address_17;
        JumpReturn: return_address_17, result: 1
      }
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 096800 (Print " walks in and presses the ");
    GamePrint " walks in and presses the ";
    TraceOperation 096815 (Print_obj (Con 208));
    Let b18 = M[002630];
    Let b19 = M[002631];
    Let b20 = M[Address(MakeHiLo(b18,b19))];
    if (IsZeroByte(b20)) {
      GamePrint "";
      TraceOperation 096817 (Print ". The ");
      GamePrint ". The ";
      TraceOperation 096822 (Print_obj (Con 209));
      Let b21 = M[002639];
      Let b22 = M[002640];
      Let b23 = M[Address(MakeHiLo(b21,b22))];
      if (IsZeroByte(b23)) {
        GamePrint "";
        TraceOperation 096824 (Print_ret " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.");
        GamePrint " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.\n";
        PopFrame return_address_24;
        JumpReturn: return_address_24, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b21,b22)),1));
        TraceOperation 096824 (Print_ret " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.");
        GamePrint " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.\n";
        PopFrame return_address_25;
        JumpReturn: return_address_25, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b18,b19)),1));
      TraceOperation 096817 (Print ". The ");
      GamePrint ". The ";
      TraceOperation 096822 (Print_obj (Con 209));
      Let b26 = M[002639];
      Let b27 = M[002640];
      Let b28 = M[Address(MakeHiLo(b26,b27))];
      if (IsZeroByte(b28)) {
        GamePrint "";
        TraceOperation 096824 (Print_ret " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.");
        GamePrint " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.\n";
        PopFrame return_address_29;
        JumpReturn: return_address_29, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b26,b27)),1));
        TraceOperation 096824 (Print_ret " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.");
        GamePrint " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.\n";
        PopFrame return_address_30;
        JumpReturn: return_address_30, result: 1
      }
    }
  }
--[612]--------------------------------------------------
LocRoutine 096898:
  MakeRoutineFrame 0;
  Jump: 096899
LocOp 096899:
  TraceOperation 096899 (Je [Con 209,Var (Global 195)] (Branch F (Dloc 097046)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(209,MakeHiLo(b1,b2))) {
    TraceOperation 096904 (Je [Var (Global 203),Con 150] (Branch F (Dloc 096927)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 096908 (Je [Var (Global 201),Con 30] (Branch F (Dloc 096927)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 096912 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 096915 (Call (Floc 022042) [Con 22,Con 209,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame 096915;
        SetLocal 1 22;
        SetLocal 2 209;
        SetLocal 3 MakeHiLo(b7,b8);
        JumpCall: 022042, #actuals: 3
      } else {
        Jump: 096927
      }
    } else {
      Jump: 096927
    }
  } else {
    Jump: 097046
  }
LocReturn 096915:
  PushStack call_result;
  TraceOperation 096923 (Store (Con 211) (Con 209));
  SetByte 008298 0;
  SetByte 008299 209;
  TraceOperation 096926 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 096927:
  TraceOperation 096927 (Je [Var (Global 203),Con 75] (Branch F (Dloc 096945)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 096931 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 096934 (Call (Floc 022042) [Con 75,Con 209] Sp);
    PushFrame 096934;
    SetLocal 1 75;
    SetLocal 2 209;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 096945
  }
LocReturn 096934:
  PushStack call_result;
  TraceOperation 096941 (Store (Con 211) (Con 209));
  SetByte 008298 0;
  SetByte 008299 209;
  TraceOperation 096944 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 096945:
  TraceOperation 096945 (Je [Var (Global 203),Con 174] (Branch F (Dloc 096968)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 096949 (Je [Var (Global 201),Con 28] (Branch F (Dloc 096968)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 096953 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 096956 (Call (Floc 022042) [Con 22,Con 209,Con 28] Sp);
      PushFrame 096956;
      SetLocal 1 22;
      SetLocal 2 209;
      SetLocal 3 28;
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 096968
    }
  } else {
    Jump: 096968
  }
LocReturn 096956:
  PushStack call_result;
  TraceOperation 096964 (Store (Con 211) (Con 209));
  SetByte 008298 0;
  SetByte 008299 209;
  TraceOperation 096967 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 096968:
  TraceOperation 096968 (Je [Var (Global 203),Con 67] (Branch F (Dloc 096976)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),67)) {
    TraceOperation 096972 (Je [Var (Global 201),Con 30] (Branch T (Dloc 096984)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      Jump: 096984
    } else {
      Jump: 096976
    }
  } else {
    Jump: 096976
  }
LocOp 096976:
  TraceOperation 096976 (Je [Var (Global 203),Con 66] (Branch F (Dloc 096999)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 096980 (Je [Var (Global 202),Con 30] (Branch F (Dloc 096999)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),30)) {
      Jump: 096984
    } else {
      Jump: 096999
    }
  } else {
    Jump: 096999
  }
LocOp 096984:
  TraceOperation 096984 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 096987 (Call (Floc 022042) [Con 23,Con 209,Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame 096987;
  SetLocal 1 23;
  SetLocal 2 209;
  SetLocal 3 MakeHiLo(b1,b2);
  JumpCall: 022042, #actuals: 3
LocReturn 096987:
  PushStack call_result;
  TraceOperation 096995 (Store (Con 211) (Con 209));
  SetByte 008298 0;
  SetByte 008299 209;
  TraceOperation 096998 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 096999:
  TraceOperation 096999 (Je [Var (Global 203),Con 97] (Branch F (Dloc 097023)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),97)) {
    TraceOperation 097003 (Je [Var (Global 201),Con 8,Con 9] (Branch F (Dloc 097023)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),8),Equal(MakeHiLo(b3,b4),9))) {
      TraceOperation 097009 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 097012 (Call (Floc 022042) [Con 159,Con 208] Sp);
      PushFrame 097012;
      SetLocal 1 159;
      SetLocal 2 208;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 097023
    }
  } else {
    Jump: 097023
  }
LocReturn 097012:
  PushStack call_result;
  TraceOperation 097019 (Store (Con 211) (Con 209));
  SetByte 008298 0;
  SetByte 008299 209;
  TraceOperation 097022 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 097023:
  TraceOperation 097023 (Print "The ");
  GamePrint "The ";
  TraceOperation 097026 (Print_obj (Con 209));
  Let b1 = M[002639];
  Let b2 = M[002640];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 097028 (Print " ignores you.");
    GamePrint " ignores you.";
    TraceOperation 097039 New_line;
    GamePrint "\n";
    TraceOperation 097040 (Call (Floc 043634) [] Sp);
    PushFrame 097040;
    JumpCall: 043634, #actuals: 0
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 097028 (Print " ignores you.");
    GamePrint " ignores you.";
    TraceOperation 097039 New_line;
    GamePrint "\n";
    TraceOperation 097040 (Call (Floc 043634) [] Sp);
    PushFrame 097040;
    JumpCall: 043634, #actuals: 0
  }
LocReturn 097040:
  PushStack call_result;
  TraceOperation 097045 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 097046:
  TraceOperation 097046 (Je [Var (Global 203),Con 61] (Branch F (Dloc 097140)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 097051 (Print "The ");
    GamePrint "The ";
    TraceOperation 097054 (Print_obj (Con 209));
    Let b3 = M[002639];
    Let b4 = M[002640];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 097056 (Print " has a ");
      GamePrint " has a ";
      TraceOperation 097061 (Print_obj (Con 208));
      Let b6 = M[002630];
      Let b7 = M[002631];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 097063 (Print ", a dispensing slot, and a service panel which is ");
        GamePrint ", a dispensing slot, and a service panel which is ";
        TraceOperation 097094 (Test_attr (Con 209) (Con 23) (Branch F (Dloc 097106)));
        Let b9 = M[002634];
        if (TestBit(b9,0)) {
          TraceOperation 097098 (Print "open");
          GamePrint "open";
          TraceOperation 097103 (Jump 097109);
          Jump: 097109
        } else {
          Jump: 097106
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 097063 (Print ", a dispensing slot, and a service panel which is ");
        GamePrint ", a dispensing slot, and a service panel which is ";
        TraceOperation 097094 (Test_attr (Con 209) (Con 23) (Branch F (Dloc 097106)));
        Let b10 = M[002634];
        if (TestBit(b10,0)) {
          TraceOperation 097098 (Print "open");
          GamePrint "open";
          TraceOperation 097103 (Jump 097109);
          Jump: 097109
        } else {
          Jump: 097106
        }
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 097056 (Print " has a ");
      GamePrint " has a ";
      TraceOperation 097061 (Print_obj (Con 208));
      Let b11 = M[002630];
      Let b12 = M[002631];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      if (IsZeroByte(b13)) {
        GamePrint "";
        TraceOperation 097063 (Print ", a dispensing slot, and a service panel which is ");
        GamePrint ", a dispensing slot, and a service panel which is ";
        TraceOperation 097094 (Test_attr (Con 209) (Con 23) (Branch F (Dloc 097106)));
        Let b14 = M[002634];
        if (TestBit(b14,0)) {
          TraceOperation 097098 (Print "open");
          GamePrint "open";
          TraceOperation 097103 (Jump 097109);
          Jump: 097109
        } else {
          Jump: 097106
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
        TraceOperation 097063 (Print ", a dispensing slot, and a service panel which is ");
        GamePrint ", a dispensing slot, and a service panel which is ";
        TraceOperation 097094 (Test_attr (Con 209) (Con 23) (Branch F (Dloc 097106)));
        Let b15 = M[002634];
        if (TestBit(b15,0)) {
          TraceOperation 097098 (Print "open");
          GamePrint "open";
          TraceOperation 097103 (Jump 097109);
          Jump: 097109
        } else {
          Jump: 097106
        }
      }
    }
  } else {
    Jump: 097140
  }
LocOp 097106:
  TraceOperation 097106 (Print "closed");
  GamePrint "closed";
  Jump: 097109
LocOp 097109:
  TraceOperation 097109 (Print ".");
  GamePrint ".";
  TraceOperation 097112 (Call (Floc 057998) [] Sp);
  PushFrame 097112;
  JumpCall: 057998, #actuals: 0
LocReturn 097112:
  PushStack call_result;
  TraceOperation 097117 (Call (Floc 020662) [Con -16129] Sp);
  PushFrame 097117;
  SetLocal 1 -16129;
  JumpCall: 020662, #actuals: 1
LocReturn 097117:
  PushStack call_result;
  TraceOperation 097124 (Jz (Var Sp) (Branch T (Dloc 097138)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 097138
  } else {
    TraceOperation 097127 (Print " ");
    GamePrint " ";
    TraceOperation 097130 (Call (Floc 022042) [Con 74,Con 209] Sp);
    PushFrame 097130;
    SetLocal 1 74;
    SetLocal 2 209;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 097130:
  PushStack call_result;
  TraceOperation 097137 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 097138:
  TraceOperation 097138 New_line;
  GamePrint "\n";
  TraceOperation 097139 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 097140:
  TraceOperation 097140 (Je [Var (Global 203),Con 74] (Branch F (Dloc 097184)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 097144 (Call (Floc 020662) [Con -16129] Sp);
    PushFrame 097144;
    SetLocal 1 -16129;
    JumpCall: 020662, #actuals: 1
  } else {
    Jump: 097184
  }
LocReturn 097144:
  PushStack call_result;
  TraceOperation 097151 (Jz (Var Sp) (Branch T (Dloc 097184)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 097184
  } else {
    TraceOperation 097154 (Print "The ");
    GamePrint "The ";
    TraceOperation 097157 (Print_obj (Con 209));
    Let b2 = M[002639];
    Let b3 = M[002640];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 097159 (Print_ret " is making a faint whirring noise.");
      GamePrint " is making a faint whirring noise.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 097159 (Print_ret " is making a faint whirring noise.");
      GamePrint " is making a faint whirring noise.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  }
LocOp 097184:
  TraceOperation 097184 (Je [Var (Global 203),Con 23] (Branch F (Dloc 097202)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 097188 (Je [Var (Global 202),Con 204,Con 9] (Branch F (Dloc 097202)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),204),Equal(MakeHiLo(b3,b4),9))) {
      TraceOperation 097194 (Call (Floc 022042) [Con 159,Con 208] Sp);
      PushFrame 097194;
      SetLocal 1 159;
      SetLocal 2 208;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 097202
    }
  } else {
    Jump: 097202
  }
LocReturn 097194:
  PushStack call_result;
  TraceOperation 097201 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 097202:
  TraceOperation 097202 (Je [Var (Global 203),Con 88] (Branch F (Dloc 097214)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 097206 (Call (Floc 022042) [Con 159,Con 208] Sp);
    PushFrame 097206;
    SetLocal 1 159;
    SetLocal 2 208;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 097214
  }
LocReturn 097206:
  PushStack call_result;
  TraceOperation 097213 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 097214:
  TraceOperation 097214 (Je [Var (Global 203),Con 40] (Branch F (Dloc 097236)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),40)) {
    TraceOperation 097218 (Call (Floc 020662) [Con -16129] Sp);
    PushFrame 097218;
    SetLocal 1 -16129;
    JumpCall: 020662, #actuals: 1
  } else {
    Jump: 097236
  }
LocReturn 097218:
  PushStack call_result;
  TraceOperation 097225 (Jz (Var Sp) (Branch T (Dloc 097236)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 097236
  } else {
    TraceOperation 097228 (Call (Floc 022042) [Con 159,Con 208] Sp);
    PushFrame 097228;
    SetLocal 1 159;
    SetLocal 2 208;
    JumpCall: 022042, #actuals: 2
  }
LocReturn 097228:
  PushStack call_result;
  TraceOperation 097235 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 097236:
  TraceOperation 097236 (Je [Var (Global 203),Con 130,Con 82,Con 24] (Branch F (Dloc 097326)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),130),Equal(MakeHiLo(b1,b2),82)),Equal(MakeHiLo(b1,b2),24))) {
    TraceOperation 097244 (Jz (Var (Global 221)) (Branch T (Dloc 097326)));
    Let b3 = M[008350];
    Let b4 = M[008351];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 097326
    } else {
      TraceOperation 097248 (Print "The ");
      GamePrint "The ";
      TraceOperation 097251 (Print_obj (Con 209));
      Let b5 = M[002639];
      Let b6 = M[002640];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 097253 (Print " says ");
        GamePrint " says ";
        TraceOperation 097256 (Random (Con 100) Sp);
        LetRandom random8 100;
        PushStack random8;
        TraceOperation 097260 (Jl (Con 50) (Var Sp) (Branch T (Dloc 097279)));
        PopStack popped9;
        if (LessThan(50,popped9)) {
          Jump: 097279
        } else {
          TraceOperation 097264 (Print_ret "\"Share and Enjoy.\"");
          GamePrint "\"Share and Enjoy.\"\n";
          PopFrame return_address_10;
          JumpReturn: return_address_10, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 097253 (Print " says ");
        GamePrint " says ";
        TraceOperation 097256 (Random (Con 100) Sp);
        LetRandom random11 100;
        PushStack random11;
        TraceOperation 097260 (Jl (Con 50) (Var Sp) (Branch T (Dloc 097279)));
        PopStack popped12;
        if (LessThan(50,popped12)) {
          Jump: 097279
        } else {
          TraceOperation 097264 (Print_ret "\"Share and Enjoy.\"");
          GamePrint "\"Share and Enjoy.\"\n";
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 1
        }
      }
    }
  } else {
    Jump: 097326
  }
LocOp 097279:
  TraceOperation 097279 (Print_ret "\"If you have enjoyed the experience of this drink, why not share it with your friends?\"");
  GamePrint "\"If you have enjoyed the experience of this drink, why not share it with your friends?\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 097326:
  TraceOperation 097326 (Je [Var (Global 203),Con 41,Con 46] (Branch F (Dloc 097386)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),41),Equal(MakeHiLo(b1,b2),46))) {
    TraceOperation 097332 (Je [Var (Global 202),Con 209] (Branch F (Dloc 097386)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),209)) {
      TraceOperation 097336 (Test_attr (Con 209) (Con 23) (Branch T (Dloc 097351)));
      Let b5 = M[002634];
      if (TestBit(b5,0)) {
        Jump: 097351
      } else {
        TraceOperation 097340 (Print_ret "The panel is closed.");
        GamePrint "The panel is closed.\n";
        PopFrame return_address_6;
        JumpReturn: return_address_6, result: 1
      }
    } else {
      Jump: 097386
    }
  } else {
    Jump: 097386
  }
LocOp 097351:
  TraceOperation 097351 (Get_child (Con 209) Sp (Branch F (Dloc 097364)));
  Let b1 = M[002638];
  PushStack Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 097364
  } else {
    TraceOperation 097355 (Print_ret "There's no room.");
    GamePrint "There's no room.\n";
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 1
  }
--[613]--------------------------------------------------
LocRoutine 097384:
  MakeRoutineFrame 0;
  Jump: 097385
LocOp 097385:
  TraceOperation 097385 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[614]--------------------------------------------------
LocRoutine 097400:
  MakeRoutineFrame 0;
  Jump: 097401
LocOp 097401:
  TraceOperation 097401 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[615]--------------------------------------------------
LocRoutine 097414:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 22737;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 -19962;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 8948;
      }
    }
  }
  Jump: 097421
LocOp 097421:
  TraceOperation 097421 (Insert_obj (Var (Global 162)) (Con 6));
  Let b1 = M[008232];
  Let b2 = M[008233];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 6;
    Let b4 = M[000811];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b4));
    SetByte 000811 b2;
    TraceOperation 097424 (Get_sibling (Con -22336) (Global 138) (Branch F (Dloc 097451)));
    SetByte 008184 0;
    SetByte 008185 0;
    Jump: 097451
  } else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b5),MakeHiLo(b1,b2))) {
      Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 6;
      Let b7 = M[000811];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b7));
      SetByte 000811 b2;
      TraceOperation 097424 (Get_sibling (Con -22336) (Global 138) (Branch F (Dloc 097451)));
      SetByte 008184 0;
      SetByte 008185 0;
      Jump: 097451
    } else {
      Error: unlink/loop
    }
  }
--[616]--------------------------------------------------
LocRoutine 097494:
  MakeRoutineFrame 0;
  Jump: 097495
LocOp 097495:
  TraceOperation 097495 (Je [Var (Global 203),Con 114,Con 159] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),114),Equal(MakeHiLo(b1,b2),159))) {
    TraceOperation 097501 (Jin (Con 88) (Con 209) (Branch F (Dloc 097696)));
    Let b3 = M[001547];
    if (Equal(209,Widen(b3))) {
      TraceOperation 097506 (Call (Floc 020662) [Con -16129] Sp);
      PushFrame 097506;
      SetLocal 1 -16129;
      JumpCall: 020662, #actuals: 1
    } else {
      Jump: 097696
    }
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocReturn 097506:
  PushStack call_result;
  TraceOperation 097513 (Jz (Var Sp) (Branch T (Dloc 097542)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 097542
  } else {
    TraceOperation 097516 (Print "\"Please wait...");
    GamePrint "\"Please wait...";
    TraceOperation 097531 (Print_obj (Con 209));
    Let b2 = M[002639];
    Let b3 = M[002640];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 097533 (Print_ret " engaged.\"");
      GamePrint " engaged.\"\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 097533 (Print_ret " engaged.\"");
      GamePrint " engaged.\"\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  }
LocOp 097542:
  TraceOperation 097542 (Jin (Con 9) (Con 208) (Branch F (Dloc 097654)));
  Let b1 = M[000836];
  if (Equal(208,Widen(b1))) {
    TraceOperation 097547 (Call (Floc 022320) [Con -16129,Con -1] Sp);
    PushFrame 097547;
    SetLocal 1 -16129;
    SetLocal 2 -1;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 097654
  }
LocReturn 097547:
  PushStack call_result;
  TraceOperation 097556 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 097561 (Print "The ");
  GamePrint "The ";
  TraceOperation 097564 (Print_obj (Con 209));
  Let b2 = M[002639];
  Let b3 = M[002640];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 097566 (Print " is puzzled that you want something made by pouring boiling water on dead leaves and squirting stuff from a cow in it, and says that it will need some help from ");
    GamePrint " is puzzled that you want something made by pouring boiling water on dead leaves and squirting stuff from a cow in it, and says that it will need some help from ";
    TraceOperation 097649 (Print_obj (Con 198));
    Let b5 = M[002540];
    Let b6 = M[002541];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 097651 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 097651 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 097566 (Print " is puzzled that you want something made by pouring boiling water on dead leaves and squirting stuff from a cow in it, and says that it will need some help from ");
    GamePrint " is puzzled that you want something made by pouring boiling water on dead leaves and squirting stuff from a cow in it, and says that it will need some help from ";
    TraceOperation 097649 (Print_obj (Con 198));
    Let b10 = M[002540];
    Let b11 = M[002541];
    Let b12 = M[Address(MakeHiLo(b10,b11))];
    if (IsZeroByte(b12)) {
      GamePrint "";
      TraceOperation 097651 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b10,b11)),1));
      TraceOperation 097651 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_14;
      JumpReturn: return_address_14, result: 1
    }
  }
--[617]--------------------------------------------------
LocRoutine 097834:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 -23387;
  }
  Jump: 097837
LocOp 097837:
  TraceOperation 097837 (Print_obj (Con 204));
  Let b1 = M[002594];
  Let b2 = M[002595];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 097839 (Print_ret " appears in the dispensing slot.");
    GamePrint " appears in the dispensing slot.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 097839 (Print_ret " appears in the dispensing slot.");
    GamePrint " appears in the dispensing slot.\n";
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 1
  }
--[618]--------------------------------------------------
LocRoutine 097904:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 -23387;
  }
  Jump: 097907
LocOp 097907:
  TraceOperation 097907 (Print_obj (Con 204));
  Let b1 = M[002594];
  Let b2 = M[002595];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 097909 (Print " I already gave you,\" scolds the ");
    GamePrint " I already gave you,\" scolds the ";
    TraceOperation 097928 (Print_obj (Con 209));
    Let b4 = M[002639];
    Let b5 = M[002640];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 097930 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 097930 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 097909 (Print " I already gave you,\" scolds the ");
    GamePrint " I already gave you,\" scolds the ";
    TraceOperation 097928 (Print_obj (Con 209));
    Let b9 = M[002639];
    Let b10 = M[002640];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    if (IsZeroByte(b11)) {
      GamePrint "";
      TraceOperation 097930 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_12;
      JumpReturn: return_address_12, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
      TraceOperation 097930 (Print_ret ".");
      GamePrint ".\n";
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    }
  }
--[619]--------------------------------------------------
LocRoutine 097934:
  MakeRoutineFrame 0;
  Jump: 097935
LocOp 097935:
  TraceOperation 097935 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 097941 (Je [Var (Global 201),Con 207] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),207)) {
      TraceOperation 097945 (Call (Floc 057650) [] Sp);
      PushFrame 097945;
      JumpCall: 057650, #actuals: 0
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 097945:
  PushStack call_result;
  TraceOperation 097950 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[620]--------------------------------------------------
LocRoutine 097952:
  MakeRoutineFrame 0;
  Jump: 097953
LocOp 097953:
  TraceOperation 097953 (Je [Var (Global 203),Con 39,Con 103] (Branch F (Dloc 097969)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 097959 (Je [Var (Global 201),Con 206] (Branch F (Dloc 097969)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),206)) {
      TraceOperation 097963 (Call (Floc 057650) [] Sp);
      PushFrame 097963;
      JumpCall: 057650, #actuals: 0
    } else {
      Jump: 097969
    }
  } else {
    Jump: 097969
  }
LocReturn 097963:
  PushStack call_result;
  TraceOperation 097968 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 097969:
  TraceOperation 097969 (Je [Var (Global 203),Con 61] (Branch F (Dloc 098227)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 097974 (Print "The ");
    GamePrint "The ";
    TraceOperation 097977 (Print_obj (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 097979 (Print " is square, about ten inches on each side. It has a number of microchips, some printed circuitry, and a message printed in microscopic letters. There are also eight ");
      GamePrint " is square, about ten inches on each side. It has a number of microchips, some printed circuitry, and a message printed in microscopic letters. There are also eight ";
      TraceOperation 098076 (Print_obj (Con 205));
      Let b8 = M[002603];
      Let b9 = M[002604];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      if (IsZeroByte(b10)) {
        GamePrint "";
        TraceOperation 098078 (Print_ret "es, marked:\n  1  Cholesterol Register\n  2  MSG Specifier\n  3  Thiamin Stack\n  4  Piquant-O-Mat\n  5  Flavour Dump\n  6  Vitamin Interrupts\n  7  Nose Sequencer\n  8  Bouquet Arbitration Bus");
        GamePrint "es, marked:\n  1  Cholesterol Register\n  2  MSG Specifier\n  3  Thiamin Stack\n  4  Piquant-O-Mat\n  5  Flavour Dump\n  6  Vitamin Interrupts\n  7  Nose Sequencer\n  8  Bouquet Arbitration Bus\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
        TraceOperation 098078 (Print_ret "es, marked:\n  1  Cholesterol Register\n  2  MSG Specifier\n  3  Thiamin Stack\n  4  Piquant-O-Mat\n  5  Flavour Dump\n  6  Vitamin Interrupts\n  7  Nose Sequencer\n  8  Bouquet Arbitration Bus");
        GamePrint "es, marked:\n  1  Cholesterol Register\n  2  MSG Specifier\n  3  Thiamin Stack\n  4  Piquant-O-Mat\n  5  Flavour Dump\n  6  Vitamin Interrupts\n  7  Nose Sequencer\n  8  Bouquet Arbitration Bus\n";
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 097979 (Print " is square, about ten inches on each side. It has a number of microchips, some printed circuitry, and a message printed in microscopic letters. There are also eight ");
      GamePrint " is square, about ten inches on each side. It has a number of microchips, some printed circuitry, and a message printed in microscopic letters. There are also eight ";
      TraceOperation 098076 (Print_obj (Con 205));
      Let b13 = M[002603];
      Let b14 = M[002604];
      Let b15 = M[Address(MakeHiLo(b13,b14))];
      if (IsZeroByte(b15)) {
        GamePrint "";
        TraceOperation 098078 (Print_ret "es, marked:\n  1  Cholesterol Register\n  2  MSG Specifier\n  3  Thiamin Stack\n  4  Piquant-O-Mat\n  5  Flavour Dump\n  6  Vitamin Interrupts\n  7  Nose Sequencer\n  8  Bouquet Arbitration Bus");
        GamePrint "es, marked:\n  1  Cholesterol Register\n  2  MSG Specifier\n  3  Thiamin Stack\n  4  Piquant-O-Mat\n  5  Flavour Dump\n  6  Vitamin Interrupts\n  7  Nose Sequencer\n  8  Bouquet Arbitration Bus\n";
        PopFrame return_address_16;
        JumpReturn: return_address_16, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
        TraceOperation 098078 (Print_ret "es, marked:\n  1  Cholesterol Register\n  2  MSG Specifier\n  3  Thiamin Stack\n  4  Piquant-O-Mat\n  5  Flavour Dump\n  6  Vitamin Interrupts\n  7  Nose Sequencer\n  8  Bouquet Arbitration Bus");
        GamePrint "es, marked:\n  1  Cholesterol Register\n  2  MSG Specifier\n  3  Thiamin Stack\n  4  Piquant-O-Mat\n  5  Flavour Dump\n  6  Vitamin Interrupts\n  7  Nose Sequencer\n  8  Bouquet Arbitration Bus\n";
        PopFrame return_address_17;
        JumpReturn: return_address_17, result: 1
      }
    }
  } else {
    Jump: 098227
  }
LocOp 098227:
  TraceOperation 098227 (Je [Var (Global 203),Con 45] (Branch F (Dloc 098273)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),45)) {
    TraceOperation 098231 (Insert_obj (Con 206) (Con 219));
    Let b3 = M[002609];
    if (IsZero(Widen(b3))) {
      SetByte 002609 219;
      Let b4 = M[002728];
      SetByte 002610 LoByte(Widen(b4));
      SetByte 002728 206;
      TraceOperation 098234 (Print_ret "It's all the device deserves. It shatters with a satisfying crunch.");
      GamePrint "It's all the device deserves. It shatters with a satisfying crunch.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b6),206)) {
        Let b7 = M[002610];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b7));
        SetByte 002609 219;
        Let b8 = M[002728];
        SetByte 002610 LoByte(Widen(b8));
        SetByte 002728 206;
        TraceOperation 098234 (Print_ret "It's all the device deserves. It shatters with a satisfying crunch.");
        GamePrint "It's all the device deserves. It shatters with a satisfying crunch.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 098273
  }
LocOp 098273:
  TraceOperation 098273 (Je [Var (Global 203),Con 62,Con 120] (Branch F (Dloc 098334)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),62),Equal(MakeHiLo(b1,b2),120))) {
    TraceOperation 098279 (Je [Var (Global 202),Con 59] (Branch F (Dloc 098334)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),59)) {
      TraceOperation 098283 (Print_ret "The message reads \"This is just a satirical device. It has no practical function.\"");
      GamePrint "The message reads \"This is just a satirical device. It has no practical function.\"\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 098334
    }
  } else {
    Jump: 098334
  }
LocOp 098334:
  TraceOperation 098334 (Je [Var (Global 203),Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),120)) {
    TraceOperation 098338 (Print_ret "The message is too small for you to read.");
    GamePrint "The message is too small for you to read.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[621]--------------------------------------------------
LocRoutine 098360:
  MakeRoutineFrame 0;
  Jump: 098361
LocOp 098361:
  TraceOperation 098361 (Je [Var (Global 203),Con 88,Con 154,Con 145] (Branch T (Dloc 098375)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),88),Equal(MakeHiLo(b1,b2),154)),Equal(MakeHiLo(b1,b2),145))) {
    Jump: 098375
  } else {
    TraceOperation 098368 (Je [Var (Global 203),Con 98,Con 114,Con 40] (Branch F Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),98),Equal(MakeHiLo(b3,b4),114)),Equal(MakeHiLo(b3,b4),40))) {
      Jump: 098375
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  }
LocOp 098375:
  TraceOperation 098375 (Print "Switched.");
  GamePrint "Switched.";
  TraceOperation 098384 (Jin (Con 206) (Con 209) (Branch F (Dloc 098440)));
  Let b1 = M[002609];
  if (Equal(209,Widen(b1))) {
    TraceOperation 098388 (Print " Some lights on the ");
    GamePrint " Some lights on the ";
    TraceOperation 098401 (Print_obj (Con 209));
    Let b2 = M[002639];
    Let b3 = M[002640];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 098403 (Print_ret " flash briefly. A promising hum quickly dies away.");
      GamePrint " flash briefly. A promising hum quickly dies away.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 098403 (Print_ret " flash briefly. A promising hum quickly dies away.");
      GamePrint " flash briefly. A promising hum quickly dies away.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 098440
  }
--[622]--------------------------------------------------
LocRoutine 098442:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 098445
LocOp 098445:
  TraceOperation 098445 (Call (Floc 049796) [Con 204] Sp);
  PushFrame 098445;
  SetLocal 1 204;
  JumpCall: 049796, #actuals: 1
LocReturn 098445:
  PushStack call_result;
  TraceOperation 098451 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[623]--------------------------------------------------
LocRoutine 098452:
  MakeRoutineFrame 0;
  Jump: 098453
LocOp 098453:
  TraceOperation 098453 (Je [Var (Global 203),Con 52,Con 57,Con 51] (Branch F (Dloc 098647)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),52),Equal(MakeHiLo(b1,b2),57)),Equal(MakeHiLo(b1,b2),51))) {
    TraceOperation 098461 (Call (Floc 043468) [Con 204] Sp);
    PushFrame 098461;
    SetLocal 1 204;
    JumpCall: 043468, #actuals: 1
  } else {
    Jump: 098647
  }
LocReturn 098461:
  PushStack call_result;
  TraceOperation 098467 (Jz (Var Sp) (Branch F (Dloc 098479)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 098470 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 098472 (Print_ret " the cup!");
    GamePrint " the cup!\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  } else {
    Jump: 098479
  }
LocOp 098479:
  TraceOperation 098479 (Jg (Var (Global 1)) (Con 300) (Branch F (Dloc 098520)));
  Let b1 = M[007910];
  Let b2 = M[007911];
  if (GreaterThan(MakeHiLo(b1,b2),300)) {
    TraceOperation 098485 (Print_ret "You'd rather continue savouring that delicious tea.");
    GamePrint "You'd rather continue savouring that delicious tea.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 098520
  }
LocOp 098520:
  TraceOperation 098520 (Jz (Var (Global 221)) (Branch T (Dloc 098557)));
  Let b1 = M[008350];
  Let b2 = M[008351];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 098557
  } else {
    TraceOperation 098523 (Sub (Var (Global 1)) (Con 30) (Global 1));
    Let b3 = M[007910];
    Let b4 = M[007911];
    SetByte 007910 HiByte(Sub(MakeHiLo(b3,b4),30));
    SetByte 007911 LoByte(Sub(MakeHiLo(b3,b4),30));
    TraceOperation 098527 (Store (Con 91) (Con 0));
    SetByte 008058 0;
    SetByte 008059 0;
    TraceOperation 098530 (Print "That last gulp of the vile ");
    GamePrint "That last gulp of the vile ";
    TraceOperation 098547 (Print_obj (Con 204));
    Let b5 = M[002594];
    Let b6 = M[002595];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 098549 (Call (Floc 042734) [Con -12341] Sp);
      PushFrame 098549;
      SetLocal 1 -12341;
      JumpCall: 042734, #actuals: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 098549 (Call (Floc 042734) [Con -12341] Sp);
      PushFrame 098549;
      SetLocal 1 -12341;
      JumpCall: 042734, #actuals: 1
    }
  }
LocReturn 098549:
  PushStack call_result;
  TraceOperation 098556 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 098557:
  TraceOperation 098557 (Je [Con 204,Var (Global 208)] (Branch F (Dloc 098564)));
  Let b1 = M[008324];
  Let b2 = M[008325];
  if (Equal(204,MakeHiLo(b1,b2))) {
    TraceOperation 098561 (Store (Con 224) (Con 0));
    SetByte 008324 0;
    SetByte 008325 0;
    Jump: 098564
  } else {
    Jump: 098564
  }
LocOp 098564:
  TraceOperation 098564 (Store (Con 237) (Con 1));
  SetByte 008350 0;
  SetByte 008351 1;
  TraceOperation 098567 (Sub (Var (Global 1)) (Con 30) (Global 1));
  Let b1 = M[007910];
  Let b2 = M[007911];
  SetByte 007910 HiByte(Sub(MakeHiLo(b1,b2),30));
  SetByte 007911 LoByte(Sub(MakeHiLo(b1,b2),30));
  TraceOperation 098571 (Insert_obj (Con 204) (Con 208));
  Let b3 = M[002591];
  if (IsZero(Widen(b3))) {
    SetByte 002591 208;
    Let b4 = M[002629];
    SetByte 002592 LoByte(Widen(b4));
    SetByte 002629 204;
    TraceOperation 098574 (Print "It tastes almost, but not quite, entirely unlike tea. It's absolutely disgusting.");
    GamePrint "It tastes almost, but not quite, entirely unlike tea. It's absolutely disgusting.";
    TraceOperation 098623 (Call (Floc 049734) [Con -12342] Sp);
    PushFrame 098623;
    SetLocal 1 -12342;
    JumpCall: 049734, #actuals: 1
  } else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b5),204)) {
      Let b6 = M[002592];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b6));
      SetByte 002591 208;
      Let b7 = M[002629];
      SetByte 002592 LoByte(Widen(b7));
      SetByte 002629 204;
      TraceOperation 098574 (Print "It tastes almost, but not quite, entirely unlike tea. It's absolutely disgusting.");
      GamePrint "It tastes almost, but not quite, entirely unlike tea. It's absolutely disgusting.";
      TraceOperation 098623 (Call (Floc 049734) [Con -12342] Sp);
      PushFrame 098623;
      SetLocal 1 -12342;
      JumpCall: 049734, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 098623:
  PushStack call_result;
  TraceOperation 098630 (Je [Var (Global 0),Con 210] (Branch F (Dloc 098645)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),210)) {
    TraceOperation 098634 (Print " ");
    GamePrint " ";
    TraceOperation 098637 (Call (Floc 022042) [Con 24,Con 209] Sp);
    PushFrame 098637;
    SetLocal 1 24;
    SetLocal 2 209;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 098645
  }
LocReturn 098637:
  PushStack call_result;
  TraceOperation 098644 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 098645:
  TraceOperation 098645 New_line;
  GamePrint "\n";
  TraceOperation 098646 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 098647:
  TraceOperation 098647 (Je [Var (Global 203),Con 63,Con 61] (Branch F (Dloc 098708)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 098653 (Print "About the only characteristic it shares with tea is that of");
    GamePrint "About the only characteristic it shares with tea is that of";
    TraceOperation 098686 (Print_paddr (Var (Global 34)));
    Let b3 = M[007976];
    Let b4 = M[007977];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 098688 (Print ".");
    GamePrint ".";
    TraceOperation 098691 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 098706)));
    Let b5 = M[008310];
    Let b6 = M[008311];
    Let b7 = M[008324];
    Let b8 = M[008325];
    if (Equal(MakeHiLo(b5,b6),MakeHiLo(b7,b8))) {
      TraceOperation 098695 (Print " ");
      GamePrint " ";
      TraceOperation 098698 (Call (Floc 022042) [Con 61,Con 179] Sp);
      PushFrame 098698;
      SetLocal 1 61;
      SetLocal 2 179;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 098706
    }
  } else {
    Jump: 098708
  }
LocReturn 098698:
  PushStack call_result;
  TraceOperation 098705 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 098706:
  TraceOperation 098706 New_line;
  GamePrint "\n";
  TraceOperation 098707 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 098708:
  TraceOperation 098708 (Je [Var (Global 203),Con 154,Con 112] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),112))) {
    TraceOperation 098714 (Call (Floc 049650) [] Sp);
    PushFrame 098714;
    JumpCall: 049650, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 098714:
  PushStack call_result;
  TraceOperation 098719 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[624]--------------------------------------------------
LocRoutine 098720:
  MakeRoutineFrame 0;
  Jump: 098721
LocOp 098721:
  TraceOperation 098721 (Je [Var (Global 203),Con 61,Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),61),Equal(MakeHiLo(b1,b2),120))) {
    TraceOperation 098727 (Print "The carton is labelled \"");
    GamePrint "The carton is labelled \"";
    TraceOperation 098742 (Print_obj (Con 88));
    Let b3 = M[001550];
    Let b4 = M[001551];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 098744 (Print ".\"");
      GamePrint ".\"";
      TraceOperation 098749 New_line;
      GamePrint "\n";
      TraceOperation 098750 (Je [Var (Global 203),Con 61] (Branch F Dtrue));
      Let b6 = M[008314];
      Let b7 = M[008315];
      if (Equal(MakeHiLo(b6,b7),61)) {
        TraceOperation 098754 Rfalse;
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      } else {
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 098744 (Print ".\"");
      GamePrint ".\"";
      TraceOperation 098749 New_line;
      GamePrint "\n";
      TraceOperation 098750 (Je [Var (Global 203),Con 61] (Branch F Dtrue));
      Let b10 = M[008314];
      Let b11 = M[008315];
      if (Equal(MakeHiLo(b10,b11),61)) {
        TraceOperation 098754 Rfalse;
        PopFrame return_address_12;
        JumpReturn: return_address_12, result: 0
      } else {
        PopFrame return_address_13;
        JumpReturn: return_address_13, result: 1
      }
    }
  } else {
    PopFrame return_address_14;
    JumpReturn: return_address_14, result: 0
  }
--[625]--------------------------------------------------
LocRoutine 098756:
  MakeRoutineFrame 0;
  Jump: 098757
LocOp 098757:
  TraceOperation 098757 (Je [Var (Global 203),Con 120,Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),120),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 098763 (Print "The gun has a large label which reads \"Anti-Bugblatter Beast Ray Gun.\"");
    GamePrint "The gun has a large label which reads \"Anti-Bugblatter Beast Ray Gun.\"";
    TraceOperation 098806 (Call (Floc 057998) [] Sp);
    PushFrame 098806;
    JumpCall: 057998, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 098806:
  PushStack call_result;
  TraceOperation 098811 New_line;
  GamePrint "\n";
  TraceOperation 098812 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[626]--------------------------------------------------
LocRoutine 098814:
  MakeRoutineFrame 0;
  Jump: 098815
LocOp 098815:
  TraceOperation 098815 (Inc (Con 231));
  Let b1 = M[008338];
  Let b2 = M[008339];
  SetByte 008338 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008339 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 098817 (Je [Var (Global 0),Con 210] (Branch T (Dloc 098825)));
  Let b3 = M[007908];
  Let b4 = M[007909];
  if (Equal(MakeHiLo(b3,b4),210)) {
    Jump: 098825
  } else {
    TraceOperation 098821 (Jl (Var (Global 215)) (Con 7) (Branch T Dfalse));
    Let b5 = M[008338];
    Let b6 = M[008339];
    if (LessThan(MakeHiLo(b5,b6),7)) {
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 0
    } else {
      Jump: 098825
    }
  }
LocOp 098825:
  TraceOperation 098825 New_line;
  GamePrint "\n";
  TraceOperation 098826 (Je [Var (Global 215),Con 1] (Branch F (Dloc 098849)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 098830 (Print_ret "The nutrimat begins to whirr.");
    GamePrint "The nutrimat begins to whirr.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 098849
  }
LocOp 098849:
  TraceOperation 098849 (Je [Var (Global 215),Con 2] (Branch F (Dloc 098898)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 098853 (Print_ret "A red sign lights up saying:\n   MEMORY OVERLOAD");
    GamePrint "A red sign lights up saying:\n   MEMORY OVERLOAD\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 098898
  }
LocOp 098898:
  TraceOperation 098898 (Je [Var (Global 215),Con 3] (Branch F (Dloc 098961)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 098902 (Print_ret "Another red sign lights up saying:\n   RESERVE MEMORY OVERLOAD");
    GamePrint "Another red sign lights up saying:\n   RESERVE MEMORY OVERLOAD\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 098961
  }
LocOp 098961:
  TraceOperation 098961 (Je [Var (Global 215),Con 4] (Branch F (Dloc 099045)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 098966 (Print_ret "A third sign lights up:\n   PROCESSOR OVERLOAD,\n   SWITCH TO TERMINAL MODE");
    GamePrint "A third sign lights up:\n   PROCESSOR OVERLOAD,\n   SWITCH TO TERMINAL MODE\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 099045
  }
LocOp 099045:
  TraceOperation 099045 (Je [Var (Global 215),Con 5] (Branch F (Dloc 099098)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 099049 (Print_ret "A blue sign lights up:\n   NUTRIMAT GOING ON LINE");
    GamePrint "A blue sign lights up:\n   NUTRIMAT GOING ON LINE\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 099098
  }
LocOp 099098:
  TraceOperation 099098 (Je [Var (Global 215),Con 6] (Branch F (Dloc 099462)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 099103 (Print_ret "More and more signs light up:\n   SHIPBOARD COMPUTER ACCESSED\n   MAIN MEMORY OVERLOAD\n   RESERVE MEMORY ACCESSED\n   PARALLEL PROCESSORS ON LINE\n\n   ****************************\n   ** NUMBERS BEING CRUNCHED **\n   ****************************");
    GamePrint "More and more signs light up:\n   SHIPBOARD COMPUTER ACCESSED\n   MAIN MEMORY OVERLOAD\n   RESERVE MEMORY ACCESSED\n   PARALLEL PROCESSORS ON LINE\n\n   ****************************\n   ** NUMBERS BEING CRUNCHED **\n   ****************************\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 099462
  }
LocOp 099462:
  TraceOperation 099462 (Je [Var (Global 215),Con 7] (Branch F (Dloc 099681)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 099467 (Set_attr (Con 7) (Con 3));
    Let b3 = M[000814];
    SetByte 000814 SetBit(b3,4);
    TraceOperation 099470 (Print_paddr (Var (Global 21)));
    Let b4 = M[007950];
    Let b5 = M[007951];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 099472 (Print_obj (Con 198));
    Let b6 = M[002540];
    Let b7 = M[002541];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    if (IsZeroByte(b8)) {
      GamePrint "";
      TraceOperation 099474 (Print ". Emergency situation! Nuclear missiles have just been launched at us from the approaching planet, which my data banks indicate is");
      GamePrint ". Emergency situation! Nuclear missiles have just been launched at us from the approaching planet, which my data banks indicate is";
      TraceOperation 099553 (Print_paddr (Var (Global 17)));
      Let b9 = M[007942];
      Let b10 = M[007943];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
      TraceOperation 099555 (Print ". I cannot perform evasive maneuvers because");
      GamePrint ". I cannot perform evasive maneuvers because";
      TraceOperation 099584 (Print_paddr (Var (Global 3)));
      Let b11 = M[007914];
      Let b12 = M[007915];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
      TraceOperation 099586 (Print_obj (Con 209));
      Let b13 = M[002639];
      Let b14 = M[002640];
      Let b15 = M[Address(MakeHiLo(b13,b14))];
      if (IsZeroByte(b15)) {
        GamePrint "";
        TraceOperation 099588 (Print_ret ". The missiles will turn this ship into a huge atomic fireball in approximately eight turns. By the way, somebody didn't finish their spinach at dinner.\"");
        GamePrint ". The missiles will turn this ship into a huge atomic fireball in approximately eight turns. By the way, somebody didn't finish their spinach at dinner.\"\n";
        PopFrame return_address_16;
        JumpReturn: return_address_16, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
        TraceOperation 099588 (Print_ret ". The missiles will turn this ship into a huge atomic fireball in approximately eight turns. By the way, somebody didn't finish their spinach at dinner.\"");
        GamePrint ". The missiles will turn this ship into a huge atomic fireball in approximately eight turns. By the way, somebody didn't finish their spinach at dinner.\"\n";
        PopFrame return_address_17;
        JumpReturn: return_address_17, result: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
      TraceOperation 099474 (Print ". Emergency situation! Nuclear missiles have just been launched at us from the approaching planet, which my data banks indicate is");
      GamePrint ". Emergency situation! Nuclear missiles have just been launched at us from the approaching planet, which my data banks indicate is";
      TraceOperation 099553 (Print_paddr (Var (Global 17)));
      Let b18 = M[007942];
      Let b19 = M[007943];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b18,b19)));
      TraceOperation 099555 (Print ". I cannot perform evasive maneuvers because");
      GamePrint ". I cannot perform evasive maneuvers because";
      TraceOperation 099584 (Print_paddr (Var (Global 3)));
      Let b20 = M[007914];
      Let b21 = M[007915];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b20,b21)));
      TraceOperation 099586 (Print_obj (Con 209));
      Let b22 = M[002639];
      Let b23 = M[002640];
      Let b24 = M[Address(MakeHiLo(b22,b23))];
      if (IsZeroByte(b24)) {
        GamePrint "";
        TraceOperation 099588 (Print_ret ". The missiles will turn this ship into a huge atomic fireball in approximately eight turns. By the way, somebody didn't finish their spinach at dinner.\"");
        GamePrint ". The missiles will turn this ship into a huge atomic fireball in approximately eight turns. By the way, somebody didn't finish their spinach at dinner.\"\n";
        PopFrame return_address_25;
        JumpReturn: return_address_25, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b22,b23)),1));
        TraceOperation 099588 (Print_ret ". The missiles will turn this ship into a huge atomic fireball in approximately eight turns. By the way, somebody didn't finish their spinach at dinner.\"");
        GamePrint ". The missiles will turn this ship into a huge atomic fireball in approximately eight turns. By the way, somebody didn't finish their spinach at dinner.\"\n";
        PopFrame return_address_26;
        JumpReturn: return_address_26, result: 1
      }
    }
  } else {
    Jump: 099681
  }
LocOp 099681:
  TraceOperation 099681 (Jl (Var (Global 215)) (Con 15) (Branch F (Dloc 099738)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (LessThan(MakeHiLo(b1,b2),15)) {
    TraceOperation 099685 (Print_ret "You hear distant sounds of panic: shouts of anger, cries of alarm, pounding feet.");
    GamePrint "You hear distant sounds of panic: shouts of anger, cries of alarm, pounding feet.\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 099738
  }
LocOp 099738:
  TraceOperation 099738 (Call (Floc 022340) [Con -16129] Sp);
  PushFrame 099738;
  SetLocal 1 -16129;
  JumpCall: 022340, #actuals: 1
LocReturn 099738:
  PushStack call_result;
  TraceOperation 099745 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 099750 (Print "It seems that the missiles struck ");
  GamePrint "It seems that the missiles struck ";
  TraceOperation 099767 (Print_obj (Con 220));
  Let b2 = M[002738];
  Let b3 = M[002739];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 099769 (Call (Floc 042734) [Con -12296] Sp);
    PushFrame 099769;
    SetLocal 1 -12296;
    JumpCall: 042734, #actuals: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 099769 (Call (Floc 042734) [Con -12296] Sp);
    PushFrame 099769;
    SetLocal 1 -12296;
    JumpCall: 042734, #actuals: 1
  }
LocReturn 099769:
  PushStack call_result;
  TraceOperation 099776 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[627]--------------------------------------------------
LocRoutine 099778:
  MakeRoutineFrame 0;
  Jump: 099779
LocOp 099779:
  TraceOperation 099779 (Call (Floc 092774) [Con 31] Sp);
  PushFrame 099779;
  SetLocal 1 31;
  JumpCall: 092774, #actuals: 1
LocReturn 099779:
  PushStack call_result;
  TraceOperation 099785 (Jz (Var Sp) (Branch F (Dloc 099802)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 099788 (Call (Floc 022320) [Con -15647,Con 12] Sp);
    PushFrame 099788;
    SetLocal 1 -15647;
    SetLocal 2 12;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 099802
  }
LocReturn 099788:
  PushStack call_result;
  TraceOperation 099796 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 099801 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 099802:
  TraceOperation 099802 (Insert_obj (Con 215) (Con 218));
  Let b1 = M[002690];
  if (IsZero(Widen(b1))) {
    SetByte 002690 218;
    Let b2 = M[002719];
    SetByte 002691 LoByte(Widen(b2));
    SetByte 002719 215;
    TraceOperation 099805 (Call (Floc 022340) [Con -17989] Sp);
    PushFrame 099805;
    SetLocal 1 -17989;
    JumpCall: 022340, #actuals: 1
  } else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b3),215)) {
      Let b4 = M[002691];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b4));
      SetByte 002690 218;
      Let b5 = M[002719];
      SetByte 002691 LoByte(Widen(b5));
      SetByte 002719 215;
      TraceOperation 099805 (Call (Floc 022340) [Con -17989] Sp);
      PushFrame 099805;
      SetLocal 1 -17989;
      JumpCall: 022340, #actuals: 1
    } else {
      Error: unlink/loop
    }
  }
LocReturn 099805:
  PushStack call_result;
  TraceOperation 099812 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 099817 (Store (Con 230) (Con 1));
  SetByte 008336 0;
  SetByte 008337 1;
  TraceOperation 099820 New_line;
  GamePrint "\n";
  TraceOperation 099821 (Print_paddr (Var (Global 21)));
  Let b2 = M[007950];
  Let b3 = M[007951];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 099823 (Print_obj (Con 198));
  Let b4 = M[002540];
  Let b5 = M[002541];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  if (IsZeroByte(b6)) {
    GamePrint "";
    TraceOperation 099825 (Print ". We have just landed on");
    GamePrint ". We have just landed on";
    TraceOperation 099840 (Print_paddr (Var (Global 17)));
    Let b7 = M[007942];
    Let b8 = M[007943];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 099842 (Print_ret ". I don't want anyone going outside until I've checked the atmosphere, climatic conditions, existence of dangerous wildlife, airborne diseases, volcanic activity, presence of real estate agents, and more than eight thousand other possible dangers. This routine check will take 14.9 years. And don't even think about leaving until I finish, because I'm jamming the hatch.\"");
    GamePrint ". I don't want anyone going outside until I've checked the atmosphere, climatic conditions, existence of dangerous wildlife, airborne diseases, volcanic activity, presence of real estate agents, and more than eight thousand other possible dangers. This routine check will take 14.9 years. And don't even think about leaving until I finish, because I'm jamming the hatch.\"\n";
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
    TraceOperation 099825 (Print ". We have just landed on");
    GamePrint ". We have just landed on";
    TraceOperation 099840 (Print_paddr (Var (Global 17)));
    Let b10 = M[007942];
    Let b11 = M[007943];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
    TraceOperation 099842 (Print_ret ". I don't want anyone going outside until I've checked the atmosphere, climatic conditions, existence of dangerous wildlife, airborne diseases, volcanic activity, presence of real estate agents, and more than eight thousand other possible dangers. This routine check will take 14.9 years. And don't even think about leaving until I finish, because I'm jamming the hatch.\"");
    GamePrint ". I don't want anyone going outside until I've checked the atmosphere, climatic conditions, existence of dangerous wildlife, airborne diseases, volcanic activity, presence of real estate agents, and more than eight thousand other possible dangers. This routine check will take 14.9 years. And don't even think about leaving until I finish, because I'm jamming the hatch.\"\n";
    PopFrame return_address_12;
    JumpReturn: return_address_12, result: 1
  }
--[628]--------------------------------------------------
LocRoutine 100066:
  MakeRoutineFrame 0;
  Jump: 100067
LocOp 100067:
  TraceOperation 100067 (Call (Floc 042626) [] Sp);
  PushFrame 100067;
  JumpCall: 042626, #actuals: 0
LocReturn 100067:
  PushStack call_result;
  TraceOperation 100072 (Random (Con 12) Sp);
  LetRandom random1 12;
  PushStack random1;
  TraceOperation 100076 (Add (Con 10) (Var Sp) Sp);
  PopStack popped2;
  PushStack Add(10,popped2);
  TraceOperation 100080 (Add (Var (Global 2)) (Var Sp) (Global 2));
  Let b3 = M[007912];
  Let b4 = M[007913];
  PopStack popped5;
  SetByte 007912 HiByte(Add(MakeHiLo(b3,b4),popped5));
  SetByte 007913 LoByte(Add(MakeHiLo(b3,b4),popped5));
  TraceOperation 100084 (Print "You enter the sauna. After several ");
  GamePrint "You enter the sauna. After several ";
  TraceOperation 100107 (Call (Floc 020662) [Con -32630] Sp);
  PushFrame 100107;
  SetLocal 1 -32630;
  JumpCall: 020662, #actuals: 1
LocReturn 100107:
  PushStack call_result;
  TraceOperation 100114 (Jz (Var Sp) (Branch T (Dloc 100127)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100127
  } else {
    TraceOperation 100117 (Print "minutes");
    GamePrint "minutes";
    TraceOperation 100124 (Jump 100132);
    Jump: 100132
  }
LocOp 100127:
  TraceOperation 100127 (Print "hours");
  GamePrint "hours";
  Jump: 100132
LocOp 100132:
  TraceOperation 100132 (Print ", you come out a changed man.");
  GamePrint ", you come out a changed man.";
  TraceOperation 100151 (Call (Floc 043468) [Con 214] Sp);
  PushFrame 100151;
  SetLocal 1 214;
  JumpCall: 043468, #actuals: 1
LocReturn 100151:
  PushStack call_result;
  TraceOperation 100157 (Jz (Var Sp) (Branch T (Dloc 100196)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100196
  } else {
    TraceOperation 100160 (Jin (Con 212) (Con 214) (Branch F (Dloc 100196)));
    Let b2 = M[002663];
    if (Equal(214,Widen(b2))) {
      TraceOperation 100164 (Jz (Var (Global 217)) (Branch F (Dloc 100196)));
      Let b3 = M[008342];
      Let b4 = M[008343];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 100167 (Store (Con 233) (Con 1));
        SetByte 008342 0;
        SetByte 008343 1;
        TraceOperation 100170 (Add (Var (Global 1)) (Con 25) (Global 1));
        Let b5 = M[007910];
        Let b6 = M[007911];
        SetByte 007910 HiByte(Add(MakeHiLo(b5,b6),25));
        SetByte 007911 LoByte(Add(MakeHiLo(b5,b6),25));
        TraceOperation 100174 (Insert_obj (Con 211) (Con 214));
        Let b7 = M[002654];
        if (IsZero(Widen(b7))) {
          SetByte 002654 214;
          Let b8 = M[002683];
          SetByte 002655 LoByte(Widen(b8));
          SetByte 002683 211;
          TraceOperation 100177 (Print " You have with you a changed plant.");
          GamePrint " You have with you a changed plant.";
          Jump: 100196
        } else {
          Let b9 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
          if (Equal(Widen(b9),211)) {
            Let b10 = M[002655];
            SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b10));
            SetByte 002654 214;
            Let b11 = M[002683];
            SetByte 002655 LoByte(Widen(b11));
            SetByte 002683 211;
            TraceOperation 100177 (Print " You have with you a changed plant.");
            GamePrint " You have with you a changed plant.";
            Jump: 100196
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Jump: 100196
      }
    } else {
      Jump: 100196
    }
  }
LocOp 100196:
  TraceOperation 100196 New_line;
  GamePrint "\n";
  TraceOperation 100197 (Jin (Con 215) (Con 201) (Branch F Dfalse));
  Let b1 = M[002690];
  if (Equal(201,Widen(b1))) {
    TraceOperation 100201 (Insert_obj (Con 215) (Con 218));
    Let b2 = M[002690];
    if (IsZero(Widen(b2))) {
      SetByte 002690 218;
      Let b3 = M[002719];
      SetByte 002691 LoByte(Widen(b3));
      SetByte 002719 215;
      TraceOperation 100204 Rfalse;
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      Let b5 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b5),215)) {
        Let b6 = M[002691];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b6));
        SetByte 002690 218;
        Let b7 = M[002719];
        SetByte 002691 LoByte(Widen(b7));
        SetByte 002719 215;
        TraceOperation 100204 Rfalse;
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 0
      } else {
        Error: unlink/loop
      }
    }
  } else {
    PopFrame return_address_9;
    JumpReturn: return_address_9, result: 0
  }
--[629]--------------------------------------------------
LocRoutine 100206:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 100209
LocOp 100209:
  TraceOperation 100209 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 100213 (Print "This is the bridge of ");
    GamePrint "This is the bridge of ";
    TraceOperation 100224 (Print_obj (Con 220));
    Let b1 = M[002738];
    Let b2 = M[002739];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 100226 (Print ". A gangway leads down, and steam comes from an entrance to port. Next to the control console is ");
      GamePrint ". A gangway leads down, and steam comes from an entrance to port. Next to the control console is ";
      TraceOperation 100287 (Print_obj (Con 198));
      Let b4 = M[002540];
      Let b5 = M[002541];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      if (IsZeroByte(b6)) {
        GamePrint "";
        TraceOperation 100289 (Print ".");
        GamePrint ".";
        TraceOperation 100292 (Jz (Var (Global 210)) (Branch T (Dloc 100308)));
        Let b7 = M[008328];
        Let b8 = M[008329];
        if (IsZero(MakeHiLo(b7,b8))) {
          Jump: 100308
        } else {
          TraceOperation 100295 (Print " ");
          GamePrint " ";
          TraceOperation 100298 (Call (Floc 022042) [Con 61,Con 197] Sp);
          PushFrame 100298;
          SetLocal 1 61;
          SetLocal 2 197;
          JumpCall: 022042, #actuals: 2
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
        TraceOperation 100289 (Print ".");
        GamePrint ".";
        TraceOperation 100292 (Jz (Var (Global 210)) (Branch T (Dloc 100308)));
        Let b9 = M[008328];
        Let b10 = M[008329];
        if (IsZero(MakeHiLo(b9,b10))) {
          Jump: 100308
        } else {
          TraceOperation 100295 (Print " ");
          GamePrint " ";
          TraceOperation 100298 (Call (Floc 022042) [Con 61,Con 197] Sp);
          PushFrame 100298;
          SetLocal 1 61;
          SetLocal 2 197;
          JumpCall: 022042, #actuals: 2
        }
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 100226 (Print ". A gangway leads down, and steam comes from an entrance to port. Next to the control console is ");
      GamePrint ". A gangway leads down, and steam comes from an entrance to port. Next to the control console is ";
      TraceOperation 100287 (Print_obj (Con 198));
      Let b11 = M[002540];
      Let b12 = M[002541];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      if (IsZeroByte(b13)) {
        GamePrint "";
        TraceOperation 100289 (Print ".");
        GamePrint ".";
        TraceOperation 100292 (Jz (Var (Global 210)) (Branch T (Dloc 100308)));
        Let b14 = M[008328];
        Let b15 = M[008329];
        if (IsZero(MakeHiLo(b14,b15))) {
          Jump: 100308
        } else {
          TraceOperation 100295 (Print " ");
          GamePrint " ";
          TraceOperation 100298 (Call (Floc 022042) [Con 61,Con 197] Sp);
          PushFrame 100298;
          SetLocal 1 61;
          SetLocal 2 197;
          JumpCall: 022042, #actuals: 2
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
        TraceOperation 100289 (Print ".");
        GamePrint ".";
        TraceOperation 100292 (Jz (Var (Global 210)) (Branch T (Dloc 100308)));
        Let b16 = M[008328];
        Let b17 = M[008329];
        if (IsZero(MakeHiLo(b16,b17))) {
          Jump: 100308
        } else {
          TraceOperation 100295 (Print " ");
          GamePrint " ";
          TraceOperation 100298 (Call (Floc 022042) [Con 61,Con 197] Sp);
          PushFrame 100298;
          SetLocal 1 61;
          SetLocal 2 197;
          JumpCall: 022042, #actuals: 2
        }
      }
    }
  } else {
    PopFrame return_address_18;
    JumpReturn: return_address_18, result: 0
  }
LocReturn 100298:
  PushStack call_result;
  TraceOperation 100305 (Jump 100309);
  Jump: 100309
LocOp 100308:
  TraceOperation 100308 New_line;
  GamePrint "\n";
  Jump: 100309
LocOp 100309:
  TraceOperation 100309 (Test_attr (Con 201) (Con 27) (Branch T Dfalse));
  Let b1 = M[002563];
  if (TestBit(b1,4)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 100313 (Set_attr (Con 201) (Con 27));
    Let b3 = M[002563];
    SetByte 002563 SetBit(b3,4);
    TraceOperation 100316 New_line;
    GamePrint "\n";
    TraceOperation 100317 (Print_ret "At the controls, apparently expecting you and Ford, are a man with more than the usual number of heads (the name \"Zaphod\" is stitched on his shirt) and a dark-haired woman, holding a handbag. Both seem somehow familiar.");
    GamePrint "At the controls, apparently expecting you and Ford, are a man with more than the usual number of heads (the name \"Zaphod\" is stitched on his shirt) and a dark-haired woman, holding a handbag. Both seem somehow familiar.\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
--[630]--------------------------------------------------
LocRoutine 100450:
  MakeRoutineFrame 0;
  Jump: 100451
LocOp 100451:
  TraceOperation 100451 (Je [Var (Global 203),Con 28,Con 21,Con 38] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),28),Equal(MakeHiLo(b1,b2),21)),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 100458 (Je [Var (Global 0),Con 201] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),201)) {
      TraceOperation 100462 (Call (Floc 043620) [Con 19] Sp);
      PushFrame 100462;
      SetLocal 1 19;
      JumpCall: 043620, #actuals: 1
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 100462:
  PushStack call_result;
  TraceOperation 100468 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[631]--------------------------------------------------
LocRoutine 100470:
  MakeRoutineFrame 0;
  Jump: 100471
LocOp 100471:
  TraceOperation 100471 (Jin (Con 195) (Var (Global 0)) (Branch T (Dloc 100486)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002510];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 100486
  } else {
    TraceOperation 100475 (Print_ret "What people?");
    GamePrint "What people?\n";
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 1
  }
--[632]--------------------------------------------------
LocRoutine 100496:
  MakeRoutineFrame 0;
  Jump: 100497
LocOp 100497:
  TraceOperation 100497 (Call (Floc 022042) [Con 61,Con 194] Sp);
  PushFrame 100497;
  SetLocal 1 61;
  SetLocal 2 194;
  JumpCall: 022042, #actuals: 2
LocReturn 100497:
  PushStack call_result;
  TraceOperation 100504 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[633]--------------------------------------------------
LocRoutine 100506:
  MakeRoutineFrame 0;
  Jump: 100507
LocOp 100507:
  TraceOperation 100507 (Je [Con 198,Var (Global 195)] (Branch F (Dloc 100924)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(198,MakeHiLo(b1,b2))) {
    TraceOperation 100512 (Je [Var (Global 203),Con 150] (Branch F (Dloc 100535)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 100516 (Je [Var (Global 201),Con 30] (Branch F (Dloc 100535)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 100520 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 100523 (Call (Floc 022042) [Con 22,Con 198,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame 100523;
        SetLocal 1 22;
        SetLocal 2 198;
        SetLocal 3 MakeHiLo(b7,b8);
        JumpCall: 022042, #actuals: 3
      } else {
        Jump: 100535
      }
    } else {
      Jump: 100535
    }
  } else {
    Jump: 100924
  }
LocReturn 100523:
  PushStack call_result;
  TraceOperation 100531 (Store (Con 211) (Con 198));
  SetByte 008298 0;
  SetByte 008299 198;
  TraceOperation 100534 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 100535:
  TraceOperation 100535 (Je [Var (Global 203),Con 75] (Branch F (Dloc 100553)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 100539 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 100542 (Call (Floc 022042) [Con 75,Con 198] Sp);
    PushFrame 100542;
    SetLocal 1 75;
    SetLocal 2 198;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 100553
  }
LocReturn 100542:
  PushStack call_result;
  TraceOperation 100549 (Store (Con 211) (Con 198));
  SetByte 008298 0;
  SetByte 008299 198;
  TraceOperation 100552 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 100553:
  TraceOperation 100553 (Je [Var (Global 203),Con 174] (Branch F (Dloc 100576)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 100557 (Je [Var (Global 201),Con 28] (Branch F (Dloc 100576)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 100561 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 100564 (Call (Floc 022042) [Con 22,Con 198,Con 28] Sp);
      PushFrame 100564;
      SetLocal 1 22;
      SetLocal 2 198;
      SetLocal 3 28;
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 100576
    }
  } else {
    Jump: 100576
  }
LocReturn 100564:
  PushStack call_result;
  TraceOperation 100572 (Store (Con 211) (Con 198));
  SetByte 008298 0;
  SetByte 008299 198;
  TraceOperation 100575 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 100576:
  TraceOperation 100576 (Je [Var (Global 203),Con 88] (Branch F (Dloc 100683)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 100581 (Je [Var (Global 201),Con 186,Con 187] (Branch F (Dloc 100683)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),186),Equal(MakeHiLo(b3,b4),187))) {
      TraceOperation 100588 (Call (Floc 020662) [Con -16129] Sp);
      PushFrame 100588;
      SetLocal 1 -16129;
      JumpCall: 020662, #actuals: 1
    } else {
      Jump: 100683
    }
  } else {
    Jump: 100683
  }
LocReturn 100588:
  PushStack call_result;
  TraceOperation 100595 (Jz (Var Sp) (Branch T (Dloc 100634)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100634
  } else {
    TraceOperation 100598 (Print "\"Sorry,");
    GamePrint "\"Sorry,";
    TraceOperation 100607 (Print_paddr (Var (Global 3)));
    Let b2 = M[007914];
    Let b3 = M[007915];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 100609 (Print_obj (Con 209));
    Let b4 = M[002639];
    Let b5 = M[002640];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    if (IsZeroByte(b6)) {
      GamePrint "";
      TraceOperation 100611 (Print_ret ". I can't do everything, you know.\"");
      GamePrint ". I can't do everything, you know.\"\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
      TraceOperation 100611 (Print_ret ". I can't do everything, you know.\"");
      GamePrint ". I can't do everything, you know.\"\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    }
  }
LocOp 100634:
  TraceOperation 100634 (Print "\"Sorry, current course for");
  GamePrint "\"Sorry, current course for";
  TraceOperation 100655 (Print_paddr (Var (Global 17)));
  Let b1 = M[007942];
  Let b2 = M[007943];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 100657 (Print " can be countermanded only by ");
  GamePrint " can be countermanded only by ";
  TraceOperation 100676 (Print_obj (Con 195));
  Let b3 = M[002513];
  Let b4 = M[002514];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 100678 (Print_ret ".\"");
    GamePrint ".\"\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 100678 (Print_ret ".\"");
    GamePrint ".\"\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 100683:
  TraceOperation 100683 (Je [Var (Global 203),Con 103,Con 125] (Branch F (Dloc 100796)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),103),Equal(MakeHiLo(b1,b2),125))) {
    TraceOperation 100690 (Je [Var (Global 201),Con 177] (Branch F (Dloc 100796)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),177)) {
      TraceOperation 100695 (Jz (Var (Global 214)) (Branch T (Dloc 100796)));
      Let b5 = M[008336];
      Let b6 = M[008337];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 100796
      } else {
        TraceOperation 100699 (Print_ret "\"Not until I completely check out the safety of this planet. Please wait approximately fourteen years. In the meantime, have you brushed your teeth lately?\"");
        GamePrint "\"Not until I completely check out the safety of this planet. Please wait approximately fourteen years. In the meantime, have you brushed your teeth lately?\"\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      }
    } else {
      Jump: 100796
    }
  } else {
    Jump: 100796
  }
LocOp 100796:
  TraceOperation 100796 (Je [Var (Global 203),Con 181] (Branch F (Dloc 100810)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),181)) {
    TraceOperation 100800 (Je [Var (Global 213),Con 18] (Branch F (Dloc 100810)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),18)) {
      TraceOperation 100804 (Call (Floc 040748) [] Sp);
      PushFrame 100804;
      JumpCall: 040748, #actuals: 0
    } else {
      Jump: 100810
    }
  } else {
    Jump: 100810
  }
LocReturn 100804:
  PushStack call_result;
  TraceOperation 100809 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 100810:
  TraceOperation 100810 (Je [Var (Global 203),Con 102] (Branch F (Dloc 100824)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),102)) {
    TraceOperation 100814 (Je [Var (Global 213),Con 18] (Branch F (Dloc 100824)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),18)) {
      TraceOperation 100818 (Call (Floc 035052) [] Sp);
      PushFrame 100818;
      JumpCall: 035052, #actuals: 0
    } else {
      Jump: 100824
    }
  } else {
    Jump: 100824
  }
LocReturn 100818:
  PushStack call_result;
  TraceOperation 100823 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 100824:
  TraceOperation 100824 (Store (Con 229) (Con 18));
  SetByte 008334 0;
  SetByte 008335 18;
  TraceOperation 100827 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame 100827;
  SetLocal 1 -14349;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 100827:
  PushStack call_result;
  TraceOperation 100835 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 100840 (Print "Eddie sighs deeply. \"I can't talk right now. Do you know how difficult it is to pilot a ship as complicated as this one?\"");
  GamePrint "Eddie sighs deeply. \"I can't talk right now. Do you know how difficult it is to pilot a ship as complicated as this one?\"";
  TraceOperation 100917 New_line;
  GamePrint "\n";
  TraceOperation 100918 (Call (Floc 043634) [] Sp);
  PushFrame 100918;
  JumpCall: 043634, #actuals: 0
LocReturn 100918:
  PushStack call_result;
  TraceOperation 100923 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 100924:
  TraceOperation 100924 (Je [Var (Global 203),Con 40] (Branch F (Dloc 100949)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),40)) {
    TraceOperation 100928 (Print_ret "You don't know how (fortunately).");
    GamePrint "You don't know how (fortunately).\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 100949
  }
LocOp 100949:
  TraceOperation 100949 (Je [Var (Global 203),Con 22] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 100953 (Je [Var (Global 202),Con 28] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 100957 (Store (Con 229) (Con 19));
      SetByte 008334 0;
      SetByte 008335 19;
      TraceOperation 100960 (Call (Floc 022320) [Con -14349,Con 2] Sp);
      PushFrame 100960;
      SetLocal 1 -14349;
      SetLocal 2 2;
      JumpCall: 022320, #actuals: 2
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocReturn 100960:
  PushStack call_result;
  TraceOperation 100968 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 100973 (Print "\"To pilot ");
  GamePrint "\"To pilot ";
  TraceOperation 100982 (Print_obj (Con 220));
  Let b2 = M[002738];
  Let b3 = M[002739];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  if (IsZeroByte(b4)) {
    GamePrint "";
    TraceOperation 100984 (Print ", process data requests from the ");
    GamePrint ", process data requests from the ";
    TraceOperation 101005 (Print_obj (Con 209));
    Let b5 = M[002639];
    Let b6 = M[002640];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 101007 (Print_ret " and keep the crew healthy. Read your manual! How do you expect to get anywhere in life? But don't read unless there's enough light.\"");
      GamePrint " and keep the crew healthy. Read your manual! How do you expect to get anywhere in life? But don't read unless there's enough light.\"\n";
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 101007 (Print_ret " and keep the crew healthy. Read your manual! How do you expect to get anywhere in life? But don't read unless there's enough light.\"");
      GamePrint " and keep the crew healthy. Read your manual! How do you expect to get anywhere in life? But don't read unless there's enough light.\"\n";
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
    TraceOperation 100984 (Print ", process data requests from the ");
    GamePrint ", process data requests from the ";
    TraceOperation 101005 (Print_obj (Con 209));
    Let b10 = M[002639];
    Let b11 = M[002640];
    Let b12 = M[Address(MakeHiLo(b10,b11))];
    if (IsZeroByte(b12)) {
      GamePrint "";
      TraceOperation 101007 (Print_ret " and keep the crew healthy. Read your manual! How do you expect to get anywhere in life? But don't read unless there's enough light.\"");
      GamePrint " and keep the crew healthy. Read your manual! How do you expect to get anywhere in life? But don't read unless there's enough light.\"\n";
      PopFrame return_address_13;
      JumpReturn: return_address_13, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b10,b11)),1));
      TraceOperation 101007 (Print_ret " and keep the crew healthy. Read your manual! How do you expect to get anywhere in life? But don't read unless there's enough light.\"");
      GamePrint " and keep the crew healthy. Read your manual! How do you expect to get anywhere in life? But don't read unless there's enough light.\"\n";
      PopFrame return_address_14;
      JumpReturn: return_address_14, result: 1
    }
  }
--[634]--------------------------------------------------
LocRoutine 101090:
  MakeRoutineFrame 0;
  Jump: 101091
LocOp 101091:
  TraceOperation 101091 (Jz (Var (Global 210)) (Branch T Dfalse));
  Let b1 = M[008328];
  Let b2 = M[008329];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  } else {
    TraceOperation 101094 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),61)) {
      TraceOperation 101098 (Print "A ");
      GamePrint "A ";
      TraceOperation 101101 (Print_obj (Con 186));
      Let b6 = M[002432];
      Let b7 = M[002433];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 101103 (Print_ret " is plugged into the large receptacle.");
        GamePrint " is plugged into the large receptacle.\n";
        PopFrame return_address_9;
        JumpReturn: return_address_9, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 101103 (Print_ret " is plugged into the large receptacle.");
        GamePrint " is plugged into the large receptacle.\n";
        PopFrame return_address_10;
        JumpReturn: return_address_10, result: 1
      }
    } else {
      PopFrame return_address_11;
      JumpReturn: return_address_11, result: 0
    }
  }
--[635]--------------------------------------------------
LocRoutine 101124:
  MakeRoutineFrame 0;
  Jump: 101125
LocOp 101125:
  TraceOperation 101125 (Je [Var (Global 120),Con 195] (Branch F (Dloc 101153)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),195)) {
    TraceOperation 101129 (Je [Var (Global 201),Con 195,Con 196] (Branch F (Dloc 101144)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),195),Equal(MakeHiLo(b3,b4),196))) {
      TraceOperation 101135 (Call (Floc 022042) [Var (Global 203),Con 30,Var (Global 202)] Sp);
      Let b5 = M[008314];
      Let b6 = M[008315];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame 101135;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 30;
      SetLocal 3 MakeHiLo(b7,b8);
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 101144
    }
  } else {
    Jump: 101153
  }
LocReturn 101135:
  PushStack call_result;
  TraceOperation 101143 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 101144:
  TraceOperation 101144 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 30] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 101144;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 30;
  JumpCall: 022042, #actuals: 3
LocReturn 101144:
  PushStack call_result;
  TraceOperation 101152 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 101153:
  TraceOperation 101153 (Je [Var (Global 195),Con 195] (Branch F (Dloc 101237)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),195)) {
    TraceOperation 101158 (Je [Var (Global 203),Con 150] (Branch F (Dloc 101181)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 101162 (Je [Var (Global 201),Con 30] (Branch F (Dloc 101181)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 101166 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 101169 (Call (Floc 022042) [Con 22,Con 195,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame 101169;
        SetLocal 1 22;
        SetLocal 2 195;
        SetLocal 3 MakeHiLo(b7,b8);
        JumpCall: 022042, #actuals: 3
      } else {
        Jump: 101181
      }
    } else {
      Jump: 101181
    }
  } else {
    Jump: 101237
  }
LocReturn 101169:
  PushStack call_result;
  TraceOperation 101177 (Store (Con 211) (Con 195));
  SetByte 008298 0;
  SetByte 008299 195;
  TraceOperation 101180 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 101181:
  TraceOperation 101181 (Je [Var (Global 203),Con 75] (Branch F (Dloc 101199)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 101185 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 101188 (Call (Floc 022042) [Con 75,Con 195] Sp);
    PushFrame 101188;
    SetLocal 1 75;
    SetLocal 2 195;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 101199
  }
LocReturn 101188:
  PushStack call_result;
  TraceOperation 101195 (Store (Con 211) (Con 195));
  SetByte 008298 0;
  SetByte 008299 195;
  TraceOperation 101198 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 101199:
  TraceOperation 101199 (Je [Var (Global 203),Con 174] (Branch F (Dloc 101211)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 101203 (Je [Var (Global 201),Con 28] (Branch F (Dloc 101211)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 101207 (Print_paddr (Var (Global 33)));
      Let b5 = M[007974];
      Let b6 = M[007975];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 101209 New_line;
      GamePrint "\n";
      TraceOperation 101210 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 101211
    }
  } else {
    Jump: 101211
  }
LocOp 101211:
  TraceOperation 101211 (Print "\"Shut up, Earthman.\"");
  GamePrint "\"Shut up, Earthman.\"";
  TraceOperation 101230 New_line;
  GamePrint "\n";
  TraceOperation 101231 (Call (Floc 043634) [] Sp);
  PushFrame 101231;
  JumpCall: 043634, #actuals: 0
LocReturn 101231:
  PushStack call_result;
  TraceOperation 101236 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 101237:
  TraceOperation 101237 (Je [Var (Global 120),Con 194] (Branch F (Dloc 101645)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),194)) {
    TraceOperation 101242 (Je [Var (Global 202),Con 196] (Branch F (Dloc 101260)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),196)) {
      TraceOperation 101246 (Je [Var (Global 203),Con 66,Con 134] (Branch F (Dloc 101260)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (LogOr(Equal(MakeHiLo(b5,b6),66),Equal(MakeHiLo(b5,b6),134))) {
        TraceOperation 101252 (Call (Floc 022042) [Con 75,Con 196] Sp);
        PushFrame 101252;
        SetLocal 1 75;
        SetLocal 2 196;
        JumpCall: 022042, #actuals: 2
      } else {
        Jump: 101260
      }
    } else {
      Jump: 101260
    }
  } else {
    Jump: 101645
  }
LocReturn 101252:
  PushStack call_result;
  TraceOperation 101259 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 101260:
  TraceOperation 101260 (Je [Var (Global 203),Con 15,Con 75,Con 67] (Branch T (Dloc 101274)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),15),Equal(MakeHiLo(b1,b2),75)),Equal(MakeHiLo(b1,b2),67))) {
    Jump: 101274
  } else {
    TraceOperation 101267 (Je [Var (Global 203),Con 23,Con 22] (Branch F (Dloc 101396)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),23),Equal(MakeHiLo(b3,b4),22))) {
      Jump: 101274
    } else {
      Jump: 101396
    }
  }
LocOp 101274:
  TraceOperation 101274 (Je [Var (Global 201),Con 196] (Branch F (Dloc 101396)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),196)) {
    TraceOperation 101279 (Jin (Con 196) (Var (Global 0)) (Branch T (Dloc 101300)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[002519];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      Jump: 101300
    } else {
      TraceOperation 101283 (Print_ret "Phil's not here anymore!");
      GamePrint "Phil's not here anymore!\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    Jump: 101396
  }
--[636]--------------------------------------------------
LocRoutine 101310:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 1;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 -26880;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 225;
      }
    }
  }
  Jump: 101317
LocOp 101317:
  TraceOperation 101317 (Print "Phil must not have noticed you, because he just moved into the ");
  GamePrint "Phil must not have noticed you, because he just moved into the ";
  TraceOperation 101348 (Je [Var (Global 0),Con 76] (Branch F (Dloc 101363)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),76)) {
    TraceOperation 101352 (Insert_obj (Con 196) (Con 74));
    Let b3 = M[002519];
    if (IsZero(Widen(b3))) {
      SetByte 002519 74;
      Let b4 = M[001423];
      SetByte 002520 LoByte(Widen(b4));
      SetByte 001423 196;
      TraceOperation 101355 (Insert_obj (Con 68) (Con 74));
      Let b5 = M[001367];
      if (IsZero(Widen(b5))) {
        SetByte 001367 74;
        Let b6 = M[001423];
        SetByte 001368 LoByte(Widen(b6));
        SetByte 001423 68;
        TraceOperation 101358 (Print_obj (Con 74));
        Let b7 = M[001424];
        Let b8 = M[001425];
        Let b9 = M[Address(MakeHiLo(b7,b8))];
        if (IsZeroByte(b9)) {
          GamePrint "";
          TraceOperation 101360 (Jump 101386);
          Jump: 101386
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
          TraceOperation 101360 (Jump 101386);
          Jump: 101386
        }
      } else {
        Let b10 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b10),68)) {
          Let b11 = M[001368];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b11));
          SetByte 001367 74;
          Let b12 = M[001423];
          SetByte 001368 LoByte(Widen(b12));
          SetByte 001423 68;
          TraceOperation 101358 (Print_obj (Con 74));
          Let b13 = M[001424];
          Let b14 = M[001425];
          Let b15 = M[Address(MakeHiLo(b13,b14))];
          if (IsZeroByte(b15)) {
            GamePrint "";
            TraceOperation 101360 (Jump 101386);
            Jump: 101386
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
            TraceOperation 101360 (Jump 101386);
            Jump: 101386
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b16 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b16),196)) {
        Let b17 = M[002520];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b17));
        SetByte 002519 74;
        Let b18 = M[001423];
        SetByte 002520 LoByte(Widen(b18));
        SetByte 001423 196;
        TraceOperation 101355 (Insert_obj (Con 68) (Con 74));
        Let b19 = M[001367];
        if (IsZero(Widen(b19))) {
          SetByte 001367 74;
          Let b20 = M[001423];
          SetByte 001368 LoByte(Widen(b20));
          SetByte 001423 68;
          TraceOperation 101358 (Print_obj (Con 74));
          Let b21 = M[001424];
          Let b22 = M[001425];
          Let b23 = M[Address(MakeHiLo(b21,b22))];
          if (IsZeroByte(b23)) {
            GamePrint "";
            TraceOperation 101360 (Jump 101386);
            Jump: 101386
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b21,b22)),1));
            TraceOperation 101360 (Jump 101386);
            Jump: 101386
          }
        } else {
          Let b24 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
          if (Equal(Widen(b24),68)) {
            Let b25 = M[001368];
            SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b25));
            SetByte 001367 74;
            Let b26 = M[001423];
            SetByte 001368 LoByte(Widen(b26));
            SetByte 001423 68;
            TraceOperation 101358 (Print_obj (Con 74));
            Let b27 = M[001424];
            Let b28 = M[001425];
            Let b29 = M[Address(MakeHiLo(b27,b28))];
            if (IsZeroByte(b29)) {
              GamePrint "";
              TraceOperation 101360 (Jump 101386);
              Jump: 101386
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b27,b28)),1));
              TraceOperation 101360 (Jump 101386);
              Jump: 101386
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 101363
  }
LocOp 101363:
  TraceOperation 101363 (Je [Var (Global 0),Con 74] (Branch F (Dloc 101378)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 101367 (Insert_obj (Con 196) (Con 73));
    Let b3 = M[002519];
    if (IsZero(Widen(b3))) {
      SetByte 002519 73;
      Let b4 = M[001414];
      SetByte 002520 LoByte(Widen(b4));
      SetByte 001414 196;
      TraceOperation 101370 (Insert_obj (Con 68) (Con 73));
      Let b5 = M[001367];
      if (IsZero(Widen(b5))) {
        SetByte 001367 73;
        Let b6 = M[001414];
        SetByte 001368 LoByte(Widen(b6));
        SetByte 001414 68;
        TraceOperation 101373 (Print_obj (Con 73));
        Let b7 = M[001415];
        Let b8 = M[001416];
        Let b9 = M[Address(MakeHiLo(b7,b8))];
        if (IsZeroByte(b9)) {
          GamePrint "";
          TraceOperation 101375 (Jump 101386);
          Jump: 101386
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
          TraceOperation 101375 (Jump 101386);
          Jump: 101386
        }
      } else {
        Let b10 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b10),68)) {
          Let b11 = M[001368];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b11));
          SetByte 001367 73;
          Let b12 = M[001414];
          SetByte 001368 LoByte(Widen(b12));
          SetByte 001414 68;
          TraceOperation 101373 (Print_obj (Con 73));
          Let b13 = M[001415];
          Let b14 = M[001416];
          Let b15 = M[Address(MakeHiLo(b13,b14))];
          if (IsZeroByte(b15)) {
            GamePrint "";
            TraceOperation 101375 (Jump 101386);
            Jump: 101386
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
            TraceOperation 101375 (Jump 101386);
            Jump: 101386
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b16 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b16),196)) {
        Let b17 = M[002520];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b17));
        SetByte 002519 73;
        Let b18 = M[001414];
        SetByte 002520 LoByte(Widen(b18));
        SetByte 001414 196;
        TraceOperation 101370 (Insert_obj (Con 68) (Con 73));
        Let b19 = M[001367];
        if (IsZero(Widen(b19))) {
          SetByte 001367 73;
          Let b20 = M[001414];
          SetByte 001368 LoByte(Widen(b20));
          SetByte 001414 68;
          TraceOperation 101373 (Print_obj (Con 73));
          Let b21 = M[001415];
          Let b22 = M[001416];
          Let b23 = M[Address(MakeHiLo(b21,b22))];
          if (IsZeroByte(b23)) {
            GamePrint "";
            TraceOperation 101375 (Jump 101386);
            Jump: 101386
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b21,b22)),1));
            TraceOperation 101375 (Jump 101386);
            Jump: 101386
          }
        } else {
          Let b24 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
          if (Equal(Widen(b24),68)) {
            Let b25 = M[001368];
            SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b25));
            SetByte 001367 73;
            Let b26 = M[001414];
            SetByte 001368 LoByte(Widen(b26));
            SetByte 001414 68;
            TraceOperation 101373 (Print_obj (Con 73));
            Let b27 = M[001415];
            Let b28 = M[001416];
            Let b29 = M[Address(MakeHiLo(b27,b28))];
            if (IsZeroByte(b29)) {
              GamePrint "";
              TraceOperation 101375 (Jump 101386);
              Jump: 101386
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b27,b28)),1));
              TraceOperation 101375 (Jump 101386);
              Jump: 101386
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Jump: 101378
  }
LocOp 101378:
  TraceOperation 101378 (Insert_obj (Con 196) (Con 76));
  Let b1 = M[002519];
  if (IsZero(Widen(b1))) {
    SetByte 002519 76;
    Let b2 = M[001441];
    SetByte 002520 LoByte(Widen(b2));
    SetByte 001441 196;
    TraceOperation 101381 (Insert_obj (Con 68) (Con 76));
    Let b3 = M[001367];
    if (IsZero(Widen(b3))) {
      SetByte 001367 76;
      Let b4 = M[001441];
      SetByte 001368 LoByte(Widen(b4));
      SetByte 001441 68;
      TraceOperation 101384 (Print_obj (Con 76));
      Let b5 = M[001442];
      Let b6 = M[001443];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        Jump: 101386
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        Jump: 101386
      }
    } else {
      Let b8 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b8),68)) {
        Let b9 = M[001368];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b9));
        SetByte 001367 76;
        Let b10 = M[001441];
        SetByte 001368 LoByte(Widen(b10));
        SetByte 001441 68;
        TraceOperation 101384 (Print_obj (Con 76));
        Let b11 = M[001442];
        Let b12 = M[001443];
        Let b13 = M[Address(MakeHiLo(b11,b12))];
        if (IsZeroByte(b13)) {
          GamePrint "";
          Jump: 101386
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
          Jump: 101386
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b14 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b14),196)) {
      Let b15 = M[002520];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b15));
      SetByte 002519 76;
      Let b16 = M[001441];
      SetByte 002520 LoByte(Widen(b16));
      SetByte 001441 196;
      TraceOperation 101381 (Insert_obj (Con 68) (Con 76));
      Let b17 = M[001367];
      if (IsZero(Widen(b17))) {
        SetByte 001367 76;
        Let b18 = M[001441];
        SetByte 001368 LoByte(Widen(b18));
        SetByte 001441 68;
        TraceOperation 101384 (Print_obj (Con 76));
        Let b19 = M[001442];
        Let b20 = M[001443];
        Let b21 = M[Address(MakeHiLo(b19,b20))];
        if (IsZeroByte(b21)) {
          GamePrint "";
          Jump: 101386
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b19,b20)),1));
          Jump: 101386
        }
      } else {
        Let b22 = M[Offset(Offset(000751,Mul(Widen(b17),9)),6)];
        if (Equal(Widen(b22),68)) {
          Let b23 = M[001368];
          SetByte Offset(Offset(000751,Mul(Widen(b17),9)),6) LoByte(Widen(b23));
          SetByte 001367 76;
          Let b24 = M[001441];
          SetByte 001368 LoByte(Widen(b24));
          SetByte 001441 68;
          TraceOperation 101384 (Print_obj (Con 76));
          Let b25 = M[001442];
          Let b26 = M[001443];
          Let b27 = M[Address(MakeHiLo(b25,b26))];
          if (IsZeroByte(b27)) {
            GamePrint "";
            Jump: 101386
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b25,b26)),1));
            Jump: 101386
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocOp 101386:
  TraceOperation 101386 (Print ".");
  GamePrint ".";
  TraceOperation 101389 New_line;
  GamePrint "\n";
  TraceOperation 101390 (Call (Floc 043634) [] Sp);
  PushFrame 101390;
  JumpCall: 043634, #actuals: 0
LocReturn 101390:
  PushStack call_result;
  TraceOperation 101395 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[637]--------------------------------------------------
LocRoutine 101688:
  MakeRoutineFrame 0;
  Jump: 101689
LocOp 101689:
  TraceOperation 101689 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[638]--------------------------------------------------
LocRoutine 101702:
  MakeRoutineFrame 0;
  Jump: 101703
LocOp 101703:
  TraceOperation 101703 (Jz (Var (Global 96)) (Branch T (Dloc 101814)));
  Let b1 = M[008100];
  Let b2 = M[008101];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 101814
  } else {
    TraceOperation 101707 (Call (Floc 022320) [Con -14685,Con 3] Sp);
    PushFrame 101707;
    SetLocal 1 -14685;
    SetLocal 2 3;
    JumpCall: 022320, #actuals: 2
  }
LocReturn 101707:
  PushStack call_result;
  TraceOperation 101715 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 101720 (Call (Floc 020662) [Con -20734] Sp);
  PushFrame 101720;
  SetLocal 1 -20734;
  JumpCall: 020662, #actuals: 1
LocReturn 101720:
  PushStack call_result;
  TraceOperation 101727 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    TraceOperation 101730 (Insert_obj (Con 196) (Var (Global 0)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[002519];
    if (IsZero(Widen(b5))) {
      SetByte 002519 b4;
      Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
      SetByte 002520 LoByte(Widen(b6));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 196;
      TraceOperation 101733 (Insert_obj (Con 68) (Var (Global 0)));
      Let b7 = M[007908];
      Let b8 = M[007909];
      Let b9 = M[001367];
      if (IsZero(Widen(b9))) {
        SetByte 001367 b8;
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
        SetByte 001368 LoByte(Widen(b10));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 68;
        TraceOperation 101736 New_line;
        GamePrint "\n";
        TraceOperation 101737 (Print_ret "Out of the corner of your eye, you see Phil leering at you. He starts to approach, but then notices the hostess with you and veers away.");
        GamePrint "Out of the corner of your eye, you see Phil leering at you. He starts to approach, but then notices the hostess with you and veers away.\n";
        PopFrame return_address_11;
        JumpReturn: return_address_11, result: 1
      } else {
        Let b12 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
        if (Equal(Widen(b12),68)) {
          Let b13 = M[001368];
          SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b13));
          SetByte 001367 b8;
          Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
          SetByte 001368 LoByte(Widen(b14));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 68;
          TraceOperation 101736 New_line;
          GamePrint "\n";
          TraceOperation 101737 (Print_ret "Out of the corner of your eye, you see Phil leering at you. He starts to approach, but then notices the hostess with you and veers away.");
          GamePrint "Out of the corner of your eye, you see Phil leering at you. He starts to approach, but then notices the hostess with you and veers away.\n";
          PopFrame return_address_15;
          JumpReturn: return_address_15, result: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b16 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b16),196)) {
        Let b17 = M[002520];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b17));
        SetByte 002519 b4;
        Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
        SetByte 002520 LoByte(Widen(b18));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 196;
        TraceOperation 101733 (Insert_obj (Con 68) (Var (Global 0)));
        Let b19 = M[007908];
        Let b20 = M[007909];
        Let b21 = M[001367];
        if (IsZero(Widen(b21))) {
          SetByte 001367 b20;
          Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),6)];
          SetByte 001368 LoByte(Widen(b22));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),6) 68;
          TraceOperation 101736 New_line;
          GamePrint "\n";
          TraceOperation 101737 (Print_ret "Out of the corner of your eye, you see Phil leering at you. He starts to approach, but then notices the hostess with you and veers away.");
          GamePrint "Out of the corner of your eye, you see Phil leering at you. He starts to approach, but then notices the hostess with you and veers away.\n";
          PopFrame return_address_23;
          JumpReturn: return_address_23, result: 1
        } else {
          Let b24 = M[Offset(Offset(000751,Mul(Widen(b21),9)),6)];
          if (Equal(Widen(b24),68)) {
            Let b25 = M[001368];
            SetByte Offset(Offset(000751,Mul(Widen(b21),9)),6) LoByte(Widen(b25));
            SetByte 001367 b20;
            Let b26 = M[Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),6)];
            SetByte 001368 LoByte(Widen(b26));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),6) 68;
            TraceOperation 101736 New_line;
            GamePrint "\n";
            TraceOperation 101737 (Print_ret "Out of the corner of your eye, you see Phil leering at you. He starts to approach, but then notices the hostess with you and veers away.");
            GamePrint "Out of the corner of your eye, you see Phil leering at you. He starts to approach, but then notices the hostess with you and veers away.\n";
            PopFrame return_address_27;
            JumpReturn: return_address_27, result: 1
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  }
LocOp 101814:
  TraceOperation 101814 (Add (Var (Global 1)) (Con 25) (Global 1));
  Let b1 = M[007910];
  Let b2 = M[007911];
  SetByte 007910 HiByte(Add(MakeHiLo(b1,b2),25));
  SetByte 007911 LoByte(Add(MakeHiLo(b1,b2),25));
  TraceOperation 101818 (Set_attr (Con 76) (Con 4));
  Let b3 = M[001435];
  SetByte 001435 SetBit(b3,3);
  TraceOperation 101821 (Set_attr (Con 70) (Con 27));
  Let b4 = M[001384];
  SetByte 001384 SetBit(b4,4);
  TraceOperation 101824 New_line;
  GamePrint "\n";
  TraceOperation 101825 (Call (Floc 042734) [Con -12269] Sp);
  PushFrame 101825;
  SetLocal 1 -12269;
  JumpCall: 042734, #actuals: 1
LocReturn 101825:
  PushStack call_result;
  TraceOperation 101832 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[639]--------------------------------------------------
LocRoutine 101834:
  MakeRoutineFrame 0;
  Jump: 101835
LocOp 101835:
  TraceOperation 101835 (Je [Var (Global 120),Con 194] (Branch F (Dloc 101861)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),194)) {
    TraceOperation 101839 (Je [Con 194,Var (Global 201)] (Branch F (Dloc 101852)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(194,MakeHiLo(b3,b4))) {
      TraceOperation 101843 (Call (Floc 022042) [Var (Global 203),Con 30,Var (Global 202)] Sp);
      Let b5 = M[008314];
      Let b6 = M[008315];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame 101843;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 30;
      SetLocal 3 MakeHiLo(b7,b8);
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 101852
    }
  } else {
    Jump: 101861
  }
LocReturn 101843:
  PushStack call_result;
  TraceOperation 101851 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 101852:
  TraceOperation 101852 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 30] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame 101852;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 30;
  JumpCall: 022042, #actuals: 3
LocReturn 101852:
  PushStack call_result;
  TraceOperation 101860 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 101861:
  TraceOperation 101861 (Je [Con 194,Var (Global 195)] (Branch F (Dloc 102055)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(194,MakeHiLo(b1,b2))) {
    TraceOperation 101866 (Je [Var (Global 203),Con 150] (Branch F (Dloc 101889)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 101870 (Je [Var (Global 201),Con 30] (Branch F (Dloc 101889)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 101874 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 101877 (Call (Floc 022042) [Con 22,Con 194,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame 101877;
        SetLocal 1 22;
        SetLocal 2 194;
        SetLocal 3 MakeHiLo(b7,b8);
        JumpCall: 022042, #actuals: 3
      } else {
        Jump: 101889
      }
    } else {
      Jump: 101889
    }
  } else {
    Jump: 102055
  }
LocReturn 101877:
  PushStack call_result;
  TraceOperation 101885 (Store (Con 211) (Con 194));
  SetByte 008298 0;
  SetByte 008299 194;
  TraceOperation 101888 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 101889:
  TraceOperation 101889 (Je [Var (Global 203),Con 75] (Branch F (Dloc 101907)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 101893 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 101896 (Call (Floc 022042) [Con 75,Con 194] Sp);
    PushFrame 101896;
    SetLocal 1 75;
    SetLocal 2 194;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 101907
  }
LocReturn 101896:
  PushStack call_result;
  TraceOperation 101903 (Store (Con 211) (Con 194));
  SetByte 008298 0;
  SetByte 008299 194;
  TraceOperation 101906 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 101907:
  TraceOperation 101907 (Je [Var (Global 203),Con 174] (Branch F (Dloc 101919)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 101911 (Je [Var (Global 201),Con 28] (Branch F (Dloc 101919)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 101915 (Print_paddr (Var (Global 33)));
      Let b5 = M[007974];
      Let b6 = M[007975];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 101917 New_line;
      GamePrint "\n";
      TraceOperation 101918 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 101919
    }
  } else {
    Jump: 101919
  }
LocOp 101919:
  TraceOperation 101919 (Je [Var (Global 203),Con 132] (Branch F (Dloc 101931)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 101923 (Jin (Con 52) (Con 194) (Branch F (Dloc 101931)));
    Let b3 = M[001223];
    if (Equal(194,Widen(b3))) {
      TraceOperation 101927 (Je [Var (Global 201),Con 51] (Branch T (Dloc 101943)));
      Let b4 = M[008310];
      Let b5 = M[008311];
      if (Equal(MakeHiLo(b4,b5),51)) {
        Jump: 101943
      } else {
        Jump: 101931
      }
    } else {
      Jump: 101931
    }
  } else {
    Jump: 101931
  }
LocOp 101931:
  TraceOperation 101931 (Je [Var (Global 203),Con 133] (Branch F (Dloc 101964)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),133)) {
    TraceOperation 101935 (Jin (Con 52) (Con 194) (Branch F (Dloc 101964)));
    Let b3 = M[001223];
    if (Equal(194,Widen(b3))) {
      TraceOperation 101939 (Je [Var (Global 202),Con 51] (Branch F (Dloc 101964)));
      Let b4 = M[008312];
      Let b5 = M[008313];
      if (Equal(MakeHiLo(b4,b5),51)) {
        Jump: 101943
      } else {
        Jump: 101964
      }
    } else {
      Jump: 101964
    }
  } else {
    Jump: 101964
  }
LocOp 101943:
  TraceOperation 101943 (Insert_obj (Con 52) (Con 31));
  Let b1 = M[001223];
  if (IsZero(Widen(b1))) {
    SetByte 001223 31;
    Let b2 = M[001036];
    SetByte 001224 LoByte(Widen(b2));
    SetByte 001036 52;
    TraceOperation 101946 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 101949 (Call (Floc 022042) [Con 132,Con 51,Con 52] Sp);
    PushFrame 101949;
    SetLocal 1 132;
    SetLocal 2 51;
    SetLocal 3 52;
    JumpCall: 022042, #actuals: 3
  } else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b3),52)) {
      Let b4 = M[001224];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b4));
      SetByte 001223 31;
      Let b5 = M[001036];
      SetByte 001224 LoByte(Widen(b5));
      SetByte 001036 52;
      TraceOperation 101946 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 101949 (Call (Floc 022042) [Con 132,Con 51,Con 52] Sp);
      PushFrame 101949;
      SetLocal 1 132;
      SetLocal 2 51;
      SetLocal 3 52;
      JumpCall: 022042, #actuals: 3
    } else {
      Error: unlink/loop
    }
  }
LocReturn 101949:
  PushStack call_result;
  TraceOperation 101957 (Store (Con 211) (Con 194));
  SetByte 008298 0;
  SetByte 008299 194;
  TraceOperation 101960 (Insert_obj (Con 52) (Con 194));
  Let b1 = M[001223];
  if (IsZero(Widen(b1))) {
    SetByte 001223 194;
    Let b2 = M[002503];
    SetByte 001224 LoByte(Widen(b2));
    SetByte 002503 52;
    TraceOperation 101963 Rtrue;
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b4),52)) {
      Let b5 = M[001224];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b5));
      SetByte 001223 194;
      Let b6 = M[002503];
      SetByte 001224 LoByte(Widen(b6));
      SetByte 002503 52;
      TraceOperation 101963 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Error: unlink/loop
    }
  }
LocOp 101964:
  TraceOperation 101964 (Je [Var (Global 120),Con 195] (Branch F (Dloc 102019)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),195)) {
    TraceOperation 101968 (Print "\"Shut up, you jerk!\" hisses ");
    GamePrint "\"Shut up, you jerk!\" hisses ";
    TraceOperation 101989 (Print_obj (Con 194));
    Let b3 = M[002504];
    Let b4 = M[002505];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 101991 (Print ". \"Just get on with the plan.\"");
      GamePrint ". \"Just get on with the plan.\"";
      TraceOperation 102012 New_line;
      GamePrint "\n";
      TraceOperation 102013 (Call (Floc 043634) [] Sp);
      PushFrame 102013;
      JumpCall: 043634, #actuals: 0
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 101991 (Print ". \"Just get on with the plan.\"");
      GamePrint ". \"Just get on with the plan.\"";
      TraceOperation 102012 New_line;
      GamePrint "\n";
      TraceOperation 102013 (Call (Floc 043634) [] Sp);
      PushFrame 102013;
      JumpCall: 043634, #actuals: 0
    }
  } else {
    Jump: 102019
  }
LocReturn 102013:
  PushStack call_result;
  TraceOperation 102018 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 102019:
  TraceOperation 102019 (Print_obj (Con 194));
  Let b1 = M[002504];
  Let b2 = M[002505];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 102021 (Print " smiles disinterestedly at you and looks away.");
    GamePrint " smiles disinterestedly at you and looks away.";
    TraceOperation 102048 New_line;
    GamePrint "\n";
    TraceOperation 102049 (Call (Floc 043634) [] Sp);
    PushFrame 102049;
    JumpCall: 043634, #actuals: 0
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 102021 (Print " smiles disinterestedly at you and looks away.");
    GamePrint " smiles disinterestedly at you and looks away.";
    TraceOperation 102048 New_line;
    GamePrint "\n";
    TraceOperation 102049 (Call (Floc 043634) [] Sp);
    PushFrame 102049;
    JumpCall: 043634, #actuals: 0
  }
LocReturn 102049:
  PushStack call_result;
  TraceOperation 102054 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 102055:
  TraceOperation 102055 (Je [Var (Global 203),Con 132] (Branch F (Dloc 102110)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 102059 (Je [Var (Global 202),Con 52] (Branch F (Dloc 102110)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),52)) {
      TraceOperation 102063 (Print "How heartless! Fortunately, justice prevails as the guards");
      GamePrint "How heartless! Fortunately, justice prevails as the guards";
      TraceOperation 102104 (Call (Floc 092666) [] Sp);
      PushFrame 102104;
      JumpCall: 092666, #actuals: 0
    } else {
      Jump: 102110
    }
  } else {
    Jump: 102110
  }
LocReturn 102104:
  PushStack call_result;
  TraceOperation 102109 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 102110:
  TraceOperation 102110 (Je [Var (Global 203),Con 22] (Branch F (Dloc 102122)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 102114 (Je [Var (Global 202),Con 28] (Branch F (Dloc 102122)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 102118 (Print_paddr (Var (Global 33)));
      Let b5 = M[007974];
      Let b6 = M[007975];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 102120 New_line;
      GamePrint "\n";
      TraceOperation 102121 Rtrue;
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 102122
    }
  } else {
    Jump: 102122
  }
LocOp 102122:
  TraceOperation 102122 (Je [Var (Global 151),Con 3] (Branch F (Dloc 102137)));
  Let b1 = M[008210];
  Let b2 = M[008211];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 102126 (Je [Var (Global 203),Con 69] (Branch F (Dloc 102137)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),69)) {
      TraceOperation 102130 (Call (Floc 043620) [Con 19] Sp);
      PushFrame 102130;
      SetLocal 1 19;
      JumpCall: 043620, #actuals: 1
    } else {
      Jump: 102137
    }
  } else {
    Jump: 102137
  }
LocReturn 102130:
  PushStack call_result;
  TraceOperation 102136 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 102137:
  TraceOperation 102137 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 102141 (Jin (Con 52) (Con 194) (Branch F Dfalse));
    Let b3 = M[001223];
    if (Equal(194,Widen(b3))) {
      TraceOperation 102145 (Print_ret "She's holding a blaster at your head.");
      GamePrint "She's holding a blaster at your head.\n";
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 1
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
--[640]--------------------------------------------------
LocRoutine 102166:
  MakeRoutineFrame 0;
  Jump: 102167
LocOp 102167:
  TraceOperation 102167 (Je [Var (Global 203),Con 154,Con 53] (Branch F (Dloc 102183)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),53))) {
    TraceOperation 102173 (Je [Var (Global 120),Con 194] (Branch F (Dloc 102183)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),194)) {
      TraceOperation 102177 (Call (Floc 089360) [] Sp);
      PushFrame 102177;
      JumpCall: 089360, #actuals: 0
    } else {
      Jump: 102183
    }
  } else {
    Jump: 102183
  }
LocReturn 102177:
  PushStack call_result;
  TraceOperation 102182 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 102183:
  TraceOperation 102183 (Je [Var (Global 203),Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 102187 (Jin (Con 193) (Con 194) (Branch F Dfalse));
    Let b3 = M[002492];
    if (Equal(194,Widen(b3))) {
      TraceOperation 102191 (Print_obj (Con 194));
      Let b4 = M[002504];
      Let b5 = M[002505];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      if (IsZeroByte(b6)) {
        GamePrint "";
        TraceOperation 102193 (Print_ret " pulls it away.");
        GamePrint " pulls it away.\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
        TraceOperation 102193 (Print_ret " pulls it away.");
        GamePrint " pulls it away.\n";
        PopFrame return_address_8;
        JumpReturn: return_address_8, result: 1
      }
    } else {
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 0
    }
  } else {
    PopFrame return_address_10;
    JumpReturn: return_address_10, result: 0
  }
--[641]--------------------------------------------------
LocRoutine 102204:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102207
LocOp 102207:
  TraceOperation 102207 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 102211 (Print "This is one end of a short corridor that continues ");
    GamePrint "This is one end of a short corridor that continues ";
    TraceOperation 102242 (Je [Var (Global 0),Con 192] (Branch F (Dloc 102252)));
    Let b1 = M[007908];
    Let b2 = M[007909];
    if (Equal(MakeHiLo(b1,b2),192)) {
      TraceOperation 102246 (Print "aft");
      GamePrint "aft";
      TraceOperation 102249 (Jump 102257);
      Jump: 102257
    } else {
      Jump: 102252
    }
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocOp 102252:
  TraceOperation 102252 (Print "fore");
  GamePrint "fore";
  Jump: 102257
LocOp 102257:
  TraceOperation 102257 (Print " along the main deck of ");
  GamePrint " along the main deck of ";
  TraceOperation 102272 (Print_obj (Con 220));
  Let b1 = M[002738];
  Let b2 = M[002739];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 102274 (Print ". Doorways lead to ");
    GamePrint ". Doorways lead to ";
    TraceOperation 102289 (Je [Var (Global 0),Con 192] (Branch F (Dloc 102301)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    if (Equal(MakeHiLo(b4,b5),192)) {
      TraceOperation 102293 (Print "fore");
      GamePrint "fore";
      TraceOperation 102298 (Jump 102304);
      Jump: 102304
    } else {
      Jump: 102301
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 102274 (Print ". Doorways lead to ");
    GamePrint ". Doorways lead to ";
    TraceOperation 102289 (Je [Var (Global 0),Con 192] (Branch F (Dloc 102301)));
    Let b6 = M[007908];
    Let b7 = M[007909];
    if (Equal(MakeHiLo(b6,b7),192)) {
      TraceOperation 102293 (Print "fore");
      GamePrint "fore";
      TraceOperation 102298 (Jump 102304);
      Jump: 102304
    } else {
      Jump: 102301
    }
  }
LocOp 102301:
  TraceOperation 102301 (Print "aft");
  GamePrint "aft";
  Jump: 102304
LocOp 102304:
  TraceOperation 102304 (Print " and port. In addition, a gangway leads ");
  GamePrint " and port. In addition, a gangway leads ";
  TraceOperation 102331 (Je [Var (Global 0),Con 192] (Branch F (Dloc 102341)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),192)) {
    TraceOperation 102335 (Print "up");
    GamePrint "up";
    TraceOperation 102338 (Jump 102346);
    Jump: 102346
  } else {
    Jump: 102341
  }
LocOp 102341:
  TraceOperation 102341 (Print "down");
  GamePrint "down";
  Jump: 102346
LocOp 102346:
  TraceOperation 102346 (Print_ret "ward.");
  GamePrint "ward.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[642]--------------------------------------------------
LocRoutine 102352:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102355
LocOp 102355:
  TraceOperation 102355 (Je [Var (Local 1),Con 2] (Branch F (Dloc 102363)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 102359 (Clear_attr (Con 177) (Con 28));
    Let b1 = M[002347];
    SetByte 002347 ClearBit(b1,3);
    TraceOperation 102362 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    Jump: 102363
  }
LocOp 102363:
  TraceOperation 102363 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 102367 (Call (Floc 102204) [Con 3] Sp);
    PushFrame 102367;
    SetLocal 1 3;
    JumpCall: 102204, #actuals: 1
  } else {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  }
LocReturn 102367:
  PushStack call_result;
  TraceOperation 102373 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[643]--------------------------------------------------
LocRoutine 102374:
  MakeRoutineFrame 0;
  Jump: 102375
LocOp 102375:
  TraceOperation 102375 (Store (Con 229) (Con 0));
  SetByte 008334 0;
  SetByte 008335 0;
  TraceOperation 102378 Rfalse;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 0
--[644]--------------------------------------------------
LocRoutine 102380:
  MakeRoutineFrame 0;
  Jump: 102381
LocOp 102381:
  TraceOperation 102381 (Inc (Con 228));
  Let b1 = M[008332];
  Let b2 = M[008333];
  SetByte 008332 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008333 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 102383 (Je [Var (Global 212),Con 1] (Branch F (Dloc 102490)));
  Let b3 = M[008332];
  Let b4 = M[008333];
  if (Equal(MakeHiLo(b3,b4),1)) {
    TraceOperation 102388 (Store (Con 229) (Con 1));
    SetByte 008334 0;
    SetByte 008335 1;
    TraceOperation 102391 (Call (Floc 022320) [Con -14128,Con 2] Sp);
    PushFrame 102391;
    SetLocal 1 -14128;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 102490
  }
LocReturn 102391:
  PushStack call_result;
  TraceOperation 102399 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102404 (Print "That entrance leads to the");
  GamePrint "That entrance leads to the";
  TraceOperation 102423 (Print_paddr (Var (Global 11)));
  Let b2 = M[007930];
  Let b3 = M[007931];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 102425 (Print " chamber. It's supposed to be a terribly dangerous area of the ship. Are you sure you want to go in there?");
  GamePrint " chamber. It's supposed to be a terribly dangerous area of the ship. Are you sure you want to go in there?";
  TraceOperation 102488 New_line;
  GamePrint "\n";
  TraceOperation 102489 Rfalse;
  PopFrame return_address_4;
  JumpReturn: return_address_4, result: 0
LocOp 102490:
  TraceOperation 102490 (Je [Var (Global 212),Con 2] (Branch F (Dloc 102525)));
  Let b1 = M[008332];
  Let b2 = M[008333];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 102494 (Store (Con 229) (Con 1));
    SetByte 008334 0;
    SetByte 008335 1;
    TraceOperation 102497 (Call (Floc 022320) [Con -14128,Con 2] Sp);
    PushFrame 102497;
    SetLocal 1 -14128;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 102525
  }
LocReturn 102497:
  PushStack call_result;
  TraceOperation 102505 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102510 (Print "Absolutely sure?");
  GamePrint "Absolutely sure?";
  TraceOperation 102523 New_line;
  GamePrint "\n";
  TraceOperation 102524 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 102525:
  TraceOperation 102525 (Je [Var (Global 212),Con 3] (Branch F (Dloc 102719)));
  Let b1 = M[008332];
  Let b2 = M[008333];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 102530 (Call (Floc 022340) [Con -14128] Sp);
    PushFrame 102530;
    SetLocal 1 -14128;
    JumpCall: 022340, #actuals: 1
  } else {
    Jump: 102719
  }
LocReturn 102530:
  PushStack call_result;
  TraceOperation 102537 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 102542 (Store (Con 229) (Con 100));
  SetByte 008334 0;
  SetByte 008335 100;
  TraceOperation 102545 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame 102545;
  SetLocal 1 -14349;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 102545:
  PushStack call_result;
  TraceOperation 102553 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102558 (Print "I can tell you don't want to really. You stride away with a spring in your step, wisely leaving the Drive Chamber safely behind you. Telegrams arrive from well-wishers in all corners of the Galaxy congratulating you on your prudence and wisdom, cheering you up immensely.");
  GamePrint "I can tell you don't want to really. You stride away with a spring in your step, wisely leaving the Drive Chamber safely behind you. Telegrams arrive from well-wishers in all corners of the Galaxy congratulating you on your prudence and wisdom, cheering you up immensely.";
  TraceOperation 102717 New_line;
  GamePrint "\n";
  TraceOperation 102718 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 102719:
  TraceOperation 102719 (Je [Var (Global 212),Con 4] (Branch F (Dloc 102794)));
  Let b1 = M[008332];
  Let b2 = M[008333];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 102724 (Call (Floc 022320) [Con -14128,Con 2] Sp);
    PushFrame 102724;
    SetLocal 1 -14128;
    SetLocal 2 2;
    JumpCall: 022320, #actuals: 2
  } else {
    Jump: 102794
  }
LocReturn 102724:
  PushStack call_result;
  TraceOperation 102732 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102737 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame 102737;
  SetLocal 1 -14349;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 102737:
  PushStack call_result;
  TraceOperation 102745 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102750 (Store (Con 229) (Con 2));
  SetByte 008334 0;
  SetByte 008335 2;
  TraceOperation 102753 (Print "What? You're joking, of course. Can I ask you to reconsider?");
  GamePrint "What? You're joking, of course. Can I ask you to reconsider?";
  TraceOperation 102792 New_line;
  GamePrint "\n";
  TraceOperation 102793 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
LocOp 102794:
  TraceOperation 102794 (Jg (Var (Global 212)) (Con 4) (Branch F Dfalse));
  Let b1 = M[008332];
  Let b2 = M[008333];
  if (GreaterThan(MakeHiLo(b1,b2),4)) {
    TraceOperation 102798 (Call (Floc 022340) [Con -14128] Sp);
    PushFrame 102798;
    SetLocal 1 -14128;
    JumpCall: 022340, #actuals: 1
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 102798:
  PushStack call_result;
  TraceOperation 102805 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 102810 (Store (Con 229) (Con 0));
  SetByte 008334 0;
  SetByte 008335 0;
  TraceOperation 102813 (Ret (Con 188));
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 188
--[645]--------------------------------------------------
LocRoutine 102816:
  MakeRoutineFrame 0;
  Jump: 102817
LocOp 102817:
  TraceOperation 102817 (Je [Var (Global 203),Con 102] (Branch F (Dloc 102825)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),102)) {
    TraceOperation 102821 (Je [Var (Global 213),Con 1] (Branch T (Dloc 102837)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),1)) {
      Jump: 102837
    } else {
      Jump: 102825
    }
  } else {
    Jump: 102825
  }
LocOp 102825:
  TraceOperation 102825 (Je [Var (Global 203),Con 181] (Branch F (Dloc 102836)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),181)) {
    TraceOperation 102829 (Je [Var (Global 213),Con 2] (Branch F (Dloc 102836)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),2)) {
      TraceOperation 102833 (Jump 102837);
      Jump: 102837
    } else {
      Jump: 102836
    }
  } else {
    Jump: 102836
  }
LocOp 102836:
  TraceOperation 102836 New_line;
  GamePrint "\n";
  Jump: 102837
LocOp 102837:
  TraceOperation 102837 (Store (Con 229) (Con 0));
  SetByte 008334 0;
  SetByte 008335 0;
  TraceOperation 102840 (Store (Con 228) (Con 0));
  SetByte 008332 0;
  SetByte 008333 0;
  TraceOperation 102843 (Print_ret "I knew you weren't serious about entering that extremely dangerous area.");
  GamePrint "I knew you weren't serious about entering that extremely dangerous area.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[646]--------------------------------------------------
LocRoutine 102888:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102891
LocOp 102891:
  TraceOperation 102891 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 102895 (Store (Con 136) (Con 123));
    SetByte 008148 0;
    SetByte 008149 123;
    TraceOperation 102898 (Insert_obj (Con 177) (Con 169));
    Let b1 = M[002348];
    if (IsZero(Widen(b1))) {
      SetByte 002348 169;
      Let b2 = M[002278];
      SetByte 002349 LoByte(Widen(b2));
      SetByte 002278 177;
      TraceOperation 102901 (Insert_obj (Con 176) (Con 169));
      Let b3 = M[002339];
      if (IsZero(Widen(b3))) {
        SetByte 002339 169;
        Let b4 = M[002278];
        SetByte 002340 LoByte(Widen(b4));
        SetByte 002278 176;
        TraceOperation 102904 (Insert_obj (Con 123) (Con 169));
        Let b5 = M[001862];
        if (IsZero(Widen(b5))) {
          SetByte 001862 169;
          Let b6 = M[002278];
          SetByte 001863 LoByte(Widen(b6));
          SetByte 002278 123;
          TraceOperation 102907 (Test_attr (Con 190) (Con 27) (Branch F (Dloc 102921)));
          Let b7 = M[002464];
          if (TestBit(b7,4)) {
            TraceOperation 102911 (Insert_obj (Con 142) (Con 219));
            Let b8 = M[002033];
            if (IsZero(Widen(b8))) {
              SetByte 002033 219;
              Let b9 = M[002728];
              SetByte 002034 LoByte(Widen(b9));
              SetByte 002728 142;
              TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
              Let b10 = M[002501];
              if (IsZero(Widen(b10))) {
                SetByte 002501 219;
                Let b11 = M[002728];
                SetByte 002502 LoByte(Widen(b11));
                SetByte 002728 194;
                TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                Let b12 = M[002510];
                if (IsZero(Widen(b12))) {
                  SetByte 002510 219;
                  Let b13 = M[002728];
                  SetByte 002511 LoByte(Widen(b13));
                  SetByte 002728 195;
                  TraceOperation 102920 Rfalse;
                  PopFrame return_address_14;
                  JumpReturn: return_address_14, result: 0
                } else {
                  Let b15 = M[Offset(Offset(000751,Mul(Widen(b12),9)),6)];
                  if (Equal(Widen(b15),195)) {
                    Let b16 = M[002511];
                    SetByte Offset(Offset(000751,Mul(Widen(b12),9)),6) LoByte(Widen(b16));
                    SetByte 002510 219;
                    Let b17 = M[002728];
                    SetByte 002511 LoByte(Widen(b17));
                    SetByte 002728 195;
                    TraceOperation 102920 Rfalse;
                    PopFrame return_address_18;
                    JumpReturn: return_address_18, result: 0
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b19 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
                if (Equal(Widen(b19),194)) {
                  Let b20 = M[002502];
                  SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b20));
                  SetByte 002501 219;
                  Let b21 = M[002728];
                  SetByte 002502 LoByte(Widen(b21));
                  SetByte 002728 194;
                  TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                  Let b22 = M[002510];
                  if (IsZero(Widen(b22))) {
                    SetByte 002510 219;
                    Let b23 = M[002728];
                    SetByte 002511 LoByte(Widen(b23));
                    SetByte 002728 195;
                    TraceOperation 102920 Rfalse;
                    PopFrame return_address_24;
                    JumpReturn: return_address_24, result: 0
                  } else {
                    Let b25 = M[Offset(Offset(000751,Mul(Widen(b22),9)),6)];
                    if (Equal(Widen(b25),195)) {
                      Let b26 = M[002511];
                      SetByte Offset(Offset(000751,Mul(Widen(b22),9)),6) LoByte(Widen(b26));
                      SetByte 002510 219;
                      Let b27 = M[002728];
                      SetByte 002511 LoByte(Widen(b27));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_28;
                      JumpReturn: return_address_28, result: 0
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b29 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
              if (Equal(Widen(b29),142)) {
                Let b30 = M[002034];
                SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b30));
                SetByte 002033 219;
                Let b31 = M[002728];
                SetByte 002034 LoByte(Widen(b31));
                SetByte 002728 142;
                TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                Let b32 = M[002501];
                if (IsZero(Widen(b32))) {
                  SetByte 002501 219;
                  Let b33 = M[002728];
                  SetByte 002502 LoByte(Widen(b33));
                  SetByte 002728 194;
                  TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                  Let b34 = M[002510];
                  if (IsZero(Widen(b34))) {
                    SetByte 002510 219;
                    Let b35 = M[002728];
                    SetByte 002511 LoByte(Widen(b35));
                    SetByte 002728 195;
                    TraceOperation 102920 Rfalse;
                    PopFrame return_address_36;
                    JumpReturn: return_address_36, result: 0
                  } else {
                    Let b37 = M[Offset(Offset(000751,Mul(Widen(b34),9)),6)];
                    if (Equal(Widen(b37),195)) {
                      Let b38 = M[002511];
                      SetByte Offset(Offset(000751,Mul(Widen(b34),9)),6) LoByte(Widen(b38));
                      SetByte 002510 219;
                      Let b39 = M[002728];
                      SetByte 002511 LoByte(Widen(b39));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_40;
                      JumpReturn: return_address_40, result: 0
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b41 = M[Offset(Offset(000751,Mul(Widen(b32),9)),6)];
                  if (Equal(Widen(b41),194)) {
                    Let b42 = M[002502];
                    SetByte Offset(Offset(000751,Mul(Widen(b32),9)),6) LoByte(Widen(b42));
                    SetByte 002501 219;
                    Let b43 = M[002728];
                    SetByte 002502 LoByte(Widen(b43));
                    SetByte 002728 194;
                    TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                    Let b44 = M[002510];
                    if (IsZero(Widen(b44))) {
                      SetByte 002510 219;
                      Let b45 = M[002728];
                      SetByte 002511 LoByte(Widen(b45));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_46;
                      JumpReturn: return_address_46, result: 0
                    } else {
                      Let b47 = M[Offset(Offset(000751,Mul(Widen(b44),9)),6)];
                      if (Equal(Widen(b47),195)) {
                        Let b48 = M[002511];
                        SetByte Offset(Offset(000751,Mul(Widen(b44),9)),6) LoByte(Widen(b48));
                        SetByte 002510 219;
                        Let b49 = M[002728];
                        SetByte 002511 LoByte(Widen(b49));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_50;
                        JumpReturn: return_address_50, result: 0
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Jump: 102921
          }
        } else {
          Let b51 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
          if (Equal(Widen(b51),123)) {
            Let b52 = M[001863];
            SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b52));
            SetByte 001862 169;
            Let b53 = M[002278];
            SetByte 001863 LoByte(Widen(b53));
            SetByte 002278 123;
            TraceOperation 102907 (Test_attr (Con 190) (Con 27) (Branch F (Dloc 102921)));
            Let b54 = M[002464];
            if (TestBit(b54,4)) {
              TraceOperation 102911 (Insert_obj (Con 142) (Con 219));
              Let b55 = M[002033];
              if (IsZero(Widen(b55))) {
                SetByte 002033 219;
                Let b56 = M[002728];
                SetByte 002034 LoByte(Widen(b56));
                SetByte 002728 142;
                TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                Let b57 = M[002501];
                if (IsZero(Widen(b57))) {
                  SetByte 002501 219;
                  Let b58 = M[002728];
                  SetByte 002502 LoByte(Widen(b58));
                  SetByte 002728 194;
                  TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                  Let b59 = M[002510];
                  if (IsZero(Widen(b59))) {
                    SetByte 002510 219;
                    Let b60 = M[002728];
                    SetByte 002511 LoByte(Widen(b60));
                    SetByte 002728 195;
                    TraceOperation 102920 Rfalse;
                    PopFrame return_address_61;
                    JumpReturn: return_address_61, result: 0
                  } else {
                    Let b62 = M[Offset(Offset(000751,Mul(Widen(b59),9)),6)];
                    if (Equal(Widen(b62),195)) {
                      Let b63 = M[002511];
                      SetByte Offset(Offset(000751,Mul(Widen(b59),9)),6) LoByte(Widen(b63));
                      SetByte 002510 219;
                      Let b64 = M[002728];
                      SetByte 002511 LoByte(Widen(b64));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_65;
                      JumpReturn: return_address_65, result: 0
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b66 = M[Offset(Offset(000751,Mul(Widen(b57),9)),6)];
                  if (Equal(Widen(b66),194)) {
                    Let b67 = M[002502];
                    SetByte Offset(Offset(000751,Mul(Widen(b57),9)),6) LoByte(Widen(b67));
                    SetByte 002501 219;
                    Let b68 = M[002728];
                    SetByte 002502 LoByte(Widen(b68));
                    SetByte 002728 194;
                    TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                    Let b69 = M[002510];
                    if (IsZero(Widen(b69))) {
                      SetByte 002510 219;
                      Let b70 = M[002728];
                      SetByte 002511 LoByte(Widen(b70));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_71;
                      JumpReturn: return_address_71, result: 0
                    } else {
                      Let b72 = M[Offset(Offset(000751,Mul(Widen(b69),9)),6)];
                      if (Equal(Widen(b72),195)) {
                        Let b73 = M[002511];
                        SetByte Offset(Offset(000751,Mul(Widen(b69),9)),6) LoByte(Widen(b73));
                        SetByte 002510 219;
                        Let b74 = M[002728];
                        SetByte 002511 LoByte(Widen(b74));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_75;
                        JumpReturn: return_address_75, result: 0
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b76 = M[Offset(Offset(000751,Mul(Widen(b55),9)),6)];
                if (Equal(Widen(b76),142)) {
                  Let b77 = M[002034];
                  SetByte Offset(Offset(000751,Mul(Widen(b55),9)),6) LoByte(Widen(b77));
                  SetByte 002033 219;
                  Let b78 = M[002728];
                  SetByte 002034 LoByte(Widen(b78));
                  SetByte 002728 142;
                  TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                  Let b79 = M[002501];
                  if (IsZero(Widen(b79))) {
                    SetByte 002501 219;
                    Let b80 = M[002728];
                    SetByte 002502 LoByte(Widen(b80));
                    SetByte 002728 194;
                    TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                    Let b81 = M[002510];
                    if (IsZero(Widen(b81))) {
                      SetByte 002510 219;
                      Let b82 = M[002728];
                      SetByte 002511 LoByte(Widen(b82));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_83;
                      JumpReturn: return_address_83, result: 0
                    } else {
                      Let b84 = M[Offset(Offset(000751,Mul(Widen(b81),9)),6)];
                      if (Equal(Widen(b84),195)) {
                        Let b85 = M[002511];
                        SetByte Offset(Offset(000751,Mul(Widen(b81),9)),6) LoByte(Widen(b85));
                        SetByte 002510 219;
                        Let b86 = M[002728];
                        SetByte 002511 LoByte(Widen(b86));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_87;
                        JumpReturn: return_address_87, result: 0
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b88 = M[Offset(Offset(000751,Mul(Widen(b79),9)),6)];
                    if (Equal(Widen(b88),194)) {
                      Let b89 = M[002502];
                      SetByte Offset(Offset(000751,Mul(Widen(b79),9)),6) LoByte(Widen(b89));
                      SetByte 002501 219;
                      Let b90 = M[002728];
                      SetByte 002502 LoByte(Widen(b90));
                      SetByte 002728 194;
                      TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                      Let b91 = M[002510];
                      if (IsZero(Widen(b91))) {
                        SetByte 002510 219;
                        Let b92 = M[002728];
                        SetByte 002511 LoByte(Widen(b92));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_93;
                        JumpReturn: return_address_93, result: 0
                      } else {
                        Let b94 = M[Offset(Offset(000751,Mul(Widen(b91),9)),6)];
                        if (Equal(Widen(b94),195)) {
                          Let b95 = M[002511];
                          SetByte Offset(Offset(000751,Mul(Widen(b91),9)),6) LoByte(Widen(b95));
                          SetByte 002510 219;
                          Let b96 = M[002728];
                          SetByte 002511 LoByte(Widen(b96));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_97;
                          JumpReturn: return_address_97, result: 0
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Jump: 102921
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b98 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
        if (Equal(Widen(b98),176)) {
          Let b99 = M[002340];
          SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b99));
          SetByte 002339 169;
          Let b100 = M[002278];
          SetByte 002340 LoByte(Widen(b100));
          SetByte 002278 176;
          TraceOperation 102904 (Insert_obj (Con 123) (Con 169));
          Let b101 = M[001862];
          if (IsZero(Widen(b101))) {
            SetByte 001862 169;
            Let b102 = M[002278];
            SetByte 001863 LoByte(Widen(b102));
            SetByte 002278 123;
            TraceOperation 102907 (Test_attr (Con 190) (Con 27) (Branch F (Dloc 102921)));
            Let b103 = M[002464];
            if (TestBit(b103,4)) {
              TraceOperation 102911 (Insert_obj (Con 142) (Con 219));
              Let b104 = M[002033];
              if (IsZero(Widen(b104))) {
                SetByte 002033 219;
                Let b105 = M[002728];
                SetByte 002034 LoByte(Widen(b105));
                SetByte 002728 142;
                TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                Let b106 = M[002501];
                if (IsZero(Widen(b106))) {
                  SetByte 002501 219;
                  Let b107 = M[002728];
                  SetByte 002502 LoByte(Widen(b107));
                  SetByte 002728 194;
                  TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                  Let b108 = M[002510];
                  if (IsZero(Widen(b108))) {
                    SetByte 002510 219;
                    Let b109 = M[002728];
                    SetByte 002511 LoByte(Widen(b109));
                    SetByte 002728 195;
                    TraceOperation 102920 Rfalse;
                    PopFrame return_address_110;
                    JumpReturn: return_address_110, result: 0
                  } else {
                    Let b111 = M[Offset(Offset(000751,Mul(Widen(b108),9)),6)];
                    if (Equal(Widen(b111),195)) {
                      Let b112 = M[002511];
                      SetByte Offset(Offset(000751,Mul(Widen(b108),9)),6) LoByte(Widen(b112));
                      SetByte 002510 219;
                      Let b113 = M[002728];
                      SetByte 002511 LoByte(Widen(b113));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_114;
                      JumpReturn: return_address_114, result: 0
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b115 = M[Offset(Offset(000751,Mul(Widen(b106),9)),6)];
                  if (Equal(Widen(b115),194)) {
                    Let b116 = M[002502];
                    SetByte Offset(Offset(000751,Mul(Widen(b106),9)),6) LoByte(Widen(b116));
                    SetByte 002501 219;
                    Let b117 = M[002728];
                    SetByte 002502 LoByte(Widen(b117));
                    SetByte 002728 194;
                    TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                    Let b118 = M[002510];
                    if (IsZero(Widen(b118))) {
                      SetByte 002510 219;
                      Let b119 = M[002728];
                      SetByte 002511 LoByte(Widen(b119));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_120;
                      JumpReturn: return_address_120, result: 0
                    } else {
                      Let b121 = M[Offset(Offset(000751,Mul(Widen(b118),9)),6)];
                      if (Equal(Widen(b121),195)) {
                        Let b122 = M[002511];
                        SetByte Offset(Offset(000751,Mul(Widen(b118),9)),6) LoByte(Widen(b122));
                        SetByte 002510 219;
                        Let b123 = M[002728];
                        SetByte 002511 LoByte(Widen(b123));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_124;
                        JumpReturn: return_address_124, result: 0
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b125 = M[Offset(Offset(000751,Mul(Widen(b104),9)),6)];
                if (Equal(Widen(b125),142)) {
                  Let b126 = M[002034];
                  SetByte Offset(Offset(000751,Mul(Widen(b104),9)),6) LoByte(Widen(b126));
                  SetByte 002033 219;
                  Let b127 = M[002728];
                  SetByte 002034 LoByte(Widen(b127));
                  SetByte 002728 142;
                  TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                  Let b128 = M[002501];
                  if (IsZero(Widen(b128))) {
                    SetByte 002501 219;
                    Let b129 = M[002728];
                    SetByte 002502 LoByte(Widen(b129));
                    SetByte 002728 194;
                    TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                    Let b130 = M[002510];
                    if (IsZero(Widen(b130))) {
                      SetByte 002510 219;
                      Let b131 = M[002728];
                      SetByte 002511 LoByte(Widen(b131));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_132;
                      JumpReturn: return_address_132, result: 0
                    } else {
                      Let b133 = M[Offset(Offset(000751,Mul(Widen(b130),9)),6)];
                      if (Equal(Widen(b133),195)) {
                        Let b134 = M[002511];
                        SetByte Offset(Offset(000751,Mul(Widen(b130),9)),6) LoByte(Widen(b134));
                        SetByte 002510 219;
                        Let b135 = M[002728];
                        SetByte 002511 LoByte(Widen(b135));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_136;
                        JumpReturn: return_address_136, result: 0
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b137 = M[Offset(Offset(000751,Mul(Widen(b128),9)),6)];
                    if (Equal(Widen(b137),194)) {
                      Let b138 = M[002502];
                      SetByte Offset(Offset(000751,Mul(Widen(b128),9)),6) LoByte(Widen(b138));
                      SetByte 002501 219;
                      Let b139 = M[002728];
                      SetByte 002502 LoByte(Widen(b139));
                      SetByte 002728 194;
                      TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                      Let b140 = M[002510];
                      if (IsZero(Widen(b140))) {
                        SetByte 002510 219;
                        Let b141 = M[002728];
                        SetByte 002511 LoByte(Widen(b141));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_142;
                        JumpReturn: return_address_142, result: 0
                      } else {
                        Let b143 = M[Offset(Offset(000751,Mul(Widen(b140),9)),6)];
                        if (Equal(Widen(b143),195)) {
                          Let b144 = M[002511];
                          SetByte Offset(Offset(000751,Mul(Widen(b140),9)),6) LoByte(Widen(b144));
                          SetByte 002510 219;
                          Let b145 = M[002728];
                          SetByte 002511 LoByte(Widen(b145));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_146;
                          JumpReturn: return_address_146, result: 0
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Jump: 102921
            }
          } else {
            Let b147 = M[Offset(Offset(000751,Mul(Widen(b101),9)),6)];
            if (Equal(Widen(b147),123)) {
              Let b148 = M[001863];
              SetByte Offset(Offset(000751,Mul(Widen(b101),9)),6) LoByte(Widen(b148));
              SetByte 001862 169;
              Let b149 = M[002278];
              SetByte 001863 LoByte(Widen(b149));
              SetByte 002278 123;
              TraceOperation 102907 (Test_attr (Con 190) (Con 27) (Branch F (Dloc 102921)));
              Let b150 = M[002464];
              if (TestBit(b150,4)) {
                TraceOperation 102911 (Insert_obj (Con 142) (Con 219));
                Let b151 = M[002033];
                if (IsZero(Widen(b151))) {
                  SetByte 002033 219;
                  Let b152 = M[002728];
                  SetByte 002034 LoByte(Widen(b152));
                  SetByte 002728 142;
                  TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                  Let b153 = M[002501];
                  if (IsZero(Widen(b153))) {
                    SetByte 002501 219;
                    Let b154 = M[002728];
                    SetByte 002502 LoByte(Widen(b154));
                    SetByte 002728 194;
                    TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                    Let b155 = M[002510];
                    if (IsZero(Widen(b155))) {
                      SetByte 002510 219;
                      Let b156 = M[002728];
                      SetByte 002511 LoByte(Widen(b156));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_157;
                      JumpReturn: return_address_157, result: 0
                    } else {
                      Let b158 = M[Offset(Offset(000751,Mul(Widen(b155),9)),6)];
                      if (Equal(Widen(b158),195)) {
                        Let b159 = M[002511];
                        SetByte Offset(Offset(000751,Mul(Widen(b155),9)),6) LoByte(Widen(b159));
                        SetByte 002510 219;
                        Let b160 = M[002728];
                        SetByte 002511 LoByte(Widen(b160));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_161;
                        JumpReturn: return_address_161, result: 0
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b162 = M[Offset(Offset(000751,Mul(Widen(b153),9)),6)];
                    if (Equal(Widen(b162),194)) {
                      Let b163 = M[002502];
                      SetByte Offset(Offset(000751,Mul(Widen(b153),9)),6) LoByte(Widen(b163));
                      SetByte 002501 219;
                      Let b164 = M[002728];
                      SetByte 002502 LoByte(Widen(b164));
                      SetByte 002728 194;
                      TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                      Let b165 = M[002510];
                      if (IsZero(Widen(b165))) {
                        SetByte 002510 219;
                        Let b166 = M[002728];
                        SetByte 002511 LoByte(Widen(b166));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_167;
                        JumpReturn: return_address_167, result: 0
                      } else {
                        Let b168 = M[Offset(Offset(000751,Mul(Widen(b165),9)),6)];
                        if (Equal(Widen(b168),195)) {
                          Let b169 = M[002511];
                          SetByte Offset(Offset(000751,Mul(Widen(b165),9)),6) LoByte(Widen(b169));
                          SetByte 002510 219;
                          Let b170 = M[002728];
                          SetByte 002511 LoByte(Widen(b170));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_171;
                          JumpReturn: return_address_171, result: 0
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b172 = M[Offset(Offset(000751,Mul(Widen(b151),9)),6)];
                  if (Equal(Widen(b172),142)) {
                    Let b173 = M[002034];
                    SetByte Offset(Offset(000751,Mul(Widen(b151),9)),6) LoByte(Widen(b173));
                    SetByte 002033 219;
                    Let b174 = M[002728];
                    SetByte 002034 LoByte(Widen(b174));
                    SetByte 002728 142;
                    TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                    Let b175 = M[002501];
                    if (IsZero(Widen(b175))) {
                      SetByte 002501 219;
                      Let b176 = M[002728];
                      SetByte 002502 LoByte(Widen(b176));
                      SetByte 002728 194;
                      TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                      Let b177 = M[002510];
                      if (IsZero(Widen(b177))) {
                        SetByte 002510 219;
                        Let b178 = M[002728];
                        SetByte 002511 LoByte(Widen(b178));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_179;
                        JumpReturn: return_address_179, result: 0
                      } else {
                        Let b180 = M[Offset(Offset(000751,Mul(Widen(b177),9)),6)];
                        if (Equal(Widen(b180),195)) {
                          Let b181 = M[002511];
                          SetByte Offset(Offset(000751,Mul(Widen(b177),9)),6) LoByte(Widen(b181));
                          SetByte 002510 219;
                          Let b182 = M[002728];
                          SetByte 002511 LoByte(Widen(b182));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_183;
                          JumpReturn: return_address_183, result: 0
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b184 = M[Offset(Offset(000751,Mul(Widen(b175),9)),6)];
                      if (Equal(Widen(b184),194)) {
                        Let b185 = M[002502];
                        SetByte Offset(Offset(000751,Mul(Widen(b175),9)),6) LoByte(Widen(b185));
                        SetByte 002501 219;
                        Let b186 = M[002728];
                        SetByte 002502 LoByte(Widen(b186));
                        SetByte 002728 194;
                        TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                        Let b187 = M[002510];
                        if (IsZero(Widen(b187))) {
                          SetByte 002510 219;
                          Let b188 = M[002728];
                          SetByte 002511 LoByte(Widen(b188));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_189;
                          JumpReturn: return_address_189, result: 0
                        } else {
                          Let b190 = M[Offset(Offset(000751,Mul(Widen(b187),9)),6)];
                          if (Equal(Widen(b190),195)) {
                            Let b191 = M[002511];
                            SetByte Offset(Offset(000751,Mul(Widen(b187),9)),6) LoByte(Widen(b191));
                            SetByte 002510 219;
                            Let b192 = M[002728];
                            SetByte 002511 LoByte(Widen(b192));
                            SetByte 002728 195;
                            TraceOperation 102920 Rfalse;
                            PopFrame return_address_193;
                            JumpReturn: return_address_193, result: 0
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Jump: 102921
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Let b194 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
      if (Equal(Widen(b194),177)) {
        Let b195 = M[002349];
        SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b195));
        SetByte 002348 169;
        Let b196 = M[002278];
        SetByte 002349 LoByte(Widen(b196));
        SetByte 002278 177;
        TraceOperation 102901 (Insert_obj (Con 176) (Con 169));
        Let b197 = M[002339];
        if (IsZero(Widen(b197))) {
          SetByte 002339 169;
          Let b198 = M[002278];
          SetByte 002340 LoByte(Widen(b198));
          SetByte 002278 176;
          TraceOperation 102904 (Insert_obj (Con 123) (Con 169));
          Let b199 = M[001862];
          if (IsZero(Widen(b199))) {
            SetByte 001862 169;
            Let b200 = M[002278];
            SetByte 001863 LoByte(Widen(b200));
            SetByte 002278 123;
            TraceOperation 102907 (Test_attr (Con 190) (Con 27) (Branch F (Dloc 102921)));
            Let b201 = M[002464];
            if (TestBit(b201,4)) {
              TraceOperation 102911 (Insert_obj (Con 142) (Con 219));
              Let b202 = M[002033];
              if (IsZero(Widen(b202))) {
                SetByte 002033 219;
                Let b203 = M[002728];
                SetByte 002034 LoByte(Widen(b203));
                SetByte 002728 142;
                TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                Let b204 = M[002501];
                if (IsZero(Widen(b204))) {
                  SetByte 002501 219;
                  Let b205 = M[002728];
                  SetByte 002502 LoByte(Widen(b205));
                  SetByte 002728 194;
                  TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                  Let b206 = M[002510];
                  if (IsZero(Widen(b206))) {
                    SetByte 002510 219;
                    Let b207 = M[002728];
                    SetByte 002511 LoByte(Widen(b207));
                    SetByte 002728 195;
                    TraceOperation 102920 Rfalse;
                    PopFrame return_address_208;
                    JumpReturn: return_address_208, result: 0
                  } else {
                    Let b209 = M[Offset(Offset(000751,Mul(Widen(b206),9)),6)];
                    if (Equal(Widen(b209),195)) {
                      Let b210 = M[002511];
                      SetByte Offset(Offset(000751,Mul(Widen(b206),9)),6) LoByte(Widen(b210));
                      SetByte 002510 219;
                      Let b211 = M[002728];
                      SetByte 002511 LoByte(Widen(b211));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_212;
                      JumpReturn: return_address_212, result: 0
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b213 = M[Offset(Offset(000751,Mul(Widen(b204),9)),6)];
                  if (Equal(Widen(b213),194)) {
                    Let b214 = M[002502];
                    SetByte Offset(Offset(000751,Mul(Widen(b204),9)),6) LoByte(Widen(b214));
                    SetByte 002501 219;
                    Let b215 = M[002728];
                    SetByte 002502 LoByte(Widen(b215));
                    SetByte 002728 194;
                    TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                    Let b216 = M[002510];
                    if (IsZero(Widen(b216))) {
                      SetByte 002510 219;
                      Let b217 = M[002728];
                      SetByte 002511 LoByte(Widen(b217));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_218;
                      JumpReturn: return_address_218, result: 0
                    } else {
                      Let b219 = M[Offset(Offset(000751,Mul(Widen(b216),9)),6)];
                      if (Equal(Widen(b219),195)) {
                        Let b220 = M[002511];
                        SetByte Offset(Offset(000751,Mul(Widen(b216),9)),6) LoByte(Widen(b220));
                        SetByte 002510 219;
                        Let b221 = M[002728];
                        SetByte 002511 LoByte(Widen(b221));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_222;
                        JumpReturn: return_address_222, result: 0
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b223 = M[Offset(Offset(000751,Mul(Widen(b202),9)),6)];
                if (Equal(Widen(b223),142)) {
                  Let b224 = M[002034];
                  SetByte Offset(Offset(000751,Mul(Widen(b202),9)),6) LoByte(Widen(b224));
                  SetByte 002033 219;
                  Let b225 = M[002728];
                  SetByte 002034 LoByte(Widen(b225));
                  SetByte 002728 142;
                  TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                  Let b226 = M[002501];
                  if (IsZero(Widen(b226))) {
                    SetByte 002501 219;
                    Let b227 = M[002728];
                    SetByte 002502 LoByte(Widen(b227));
                    SetByte 002728 194;
                    TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                    Let b228 = M[002510];
                    if (IsZero(Widen(b228))) {
                      SetByte 002510 219;
                      Let b229 = M[002728];
                      SetByte 002511 LoByte(Widen(b229));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_230;
                      JumpReturn: return_address_230, result: 0
                    } else {
                      Let b231 = M[Offset(Offset(000751,Mul(Widen(b228),9)),6)];
                      if (Equal(Widen(b231),195)) {
                        Let b232 = M[002511];
                        SetByte Offset(Offset(000751,Mul(Widen(b228),9)),6) LoByte(Widen(b232));
                        SetByte 002510 219;
                        Let b233 = M[002728];
                        SetByte 002511 LoByte(Widen(b233));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_234;
                        JumpReturn: return_address_234, result: 0
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b235 = M[Offset(Offset(000751,Mul(Widen(b226),9)),6)];
                    if (Equal(Widen(b235),194)) {
                      Let b236 = M[002502];
                      SetByte Offset(Offset(000751,Mul(Widen(b226),9)),6) LoByte(Widen(b236));
                      SetByte 002501 219;
                      Let b237 = M[002728];
                      SetByte 002502 LoByte(Widen(b237));
                      SetByte 002728 194;
                      TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                      Let b238 = M[002510];
                      if (IsZero(Widen(b238))) {
                        SetByte 002510 219;
                        Let b239 = M[002728];
                        SetByte 002511 LoByte(Widen(b239));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_240;
                        JumpReturn: return_address_240, result: 0
                      } else {
                        Let b241 = M[Offset(Offset(000751,Mul(Widen(b238),9)),6)];
                        if (Equal(Widen(b241),195)) {
                          Let b242 = M[002511];
                          SetByte Offset(Offset(000751,Mul(Widen(b238),9)),6) LoByte(Widen(b242));
                          SetByte 002510 219;
                          Let b243 = M[002728];
                          SetByte 002511 LoByte(Widen(b243));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_244;
                          JumpReturn: return_address_244, result: 0
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Jump: 102921
            }
          } else {
            Let b245 = M[Offset(Offset(000751,Mul(Widen(b199),9)),6)];
            if (Equal(Widen(b245),123)) {
              Let b246 = M[001863];
              SetByte Offset(Offset(000751,Mul(Widen(b199),9)),6) LoByte(Widen(b246));
              SetByte 001862 169;
              Let b247 = M[002278];
              SetByte 001863 LoByte(Widen(b247));
              SetByte 002278 123;
              TraceOperation 102907 (Test_attr (Con 190) (Con 27) (Branch F (Dloc 102921)));
              Let b248 = M[002464];
              if (TestBit(b248,4)) {
                TraceOperation 102911 (Insert_obj (Con 142) (Con 219));
                Let b249 = M[002033];
                if (IsZero(Widen(b249))) {
                  SetByte 002033 219;
                  Let b250 = M[002728];
                  SetByte 002034 LoByte(Widen(b250));
                  SetByte 002728 142;
                  TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                  Let b251 = M[002501];
                  if (IsZero(Widen(b251))) {
                    SetByte 002501 219;
                    Let b252 = M[002728];
                    SetByte 002502 LoByte(Widen(b252));
                    SetByte 002728 194;
                    TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                    Let b253 = M[002510];
                    if (IsZero(Widen(b253))) {
                      SetByte 002510 219;
                      Let b254 = M[002728];
                      SetByte 002511 LoByte(Widen(b254));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_255;
                      JumpReturn: return_address_255, result: 0
                    } else {
                      Let b256 = M[Offset(Offset(000751,Mul(Widen(b253),9)),6)];
                      if (Equal(Widen(b256),195)) {
                        Let b257 = M[002511];
                        SetByte Offset(Offset(000751,Mul(Widen(b253),9)),6) LoByte(Widen(b257));
                        SetByte 002510 219;
                        Let b258 = M[002728];
                        SetByte 002511 LoByte(Widen(b258));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_259;
                        JumpReturn: return_address_259, result: 0
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b260 = M[Offset(Offset(000751,Mul(Widen(b251),9)),6)];
                    if (Equal(Widen(b260),194)) {
                      Let b261 = M[002502];
                      SetByte Offset(Offset(000751,Mul(Widen(b251),9)),6) LoByte(Widen(b261));
                      SetByte 002501 219;
                      Let b262 = M[002728];
                      SetByte 002502 LoByte(Widen(b262));
                      SetByte 002728 194;
                      TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                      Let b263 = M[002510];
                      if (IsZero(Widen(b263))) {
                        SetByte 002510 219;
                        Let b264 = M[002728];
                        SetByte 002511 LoByte(Widen(b264));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_265;
                        JumpReturn: return_address_265, result: 0
                      } else {
                        Let b266 = M[Offset(Offset(000751,Mul(Widen(b263),9)),6)];
                        if (Equal(Widen(b266),195)) {
                          Let b267 = M[002511];
                          SetByte Offset(Offset(000751,Mul(Widen(b263),9)),6) LoByte(Widen(b267));
                          SetByte 002510 219;
                          Let b268 = M[002728];
                          SetByte 002511 LoByte(Widen(b268));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_269;
                          JumpReturn: return_address_269, result: 0
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b270 = M[Offset(Offset(000751,Mul(Widen(b249),9)),6)];
                  if (Equal(Widen(b270),142)) {
                    Let b271 = M[002034];
                    SetByte Offset(Offset(000751,Mul(Widen(b249),9)),6) LoByte(Widen(b271));
                    SetByte 002033 219;
                    Let b272 = M[002728];
                    SetByte 002034 LoByte(Widen(b272));
                    SetByte 002728 142;
                    TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                    Let b273 = M[002501];
                    if (IsZero(Widen(b273))) {
                      SetByte 002501 219;
                      Let b274 = M[002728];
                      SetByte 002502 LoByte(Widen(b274));
                      SetByte 002728 194;
                      TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                      Let b275 = M[002510];
                      if (IsZero(Widen(b275))) {
                        SetByte 002510 219;
                        Let b276 = M[002728];
                        SetByte 002511 LoByte(Widen(b276));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_277;
                        JumpReturn: return_address_277, result: 0
                      } else {
                        Let b278 = M[Offset(Offset(000751,Mul(Widen(b275),9)),6)];
                        if (Equal(Widen(b278),195)) {
                          Let b279 = M[002511];
                          SetByte Offset(Offset(000751,Mul(Widen(b275),9)),6) LoByte(Widen(b279));
                          SetByte 002510 219;
                          Let b280 = M[002728];
                          SetByte 002511 LoByte(Widen(b280));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_281;
                          JumpReturn: return_address_281, result: 0
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b282 = M[Offset(Offset(000751,Mul(Widen(b273),9)),6)];
                      if (Equal(Widen(b282),194)) {
                        Let b283 = M[002502];
                        SetByte Offset(Offset(000751,Mul(Widen(b273),9)),6) LoByte(Widen(b283));
                        SetByte 002501 219;
                        Let b284 = M[002728];
                        SetByte 002502 LoByte(Widen(b284));
                        SetByte 002728 194;
                        TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                        Let b285 = M[002510];
                        if (IsZero(Widen(b285))) {
                          SetByte 002510 219;
                          Let b286 = M[002728];
                          SetByte 002511 LoByte(Widen(b286));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_287;
                          JumpReturn: return_address_287, result: 0
                        } else {
                          Let b288 = M[Offset(Offset(000751,Mul(Widen(b285),9)),6)];
                          if (Equal(Widen(b288),195)) {
                            Let b289 = M[002511];
                            SetByte Offset(Offset(000751,Mul(Widen(b285),9)),6) LoByte(Widen(b289));
                            SetByte 002510 219;
                            Let b290 = M[002728];
                            SetByte 002511 LoByte(Widen(b290));
                            SetByte 002728 195;
                            TraceOperation 102920 Rfalse;
                            PopFrame return_address_291;
                            JumpReturn: return_address_291, result: 0
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Jump: 102921
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b292 = M[Offset(Offset(000751,Mul(Widen(b197),9)),6)];
          if (Equal(Widen(b292),176)) {
            Let b293 = M[002340];
            SetByte Offset(Offset(000751,Mul(Widen(b197),9)),6) LoByte(Widen(b293));
            SetByte 002339 169;
            Let b294 = M[002278];
            SetByte 002340 LoByte(Widen(b294));
            SetByte 002278 176;
            TraceOperation 102904 (Insert_obj (Con 123) (Con 169));
            Let b295 = M[001862];
            if (IsZero(Widen(b295))) {
              SetByte 001862 169;
              Let b296 = M[002278];
              SetByte 001863 LoByte(Widen(b296));
              SetByte 002278 123;
              TraceOperation 102907 (Test_attr (Con 190) (Con 27) (Branch F (Dloc 102921)));
              Let b297 = M[002464];
              if (TestBit(b297,4)) {
                TraceOperation 102911 (Insert_obj (Con 142) (Con 219));
                Let b298 = M[002033];
                if (IsZero(Widen(b298))) {
                  SetByte 002033 219;
                  Let b299 = M[002728];
                  SetByte 002034 LoByte(Widen(b299));
                  SetByte 002728 142;
                  TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                  Let b300 = M[002501];
                  if (IsZero(Widen(b300))) {
                    SetByte 002501 219;
                    Let b301 = M[002728];
                    SetByte 002502 LoByte(Widen(b301));
                    SetByte 002728 194;
                    TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                    Let b302 = M[002510];
                    if (IsZero(Widen(b302))) {
                      SetByte 002510 219;
                      Let b303 = M[002728];
                      SetByte 002511 LoByte(Widen(b303));
                      SetByte 002728 195;
                      TraceOperation 102920 Rfalse;
                      PopFrame return_address_304;
                      JumpReturn: return_address_304, result: 0
                    } else {
                      Let b305 = M[Offset(Offset(000751,Mul(Widen(b302),9)),6)];
                      if (Equal(Widen(b305),195)) {
                        Let b306 = M[002511];
                        SetByte Offset(Offset(000751,Mul(Widen(b302),9)),6) LoByte(Widen(b306));
                        SetByte 002510 219;
                        Let b307 = M[002728];
                        SetByte 002511 LoByte(Widen(b307));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_308;
                        JumpReturn: return_address_308, result: 0
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b309 = M[Offset(Offset(000751,Mul(Widen(b300),9)),6)];
                    if (Equal(Widen(b309),194)) {
                      Let b310 = M[002502];
                      SetByte Offset(Offset(000751,Mul(Widen(b300),9)),6) LoByte(Widen(b310));
                      SetByte 002501 219;
                      Let b311 = M[002728];
                      SetByte 002502 LoByte(Widen(b311));
                      SetByte 002728 194;
                      TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                      Let b312 = M[002510];
                      if (IsZero(Widen(b312))) {
                        SetByte 002510 219;
                        Let b313 = M[002728];
                        SetByte 002511 LoByte(Widen(b313));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_314;
                        JumpReturn: return_address_314, result: 0
                      } else {
                        Let b315 = M[Offset(Offset(000751,Mul(Widen(b312),9)),6)];
                        if (Equal(Widen(b315),195)) {
                          Let b316 = M[002511];
                          SetByte Offset(Offset(000751,Mul(Widen(b312),9)),6) LoByte(Widen(b316));
                          SetByte 002510 219;
                          Let b317 = M[002728];
                          SetByte 002511 LoByte(Widen(b317));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_318;
                          JumpReturn: return_address_318, result: 0
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Let b319 = M[Offset(Offset(000751,Mul(Widen(b298),9)),6)];
                  if (Equal(Widen(b319),142)) {
                    Let b320 = M[002034];
                    SetByte Offset(Offset(000751,Mul(Widen(b298),9)),6) LoByte(Widen(b320));
                    SetByte 002033 219;
                    Let b321 = M[002728];
                    SetByte 002034 LoByte(Widen(b321));
                    SetByte 002728 142;
                    TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                    Let b322 = M[002501];
                    if (IsZero(Widen(b322))) {
                      SetByte 002501 219;
                      Let b323 = M[002728];
                      SetByte 002502 LoByte(Widen(b323));
                      SetByte 002728 194;
                      TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                      Let b324 = M[002510];
                      if (IsZero(Widen(b324))) {
                        SetByte 002510 219;
                        Let b325 = M[002728];
                        SetByte 002511 LoByte(Widen(b325));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_326;
                        JumpReturn: return_address_326, result: 0
                      } else {
                        Let b327 = M[Offset(Offset(000751,Mul(Widen(b324),9)),6)];
                        if (Equal(Widen(b327),195)) {
                          Let b328 = M[002511];
                          SetByte Offset(Offset(000751,Mul(Widen(b324),9)),6) LoByte(Widen(b328));
                          SetByte 002510 219;
                          Let b329 = M[002728];
                          SetByte 002511 LoByte(Widen(b329));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_330;
                          JumpReturn: return_address_330, result: 0
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b331 = M[Offset(Offset(000751,Mul(Widen(b322),9)),6)];
                      if (Equal(Widen(b331),194)) {
                        Let b332 = M[002502];
                        SetByte Offset(Offset(000751,Mul(Widen(b322),9)),6) LoByte(Widen(b332));
                        SetByte 002501 219;
                        Let b333 = M[002728];
                        SetByte 002502 LoByte(Widen(b333));
                        SetByte 002728 194;
                        TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                        Let b334 = M[002510];
                        if (IsZero(Widen(b334))) {
                          SetByte 002510 219;
                          Let b335 = M[002728];
                          SetByte 002511 LoByte(Widen(b335));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_336;
                          JumpReturn: return_address_336, result: 0
                        } else {
                          Let b337 = M[Offset(Offset(000751,Mul(Widen(b334),9)),6)];
                          if (Equal(Widen(b337),195)) {
                            Let b338 = M[002511];
                            SetByte Offset(Offset(000751,Mul(Widen(b334),9)),6) LoByte(Widen(b338));
                            SetByte 002510 219;
                            Let b339 = M[002728];
                            SetByte 002511 LoByte(Widen(b339));
                            SetByte 002728 195;
                            TraceOperation 102920 Rfalse;
                            PopFrame return_address_340;
                            JumpReturn: return_address_340, result: 0
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Jump: 102921
              }
            } else {
              Let b341 = M[Offset(Offset(000751,Mul(Widen(b295),9)),6)];
              if (Equal(Widen(b341),123)) {
                Let b342 = M[001863];
                SetByte Offset(Offset(000751,Mul(Widen(b295),9)),6) LoByte(Widen(b342));
                SetByte 001862 169;
                Let b343 = M[002278];
                SetByte 001863 LoByte(Widen(b343));
                SetByte 002278 123;
                TraceOperation 102907 (Test_attr (Con 190) (Con 27) (Branch F (Dloc 102921)));
                Let b344 = M[002464];
                if (TestBit(b344,4)) {
                  TraceOperation 102911 (Insert_obj (Con 142) (Con 219));
                  Let b345 = M[002033];
                  if (IsZero(Widen(b345))) {
                    SetByte 002033 219;
                    Let b346 = M[002728];
                    SetByte 002034 LoByte(Widen(b346));
                    SetByte 002728 142;
                    TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                    Let b347 = M[002501];
                    if (IsZero(Widen(b347))) {
                      SetByte 002501 219;
                      Let b348 = M[002728];
                      SetByte 002502 LoByte(Widen(b348));
                      SetByte 002728 194;
                      TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                      Let b349 = M[002510];
                      if (IsZero(Widen(b349))) {
                        SetByte 002510 219;
                        Let b350 = M[002728];
                        SetByte 002511 LoByte(Widen(b350));
                        SetByte 002728 195;
                        TraceOperation 102920 Rfalse;
                        PopFrame return_address_351;
                        JumpReturn: return_address_351, result: 0
                      } else {
                        Let b352 = M[Offset(Offset(000751,Mul(Widen(b349),9)),6)];
                        if (Equal(Widen(b352),195)) {
                          Let b353 = M[002511];
                          SetByte Offset(Offset(000751,Mul(Widen(b349),9)),6) LoByte(Widen(b353));
                          SetByte 002510 219;
                          Let b354 = M[002728];
                          SetByte 002511 LoByte(Widen(b354));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_355;
                          JumpReturn: return_address_355, result: 0
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Let b356 = M[Offset(Offset(000751,Mul(Widen(b347),9)),6)];
                      if (Equal(Widen(b356),194)) {
                        Let b357 = M[002502];
                        SetByte Offset(Offset(000751,Mul(Widen(b347),9)),6) LoByte(Widen(b357));
                        SetByte 002501 219;
                        Let b358 = M[002728];
                        SetByte 002502 LoByte(Widen(b358));
                        SetByte 002728 194;
                        TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                        Let b359 = M[002510];
                        if (IsZero(Widen(b359))) {
                          SetByte 002510 219;
                          Let b360 = M[002728];
                          SetByte 002511 LoByte(Widen(b360));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_361;
                          JumpReturn: return_address_361, result: 0
                        } else {
                          Let b362 = M[Offset(Offset(000751,Mul(Widen(b359),9)),6)];
                          if (Equal(Widen(b362),195)) {
                            Let b363 = M[002511];
                            SetByte Offset(Offset(000751,Mul(Widen(b359),9)),6) LoByte(Widen(b363));
                            SetByte 002510 219;
                            Let b364 = M[002728];
                            SetByte 002511 LoByte(Widen(b364));
                            SetByte 002728 195;
                            TraceOperation 102920 Rfalse;
                            PopFrame return_address_365;
                            JumpReturn: return_address_365, result: 0
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Error: unlink/loop
                      }
                    }
                  } else {
                    Let b366 = M[Offset(Offset(000751,Mul(Widen(b345),9)),6)];
                    if (Equal(Widen(b366),142)) {
                      Let b367 = M[002034];
                      SetByte Offset(Offset(000751,Mul(Widen(b345),9)),6) LoByte(Widen(b367));
                      SetByte 002033 219;
                      Let b368 = M[002728];
                      SetByte 002034 LoByte(Widen(b368));
                      SetByte 002728 142;
                      TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
                      Let b369 = M[002501];
                      if (IsZero(Widen(b369))) {
                        SetByte 002501 219;
                        Let b370 = M[002728];
                        SetByte 002502 LoByte(Widen(b370));
                        SetByte 002728 194;
                        TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                        Let b371 = M[002510];
                        if (IsZero(Widen(b371))) {
                          SetByte 002510 219;
                          Let b372 = M[002728];
                          SetByte 002511 LoByte(Widen(b372));
                          SetByte 002728 195;
                          TraceOperation 102920 Rfalse;
                          PopFrame return_address_373;
                          JumpReturn: return_address_373, result: 0
                        } else {
                          Let b374 = M[Offset(Offset(000751,Mul(Widen(b371),9)),6)];
                          if (Equal(Widen(b374),195)) {
                            Let b375 = M[002511];
                            SetByte Offset(Offset(000751,Mul(Widen(b371),9)),6) LoByte(Widen(b375));
                            SetByte 002510 219;
                            Let b376 = M[002728];
                            SetByte 002511 LoByte(Widen(b376));
                            SetByte 002728 195;
                            TraceOperation 102920 Rfalse;
                            PopFrame return_address_377;
                            JumpReturn: return_address_377, result: 0
                          } else {
                            Error: unlink/loop
                          }
                        }
                      } else {
                        Let b378 = M[Offset(Offset(000751,Mul(Widen(b369),9)),6)];
                        if (Equal(Widen(b378),194)) {
                          Let b379 = M[002502];
                          SetByte Offset(Offset(000751,Mul(Widen(b369),9)),6) LoByte(Widen(b379));
                          SetByte 002501 219;
                          Let b380 = M[002728];
                          SetByte 002502 LoByte(Widen(b380));
                          SetByte 002728 194;
                          TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
                          Let b381 = M[002510];
                          if (IsZero(Widen(b381))) {
                            SetByte 002510 219;
                            Let b382 = M[002728];
                            SetByte 002511 LoByte(Widen(b382));
                            SetByte 002728 195;
                            TraceOperation 102920 Rfalse;
                            PopFrame return_address_383;
                            JumpReturn: return_address_383, result: 0
                          } else {
                            Let b384 = M[Offset(Offset(000751,Mul(Widen(b381),9)),6)];
                            if (Equal(Widen(b384),195)) {
                              Let b385 = M[002511];
                              SetByte Offset(Offset(000751,Mul(Widen(b381),9)),6) LoByte(Widen(b385));
                              SetByte 002510 219;
                              Let b386 = M[002728];
                              SetByte 002511 LoByte(Widen(b386));
                              SetByte 002728 195;
                              TraceOperation 102920 Rfalse;
                              PopFrame return_address_387;
                              JumpReturn: return_address_387, result: 0
                            } else {
                              Error: unlink/loop
                            }
                          }
                        } else {
                          Error: unlink/loop
                        }
                      }
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Jump: 102921
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Error: unlink/loop
      }
    }
  } else {
    PopFrame return_address_388;
    JumpReturn: return_address_388, result: 0
  }
LocOp 102921:
  TraceOperation 102921 (Set_attr (Con 190) (Con 27));
  Let b1 = M[002464];
  SetByte 002464 SetBit(b1,4);
  TraceOperation 102924 (Call (Floc 022320) [Con -32630,Con 1] Sp);
  PushFrame 102924;
  SetLocal 1 -32630;
  SetLocal 2 1;
  JumpCall: 022320, #actuals: 2
LocReturn 102924:
  PushStack call_result;
  TraceOperation 102932 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102937 Rfalse;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 0
--[647]--------------------------------------------------
LocRoutine 102938:
  MakeRoutineFrame 0;
  Jump: 102939
LocOp 102939:
  TraceOperation 102939 (Je [Var (Global 203),Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),120)) {
    TraceOperation 102943 (Print "\"Equipped with a sensational breakthrough in Improbability Physics, ");
    GamePrint "\"Equipped with a sensational breakthrough in Improbability Physics, ";
    TraceOperation 102978 (Print_obj (Con 220));
    Let b3 = M[002738];
    Let b4 = M[002739];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 102980 (Print " will make you the envy of every major government. When the ship's");
      GamePrint " will make you the envy of every major government. When the ship's";
      TraceOperation 103019 (Print_paddr (Var (Global 11)));
      Let b6 = M[007930];
      Let b7 = M[007931];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 103021 (Print " is activated, ");
      GamePrint " is activated, ";
      TraceOperation 103032 (Print_obj (Con 220));
      Let b8 = M[002738];
      Let b9 = M[002739];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      if (IsZeroByte(b10)) {
        GamePrint "";
        TraceOperation 103034 (Print " passes through every point in the universe simultaneously, making travel to any single location a breeze!\"\n\nThe ");
        GamePrint " passes through every point in the universe simultaneously, making travel to any single location a breeze!\"\n\nThe ";
        TraceOperation 103103 (Print_obj (Con 189));
        Let b11 = M[002459];
        Let b12 = M[002460];
        Let b13 = M[Address(MakeHiLo(b11,b12))];
        if (IsZeroByte(b13)) {
          GamePrint "";
          TraceOperation 103105 (Print " goes on to describe the ship's complement of ");
          GamePrint " goes on to describe the ship's complement of ";
          TraceOperation 103134 (Print_paddr (Var (Global 43)));
          Let b14 = M[007994];
          Let b15 = M[007995];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b14,b15)));
          TraceOperation 103136 (Print "-designed robots and computers, all equipped with GPP (");
          GamePrint "-designed robots and computers, all equipped with GPP (";
          TraceOperation 103173 (Print_paddr (Var (Global 29)));
          Let b16 = M[007966];
          Let b17 = M[007967];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b16,b17)));
          TraceOperation 103175 (Print_ret ").");
          GamePrint ").\n";
          PopFrame return_address_18;
          JumpReturn: return_address_18, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
          TraceOperation 103105 (Print " goes on to describe the ship's complement of ");
          GamePrint " goes on to describe the ship's complement of ";
          TraceOperation 103134 (Print_paddr (Var (Global 43)));
          Let b19 = M[007994];
          Let b20 = M[007995];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b19,b20)));
          TraceOperation 103136 (Print "-designed robots and computers, all equipped with GPP (");
          GamePrint "-designed robots and computers, all equipped with GPP (";
          TraceOperation 103173 (Print_paddr (Var (Global 29)));
          Let b21 = M[007966];
          Let b22 = M[007967];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b21,b22)));
          TraceOperation 103175 (Print_ret ").");
          GamePrint ").\n";
          PopFrame return_address_23;
          JumpReturn: return_address_23, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
        TraceOperation 103034 (Print " passes through every point in the universe simultaneously, making travel to any single location a breeze!\"\n\nThe ");
        GamePrint " passes through every point in the universe simultaneously, making travel to any single location a breeze!\"\n\nThe ";
        TraceOperation 103103 (Print_obj (Con 189));
        Let b24 = M[002459];
        Let b25 = M[002460];
        Let b26 = M[Address(MakeHiLo(b24,b25))];
        if (IsZeroByte(b26)) {
          GamePrint "";
          TraceOperation 103105 (Print " goes on to describe the ship's complement of ");
          GamePrint " goes on to describe the ship's complement of ";
          TraceOperation 103134 (Print_paddr (Var (Global 43)));
          Let b27 = M[007994];
          Let b28 = M[007995];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b27,b28)));
          TraceOperation 103136 (Print "-designed robots and computers, all equipped with GPP (");
          GamePrint "-designed robots and computers, all equipped with GPP (";
          TraceOperation 103173 (Print_paddr (Var (Global 29)));
          Let b29 = M[007966];
          Let b30 = M[007967];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b29,b30)));
          TraceOperation 103175 (Print_ret ").");
          GamePrint ").\n";
          PopFrame return_address_31;
          JumpReturn: return_address_31, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b24,b25)),1));
          TraceOperation 103105 (Print " goes on to describe the ship's complement of ");
          GamePrint " goes on to describe the ship's complement of ";
          TraceOperation 103134 (Print_paddr (Var (Global 43)));
          Let b32 = M[007994];
          Let b33 = M[007995];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b32,b33)));
          TraceOperation 103136 (Print "-designed robots and computers, all equipped with GPP (");
          GamePrint "-designed robots and computers, all equipped with GPP (";
          TraceOperation 103173 (Print_paddr (Var (Global 29)));
          Let b34 = M[007966];
          Let b35 = M[007967];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b34,b35)));
          TraceOperation 103175 (Print_ret ").");
          GamePrint ").\n";
          PopFrame return_address_36;
          JumpReturn: return_address_36, result: 1
        }
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 102980 (Print " will make you the envy of every major government. When the ship's");
      GamePrint " will make you the envy of every major government. When the ship's";
      TraceOperation 103019 (Print_paddr (Var (Global 11)));
      Let b37 = M[007930];
      Let b38 = M[007931];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b37,b38)));
      TraceOperation 103021 (Print " is activated, ");
      GamePrint " is activated, ";
      TraceOperation 103032 (Print_obj (Con 220));
      Let b39 = M[002738];
      Let b40 = M[002739];
      Let b41 = M[Address(MakeHiLo(b39,b40))];
      if (IsZeroByte(b41)) {
        GamePrint "";
        TraceOperation 103034 (Print " passes through every point in the universe simultaneously, making travel to any single location a breeze!\"\n\nThe ");
        GamePrint " passes through every point in the universe simultaneously, making travel to any single location a breeze!\"\n\nThe ";
        TraceOperation 103103 (Print_obj (Con 189));
        Let b42 = M[002459];
        Let b43 = M[002460];
        Let b44 = M[Address(MakeHiLo(b42,b43))];
        if (IsZeroByte(b44)) {
          GamePrint "";
          TraceOperation 103105 (Print " goes on to describe the ship's complement of ");
          GamePrint " goes on to describe the ship's complement of ";
          TraceOperation 103134 (Print_paddr (Var (Global 43)));
          Let b45 = M[007994];
          Let b46 = M[007995];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b45,b46)));
          TraceOperation 103136 (Print "-designed robots and computers, all equipped with GPP (");
          GamePrint "-designed robots and computers, all equipped with GPP (";
          TraceOperation 103173 (Print_paddr (Var (Global 29)));
          Let b47 = M[007966];
          Let b48 = M[007967];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b47,b48)));
          TraceOperation 103175 (Print_ret ").");
          GamePrint ").\n";
          PopFrame return_address_49;
          JumpReturn: return_address_49, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b42,b43)),1));
          TraceOperation 103105 (Print " goes on to describe the ship's complement of ");
          GamePrint " goes on to describe the ship's complement of ";
          TraceOperation 103134 (Print_paddr (Var (Global 43)));
          Let b50 = M[007994];
          Let b51 = M[007995];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b50,b51)));
          TraceOperation 103136 (Print "-designed robots and computers, all equipped with GPP (");
          GamePrint "-designed robots and computers, all equipped with GPP (";
          TraceOperation 103173 (Print_paddr (Var (Global 29)));
          Let b52 = M[007966];
          Let b53 = M[007967];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b52,b53)));
          TraceOperation 103175 (Print_ret ").");
          GamePrint ").\n";
          PopFrame return_address_54;
          JumpReturn: return_address_54, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b39,b40)),1));
        TraceOperation 103034 (Print " passes through every point in the universe simultaneously, making travel to any single location a breeze!\"\n\nThe ");
        GamePrint " passes through every point in the universe simultaneously, making travel to any single location a breeze!\"\n\nThe ";
        TraceOperation 103103 (Print_obj (Con 189));
        Let b55 = M[002459];
        Let b56 = M[002460];
        Let b57 = M[Address(MakeHiLo(b55,b56))];
        if (IsZeroByte(b57)) {
          GamePrint "";
          TraceOperation 103105 (Print " goes on to describe the ship's complement of ");
          GamePrint " goes on to describe the ship's complement of ";
          TraceOperation 103134 (Print_paddr (Var (Global 43)));
          Let b58 = M[007994];
          Let b59 = M[007995];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b58,b59)));
          TraceOperation 103136 (Print "-designed robots and computers, all equipped with GPP (");
          GamePrint "-designed robots and computers, all equipped with GPP (";
          TraceOperation 103173 (Print_paddr (Var (Global 29)));
          Let b60 = M[007966];
          Let b61 = M[007967];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b60,b61)));
          TraceOperation 103175 (Print_ret ").");
          GamePrint ").\n";
          PopFrame return_address_62;
          JumpReturn: return_address_62, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b55,b56)),1));
          TraceOperation 103105 (Print " goes on to describe the ship's complement of ");
          GamePrint " goes on to describe the ship's complement of ";
          TraceOperation 103134 (Print_paddr (Var (Global 43)));
          Let b63 = M[007994];
          Let b64 = M[007995];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b63,b64)));
          TraceOperation 103136 (Print "-designed robots and computers, all equipped with GPP (");
          GamePrint "-designed robots and computers, all equipped with GPP (";
          TraceOperation 103173 (Print_paddr (Var (Global 29)));
          Let b65 = M[007966];
          Let b66 = M[007967];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b65,b66)));
          TraceOperation 103175 (Print_ret ").");
          GamePrint ").\n";
          PopFrame return_address_67;
          JumpReturn: return_address_67, result: 1
        }
      }
    }
  } else {
    PopFrame return_address_68;
    JumpReturn: return_address_68, result: 0
  }
--[648]--------------------------------------------------
LocRoutine 103180:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 103183
LocOp 103183:
  TraceOperation 103183 (Je [Var (Local 1),Con 3] (Branch F (Dloc 103369)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 103188 (Inc (Con 227));
    Let b1 = M[008330];
    Let b2 = M[008331];
    SetByte 008330 HiByte(Add(MakeHiLo(b1,b2),1));
    SetByte 008331 LoByte(Add(MakeHiLo(b1,b2),1));
    TraceOperation 103190 (Je [Var (Global 211),Con 1] (Branch F (Dloc 103236)));
    Let b3 = M[008330];
    Let b4 = M[008331];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 103194 (Print "You're in the");
      GamePrint "You're in the";
      TraceOperation 103201 (Print_paddr (Var (Global 11)));
      Let b5 = M[007930];
      Let b6 = M[007931];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 103203 (Print_ret " chamber. Nothing happens; there is nothing to see.");
      GamePrint " chamber. Nothing happens; there is nothing to see.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    } else {
      Jump: 103236
    }
  } else {
    Jump: 103369
  }
LocOp 103236:
  TraceOperation 103236 (Je [Var (Global 211),Con 2] (Branch F (Dloc 103257)));
  Let b1 = M[008330];
  Let b2 = M[008331];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 103240 (Print_ret "I mean it! There's nothing to see here!");
    GamePrint "I mean it! There's nothing to see here!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    Jump: 103257
  }
LocOp 103257:
  TraceOperation 103257 (Jg (Var (Global 211)) (Con 2) (Branch F Dfalse));
  Let b1 = M[008330];
  Let b2 = M[008331];
  if (GreaterThan(MakeHiLo(b1,b2),2)) {
    TraceOperation 103261 (Je [Var (Global 211),Con 3] (Branch F (Dloc 103312)));
    Let b3 = M[008330];
    Let b4 = M[008331];
    if (Equal(MakeHiLo(b3,b4),3)) {
      TraceOperation 103265 (Insert_obj (Con 187) (Con 169));
      Let b5 = M[002438];
      if (IsZero(Widen(b5))) {
        SetByte 002438 169;
        Let b6 = M[002278];
        SetByte 002439 LoByte(Widen(b6));
        SetByte 002278 187;
        TraceOperation 103268 (Insert_obj (Con 186) (Var (Global 0)));
        Let b7 = M[007908];
        Let b8 = M[007909];
        Let b9 = M[002429];
        if (IsZero(Widen(b9))) {
          SetByte 002429 b8;
          Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
          SetByte 002430 LoByte(Widen(b10));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 186;
          TraceOperation 103271 (Insert_obj (Con 14) (Var (Global 0)));
          Let b11 = M[007908];
          Let b12 = M[007909];
          Let b13 = M[000881];
          if (IsZero(Widen(b13))) {
            SetByte 000881 b12;
            Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6)];
            SetByte 000882 LoByte(Widen(b14));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6) 14;
            TraceOperation 103274 (Insert_obj (Con 11) (Var (Global 0)));
            Let b15 = M[007908];
            Let b16 = M[007909];
            Let b17 = M[000854];
            if (IsZero(Widen(b17))) {
              SetByte 000854 b16;
              Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6)];
              SetByte 000855 LoByte(Widen(b18));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6) 11;
              TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
              Let b19 = M[007910];
              Let b20 = M[007911];
              SetByte 007910 HiByte(Add(MakeHiLo(b19,b20),25));
              SetByte 007911 LoByte(Add(MakeHiLo(b19,b20),25));
              TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
              GamePrint "Okay, okay, there are a FEW things to see here. ";
              Jump: 103312
            } else {
              Let b21 = M[Offset(Offset(000751,Mul(Widen(b17),9)),6)];
              if (Equal(Widen(b21),11)) {
                Let b22 = M[000855];
                SetByte Offset(Offset(000751,Mul(Widen(b17),9)),6) LoByte(Widen(b22));
                SetByte 000854 b16;
                Let b23 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6)];
                SetByte 000855 LoByte(Widen(b23));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6) 11;
                TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                Let b24 = M[007910];
                Let b25 = M[007911];
                SetByte 007910 HiByte(Add(MakeHiLo(b24,b25),25));
                SetByte 007911 LoByte(Add(MakeHiLo(b24,b25),25));
                TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                GamePrint "Okay, okay, there are a FEW things to see here. ";
                Jump: 103312
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b26 = M[Offset(Offset(000751,Mul(Widen(b13),9)),6)];
            if (Equal(Widen(b26),14)) {
              Let b27 = M[000882];
              SetByte Offset(Offset(000751,Mul(Widen(b13),9)),6) LoByte(Widen(b27));
              SetByte 000881 b12;
              Let b28 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6)];
              SetByte 000882 LoByte(Widen(b28));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6) 14;
              TraceOperation 103274 (Insert_obj (Con 11) (Var (Global 0)));
              Let b29 = M[007908];
              Let b30 = M[007909];
              Let b31 = M[000854];
              if (IsZero(Widen(b31))) {
                SetByte 000854 b30;
                Let b32 = M[Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),6)];
                SetByte 000855 LoByte(Widen(b32));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),6) 11;
                TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                Let b33 = M[007910];
                Let b34 = M[007911];
                SetByte 007910 HiByte(Add(MakeHiLo(b33,b34),25));
                SetByte 007911 LoByte(Add(MakeHiLo(b33,b34),25));
                TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                GamePrint "Okay, okay, there are a FEW things to see here. ";
                Jump: 103312
              } else {
                Let b35 = M[Offset(Offset(000751,Mul(Widen(b31),9)),6)];
                if (Equal(Widen(b35),11)) {
                  Let b36 = M[000855];
                  SetByte Offset(Offset(000751,Mul(Widen(b31),9)),6) LoByte(Widen(b36));
                  SetByte 000854 b30;
                  Let b37 = M[Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),6)];
                  SetByte 000855 LoByte(Widen(b37));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),6) 11;
                  TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                  Let b38 = M[007910];
                  Let b39 = M[007911];
                  SetByte 007910 HiByte(Add(MakeHiLo(b38,b39),25));
                  SetByte 007911 LoByte(Add(MakeHiLo(b38,b39),25));
                  TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                  GamePrint "Okay, okay, there are a FEW things to see here. ";
                  Jump: 103312
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b40 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
          if (Equal(Widen(b40),186)) {
            Let b41 = M[002430];
            SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b41));
            SetByte 002429 b8;
            Let b42 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
            SetByte 002430 LoByte(Widen(b42));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 186;
            TraceOperation 103271 (Insert_obj (Con 14) (Var (Global 0)));
            Let b43 = M[007908];
            Let b44 = M[007909];
            Let b45 = M[000881];
            if (IsZero(Widen(b45))) {
              SetByte 000881 b44;
              Let b46 = M[Offset(Offset(000751,Mul(MakeHiLo(b43,b44),9)),6)];
              SetByte 000882 LoByte(Widen(b46));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b43,b44),9)),6) 14;
              TraceOperation 103274 (Insert_obj (Con 11) (Var (Global 0)));
              Let b47 = M[007908];
              Let b48 = M[007909];
              Let b49 = M[000854];
              if (IsZero(Widen(b49))) {
                SetByte 000854 b48;
                Let b50 = M[Offset(Offset(000751,Mul(MakeHiLo(b47,b48),9)),6)];
                SetByte 000855 LoByte(Widen(b50));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b47,b48),9)),6) 11;
                TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                Let b51 = M[007910];
                Let b52 = M[007911];
                SetByte 007910 HiByte(Add(MakeHiLo(b51,b52),25));
                SetByte 007911 LoByte(Add(MakeHiLo(b51,b52),25));
                TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                GamePrint "Okay, okay, there are a FEW things to see here. ";
                Jump: 103312
              } else {
                Let b53 = M[Offset(Offset(000751,Mul(Widen(b49),9)),6)];
                if (Equal(Widen(b53),11)) {
                  Let b54 = M[000855];
                  SetByte Offset(Offset(000751,Mul(Widen(b49),9)),6) LoByte(Widen(b54));
                  SetByte 000854 b48;
                  Let b55 = M[Offset(Offset(000751,Mul(MakeHiLo(b47,b48),9)),6)];
                  SetByte 000855 LoByte(Widen(b55));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b47,b48),9)),6) 11;
                  TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                  Let b56 = M[007910];
                  Let b57 = M[007911];
                  SetByte 007910 HiByte(Add(MakeHiLo(b56,b57),25));
                  SetByte 007911 LoByte(Add(MakeHiLo(b56,b57),25));
                  TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                  GamePrint "Okay, okay, there are a FEW things to see here. ";
                  Jump: 103312
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b58 = M[Offset(Offset(000751,Mul(Widen(b45),9)),6)];
              if (Equal(Widen(b58),14)) {
                Let b59 = M[000882];
                SetByte Offset(Offset(000751,Mul(Widen(b45),9)),6) LoByte(Widen(b59));
                SetByte 000881 b44;
                Let b60 = M[Offset(Offset(000751,Mul(MakeHiLo(b43,b44),9)),6)];
                SetByte 000882 LoByte(Widen(b60));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b43,b44),9)),6) 14;
                TraceOperation 103274 (Insert_obj (Con 11) (Var (Global 0)));
                Let b61 = M[007908];
                Let b62 = M[007909];
                Let b63 = M[000854];
                if (IsZero(Widen(b63))) {
                  SetByte 000854 b62;
                  Let b64 = M[Offset(Offset(000751,Mul(MakeHiLo(b61,b62),9)),6)];
                  SetByte 000855 LoByte(Widen(b64));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b61,b62),9)),6) 11;
                  TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                  Let b65 = M[007910];
                  Let b66 = M[007911];
                  SetByte 007910 HiByte(Add(MakeHiLo(b65,b66),25));
                  SetByte 007911 LoByte(Add(MakeHiLo(b65,b66),25));
                  TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                  GamePrint "Okay, okay, there are a FEW things to see here. ";
                  Jump: 103312
                } else {
                  Let b67 = M[Offset(Offset(000751,Mul(Widen(b63),9)),6)];
                  if (Equal(Widen(b67),11)) {
                    Let b68 = M[000855];
                    SetByte Offset(Offset(000751,Mul(Widen(b63),9)),6) LoByte(Widen(b68));
                    SetByte 000854 b62;
                    Let b69 = M[Offset(Offset(000751,Mul(MakeHiLo(b61,b62),9)),6)];
                    SetByte 000855 LoByte(Widen(b69));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b61,b62),9)),6) 11;
                    TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                    Let b70 = M[007910];
                    Let b71 = M[007911];
                    SetByte 007910 HiByte(Add(MakeHiLo(b70,b71),25));
                    SetByte 007911 LoByte(Add(MakeHiLo(b70,b71),25));
                    TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                    GamePrint "Okay, okay, there are a FEW things to see here. ";
                    Jump: 103312
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b72 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b72),187)) {
          Let b73 = M[002439];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b73));
          SetByte 002438 169;
          Let b74 = M[002278];
          SetByte 002439 LoByte(Widen(b74));
          SetByte 002278 187;
          TraceOperation 103268 (Insert_obj (Con 186) (Var (Global 0)));
          Let b75 = M[007908];
          Let b76 = M[007909];
          Let b77 = M[002429];
          if (IsZero(Widen(b77))) {
            SetByte 002429 b76;
            Let b78 = M[Offset(Offset(000751,Mul(MakeHiLo(b75,b76),9)),6)];
            SetByte 002430 LoByte(Widen(b78));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b75,b76),9)),6) 186;
            TraceOperation 103271 (Insert_obj (Con 14) (Var (Global 0)));
            Let b79 = M[007908];
            Let b80 = M[007909];
            Let b81 = M[000881];
            if (IsZero(Widen(b81))) {
              SetByte 000881 b80;
              Let b82 = M[Offset(Offset(000751,Mul(MakeHiLo(b79,b80),9)),6)];
              SetByte 000882 LoByte(Widen(b82));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b79,b80),9)),6) 14;
              TraceOperation 103274 (Insert_obj (Con 11) (Var (Global 0)));
              Let b83 = M[007908];
              Let b84 = M[007909];
              Let b85 = M[000854];
              if (IsZero(Widen(b85))) {
                SetByte 000854 b84;
                Let b86 = M[Offset(Offset(000751,Mul(MakeHiLo(b83,b84),9)),6)];
                SetByte 000855 LoByte(Widen(b86));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b83,b84),9)),6) 11;
                TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                Let b87 = M[007910];
                Let b88 = M[007911];
                SetByte 007910 HiByte(Add(MakeHiLo(b87,b88),25));
                SetByte 007911 LoByte(Add(MakeHiLo(b87,b88),25));
                TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                GamePrint "Okay, okay, there are a FEW things to see here. ";
                Jump: 103312
              } else {
                Let b89 = M[Offset(Offset(000751,Mul(Widen(b85),9)),6)];
                if (Equal(Widen(b89),11)) {
                  Let b90 = M[000855];
                  SetByte Offset(Offset(000751,Mul(Widen(b85),9)),6) LoByte(Widen(b90));
                  SetByte 000854 b84;
                  Let b91 = M[Offset(Offset(000751,Mul(MakeHiLo(b83,b84),9)),6)];
                  SetByte 000855 LoByte(Widen(b91));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b83,b84),9)),6) 11;
                  TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                  Let b92 = M[007910];
                  Let b93 = M[007911];
                  SetByte 007910 HiByte(Add(MakeHiLo(b92,b93),25));
                  SetByte 007911 LoByte(Add(MakeHiLo(b92,b93),25));
                  TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                  GamePrint "Okay, okay, there are a FEW things to see here. ";
                  Jump: 103312
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Let b94 = M[Offset(Offset(000751,Mul(Widen(b81),9)),6)];
              if (Equal(Widen(b94),14)) {
                Let b95 = M[000882];
                SetByte Offset(Offset(000751,Mul(Widen(b81),9)),6) LoByte(Widen(b95));
                SetByte 000881 b80;
                Let b96 = M[Offset(Offset(000751,Mul(MakeHiLo(b79,b80),9)),6)];
                SetByte 000882 LoByte(Widen(b96));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b79,b80),9)),6) 14;
                TraceOperation 103274 (Insert_obj (Con 11) (Var (Global 0)));
                Let b97 = M[007908];
                Let b98 = M[007909];
                Let b99 = M[000854];
                if (IsZero(Widen(b99))) {
                  SetByte 000854 b98;
                  Let b100 = M[Offset(Offset(000751,Mul(MakeHiLo(b97,b98),9)),6)];
                  SetByte 000855 LoByte(Widen(b100));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b97,b98),9)),6) 11;
                  TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                  Let b101 = M[007910];
                  Let b102 = M[007911];
                  SetByte 007910 HiByte(Add(MakeHiLo(b101,b102),25));
                  SetByte 007911 LoByte(Add(MakeHiLo(b101,b102),25));
                  TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                  GamePrint "Okay, okay, there are a FEW things to see here. ";
                  Jump: 103312
                } else {
                  Let b103 = M[Offset(Offset(000751,Mul(Widen(b99),9)),6)];
                  if (Equal(Widen(b103),11)) {
                    Let b104 = M[000855];
                    SetByte Offset(Offset(000751,Mul(Widen(b99),9)),6) LoByte(Widen(b104));
                    SetByte 000854 b98;
                    Let b105 = M[Offset(Offset(000751,Mul(MakeHiLo(b97,b98),9)),6)];
                    SetByte 000855 LoByte(Widen(b105));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b97,b98),9)),6) 11;
                    TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                    Let b106 = M[007910];
                    Let b107 = M[007911];
                    SetByte 007910 HiByte(Add(MakeHiLo(b106,b107),25));
                    SetByte 007911 LoByte(Add(MakeHiLo(b106,b107),25));
                    TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                    GamePrint "Okay, okay, there are a FEW things to see here. ";
                    Jump: 103312
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b108 = M[Offset(Offset(000751,Mul(Widen(b77),9)),6)];
            if (Equal(Widen(b108),186)) {
              Let b109 = M[002430];
              SetByte Offset(Offset(000751,Mul(Widen(b77),9)),6) LoByte(Widen(b109));
              SetByte 002429 b76;
              Let b110 = M[Offset(Offset(000751,Mul(MakeHiLo(b75,b76),9)),6)];
              SetByte 002430 LoByte(Widen(b110));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b75,b76),9)),6) 186;
              TraceOperation 103271 (Insert_obj (Con 14) (Var (Global 0)));
              Let b111 = M[007908];
              Let b112 = M[007909];
              Let b113 = M[000881];
              if (IsZero(Widen(b113))) {
                SetByte 000881 b112;
                Let b114 = M[Offset(Offset(000751,Mul(MakeHiLo(b111,b112),9)),6)];
                SetByte 000882 LoByte(Widen(b114));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b111,b112),9)),6) 14;
                TraceOperation 103274 (Insert_obj (Con 11) (Var (Global 0)));
                Let b115 = M[007908];
                Let b116 = M[007909];
                Let b117 = M[000854];
                if (IsZero(Widen(b117))) {
                  SetByte 000854 b116;
                  Let b118 = M[Offset(Offset(000751,Mul(MakeHiLo(b115,b116),9)),6)];
                  SetByte 000855 LoByte(Widen(b118));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b115,b116),9)),6) 11;
                  TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                  Let b119 = M[007910];
                  Let b120 = M[007911];
                  SetByte 007910 HiByte(Add(MakeHiLo(b119,b120),25));
                  SetByte 007911 LoByte(Add(MakeHiLo(b119,b120),25));
                  TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                  GamePrint "Okay, okay, there are a FEW things to see here. ";
                  Jump: 103312
                } else {
                  Let b121 = M[Offset(Offset(000751,Mul(Widen(b117),9)),6)];
                  if (Equal(Widen(b121),11)) {
                    Let b122 = M[000855];
                    SetByte Offset(Offset(000751,Mul(Widen(b117),9)),6) LoByte(Widen(b122));
                    SetByte 000854 b116;
                    Let b123 = M[Offset(Offset(000751,Mul(MakeHiLo(b115,b116),9)),6)];
                    SetByte 000855 LoByte(Widen(b123));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b115,b116),9)),6) 11;
                    TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                    Let b124 = M[007910];
                    Let b125 = M[007911];
                    SetByte 007910 HiByte(Add(MakeHiLo(b124,b125),25));
                    SetByte 007911 LoByte(Add(MakeHiLo(b124,b125),25));
                    TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                    GamePrint "Okay, okay, there are a FEW things to see here. ";
                    Jump: 103312
                  } else {
                    Error: unlink/loop
                  }
                }
              } else {
                Let b126 = M[Offset(Offset(000751,Mul(Widen(b113),9)),6)];
                if (Equal(Widen(b126),14)) {
                  Let b127 = M[000882];
                  SetByte Offset(Offset(000751,Mul(Widen(b113),9)),6) LoByte(Widen(b127));
                  SetByte 000881 b112;
                  Let b128 = M[Offset(Offset(000751,Mul(MakeHiLo(b111,b112),9)),6)];
                  SetByte 000882 LoByte(Widen(b128));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b111,b112),9)),6) 14;
                  TraceOperation 103274 (Insert_obj (Con 11) (Var (Global 0)));
                  Let b129 = M[007908];
                  Let b130 = M[007909];
                  Let b131 = M[000854];
                  if (IsZero(Widen(b131))) {
                    SetByte 000854 b130;
                    Let b132 = M[Offset(Offset(000751,Mul(MakeHiLo(b129,b130),9)),6)];
                    SetByte 000855 LoByte(Widen(b132));
                    SetByte Offset(Offset(000751,Mul(MakeHiLo(b129,b130),9)),6) 11;
                    TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                    Let b133 = M[007910];
                    Let b134 = M[007911];
                    SetByte 007910 HiByte(Add(MakeHiLo(b133,b134),25));
                    SetByte 007911 LoByte(Add(MakeHiLo(b133,b134),25));
                    TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                    GamePrint "Okay, okay, there are a FEW things to see here. ";
                    Jump: 103312
                  } else {
                    Let b135 = M[Offset(Offset(000751,Mul(Widen(b131),9)),6)];
                    if (Equal(Widen(b135),11)) {
                      Let b136 = M[000855];
                      SetByte Offset(Offset(000751,Mul(Widen(b131),9)),6) LoByte(Widen(b136));
                      SetByte 000854 b130;
                      Let b137 = M[Offset(Offset(000751,Mul(MakeHiLo(b129,b130),9)),6)];
                      SetByte 000855 LoByte(Widen(b137));
                      SetByte Offset(Offset(000751,Mul(MakeHiLo(b129,b130),9)),6) 11;
                      TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
                      Let b138 = M[007910];
                      Let b139 = M[007911];
                      SetByte 007910 HiByte(Add(MakeHiLo(b138,b139),25));
                      SetByte 007911 LoByte(Add(MakeHiLo(b138,b139),25));
                      TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
                      GamePrint "Okay, okay, there are a FEW things to see here. ";
                      Jump: 103312
                    } else {
                      Error: unlink/loop
                    }
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 103312
    }
  } else {
    PopFrame return_address_140;
    JumpReturn: return_address_140, result: 0
  }
LocOp 103312:
  TraceOperation 103312 (Print "This is the room that houses the powerful In");
  GamePrint "This is the room that houses the powerful In";
  TraceOperation 103337 (Print_paddr (Var (Global 10)));
  Let b1 = M[007928];
  Let b2 = M[007929];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 103339 (Print " that drives ");
  GamePrint " that drives ";
  TraceOperation 103348 (Print_obj (Con 220));
  Let b3 = M[002738];
  Let b4 = M[002739];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 103350 (Print_ret ". An exit lies fore of here.");
    GamePrint ". An exit lies fore of here.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 103350 (Print_ret ". An exit lies fore of here.");
    GamePrint ". An exit lies fore of here.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 103369:
  TraceOperation 103369 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 103373 (Je [Var (Global 211),Con 3] (Branch F Dfalse));
    Let b1 = M[008330];
    Let b2 = M[008331];
    if (Equal(MakeHiLo(b1,b2),3)) {
      TraceOperation 103377 (Store (Con 227) (Con 4));
      SetByte 008330 0;
      SetByte 008331 4;
      TraceOperation 103380 New_line;
      GamePrint "\n";
      TraceOperation 103381 (Print_ret "(Footnote 10)");
      GamePrint "(Footnote 10)\n";
      PopFrame return_address_3;
      JumpReturn: return_address_3, result: 1
    } else {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    }
  } else {
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  }
--[649]--------------------------------------------------
LocRoutine 103390:
  MakeRoutineFrame 0;
  Jump: 103391
LocOp 103391:
  TraceOperation 103391 (Je [Var (Global 203),Con 159,Con 61] (Branch F (Dloc 103408)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),159),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 103397 (Je [Var (Global 0),Con 188] (Branch T (Dloc 103408)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),188)) {
      Jump: 103408
    } else {
      TraceOperation 103401 (Call (Floc 057596) [Con 187] Sp);
      PushFrame 103401;
      SetLocal 1 187;
      JumpCall: 057596, #actuals: 1
    }
  } else {
    Jump: 103408
  }
LocReturn 103401:
  PushStack call_result;
  TraceOperation 103407 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 103408:
  TraceOperation 103408 (Je [Var (Global 203),Con 88] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 103412 (Print "Only ");
    GamePrint "Only ";
    TraceOperation 103417 (Print_obj (Con 198));
    Let b3 = M[002540];
    Let b4 = M[002541];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 103419 (Print_ret " can activate the drive.");
      GamePrint " can activate the drive.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 103419 (Print_ret " can activate the drive.");
      GamePrint " can activate the drive.\n";
      PopFrame return_address_7;
      JumpReturn: return_address_7, result: 1
    }
  } else {
    PopFrame return_address_8;
    JumpReturn: return_address_8, result: 0
  }
--[650]--------------------------------------------------
LocRoutine 103434:
  MakeRoutineFrame 0;
  Jump: 103435
LocOp 103435:
  TraceOperation 103435 (Je [Var (Global 203),Con 61] (Branch F (Dloc 103595)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 103440 (Print "The ");
    GamePrint "The ";
    TraceOperation 103443 (Print_obj (Con 186));
    Let b3 = M[002432];
    Let b4 = M[002433];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 103445 (Print " has a switch");
      GamePrint " has a switch";
      TraceOperation 103454 (Jin (Con 185) (Con 186) (Branch F (Dloc 103513)));
      Let b6 = M[002420];
      if (Equal(186,Widen(b6))) {
        TraceOperation 103458 (Print ", a long cord ");
        GamePrint ", a long cord ";
        TraceOperation 103469 (Jz (Var (Global 210)) (Branch T (Dloc 103496)));
        Let b7 = M[008328];
        Let b8 = M[008329];
        if (IsZero(MakeHiLo(b7,b8))) {
          Jump: 103496
        } else {
          TraceOperation 103472 (Print "plugged into the control console,");
          GamePrint "plugged into the control console,";
          TraceOperation 103493 (Jump 103544);
          Jump: 103544
        }
      } else {
        Jump: 103513
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 103445 (Print " has a switch");
      GamePrint " has a switch";
      TraceOperation 103454 (Jin (Con 185) (Con 186) (Branch F (Dloc 103513)));
      Let b9 = M[002420];
      if (Equal(186,Widen(b9))) {
        TraceOperation 103458 (Print ", a long cord ");
        GamePrint ", a long cord ";
        TraceOperation 103469 (Jz (Var (Global 210)) (Branch T (Dloc 103496)));
        Let b10 = M[008328];
        Let b11 = M[008329];
        if (IsZero(MakeHiLo(b10,b11))) {
          Jump: 103496
        } else {
          TraceOperation 103472 (Print "plugged into the control console,");
          GamePrint "plugged into the control console,";
          TraceOperation 103493 (Jump 103544);
          Jump: 103544
        }
      } else {
        Jump: 103513
      }
    }
  } else {
    Jump: 103595
  }
LocOp 103496:
  TraceOperation 103496 (Print "ending with a ");
  GamePrint "ending with a ";
  TraceOperation 103505 (Print_obj (Con 185));
  Let b1 = M[002423];
  Let b2 = M[002424];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 103507 (Print ",");
    GamePrint ",";
    TraceOperation 103510 (Jump 103544);
    Jump: 103544
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 103507 (Print ",");
    GamePrint ",";
    TraceOperation 103510 (Jump 103544);
    Jump: 103544
  }
--[651]--------------------------------------------------
LocRoutine 103566:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 -25930;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 -26592;
    }
  }
  Jump: 103571
LocOp 103571:
  TraceOperation 103571 (Jump 103585);
  Jump: 103585
--[652]--------------------------------------------------
LocRoutine 103592:
  MakeRoutineFrame 0;
  Jump: 103593
LocOp 103593:
  TraceOperation 103593 New_line;
  GamePrint "\n";
  TraceOperation 103594 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[653]--------------------------------------------------
LocRoutine 103678:
  MakeRoutineFrame 0;
  Jump: 103679
LocOp 103679:
  TraceOperation 103679 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[654]--------------------------------------------------
LocRoutine 103692:
  MakeRoutineFrame 0;
  Jump: 103693
LocOp 103693:
  TraceOperation 103693 (Store (Con 226) (Con 0));
  SetByte 008328 0;
  SetByte 008329 0;
  TraceOperation 103696 (Clear_attr (Con 186) (Con 27));
  Let b1 = M[002428];
  SetByte 002428 ClearBit(b1,4);
  TraceOperation 103699 (Print_ret "Done.");
  GamePrint "Done.\n";
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 1
--[655]--------------------------------------------------
LocRoutine 103720:
  MakeRoutineFrame 0;
  Jump: 103721
LocOp 103721:
  TraceOperation 103721 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[656]--------------------------------------------------
LocRoutine 103732:
  MakeRoutineFrame 0;
  Jump: 103733
LocOp 103733:
  TraceOperation 103733 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[657]--------------------------------------------------
LocRoutine 103734:
  MakeRoutineFrame 0;
  Jump: 103735
LocOp 103735:
  TraceOperation 103735 (Je [Var (Global 203),Con 157,Con 46,Con 41] (Branch F (Dloc 103906)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),157),Equal(MakeHiLo(b1,b2),46)),Equal(MakeHiLo(b1,b2),41))) {
    TraceOperation 103743 (Je [Var (Global 202),Con 199,Con 197] (Branch F (Dloc 103906)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),199),Equal(MakeHiLo(b3,b4),197))) {
      TraceOperation 103750 (Jz (Var (Global 210)) (Branch T (Dloc 103760)));
      Let b5 = M[008328];
      Let b6 = M[008329];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 103760
      } else {
        TraceOperation 103753 (Print_ret "It already is!");
        GamePrint "It already is!\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      }
    } else {
      Jump: 103906
    }
  } else {
    Jump: 103906
  }
LocOp 103760:
  TraceOperation 103760 (Store (Con 226) (Con 1));
  SetByte 008328 0;
  SetByte 008329 1;
  TraceOperation 103763 (Set_attr (Con 186) (Con 27));
  Let b1 = M[002428];
  SetByte 002428 SetBit(b1,4);
  TraceOperation 103766 (Print "Plugged.");
  GamePrint "Plugged.";
  TraceOperation 103775 (Call (Floc 020662) [Con -16129] Sp);
  PushFrame 103775;
  SetLocal 1 -16129;
  JumpCall: 020662, #actuals: 1
LocReturn 103775:
  PushStack call_result;
  TraceOperation 103782 (Jz (Var Sp) (Branch F (Dloc 103904)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 103786 (Print " ");
    GamePrint " ";
    TraceOperation 103789 (Print_obj (Con 198));
    Let b2 = M[002540];
    Let b3 = M[002541];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    if (IsZeroByte(b4)) {
      GamePrint "";
      TraceOperation 103791 (Print " says \"You shouldn't be playing around with a ");
      GamePrint " says \"You shouldn't be playing around with a ";
      TraceOperation 103816 (Print_obj (Con 186));
      Let b5 = M[002432];
      Let b6 = M[002433];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 103818 (Print ". Who knows where it's been?\"");
        GamePrint ". Who knows where it's been?\"";
        TraceOperation 103837 New_line;
        GamePrint "\n";
        TraceOperation 103838 New_line;
        GamePrint "\n";
        TraceOperation 103839 (Print_paddr (Var (Global 21)));
        Let b8 = M[007950];
        Let b9 = M[007951];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b8,b9)));
        TraceOperation 103841 (Print_obj (Con 198));
        Let b10 = M[002540];
        Let b11 = M[002541];
        Let b12 = M[Address(MakeHiLo(b10,b11))];
        if (IsZeroByte(b12)) {
          GamePrint "";
          TraceOperation 103843 (Print ". Someone has connected a ");
          GamePrint ". Someone has connected a ";
          TraceOperation 103862 (Print_obj (Con 186));
          Let b13 = M[002432];
          Let b14 = M[002433];
          Let b15 = M[Address(MakeHiLo(b13,b14))];
          if (IsZeroByte(b15)) {
            GamePrint "";
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b16 = M[007922];
            Let b17 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b16,b17)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b18 = M[007922];
            Let b19 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b18,b19)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b10,b11)),1));
          TraceOperation 103843 (Print ". Someone has connected a ");
          GamePrint ". Someone has connected a ";
          TraceOperation 103862 (Print_obj (Con 186));
          Let b20 = M[002432];
          Let b21 = M[002433];
          Let b22 = M[Address(MakeHiLo(b20,b21))];
          if (IsZeroByte(b22)) {
            GamePrint "";
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b23 = M[007922];
            Let b24 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b23,b24)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b20,b21)),1));
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b25 = M[007922];
            Let b26 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b25,b26)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          }
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 103818 (Print ". Who knows where it's been?\"");
        GamePrint ". Who knows where it's been?\"";
        TraceOperation 103837 New_line;
        GamePrint "\n";
        TraceOperation 103838 New_line;
        GamePrint "\n";
        TraceOperation 103839 (Print_paddr (Var (Global 21)));
        Let b27 = M[007950];
        Let b28 = M[007951];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b27,b28)));
        TraceOperation 103841 (Print_obj (Con 198));
        Let b29 = M[002540];
        Let b30 = M[002541];
        Let b31 = M[Address(MakeHiLo(b29,b30))];
        if (IsZeroByte(b31)) {
          GamePrint "";
          TraceOperation 103843 (Print ". Someone has connected a ");
          GamePrint ". Someone has connected a ";
          TraceOperation 103862 (Print_obj (Con 186));
          Let b32 = M[002432];
          Let b33 = M[002433];
          Let b34 = M[Address(MakeHiLo(b32,b33))];
          if (IsZeroByte(b34)) {
            GamePrint "";
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b35 = M[007922];
            Let b36 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b35,b36)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b32,b33)),1));
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b37 = M[007922];
            Let b38 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b37,b38)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b29,b30)),1));
          TraceOperation 103843 (Print ". Someone has connected a ");
          GamePrint ". Someone has connected a ";
          TraceOperation 103862 (Print_obj (Con 186));
          Let b39 = M[002432];
          Let b40 = M[002433];
          Let b41 = M[Address(MakeHiLo(b39,b40))];
          if (IsZeroByte(b41)) {
            GamePrint "";
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b42 = M[007922];
            Let b43 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b42,b43)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b39,b40)),1));
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b44 = M[007922];
            Let b45 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b44,b45)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          }
        }
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b2,b3)),1));
      TraceOperation 103791 (Print " says \"You shouldn't be playing around with a ");
      GamePrint " says \"You shouldn't be playing around with a ";
      TraceOperation 103816 (Print_obj (Con 186));
      Let b46 = M[002432];
      Let b47 = M[002433];
      Let b48 = M[Address(MakeHiLo(b46,b47))];
      if (IsZeroByte(b48)) {
        GamePrint "";
        TraceOperation 103818 (Print ". Who knows where it's been?\"");
        GamePrint ". Who knows where it's been?\"";
        TraceOperation 103837 New_line;
        GamePrint "\n";
        TraceOperation 103838 New_line;
        GamePrint "\n";
        TraceOperation 103839 (Print_paddr (Var (Global 21)));
        Let b49 = M[007950];
        Let b50 = M[007951];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b49,b50)));
        TraceOperation 103841 (Print_obj (Con 198));
        Let b51 = M[002540];
        Let b52 = M[002541];
        Let b53 = M[Address(MakeHiLo(b51,b52))];
        if (IsZeroByte(b53)) {
          GamePrint "";
          TraceOperation 103843 (Print ". Someone has connected a ");
          GamePrint ". Someone has connected a ";
          TraceOperation 103862 (Print_obj (Con 186));
          Let b54 = M[002432];
          Let b55 = M[002433];
          Let b56 = M[Address(MakeHiLo(b54,b55))];
          if (IsZeroByte(b56)) {
            GamePrint "";
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b57 = M[007922];
            Let b58 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b57,b58)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b54,b55)),1));
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b59 = M[007922];
            Let b60 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b59,b60)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b51,b52)),1));
          TraceOperation 103843 (Print ". Someone has connected a ");
          GamePrint ". Someone has connected a ";
          TraceOperation 103862 (Print_obj (Con 186));
          Let b61 = M[002432];
          Let b62 = M[002433];
          Let b63 = M[Address(MakeHiLo(b61,b62))];
          if (IsZeroByte(b63)) {
            GamePrint "";
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b64 = M[007922];
            Let b65 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b64,b65)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b61,b62)),1));
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b66 = M[007922];
            Let b67 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b66,b67)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          }
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b46,b47)),1));
        TraceOperation 103818 (Print ". Who knows where it's been?\"");
        GamePrint ". Who knows where it's been?\"";
        TraceOperation 103837 New_line;
        GamePrint "\n";
        TraceOperation 103838 New_line;
        GamePrint "\n";
        TraceOperation 103839 (Print_paddr (Var (Global 21)));
        Let b68 = M[007950];
        Let b69 = M[007951];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b68,b69)));
        TraceOperation 103841 (Print_obj (Con 198));
        Let b70 = M[002540];
        Let b71 = M[002541];
        Let b72 = M[Address(MakeHiLo(b70,b71))];
        if (IsZeroByte(b72)) {
          GamePrint "";
          TraceOperation 103843 (Print ". Someone has connected a ");
          GamePrint ". Someone has connected a ";
          TraceOperation 103862 (Print_obj (Con 186));
          Let b73 = M[002432];
          Let b74 = M[002433];
          Let b75 = M[Address(MakeHiLo(b73,b74))];
          if (IsZeroByte(b75)) {
            GamePrint "";
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b76 = M[007922];
            Let b77 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b76,b77)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b73,b74)),1));
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b78 = M[007922];
            Let b79 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b78,b79)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b70,b71)),1));
          TraceOperation 103843 (Print ". Someone has connected a ");
          GamePrint ". Someone has connected a ";
          TraceOperation 103862 (Print_obj (Con 186));
          Let b80 = M[002432];
          Let b81 = M[002433];
          Let b82 = M[Address(MakeHiLo(b80,b81))];
          if (IsZeroByte(b82)) {
            GamePrint "";
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b83 = M[007922];
            Let b84 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b83,b84)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          } else {
            GamePrint GetText(Offset(Address(MakeHiLo(b80,b81)),1));
            TraceOperation 103864 (Print " to");
            GamePrint " to";
            TraceOperation 103867 (Print_paddr (Var (Global 7)));
            Let b85 = M[007922];
            Let b86 = M[007923];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b85,b86)));
            TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
            GamePrint ". Better be an emergency, that's all I have to say.\"";
            Jump: 103904
          }
        }
      }
    }
  } else {
    Jump: 103904
  }
LocOp 103904:
  TraceOperation 103904 New_line;
  GamePrint "\n";
  TraceOperation 103905 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 103906:
  TraceOperation 103906 (Je [Var (Global 203),Con 124] (Branch F (Dloc 103922)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 103910 (Je [Var (Global 202),Con 199] (Branch F (Dloc 103922)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),199)) {
      TraceOperation 103914 (Call (Floc 022042) [Con 163,Con 185] Sp);
      PushFrame 103914;
      SetLocal 1 163;
      SetLocal 2 185;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 103922
    }
  } else {
    Jump: 103922
  }
LocReturn 103914:
  PushStack call_result;
  TraceOperation 103921 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 103922:
  TraceOperation 103922 (Je [Var (Global 203),Con 123,Con 163] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),123),Equal(MakeHiLo(b1,b2),163))) {
    TraceOperation 103928 (Jz (Var (Global 210)) (Branch T (Dloc 103944)));
    Let b3 = M[008328];
    Let b4 = M[008329];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 103944
    } else {
      TraceOperation 103931 (Store (Con 226) (Con 0));
      SetByte 008328 0;
      SetByte 008329 0;
      TraceOperation 103934 (Clear_attr (Con 186) (Con 27));
      Let b5 = M[002428];
      SetByte 002428 ClearBit(b5,4);
      TraceOperation 103937 (Print_ret "Done.");
      GamePrint "Done.\n";
      PopFrame return_address_6;
      JumpReturn: return_address_6, result: 1
    }
  } else {
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 0
  }
LocOp 103944:
  TraceOperation 103944 (Print_paddr (Var (Global 61)));
  Let b1 = M[008030];
  Let b2 = M[008031];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 103946 New_line;
  GamePrint "\n";
  TraceOperation 103947 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[658]--------------------------------------------------
LocRoutine 103948:
  MakeRoutineFrame 0;
  Jump: 103949
LocOp 103949:
  TraceOperation 103949 (Je [Var (Global 203),Con 157,Con 46,Con 41] (Branch F (Dloc 103984)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),157),Equal(MakeHiLo(b1,b2),46)),Equal(MakeHiLo(b1,b2),41))) {
    TraceOperation 103956 (Je [Var (Global 202),Con 182,Con 180] (Branch F (Dloc 103984)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),182),Equal(MakeHiLo(b3,b4),180))) {
      TraceOperation 103962 (Jz (Var (Global 209)) (Branch T (Dloc 103972)));
      Let b5 = M[008326];
      Let b6 = M[008327];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 103972
      } else {
        TraceOperation 103965 (Print_ret "It already is!");
        GamePrint "It already is!\n";
        PopFrame return_address_7;
        JumpReturn: return_address_7, result: 1
      }
    } else {
      Jump: 103984
    }
  } else {
    Jump: 103984
  }
LocOp 103972:
  TraceOperation 103972 (Store (Con 225) (Con 1));
  SetByte 008326 0;
  SetByte 008327 1;
  TraceOperation 103975 (Print_ret "Plugged.");
  GamePrint "Plugged.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 103984:
  TraceOperation 103984 (Je [Var (Global 203),Con 124] (Branch F (Dloc 104000)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 103988 (Je [Var (Global 202),Con 182] (Branch F (Dloc 104000)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),182)) {
      TraceOperation 103992 (Call (Floc 022042) [Con 163,Con 184] Sp);
      PushFrame 103992;
      SetLocal 1 163;
      SetLocal 2 184;
      JumpCall: 022042, #actuals: 2
    } else {
      Jump: 104000
    }
  } else {
    Jump: 104000
  }
LocReturn 103992:
  PushStack call_result;
  TraceOperation 103999 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 104000:
  TraceOperation 104000 (Je [Var (Global 203),Con 123,Con 163] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),123),Equal(MakeHiLo(b1,b2),163))) {
    TraceOperation 104006 (Jz (Var (Global 209)) (Branch T (Dloc 104019)));
    Let b3 = M[008326];
    Let b4 = M[008327];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 104019
    } else {
      TraceOperation 104009 (Store (Con 225) (Con 0));
      SetByte 008326 0;
      SetByte 008327 0;
      TraceOperation 104012 (Print_ret "Done.");
      GamePrint "Done.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
LocOp 104019:
  TraceOperation 104019 (Print_paddr (Var (Global 61)));
  Let b1 = M[008030];
  Let b2 = M[008031];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 104021 New_line;
  GamePrint "\n";
  TraceOperation 104022 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
--[659]--------------------------------------------------
LocRoutine 104024:
  MakeRoutineFrame 0;
  Jump: 104025
LocOp 104025:
  TraceOperation 104025 (Je [Var (Global 203),Con 114,Con 145,Con 88] (Branch T (Dloc 104038)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),114),Equal(MakeHiLo(b1,b2),145)),Equal(MakeHiLo(b1,b2),88))) {
    Jump: 104038
  } else {
    TraceOperation 104032 (Je [Var (Global 203),Con 154,Con 98] (Branch F Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),154),Equal(MakeHiLo(b3,b4),98))) {
      Jump: 104038
    } else {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    }
  }
LocOp 104038:
  TraceOperation 104038 (Jz (Var (Global 209)) (Branch T (Dloc 104879)));
  Let b1 = M[008326];
  Let b2 = M[008327];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 104879
  } else {
    TraceOperation 104042 (Jz (Var (Global 208)) (Branch T (Dloc 104879)));
    Let b3 = M[008324];
    Let b4 = M[008325];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 104879
    } else {
      TraceOperation 104046 (Insert_obj (Con 186) (Var (Global 0)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[002429];
      if (IsZero(Widen(b7))) {
        SetByte 002429 b6;
        Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
        SetByte 002430 LoByte(Widen(b8));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 186;
        TraceOperation 104049 (Insert_obj (Con 182) (Var (Global 0)));
        Let b9 = M[007908];
        Let b10 = M[007909];
        Let b11 = M[002393];
        if (IsZero(Widen(b11))) {
          SetByte 002393 b10;
          Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6)];
          SetByte 002394 LoByte(Widen(b12));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6) 182;
          TraceOperation 104052 (Insert_obj (Var (Global 208)) (Var (Global 0)));
          Let b13 = M[008324];
          Let b14 = M[008325];
          Let b15 = M[007908];
          Let b16 = M[007909];
          Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),4)];
          if (IsZero(Widen(b17))) {
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),4) b16;
            Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6)];
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),5) LoByte(Widen(b18));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6) b14;
            TraceOperation 104055 (Je [Var (Global 208),Con 9] (Branch F (Dloc 104062)));
            Let b19 = M[008324];
            Let b20 = M[008325];
            if (Equal(MakeHiLo(b19,b20),9)) {
              TraceOperation 104059 (Store (Con 82) (Con 1));
              SetByte 008040 0;
              SetByte 008041 1;
              Jump: 104062
            } else {
              Jump: 104062
            }
          } else {
            Let b21 = M[Offset(Offset(000751,Mul(Widen(b17),9)),6)];
            if (Equal(Widen(b21),MakeHiLo(b13,b14))) {
              Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),5)];
              SetByte Offset(Offset(000751,Mul(Widen(b17),9)),6) LoByte(Widen(b22));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),4) b16;
              Let b23 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6)];
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),5) LoByte(Widen(b23));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6) b14;
              TraceOperation 104055 (Je [Var (Global 208),Con 9] (Branch F (Dloc 104062)));
              Let b24 = M[008324];
              Let b25 = M[008325];
              if (Equal(MakeHiLo(b24,b25),9)) {
                TraceOperation 104059 (Store (Con 82) (Con 1));
                SetByte 008040 0;
                SetByte 008041 1;
                Jump: 104062
              } else {
                Jump: 104062
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Let b26 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
          if (Equal(Widen(b26),182)) {
            Let b27 = M[002394];
            SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b27));
            SetByte 002393 b10;
            Let b28 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6)];
            SetByte 002394 LoByte(Widen(b28));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6) 182;
            TraceOperation 104052 (Insert_obj (Var (Global 208)) (Var (Global 0)));
            Let b29 = M[008324];
            Let b30 = M[008325];
            Let b31 = M[007908];
            Let b32 = M[007909];
            Let b33 = M[Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),4)];
            if (IsZero(Widen(b33))) {
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),4) b32;
              Let b34 = M[Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),6)];
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),5) LoByte(Widen(b34));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),6) b30;
              TraceOperation 104055 (Je [Var (Global 208),Con 9] (Branch F (Dloc 104062)));
              Let b35 = M[008324];
              Let b36 = M[008325];
              if (Equal(MakeHiLo(b35,b36),9)) {
                TraceOperation 104059 (Store (Con 82) (Con 1));
                SetByte 008040 0;
                SetByte 008041 1;
                Jump: 104062
              } else {
                Jump: 104062
              }
            } else {
              Let b37 = M[Offset(Offset(000751,Mul(Widen(b33),9)),6)];
              if (Equal(Widen(b37),MakeHiLo(b29,b30))) {
                Let b38 = M[Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),5)];
                SetByte Offset(Offset(000751,Mul(Widen(b33),9)),6) LoByte(Widen(b38));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),4) b32;
                Let b39 = M[Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),6)];
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b29,b30),9)),5) LoByte(Widen(b39));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),6) b30;
                TraceOperation 104055 (Je [Var (Global 208),Con 9] (Branch F (Dloc 104062)));
                Let b40 = M[008324];
                Let b41 = M[008325];
                if (Equal(MakeHiLo(b40,b41),9)) {
                  TraceOperation 104059 (Store (Con 82) (Con 1));
                  SetByte 008040 0;
                  SetByte 008041 1;
                  Jump: 104062
                } else {
                  Jump: 104062
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Error: unlink/loop
          }
        }
      } else {
        Let b42 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
        if (Equal(Widen(b42),186)) {
          Let b43 = M[002430];
          SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b43));
          SetByte 002429 b6;
          Let b44 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
          SetByte 002430 LoByte(Widen(b44));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 186;
          TraceOperation 104049 (Insert_obj (Con 182) (Var (Global 0)));
          Let b45 = M[007908];
          Let b46 = M[007909];
          Let b47 = M[002393];
          if (IsZero(Widen(b47))) {
            SetByte 002393 b46;
            Let b48 = M[Offset(Offset(000751,Mul(MakeHiLo(b45,b46),9)),6)];
            SetByte 002394 LoByte(Widen(b48));
            SetByte Offset(Offset(000751,Mul(MakeHiLo(b45,b46),9)),6) 182;
            TraceOperation 104052 (Insert_obj (Var (Global 208)) (Var (Global 0)));
            Let b49 = M[008324];
            Let b50 = M[008325];
            Let b51 = M[007908];
            Let b52 = M[007909];
            Let b53 = M[Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),4)];
            if (IsZero(Widen(b53))) {
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),4) b52;
              Let b54 = M[Offset(Offset(000751,Mul(MakeHiLo(b51,b52),9)),6)];
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),5) LoByte(Widen(b54));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b51,b52),9)),6) b50;
              TraceOperation 104055 (Je [Var (Global 208),Con 9] (Branch F (Dloc 104062)));
              Let b55 = M[008324];
              Let b56 = M[008325];
              if (Equal(MakeHiLo(b55,b56),9)) {
                TraceOperation 104059 (Store (Con 82) (Con 1));
                SetByte 008040 0;
                SetByte 008041 1;
                Jump: 104062
              } else {
                Jump: 104062
              }
            } else {
              Let b57 = M[Offset(Offset(000751,Mul(Widen(b53),9)),6)];
              if (Equal(Widen(b57),MakeHiLo(b49,b50))) {
                Let b58 = M[Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),5)];
                SetByte Offset(Offset(000751,Mul(Widen(b53),9)),6) LoByte(Widen(b58));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),4) b52;
                Let b59 = M[Offset(Offset(000751,Mul(MakeHiLo(b51,b52),9)),6)];
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b49,b50),9)),5) LoByte(Widen(b59));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b51,b52),9)),6) b50;
                TraceOperation 104055 (Je [Var (Global 208),Con 9] (Branch F (Dloc 104062)));
                Let b60 = M[008324];
                Let b61 = M[008325];
                if (Equal(MakeHiLo(b60,b61),9)) {
                  TraceOperation 104059 (Store (Con 82) (Con 1));
                  SetByte 008040 0;
                  SetByte 008041 1;
                  Jump: 104062
                } else {
                  Jump: 104062
                }
              } else {
                Error: unlink/loop
              }
            }
          } else {
            Let b62 = M[Offset(Offset(000751,Mul(Widen(b47),9)),6)];
            if (Equal(Widen(b62),182)) {
              Let b63 = M[002394];
              SetByte Offset(Offset(000751,Mul(Widen(b47),9)),6) LoByte(Widen(b63));
              SetByte 002393 b46;
              Let b64 = M[Offset(Offset(000751,Mul(MakeHiLo(b45,b46),9)),6)];
              SetByte 002394 LoByte(Widen(b64));
              SetByte Offset(Offset(000751,Mul(MakeHiLo(b45,b46),9)),6) 182;
              TraceOperation 104052 (Insert_obj (Var (Global 208)) (Var (Global 0)));
              Let b65 = M[008324];
              Let b66 = M[008325];
              Let b67 = M[007908];
              Let b68 = M[007909];
              Let b69 = M[Offset(Offset(000751,Mul(MakeHiLo(b65,b66),9)),4)];
              if (IsZero(Widen(b69))) {
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b65,b66),9)),4) b68;
                Let b70 = M[Offset(Offset(000751,Mul(MakeHiLo(b67,b68),9)),6)];
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b65,b66),9)),5) LoByte(Widen(b70));
                SetByte Offset(Offset(000751,Mul(MakeHiLo(b67,b68),9)),6) b66;
                TraceOperation 104055 (Je [Var (Global 208),Con 9] (Branch F (Dloc 104062)));
                Let b71 = M[008324];
                Let b72 = M[008325];
                if (Equal(MakeHiLo(b71,b72),9)) {
                  TraceOperation 104059 (Store (Con 82) (Con 1));
                  SetByte 008040 0;
                  SetByte 008041 1;
                  Jump: 104062
                } else {
                  Jump: 104062
                }
              } else {
                Let b73 = M[Offset(Offset(000751,Mul(Widen(b69),9)),6)];
                if (Equal(Widen(b73),MakeHiLo(b65,b66))) {
                  Let b74 = M[Offset(Offset(000751,Mul(MakeHiLo(b65,b66),9)),5)];
                  SetByte Offset(Offset(000751,Mul(Widen(b69),9)),6) LoByte(Widen(b74));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b65,b66),9)),4) b68;
                  Let b75 = M[Offset(Offset(000751,Mul(MakeHiLo(b67,b68),9)),6)];
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b65,b66),9)),5) LoByte(Widen(b75));
                  SetByte Offset(Offset(000751,Mul(MakeHiLo(b67,b68),9)),6) b66;
                  TraceOperation 104055 (Je [Var (Global 208),Con 9] (Branch F (Dloc 104062)));
                  Let b76 = M[008324];
                  Let b77 = M[008325];
                  if (Equal(MakeHiLo(b76,b77),9)) {
                    TraceOperation 104059 (Store (Con 82) (Con 1));
                    SetByte 008040 0;
                    SetByte 008041 1;
                    Jump: 104062
                  } else {
                    Jump: 104062
                  }
                } else {
                  Error: unlink/loop
                }
              }
            } else {
              Error: unlink/loop
            }
          }
        } else {
          Error: unlink/loop
        }
      }
    }
  }
LocOp 104062:
  TraceOperation 104062 (Jz (Var (Global 210)) (Branch T (Dloc 104816)));
  Let b1 = M[008328];
  Let b2 = M[008329];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 104816
  } else {
    TraceOperation 104066 (Print "As you flip the switch, sparks fly from the large receptacle. ");
    GamePrint "As you flip the switch, sparks fly from the large receptacle. ";
    TraceOperation 104101 (Call (Floc 020662) [Con -16129] Sp);
    PushFrame 104101;
    SetLocal 1 -16129;
    JumpCall: 020662, #actuals: 1
  }
LocReturn 104101:
  PushStack call_result;
  TraceOperation 104108 (Jz (Var Sp) (Branch T (Dloc 104162)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104162
  } else {
    TraceOperation 104111 (Jg (Var (Global 215)) (Con 6) (Branch F (Dloc 104162)));
    Let b2 = M[008338];
    Let b3 = M[008339];
    if (GreaterThan(MakeHiLo(b2,b3),6)) {
      TraceOperation 104115 (Print "\"My new control console!\" wails ");
      GamePrint "\"My new control console!\" wails ";
      TraceOperation 104140 (Print_obj (Con 198));
      Let b4 = M[002540];
      Let b5 = M[002541];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      if (IsZeroByte(b6)) {
        GamePrint "";
        TraceOperation 104142 (Print ". \"This is the thanks I get");
        GamePrint ". \"This is the thanks I get";
        TraceOperation 104159 (Jump 104220);
        Jump: 104220
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
        TraceOperation 104142 (Print ". \"This is the thanks I get");
        GamePrint ". \"This is the thanks I get";
        TraceOperation 104159 (Jump 104220);
        Jump: 104220
      }
    } else {
      Jump: 104162
    }
  }
LocOp 104162:
  TraceOperation 104162 (Print "\"Now look what you've done. You've destroyed");
  GamePrint "\"Now look what you've done. You've destroyed";
  TraceOperation 104191 (Print_paddr (Var (Global 7)));
  Let b1 = M[007922];
  Let b2 = M[007923];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 104193 (Print ". Don't you know it's only for emergencies");
  GamePrint ". Don't you know it's only for emergencies";
  Jump: 104220
LocOp 104220:
  TraceOperation 104220 (Print "?\"");
  GamePrint "?\"";
  TraceOperation 104225 New_line;
  GamePrint "\n";
  TraceOperation 104226 New_line;
  GamePrint "\n";
  TraceOperation 104227 (Store (Con 226) (Con 0));
  SetByte 008328 0;
  SetByte 008329 0;
  TraceOperation 104230 (Clear_attr (Con 186) (Con 27));
  Let b1 = M[002428];
  SetByte 002428 ClearBit(b1,4);
  TraceOperation 104233 (Insert_obj (Con 185) (Con 219));
  Let b2 = M[002420];
  if (IsZero(Widen(b2))) {
    SetByte 002420 219;
    Let b3 = M[002728];
    SetByte 002421 LoByte(Widen(b3));
    SetByte 002728 185;
    TraceOperation 104236 (Insert_obj (Con 197) (Con 219));
    Let b4 = M[002528];
    if (IsZero(Widen(b4))) {
      SetByte 002528 219;
      Let b5 = M[002728];
      SetByte 002529 LoByte(Widen(b5));
      SetByte 002728 197;
      TraceOperation 104239 (Call (Floc 020662) [Con -16129] Sp);
      PushFrame 104239;
      SetLocal 1 -16129;
      JumpCall: 020662, #actuals: 1
    } else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b6),197)) {
        Let b7 = M[002529];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b7));
        SetByte 002528 219;
        Let b8 = M[002728];
        SetByte 002529 LoByte(Widen(b8));
        SetByte 002728 197;
        TraceOperation 104239 (Call (Floc 020662) [Con -16129] Sp);
        PushFrame 104239;
        SetLocal 1 -16129;
        JumpCall: 020662, #actuals: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b9 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b9),185)) {
      Let b10 = M[002421];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b10));
      SetByte 002420 219;
      Let b11 = M[002728];
      SetByte 002421 LoByte(Widen(b11));
      SetByte 002728 185;
      TraceOperation 104236 (Insert_obj (Con 197) (Con 219));
      Let b12 = M[002528];
      if (IsZero(Widen(b12))) {
        SetByte 002528 219;
        Let b13 = M[002728];
        SetByte 002529 LoByte(Widen(b13));
        SetByte 002728 197;
        TraceOperation 104239 (Call (Floc 020662) [Con -16129] Sp);
        PushFrame 104239;
        SetLocal 1 -16129;
        JumpCall: 020662, #actuals: 1
      } else {
        Let b14 = M[Offset(Offset(000751,Mul(Widen(b12),9)),6)];
        if (Equal(Widen(b14),197)) {
          Let b15 = M[002529];
          SetByte Offset(Offset(000751,Mul(Widen(b12),9)),6) LoByte(Widen(b15));
          SetByte 002528 219;
          Let b16 = M[002728];
          SetByte 002529 LoByte(Widen(b16));
          SetByte 002728 197;
          TraceOperation 104239 (Call (Floc 020662) [Con -16129] Sp);
          PushFrame 104239;
          SetLocal 1 -16129;
          JumpCall: 020662, #actuals: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 104239:
  PushStack call_result;
  TraceOperation 104246 (Jz (Var Sp) (Branch T (Dloc 104557)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104557
  } else {
    TraceOperation 104250 (Jg (Var (Global 215)) (Con 6) (Branch F (Dloc 104557)));
    Let b2 = M[008338];
    Let b3 = M[008339];
    if (GreaterThan(MakeHiLo(b2,b3),6)) {
      TraceOperation 104255 (Insert_obj (Con 9) (Con 207));
      Let b4 = M[000836];
      if (IsZero(Widen(b4))) {
        SetByte 000836 207;
        Let b5 = M[002620];
        SetByte 000837 LoByte(Widen(b5));
        SetByte 002620 9;
        TraceOperation 104258 (Call (Floc 022340) [Con -16129] Sp);
        PushFrame 104258;
        SetLocal 1 -16129;
        JumpCall: 022340, #actuals: 1
      } else {
        Let b6 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
        if (Equal(Widen(b6),9)) {
          Let b7 = M[000837];
          SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b7));
          SetByte 000836 207;
          Let b8 = M[002620];
          SetByte 000837 LoByte(Widen(b8));
          SetByte 002620 9;
          TraceOperation 104258 (Call (Floc 022340) [Con -16129] Sp);
          PushFrame 104258;
          SetLocal 1 -16129;
          JumpCall: 022340, #actuals: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Jump: 104557
    }
  }
LocReturn 104258:
  PushStack call_result;
  TraceOperation 104265 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 104270 (Call (Floc 022320) [Con -15647,Con 24] Sp);
  PushFrame 104270;
  SetLocal 1 -15647;
  SetLocal 2 24;
  JumpCall: 022320, #actuals: 2
LocReturn 104270:
  PushStack call_result;
  TraceOperation 104278 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 104283 (Store (Con 167) (Con 3));
  SetByte 008210 0;
  SetByte 008211 3;
  TraceOperation 104286 (Call (Floc 022320) [Con 16277,Con 2] Sp);
  PushFrame 104286;
  SetLocal 1 16277;
  SetLocal 2 2;
  JumpCall: 022320, #actuals: 2
LocReturn 104286:
  PushStack call_result;
  TraceOperation 104294 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 104299 (Print "The universe goes crazy for a moment.");
  GamePrint "The universe goes crazy for a moment.";
  TraceOperation 104324 New_line;
  GamePrint "\n";
  TraceOperation 104325 New_line;
  GamePrint "\n";
  TraceOperation 104326 (Print_paddr (Var (Global 21)));
  Let b2 = M[007950];
  Let b3 = M[007951];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 104328 (Print_obj (Con 198));
  Let b4 = M[002540];
  Let b5 = M[002541];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  if (IsZeroByte(b6)) {
    GamePrint "";
    TraceOperation 104330 (Print ". The missiles have turned into a sperm whale");
    GamePrint ". The missiles have turned into a sperm whale";
    TraceOperation 104357 (Call (Floc 057772) [Con -12125] Sp);
    PushFrame 104357;
    SetLocal 1 -12125;
    JumpCall: 057772, #actuals: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b4,b5)),1));
    TraceOperation 104330 (Print ". The missiles have turned into a sperm whale");
    GamePrint ". The missiles have turned into a sperm whale";
    TraceOperation 104357 (Call (Floc 057772) [Con -12125] Sp);
    PushFrame 104357;
    SetLocal 1 -12125;
    JumpCall: 057772, #actuals: 1
  }
LocReturn 104357:
  PushStack call_result;
  TraceOperation 104364 (Print " The whale is currently plummeting toward");
  GamePrint " The whale is currently plummeting toward";
  TraceOperation 104385 (Print_paddr (Var (Global 17)));
  Let b1 = M[007942];
  Let b2 = M[007943];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 104387 (Print ". I hope this will teach you to listen to me when I say that legendary lost planets can be dangerous. I am proceeding with the pre-set landing instructions.\"\n\nFord, Zaphod, and ");
  GamePrint ". I hope this will teach you to listen to me when I say that legendary lost planets can be dangerous. I am proceeding with the pre-set landing instructions.\"\n\nFord, Zaphod, and ";
  TraceOperation 104494 (Print_obj (Con 194));
  Let b3 = M[002504];
  Let b4 = M[002505];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  if (IsZeroByte(b5)) {
    GamePrint "";
    TraceOperation 104496 (Print_ret " saunter by on their way back to the sauna. \"Good work, kid,\" says Zaphod, slamming you on the back.");
    GamePrint " saunter by on their way back to the sauna. \"Good work, kid,\" says Zaphod, slamming you on the back.\n";
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 1
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
    TraceOperation 104496 (Print_ret " saunter by on their way back to the sauna. \"Good work, kid,\" says Zaphod, slamming you on the back.");
    GamePrint " saunter by on their way back to the sauna. \"Good work, kid,\" says Zaphod, slamming you on the back.\n";
    PopFrame return_address_7;
    JumpReturn: return_address_7, result: 1
  }
LocOp 104557:
  TraceOperation 104557 (Call (Floc 022340) [Con -16129] Sp);
  PushFrame 104557;
  SetLocal 1 -16129;
  JumpCall: 022340, #actuals: 1
LocReturn 104557:
  PushStack call_result;
  TraceOperation 104564 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 104569 (Sub (Var (Global 1)) (Con 30) (Global 1));
  Let b2 = M[007910];
  Let b3 = M[007911];
  SetByte 007910 HiByte(Sub(MakeHiLo(b2,b3),30));
  SetByte 007911 LoByte(Sub(MakeHiLo(b2,b3),30));
  TraceOperation 104573 (Print_paddr (Var (Global 21)));
  Let b4 = M[007950];
  Let b5 = M[007951];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
  TraceOperation 104575 (Print_obj (Con 198));
  Let b6 = M[002540];
  Let b7 = M[002541];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  if (IsZeroByte(b8)) {
    GamePrint "";
    TraceOperation 104577 (Print ". Someone has activated a ");
    GamePrint ". Someone has activated a ";
    TraceOperation 104596 (Print_obj (Con 186));
    Let b9 = M[002432];
    Let b10 = M[002433];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    if (IsZeroByte(b11)) {
      GamePrint "";
      TraceOperation 104598 (Print " at");
      GamePrint " at";
      TraceOperation 104601 (Print_paddr (Var (Global 7)));
      Let b12 = M[007922];
      Let b13 = M[007923];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b12,b13)));
      TraceOperation 104603 (Print ", moving us 8 billion parsecs away from our destination, adding seven weeks to our trip. As if that isn't bad enough, all 300 members of the Fronurbdi Planetary Senate appeared in the ");
      GamePrint ", moving us 8 billion parsecs away from our destination, adding seven weeks to our trip. As if that isn't bad enough, all 300 members of the Fronurbdi Planetary Senate appeared in the ";
      TraceOperation 104718 (Print_obj (Con 178));
      Let b14 = M[002360];
      Let b15 = M[002361];
      Let b16 = M[Address(MakeHiLo(b14,b15))];
      if (IsZeroByte(b16)) {
        GamePrint "";
        TraceOperation 104720 (Call (Floc 057772) [Con -12121] Sp);
        PushFrame 104720;
        SetLocal 1 -12121;
        JumpCall: 057772, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b14,b15)),1));
        TraceOperation 104720 (Call (Floc 057772) [Con -12121] Sp);
        PushFrame 104720;
        SetLocal 1 -12121;
        JumpCall: 057772, #actuals: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b9,b10)),1));
      TraceOperation 104598 (Print " at");
      GamePrint " at";
      TraceOperation 104601 (Print_paddr (Var (Global 7)));
      Let b17 = M[007922];
      Let b18 = M[007923];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b17,b18)));
      TraceOperation 104603 (Print ", moving us 8 billion parsecs away from our destination, adding seven weeks to our trip. As if that isn't bad enough, all 300 members of the Fronurbdi Planetary Senate appeared in the ");
      GamePrint ", moving us 8 billion parsecs away from our destination, adding seven weeks to our trip. As if that isn't bad enough, all 300 members of the Fronurbdi Planetary Senate appeared in the ";
      TraceOperation 104718 (Print_obj (Con 178));
      Let b19 = M[002360];
      Let b20 = M[002361];
      Let b21 = M[Address(MakeHiLo(b19,b20))];
      if (IsZeroByte(b21)) {
        GamePrint "";
        TraceOperation 104720 (Call (Floc 057772) [Con -12121] Sp);
        PushFrame 104720;
        SetLocal 1 -12121;
        JumpCall: 057772, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b19,b20)),1));
        TraceOperation 104720 (Call (Floc 057772) [Con -12121] Sp);
        PushFrame 104720;
        SetLocal 1 -12121;
        JumpCall: 057772, #actuals: 1
      }
    }
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
    TraceOperation 104577 (Print ". Someone has activated a ");
    GamePrint ". Someone has activated a ";
    TraceOperation 104596 (Print_obj (Con 186));
    Let b22 = M[002432];
    Let b23 = M[002433];
    Let b24 = M[Address(MakeHiLo(b22,b23))];
    if (IsZeroByte(b24)) {
      GamePrint "";
      TraceOperation 104598 (Print " at");
      GamePrint " at";
      TraceOperation 104601 (Print_paddr (Var (Global 7)));
      Let b25 = M[007922];
      Let b26 = M[007923];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b25,b26)));
      TraceOperation 104603 (Print ", moving us 8 billion parsecs away from our destination, adding seven weeks to our trip. As if that isn't bad enough, all 300 members of the Fronurbdi Planetary Senate appeared in the ");
      GamePrint ", moving us 8 billion parsecs away from our destination, adding seven weeks to our trip. As if that isn't bad enough, all 300 members of the Fronurbdi Planetary Senate appeared in the ";
      TraceOperation 104718 (Print_obj (Con 178));
      Let b27 = M[002360];
      Let b28 = M[002361];
      Let b29 = M[Address(MakeHiLo(b27,b28))];
      if (IsZeroByte(b29)) {
        GamePrint "";
        TraceOperation 104720 (Call (Floc 057772) [Con -12121] Sp);
        PushFrame 104720;
        SetLocal 1 -12121;
        JumpCall: 057772, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b27,b28)),1));
        TraceOperation 104720 (Call (Floc 057772) [Con -12121] Sp);
        PushFrame 104720;
        SetLocal 1 -12121;
        JumpCall: 057772, #actuals: 1
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b22,b23)),1));
      TraceOperation 104598 (Print " at");
      GamePrint " at";
      TraceOperation 104601 (Print_paddr (Var (Global 7)));
      Let b30 = M[007922];
      Let b31 = M[007923];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b30,b31)));
      TraceOperation 104603 (Print ", moving us 8 billion parsecs away from our destination, adding seven weeks to our trip. As if that isn't bad enough, all 300 members of the Fronurbdi Planetary Senate appeared in the ");
      GamePrint ", moving us 8 billion parsecs away from our destination, adding seven weeks to our trip. As if that isn't bad enough, all 300 members of the Fronurbdi Planetary Senate appeared in the ";
      TraceOperation 104718 (Print_obj (Con 178));
      Let b32 = M[002360];
      Let b33 = M[002361];
      Let b34 = M[Address(MakeHiLo(b32,b33))];
      if (IsZeroByte(b34)) {
        GamePrint "";
        TraceOperation 104720 (Call (Floc 057772) [Con -12121] Sp);
        PushFrame 104720;
        SetLocal 1 -12121;
        JumpCall: 057772, #actuals: 1
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b32,b33)),1));
        TraceOperation 104720 (Call (Floc 057772) [Con -12121] Sp);
        PushFrame 104720;
        SetLocal 1 -12121;
        JumpCall: 057772, #actuals: 1
      }
    }
  }
LocReturn 104720:
  PushStack call_result;
  TraceOperation 104727 (Print_ret " I'm flushing them into space now, but who knows what sort of germs they've dragged into the ship? Everyone should take extra vitamins today.\"");
  GamePrint " I'm flushing them into space now, but who knows what sort of germs they've dragged into the ship? Everyone should take extra vitamins today.\"\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 104816:
  TraceOperation 104816 (Call (Floc 020662) [Con -16129] Sp);
  PushFrame 104816;
  SetLocal 1 -16129;
  JumpCall: 020662, #actuals: 1
LocReturn 104816:
  PushStack call_result;
  TraceOperation 104823 (Jz (Var Sp) (Branch T (Dloc 104849)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104849
  } else {
    TraceOperation 104826 (Store (Con 91) (Con 1));
    SetByte 008058 0;
    SetByte 008059 1;
    TraceOperation 104829 (Call (Floc 022340) [Con -16129] Sp);
    PushFrame 104829;
    SetLocal 1 -16129;
    JumpCall: 022340, #actuals: 1
  }
LocReturn 104829:
  PushStack call_result;
  TraceOperation 104836 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 104841 (Call (Floc 042734) [Con -12117] Sp);
  PushFrame 104841;
  SetLocal 1 -12117;
  JumpCall: 042734, #actuals: 1
LocReturn 104841:
  PushStack call_result;
  TraceOperation 104848 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 104849:
  TraceOperation 104849 (Je [Var (Global 208),Con 9] (Branch F (Dloc 104856)));
  Let b1 = M[008324];
  Let b2 = M[008325];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 104853 (Store (Con 223) (Con 1));
    SetByte 008322 0;
    SetByte 008323 1;
    Jump: 104856
  } else {
    Jump: 104856
  }
LocOp 104856:
  TraceOperation 104856 (Insert_obj (Con 177) (Con 219));
  Let b1 = M[002348];
  if (IsZero(Widen(b1))) {
    SetByte 002348 219;
    Let b2 = M[002728];
    SetByte 002349 LoByte(Widen(b2));
    SetByte 002728 177;
    TraceOperation 104859 (Insert_obj (Con 176) (Con 219));
    Let b3 = M[002339];
    if (IsZero(Widen(b3))) {
      SetByte 002339 219;
      Let b4 = M[002728];
      SetByte 002340 LoByte(Widen(b4));
      SetByte 002728 176;
      TraceOperation 104862 (Call (Floc 020718) [Var (Global 206)] Sp);
      Let b5 = M[008320];
      Let b6 = M[008321];
      PushFrame 104862;
      SetLocal 1 MakeHiLo(b5,b6);
      JumpCall: 020718, #actuals: 1
    } else {
      Let b7 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b7),176)) {
        Let b8 = M[002340];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b8));
        SetByte 002339 219;
        Let b9 = M[002728];
        SetByte 002340 LoByte(Widen(b9));
        SetByte 002728 176;
        TraceOperation 104862 (Call (Floc 020718) [Var (Global 206)] Sp);
        Let b10 = M[008320];
        Let b11 = M[008321];
        PushFrame 104862;
        SetLocal 1 MakeHiLo(b10,b11);
        JumpCall: 020718, #actuals: 1
      } else {
        Error: unlink/loop
      }
    }
  } else {
    Let b12 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b12),177)) {
      Let b13 = M[002349];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b13));
      SetByte 002348 219;
      Let b14 = M[002728];
      SetByte 002349 LoByte(Widen(b14));
      SetByte 002728 177;
      TraceOperation 104859 (Insert_obj (Con 176) (Con 219));
      Let b15 = M[002339];
      if (IsZero(Widen(b15))) {
        SetByte 002339 219;
        Let b16 = M[002728];
        SetByte 002340 LoByte(Widen(b16));
        SetByte 002728 176;
        TraceOperation 104862 (Call (Floc 020718) [Var (Global 206)] Sp);
        Let b17 = M[008320];
        Let b18 = M[008321];
        PushFrame 104862;
        SetLocal 1 MakeHiLo(b17,b18);
        JumpCall: 020718, #actuals: 1
      } else {
        Let b19 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
        if (Equal(Widen(b19),176)) {
          Let b20 = M[002340];
          SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b20));
          SetByte 002339 219;
          Let b21 = M[002728];
          SetByte 002340 LoByte(Widen(b21));
          SetByte 002728 176;
          TraceOperation 104862 (Call (Floc 020718) [Var (Global 206)] Sp);
          Let b22 = M[008320];
          Let b23 = M[008321];
          PushFrame 104862;
          SetLocal 1 MakeHiLo(b22,b23);
          JumpCall: 020718, #actuals: 1
        } else {
          Error: unlink/loop
        }
      }
    } else {
      Error: unlink/loop
    }
  }
LocReturn 104862:
  PushStack call_result;
  TraceOperation 104868 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 104870 New_line;
  GamePrint "\n";
  TraceOperation 104871 New_line;
  GamePrint "\n";
  TraceOperation 104872 (Call (Floc 042574) [Con 25] Sp);
  PushFrame 104872;
  SetLocal 1 25;
  JumpCall: 042574, #actuals: 1
LocReturn 104872:
  PushStack call_result;
  TraceOperation 104878 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 104879:
  TraceOperation 104879 (Print_ret "Nothing happens.");
  GamePrint "Nothing happens.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[660]--------------------------------------------------
LocRoutine 104892:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 104895
LocOp 104895:
  TraceOperation 104895 (Print "Lying on the deck is a plotter");
  GamePrint "Lying on the deck is a plotter";
  TraceOperation 104914 (Jz (Var (Global 209)) (Branch T (Dloc 104936)));
  Let b1 = M[008326];
  Let b2 = M[008327];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 104936
  } else {
    TraceOperation 104917 (Print " connected to a ");
    GamePrint " connected to a ";
    TraceOperation 104928 (Print_obj (Con 186));
    Let b3 = M[002432];
    Let b4 = M[002433];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 104930 (Print ".");
      GamePrint ".";
      TraceOperation 104933 (Jump 104939);
      Jump: 104939
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 104930 (Print ".");
      GamePrint ".";
      TraceOperation 104933 (Jump 104939);
      Jump: 104939
    }
  }
LocOp 104936:
  TraceOperation 104936 (Print ".");
  GamePrint ".";
  Jump: 104939
LocOp 104939:
  TraceOperation 104939 (Jz (Var (Global 208)) (Branch T (Dloc 104971)));
  Let b1 = M[008324];
  Let b2 = M[008325];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 104971
  } else {
    TraceOperation 104942 (Print " The plotter's ");
    GamePrint " The plotter's ";
    TraceOperation 104953 (Print_obj (Con 179));
    Let b3 = M[002369];
    Let b4 = M[002370];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 104955 (Print " is submerged in ");
      GamePrint " is submerged in ";
      TraceOperation 104966 (Print_obj (Var (Global 208)));
      Let b6 = M[008324];
      Let b7 = M[008325];
      Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),7)];
      Let b9 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),7),1)];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      if (IsZeroByte(b10)) {
        GamePrint "";
        TraceOperation 104968 (Print ".");
        GamePrint ".";
        Jump: 104971
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
        TraceOperation 104968 (Print ".");
        GamePrint ".";
        Jump: 104971
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 104955 (Print " is submerged in ");
      GamePrint " is submerged in ";
      TraceOperation 104966 (Print_obj (Var (Global 208)));
      Let b11 = M[008324];
      Let b12 = M[008325];
      Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),7)];
      Let b14 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),7),1)];
      Let b15 = M[Address(MakeHiLo(b13,b14))];
      if (IsZeroByte(b15)) {
        GamePrint "";
        TraceOperation 104968 (Print ".");
        GamePrint ".";
        Jump: 104971
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b13,b14)),1));
        TraceOperation 104968 (Print ".");
        GamePrint ".";
        Jump: 104971
      }
    }
  }
LocOp 104971:
  TraceOperation 104971 New_line;
  GamePrint "\n";
  TraceOperation 104972 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[661]--------------------------------------------------
LocRoutine 104974:
  MakeRoutineFrame 0;
  Jump: 104975
LocOp 104975:
  TraceOperation 104975 (Je [Var (Global 203),Con 61] (Branch F (Dloc 105064)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 104980 (Print "The ");
    GamePrint "The ";
    TraceOperation 104983 (Print_obj (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 104985 (Print " has a ");
      GamePrint " has a ";
      TraceOperation 104990 (Print_obj (Con 180));
      Let b8 = M[002378];
      Let b9 = M[002379];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      if (IsZeroByte(b10)) {
        GamePrint "";
        TraceOperation 104992 (Print " and a ");
        GamePrint " and a ";
        TraceOperation 104997 (Print_obj (Con 179));
        Let b11 = M[002369];
        Let b12 = M[002370];
        Let b13 = M[Address(MakeHiLo(b11,b12))];
        if (IsZeroByte(b13)) {
          GamePrint "";
          TraceOperation 104999 (Jz (Var (Global 208)) (Branch T (Dloc 105015)));
          Let b14 = M[008324];
          Let b15 = M[008325];
          if (IsZero(MakeHiLo(b14,b15))) {
            Jump: 105015
          } else {
            TraceOperation 105002 (Print " which is sitting in ");
            GamePrint " which is sitting in ";
            TraceOperation 105013 (Print_obj (Var (Global 208)));
            Let b16 = M[008324];
            Let b17 = M[008325];
            Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b16,b17),9)),7)];
            Let b19 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b16,b17),9)),7),1)];
            Let b20 = M[Address(MakeHiLo(b18,b19))];
            if (IsZeroByte(b20)) {
              GamePrint "";
              Jump: 105015
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b18,b19)),1));
              Jump: 105015
            }
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b11,b12)),1));
          TraceOperation 104999 (Jz (Var (Global 208)) (Branch T (Dloc 105015)));
          Let b21 = M[008324];
          Let b22 = M[008325];
          if (IsZero(MakeHiLo(b21,b22))) {
            Jump: 105015
          } else {
            TraceOperation 105002 (Print " which is sitting in ");
            GamePrint " which is sitting in ";
            TraceOperation 105013 (Print_obj (Var (Global 208)));
            Let b23 = M[008324];
            Let b24 = M[008325];
            Let b25 = M[Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),7)];
            Let b26 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),7),1)];
            Let b27 = M[Address(MakeHiLo(b25,b26))];
            if (IsZeroByte(b27)) {
              GamePrint "";
              Jump: 105015
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b25,b26)),1));
              Jump: 105015
            }
          }
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b8,b9)),1));
        TraceOperation 104992 (Print " and a ");
        GamePrint " and a ";
        TraceOperation 104997 (Print_obj (Con 179));
        Let b28 = M[002369];
        Let b29 = M[002370];
        Let b30 = M[Address(MakeHiLo(b28,b29))];
        if (IsZeroByte(b30)) {
          GamePrint "";
          TraceOperation 104999 (Jz (Var (Global 208)) (Branch T (Dloc 105015)));
          Let b31 = M[008324];
          Let b32 = M[008325];
          if (IsZero(MakeHiLo(b31,b32))) {
            Jump: 105015
          } else {
            TraceOperation 105002 (Print " which is sitting in ");
            GamePrint " which is sitting in ";
            TraceOperation 105013 (Print_obj (Var (Global 208)));
            Let b33 = M[008324];
            Let b34 = M[008325];
            Let b35 = M[Offset(Offset(000751,Mul(MakeHiLo(b33,b34),9)),7)];
            Let b36 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b33,b34),9)),7),1)];
            Let b37 = M[Address(MakeHiLo(b35,b36))];
            if (IsZeroByte(b37)) {
              GamePrint "";
              Jump: 105015
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b35,b36)),1));
              Jump: 105015
            }
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b28,b29)),1));
          TraceOperation 104999 (Jz (Var (Global 208)) (Branch T (Dloc 105015)));
          Let b38 = M[008324];
          Let b39 = M[008325];
          if (IsZero(MakeHiLo(b38,b39))) {
            Jump: 105015
          } else {
            TraceOperation 105002 (Print " which is sitting in ");
            GamePrint " which is sitting in ";
            TraceOperation 105013 (Print_obj (Var (Global 208)));
            Let b40 = M[008324];
            Let b41 = M[008325];
            Let b42 = M[Offset(Offset(000751,Mul(MakeHiLo(b40,b41),9)),7)];
            Let b43 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b40,b41),9)),7),1)];
            Let b44 = M[Address(MakeHiLo(b42,b43))];
            if (IsZeroByte(b44)) {
              GamePrint "";
              Jump: 105015
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b42,b43)),1));
              Jump: 105015
            }
          }
        }
      }
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 104985 (Print " has a ");
      GamePrint " has a ";
      TraceOperation 104990 (Print_obj (Con 180));
      Let b45 = M[002378];
      Let b46 = M[002379];
      Let b47 = M[Address(MakeHiLo(b45,b46))];
      if (IsZeroByte(b47)) {
        GamePrint "";
        TraceOperation 104992 (Print " and a ");
        GamePrint " and a ";
        TraceOperation 104997 (Print_obj (Con 179));
        Let b48 = M[002369];
        Let b49 = M[002370];
        Let b50 = M[Address(MakeHiLo(b48,b49))];
        if (IsZeroByte(b50)) {
          GamePrint "";
          TraceOperation 104999 (Jz (Var (Global 208)) (Branch T (Dloc 105015)));
          Let b51 = M[008324];
          Let b52 = M[008325];
          if (IsZero(MakeHiLo(b51,b52))) {
            Jump: 105015
          } else {
            TraceOperation 105002 (Print " which is sitting in ");
            GamePrint " which is sitting in ";
            TraceOperation 105013 (Print_obj (Var (Global 208)));
            Let b53 = M[008324];
            Let b54 = M[008325];
            Let b55 = M[Offset(Offset(000751,Mul(MakeHiLo(b53,b54),9)),7)];
            Let b56 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b53,b54),9)),7),1)];
            Let b57 = M[Address(MakeHiLo(b55,b56))];
            if (IsZeroByte(b57)) {
              GamePrint "";
              Jump: 105015
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b55,b56)),1));
              Jump: 105015
            }
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b48,b49)),1));
          TraceOperation 104999 (Jz (Var (Global 208)) (Branch T (Dloc 105015)));
          Let b58 = M[008324];
          Let b59 = M[008325];
          if (IsZero(MakeHiLo(b58,b59))) {
            Jump: 105015
          } else {
            TraceOperation 105002 (Print " which is sitting in ");
            GamePrint " which is sitting in ";
            TraceOperation 105013 (Print_obj (Var (Global 208)));
            Let b60 = M[008324];
            Let b61 = M[008325];
            Let b62 = M[Offset(Offset(000751,Mul(MakeHiLo(b60,b61),9)),7)];
            Let b63 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b60,b61),9)),7),1)];
            Let b64 = M[Address(MakeHiLo(b62,b63))];
            if (IsZeroByte(b64)) {
              GamePrint "";
              Jump: 105015
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b62,b63)),1));
              Jump: 105015
            }
          }
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b45,b46)),1));
        TraceOperation 104992 (Print " and a ");
        GamePrint " and a ";
        TraceOperation 104997 (Print_obj (Con 179));
        Let b65 = M[002369];
        Let b66 = M[002370];
        Let b67 = M[Address(MakeHiLo(b65,b66))];
        if (IsZeroByte(b67)) {
          GamePrint "";
          TraceOperation 104999 (Jz (Var (Global 208)) (Branch T (Dloc 105015)));
          Let b68 = M[008324];
          Let b69 = M[008325];
          if (IsZero(MakeHiLo(b68,b69))) {
            Jump: 105015
          } else {
            TraceOperation 105002 (Print " which is sitting in ");
            GamePrint " which is sitting in ";
            TraceOperation 105013 (Print_obj (Var (Global 208)));
            Let b70 = M[008324];
            Let b71 = M[008325];
            Let b72 = M[Offset(Offset(000751,Mul(MakeHiLo(b70,b71),9)),7)];
            Let b73 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b70,b71),9)),7),1)];
            Let b74 = M[Address(MakeHiLo(b72,b73))];
            if (IsZeroByte(b74)) {
              GamePrint "";
              Jump: 105015
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b72,b73)),1));
              Jump: 105015
            }
          }
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b65,b66)),1));
          TraceOperation 104999 (Jz (Var (Global 208)) (Branch T (Dloc 105015)));
          Let b75 = M[008324];
          Let b76 = M[008325];
          if (IsZero(MakeHiLo(b75,b76))) {
            Jump: 105015
          } else {
            TraceOperation 105002 (Print " which is sitting in ");
            GamePrint " which is sitting in ";
            TraceOperation 105013 (Print_obj (Var (Global 208)));
            Let b77 = M[008324];
            Let b78 = M[008325];
            Let b79 = M[Offset(Offset(000751,Mul(MakeHiLo(b77,b78),9)),7)];
            Let b80 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b77,b78),9)),7),1)];
            Let b81 = M[Address(MakeHiLo(b79,b80))];
            if (IsZeroByte(b81)) {
              GamePrint "";
              Jump: 105015
            } else {
              GamePrint GetText(Offset(Address(MakeHiLo(b79,b80)),1));
              Jump: 105015
            }
          }
        }
      }
    }
  } else {
    Jump: 105064
  }
LocOp 105015:
  TraceOperation 105015 (Jz (Var (Global 209)) (Branch T (Dloc 105054)));
  Let b1 = M[008326];
  Let b2 = M[008327];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 105054
  } else {
    TraceOperation 105018 (Print ". The short cord from the ");
    GamePrint ". The short cord from the ";
    TraceOperation 105033 (Print_obj (Con 186));
    Let b3 = M[002432];
    Let b4 = M[002433];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    if (IsZeroByte(b5)) {
      GamePrint "";
      TraceOperation 105035 (Print " is plugged in the receptacle");
      GamePrint " is plugged in the receptacle";
      Jump: 105054
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b3,b4)),1));
      TraceOperation 105035 (Print " is plugged in the receptacle");
      GamePrint " is plugged in the receptacle";
      Jump: 105054
    }
  }
LocOp 105054:
  TraceOperation 105054 (Print ".");
  GamePrint ".";
  TraceOperation 105057 (Call (Floc 057998) [] Sp);
  PushFrame 105057;
  JumpCall: 057998, #actuals: 0
LocReturn 105057:
  PushStack call_result;
  TraceOperation 105062 New_line;
  GamePrint "\n";
  TraceOperation 105063 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 105064:
  TraceOperation 105064 (Je [Var (Global 203),Con 41] (Branch F (Dloc 105081)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),41)) {
    TraceOperation 105068 (Je [Var (Global 202),Con 186] (Branch F (Dloc 105081)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),186)) {
      TraceOperation 105072 (Call (Floc 022042) [Con 41,Con 186,Con 182] Sp);
      PushFrame 105072;
      SetLocal 1 41;
      SetLocal 2 186;
      SetLocal 3 182;
      JumpCall: 022042, #actuals: 3
    } else {
      Jump: 105081
    }
  } else {
    Jump: 105081
  }
LocReturn 105072:
  PushStack call_result;
  TraceOperation 105080 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 105081:
  TraceOperation 105081 (Je [Var (Global 203),Con 163] (Branch F (Dloc 105104)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),163)) {
    TraceOperation 105085 (Jz (Var (Global 209)) (Branch T (Dloc 105100)));
    Let b3 = M[008326];
    Let b4 = M[008327];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 105100
    } else {
      TraceOperation 105088 (Store (Con 225) (Con 0));
      SetByte 008326 0;
      SetByte 008327 0;
      TraceOperation 105091 (Print_ret "Unplugged.");
      GamePrint "Unplugged.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    Jump: 105104
  }
LocOp 105100:
  TraceOperation 105100 (Print_paddr (Var (Global 61)));
  Let b1 = M[008030];
  Let b2 = M[008031];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 105102 New_line;
  GamePrint "\n";
  TraceOperation 105103 Rtrue;
  PopFrame return_address_3;
  JumpReturn: return_address_3, result: 1
LocOp 105104:
  TraceOperation 105104 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 105110 (Call (Floc 030950) [] Sp);
    PushFrame 105110;
    JumpCall: 030950, #actuals: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
LocReturn 105110:
  PushStack call_result;
  TraceOperation 105115 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[662]--------------------------------------------------
LocRoutine 105116:
  MakeRoutineFrame 0;
  Jump: 105117
LocOp 105117:
  TraceOperation 105117 (Je [Var (Global 203),Con 46] (Branch F (Dloc 105197)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 105122 (Je [Var (Global 202),Con 9,Con 204] (Branch F (Dloc 105197)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),9),Equal(MakeHiLo(b3,b4),204))) {
      TraceOperation 105129 (Jz (Var (Global 208)) (Branch T (Dloc 105158)));
      Let b5 = M[008324];
      Let b6 = M[008325];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 105158
      } else {
        TraceOperation 105132 (Print "But the ");
        GamePrint "But the ";
        TraceOperation 105139 (Print_obj (Con 179));
        Let b7 = M[002369];
        Let b8 = M[002370];
        Let b9 = M[Address(MakeHiLo(b7,b8))];
        if (IsZeroByte(b9)) {
          GamePrint "";
          TraceOperation 105141 (Print " is already in");
          GamePrint " is already in";
          TraceOperation 105148 (Call (Floc 043738) [Var (Global 208),Con 1] Sp);
          Let b10 = M[008324];
          Let b11 = M[008325];
          PushFrame 105148;
          SetLocal 1 MakeHiLo(b10,b11);
          SetLocal 2 1;
          JumpCall: 043738, #actuals: 2
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b7,b8)),1));
          TraceOperation 105141 (Print " is already in");
          GamePrint " is already in";
          TraceOperation 105148 (Call (Floc 043738) [Var (Global 208),Con 1] Sp);
          Let b12 = M[008324];
          Let b13 = M[008325];
          PushFrame 105148;
          SetLocal 1 MakeHiLo(b12,b13);
          SetLocal 2 1;
          JumpCall: 043738, #actuals: 2
        }
      }
    } else {
      Jump: 105197
    }
  } else {
    Jump: 105197
  }
LocReturn 105148:
  PushStack call_result;
  TraceOperation 105155 (Print_ret "!");
  GamePrint "!\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 105158:
  TraceOperation 105158 (Store (Con 224) (Var (Global 202)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  SetByte 008324 b1;
  SetByte 008325 b2;
  TraceOperation 105161 (Je [Var (Global 202),Con 9] (Branch F (Dloc 105190)));
  Let b3 = M[008312];
  Let b4 = M[008313];
  if (Equal(MakeHiLo(b3,b4),9)) {
    TraceOperation 105165 (Jz (Var (Global 100)) (Branch F (Dloc 105190)));
    Let b5 = M[008108];
    Let b6 = M[008109];
    if (IsZero(MakeHiLo(b5,b6))) {
      TraceOperation 105168 (Store (Con 116) (Con 1));
      SetByte 008108 0;
      SetByte 008109 1;
      TraceOperation 105171 (Call (Floc 021838) [Var (Global 233)] Sp);
      Let b7 = M[008374];
      Let b8 = M[008375];
      PushFrame 105171;
      SetLocal 1 MakeHiLo(b7,b8);
      JumpCall: 021838, #actuals: 1
    } else {
      Jump: 105190
    }
  } else {
    Jump: 105190
  }
LocReturn 105171:
  PushStack call_result;
  TraceOperation 105177 (Call (Floc 022320) [Con -22495,Con 3] Sp);
  PushFrame 105177;
  SetLocal 1 -22495;
  SetLocal 2 3;
  JumpCall: 022320, #actuals: 2
LocReturn 105177:
  PushStack call_result;
  TraceOperation 105185 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  Jump: 105190
LocOp 105190:
  TraceOperation 105190 (Print_ret "Done.");
  GamePrint "Done.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 105197:
  TraceOperation 105197 (Je [Var (Global 203),Con 61] (Branch F (Dloc 105231)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 105201 (Jz (Var (Global 208)) (Branch T (Dloc 105231)));
    Let b3 = M[008324];
    Let b4 = M[008325];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 105231
    } else {
      TraceOperation 105204 (Print "The ");
      GamePrint "The ";
      TraceOperation 105207 (Print_obj (Con 179));
      Let b5 = M[002369];
      Let b6 = M[002370];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      if (IsZeroByte(b7)) {
        GamePrint "";
        TraceOperation 105209 (Print " is suspended in the cup of ");
        GamePrint " is suspended in the cup of ";
        TraceOperation 105226 (Print_obj (Var (Global 208)));
        Let b8 = M[008324];
        Let b9 = M[008325];
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),7)];
        Let b11 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),7),1)];
        Let b12 = M[Address(MakeHiLo(b10,b11))];
        if (IsZeroByte(b12)) {
          GamePrint "";
          TraceOperation 105228 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_13;
          JumpReturn: return_address_13, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b10,b11)),1));
          TraceOperation 105228 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_14;
          JumpReturn: return_address_14, result: 1
        }
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
        TraceOperation 105209 (Print " is suspended in the cup of ");
        GamePrint " is suspended in the cup of ";
        TraceOperation 105226 (Print_obj (Var (Global 208)));
        Let b15 = M[008324];
        Let b16 = M[008325];
        Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),7)];
        Let b18 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),7),1)];
        Let b19 = M[Address(MakeHiLo(b17,b18))];
        if (IsZeroByte(b19)) {
          GamePrint "";
          TraceOperation 105228 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_20;
          JumpReturn: return_address_20, result: 1
        } else {
          GamePrint GetText(Offset(Address(MakeHiLo(b17,b18)),1));
          TraceOperation 105228 (Print_ret ".");
          GamePrint ".\n";
          PopFrame return_address_21;
          JumpReturn: return_address_21, result: 1
        }
      }
    }
  } else {
    Jump: 105231
  }
LocOp 105231:
  TraceOperation 105231 (Je [Var (Global 203),Con 123] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),123)) {
    TraceOperation 105235 (Jz (Var (Global 208)) (Branch T Dfalse));
    Let b3 = M[008324];
    Let b4 = M[008325];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 0
    } else {
      TraceOperation 105238 (Print "The ");
      GamePrint "The ";
      TraceOperation 105241 (Print_obj (Con 179));
      Let b6 = M[002369];
      Let b7 = M[002370];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      if (IsZeroByte(b8)) {
        GamePrint "";
        TraceOperation 105243 (Print " is no longer suspended in");
        GamePrint " is no longer suspended in";
        TraceOperation 105262 (Call (Floc 043738) [Var (Global 208),Con 1] Sp);
        Let b9 = M[008324];
        Let b10 = M[008325];
        PushFrame 105262;
        SetLocal 1 MakeHiLo(b9,b10);
        SetLocal 2 1;
        JumpCall: 043738, #actuals: 2
      } else {
        GamePrint GetText(Offset(Address(MakeHiLo(b6,b7)),1));
        TraceOperation 105243 (Print " is no longer suspended in");
        GamePrint " is no longer suspended in";
        TraceOperation 105262 (Call (Floc 043738) [Var (Global 208),Con 1] Sp);
        Let b11 = M[008324];
        Let b12 = M[008325];
        PushFrame 105262;
        SetLocal 1 MakeHiLo(b11,b12);
        SetLocal 2 1;
        JumpCall: 043738, #actuals: 2
      }
    }
  } else {
    PopFrame return_address_13;
    JumpReturn: return_address_13, result: 0
  }
LocReturn 105262:
  PushStack call_result;
  TraceOperation 105269 (Print ".");
  GamePrint ".";
  TraceOperation 105272 New_line;
  GamePrint "\n";
  TraceOperation 105273 (Store (Con 224) (Con 0));
  SetByte 008324 0;
  SetByte 008325 0;
  TraceOperation 105276 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[663]--------------------------------------------------
LocRoutine 105278:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 105281
LocOp 105281:
  TraceOperation 105281 (Je [Var (Local 1),Con 3] (Branch F (Dloc 105359)));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 105286 (Print "You are at the bottom of a gangway. A hatch below you is ");
    GamePrint "You are at the bottom of a gangway. A hatch below you is ";
    TraceOperation 105319 (Test_attr (Con 177) (Con 23) (Branch F (Dloc 105331)));
    Let b1 = M[002346];
    if (TestBit(b1,0)) {
      TraceOperation 105323 (Print "open");
      GamePrint "open";
      TraceOperation 105328 (Jump 105334);
      Jump: 105334
    } else {
      Jump: 105331
    }
  } else {
    Jump: 105359
  }
LocOp 105331:
  TraceOperation 105331 (Print "closed");
  GamePrint "closed";
  Jump: 105334
LocOp 105334:
  TraceOperation 105334 (Print_ret ". There is a small access space to starboard.");
  GamePrint ". There is a small access space to starboard.\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 105359:
  TraceOperation 105359 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 105363 (Set_attr (Con 177) (Con 28));
    Let b1 = M[002347];
    SetByte 002347 SetBit(b1,3);
    TraceOperation 105366 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 0
  }
--[664]--------------------------------------------------
LocRoutine 105368:
  MakeRoutineFrame 0;
  Jump: 105369
LocOp 105369:
  TraceOperation 105369 (Call (Floc 105444) [Con 31] Sp);
  PushFrame 105369;
  SetLocal 1 31;
  JumpCall: 105444, #actuals: 1
LocReturn 105369:
  PushStack call_result;
  TraceOperation 105375 (Jg (Var Sp) (Con 1) (Branch F (Dloc 105438)));
  PopStack popped1;
  if (GreaterThan(popped1,1)) {
    TraceOperation 105379 (Print "That entrance is so narrow that you probably couldn't pass by holding anything. Well, maybe ONE thing.");
    GamePrint "That entrance is so narrow that you probably couldn't pass by holding anything. Well, maybe ONE thing.";
    TraceOperation 105436 New_line;
    GamePrint "\n";
    TraceOperation 105437 Rfalse;
    PopFrame return_address_2;
    JumpReturn: return_address_2, result: 0
  } else {
    Jump: 105438
  }
LocOp 105438:
  TraceOperation 105438 (Clear_attr (Con 177) (Con 28));
  Let b1 = M[002347];
  SetByte 002347 ClearBit(b1,3);
  TraceOperation 105441 (Ret (Con 175));
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: 175
--[665]--------------------------------------------------
LocRoutine 105444:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 105451
LocOp 105451:
  TraceOperation 105451 (Get_child (Var (Local 1)) (Local 2) (Branch T (Dloc 105455)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(1),9)),6)];
  SetLocal 2 Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 105455
  } else {
    Jump: 105455
  }
LocOp 105455:
  TraceOperation 105455 (Jz (Var (Local 2)) (Branch F (Dloc 105460)));
  if (IsZero(GetLocal(2))) {
    TraceOperation 105458 (Ret (Var (Local 3)));
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: GetLocal(3)
  } else {
    Jump: 105460
  }
LocOp 105460:
  TraceOperation 105460 (Test_attr (Var (Local 2)) (Con 9) (Branch T (Dloc 105474)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),1)];
  if (TestBit(b1,6)) {
    Jump: 105474
  } else {
    TraceOperation 105464 (Test_attr (Var (Local 2)) (Con 22) (Branch T (Dloc 105474)));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),2)];
    if (TestBit(b2,1)) {
      Jump: 105474
    } else {
      TraceOperation 105468 (Je [Var (Local 2),Con 111] (Branch T (Dloc 105474)));
      if (Equal(GetLocal(2),111)) {
        Jump: 105474
      } else {
        TraceOperation 105472 (Inc (Con 3));
        SetLocal 3 Add(GetLocal(3),1);
        Jump: 105474
      }
    }
  }
LocOp 105474:
  TraceOperation 105474 (Get_child (Var (Local 2)) Sp (Branch F (Dloc 105488)));
  Let b1 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),6)];
  PushStack Widen(b1);
  if (IsZero(Widen(b1))) {
    TraceOperation 105488 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 105492)));
    Let b2 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),5)];
    SetLocal 2 Widen(b2);
    if (IsZero(Widen(b2))) {
      TraceOperation 105492 (Jump 105455);
      Jump: 105455
    } else {
      TraceOperation 105492 (Jump 105455);
      Jump: 105455
    }
  } else {
    TraceOperation 105478 (Call (Floc 105444) [Var (Local 2)] Sp);
    PushFrame 105478;
    SetLocal 1 GetLocal(2);
    JumpCall: 105444, #actuals: 1
  }
LocReturn 105478:
  PushStack call_result;
  TraceOperation 105484 (Add (Var (Local 3)) (Var Sp) (Local 3));
  PopStack popped1;
  SetLocal 3 Add(GetLocal(3),popped1);
  TraceOperation 105488 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 105492)));
  Let b2 = M[Offset(Offset(000751,Mul(GetLocal(2),9)),5)];
  SetLocal 2 Widen(b2);
  if (IsZero(Widen(b2))) {
    TraceOperation 105492 (Jump 105455);
    Jump: 105455
  } else {
    TraceOperation 105492 (Jump 105455);
    Jump: 105455
  }
--[666]--------------------------------------------------
LocRoutine 105496:
  MakeRoutineFrame 0;
  Jump: 105497
LocOp 105497:
  TraceOperation 105497 (Je [Var (Global 0),Con 178] (Branch T (Dloc 105519)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),178)) {
    Jump: 105519
  } else {
    TraceOperation 105501 (Je [Var (Global 203),Con 61,Con 39,Con 103] (Branch T (Dloc 105512)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),61),Equal(MakeHiLo(b3,b4),39)),Equal(MakeHiLo(b3,b4),103))) {
      Jump: 105512
    } else {
      TraceOperation 105508 (Je [Var (Global 203),Con 159] (Branch F (Dloc 105519)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (Equal(MakeHiLo(b5,b6),159)) {
        Jump: 105512
      } else {
        Jump: 105519
      }
    }
  }
LocOp 105512:
  TraceOperation 105512 (Call (Floc 057596) [Con 177] Sp);
  PushFrame 105512;
  SetLocal 1 177;
  JumpCall: 057596, #actuals: 1
LocReturn 105512:
  PushStack call_result;
  TraceOperation 105518 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 105519:
  TraceOperation 105519 (Je [Var (Global 203),Con 38,Con 103] (Branch F (Dloc 105633)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 105526 (Jz (Var (Global 214)) (Branch F (Dloc 105633)));
    Let b3 = M[008336];
    Let b4 = M[008337];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 105530 (Print_ret "Loud sirens blare, fantastically bright red lights flash from all sides, and a soft female voice mentions that opening this hatch in space will evacuate the air from the ship.");
      GamePrint "Loud sirens blare, fantastically bright red lights flash from all sides, and a soft female voice mentions that opening this hatch in space will evacuate the air from the ship.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    } else {
      Jump: 105633
    }
  } else {
    Jump: 105633
  }
LocOp 105633:
  TraceOperation 105633 (Je [Var (Global 203),Con 38,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 105639 (Test_attr (Con 177) (Con 23) (Branch T Dfalse));
    Let b3 = M[002346];
    if (TestBit(b3,0)) {
      PopFrame return_address_4;
      JumpReturn: return_address_4, result: 0
    } else {
      TraceOperation 105643 (Print_ret "The hatch appears to be jammed shut.");
      GamePrint "The hatch appears to be jammed shut.\n";
      PopFrame return_address_5;
      JumpReturn: return_address_5, result: 1
    }
  } else {
    PopFrame return_address_6;
    JumpReturn: return_address_6, result: 0
  }
--[667]--------------------------------------------------
LocRoutine 105666:
  MakeRoutineFrame 0;
  Jump: 105667
LocOp 105667:
  TraceOperation 105667 (Je [Var (Global 0),Con 175] (Branch T (Dloc 105689)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),175)) {
    Jump: 105689
  } else {
    TraceOperation 105671 (Je [Var (Global 203),Con 159,Con 139,Con 61] (Branch T (Dloc 105682)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),159),Equal(MakeHiLo(b3,b4),139)),Equal(MakeHiLo(b3,b4),61))) {
      Jump: 105682
    } else {
      TraceOperation 105678 (Je [Var (Global 203),Con 125] (Branch F (Dloc 105689)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (Equal(MakeHiLo(b5,b6),125)) {
        Jump: 105682
      } else {
        Jump: 105689
      }
    }
  }
LocOp 105682:
  TraceOperation 105682 (Call (Floc 057596) [Con 176] Sp);
  PushFrame 105682;
  SetLocal 1 176;
  JumpCall: 057596, #actuals: 1
LocReturn 105682:
  PushStack call_result;
  TraceOperation 105688 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
LocOp 105689:
  TraceOperation 105689 (Je [Var (Global 203),Con 125] (Branch F (Dloc 105701)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),125)) {
    TraceOperation 105693 (Call (Floc 022042) [Con 125,Con 177] Sp);
    PushFrame 105693;
    SetLocal 1 125;
    SetLocal 2 177;
    JumpCall: 022042, #actuals: 2
  } else {
    Jump: 105701
  }
LocReturn 105693:
  PushStack call_result;
  TraceOperation 105700 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 105701:
  TraceOperation 105701 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 105705 (Print_ret "I don't even understand it, and I'm a computer!");
    GamePrint "I don't even understand it, and I'm a computer!\n";
    PopFrame return_address_3;
    JumpReturn: return_address_3, result: 1
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
--[668]--------------------------------------------------
LocRoutine 105730:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 105733
LocOp 105733:
  TraceOperation 105733 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  if (Equal(GetLocal(1),3)) {
    TraceOperation 105737 (Print "This tiny area, with an exit to port, is for working on the hatch ");
    GamePrint "This tiny area, with an exit to port, is for working on the hatch ";
    TraceOperation 105774 (Print_obj (Con 176));
    Let b1 = M[002342];
    Let b2 = M[002343];
    Let b3 = M[Address(MakeHiLo(b1,b2))];
    if (IsZeroByte(b3)) {
      GamePrint "";
      TraceOperation 105776 (Print ", which is vastly more complicated than your rather ordinary intelligence can comprehend. ");
      GamePrint ", which is vastly more complicated than your rather ordinary intelligence can comprehend. ";
      TraceOperation 105831 (Call (Floc 022042) [Con 61,Con 42] Sp);
      PushFrame 105831;
      SetLocal 1 61;
      SetLocal 2 42;
      JumpCall: 022042, #actuals: 2
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
      TraceOperation 105776 (Print ", which is vastly more complicated than your rather ordinary intelligence can comprehend. ");
      GamePrint ", which is vastly more complicated than your rather ordinary intelligence can comprehend. ";
      TraceOperation 105831 (Call (Floc 022042) [Con 61,Con 42] Sp);
      PushFrame 105831;
      SetLocal 1 61;
      SetLocal 2 42;
      JumpCall: 022042, #actuals: 2
    }
  } else {
    PopFrame return_address_4;
    JumpReturn: return_address_4, result: 0
  }
LocReturn 105831:
  PushStack call_result;
  TraceOperation 105838 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[669]--------------------------------------------------
LocRoutine 105840:
  MakeRoutineFrame 0;
  Jump: 105841
LocOp 105841:
  TraceOperation 105841 (Je [Var (Global 202),Con 48] (Branch F (Dloc 105854)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),48)) {
    TraceOperation 105845 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 42] Sp);
    Let b3 = M[008314];
    Let b4 = M[008315];
    Let b5 = M[008310];
    Let b6 = M[008311];
    PushFrame 105845;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 MakeHiLo(b5,b6);
    SetLocal 3 42;
    JumpCall: 022042, #actuals: 3
  } else {
    Jump: 105854
  }
LocReturn 105845:
  PushStack call_result;
  TraceOperation 105853 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
LocOp 105854:
  TraceOperation 105854 (Call (Floc 022042) [Var (Global 203),Con 42,Var (Global 202)] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008312];
  Let b4 = M[008313];
  PushFrame 105854;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 42;
  SetLocal 3 MakeHiLo(b3,b4);
  JumpCall: 022042, #actuals: 3
LocReturn 105854:
  PushStack call_result;
  TraceOperation 105862 Rtrue;
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[670]--------------------------------------------------
LocRoutine 105864:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 105867
LocOp 105867:
  TraceOperation 105867 (Je [Var (Local 1),Con 2] (Branch F (Dloc 106020)));
  if (Equal(GetLocal(1),2)) {
    TraceOperation 105872 (Print "You step onto the landing ramp leading down toward the surface of");
    GamePrint "You step onto the landing ramp leading down toward the surface of";
    TraceOperation 105907 (Print_paddr (Var (Global 17)));
    Let b1 = M[007942];
    Let b2 = M[007943];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
    TraceOperation 105909 (Print ". ");
    GamePrint ". ";
    TraceOperation 105912 (Print_paddr (Var (Global 21)));
    Let b3 = M[007950];
    Let b4 = M[007951];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 105914 (Print_obj (Con 198));
    Let b5 = M[002540];
    Let b6 = M[002541];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    if (IsZeroByte(b7)) {
      GamePrint "";
      TraceOperation 105916 (Print ". Someone is leaving the ship on a strange planet without wrapping up all nice and warm. It'll all end in tears, I just know it...\" The voice fades behind you.");
      GamePrint ". Someone is leaving the ship on a strange planet without wrapping up all nice and warm. It'll all end in tears, I just know it...\" The voice fades behind you.";
      TraceOperation 106017 New_line;
      GamePrint "\n";
      TraceOperation 106018 New_line;
      GamePrint "\n";
      TraceOperation 106019 Rtrue;
      PopFrame return_address_8;
      JumpReturn: return_address_8, result: 1
    } else {
      GamePrint GetText(Offset(Address(MakeHiLo(b5,b6)),1));
      TraceOperation 105916 (Print ". Someone is leaving the ship on a strange planet without wrapping up all nice and warm. It'll all end in tears, I just know it...\" The voice fades behind you.");
      GamePrint ". Someone is leaving the ship on a strange planet without wrapping up all nice and warm. It'll all end in tears, I just know it...\" The voice fades behind you.";
      TraceOperation 106017 New_line;
      GamePrint "\n";
      TraceOperation 106018 New_line;
      GamePrint "\n";
      TraceOperation 106019 Rtrue;
      PopFrame return_address_9;
      JumpReturn: return_address_9, result: 1
    }
  } else {
    Jump: 106020
  }
LocOp 106020:
  TraceOperation 106020 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  if (Equal(GetLocal(1),6)) {
    TraceOperation 106024 New_line;
    GamePrint "\n";
    TraceOperation 106025 (Print "Slowly, nervously, you step downwards, the cold thin air rasping in your lungs. You set one single foot on the ancient dust -- and almost instantly the most incredible adventure starts which you'll have to buy the next game to find out about.");
    GamePrint "Slowly, nervously, you step downwards, the cold thin air rasping in your lungs. You set one single foot on the ancient dust -- and almost instantly the most incredible adventure starts which you'll have to buy the next game to find out about.";
    TraceOperation 106170 New_line;
    GamePrint "\n";
    TraceOperation 106171 New_line;
    GamePrint "\n";
    TraceOperation 106172 (Call (Floc 029196) [] Sp);
    PushFrame 106172;
    JumpCall: 029196, #actuals: 0
  } else {
    PopFrame return_address_1;
    JumpReturn: return_address_1, result: 0
  }
LocReturn 106172:
  PushStack call_result;
  TraceOperation 106177 New_line;
  GamePrint "\n";
  TraceOperation 106178 (Print "By the way, there WAS a causal relationship between your taking the ");
  GamePrint "By the way, there WAS a causal relationship between your taking the ";
  TraceOperation 106217 (Print_obj (Con 19));
  Let b1 = M[000929];
  Let b2 = M[000930];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  if (IsZeroByte(b3)) {
    GamePrint "";
    TraceOperation 106219 (Print " and the tree collapsing at the very beginning of the game. We apologise for this slight inaccuracy.");
    GamePrint " and the tree collapsing at the very beginning of the game. We apologise for this slight inaccuracy.";
    TraceOperation 106276 New_line;
    GamePrint "\n";
    TraceOperation 106277 Quit;
    Quit
  } else {
    GamePrint GetText(Offset(Address(MakeHiLo(b1,b2)),1));
    TraceOperation 106219 (Print " and the tree collapsing at the very beginning of the game. We apologise for this slight inaccuracy.");
    GamePrint " and the tree collapsing at the very beginning of the game. We apologise for this slight inaccuracy.";
    TraceOperation 106276 New_line;
    GamePrint "\n";
    TraceOperation 106277 Quit;
    Quit
  }
--[671]--------------------------------------------------
LocRoutine 106794:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 5214;
  }
  Jump: 106797
LocOp 106797:
  TraceOperation 106797 (Test_attr (Var (Global 76)) (Var (Local 1)) (Branch F (Dloc 100848)));
  Let b1 = M[008060];
  Let b2 = M[008061];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),Div8(GetLocal(1)))];
  if (TestBit(b3,SevenMinus(LoByte(Mod(GetLocal(1),8))))) {
    TraceOperation 106802 (Jl (Var (Global 150)) (Var (Global 77)) (Branch F Dtrue));
    Let b4 = M[008208];
    Let b5 = M[008209];
    Let b6 = M[008062];
    Let b7 = M[008063];
    if (LessThan(MakeHiLo(b4,b5),MakeHiLo(b6,b7))) {
      TraceOperation 106806 (Jin (Con 180) (Con 95) (Branch F (Dloc 100183)));
      Let b8 = M[002375];
      if (Equal(95,Widen(b8))) {
        TraceOperation 106811 (Test_attr (Con 0) (Var (Global 71)) (Branch F (Dloc 111304)));
        Let b9 = M[008050];
        Let b10 = M[008051];
        Let b11 = M[Offset(000751,Div8(MakeHiLo(b9,b10)))];
        if (TestBit(b11,SevenMinus(LoByte(Mod(MakeHiLo(b9,b10),8))))) {
          TraceOperation 106816 (Store (Var (Global 71)) (Con 27));
          Let b12 = M[008050];
          Let b13 = M[008051];
          if (IsZeroByte(b13)) {
            Note "\"Op.Store/DSp\"";
            PopStack popped14;
            PushStack 27;
            TraceOperation 106819 (Add (Con 220) (Var (Global 162)) (Global 5));
            Let b15 = M[008232];
            Let b16 = M[008233];
            SetByte 007918 HiByte(Add(220,MakeHiLo(b15,b16)));
            SetByte 007919 LoByte(Add(220,MakeHiLo(b15,b16)));
            TraceOperation 106823 (Inc_chk (Var (Global 52)) (Var (Global 163)) (Branch F (Dloc 112431)));
            Let b17 = M[008012];
            Let b18 = M[008013];
            if (IsZeroByte(b18)) {
              PopStack popped19;
              Let b20 = M[008234];
              Let b21 = M[008235];
              PushStack Add(popped19,1);
              if (GreaterThanEqual(popped19,MakeHiLo(b20,b21))) {
                TraceOperation 106828 Rtrue;
                PopFrame return_address_22;
                JumpReturn: return_address_22, result: 1
              } else {
                Jump: 112431
              }
            } else {
              if (LessThanByte(b18,16)) {
                Let b23 = M[008234];
                Let b24 = M[008235];
                SetLocal b18 Add(GetLocal(b18),1);
                if (GreaterThanEqual(GetLocal(b18),MakeHiLo(b23,b24))) {
                  TraceOperation 106828 Rtrue;
                  PopFrame return_address_25;
                  JumpReturn: return_address_25, result: 1
                } else {
                  Jump: 112431
                }
              } else {
                Let b26 = M[Offset(007908,Mul(2,Widen(MinusByte(b18,16))))];
                Let b27 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b18,16)))),1)];
                Let b28 = M[008234];
                Let b29 = M[008235];
                SetByte Offset(007908,Mul(2,Widen(MinusByte(b18,16)))) HiByte(Add(MakeHiLo(b26,b27),1));
                SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b18,16)))),1) LoByte(Add(MakeHiLo(b26,b27),1));
                if (GreaterThanEqual(MakeHiLo(b26,b27),MakeHiLo(b28,b29))) {
                  TraceOperation 106828 Rtrue;
                  PopFrame return_address_30;
                  JumpReturn: return_address_30, result: 1
                } else {
                  Jump: 112431
                }
              }
            }
          } else {
            if (LessThanByte(b13,16)) {
              SetLocal b13 27;
              TraceOperation 106819 (Add (Con 220) (Var (Global 162)) (Global 5));
              Let b31 = M[008232];
              Let b32 = M[008233];
              SetByte 007918 HiByte(Add(220,MakeHiLo(b31,b32)));
              SetByte 007919 LoByte(Add(220,MakeHiLo(b31,b32)));
              TraceOperation 106823 (Inc_chk (Var (Global 52)) (Var (Global 163)) (Branch F (Dloc 112431)));
              Let b33 = M[008012];
              Let b34 = M[008013];
              if (IsZeroByte(b34)) {
                PopStack popped35;
                Let b36 = M[008234];
                Let b37 = M[008235];
                PushStack Add(popped35,1);
                if (GreaterThanEqual(popped35,MakeHiLo(b36,b37))) {
                  TraceOperation 106828 Rtrue;
                  PopFrame return_address_38;
                  JumpReturn: return_address_38, result: 1
                } else {
                  Jump: 112431
                }
              } else {
                if (LessThanByte(b34,16)) {
                  Let b39 = M[008234];
                  Let b40 = M[008235];
                  SetLocal b34 Add(GetLocal(b34),1);
                  if (GreaterThanEqual(GetLocal(b34),MakeHiLo(b39,b40))) {
                    TraceOperation 106828 Rtrue;
                    PopFrame return_address_41;
                    JumpReturn: return_address_41, result: 1
                  } else {
                    Jump: 112431
                  }
                } else {
                  Let b42 = M[Offset(007908,Mul(2,Widen(MinusByte(b34,16))))];
                  Let b43 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b34,16)))),1)];
                  Let b44 = M[008234];
                  Let b45 = M[008235];
                  SetByte Offset(007908,Mul(2,Widen(MinusByte(b34,16)))) HiByte(Add(MakeHiLo(b42,b43),1));
                  SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b34,16)))),1) LoByte(Add(MakeHiLo(b42,b43),1));
                  if (GreaterThanEqual(MakeHiLo(b42,b43),MakeHiLo(b44,b45))) {
                    TraceOperation 106828 Rtrue;
                    PopFrame return_address_46;
                    JumpReturn: return_address_46, result: 1
                  } else {
                    Jump: 112431
                  }
                }
              }
            } else {
              SetByte Offset(007908,Mul(2,Widen(MinusByte(b13,16)))) 0;
              SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b13,16)))),1) 27;
              TraceOperation 106819 (Add (Con 220) (Var (Global 162)) (Global 5));
              Let b47 = M[008232];
              Let b48 = M[008233];
              SetByte 007918 HiByte(Add(220,MakeHiLo(b47,b48)));
              SetByte 007919 LoByte(Add(220,MakeHiLo(b47,b48)));
              TraceOperation 106823 (Inc_chk (Var (Global 52)) (Var (Global 163)) (Branch F (Dloc 112431)));
              Let b49 = M[008012];
              Let b50 = M[008013];
              if (IsZeroByte(b50)) {
                PopStack popped51;
                Let b52 = M[008234];
                Let b53 = M[008235];
                PushStack Add(popped51,1);
                if (GreaterThanEqual(popped51,MakeHiLo(b52,b53))) {
                  TraceOperation 106828 Rtrue;
                  PopFrame return_address_54;
                  JumpReturn: return_address_54, result: 1
                } else {
                  Jump: 112431
                }
              } else {
                if (LessThanByte(b50,16)) {
                  Let b55 = M[008234];
                  Let b56 = M[008235];
                  SetLocal b50 Add(GetLocal(b50),1);
                  if (GreaterThanEqual(GetLocal(b50),MakeHiLo(b55,b56))) {
                    TraceOperation 106828 Rtrue;
                    PopFrame return_address_57;
                    JumpReturn: return_address_57, result: 1
                  } else {
                    Jump: 112431
                  }
                } else {
                  Let b58 = M[Offset(007908,Mul(2,Widen(MinusByte(b50,16))))];
                  Let b59 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b50,16)))),1)];
                  Let b60 = M[008234];
                  Let b61 = M[008235];
                  SetByte Offset(007908,Mul(2,Widen(MinusByte(b50,16)))) HiByte(Add(MakeHiLo(b58,b59),1));
                  SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b50,16)))),1) LoByte(Add(MakeHiLo(b58,b59),1));
                  if (GreaterThanEqual(MakeHiLo(b58,b59),MakeHiLo(b60,b61))) {
                    TraceOperation 106828 Rtrue;
                    PopFrame return_address_62;
                    JumpReturn: return_address_62, result: 1
                  } else {
                    Jump: 112431
                  }
                }
              }
            }
          }
        } else {
          Jump: 111304
        }
      } else {
        Jump: 100183
      }
    } else {
      PopFrame return_address_63;
      JumpReturn: return_address_63, result: 1
    }
  } else {
    Jump: 100848
  }
--[672]--------------------------------------------------
LocRoutine 108152:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 -26016;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 6454;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 8472;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 13136;
        }
      }
    }
  }
  Jump: 108161
LocOp 108161:
  TraceOperation 108161 (Dec_chk (Con 101) (Var (Global 194)) (Branch F (Dloc 102788)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  Let b3 = M[008296];
  Let b4 = M[008297];
  if (LessThanEqual(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    SetByte 008078 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008079 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 108166 (Insert_obj (Var (Global 113)) (Con 24));
    Let b5 = M[008134];
    Let b6 = M[008135];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
    if (IsZero(Widen(b7))) {
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) 24;
      Let b8 = M[000973];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b8));
      SetByte 000973 b6;
      TraceOperation 108169 (Jump 128657);
      Jump: 128657
    } else {
      Let b9 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b9),MakeHiLo(b5,b6))) {
        Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b10));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) 24;
        Let b11 = M[000973];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b11));
        SetByte 000973 b6;
        TraceOperation 108169 (Jump 128657);
        Jump: 128657
      } else {
        Error: unlink/loop
      }
    }
  } else {
    SetByte 008078 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008079 LoByte(Sub(MakeHiLo(b1,b2),1));
    Jump: 102788
  }
--[673]--------------------------------------------------
LocRoutine 108450:
  MakeRoutineFrame 0;
  Jump: 108451
LocOp 108451:
  TraceOperation 108451 (Dec_chk (Con 58) (Var (Global 90)) (Branch F (Dloc 108507)));
  Let b1 = M[007992];
  Let b2 = M[007993];
  Let b3 = M[008088];
  Let b4 = M[008089];
  if (LessThanEqual(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    SetByte 007992 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 007993 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 108455 Rfalse;
    PopFrame return_address_5;
    JumpReturn: return_address_5, result: 0
  } else {
    SetByte 007992 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 007993 LoByte(Sub(MakeHiLo(b1,b2),1));
    Jump: 108507
  }
--[674]--------------------------------------------------
LocRoutine 108584:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 17700;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -11755;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 4505;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 27253;
        }
      }
    }
  }
  Jump: 108593
LocOp 108593:
  TraceOperation 108593 (Print_ret "914");
  GamePrint "914\n";
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 1
--[675]--------------------------------------------------
LocRoutine 109720:
  MakeRoutineFrame 0;
  Jump: 109721
LocOp 109721:
  TraceOperation 109721 (Ret (Con 24211));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 24211
--[676]--------------------------------------------------
LocRoutine 109792:
  MakeRoutineFrame 0;
  Jump: 109793
LocOp 109793:
  TraceOperation 109793 (Ret (Con 24211));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 24211
--[677]--------------------------------------------------
LocRoutine 111364:
  MakeRoutineFrame 0;
  Jump: 111365
LocOp 111365:
  TraceOperation 111365 (Jump 116298);
  Jump: 116298
--[678]--------------------------------------------------
LocRoutine 111594:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 -2046;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 -3046;
    }
  }
  Jump: 111599
LocOp 111599:
  TraceOperation 111599 (Ret (Con 11266));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 11266
--[679]--------------------------------------------------
LocRoutine 111844:
  MakeRoutineFrame 0;
  Jump: 111845
LocOp 111845:
  TraceOperation 111845 (Ret (Con 27));
  PopFrame return_address_1;
  JumpReturn: return_address_1, result: 27
--[680]--------------------------------------------------
LocRoutine 111866:
  MakeRoutineFrame 0;
  Jump: 111867
LocOp 111867:
  TraceOperation 111867 (Jump 118562);
  Jump: 118562
--[681]--------------------------------------------------
LocRoutine 112006:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 2652;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -21190;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 -9951;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 -23499;
        }
      }
    }
  }
  Jump: 112015
LocOp 112015:
  TraceOperation 112015 Ret_popped;
  PopStack popped1;
  PopFrame return_address_2;
  JumpReturn: return_address_2, result: popped1
--[682]--------------------------------------------------
LocRoutine 112024:
  MakeRoutineFrame 0;
  Jump: 112025
LocOp 112025:
  TraceOperation 112025 (Jump 118720);
  Jump: 118720
