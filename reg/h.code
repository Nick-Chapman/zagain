Code for 577 routines
--------------------------------------------------
LocRoutine 010094:
  MakeRoutineFrame 0;
  Jump: 010095
LocOp 010095:
  TraceOperation 010095 (Print_ret " cthe         gkthe c        9 sdon't         g Ford k ");
  GamePrint " cthe         gkthe c        9 sdon't         g Ford k \n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 010824:
  MakeRoutineFrame 0;
  Jump: 010825
LocOp 010825:
  TraceOperation 010825 (Jump 010826);
  Jump: 010826
--------------------------------------------------
LocRoutine 010832:
  MakeRoutineFrame 0;
  Jump: 010833
LocOp 010833:
  TraceOperation 010833 (Jump 011091);
  Jump: 011091
--------------------------------------------------
LocRoutine 014300:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 30;
  }
  Jump: 014303
LocOp 014303:
  TraceOperation 014303 (Test_attr (Con 170) (Var (Global 53)) (Branch F Dtrue));
  Let b1 = M[008014];
  Let b2 = M[008015];
  Let b3 = M[Offset(002281,Div8(MakeHiLo(b1,b2)))];
  if (TestBit(b3,SevenMinus(LoByte(Mod(MakeHiLo(b1,b2),8))))) {
    TraceOperation 014307 (Ret (Var Sp));
    PopStack popped4;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult popped4;
    JumpIndirect: (return) return_address_5
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 015218:
  MakeRoutineFrame 0;
  Jump: 015219
LocOp 015219:
  TraceOperation 015219 (Jin (Con 146) (Var (Global 152)) (Branch T (Dloc 008438)));
  Let b1 = M[008212];
  Let b2 = M[008213];
  Let b3 = M[002069];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 008438
  } else {
    TraceOperation 015224 (Je [Con 0,Con 38] (Branch T (Dloc 020004)));
    TraceOperation 015229 (Inc_chk (Con 34) (Var (Global 74)) (Branch F (Dloc 015270)));
    Let b4 = M[007944];
    Let b5 = M[007945];
    Let b6 = M[008056];
    Let b7 = M[008057];
    SetByte 007944 HiByte(Add(MakeHiLo(b4,b5),1));
    SetByte 007945 LoByte(Add(MakeHiLo(b4,b5),1));
    if (GreaterThanEqual(MakeHiLo(b4,b5),MakeHiLo(b6,b7))) {
      TraceOperation 015234 (Get_parent (Con 148) (Global 149));
      Let b8 = M[002087];
      SetByte 008206 HiByte(Widen(b8));
      SetByte 008207 LoByte(Widen(b8));
      TraceOperation 015237 (Je [Var (Global 232),Con 0] (Branch F (Dloc 008731)));
      Let b9 = M[008372];
      Let b10 = M[008373];
      if (Equal(MakeHiLo(b9,b10),0)) {
        TraceOperation 015242 (Print_addr (Con 25));
        Note "<static Gettext address>";
        GamePrint "yqx";
        TraceOperation 015244 (Dec_chk (Con 239) (Con 0) (Branch F (Dloc 008738)));
        Let b11 = M[008354];
        Let b12 = M[008355];
        if (LessThanEqual(MakeHiLo(b11,b12),0)) {
          SetByte 008354 HiByte(Sub(MakeHiLo(b11,b12),1));
          SetByte 008355 LoByte(Sub(MakeHiLo(b11,b12),1));
          TraceOperation 015249 (Ret (Con 42));
          PopFrame;
          PopReturnAddress return_address_13;
          SetResult 42;
          JumpIndirect: (return) return_address_13
        } else {
          SetByte 008354 HiByte(Sub(MakeHiLo(b11,b12),1));
          SetByte 008355 LoByte(Sub(MakeHiLo(b11,b12),1));
          Jump: 008738
        }
      } else {
        Jump: 008731
      }
    } else {
      Jump: 015270
    }
  }
--------------------------------------------------
LocRoutine 015462:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 1834;
  }
  Jump: 015465
LocOp 015465:
  TraceOperation 015465 (Loadw (Var (Global 195)) (Var (Global 181)) (Global 49));
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[008270];
  Let b4 = M[008271];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  SetByte 008006 b5;
  SetByte 008007 b6;
  TraceOperation 015469 (Jz (Var Sp) (Branch F (Dloc 009960)));
  PopStack popped7;
  if (IsZero(popped7)) {
    TraceOperation 015473 (Print_obj (Var (Global 213)));
    Let b8 = M[008334];
    Let b9 = M[008335];
    Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),7)];
    Let b11 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),7),1)];
    Let b12 = M[Address(MakeHiLo(b10,b11))];
    Let ite_res13 = Ite((IsZeroByte(b12),"",GetText(Offset(Address(MakeHiLo(b10,b11)),1))));
    GamePrint ite_res13;
    TraceOperation 015475 (Je [Var (Global 145),Con 0] (Branch F (Dloc 010064)));
    Let b14 = M[008198];
    Let b15 = M[008199];
    if (Equal(MakeHiLo(b14,b15),0)) {
      TraceOperation 015480 (Ret (Con 46));
      PopFrame;
      PopReturnAddress return_address_16;
      SetResult 46;
      JumpIndirect: (return) return_address_16
    } else {
      Jump: 010064
    }
  } else {
    Jump: 009960
  }
--------------------------------------------------
LocRoutine 015862:
  MakeRoutineFrame 0;
  Jump: 015863
LocOp 015863:
  TraceOperation 015863 (Loadb (Con 165) (Var (Global 132)) (Global 149));
  Let b1 = M[008172];
  Let b2 = M[008173];
  Let b3 = M[Offset(000165,MakeHiLo(b1,b2))];
  SetByte 008206 HiByte(Widen(b3));
  SetByte 008207 LoByte(Widen(b3));
  TraceOperation 015867 (Je [Var (Global 115),Con 0] (Branch F (Dloc 011958)));
  Let b4 = M[008138];
  Let b5 = M[008139];
  if (Equal(MakeHiLo(b4,b5),0)) {
    TraceOperation 015872 (Print_ret "n  2sgalact");
    GamePrint "n  2sgalact\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 011958
  }
--------------------------------------------------
LocRoutine 016044:
  MakeRoutineFrame 0;
  Jump: 016045
LocOp 016045:
  TraceOperation 016045 (Get_prop_addr (Con 230) (Var (Global 213)) (Global 195));
  Let b1 = M[008334];
  Let b2 = M[008335];
  Let b3 = M[002828];
  Let b4 = M[002829];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      SetByte 008298 0;
      SetByte 008299 0;
    } else {
      if (Equal(MakeHiLo(b1,b2),Widen(BwAnd(b8,31)))) {
        SetByte 008298 HiByte(DeAddress(Offset(Address(loop_var6),1)));
        SetByte 008299 LoByte(DeAddress(Offset(Address(loop_var6),1)));
      } else {
        Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
        Goto: Label 7
      }
    }
  }
  TraceOperation 016049 (Jz (Con 256) (Branch F (Dloc 012702)));
  Jump: 012702
--------------------------------------------------
LocRoutine 016408:
  MakeRoutineFrame 0;
  Jump: 016409
LocOp 016409:
  TraceOperation 016409 (Div (Con 87) (Var (Global 180)) (Global 149));
  Let b1 = M[008268];
  Let b2 = M[008269];
  SetByte 008206 HiByte(Div(87,MakeHiLo(b1,b2)));
  SetByte 008207 LoByte(Div(87,MakeHiLo(b1,b2)));
  TraceOperation 016413 (Je [Var (Global 219),Con 0] (Branch F (Dloc 014325)));
  Let b3 = M[008346];
  Let b4 = M[008347];
  if (Equal(MakeHiLo(b3,b4),0)) {
    TraceOperation 016418 (Print_obj (Var (Global 232)));
    Let b5 = M[008372];
    Let b6 = M[008373];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7)];
    Let b8 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7),1)];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
    GamePrint ite_res10;
    TraceOperation 016420 (Jl (Con 24) (Var Sp) (Branch F (Dloc 014332)));
    PopStack popped11;
    if (LessThan(24,popped11)) {
      TraceOperation 016425 (Print_obj (Var (Global 236)));
      Let b12 = M[008380];
      Let b13 = M[008381];
      Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),7)];
      Let b15 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),7),1)];
      Let b16 = M[Address(MakeHiLo(b14,b15))];
      Let ite_res17 = Ite((IsZeroByte(b16),"",GetText(Offset(Address(MakeHiLo(b14,b15)),1))));
      GamePrint ite_res17;
      TraceOperation 016427 (Jl (Con 22) (Var Sp) (Branch F (Dloc 014547)));
      PopStack popped18;
      if (LessThan(22,popped18)) {
        TraceOperation 016432 (Get_prop_len (Con 165) (Global 176));
        Let b19 = M[000164];
        SetByte 008260 HiByte(Add(Widen(ShiftR(b19,5)),1));
        SetByte 008261 LoByte(Add(Widen(ShiftR(b19,5)),1));
        TraceOperation 016435 (Je [Con 120,Con 56] (Branch T (Dloc 014590)));
        TraceOperation 016440 (Inc (Var (Global 176)));
        Let b20 = M[008260];
        Let b21 = M[008261];
        if (IsZeroByte(b21)) {
          PopStack popped22;
          PushStack Add(popped22,1);
        } else {
          if (LessThanByte(b21,16)) {
            GetLocal b21 localb21_23;
            SetLocal b21 Add(localb21_23,1);
          } else {
            Let b24 = M[Offset(007908,Mul(2,Widen(MinusByte(b21,16))))];
            Let b25 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b21,16)))),1)];
            SetByte Offset(007908,Mul(2,Widen(MinusByte(b21,16)))) HiByte(Add(MakeHiLo(b24,b25),1));
            SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b21,16)))),1) LoByte(Add(MakeHiLo(b24,b25),1));
          }
        }
        TraceOperation 016442 (Je [Con 120,Con 57] (Branch F (Dloc 012048)));
        Jump: 012048
      } else {
        Jump: 014547
      }
    } else {
      Jump: 014332
    }
  } else {
    Jump: 014325
  }
--------------------------------------------------
LocRoutine 016744:
  MakeRoutineFrame 0;
  Jump: 016745
LocOp 016745:
  TraceOperation 016745 (Dec_chk (Var (Global 194)) (Con 212) (Branch T (Dloc 009964)));
  Let b1 = M[008296];
  Let b2 = M[008297];
  if (IsZeroByte(b2)) {
    PopStack popped3;
    if (LessThanEqual(popped3,212)) {
      PushStack Sub(popped3,1);
      Jump: 009964
    } else {
      PushStack Sub(popped3,1);
      TraceOperation 016750 (Je [Con 0,Con 68] (Branch T (Dloc 016775)));
      TraceOperation 016754 Rfalse;
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    }
  } else {
    if (LessThanByte(b2,16)) {
      GetLocal b2 localb2_5;
      if (LessThanEqual(localb2_5,212)) {
        SetLocal b2 Sub(localb2_5,1);
        Jump: 009964
      } else {
        SetLocal b2 Sub(localb2_5,1);
        TraceOperation 016750 (Je [Con 0,Con 68] (Branch T (Dloc 016775)));
        TraceOperation 016754 Rfalse;
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 0;
        JumpIndirect: (return) return_address_6
      }
    } else {
      Let b7 = M[Offset(007908,Mul(2,Widen(MinusByte(b2,16))))];
      Let b8 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b2,16)))),1)];
      if (LessThanEqual(MakeHiLo(b7,b8),212)) {
        SetByte Offset(007908,Mul(2,Widen(MinusByte(b2,16)))) HiByte(Sub(MakeHiLo(b7,b8),1));
        SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b2,16)))),1) LoByte(Sub(MakeHiLo(b7,b8),1));
        Jump: 009964
      } else {
        SetByte Offset(007908,Mul(2,Widen(MinusByte(b2,16)))) HiByte(Sub(MakeHiLo(b7,b8),1));
        SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b2,16)))),1) LoByte(Sub(MakeHiLo(b7,b8),1));
        TraceOperation 016750 (Je [Con 0,Con 68] (Branch T (Dloc 016775)));
        TraceOperation 016754 Rfalse;
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 0;
        JumpIndirect: (return) return_address_9
      }
    }
  }
--------------------------------------------------
LocRoutine 017212:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 74;
  }
  Jump: 017215
LocOp 017215:
  TraceOperation 017215 (Ret (Con 168));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 168;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 018606:
  MakeRoutineFrame 0;
  Jump: 018607
LocOp 018607:
  TraceOperation 018607 (Je [Var (Global 56),Var (Global 218)] (Branch T (Dloc 018651)));
  Let b1 = M[008020];
  Let b2 = M[008021];
  Let b3 = M[008344];
  Let b4 = M[008345];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 018651
  } else {
    TraceOperation 018611 (Je [Var (Global 220),Con 0] (Branch F (Dloc 018646)));
    Let b5 = M[008348];
    Let b6 = M[008349];
    if (Equal(MakeHiLo(b5,b6),0)) {
      TraceOperation 018615 (Or (Var (Global 218)) (Con 238) (Global 18));
      Let b7 = M[008344];
      Let b8 = M[008345];
      SetByte 007944 HiByte(Or(MakeHiLo(b7,b8),238));
      SetByte 007945 LoByte(Or(MakeHiLo(b7,b8),238));
      TraceOperation 018619 Ret_popped;
      PopStack popped9;
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult popped9;
      JumpIndirect: (return) return_address_10
    } else {
      Jump: 018646
    }
  }
--------------------------------------------------
LocRoutine 018746:
  MakeRoutineFrame 0;
  Jump: 018747
LocOp 018747:
  TraceOperation 018747 (Je [Var (Global 158),Var (Global 196)] (Branch T (Dloc 011966)));
  Let b1 = M[008224];
  Let b2 = M[008225];
  Let b3 = M[008300];
  Let b4 = M[008301];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 011966
  } else {
    TraceOperation 018752 (Je [Con 0,Con 97] (Branch T (Dloc 014359)));
    TraceOperation 018757 Ret_popped;
    PopStack popped5;
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult popped5;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 018998:
  MakeRoutineFrame 0;
  Jump: 018999
LocOp 018999:
  TraceOperation 018999 (Jl (Var (Global 100)) (Var (Global 205)) (Branch T (Dloc 019020)));
  Let b1 = M[008108];
  Let b2 = M[008109];
  Let b3 = M[008318];
  Let b4 = M[008319];
  if (LessThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 019020
  } else {
    TraceOperation 019003 (Jz (Con 256) (Branch F (Dloc 019039)));
    Jump: 019039
  }
--------------------------------------------------
LocRoutine 019018:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 98;
  }
  Jump: 019021
LocOp 019021:
  TraceOperation 019021 (Load (Con -15031) (Global 18));
  Let b1 = M[008022];
  Let b2 = M[008023];
  SetByte 007944 b1;
  SetByte 007945 b2;
  TraceOperation 019025 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 019116:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 98;
  }
  Jump: 019119
LocOp 019119:
  TraceOperation 019119 (Print_obj (Var (Global 153)));
  Let b1 = M[008214];
  Let b2 = M[008215];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 019121 (Inc_chk (Con 34) (Var (Global 55)) (Branch F (Dloc 019222)));
  Let b7 = M[007944];
  Let b8 = M[007945];
  Let b9 = M[008018];
  Let b10 = M[008019];
  SetByte 007944 HiByte(Add(MakeHiLo(b7,b8),1));
  SetByte 007945 LoByte(Add(MakeHiLo(b7,b8),1));
  if (GreaterThanEqual(MakeHiLo(b7,b8),MakeHiLo(b9,b10))) {
    TraceOperation 019126 (Print_obj (Var (Global 153)));
    Let b11 = M[008214];
    Let b12 = M[008215];
    Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),7)];
    Let b14 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),7),1)];
    Let b15 = M[Address(MakeHiLo(b13,b14))];
    Let ite_res16 = Ite((IsZeroByte(b15),"",GetText(Offset(Address(MakeHiLo(b13,b14)),1))));
    GamePrint ite_res16;
    TraceOperation 019128 (Test (Con 128) (Var (Local 1)) (Branch F (Dloc 019229)));
    GetLocal 1 local1_17;
    if (Equal(And(128,local1_17),local1_17)) {
      TraceOperation 019133 (Print_obj (Var (Global 206)));
      Let b18 = M[008320];
      Let b19 = M[008321];
      Let b20 = M[Offset(Offset(000751,Mul(MakeHiLo(b18,b19),9)),7)];
      Let b21 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b18,b19),9)),7),1)];
      Let b22 = M[Address(MakeHiLo(b20,b21))];
      Let ite_res23 = Ite((IsZeroByte(b22),"",GetText(Offset(Address(MakeHiLo(b20,b21)),1))));
      GamePrint ite_res23;
      TraceOperation 019135 (Inc_chk (Var (Global 18)) (Con 56) (Branch F (Dloc 019236)));
      Let b24 = M[007944];
      Let b25 = M[007945];
      if (IsZeroByte(b25)) {
        PopStack popped26;
        PushStack Add(popped26,1);
        if (GreaterThanEqual(popped26,56)) {
          TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
          Let b27 = M[008272];
          Let b28 = M[008273];
          if (IsZeroByte(b28)) {
            PopStack popped29;
            PushStack popped29;
            SetByte 007950 HiByte(popped29);
            SetByte 007951 LoByte(popped29);
          } else {
            if (LessThanByte(b28,16)) {
              GetLocal b28 localb28_30;
              SetByte 007950 HiByte(localb28_30);
              SetByte 007951 LoByte(localb28_30);
            } else {
              Let b31 = M[Offset(007908,Mul(2,Widen(MinusByte(b28,16))))];
              Let b32 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b28,16)))),1)];
              SetByte 007950 b31;
              SetByte 007951 b32;
            }
          }
          TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
          Let b33 = M[008284];
          Let b34 = M[008285];
          if (Equal(MakeHiLo(b33,b34),0)) {
            TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
            Let b35 = M[008284];
            Let b36 = M[008285];
            if (IsZeroByte(b36)) {
              PopStack popped37;
              PushStack popped37;
              SetByte 008206 HiByte(popped37);
              SetByte 008207 LoByte(popped37);
            } else {
              if (LessThanByte(b36,16)) {
                GetLocal b36 localb36_38;
                SetByte 008206 HiByte(localb36_38);
                SetByte 008207 LoByte(localb36_38);
              } else {
                Let b39 = M[Offset(007908,Mul(2,Widen(MinusByte(b36,16))))];
                Let b40 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b36,16)))),1)];
                SetByte 008206 b39;
                SetByte 008207 b40;
              }
            }
            TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
            Let b41 = M[008330];
            Let b42 = M[008331];
            if (Equal(MakeHiLo(b41,b42),0)) {
              TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
              Let b43 = M[008318];
              Let b44 = M[008319];
              if (IsZeroByte(b44)) {
                PopStack popped45;
                PushStack popped45;
                SetByte 008014 HiByte(popped45);
                SetByte 008015 LoByte(popped45);
              } else {
                if (LessThanByte(b44,16)) {
                  GetLocal b44 localb44_46;
                  SetByte 008014 HiByte(localb44_46);
                  SetByte 008015 LoByte(localb44_46);
                } else {
                  Let b47 = M[Offset(007908,Mul(2,Widen(MinusByte(b44,16))))];
                  Let b48 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b44,16)))),1)];
                  SetByte 008014 b47;
                  SetByte 008015 b48;
                }
              }
              TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
              Jump: 019193
            } else {
              Jump: 019186
            }
          } else {
            Jump: 019179
          }
        } else {
          Jump: 019236
        }
      } else {
        if (LessThanByte(b25,16)) {
          GetLocal b25 localb25_49;
          SetLocal b25 Add(localb25_49,1);
          if (GreaterThanEqual(localb25_49,56)) {
            TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
            Let b50 = M[008272];
            Let b51 = M[008273];
            if (IsZeroByte(b51)) {
              PopStack popped52;
              PushStack popped52;
              SetByte 007950 HiByte(popped52);
              SetByte 007951 LoByte(popped52);
            } else {
              if (LessThanByte(b51,16)) {
                GetLocal b51 localb51_53;
                SetByte 007950 HiByte(localb51_53);
                SetByte 007951 LoByte(localb51_53);
              } else {
                Let b54 = M[Offset(007908,Mul(2,Widen(MinusByte(b51,16))))];
                Let b55 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b51,16)))),1)];
                SetByte 007950 b54;
                SetByte 007951 b55;
              }
            }
            TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
            Let b56 = M[008284];
            Let b57 = M[008285];
            if (Equal(MakeHiLo(b56,b57),0)) {
              TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
              Let b58 = M[008284];
              Let b59 = M[008285];
              if (IsZeroByte(b59)) {
                PopStack popped60;
                PushStack popped60;
                SetByte 008206 HiByte(popped60);
                SetByte 008207 LoByte(popped60);
              } else {
                if (LessThanByte(b59,16)) {
                  GetLocal b59 localb59_61;
                  SetByte 008206 HiByte(localb59_61);
                  SetByte 008207 LoByte(localb59_61);
                } else {
                  Let b62 = M[Offset(007908,Mul(2,Widen(MinusByte(b59,16))))];
                  Let b63 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b59,16)))),1)];
                  SetByte 008206 b62;
                  SetByte 008207 b63;
                }
              }
              TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
              Let b64 = M[008330];
              Let b65 = M[008331];
              if (Equal(MakeHiLo(b64,b65),0)) {
                TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                Let b66 = M[008318];
                Let b67 = M[008319];
                if (IsZeroByte(b67)) {
                  PopStack popped68;
                  PushStack popped68;
                  SetByte 008014 HiByte(popped68);
                  SetByte 008015 LoByte(popped68);
                } else {
                  if (LessThanByte(b67,16)) {
                    GetLocal b67 localb67_69;
                    SetByte 008014 HiByte(localb67_69);
                    SetByte 008015 LoByte(localb67_69);
                  } else {
                    Let b70 = M[Offset(007908,Mul(2,Widen(MinusByte(b67,16))))];
                    Let b71 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b67,16)))),1)];
                    SetByte 008014 b70;
                    SetByte 008015 b71;
                  }
                }
                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                Jump: 019193
              } else {
                Jump: 019186
              }
            } else {
              Jump: 019179
            }
          } else {
            Jump: 019236
          }
        } else {
          Let b72 = M[Offset(007908,Mul(2,Widen(MinusByte(b25,16))))];
          Let b73 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b25,16)))),1)];
          SetByte Offset(007908,Mul(2,Widen(MinusByte(b25,16)))) HiByte(Add(MakeHiLo(b72,b73),1));
          SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b25,16)))),1) LoByte(Add(MakeHiLo(b72,b73),1));
          if (GreaterThanEqual(MakeHiLo(b72,b73),56)) {
            TraceOperation 019140 (Load (Var (Global 182)) (Global 21));
            Let b74 = M[008272];
            Let b75 = M[008273];
            if (IsZeroByte(b75)) {
              PopStack popped76;
              PushStack popped76;
              SetByte 007950 HiByte(popped76);
              SetByte 007951 LoByte(popped76);
            } else {
              if (LessThanByte(b75,16)) {
                GetLocal b75 localb75_77;
                SetByte 007950 HiByte(localb75_77);
                SetByte 007951 LoByte(localb75_77);
              } else {
                Let b78 = M[Offset(007908,Mul(2,Widen(MinusByte(b75,16))))];
                Let b79 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b75,16)))),1)];
                SetByte 007950 b78;
                SetByte 007951 b79;
              }
            }
            TraceOperation 019143 (Je [Var (Global 188),Con 0] (Branch F (Dloc 019179)));
            Let b80 = M[008284];
            Let b81 = M[008285];
            if (Equal(MakeHiLo(b80,b81),0)) {
              TraceOperation 019147 (Load (Var (Global 188)) (Global 149));
              Let b82 = M[008284];
              Let b83 = M[008285];
              if (IsZeroByte(b83)) {
                PopStack popped84;
                PushStack popped84;
                SetByte 008206 HiByte(popped84);
                SetByte 008207 LoByte(popped84);
              } else {
                if (LessThanByte(b83,16)) {
                  GetLocal b83 localb83_85;
                  SetByte 008206 HiByte(localb83_85);
                  SetByte 008207 LoByte(localb83_85);
                } else {
                  Let b86 = M[Offset(007908,Mul(2,Widen(MinusByte(b83,16))))];
                  Let b87 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b83,16)))),1)];
                  SetByte 008206 b86;
                  SetByte 008207 b87;
                }
              }
              TraceOperation 019150 (Je [Var (Global 211),Con 0] (Branch F (Dloc 019186)));
              Let b88 = M[008330];
              Let b89 = M[008331];
              if (Equal(MakeHiLo(b88,b89),0)) {
                TraceOperation 019154 (Load (Var (Global 205)) (Global 53));
                Let b90 = M[008318];
                Let b91 = M[008319];
                if (IsZeroByte(b91)) {
                  PopStack popped92;
                  PushStack popped92;
                  SetByte 008014 HiByte(popped92);
                  SetByte 008015 LoByte(popped92);
                } else {
                  if (LessThanByte(b91,16)) {
                    GetLocal b91 localb91_93;
                    SetByte 008014 HiByte(localb91_93);
                    SetByte 008015 LoByte(localb91_93);
                  } else {
                    Let b94 = M[Offset(007908,Mul(2,Widen(MinusByte(b91,16))))];
                    Let b95 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b91,16)))),1)];
                    SetByte 008014 b94;
                    SetByte 008015 b95;
                  }
                }
                TraceOperation 019157 (Jz (Con 256) (Branch F (Dloc 019193)));
                Jump: 019193
              } else {
                Jump: 019186
              }
            } else {
              Jump: 019179
            }
          } else {
            Jump: 019236
          }
        }
      }
    } else {
      Jump: 019229
    }
  } else {
    Jump: 019222
  }
--------------------------------------------------
LocRoutine 019292:
  MakeRoutineFrame 0;
  Jump: 019293
LocOp 019293:
  TraceOperation 019293 (Jg (Var (Global 26)) (Var (Global 221)) (Branch F (Dloc 019314)));
  Let b1 = M[007960];
  Let b2 = M[007961];
  Let b3 = M[008350];
  Let b4 = M[008351];
  if (GreaterThan(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 019297 (Jl (Con 81) (Var Sp) (Branch F (Dloc 019334)));
    PopStack popped5;
    if (LessThan(81,popped5)) {
      TraceOperation 019301 (Add (Con 200) (Var (Global 184)) (Global 112));
      Let b6 = M[008276];
      Let b7 = M[008277];
      SetByte 008132 HiByte(Add(200,MakeHiLo(b6,b7)));
      SetByte 008133 LoByte(Add(200,MakeHiLo(b6,b7)));
      TraceOperation 019305 (Je [Con 0,Con 99] (Branch F (Dloc 016441)));
      Jump: 016441
    } else {
      Jump: 019334
    }
  } else {
    Jump: 019314
  }
--------------------------------------------------
LocRoutine 020054:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 109;
  }
  Jump: 020057
LocOp 020057:
  TraceOperation 020057 (Div (Var (Global 209)) (Con 212) (Global 49));
  Let b1 = M[008326];
  Let b2 = M[008327];
  SetByte 008006 HiByte(Div(MakeHiLo(b1,b2),212));
  SetByte 008007 LoByte(Div(MakeHiLo(b1,b2),212));
  TraceOperation 020061 (Jz (Con 110) (Branch F (Dloc 013377)));
  Jump: 013377
--------------------------------------------------
LocRoutine 020230:
  MakeRoutineFrame 0;
  Jump: 020231
LocOp 020231:
  TraceOperation 020231 (Get_prop (Var (Global 150)) (Var (Global 212)) (Global 149));
  Let b1 = M[008208];
  Let b2 = M[008209];
  Let b3 = M[008332];
  Let b4 = M[008333];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let loop_var8 = DeAddress(Offset(Address(MakeHiLo(b5,b6)),Add(Mul(2,Widen(b7)),1)));
  Label 9: {
    Let b10 = M[Address(loop_var8)];
    if (IsZeroByte(b10)) {
      Let b11 = M[Offset(000698,Mul(2,Sub(MakeHiLo(b3,b4),1)))];
      Let b12 = M[Offset(Offset(000698,Mul(2,Sub(MakeHiLo(b3,b4),1))),1)];
      SetByte 008206 b11;
      SetByte 008207 b12;
    } else {
      if (Equal(MakeHiLo(b3,b4),Widen(BwAnd(b10,31)))) {
        if (Equal(Add(Widen(ShiftR(b10,5)),1),2)) {
          Let b13 = M[Offset(Address(loop_var8),1)];
          Let b14 = M[Offset(Offset(Address(loop_var8),1),1)];
          SetByte 008206 b13;
          SetByte 008207 b14;
        } else {
          Let b15 = M[Offset(Address(loop_var8),1)];
          SetByte 008206 HiByte(Widen(b15));
          SetByte 008207 LoByte(Widen(b15));
        }
      } else {
        Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),Add(Widen(ShiftR(b10,5)),1)));
        Goto: Label 9
      }
    }
  }
  TraceOperation 020235 (Je [Var (Global 233),Con 0] (Branch F (Dloc 020286)));
  Let b16 = M[008374];
  Let b17 = M[008375];
  if (Equal(MakeHiLo(b16,b17),0)) {
    TraceOperation 020239 (Dec (Var (Global 212)));
    Let b18 = M[008332];
    Let b19 = M[008333];
    if (IsZeroByte(b19)) {
      PopStack popped20;
      PushStack Sub(popped20,1);
    } else {
      if (LessThanByte(b19,16)) {
        GetLocal b19 localb19_21;
        SetLocal b19 Sub(localb19_21,1);
      } else {
        Let b22 = M[Offset(007908,Mul(2,Widen(MinusByte(b19,16))))];
        Let b23 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b19,16)))),1)];
        SetByte Offset(007908,Mul(2,Widen(MinusByte(b19,16)))) HiByte(Sub(MakeHiLo(b22,b23),1));
        SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b19,16)))),1) LoByte(Sub(MakeHiLo(b22,b23),1));
      }
    }
    TraceOperation 020241 Ret_popped;
    PopStack popped24;
    PopFrame;
    PopReturnAddress return_address_25;
    SetResult popped24;
    JumpIndirect: (return) return_address_25
  } else {
    Jump: 020286
  }
--------------------------------------------------
LocRoutine 020662:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 020671
LocOp 020671:
  TraceOperation 020671 (Add (Var (Global 224)) (Con 210) (Local 3));
  Let b1 = M[008356];
  Let b2 = M[008357];
  SetLocal 3 Add(MakeHiLo(b1,b2),210);
  TraceOperation 020675 (Add (Var (Global 224)) (Var (Global 223)) (Local 2));
  Let b3 = M[008356];
  Let b4 = M[008357];
  Let b5 = M[008354];
  Let b6 = M[008355];
  SetLocal 2 Add(MakeHiLo(b3,b4),MakeHiLo(b5,b6));
  Jump: 020679
LocOp 020679:
  TraceOperation 020679 (Je [Var (Local 2),Var (Local 3)] (Branch T Dfalse));
  GetLocal 2 local2_1;
  GetLocal 3 local3_2;
  if (Equal(local2_1,local3_2)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 020683 (Loadw (Var (Local 2)) (Con 2) Sp);
    GetLocal 2 local2_4;
    Let b5 = M[Offset(Address(local2_4),4)];
    Let b6 = M[Offset(Offset(Address(local2_4),4),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 020687 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 020710)));
    PopStack popped7;
    GetLocal 1 local1_8;
    if (Equal(popped7,local1_8)) {
      TraceOperation 020691 (Loadw (Var (Local 2)) (Con 0) Sp);
      GetLocal 2 local2_9;
      Let b10 = M[Offset(Address(local2_9),0)];
      Let b11 = M[Offset(Offset(Address(local2_9),0),1)];
      PushStack MakeHiLo(b10,b11);
      TraceOperation 020695 (Jz (Var Sp) (Branch T Dfalse));
      PopStack popped12;
      if (IsZero(popped12)) {
        PopFrame;
        PopReturnAddress return_address_13;
        SetResult 0;
        JumpIndirect: (return) return_address_13
      } else {
        TraceOperation 020698 (Loadw (Var (Local 2)) (Con 1) (Local 4));
        GetLocal 2 local2_14;
        Let b15 = M[Offset(Address(local2_14),2)];
        Let b16 = M[Offset(Offset(Address(local2_14),2),1)];
        SetLocal 4 MakeHiLo(b15,b16);
        TraceOperation 020702 (Jz (Var (Local 4)) (Branch T Dfalse));
        GetLocal 4 local4_17;
        if (IsZero(local4_17)) {
          PopFrame;
          PopReturnAddress return_address_18;
          SetResult 0;
          JumpIndirect: (return) return_address_18
        } else {
          TraceOperation 020705 (Jg (Var (Local 4)) (Con 1) (Branch F Dtrue));
          GetLocal 4 local4_19;
          if (GreaterThan(local4_19,1)) {
            TraceOperation 020709 Rfalse;
            PopFrame;
            PopReturnAddress return_address_20;
            SetResult 0;
            JumpIndirect: (return) return_address_20
          } else {
            PopFrame;
            PopReturnAddress return_address_21;
            SetResult 1;
            JumpIndirect: (return) return_address_21
          }
        }
      }
    } else {
      Jump: 020710
    }
  }
LocOp 020710:
  TraceOperation 020710 (Add (Var (Local 2)) (Con 6) (Local 2));
  GetLocal 2 local2_1;
  SetLocal 2 Add(local2_1,6);
  TraceOperation 020714 (Jump 020679);
  Jump: 020679
--------------------------------------------------
LocRoutine 020718:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 020721
LocOp 020721:
  TraceOperation 020721 (Loadw (Var (Local 1)) (Con 0) Sp);
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),0)];
  Let b3 = M[Offset(Offset(Address(local1_1),0),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 020725 (Random (Var Sp) Sp);
  PopStack popped4;
  LetRandom random5 popped4;
  PushStack random5;
  TraceOperation 020729 (Loadw (Var (Local 1)) (Var Sp) Sp);
  GetLocal 1 local1_6;
  PopStack popped7;
  Let b8 = M[Offset(Address(local1_6),Mul(2,popped7))];
  Let b9 = M[Offset(Offset(Address(local1_6),Mul(2,popped7)),1)];
  PushStack MakeHiLo(b8,b9);
  TraceOperation 020733 Ret_popped;
  PopStack popped10;
  PopFrame;
  PopReturnAddress return_address_11;
  SetResult popped10;
  JumpIndirect: (return) return_address_11
--------------------------------------------------
LocRoutine 020734:
  MakeRoutineFrame 0;
  Jump: 020735
LocOp 020735:
  TraceOperation 020735 (Storeb (Var (Global 194)) (Con 0) (Con 59));
  Let b1 = M[008296];
  Let b2 = M[008297];
  SetByte Offset(Address(MakeHiLo(b1,b2)),0) 59;
  TraceOperation 020740 (Call (Floc 022320) [Con 29202,Con 20] Sp);
  PushFrame;
  PushReturnAddress 020740;
  SetLocal 1 29202;
  SetLocal 2 20;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 020740:
  PushStack call_result;
  TraceOperation 020748 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 020753 (Call (Floc 022320) [Con 30159,Con 21] Sp);
  PushFrame;
  PushReturnAddress 020753;
  SetLocal 1 30159;
  SetLocal 2 21;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 020753:
  PushStack call_result;
  TraceOperation 020761 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 020766 (Call (Floc 022320) [Con -28826,Con 50] Sp);
  PushFrame;
  PushReturnAddress 020766;
  SetLocal 1 -28826;
  SetLocal 2 50;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 020766:
  PushStack call_result;
  TraceOperation 020774 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 020779 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 020782 (Store (Con 251) (Con 31));
  SetByte 008378 0;
  SetByte 008379 31;
  TraceOperation 020785 (Store (Con 16) (Con 168));
  SetByte 007908 0;
  SetByte 007909 168;
  TraceOperation 020788 (Store (Con 136) (Con 123));
  SetByte 008148 0;
  SetByte 008149 123;
  TraceOperation 020791 (Insert_obj (Con 123) (Con 169));
  Let b2 = M[001862];
  if (IsZero(Widen(b2))) {} else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b3),123)) {
      Let b4 = M[001863];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
    } else {
      Let loop_var5 = Widen(b3);
      Label 6: {
        Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
        if (Equal(Widen(b7),123)) {
          Let b8 = M[001863];
          SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
        } else {
          Assign loop_var5 = Widen(b7);
          Goto: Label 6
        }
      }
    }
  }
  SetByte 001862 169;
  Let b9 = M[002278];
  SetByte 001863 LoByte(Widen(b9));
  SetByte 002278 123;
  TraceOperation 020794 (Store (Con 102) (Con 1));
  SetByte 008080 0;
  SetByte 008081 1;
  TraceOperation 020797 (Insert_obj (Con 31) (Con 161));
  Let b10 = M[001034];
  if (IsZero(Widen(b10))) {} else {
    Let b11 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
    if (Equal(Widen(b11),31)) {
      Let b12 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b12));
    } else {
      Let loop_var13 = Widen(b11);
      Label 14: {
        Let b15 = M[Offset(Offset(000751,Mul(loop_var13,9)),5)];
        if (Equal(Widen(b15),31)) {
          Let b16 = M[001035];
          SetByte Offset(Offset(000751,Mul(loop_var13,9)),5) LoByte(Widen(b16));
        } else {
          Assign loop_var13 = Widen(b15);
          Goto: Label 14
        }
      }
    }
  }
  SetByte 001034 161;
  Let b17 = M[002206];
  SetByte 001035 LoByte(Widen(b17));
  SetByte 002206 31;
  TraceOperation 020800 (Call (Floc 029450) [] Sp);
  PushFrame;
  PushReturnAddress 020800;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 17;
  Jump: 029455
LocReturn 020800:
  PushStack call_result;
  TraceOperation 020805 New_line;
  GamePrint "\n";
  TraceOperation 020806 (Print "You wake up. The room is spinning very gently round your head. Or at least it would be if you could see it which you can't.");
  GamePrint "You wake up. The room is spinning very gently round your head. Or at least it would be if you could see it which you can't.";
  TraceOperation 020873 New_line;
  GamePrint "\n";
  TraceOperation 020874 New_line;
  GamePrint "\n";
  TraceOperation 020875 (Call (Floc 034400) [] Sp);
  PushFrame;
  PushReturnAddress 020875;
  MakeRoutineFrame 0;
  Jump: 034401
LocReturn 020875:
  PushStack call_result;
  TraceOperation 020880 (Call (Floc 020888) [] Sp);
  PushFrame;
  PushReturnAddress 020880;
  MakeRoutineFrame 11;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 020911
LocReturn 020880:
  PushStack call_result;
  TraceOperation 020885 (Jump 020735);
  Jump: 020735
--------------------------------------------------
LocRoutine 020888:
  MakeRoutineFrame 11;
  if (LessThanByte(num_actuals,11)) {
    SetLocal 11 0;
    if (LessThanByte(num_actuals,10)) {
      SetLocal 10 0;
      if (LessThanByte(num_actuals,9)) {
        SetLocal 9 0;
        if (LessThanByte(num_actuals,8)) {
          SetLocal 8 0;
          if (LessThanByte(num_actuals,7)) {
            SetLocal 7 0;
            if (LessThanByte(num_actuals,6)) {
              SetLocal 6 0;
              if (LessThanByte(num_actuals,5)) {
                SetLocal 5 0;
                if (LessThanByte(num_actuals,4)) {
                  SetLocal 4 0;
                  if (LessThanByte(num_actuals,3)) {
                    SetLocal 3 0;
                    if (LessThanByte(num_actuals,2)) {
                      SetLocal 2 0;
                      if (LessThanByte(num_actuals,1)) {
                        SetLocal 1 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 020911
LocOp 020911:
  TraceOperation 020911 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  TraceOperation 020914 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  TraceOperation 020917 (Store (Con 8) (Con 1));
  SetLocal 8 1;
  TraceOperation 020920 (Call (Floc 022490) [] (Global 234));
  PushFrame;
  PushReturnAddress 020920;
  MakeRoutineFrame 12;
  SetLocal 12 -1;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 1;
  Jump: 022515
LocReturn 020920:
  SetByte 008376 HiByte(call_result);
  SetByte 008377 LoByte(call_result);
  TraceOperation 020925 (Jz (Var (Global 234)) (Branch T (Dloc 021651)));
  Let b1 = M[008376];
  Let b2 = M[008377];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021651
  } else {
    TraceOperation 020929 (Loadw (Var (Global 166)) (Var (Global 162)) (Local 1));
    Let b3 = M[008240];
    Let b4 = M[008241];
    Let b5 = M[008232];
    Let b6 = M[008233];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    SetLocal 1 MakeHiLo(b7,b8);
    TraceOperation 020933 (Loadw (Var (Global 167)) (Var (Global 162)) (Local 2));
    Let b9 = M[008242];
    Let b10 = M[008243];
    Let b11 = M[008232];
    Let b12 = M[008233];
    Let b13 = M[Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12)))];
    Let b14 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))),1)];
    SetLocal 2 MakeHiLo(b13,b14);
    TraceOperation 020937 (Jz (Var (Global 191)) (Branch T (Dloc 021007)));
    Let b15 = M[008290];
    Let b16 = M[008291];
    if (IsZero(MakeHiLo(b15,b16))) {
      Jump: 021007
    } else {
      TraceOperation 020941 (Call (Floc 043298) [Var (Global 191)] Sp);
      Let b17 = M[008290];
      Let b18 = M[008291];
      PushFrame;
      PushReturnAddress 020941;
      SetLocal 1 MakeHiLo(b17,b18);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043303
    }
  }
LocReturn 020941:
  PushStack call_result;
  TraceOperation 020947 (Jz (Var Sp) (Branch T (Dloc 021007)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 021007
  } else {
    TraceOperation 020950 (Store (Con 10) (Con 0));
    SetLocal 10 0;
    Jump: 020953
  }
LocOp 020953:
  TraceOperation 020953 (Inc_chk (Con 4) (Var (Local 1)) (Branch F (Dloc 020960)));
  GetLocal 4 local4_1;
  GetLocal 1 local1_2;
  SetLocal 4 Add(local4_1,1);
  if (GreaterThanEqual(local4_1,local1_2)) {
    TraceOperation 020957 (Jump 020977);
    Jump: 020977
  } else {
    Jump: 020960
  }
LocOp 020960:
  TraceOperation 020960 (Loadw (Var (Global 166)) (Var (Local 4)) Sp);
  Let b1 = M[008240];
  Let b2 = M[008241];
  GetLocal 4 local4_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,local4_3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local4_3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 020964 (Je [Var Sp,Con 47] (Branch F (Dloc 020953)));
  PopStack popped6;
  if (Equal(popped6,47)) {
    TraceOperation 020969 (Storew (Var (Global 166)) (Var (Local 4)) (Var (Global 191)));
    Let b7 = M[008240];
    Let b8 = M[008241];
    GetLocal 4 local4_9;
    Let b10 = M[008290];
    Let b11 = M[008291];
    SetByte Offset(Address(MakeHiLo(b7,b8)),Mul(2,local4_9)) b10;
    SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),Mul(2,local4_9)),1) b11;
    TraceOperation 020974 (Store (Con 10) (Con 1));
    SetLocal 10 1;
    Jump: 020977
  } else {
    Jump: 020953
  }
LocOp 020977:
  TraceOperation 020977 (Jz (Var (Local 10)) (Branch F (Dloc 021004)));
  GetLocal 10 local10_1;
  if (IsZero(local10_1)) {
    TraceOperation 020980 (Store (Con 4) (Con 0));
    SetLocal 4 0;
    Jump: 020983
  } else {
    Jump: 021004
  }
LocOp 020983:
  TraceOperation 020983 (Inc_chk (Con 4) (Var (Local 2)) (Branch F (Dloc 020990)));
  GetLocal 4 local4_1;
  GetLocal 2 local2_2;
  SetLocal 4 Add(local4_1,1);
  if (GreaterThanEqual(local4_1,local2_2)) {
    TraceOperation 020987 (Jump 021004);
    Jump: 021004
  } else {
    Jump: 020990
  }
LocOp 020990:
  TraceOperation 020990 (Loadw (Var (Global 167)) (Var (Local 4)) Sp);
  Let b1 = M[008242];
  Let b2 = M[008243];
  GetLocal 4 local4_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,local4_3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local4_3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 020994 (Je [Var Sp,Con 47] (Branch F (Dloc 020983)));
  PopStack popped6;
  if (Equal(popped6,47)) {
    TraceOperation 020999 (Storew (Var (Global 167)) (Var (Local 4)) (Var (Global 191)));
    Let b7 = M[008242];
    Let b8 = M[008243];
    GetLocal 4 local4_9;
    Let b10 = M[008290];
    Let b11 = M[008291];
    SetByte Offset(Address(MakeHiLo(b7,b8)),Mul(2,local4_9)) b10;
    SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),Mul(2,local4_9)),1) b11;
    Jump: 021004
  } else {
    Jump: 020983
  }
LocOp 021004:
  TraceOperation 021004 (Store (Con 4) (Con 0));
  SetLocal 4 0;
  Jump: 021007
LocOp 021007:
  TraceOperation 021007 (Jz (Var (Local 2)) (Branch F (Dloc 021016)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    TraceOperation 021010 (Push (Var (Local 2)));
    GetLocal 2 local2_2;
    PushStack local2_2;
    TraceOperation 021013 (Jump 021065);
    Jump: 021065
  } else {
    Jump: 021016
  }
LocOp 021016:
  TraceOperation 021016 (Jg (Var (Local 2)) (Con 1) (Branch F (Dloc 021042)));
  GetLocal 2 local2_1;
  if (GreaterThan(local2_1,1)) {
    TraceOperation 021020 (Store (Con 6) (Var (Global 167)));
    Let b2 = M[008242];
    Let b3 = M[008243];
    SetLocal 6 MakeHiLo(b2,b3);
    TraceOperation 021023 (Jz (Var (Local 1)) (Branch F (Dloc 021032)));
    GetLocal 1 local1_4;
    if (IsZero(local1_4)) {
      TraceOperation 021026 (Store (Con 5) (Con 0));
      SetLocal 5 0;
      TraceOperation 021029 (Jump 021036);
      Jump: 021036
    } else {
      Jump: 021032
    }
  } else {
    Jump: 021042
  }
LocOp 021032:
  TraceOperation 021032 (Loadw (Var (Global 166)) (Con 1) (Local 5));
  Let b1 = M[008240];
  Let b2 = M[008241];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 5 MakeHiLo(b3,b4);
  Jump: 021036
LocOp 021036:
  TraceOperation 021036 (Push (Var (Local 2)));
  GetLocal 2 local2_1;
  PushStack local2_1;
  TraceOperation 021039 (Jump 021065);
  Jump: 021065
LocOp 021042:
  TraceOperation 021042 (Jg (Var (Local 1)) (Con 1) (Branch F (Dloc 021062)));
  GetLocal 1 local1_1;
  if (GreaterThan(local1_1,1)) {
    TraceOperation 021046 (Store (Con 8) (Con 0));
    SetLocal 8 0;
    TraceOperation 021049 (Store (Con 6) (Var (Global 166)));
    Let b2 = M[008240];
    Let b3 = M[008241];
    SetLocal 6 MakeHiLo(b2,b3);
    TraceOperation 021052 (Loadw (Var (Global 167)) (Con 1) (Local 5));
    Let b4 = M[008242];
    Let b5 = M[008243];
    Let b6 = M[Offset(Address(MakeHiLo(b4,b5)),2)];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b4,b5)),2),1)];
    SetLocal 5 MakeHiLo(b6,b7);
    TraceOperation 021056 (Push (Var (Local 1)));
    GetLocal 1 local1_8;
    PushStack local1_8;
    TraceOperation 021059 (Jump 021065);
    Jump: 021065
  } else {
    Jump: 021062
  }
LocOp 021062:
  TraceOperation 021062 (Push (Con 1));
  PushStack 1;
  Jump: 021065
LocOp 021065:
  TraceOperation 021065 (Store (Con 3) (Var Sp));
  PopStack popped1;
  SetLocal 3 popped1;
  TraceOperation 021068 (Jz (Var (Local 5)) (Branch F (Dloc 021079)));
  GetLocal 5 local5_2;
  if (IsZero(local5_2)) {
    TraceOperation 021071 (Je [Var (Local 1),Con 1] (Branch F (Dloc 021079)));
    GetLocal 1 local1_3;
    if (Equal(local1_3,1)) {
      TraceOperation 021075 (Loadw (Var (Global 166)) (Con 1) (Local 5));
      Let b4 = M[008240];
      Let b5 = M[008241];
      Let b6 = M[Offset(Address(MakeHiLo(b4,b5)),2)];
      Let b7 = M[Offset(Offset(Address(MakeHiLo(b4,b5)),2),1)];
      SetLocal 5 MakeHiLo(b6,b7);
      Jump: 021079
    } else {
      Jump: 021079
    }
  } else {
    Jump: 021079
  }
LocOp 021079:
  TraceOperation 021079 (Je [Var (Global 203),Con 169] (Branch F (Dloc 021093)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    TraceOperation 021083 (Call (Floc 022042) [Var (Global 203),Var (Global 201)] (Local 7));
    Let b3 = M[008314];
    Let b4 = M[008315];
    Let b5 = M[008310];
    Let b6 = M[008311];
    PushFrame;
    PushReturnAddress 021083;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 MakeHiLo(b5,b6);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 021093
  }
LocReturn 021083:
  SetLocal 7 call_result;
  TraceOperation 021090 (Jump 021539);
  Jump: 021539
LocOp 021093:
  TraceOperation 021093 (Jz (Var (Local 3)) (Branch F (Dloc 021204)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    TraceOperation 021097 (Loadb (Var (Global 198)) (Con 0) Sp);
    Let b2 = M[008304];
    Let b3 = M[008305];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),0)];
    PushStack Widen(b4);
    TraceOperation 021101 (And (Var Sp) (Con 3) Sp);
    PopStack popped5;
    PushStack And(popped5,3);
    TraceOperation 021105 (Jz (Var Sp) (Branch F (Dloc 021120)));
    PopStack popped6;
    if (IsZero(popped6)) {
      TraceOperation 021108 (Call (Floc 022042) [Var (Global 203)] (Local 7));
      Let b7 = M[008314];
      Let b8 = M[008315];
      PushFrame;
      PushReturnAddress 021108;
      SetLocal 1 MakeHiLo(b7,b8);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 022057
    } else {
      Jump: 021120
    }
  } else {
    Jump: 021204
  }
LocReturn 021108:
  SetLocal 7 call_result;
  TraceOperation 021114 (Store (Con 217) (Con 0));
  SetByte 008310 0;
  SetByte 008311 0;
  TraceOperation 021117 (Jump 021539);
  Jump: 021539
LocOp 021120:
  TraceOperation 021120 (Jz (Var (Global 85)) (Branch F (Dloc 021134)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 021123 (Print_paddr (Var (Global 56)));
    Let b3 = M[008020];
    Let b4 = M[008021];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 021125 New_line;
    GamePrint "\n";
    TraceOperation 021126 (Call (Floc 043634) [] Sp);
    PushFrame;
    PushReturnAddress 021126;
    MakeRoutineFrame 0;
    Jump: 043635
  } else {
    Jump: 021134
  }
LocReturn 021126:
  PushStack call_result;
  TraceOperation 021131 (Jump 021539);
  Jump: 021539
LocOp 021134:
  TraceOperation 021134 (Print "There isn't anything to ");
  GamePrint "There isn't anything to ";
  TraceOperation 021141 (Loadw (Var (Global 184)) (Con 1) (Local 10));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 10 MakeHiLo(b3,b4);
  TraceOperation 021145 (Je [Var (Global 203),Con 15] (Branch F (Dloc 021159)));
  Let b5 = M[008314];
  Let b6 = M[008315];
  if (Equal(MakeHiLo(b5,b6),15)) {
    TraceOperation 021149 (Print "talk to");
    GamePrint "talk to";
    TraceOperation 021156 (Jump 021189);
    Jump: 021189
  } else {
    Jump: 021159
  }
LocOp 021159:
  TraceOperation 021159 (Jz (Var (Global 189)) (Branch F (Dloc 021165)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 021162 (Jz (Var (Global 188)) (Branch T (Dloc 021174)));
    Let b3 = M[008284];
    Let b4 = M[008285];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 021174
    } else {
      Jump: 021165
    }
  } else {
    Jump: 021165
  }
LocOp 021165:
  TraceOperation 021165 (Loadw (Var (Local 10)) (Con 0) Sp);
  GetLocal 10 local10_1;
  Let b2 = M[Offset(Address(local10_1),0)];
  Let b3 = M[Offset(Offset(Address(local10_1),0),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 021169 (Print_addr (Var Sp));
  PopStack popped4;
  GamePrint GetText(Address(popped4));
  TraceOperation 021171 (Jump 021189);
  Jump: 021189
LocOp 021174:
  TraceOperation 021174 (Loadb (Var (Local 10)) (Con 2) (Local 11));
  GetLocal 10 local10_1;
  Let b2 = M[Offset(Address(local10_1),2)];
  SetLocal 11 Widen(b2);
  TraceOperation 021178 (Loadb (Var (Local 10)) (Con 3) Sp);
  GetLocal 10 local10_3;
  Let b4 = M[Offset(Address(local10_3),3)];
  PushStack Widen(b4);
  TraceOperation 021182 (Call (Floc 024740) [Var (Local 11),Var Sp] Sp);
  GetLocal 11 local11_5;
  PopStack popped6;
  PushFrame;
  PushReturnAddress 021182;
  SetLocal 1 local11_5;
  SetLocal 2 popped6;
  MakeRoutineFrame 2;
  Jump: 024745
LocReturn 021182:
  PushStack call_result;
  Jump: 021189
LocOp 021189:
  TraceOperation 021189 (Print "!");
  GamePrint "!";
  TraceOperation 021192 New_line;
  GamePrint "\n";
  TraceOperation 021193 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  TraceOperation 021196 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 021196;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 021196:
  PushStack call_result;
  TraceOperation 021201 (Jump 021539);
  Jump: 021539
LocOp 021204:
  TraceOperation 021204 (Store (Con 242) (Con 0));
  SetByte 008360 0;
  SetByte 008361 0;
  TraceOperation 021207 (Store (Con 243) (Con 0));
  SetByte 008362 0;
  SetByte 008363 0;
  TraceOperation 021210 (Jg (Var (Local 3)) (Con 1) (Branch F (Dloc 021217)));
  GetLocal 3 local3_1;
  if (GreaterThan(local3_1,1)) {
    TraceOperation 021214 (Store (Con 243) (Con 1));
    SetByte 008362 0;
    SetByte 008363 1;
    Jump: 021217
  } else {
    Jump: 021217
  }
LocOp 021217:
  TraceOperation 021217 (Store (Con 10) (Con 0));
  SetLocal 10 0;
  Jump: 021220
LocOp 021220:
  TraceOperation 021220 (Inc_chk (Con 4) (Var (Local 3)) (Branch F (Dloc 021299)));
  GetLocal 4 local4_1;
  GetLocal 3 local3_2;
  SetLocal 4 Add(local4_1,1);
  if (GreaterThanEqual(local4_1,local3_2)) {
    TraceOperation 021225 (Jg (Var (Global 226)) (Con 0) (Branch F (Dloc 021289)));
    Let b3 = M[008360];
    Let b4 = M[008361];
    if (GreaterThan(MakeHiLo(b3,b4),0)) {
      TraceOperation 021230 (Print "The ");
      GamePrint "The ";
      TraceOperation 021233 (Je [Var (Global 226),Var (Local 3)] (Branch T (Dloc 021242)));
      Let b5 = M[008360];
      Let b6 = M[008361];
      GetLocal 3 local3_7;
      if (Equal(MakeHiLo(b5,b6),local3_7)) {
        Jump: 021242
      } else {
        TraceOperation 021237 (Print "other ");
        GamePrint "other ";
        Jump: 021242
      }
    } else {
      Jump: 021289
    }
  } else {
    Jump: 021299
  }
LocOp 021242:
  TraceOperation 021242 (Print "object");
  GamePrint "object";
  TraceOperation 021247 (Je [Var (Global 226),Con 1] (Branch T (Dloc 021254)));
  Let b1 = M[008360];
  Let b2 = M[008361];
  if (Equal(MakeHiLo(b1,b2),1)) {
    Jump: 021254
  } else {
    TraceOperation 021251 (Print "s");
    GamePrint "s";
    Jump: 021254
  }
LocOp 021254:
  TraceOperation 021254 (Print " that you mentioned ");
  GamePrint " that you mentioned ";
  TraceOperation 021265 (Je [Var (Global 226),Con 1] (Branch T (Dloc 021275)));
  Let b1 = M[008360];
  Let b2 = M[008361];
  if (Equal(MakeHiLo(b1,b2),1)) {
    Jump: 021275
  } else {
    TraceOperation 021269 (Print "are");
    GamePrint "are";
    TraceOperation 021272 (Jump 021278);
    Jump: 021278
  }
LocOp 021275:
  TraceOperation 021275 (Print "is");
  GamePrint "is";
  Jump: 021278
LocOp 021278:
  TraceOperation 021278 (Print "n't here.");
  GamePrint "n't here.";
  TraceOperation 021285 New_line;
  GamePrint "\n";
  TraceOperation 021286 (Jump 021539);
  Jump: 021539
LocOp 021289:
  TraceOperation 021289 (Jz (Var (Local 10)) (Branch F (Dloc 021539)));
  GetLocal 10 local10_1;
  if (IsZero(local10_1)) {
    TraceOperation 021293 (Print_paddr (Var (Global 51)));
    Let b2 = M[008010];
    Let b3 = M[008011];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 021295 New_line;
    GamePrint "\n";
    TraceOperation 021296 (Jump 021539);
    Jump: 021539
  } else {
    Jump: 021539
  }
LocOp 021299:
  TraceOperation 021299 (Jz (Var (Local 8)) (Branch T (Dloc 021309)));
  GetLocal 8 local8_1;
  if (IsZero(local8_1)) {
    Jump: 021309
  } else {
    TraceOperation 021302 (Loadw (Var (Global 167)) (Var (Local 4)) (Local 9));
    Let b2 = M[008242];
    Let b3 = M[008243];
    GetLocal 4 local4_4;
    Let b5 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,local4_4))];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,local4_4)),1)];
    SetLocal 9 MakeHiLo(b5,b6);
    TraceOperation 021306 (Jump 021313);
    Jump: 021313
  }
LocOp 021309:
  TraceOperation 021309 (Loadw (Var (Global 166)) (Var (Local 4)) (Local 9));
  Let b1 = M[008240];
  Let b2 = M[008241];
  GetLocal 4 local4_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,local4_3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local4_3)),1)];
  SetLocal 9 MakeHiLo(b4,b5);
  Jump: 021313
LocOp 021313:
  TraceOperation 021313 (Jz (Var (Local 8)) (Branch T (Dloc 021322)));
  GetLocal 8 local8_1;
  if (IsZero(local8_1)) {
    Jump: 021322
  } else {
    TraceOperation 021316 (Push (Var (Local 9)));
    GetLocal 9 local9_2;
    PushStack local9_2;
    TraceOperation 021319 (Jump 021325);
    Jump: 021325
  }
LocOp 021322:
  TraceOperation 021322 (Push (Var (Local 5)));
  GetLocal 5 local5_1;
  PushStack local5_1;
  Jump: 021325
LocOp 021325:
  TraceOperation 021325 (Store (Con 217) (Var Sp));
  PopStack popped1;
  SetByte 008310 HiByte(popped1);
  SetByte 008311 LoByte(popped1);
  TraceOperation 021328 (Jz (Var (Local 8)) (Branch T (Dloc 021337)));
  GetLocal 8 local8_2;
  if (IsZero(local8_2)) {
    Jump: 021337
  } else {
    TraceOperation 021331 (Push (Var (Local 5)));
    GetLocal 5 local5_3;
    PushStack local5_3;
    TraceOperation 021334 (Jump 021340);
    Jump: 021340
  }
LocOp 021337:
  TraceOperation 021337 (Push (Var (Local 9)));
  GetLocal 9 local9_1;
  PushStack local9_1;
  Jump: 021340
LocOp 021340:
  TraceOperation 021340 (Store (Con 218) (Var Sp));
  PopStack popped1;
  SetByte 008312 HiByte(popped1);
  SetByte 008313 LoByte(popped1);
  TraceOperation 021343 (Jg (Var (Local 3)) (Con 1) (Branch T (Dloc 021362)));
  GetLocal 3 local3_2;
  if (GreaterThan(local3_2,1)) {
    Jump: 021362
  } else {
    TraceOperation 021347 (Loadw (Var (Global 184)) (Con 6) Sp);
    Let b3 = M[008276];
    Let b4 = M[008277];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),12)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),12),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 021351 (Loadw (Var Sp) (Con 0) Sp);
    PopStack popped7;
    Let b8 = M[Offset(Address(popped7),0)];
    Let b9 = M[Offset(Offset(Address(popped7),0),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 021355 (Je [Var Sp,Con 13798] (Branch F (Dloc 021520)));
    PopStack popped10;
    if (Equal(popped10,13798)) {
      Jump: 021362
    } else {
      Jump: 021520
    }
  }
LocOp 021362:
  TraceOperation 021362 (Je [Var (Local 9),Con 46] (Branch F (Dloc 021371)));
  GetLocal 9 local9_1;
  if (Equal(local9_1,46)) {
    TraceOperation 021366 (Inc (Con 242));
    Let b2 = M[008360];
    Let b3 = M[008361];
    SetByte 008360 HiByte(Add(MakeHiLo(b2,b3),1));
    SetByte 008361 LoByte(Add(MakeHiLo(b2,b3),1));
    TraceOperation 021368 (Jump 021220);
    Jump: 021220
  } else {
    Jump: 021371
  }
LocOp 021371:
  TraceOperation 021371 (Je [Var (Global 161),Con 1] (Branch F (Dloc 021410)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 021375 (Je [Var (Global 203),Con 108,Con 124] (Branch F (Dloc 021410)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),108),Equal(MakeHiLo(b3,b4),124))) {
      TraceOperation 021381 (Get_parent (Var (Local 9)) Sp);
      GetLocal 9 local9_5;
      Let b6 = M[Offset(Offset(000751,Mul(local9_5,9)),4)];
      PushStack Widen(b6);
      TraceOperation 021384 (Je [Var Sp,Var (Global 195),Var (Global 0),Var (Global 202)] (Branch T (Dloc 021399)));
      PopStack popped7;
      Let b8 = M[008298];
      Let b9 = M[008299];
      Let b10 = M[007908];
      Let b11 = M[007909];
      Let b12 = M[008312];
      Let b13 = M[008313];
      if (LogOr(LogOr(Equal(popped7,MakeHiLo(b8,b9)),Equal(popped7,MakeHiLo(b10,b11))),Equal(popped7,MakeHiLo(b12,b13)))) {
        Jump: 021399
      } else {
        TraceOperation 021391 (Get_parent (Var (Local 9)) Sp);
        GetLocal 9 local9_14;
        Let b15 = M[Offset(Offset(000751,Mul(local9_14,9)),4)];
        PushStack Widen(b15);
        TraceOperation 021394 (Test_attr (Var Sp) (Con 8) (Branch F (Dloc 021220)));
        PopStack popped16;
        Let b17 = M[Offset(Offset(000751,Mul(popped16,9)),1)];
        if (TestBit(b17,7)) {
          Jump: 021399
        } else {
          Jump: 021220
        }
      }
    } else {
      Jump: 021410
    }
  } else {
    Jump: 021410
  }
LocOp 021399:
  TraceOperation 021399 (Test_attr (Var (Local 9)) (Con 25) (Branch T (Dloc 021410)));
  GetLocal 9 local9_1;
  Let b2 = M[Offset(Offset(000751,Mul(local9_1,9)),3)];
  if (TestBit(b2,6)) {
    Jump: 021410
  } else {
    TraceOperation 021403 (Test_attr (Var (Local 9)) (Con 21) (Branch T (Dloc 021410)));
    GetLocal 9 local9_3;
    Let b4 = M[Offset(Offset(000751,Mul(local9_3,9)),2)];
    if (TestBit(b4,2)) {
      Jump: 021410
    } else {
      TraceOperation 021407 (Jump 021220);
      Jump: 021220
    }
  }
LocOp 021410:
  TraceOperation 021410 (Je [Var (Global 203),Con 108,Con 124] (Branch F (Dloc 021426)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),108),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 021416 (Jz (Var (Global 202)) (Branch T (Dloc 021426)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 021426
    } else {
      TraceOperation 021419 (Jin (Var (Global 201)) (Var (Global 202)) (Branch T (Dloc 021426)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[008312];
      Let b8 = M[008313];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      if (Equal(MakeHiLo(b7,b8),Widen(b9))) {
        Jump: 021426
      } else {
        TraceOperation 021423 (Jump 021220);
        Jump: 021220
      }
    }
  } else {
    Jump: 021426
  }
LocOp 021426:
  TraceOperation 021426 (Je [Var (Global 161),Con 1] (Branch F (Dloc 021441)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 021430 (Je [Var (Global 203),Con 53] (Branch F (Dloc 021441)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),53)) {
      TraceOperation 021434 (Jin (Var (Local 9)) (Var (Global 195)) (Branch T (Dloc 021441)));
      GetLocal 9 local9_5;
      Let b6 = M[008298];
      Let b7 = M[008299];
      Let b8 = M[Offset(Offset(000751,Mul(local9_5,9)),4)];
      if (Equal(MakeHiLo(b6,b7),Widen(b8))) {
        Jump: 021441
      } else {
        TraceOperation 021438 (Jump 021220);
        Jump: 021220
      }
    } else {
      Jump: 021441
    }
  } else {
    Jump: 021441
  }
LocOp 021441:
  TraceOperation 021441 (Je [Var (Global 161),Con 1] (Branch F (Dloc 021455)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 021445 (Jz (Var (Global 202)) (Branch T (Dloc 021455)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 021455
    } else {
      TraceOperation 021448 (Je [Var (Global 201),Var (Global 202)] (Branch F (Dloc 021455)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[008312];
      Let b8 = M[008313];
      if (Equal(MakeHiLo(b5,b6),MakeHiLo(b7,b8))) {
        TraceOperation 021452 (Jump 021220);
        Jump: 021220
      } else {
        Jump: 021455
      }
    }
  } else {
    Jump: 021455
  }
LocOp 021455:
  TraceOperation 021455 (Je [Var (Global 161),Con 1] (Branch F (Dloc 021476)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 021459 (Je [Var (Global 203),Con 46] (Branch F (Dloc 021476)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),46)) {
      TraceOperation 021463 (Call (Floc 043468) [Var (Global 201),Var (Global 202)] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame;
      PushReturnAddress 021463;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 MakeHiLo(b7,b8);
      MakeRoutineFrame 2;
      Jump: 043473
    } else {
      Jump: 021476
    }
  } else {
    Jump: 021476
  }
LocReturn 021463:
  PushStack call_result;
  TraceOperation 021470 (Jz (Var Sp) (Branch T (Dloc 021476)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 021476
  } else {
    TraceOperation 021473 (Jump 021220);
    Jump: 021220
  }
LocOp 021476:
  TraceOperation 021476 (Call (Floc 043298) [Var (Local 9)] Sp);
  GetLocal 9 local9_1;
  PushFrame;
  PushReturnAddress 021476;
  SetLocal 1 local9_1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043303
LocReturn 021476:
  PushStack call_result;
  TraceOperation 021482 (Jz (Var Sp) (Branch F (Dloc 021488)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 021485 (Jump 021220);
    Jump: 021220
  } else {
    Jump: 021488
  }
LocOp 021488:
  TraceOperation 021488 (Je [Var (Local 9),Con 47] (Branch F (Dloc 021497)));
  GetLocal 9 local9_1;
  if (Equal(local9_1,47)) {
    TraceOperation 021492 (Print_obj (Var (Global 191)));
    Let b2 = M[008290];
    Let b3 = M[008291];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7)];
    Let b5 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 021494 (Jump 021508);
    Jump: 021508
  } else {
    Jump: 021497
  }
LocOp 021497:
  TraceOperation 021497 (Call (Floc 050260) [Var (Local 9)] Sp);
  GetLocal 9 local9_1;
  PushFrame;
  PushReturnAddress 021497;
  SetLocal 1 local9_1;
  MakeRoutineFrame 1;
  Jump: 050263
LocReturn 021497:
  PushStack call_result;
  TraceOperation 021503 (Jz (Var Sp) (Branch T (Dloc 021508)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 021508
  } else {
    TraceOperation 021506 (Print_obj (Var (Local 9)));
    GetLocal 9 local9_2;
    Let b3 = M[Offset(Offset(000751,Mul(local9_2,9)),7)];
    Let b4 = M[Offset(Offset(Offset(000751,Mul(local9_2,9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    Jump: 021508
  }
LocOp 021508:
  TraceOperation 021508 (Call (Floc 050260) [Var (Local 9)] Sp);
  GetLocal 9 local9_1;
  PushFrame;
  PushReturnAddress 021508;
  SetLocal 1 local9_1;
  MakeRoutineFrame 1;
  Jump: 050263
LocReturn 021508:
  PushStack call_result;
  TraceOperation 021514 (Jz (Var Sp) (Branch T (Dloc 021520)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 021520
  } else {
    TraceOperation 021517 (Print ": ");
    GamePrint ": ";
    Jump: 021520
  }
LocOp 021520:
  TraceOperation 021520 (Store (Con 10) (Con 1));
  SetLocal 10 1;
  TraceOperation 021523 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Var (Global 202)] (Local 7));
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  Let b5 = M[008312];
  Let b6 = M[008313];
  PushFrame;
  PushReturnAddress 021523;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 MakeHiLo(b5,b6);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 021523:
  SetLocal 7 call_result;
  TraceOperation 021531 (Je [Var (Local 7),Con 2] (Branch F (Dloc 021220)));
  GetLocal 7 local7_1;
  if (Equal(local7_1,2)) {
    TraceOperation 021536 (Jump 021539);
    Jump: 021539
  } else {
    Jump: 021220
  }
LocOp 021539:
  TraceOperation 021539 (Je [Var (Local 7),Con 2] (Branch T (Dloc 021579)));
  GetLocal 7 local7_1;
  if (Equal(local7_1,2)) {
    Jump: 021579
  } else {
    TraceOperation 021543 (Je [Var (Global 203),Con 2,Con 1,Con 15] (Branch T (Dloc 021579)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b2,b3),2),Equal(MakeHiLo(b2,b3),1)),Equal(MakeHiLo(b2,b3),15))) {
      Jump: 021579
    } else {
      TraceOperation 021550 (Je [Var (Global 203),Con 13,Con 9,Con 0] (Branch T (Dloc 021579)));
      Let b4 = M[008314];
      Let b5 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),13),Equal(MakeHiLo(b4,b5),9)),Equal(MakeHiLo(b4,b5),0))) {
        Jump: 021579
      } else {
        TraceOperation 021557 (Je [Var (Global 203),Con 12,Con 11,Con 8] (Branch F (Dloc 021567)));
        Let b6 = M[008314];
        Let b7 = M[008315];
        if (LogOr(LogOr(Equal(MakeHiLo(b6,b7),12),Equal(MakeHiLo(b6,b7),11)),Equal(MakeHiLo(b6,b7),8))) {
          TraceOperation 021564 (Jump 021579);
          Jump: 021579
        } else {
          Jump: 021567
        }
      }
    }
  }
LocOp 021567:
  TraceOperation 021567 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 021570 (Get_prop (Var Sp) (Con 29) Sp);
  PopStack popped4;
  Let b5 = M[Offset(Offset(000751,Mul(popped4,9)),7)];
  Let b6 = M[Offset(Offset(Offset(000751,Mul(popped4,9)),7),1)];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let loop_var8 = DeAddress(Offset(Address(MakeHiLo(b5,b6)),Add(Mul(2,Widen(b7)),1)));
  Label 9: {
    Let b10 = M[Address(loop_var8)];
    if (IsZeroByte(b10)) {
      Let b11 = M[000754];
      Let b12 = M[000755];
      PushStack MakeHiLo(b11,b12);
    } else {
      if (Equal(29,Widen(BwAnd(b10,31)))) {
        if (Equal(Add(Widen(ShiftR(b10,5)),1),2)) {
          Let b13 = M[Offset(Address(loop_var8),1)];
          Let b14 = M[Offset(Offset(Address(loop_var8),1),1)];
          PushStack MakeHiLo(b13,b14);
        } else {
          Let b15 = M[Offset(Address(loop_var8),1)];
          PushStack Widen(b15);
        }
      } else {
        Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),Add(Widen(ShiftR(b10,5)),1)));
        Goto: Label 9
      }
    }
  }
  TraceOperation 021574 (Call (Fvar Sp) [Con 6] (Local 7));
  PopStack popped16;
  if (IsZeroAddress(PackedAddress Z3(popped16))) {
    SetLocal 7 0;
    Jump: 021579
  } else {
    PushFrame;
    PushReturnAddress 021574;
    SetLocal 1 6;
    SetNumberActuals 1;
    JumpIndirect: (routine) PackedAddress Z3(popped16)
  }
LocReturn 021574:
  SetLocal 7 call_result;
  Jump: 021579
LocOp 021579:
  TraceOperation 021579 (Je [Var (Global 203),Con 8,Con 9,Con 16] (Branch T (Dloc 021617)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),9)),Equal(MakeHiLo(b1,b2),16))) {
    Jump: 021617
  } else {
    TraceOperation 021586 (Je [Var (Global 203),Con 0,Con 12,Con 11] (Branch T (Dloc 021617)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),0),Equal(MakeHiLo(b3,b4),12)),Equal(MakeHiLo(b3,b4),11))) {
      Jump: 021617
    } else {
      TraceOperation 021593 (Je [Var (Global 203),Con 2,Con 1] (Branch F (Dloc 021602)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (LogOr(Equal(MakeHiLo(b5,b6),2),Equal(MakeHiLo(b5,b6),1))) {
        TraceOperation 021599 (Jump 021617);
        Jump: 021617
      } else {
        Jump: 021602
      }
    }
  }
LocOp 021602:
  TraceOperation 021602 (Jz (Var (Global 189)) (Branch T (Dloc 021608)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021608
  } else {
    TraceOperation 021605 (Jump 021617);
    Jump: 021617
  }
LocOp 021608:
  TraceOperation 021608 (Store (Con 248) (Var (Global 203)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  SetByte 008372 b1;
  SetByte 008373 b2;
  TraceOperation 021611 (Store (Con 247) (Var (Global 201)));
  Let b3 = M[008310];
  Let b4 = M[008311];
  SetByte 008370 b3;
  SetByte 008371 b4;
  TraceOperation 021614 (Store (Con 246) (Var (Global 202)));
  Let b5 = M[008312];
  Let b6 = M[008313];
  SetByte 008368 b5;
  SetByte 008369 b6;
  Jump: 021617
LocOp 021617:
  TraceOperation 021617 (Jz (Var (Global 176)) (Branch T (Dloc 021626)));
  Let b1 = M[008260];
  Let b2 = M[008261];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021626
  } else {
    TraceOperation 021620 (Store (Con 245) (Con 1));
    SetByte 008366 0;
    SetByte 008367 1;
    TraceOperation 021623 (Jump 021629);
    Jump: 021629
  }
LocOp 021626:
  TraceOperation 021626 (Store (Con 245) (Con 0));
  SetByte 008366 0;
  SetByte 008367 0;
  Jump: 021629
LocOp 021629:
  TraceOperation 021629 (Jz (Var (Global 204)) (Branch T (Dloc 021638)));
  Let b1 = M[008316];
  Let b2 = M[008317];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021638
  } else {
    TraceOperation 021632 (Store (Con 244) (Con 1));
    SetByte 008364 0;
    SetByte 008365 1;
    TraceOperation 021635 (Jump 021641);
    Jump: 021641
  }
LocOp 021638:
  TraceOperation 021638 (Store (Con 244) (Con 0));
  SetByte 008364 0;
  SetByte 008365 0;
  Jump: 021641
LocOp 021641:
  TraceOperation 021641 (Je [Var (Local 7),Con 2] (Branch F (Dloc 021654)));
  GetLocal 7 local7_1;
  if (Equal(local7_1,2)) {
    TraceOperation 021645 (Store (Con 208) (Con 0));
    SetByte 008292 0;
    SetByte 008293 0;
    TraceOperation 021648 (Jump 021654);
    Jump: 021654
  } else {
    Jump: 021654
  }
LocOp 021651:
  TraceOperation 021651 (Store (Con 208) (Con 0));
  SetByte 008292 0;
  SetByte 008293 0;
  Jump: 021654
LocOp 021654:
  TraceOperation 021654 (Jz (Var (Global 234)) (Branch T (Dloc 021792)));
  Let b1 = M[008376];
  Let b2 = M[008377];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021792
  } else {
    TraceOperation 021658 (Je [Var (Global 203),Con 2,Con 1,Con 15] (Branch T (Dloc 021780)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),2),Equal(MakeHiLo(b3,b4),1)),Equal(MakeHiLo(b3,b4),15))) {
      Jump: 021780
    } else {
      TraceOperation 021666 (Je [Var (Global 203),Con 6,Con 13,Con 0] (Branch T (Dloc 021780)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),6),Equal(MakeHiLo(b5,b6),13)),Equal(MakeHiLo(b5,b6),0))) {
        Jump: 021780
      } else {
        TraceOperation 021674 (Je [Var (Global 203),Con 8,Con 9,Con 10] (Branch T (Dloc 021780)));
        Let b7 = M[008314];
        Let b8 = M[008315];
        if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),8),Equal(MakeHiLo(b7,b8),9)),Equal(MakeHiLo(b7,b8),10))) {
          Jump: 021780
        } else {
          TraceOperation 021682 (Je [Var (Global 203),Con 70,Con 12,Con 11] (Branch T (Dloc 021780)));
          Let b9 = M[008314];
          Let b10 = M[008315];
          if (LogOr(LogOr(Equal(MakeHiLo(b9,b10),70),Equal(MakeHiLo(b9,b10),12)),Equal(MakeHiLo(b9,b10),11))) {
            Jump: 021780
          } else {
            TraceOperation 021690 (Je [Var (Global 203),Con 7,Con 76] (Branch F (Dloc 021699)));
            Let b11 = M[008314];
            Let b12 = M[008315];
            if (LogOr(Equal(MakeHiLo(b11,b12),7),Equal(MakeHiLo(b11,b12),76))) {
              TraceOperation 021696 (Jump 021780);
              Jump: 021780
            } else {
              Jump: 021699
            }
          }
        }
      }
    }
  }
LocOp 021699:
  TraceOperation 021699 (Je [Var (Global 203),Con 16] (Branch F (Dloc 021751)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 021703 (Je [Var (Global 232),Con 64,Con 69,Con 105] (Branch T (Dloc 021780)));
    Let b3 = M[008372];
    Let b4 = M[008373];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),64),Equal(MakeHiLo(b3,b4),69)),Equal(MakeHiLo(b3,b4),105))) {
      Jump: 021780
    } else {
      TraceOperation 021711 (Je [Var (Global 232),Con 174,Con 177,Con 166] (Branch T (Dloc 021780)));
      Let b5 = M[008372];
      Let b6 = M[008373];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),174),Equal(MakeHiLo(b5,b6),177)),Equal(MakeHiLo(b5,b6),166))) {
        Jump: 021780
      } else {
        TraceOperation 021719 (Je [Var (Global 232),Con 178,Con 21,Con 175] (Branch T (Dloc 021780)));
        Let b7 = M[008372];
        Let b8 = M[008373];
        if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),178),Equal(MakeHiLo(b7,b8),21)),Equal(MakeHiLo(b7,b8),175))) {
          Jump: 021780
        } else {
          TraceOperation 021727 (Je [Var (Global 232),Con 22,Con 23,Con 5] (Branch T (Dloc 021780)));
          Let b9 = M[008372];
          Let b10 = M[008373];
          if (LogOr(LogOr(Equal(MakeHiLo(b9,b10),22),Equal(MakeHiLo(b9,b10),23)),Equal(MakeHiLo(b9,b10),5))) {
            Jump: 021780
          } else {
            TraceOperation 021734 (Je [Var (Global 232),Con 101,Con 31,Con 10] (Branch T (Dloc 021780)));
            Let b11 = M[008372];
            Let b12 = M[008373];
            if (LogOr(LogOr(Equal(MakeHiLo(b11,b12),101),Equal(MakeHiLo(b11,b12),31)),Equal(MakeHiLo(b11,b12),10))) {
              Jump: 021780
            } else {
              TraceOperation 021741 (Je [Var (Global 232),Con 13,Con 70,Con 76] (Branch F (Dloc 021751)));
              Let b13 = M[008372];
              Let b14 = M[008373];
              if (LogOr(LogOr(Equal(MakeHiLo(b13,b14),13),Equal(MakeHiLo(b13,b14),70)),Equal(MakeHiLo(b13,b14),76))) {
                TraceOperation 021748 (Jump 021780);
                Jump: 021780
              } else {
                Jump: 021751
              }
            }
          }
        }
      }
    }
  } else {
    Jump: 021751
  }
LocOp 021751:
  TraceOperation 021751 (Je [Var (Global 203),Con 165] (Branch F (Dloc 021761)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),165)) {
    TraceOperation 021755 (Jz (Var (Global 176)) (Branch T (Dloc 021761)));
    Let b3 = M[008260];
    Let b4 = M[008261];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 021761
    } else {
      TraceOperation 021758 (Jump 021780);
      Jump: 021780
    }
  } else {
    Jump: 021761
  }
LocOp 021761:
  TraceOperation 021761 (Je [Var (Global 203),Con 16] (Branch F (Dloc 021775)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 021765 (Je [Var (Global 232),Con 165] (Branch F (Dloc 021775)));
    Let b3 = M[008372];
    Let b4 = M[008373];
    if (Equal(MakeHiLo(b3,b4),165)) {
      TraceOperation 021769 (Jz (Var (Global 229)) (Branch T (Dloc 021775)));
      Let b5 = M[008366];
      Let b6 = M[008367];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 021775
      } else {
        TraceOperation 021772 (Jump 021780);
        Jump: 021780
      }
    } else {
      Jump: 021775
    }
  } else {
    Jump: 021775
  }
LocOp 021775:
  TraceOperation 021775 (Call (Floc 022394) [] (Local 7));
  PushFrame;
  PushReturnAddress 021775;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 022403
LocReturn 021775:
  SetLocal 7 call_result;
  Jump: 021780
LocOp 021780:
  TraceOperation 021780 (Store (Con 219) (Con 0));
  SetByte 008314 0;
  SetByte 008315 0;
  TraceOperation 021783 (Store (Con 217) (Con 0));
  SetByte 008310 0;
  SetByte 008311 0;
  TraceOperation 021786 (Store (Con 218) (Con 0));
  SetByte 008312 0;
  SetByte 008313 0;
  TraceOperation 021789 (Jump 020911);
  Jump: 020911
LocOp 021792:
  TraceOperation 021792 (Loadb (Var (Global 194)) (Con 1) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),1)];
  PushStack Widen(b3);
  TraceOperation 021796 (Jg (Var Sp) (Con 3) (Branch F (Dloc 020911)));
  PopStack popped4;
  if (GreaterThan(popped4,3)) {
    TraceOperation 021801 (Jz (Var (Global 100)) (Branch F (Dloc 020911)));
    Let b5 = M[008108];
    Let b6 = M[008109];
    if (IsZero(MakeHiLo(b5,b6))) {
      TraceOperation 021805 (Jz (Var (Global 122)) (Branch T (Dloc 020911)));
      Let b7 = M[008152];
      Let b8 = M[008153];
      if (IsZero(MakeHiLo(b7,b8))) {
        Jump: 020911
      } else {
        TraceOperation 021809 (Call (Floc 021838) [Var (Global 233)] Sp);
        Let b9 = M[008374];
        Let b10 = M[008375];
        PushFrame;
        PushReturnAddress 021809;
        SetLocal 1 MakeHiLo(b9,b10);
        MakeRoutineFrame 5;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        SetLocal 2 0;
        Jump: 021849
      }
    } else {
      Jump: 020911
    }
  } else {
    Jump: 020911
  }
LocReturn 021809:
  PushStack call_result;
  TraceOperation 021815 (Jz (Var Sp) (Branch T (Dloc 020911)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 020911
  } else {
    TraceOperation 021819 (Store (Con 116) (Con 1));
    SetByte 008108 0;
    SetByte 008109 1;
    TraceOperation 021822 (Call (Floc 022320) [Con -22495,Con 3] Sp);
    PushFrame;
    PushReturnAddress 021822;
    SetLocal 1 -22495;
    SetLocal 2 3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  }
LocReturn 021822:
  PushStack call_result;
  TraceOperation 021830 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 021835 (Jump 020911);
  Jump: 020911
--------------------------------------------------
LocRoutine 021838:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 021849
LocOp 021849:
  TraceOperation 021849 (Mul (Con 4) (Var (Global 178)) (Local 4));
  Let b1 = M[008264];
  Let b2 = M[008265];
  SetLocal 4 Mul(4,MakeHiLo(b1,b2));
  TraceOperation 021853 (Loadb (Var (Global 194)) (Var (Local 4)) (Local 5));
  Let b3 = M[008296];
  Let b4 = M[008297];
  GetLocal 4 local4_5;
  Let b6 = M[Offset(Address(MakeHiLo(b3,b4)),local4_5)];
  SetLocal 5 Widen(b6);
  TraceOperation 021857 (Add (Var (Local 4)) (Con 1) Sp);
  GetLocal 4 local4_7;
  PushStack Add(local4_7,1);
  TraceOperation 021861 (Loadb (Var (Global 194)) (Var Sp) Sp);
  Let b8 = M[008296];
  Let b9 = M[008297];
  PopStack popped10;
  Let b11 = M[Offset(Address(MakeHiLo(b8,b9)),popped10)];
  PushStack Widen(b11);
  TraceOperation 021865 (Add (Var (Local 5)) (Var Sp) (Local 3));
  GetLocal 5 local5_12;
  PopStack popped13;
  SetLocal 3 Add(local5_12,popped13);
  TraceOperation 021869 (Jz (Var (Local 3)) (Branch T Dfalse));
  GetLocal 3 local3_14;
  if (IsZero(local3_14)) {
    PopFrame;
    PopReturnAddress return_address_15;
    SetResult 0;
    JumpIndirect: (return) return_address_15
  } else {
    TraceOperation 021872 (Dec (Con 3));
    GetLocal 3 local3_16;
    SetLocal 3 Sub(local3_16,1);
    Jump: 021874
  }
LocOp 021874:
  TraceOperation 021874 (Je [Var (Local 2),Var (Local 3)] (Branch F (Dloc 021884)));
  GetLocal 2 local2_1;
  GetLocal 3 local3_2;
  if (Equal(local2_1,local3_2)) {
    TraceOperation 021878 (Storeb (Var (Local 1)) (Var (Local 2)) (Con 0));
    GetLocal 1 local1_3;
    GetLocal 2 local2_4;
    SetByte Offset(Address(local1_3),local2_4) 0;
    TraceOperation 021883 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 021884
  }
LocOp 021884:
  TraceOperation 021884 (Add (Var (Local 2)) (Con 1) Sp);
  GetLocal 2 local2_1;
  PushStack Add(local2_1,1);
  TraceOperation 021888 (Loadb (Var (Global 193)) (Var Sp) Sp);
  Let b2 = M[008294];
  Let b3 = M[008295];
  PopStack popped4;
  Let b5 = M[Offset(Address(MakeHiLo(b2,b3)),popped4)];
  PushStack Widen(b5);
  TraceOperation 021892 (Storeb (Var (Local 1)) (Var (Local 2)) (Var Sp));
  GetLocal 1 local1_6;
  GetLocal 2 local2_7;
  PopStack popped8;
  SetByte Offset(Address(local1_6),local2_7) LoByte(popped8);
  TraceOperation 021897 (Inc (Con 2));
  GetLocal 2 local2_9;
  SetLocal 2 Add(local2_9,1);
  TraceOperation 021899 (Jump 021874);
  Jump: 021874
--------------------------------------------------
LocRoutine 021902:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 021907
LocOp 021907:
  TraceOperation 021907 (Loadb (Var (Local 1)) (Con 0) (Local 2));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),0)];
  SetLocal 2 Widen(b2);
  TraceOperation 021911 (Jz (Var (Local 2)) (Branch T Dtrue));
  GetLocal 2 local2_3;
  if (IsZero(local2_3)) {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    TraceOperation 021914 (Print_char (Var (Local 2)));
    GetLocal 2 local2_5;
    GamePrint SingleChar(local2_5);
    TraceOperation 021917 (Add (Con 1) (Var (Local 1)) (Local 1));
    GetLocal 1 local1_6;
    SetLocal 1 Add(1,local1_6);
    TraceOperation 021921 (Jump 021907);
    Jump: 021907
  }
--------------------------------------------------
LocRoutine 021924:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 021929
LocOp 021929:
  TraceOperation 021929 (Call (Floc 025378) [Var (Global 198),Con 0] Sp);
  Let b1 = M[008304];
  Let b2 = M[008305];
  PushFrame;
  PushReturnAddress 021929;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 -1;
  Jump: 025385
LocReturn 021929:
  PushStack call_result;
  TraceOperation 021936 (Print "Be specific: what object do");
  GamePrint "Be specific: what object do";
  TraceOperation 021955 (Jz (Var (Global 176)) (Branch T (Dloc 021963)));
  Let b1 = M[008260];
  Let b2 = M[008261];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 021963
  } else {
    TraceOperation 021958 (Print "n't");
    GamePrint "n't";
    Jump: 021963
  }
LocOp 021963:
  TraceOperation 021963 (Print " you want to ");
  GamePrint " you want to ";
  TraceOperation 021972 (Loadw (Var (Global 183)) (Con 1) (Local 1));
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 021976 (Jz (Var (Local 1)) (Branch F (Dloc 021987)));
  GetLocal 1 local1_5;
  if (IsZero(local1_5)) {
    TraceOperation 021979 (Print "tell");
    GamePrint "tell";
    TraceOperation 021984 (Jump 022023);
    Jump: 022023
  } else {
    Jump: 021987
  }
LocOp 021987:
  TraceOperation 021987 (Loadb (Var (Global 182)) (Con 2) Sp);
  Let b1 = M[008272];
  Let b2 = M[008273];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  PushStack Widen(b3);
  TraceOperation 021991 (Jz (Var Sp) (Branch F (Dloc 022003)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 021994 (Loadw (Var (Local 1)) (Con 0) Sp);
    GetLocal 1 local1_5;
    Let b6 = M[Offset(Address(local1_5),0)];
    Let b7 = M[Offset(Offset(Address(local1_5),0),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 021998 (Print_addr (Var Sp));
    PopStack popped8;
    GamePrint GetText(Address(popped8));
    TraceOperation 022000 (Jump 022023);
    Jump: 022023
  } else {
    Jump: 022003
  }
LocOp 022003:
  TraceOperation 022003 (Loadb (Var (Local 1)) (Con 2) (Local 2));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),2)];
  SetLocal 2 Widen(b2);
  TraceOperation 022007 (Loadb (Var (Local 1)) (Con 3) Sp);
  GetLocal 1 local1_3;
  Let b4 = M[Offset(Address(local1_3),3)];
  PushStack Widen(b4);
  TraceOperation 022011 (Call (Floc 024740) [Var (Local 2),Var Sp] Sp);
  GetLocal 2 local2_5;
  PopStack popped6;
  PushFrame;
  PushReturnAddress 022011;
  SetLocal 1 local2_5;
  SetLocal 2 popped6;
  MakeRoutineFrame 2;
  Jump: 024745
LocReturn 022011:
  PushStack call_result;
  TraceOperation 022018 (Storeb (Var (Global 182)) (Con 2) (Con 0));
  Let b1 = M[008272];
  Let b2 = M[008273];
  SetByte Offset(Address(MakeHiLo(b1,b2)),2) 0;
  Jump: 022023
LocOp 022023:
  TraceOperation 022023 (Store (Con 205) (Con 1));
  SetByte 008286 0;
  SetByte 008287 1;
  TraceOperation 022026 (Store (Con 250) (Con 0));
  SetByte 008376 0;
  SetByte 008377 0;
  TraceOperation 022029 (Loadb (Var (Global 198)) (Con 1) Sp);
  Let b1 = M[008304];
  Let b2 = M[008305];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),1)];
  PushStack Widen(b3);
  TraceOperation 022033 (Call (Floc 025828) [Var Sp] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 022033;
  SetLocal 1 popped4;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 025833
LocReturn 022033:
  PushStack call_result;
  TraceOperation 022039 (Print_ret "?");
  GamePrint "?\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 022042:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 022057
LocOp 022057:
  TraceOperation 022057 (Store (Con 5) (Var (Global 203)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  SetLocal 5 MakeHiLo(b1,b2);
  TraceOperation 022060 (Store (Con 6) (Var (Global 201)));
  Let b3 = M[008310];
  Let b4 = M[008311];
  SetLocal 6 MakeHiLo(b3,b4);
  TraceOperation 022063 (Store (Con 7) (Var (Global 202)));
  Let b5 = M[008312];
  Let b6 = M[008313];
  SetLocal 7 MakeHiLo(b5,b6);
  TraceOperation 022066 (Store (Con 219) (Var (Local 1)));
  GetLocal 1 local1_7;
  SetByte 008314 HiByte(local1_7);
  SetByte 008315 LoByte(local1_7);
  TraceOperation 022069 (Je [Con 47,Var (Local 3),Var (Local 2)] (Branch F (Dloc 022090)));
  GetLocal 3 local3_8;
  GetLocal 2 local2_9;
  if (LogOr(Equal(47,local3_8),Equal(47,local2_9))) {
    TraceOperation 022075 (Jz (Var (Local 3)) (Branch F (Dloc 022085)));
    GetLocal 3 local3_10;
    if (IsZero(local3_10)) {
      TraceOperation 022078 (Call (Floc 021924) [] Sp);
      PushFrame;
      PushReturnAddress 022078;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      SetLocal 1 0;
      Jump: 021929
    } else {
      Jump: 022085
    }
  } else {
    Jump: 022090
  }
LocReturn 022078:
  PushStack call_result;
  TraceOperation 022083 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
LocOp 022085:
  TraceOperation 022085 (Print_paddr (Var (Global 51)));
  Let b1 = M[008010];
  Let b2 = M[008011];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 022087 New_line;
  GamePrint "\n";
  TraceOperation 022088 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 2;
  JumpIndirect: (return) return_address_3
LocOp 022090:
  TraceOperation 022090 (Store (Con 217) (Var (Local 2)));
  GetLocal 2 local2_1;
  SetByte 008310 HiByte(local2_1);
  SetByte 008311 LoByte(local2_1);
  TraceOperation 022093 (Jz (Var (Global 201)) (Branch T (Dloc 022107)));
  Let b2 = M[008310];
  Let b3 = M[008311];
  if (IsZero(MakeHiLo(b2,b3))) {
    Jump: 022107
  } else {
    TraceOperation 022096 (Je [Var (Global 203),Con 169] (Branch T (Dloc 022107)));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),169)) {
      Jump: 022107
    } else {
      TraceOperation 022100 (Je [Var (Global 201),Con 46] (Branch T (Dloc 022107)));
      Let b6 = M[008310];
      Let b7 = M[008311];
      if (Equal(MakeHiLo(b6,b7),46)) {
        Jump: 022107
      } else {
        TraceOperation 022104 (Store (Con 207) (Var (Global 201)));
        Let b8 = M[008310];
        Let b9 = M[008311];
        SetByte 008290 b8;
        SetByte 008291 b9;
        Jump: 022107
      }
    }
  }
LocOp 022107:
  TraceOperation 022107 (Store (Con 218) (Var (Local 3)));
  GetLocal 3 local3_1;
  SetByte 008312 HiByte(local3_1);
  SetByte 008313 LoByte(local3_1);
  TraceOperation 022110 (Je [Var (Local 1),Con 169] (Branch T (Dloc 022138)));
  GetLocal 1 local1_2;
  if (Equal(local1_2,169)) {
    Jump: 022138
  } else {
    TraceOperation 022114 (Je [Con 46,Var (Global 201),Var (Global 202)] (Branch F (Dloc 022138)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[008312];
    Let b6 = M[008313];
    if (LogOr(Equal(46,MakeHiLo(b3,b4)),Equal(46,MakeHiLo(b5,b6)))) {
      TraceOperation 022120 (Call (Floc 022288) [Con -12396,Con 21892] (Local 4));
      PushFrame;
      PushReturnAddress 022120;
      SetLocal 1 -12396;
      SetLocal 2 21892;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022297
    } else {
      Jump: 022138
    }
  }
LocReturn 022120:
  SetLocal 4 call_result;
  TraceOperation 022129 (Jz (Var (Local 4)) (Branch T (Dloc 022138)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 022138
  } else {
    TraceOperation 022132 (Store (Con 250) (Con 0));
    SetByte 008376 0;
    SetByte 008377 0;
    TraceOperation 022135 (Jump 022276);
    Jump: 022276
  }
LocOp 022138:
  TraceOperation 022138 (Store (Con 2) (Var (Global 201)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  SetLocal 2 MakeHiLo(b1,b2);
  TraceOperation 022141 (Store (Con 3) (Var (Global 202)));
  Let b3 = M[008312];
  Let b4 = M[008313];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 022144 (Get_prop (Var (Global 195)) (Con 29) Sp);
  Let b5 = M[008298];
  Let b6 = M[008299];
  Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7)];
  Let b8 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7),1)];
  Let b9 = M[Address(MakeHiLo(b7,b8))];
  Let loop_var10 = DeAddress(Offset(Address(MakeHiLo(b7,b8)),Add(Mul(2,Widen(b9)),1)));
  Label 11: {
    Let b12 = M[Address(loop_var10)];
    if (IsZeroByte(b12)) {
      Let b13 = M[000754];
      Let b14 = M[000755];
      PushStack MakeHiLo(b13,b14);
    } else {
      if (Equal(29,Widen(BwAnd(b12,31)))) {
        if (Equal(Add(Widen(ShiftR(b12,5)),1),2)) {
          Let b15 = M[Offset(Address(loop_var10),1)];
          Let b16 = M[Offset(Offset(Address(loop_var10),1),1)];
          PushStack MakeHiLo(b15,b16);
        } else {
          Let b17 = M[Offset(Address(loop_var10),1)];
          PushStack Widen(b17);
        }
      } else {
        Assign loop_var10 = DeAddress(Offset(Offset(Address(loop_var10),1),Add(Widen(ShiftR(b12,5)),1)));
        Goto: Label 11
      }
    }
  }
  TraceOperation 022148 (Call (Floc 022288) [Con -12392,Var Sp] (Local 4));
  PopStack popped18;
  PushFrame;
  PushReturnAddress 022148;
  SetLocal 1 -12392;
  SetLocal 2 popped18;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022297
LocReturn 022148:
  SetLocal 4 call_result;
  TraceOperation 022156 (Jz (Var (Local 4)) (Branch T (Dloc 022162)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 022162
  } else {
    TraceOperation 022159 (Jump 022276);
    Jump: 022276
  }
LocOp 022162:
  TraceOperation 022162 (Jz (Var (Global 176)) (Branch T (Dloc 022176)));
  Let b1 = M[008260];
  Let b2 = M[008261];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022176
  } else {
    TraceOperation 022165 (Call (Floc 046754) [] (Local 4));
    PushFrame;
    PushReturnAddress 022165;
    MakeRoutineFrame 0;
    Jump: 046755
  }
LocReturn 022165:
  SetLocal 4 call_result;
  TraceOperation 022170 (Jz (Var (Local 4)) (Branch T (Dloc 022176)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 022176
  } else {
    TraceOperation 022173 (Jump 022276);
    Jump: 022276
  }
LocOp 022176:
  TraceOperation 022176 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 022179 (Get_prop (Var Sp) (Con 29) Sp);
  PopStack popped4;
  Let b5 = M[Offset(Offset(000751,Mul(popped4,9)),7)];
  Let b6 = M[Offset(Offset(Offset(000751,Mul(popped4,9)),7),1)];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let loop_var8 = DeAddress(Offset(Address(MakeHiLo(b5,b6)),Add(Mul(2,Widen(b7)),1)));
  Label 9: {
    Let b10 = M[Address(loop_var8)];
    if (IsZeroByte(b10)) {
      Let b11 = M[000754];
      Let b12 = M[000755];
      PushStack MakeHiLo(b11,b12);
    } else {
      if (Equal(29,Widen(BwAnd(b10,31)))) {
        if (Equal(Add(Widen(ShiftR(b10,5)),1),2)) {
          Let b13 = M[Offset(Address(loop_var8),1)];
          Let b14 = M[Offset(Offset(Address(loop_var8),1),1)];
          PushStack MakeHiLo(b13,b14);
        } else {
          Let b15 = M[Offset(Address(loop_var8),1)];
          PushStack Widen(b15);
        }
      } else {
        Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),Add(Widen(ShiftR(b10,5)),1)));
        Goto: Label 9
      }
    }
  }
  TraceOperation 022183 (Call (Floc 022288) [Con -12390,Var Sp,Con 1] (Local 4));
  PopStack popped16;
  PushFrame;
  PushReturnAddress 022183;
  SetLocal 1 -12390;
  SetLocal 2 popped16;
  SetLocal 3 1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 022297
LocReturn 022183:
  SetLocal 4 call_result;
  TraceOperation 022192 (Jz (Var (Local 4)) (Branch T (Dloc 022198)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 022198
  } else {
    TraceOperation 022195 (Jump 022276);
    Jump: 022276
  }
LocOp 022198:
  TraceOperation 022198 (Loadw (Var (Global 238)) (Var (Local 1)) Sp);
  Let b1 = M[008384];
  Let b2 = M[008385];
  GetLocal 1 local1_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 022202 (Call (Floc 022288) [Con -12387,Var Sp] (Local 4));
  PopStack popped6;
  PushFrame;
  PushReturnAddress 022202;
  SetLocal 1 -12387;
  SetLocal 2 popped6;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022297
LocReturn 022202:
  SetLocal 4 call_result;
  TraceOperation 022210 (Jz (Var (Local 4)) (Branch T (Dloc 022216)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 022216
  } else {
    TraceOperation 022213 (Jump 022276);
    Jump: 022276
  }
LocOp 022216:
  TraceOperation 022216 (Jz (Var (Local 3)) (Branch T (Dloc 022237)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    Jump: 022237
  } else {
    TraceOperation 022219 (Get_prop (Var (Local 3)) (Con 29) Sp);
    GetLocal 3 local3_2;
    Let b3 = M[Offset(Offset(000751,Mul(local3_2,9)),7)];
    Let b4 = M[Offset(Offset(Offset(000751,Mul(local3_2,9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
    Label 7: {
      Let b8 = M[Address(loop_var6)];
      if (IsZeroByte(b8)) {
        Let b9 = M[000754];
        Let b10 = M[000755];
        PushStack MakeHiLo(b9,b10);
      } else {
        if (Equal(29,Widen(BwAnd(b8,31)))) {
          if (Equal(Add(Widen(ShiftR(b8,5)),1),2)) {
            Let b11 = M[Offset(Address(loop_var6),1)];
            Let b12 = M[Offset(Offset(Address(loop_var6),1),1)];
            PushStack MakeHiLo(b11,b12);
          } else {
            Let b13 = M[Offset(Address(loop_var6),1)];
            PushStack Widen(b13);
          }
        } else {
          Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
          Goto: Label 7
        }
      }
    }
    TraceOperation 022223 (Call (Floc 022288) [Con -12383,Var Sp] (Local 4));
    PopStack popped14;
    PushFrame;
    PushReturnAddress 022223;
    SetLocal 1 -12383;
    SetLocal 2 popped14;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022297
  }
LocReturn 022223:
  SetLocal 4 call_result;
  TraceOperation 022231 (Jz (Var (Local 4)) (Branch T (Dloc 022237)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 022237
  } else {
    TraceOperation 022234 (Jump 022276);
    Jump: 022276
  }
LocOp 022237:
  TraceOperation 022237 (Jz (Var (Local 2)) (Branch T (Dloc 022262)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    Jump: 022262
  } else {
    TraceOperation 022240 (Je [Var (Local 1),Con 169] (Branch T (Dloc 022262)));
    GetLocal 1 local1_2;
    if (Equal(local1_2,169)) {
      Jump: 022262
    } else {
      TraceOperation 022244 (Get_prop (Var (Local 2)) (Con 29) Sp);
      GetLocal 2 local2_3;
      Let b4 = M[Offset(Offset(000751,Mul(local2_3,9)),7)];
      Let b5 = M[Offset(Offset(Offset(000751,Mul(local2_3,9)),7),1)];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
      Label 8: {
        Let b9 = M[Address(loop_var7)];
        if (IsZeroByte(b9)) {
          Let b10 = M[000754];
          Let b11 = M[000755];
          PushStack MakeHiLo(b10,b11);
        } else {
          if (Equal(29,Widen(BwAnd(b9,31)))) {
            if (Equal(Add(Widen(ShiftR(b9,5)),1),2)) {
              Let b12 = M[Offset(Address(loop_var7),1)];
              Let b13 = M[Offset(Offset(Address(loop_var7),1),1)];
              PushStack MakeHiLo(b12,b13);
            } else {
              Let b14 = M[Offset(Address(loop_var7),1)];
              PushStack Widen(b14);
            }
          } else {
            Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),Add(Widen(ShiftR(b9,5)),1)));
            Goto: Label 8
          }
        }
      }
      TraceOperation 022248 (Call (Floc 022288) [Con -12380,Var Sp] (Local 4));
      PopStack popped15;
      PushFrame;
      PushReturnAddress 022248;
      SetLocal 1 -12380;
      SetLocal 2 popped15;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022297
    }
  }
LocReturn 022248:
  SetLocal 4 call_result;
  TraceOperation 022256 (Jz (Var (Local 4)) (Branch T (Dloc 022262)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 022262
  } else {
    TraceOperation 022259 (Jump 022276);
    Jump: 022276
  }
LocOp 022262:
  TraceOperation 022262 (Loadw (Var (Global 237)) (Var (Local 1)) Sp);
  Let b1 = M[008382];
  Let b2 = M[008383];
  GetLocal 1 local1_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 022266 (Call (Floc 022288) [Con 0,Var Sp] (Local 4));
  PopStack popped6;
  PushFrame;
  PushReturnAddress 022266;
  SetLocal 1 0;
  SetLocal 2 popped6;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022297
LocReturn 022266:
  SetLocal 4 call_result;
  TraceOperation 022273 (Jz (Var (Local 4)) (Branch T (Dloc 022276)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 022276
  } else {
    Jump: 022276
  }
LocOp 022276:
  TraceOperation 022276 (Store (Con 219) (Var (Local 5)));
  GetLocal 5 local5_1;
  SetByte 008314 HiByte(local5_1);
  SetByte 008315 LoByte(local5_1);
  TraceOperation 022279 (Store (Con 217) (Var (Local 6)));
  GetLocal 6 local6_2;
  SetByte 008310 HiByte(local6_2);
  SetByte 008311 LoByte(local6_2);
  TraceOperation 022282 (Store (Con 218) (Var (Local 7)));
  GetLocal 7 local7_3;
  SetByte 008312 HiByte(local7_3);
  SetByte 008313 LoByte(local7_3);
  TraceOperation 022285 (Ret (Var (Local 4)));
  GetLocal 4 local4_4;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult local4_4;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 022288:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 022297
LocOp 022297:
  TraceOperation 022297 (Jz (Var (Local 2)) (Branch T Dfalse));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 022300 (Jz (Var (Local 3)) (Branch T (Dloc 022311)));
    GetLocal 3 local3_3;
    if (IsZero(local3_3)) {
      Jump: 022311
    } else {
      TraceOperation 022303 (Call (Fvar (Local 2)) [Var (Local 3)] Sp);
      GetLocal 2 local2_4;
      if (IsZeroAddress(PackedAddress Z3(local2_4))) {
        PushStack 0;
        Jump: 022308
      } else {
        GetLocal 3 local3_5;
        PushFrame;
        PushReturnAddress 022303;
        SetLocal 1 local3_5;
        SetNumberActuals 1;
        JumpIndirect: (routine) PackedAddress Z3(local2_4)
      }
    }
  }
LocReturn 022303:
  PushStack call_result;
  Jump: 022308
LocOp 022308:
  TraceOperation 022308 (Jump 022315);
  Jump: 022315
LocOp 022311:
  TraceOperation 022311 (Call (Fvar (Local 2)) [] Sp);
  GetLocal 2 local2_1;
  if (IsZeroAddress(PackedAddress Z3(local2_1))) {
    PushStack 0;
    Jump: 022315
  } else {
    PushFrame;
    PushReturnAddress 022311;
    SetNumberActuals 0;
    JumpIndirect: (routine) PackedAddress Z3(local2_1)
  }
LocReturn 022311:
  PushStack call_result;
  Jump: 022315
LocOp 022315:
  TraceOperation 022315 (Store (Con 4) (Var Sp));
  PopStack popped1;
  SetLocal 4 popped1;
  TraceOperation 022318 (Ret (Var (Local 4)));
  GetLocal 4 local4_2;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult local4_2;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 022320:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 022327
LocOp 022327:
  TraceOperation 022327 (Call (Floc 022340) [Var (Local 1)] (Local 3));
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 022327;
  SetLocal 1 local1_1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 022327:
  SetLocal 3 call_result;
  TraceOperation 022333 (Storew (Var (Local 3)) (Con 1) (Var (Local 2)));
  GetLocal 3 local3_1;
  GetLocal 2 local2_2;
  SetByte Offset(Address(local3_1),2) HiByte(local2_2);
  SetByte Offset(Offset(Address(local3_1),2),1) LoByte(local2_2);
  TraceOperation 022338 (Ret (Var (Local 3)));
  GetLocal 3 local3_3;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult local3_3;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 022340:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 022349
LocOp 022349:
  TraceOperation 022349 (Add (Var (Global 224)) (Con 210) (Local 2));
  Let b1 = M[008356];
  Let b2 = M[008357];
  SetLocal 2 Add(MakeHiLo(b1,b2),210);
  TraceOperation 022353 (Add (Var (Global 224)) (Var (Global 223)) (Local 3));
  Let b3 = M[008356];
  Let b4 = M[008357];
  Let b5 = M[008354];
  Let b6 = M[008355];
  SetLocal 3 Add(MakeHiLo(b3,b4),MakeHiLo(b5,b6));
  Jump: 022357
LocOp 022357:
  TraceOperation 022357 (Je [Var (Local 3),Var (Local 2)] (Branch F (Dloc 022376)));
  GetLocal 3 local3_1;
  GetLocal 2 local2_2;
  if (Equal(local3_1,local2_2)) {
    TraceOperation 022361 (Sub (Var (Global 223)) (Con 6) (Global 223));
    Let b3 = M[008354];
    Let b4 = M[008355];
    SetByte 008354 HiByte(Sub(MakeHiLo(b3,b4),6));
    SetByte 008355 LoByte(Sub(MakeHiLo(b3,b4),6));
    TraceOperation 022365 (Add (Var (Global 224)) (Var (Global 223)) (Local 4));
    Let b5 = M[008356];
    Let b6 = M[008357];
    Let b7 = M[008354];
    Let b8 = M[008355];
    SetLocal 4 Add(MakeHiLo(b5,b6),MakeHiLo(b7,b8));
    TraceOperation 022369 (Storew (Var (Local 4)) (Con 2) (Var (Local 1)));
    GetLocal 4 local4_9;
    GetLocal 1 local1_10;
    SetByte Offset(Address(local4_9),4) HiByte(local1_10);
    SetByte Offset(Offset(Address(local4_9),4),1) LoByte(local1_10);
    TraceOperation 022374 (Ret (Var (Local 4)));
    GetLocal 4 local4_11;
    PopFrame;
    PopReturnAddress return_address_12;
    SetResult local4_11;
    JumpIndirect: (return) return_address_12
  } else {
    Jump: 022376
  }
LocOp 022376:
  TraceOperation 022376 (Loadw (Var (Local 3)) (Con 2) Sp);
  GetLocal 3 local3_1;
  Let b2 = M[Offset(Address(local3_1),4)];
  Let b3 = M[Offset(Offset(Address(local3_1),4),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 022380 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 022386)));
  PopStack popped4;
  GetLocal 1 local1_5;
  if (Equal(popped4,local1_5)) {
    TraceOperation 022384 (Ret (Var (Local 3)));
    GetLocal 3 local3_6;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult local3_6;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 022386
  }
LocOp 022386:
  TraceOperation 022386 (Add (Var (Local 3)) (Con 6) (Local 3));
  GetLocal 3 local3_1;
  SetLocal 3 Add(local3_1,6);
  TraceOperation 022390 (Jump 022357);
  Jump: 022357
--------------------------------------------------
LocRoutine 022394:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 022403
LocOp 022403:
  TraceOperation 022403 (Jz (Var (Global 225)) (Branch T (Dloc 022410)));
  Let b1 = M[008358];
  Let b2 = M[008359];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022410
  } else {
    TraceOperation 022406 (Store (Con 241) (Con 0));
    SetByte 008358 0;
    SetByte 008359 0;
    TraceOperation 022409 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocOp 022410:
  TraceOperation 022410 (Jz (Var (Global 234)) (Branch T (Dloc 022419)));
  Let b1 = M[008376];
  Let b2 = M[008377];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022419
  } else {
    TraceOperation 022413 (Push (Var (Global 223)));
    Let b3 = M[008354];
    Let b4 = M[008355];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 022416 (Jump 022422);
    Jump: 022422
  }
LocOp 022419:
  TraceOperation 022419 (Push (Con 0));
  PushStack 0;
  Jump: 022422
LocOp 022422:
  TraceOperation 022422 (Add (Var (Global 224)) (Var Sp) (Local 1));
  Let b1 = M[008356];
  Let b2 = M[008357];
  PopStack popped3;
  SetLocal 1 Add(MakeHiLo(b1,b2),popped3);
  TraceOperation 022426 (Add (Var (Global 224)) (Con 210) (Local 2));
  Let b4 = M[008356];
  Let b5 = M[008357];
  SetLocal 2 Add(MakeHiLo(b4,b5),210);
  Jump: 022430
LocOp 022430:
  TraceOperation 022430 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 022438)));
  GetLocal 1 local1_1;
  GetLocal 2 local2_2;
  if (Equal(local1_1,local2_2)) {
    TraceOperation 022434 (Inc (Con 18));
    Let b3 = M[007912];
    Let b4 = M[007913];
    SetByte 007912 HiByte(Add(MakeHiLo(b3,b4),1));
    SetByte 007913 LoByte(Add(MakeHiLo(b3,b4),1));
    TraceOperation 022436 (Ret (Var (Local 4)));
    GetLocal 4 local4_5;
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult local4_5;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 022438
  }
LocOp 022438:
  TraceOperation 022438 (Loadw (Var (Local 1)) (Con 0) Sp);
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),0)];
  Let b3 = M[Offset(Offset(Address(local1_1),0),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 022442 (Jz (Var Sp) (Branch T (Dloc 022482)));
  PopStack popped4;
  if (IsZero(popped4)) {
    Jump: 022482
  } else {
    TraceOperation 022445 (Loadw (Var (Local 1)) (Con 1) (Local 3));
    GetLocal 1 local1_5;
    Let b6 = M[Offset(Address(local1_5),2)];
    Let b7 = M[Offset(Offset(Address(local1_5),2),1)];
    SetLocal 3 MakeHiLo(b6,b7);
    TraceOperation 022449 (Jz (Var (Local 3)) (Branch F (Dloc 022455)));
    GetLocal 3 local3_8;
    if (IsZero(local3_8)) {
      TraceOperation 022452 (Jump 022482);
      Jump: 022482
    } else {
      Jump: 022455
    }
  }
LocOp 022455:
  TraceOperation 022455 (Sub (Var (Local 3)) (Con 1) Sp);
  GetLocal 3 local3_1;
  PushStack Sub(local3_1,1);
  TraceOperation 022459 (Storew (Var (Local 1)) (Con 1) (Var Sp));
  GetLocal 1 local1_2;
  PopStack popped3;
  SetByte Offset(Address(local1_2),2) HiByte(popped3);
  SetByte Offset(Offset(Address(local1_2),2),1) LoByte(popped3);
  TraceOperation 022464 (Jg (Var (Local 3)) (Con 1) (Branch T (Dloc 022482)));
  GetLocal 3 local3_4;
  if (GreaterThan(local3_4,1)) {
    Jump: 022482
  } else {
    TraceOperation 022468 (Loadw (Var (Local 1)) (Con 2) Sp);
    GetLocal 1 local1_5;
    Let b6 = M[Offset(Address(local1_5),4)];
    Let b7 = M[Offset(Offset(Address(local1_5),4),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 022472 (Call (Fvar Sp) [] Sp);
    PopStack popped8;
    if (IsZeroAddress(PackedAddress Z3(popped8))) {
      PushStack 0;
      Jump: 022476
    } else {
      PushFrame;
      PushReturnAddress 022472;
      SetNumberActuals 0;
      JumpIndirect: (routine) PackedAddress Z3(popped8)
    }
  }
LocReturn 022472:
  PushStack call_result;
  Jump: 022476
LocOp 022476:
  TraceOperation 022476 (Jz (Var Sp) (Branch T (Dloc 022482)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 022482
  } else {
    TraceOperation 022479 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 022482
  }
LocOp 022482:
  TraceOperation 022482 (Add (Var (Local 1)) (Con 6) (Local 1));
  GetLocal 1 local1_1;
  SetLocal 1 Add(local1_1,6);
  TraceOperation 022486 (Jump 022430);
  Jump: 022430
--------------------------------------------------
LocRoutine 022490:
  MakeRoutineFrame 12;
  if (LessThanByte(num_actuals,12)) {
    SetLocal 12 -1;
    if (LessThanByte(num_actuals,11)) {
      SetLocal 11 0;
      if (LessThanByte(num_actuals,10)) {
        SetLocal 10 0;
        if (LessThanByte(num_actuals,9)) {
          SetLocal 9 0;
          if (LessThanByte(num_actuals,8)) {
            SetLocal 8 0;
            if (LessThanByte(num_actuals,7)) {
              SetLocal 7 0;
              if (LessThanByte(num_actuals,6)) {
                SetLocal 6 0;
                if (LessThanByte(num_actuals,5)) {
                  SetLocal 5 0;
                  if (LessThanByte(num_actuals,4)) {
                    SetLocal 4 0;
                    if (LessThanByte(num_actuals,3)) {
                      SetLocal 3 0;
                      if (LessThanByte(num_actuals,2)) {
                        SetLocal 2 0;
                        if (LessThanByte(num_actuals,1)) {
                          SetLocal 1 1;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 022515
LocOp 022515:
  TraceOperation 022515 (Inc_chk (Con 12) (Con 9) (Branch F (Dloc 022522)));
  GetLocal 12 local12_1;
  SetLocal 12 Add(local12_1,1);
  if (GreaterThanEqual(local12_1,9)) {
    TraceOperation 022519 (Jump 022530);
    Jump: 022530
  } else {
    Jump: 022522
  }
LocOp 022522:
  TraceOperation 022522 (Storew (Var (Global 184)) (Var (Local 12)) (Con 0));
  Let b1 = M[008276];
  Let b2 = M[008277];
  GetLocal 12 local12_3;
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,local12_3)) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local12_3)),1) 0;
  TraceOperation 022527 (Jump 022515);
  Jump: 022515
LocOp 022530:
  TraceOperation 022530 (Store (Con 220) (Con 0));
  SetByte 008316 0;
  SetByte 008317 0;
  TraceOperation 022533 (Store (Con 185) (Con 0));
  SetByte 008246 0;
  SetByte 008247 0;
  TraceOperation 022536 (Store (Con 204) (Con 0));
  SetByte 008284 0;
  SetByte 008285 0;
  TraceOperation 022539 (Store (Con 193) (Con 0));
  SetByte 008262 0;
  SetByte 008263 0;
  TraceOperation 022542 (Storew (Var (Global 167)) (Var (Global 162)) (Con 0));
  Let b1 = M[008242];
  Let b2 = M[008243];
  Let b3 = M[008232];
  Let b4 = M[008233];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 0;
  TraceOperation 022547 (Storew (Var (Global 166)) (Var (Global 162)) (Con 0));
  Let b5 = M[008240];
  Let b6 = M[008241];
  Let b7 = M[008232];
  Let b8 = M[008233];
  SetByte Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,MakeHiLo(b7,b8))),1) 0;
  TraceOperation 022552 (Storew (Var (Global 165)) (Var (Global 162)) (Con 0));
  Let b9 = M[008238];
  Let b10 = M[008239];
  Let b11 = M[008232];
  Let b12 = M[008233];
  SetByte Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,MakeHiLo(b11,b12))),1) 0;
  TraceOperation 022557 (Jz (Var (Global 179)) (Branch F (Dloc 022583)));
  Let b13 = M[008266];
  Let b14 = M[008267];
  if (IsZero(MakeHiLo(b13,b14))) {
    TraceOperation 022560 (Je [Var (Global 195),Var (Global 235)] (Branch T (Dloc 022583)));
    Let b15 = M[008298];
    Let b16 = M[008299];
    Let b17 = M[008378];
    Let b18 = M[008379];
    if (Equal(MakeHiLo(b15,b16),MakeHiLo(b17,b18))) {
      Jump: 022583
    } else {
      TraceOperation 022564 (Store (Con 211) (Var (Global 235)));
      Let b19 = M[008378];
      Let b20 = M[008379];
      SetByte 008298 b19;
      SetByte 008299 b20;
      TraceOperation 022567 (Get_parent (Var (Global 195)) Sp);
      Let b21 = M[008298];
      Let b22 = M[008299];
      Let b23 = M[Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),4)];
      PushStack Widen(b23);
      TraceOperation 022570 (Test_attr (Var Sp) (Con 12) (Branch T (Dloc 022577)));
      PopStack popped24;
      Let b25 = M[Offset(Offset(000751,Mul(popped24,9)),1)];
      if (TestBit(b25,3)) {
        Jump: 022577
      } else {
        TraceOperation 022574 (Get_parent (Var (Global 195)) (Global 0));
        Let b26 = M[008298];
        Let b27 = M[008299];
        Let b28 = M[Offset(Offset(000751,Mul(MakeHiLo(b26,b27),9)),4)];
        SetByte 007908 HiByte(Widen(b28));
        SetByte 007909 LoByte(Widen(b28));
        Jump: 022577
      }
    }
  } else {
    Jump: 022583
  }
LocOp 022577:
  TraceOperation 022577 (Call (Floc 028316) [Var (Global 0)] (Global 85));
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame;
  PushReturnAddress 022577;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 1;
  Jump: 028325
LocReturn 022577:
  SetByte 008078 HiByte(call_result);
  SetByte 008079 LoByte(call_result);
  Jump: 022583
LocOp 022583:
  TraceOperation 022583 (Jz (Var (Global 192)) (Branch T (Dloc 022606)));
  Let b1 = M[008292];
  Let b2 = M[008293];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022606
  } else {
    TraceOperation 022586 (Store (Con 1) (Var (Global 192)));
    Let b3 = M[008292];
    Let b4 = M[008293];
    SetLocal 1 MakeHiLo(b3,b4);
    TraceOperation 022589 (Je [Var (Global 152),Con 1,Con 2] (Branch F (Dloc 022600)));
    Let b5 = M[008212];
    Let b6 = M[008213];
    if (LogOr(Equal(MakeHiLo(b5,b6),1),Equal(MakeHiLo(b5,b6),2))) {
      TraceOperation 022595 (Je [Var (Global 235),Var (Global 195)] (Branch F (Dloc 022600)));
      Let b7 = M[008378];
      Let b8 = M[008379];
      Let b9 = M[008298];
      Let b10 = M[008299];
      if (Equal(MakeHiLo(b7,b8),MakeHiLo(b9,b10))) {
        TraceOperation 022599 New_line;
        GamePrint "\n";
        Jump: 022600
      } else {
        Jump: 022600
      }
    } else {
      Jump: 022600
    }
  }
LocOp 022600:
  TraceOperation 022600 (Store (Con 208) (Con 0));
  SetByte 008292 0;
  SetByte 008293 0;
  TraceOperation 022603 (Jump 022648);
  Jump: 022648
LocOp 022606:
  TraceOperation 022606 (Store (Con 211) (Var (Global 235)));
  Let b1 = M[008378];
  Let b2 = M[008379];
  SetByte 008298 b1;
  SetByte 008299 b2;
  TraceOperation 022609 (Store (Con 195) (Con 0));
  SetByte 008266 0;
  SetByte 008267 0;
  TraceOperation 022612 (Get_parent (Var (Global 195)) Sp);
  Let b3 = M[008298];
  Let b4 = M[008299];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
  PushStack Widen(b5);
  TraceOperation 022615 (Test_attr (Var Sp) (Con 12) (Branch T (Dloc 022622)));
  PopStack popped6;
  Let b7 = M[Offset(Offset(000751,Mul(popped6,9)),1)];
  if (TestBit(b7,3)) {
    Jump: 022622
  } else {
    TraceOperation 022619 (Get_parent (Var (Global 195)) (Global 0));
    Let b8 = M[008298];
    Let b9 = M[008299];
    Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),4)];
    SetByte 007908 HiByte(Widen(b10));
    SetByte 007909 LoByte(Widen(b10));
    Jump: 022622
  }
LocOp 022622:
  TraceOperation 022622 (Call (Floc 028316) [Var (Global 0)] (Global 85));
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame;
  PushReturnAddress 022622;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 1;
  Jump: 028325
LocReturn 022622:
  SetByte 008078 HiByte(call_result);
  SetByte 008079 LoByte(call_result);
  TraceOperation 022628 (Je [Var (Global 152),Con 1,Con 2] (Branch F (Dloc 022635)));
  Let b1 = M[008212];
  Let b2 = M[008213];
  if (LogOr(Equal(MakeHiLo(b1,b2),1),Equal(MakeHiLo(b1,b2),2))) {
    TraceOperation 022634 New_line;
    GamePrint "\n";
    Jump: 022635
  } else {
    Jump: 022635
  }
LocOp 022635:
  TraceOperation 022635 (Print ">");
  GamePrint ">";
  TraceOperation 022640 (Sread (Var (Global 193)) (Var (Global 194)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  Let b7 = M[007910];
  Let b8 = M[007911];
  Let b9 = M[007912];
  Let b10 = M[007913];
  ReadInputFromUser (Just (StatusInfo {room = ite_res6, score = MakeHiLo(b7,b8), turns = MakeHiLo(b9,b10)})) user_command_line_11;
  Let b12 = M[008294];
  Let b13 = M[008295];
  Let b14 = M[008296];
  Let b15 = M[008297];
  Tokenize user_command_line_11 (num_tokens_16,positions17,words18);
  StringBytes user_command_line_11 string_bytes_19;
  Let loop_var20 = 0;
  Label 21: {
    if (Equal(loop_var20,Widen(StringLength(user_command_line_11)))) {
      SetByte Offset(Address(MakeHiLo(b14,b15)),1) num_tokens_16;
      Let loop_var22 = 0;
      Label 23: {
        if (Equal(loop_var22,Widen(num_tokens_16))) {
          TraceOperation 022644 (Loadb (Var (Global 194)) (Con 1) (Global 178));
          Let b24 = M[008296];
          Let b25 = M[008297];
          Let b26 = M[Offset(Address(MakeHiLo(b24,b25)),1)];
          SetByte 008264 HiByte(Widen(b26));
          SetByte 008265 LoByte(Widen(b26));
          Jump: 022648
        } else {
          Let lookee27 = LookupInDict(IndexList(words18,loop_var22));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),0) HiByte(DeAddress(lookee27));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),1) LoByte(DeAddress(lookee27));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),2) StringLength(IndexList(words18,loop_var22));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),3) IndexList(positions17,loop_var22);
          Assign loop_var22 = Add(loop_var22,1);
          Goto: Label 23
        }
      }
    } else {
      SetByte Offset(Offset(Address(MakeHiLo(b12,b13)),1),loop_var20) IndexList(string_bytes_19,loop_var20);
      Assign loop_var20 = Add(loop_var20,1);
      Goto: Label 21
    }
  }
LocOp 022648:
  TraceOperation 022648 (Loadb (Var (Global 194)) (Con 1) (Global 196));
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),1)];
  SetByte 008300 HiByte(Widen(b3));
  SetByte 008301 LoByte(Widen(b3));
  TraceOperation 022652 (Jz (Var (Global 196)) (Branch F (Dloc 022670)));
  Let b4 = M[008300];
  Let b5 = M[008301];
  if (IsZero(MakeHiLo(b4,b5))) {
    TraceOperation 022655 (Print "I beg your pardon?");
    GamePrint "I beg your pardon?";
    TraceOperation 022668 New_line;
    GamePrint "\n";
    TraceOperation 022669 Rfalse;
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 022670
  }
LocOp 022670:
  TraceOperation 022670 (Store (Con 6) (Var (Global 196)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 022673 (Store (Con 196) (Con 0));
  SetByte 008268 0;
  SetByte 008269 0;
  TraceOperation 022676 (Store (Con 177) (Con 0));
  SetByte 008230 0;
  SetByte 008231 0;
  Jump: 022679
LocOp 022679:
  TraceOperation 022679 (Dec_chk (Con 212) (Con 0) (Branch F (Dloc 022689)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (LessThanEqual(MakeHiLo(b1,b2),0)) {
    SetByte 008300 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008301 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 022683 (Store (Con 195) (Con 0));
    SetByte 008266 0;
    SetByte 008267 0;
    TraceOperation 022686 (Jump 023396);
    Jump: 023396
  } else {
    SetByte 008300 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008301 LoByte(Sub(MakeHiLo(b1,b2),1));
    Jump: 022689
  }
LocOp 022689:
  TraceOperation 022689 (Loadw (Var (Global 194)) (Var (Local 1)) (Local 2));
  Let b1 = M[008296];
  Let b2 = M[008297];
  GetLocal 1 local1_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3)),1)];
  SetLocal 2 MakeHiLo(b4,b5);
  TraceOperation 022693 (Jz (Var (Local 2)) (Branch F (Dloc 022706)));
  GetLocal 2 local2_6;
  if (IsZero(local2_6)) {
    TraceOperation 022696 (Call (Floc 023996) [Var (Local 1)] (Local 2));
    GetLocal 1 local1_7;
    PushFrame;
    PushReturnAddress 022696;
    SetLocal 1 local1_7;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 024011
  } else {
    Jump: 022706
  }
LocReturn 022696:
  SetLocal 2 call_result;
  TraceOperation 022702 (Jz (Var (Local 2)) (Branch T (Dloc 023379)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    Jump: 023379
  } else {
    Jump: 022706
  }
LocOp 022706:
  TraceOperation 022706 (Je [Var (Local 2),Con 19664] (Branch F (Dloc 022750)));
  GetLocal 2 local2_1;
  if (Equal(local2_1,19664)) {
    TraceOperation 022712 (Je [Var (Local 4),Con 233,Con 136] (Branch F (Dloc 022750)));
    GetLocal 4 local4_2;
    if (LogOr(Equal(local4_2,233),Equal(local4_2,136))) {
      TraceOperation 022718 (Add (Var (Local 1)) (Con 2) Sp);
      GetLocal 1 local1_3;
      PushStack Add(local1_3,2);
      TraceOperation 022722 (Loadw (Var (Global 194)) (Var Sp) Sp);
      Let b4 = M[008296];
      Let b5 = M[008297];
      PopStack popped6;
      Let b7 = M[Offset(Address(MakeHiLo(b4,b5)),Mul(2,popped6))];
      Let b8 = M[Offset(Offset(Address(MakeHiLo(b4,b5)),Mul(2,popped6)),1)];
      PushStack MakeHiLo(b7,b8);
      TraceOperation 022726 (Call (Floc 023466) [Var Sp,Con 64,Con 1] Sp);
      PopStack popped9;
      PushFrame;
      PushReturnAddress 022726;
      SetLocal 1 popped9;
      SetLocal 2 64;
      SetLocal 3 1;
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 5;
      Jump: 023477
    } else {
      Jump: 022750
    }
  } else {
    Jump: 022750
  }
LocReturn 022726:
  PushStack call_result;
  TraceOperation 022734 (Jz (Var Sp) (Branch T (Dloc 022750)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 022750
  } else {
    TraceOperation 022737 (Storew (Var (Global 184)) (Con 0) (Con 233));
    Let b2 = M[008276];
    Let b3 = M[008277];
    SetByte Offset(Address(MakeHiLo(b2,b3)),0) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b2,b3)),0),1) 233;
    TraceOperation 022742 (Store (Con 2) (Con 13686));
    SetLocal 2 13686;
    TraceOperation 022747 (Jump 022777);
    Jump: 022777
  }
LocOp 022750:
  TraceOperation 022750 (Je [Var (Local 2),Con 19559] (Branch F (Dloc 022777)));
  GetLocal 2 local2_1;
  if (Equal(local2_1,19559)) {
    TraceOperation 022756 (Jz (Var (Local 4)) (Branch F (Dloc 022777)));
    GetLocal 4 local4_2;
    if (IsZero(local4_2)) {
      TraceOperation 022759 (Jz (Var (Global 179)) (Branch F (Dloc 022777)));
      Let b3 = M[008266];
      Let b4 = M[008267];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 022762 (Storew (Var (Global 184)) (Con 0) (Con 233));
        Let b5 = M[008276];
        Let b6 = M[008277];
        SetByte Offset(Address(MakeHiLo(b5,b6)),0) 0;
        SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),0),1) 233;
        TraceOperation 022767 (Storew (Var (Global 184)) (Con 1) (Con 0));
        Let b7 = M[008276];
        Let b8 = M[008277];
        SetByte Offset(Address(MakeHiLo(b7,b8)),2) 0;
        SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),2),1) 0;
        TraceOperation 022772 (Store (Con 2) (Con 13686));
        SetLocal 2 13686;
        Jump: 022777
      } else {
        Jump: 022777
      }
    } else {
      Jump: 022777
    }
  } else {
    Jump: 022777
  }
LocOp 022777:
  TraceOperation 022777 (Je [Var (Local 2),Con 13665] (Branch F (Dloc 022795)));
  GetLocal 2 local2_1;
  if (Equal(local2_1,13665)) {
    TraceOperation 022783 (Je [Var (Local 9),Con 17228] (Branch F (Dloc 022795)));
    GetLocal 9 local9_2;
    if (Equal(local9_2,17228)) {
      TraceOperation 022789 (Store (Con 9) (Con 0));
      SetLocal 9 0;
      TraceOperation 022792 (Jump 023386);
      Jump: 023386
    } else {
      Jump: 022795
    }
  } else {
    Jump: 022795
  }
LocOp 022795:
  TraceOperation 022795 (Je [Var (Local 2),Con 19559,Con 13665] (Branch T (Dloc 022809)));
  GetLocal 2 local2_1;
  if (LogOr(Equal(local2_1,19559),Equal(local2_1,13665))) {
    Jump: 022809
  } else {
    TraceOperation 022803 (Je [Var (Local 2),Con 13686] (Branch F (Dloc 022859)));
    GetLocal 2 local2_2;
    if (Equal(local2_2,13686)) {
      Jump: 022809
    } else {
      Jump: 022859
    }
  }
LocOp 022809:
  TraceOperation 022809 (Je [Var (Local 2),Con 13686] (Branch F (Dloc 022844)));
  GetLocal 2 local2_1;
  if (Equal(local2_1,13686)) {
    TraceOperation 022815 (Je [Var (Local 4),Con 143,Con 194] (Branch F (Dloc 022832)));
    GetLocal 4 local4_2;
    if (LogOr(Equal(local4_2,143),Equal(local4_2,194))) {
      TraceOperation 022821 (Storew (Var (Global 194)) (Var (Local 1)) (Con 19545));
      Let b3 = M[008296];
      Let b4 = M[008297];
      GetLocal 1 local1_5;
      SetByte Offset(Address(MakeHiLo(b3,b4)),Mul(2,local1_5)) 76;
      SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,local1_5)),1) 89;
      TraceOperation 022827 (Inc (Con 212));
      Let b6 = M[008300];
      Let b7 = M[008301];
      SetByte 008300 HiByte(Add(MakeHiLo(b6,b7),1));
      SetByte 008301 LoByte(Add(MakeHiLo(b6,b7),1));
      TraceOperation 022829 (Jump 022679);
      Jump: 022679
    } else {
      Jump: 022832
    }
  } else {
    Jump: 022844
  }
LocOp 022832:
  TraceOperation 022832 (Jz (Var (Global 179)) (Branch T (Dloc 022841)));
  Let b1 = M[008266];
  Let b2 = M[008267];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022841
  } else {
    TraceOperation 022835 (Store (Con 195) (Con 0));
    SetByte 008266 0;
    SetByte 008267 0;
    TraceOperation 022838 (Jump 022844);
    Jump: 022844
  }
LocOp 022841:
  TraceOperation 022841 (Store (Con 195) (Con 1));
  SetByte 008266 0;
  SetByte 008267 1;
  Jump: 022844
LocOp 022844:
  TraceOperation 022844 (Jz (Var (Global 196)) (Branch T (Dloc 022851)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022851
  } else {
    TraceOperation 022847 (Add (Var (Local 1)) (Con 2) (Global 192));
    GetLocal 1 local1_3;
    SetByte 008292 HiByte(Add(local1_3,2));
    SetByte 008293 LoByte(Add(local1_3,2));
    Jump: 022851
  }
LocOp 022851:
  TraceOperation 022851 (Storeb (Var (Global 194)) (Con 1) (Var (Global 196)));
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008300];
  Let b4 = M[008301];
  SetByte Offset(Address(MakeHiLo(b1,b2)),1) b4;
  TraceOperation 022856 (Jump 023396);
  Jump: 023396
LocOp 022859:
  TraceOperation 022859 (Call (Floc 023466) [Var (Local 2),Con 16,Con 3] (Local 3));
  GetLocal 2 local2_1;
  PushFrame;
  PushReturnAddress 022859;
  SetLocal 1 local2_1;
  SetLocal 2 16;
  SetLocal 3 3;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  Jump: 023477
LocReturn 022859:
  SetLocal 3 call_result;
  TraceOperation 022867 (Jz (Var (Local 3)) (Branch T (Dloc 022970)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    Jump: 022970
  } else {
    TraceOperation 022871 (Je [Var (Local 4),Con 0,Con 244] (Branch F (Dloc 022970)));
    GetLocal 4 local4_2;
    if (LogOr(Equal(local4_2,0),Equal(local4_2,244))) {
      TraceOperation 022878 (Je [Var (Local 6),Con 1] (Branch T (Dloc 022938)));
      GetLocal 6 local6_3;
      if (Equal(local6_3,1)) {
        Jump: 022938
      } else {
        TraceOperation 022883 (Je [Var (Local 6),Con 2] (Branch F (Dloc 022891)));
        GetLocal 6 local6_4;
        if (Equal(local6_4,2)) {
          TraceOperation 022887 (Je [Var (Local 4),Con 244] (Branch T (Dloc 022938)));
          GetLocal 4 local4_5;
          if (Equal(local4_5,244)) {
            Jump: 022938
          } else {
            Jump: 022891
          }
        } else {
          Jump: 022891
        }
      }
    } else {
      Jump: 022970
    }
  }
LocOp 022891:
  TraceOperation 022891 (Add (Var (Local 1)) (Con 2) Sp);
  GetLocal 1 local1_1;
  PushStack Add(local1_1,2);
  TraceOperation 022895 (Loadw (Var (Global 194)) (Var Sp) (Local 8));
  Let b2 = M[008296];
  Let b3 = M[008297];
  PopStack popped4;
  Let b5 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4)),1)];
  SetLocal 8 MakeHiLo(b5,b6);
  TraceOperation 022899 (Je [Var (Local 8),Con 19559,Con 13665,Con 13686] (Branch F (Dloc 022913)));
  GetLocal 8 local8_7;
  if (LogOr(LogOr(Equal(local8_7,19559),Equal(local8_7,13665)),Equal(local8_7,13686))) {
    TraceOperation 022909 (Jl (Var (Local 6)) (Con 2) (Branch F (Dloc 022938)));
    GetLocal 6 local6_8;
    if (LessThan(local6_8,2)) {
      Jump: 022913
    } else {
      Jump: 022938
    }
  } else {
    Jump: 022913
  }
LocOp 022913:
  TraceOperation 022913 (Jz (Var (Global 179)) (Branch T (Dloc 022926)));
  Let b1 = M[008266];
  Let b2 = M[008267];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 022926
  } else {
    TraceOperation 022916 (Je [Var (Local 6),Con 2] (Branch F (Dloc 022926)));
    GetLocal 6 local6_3;
    if (Equal(local6_3,2)) {
      TraceOperation 022920 (Je [Var (Local 8),Con 13686] (Branch T (Dloc 022938)));
      GetLocal 8 local8_4;
      if (Equal(local8_4,13686)) {
        Jump: 022938
      } else {
        Jump: 022926
      }
    } else {
      Jump: 022926
    }
  }
LocOp 022926:
  TraceOperation 022926 (Jg (Var (Local 6)) (Con 2) (Branch F (Dloc 022970)));
  GetLocal 6 local6_1;
  if (GreaterThan(local6_1,2)) {
    TraceOperation 022930 (Je [Var (Local 8),Con 13672,Con 13833] (Branch F (Dloc 022970)));
    GetLocal 8 local8_2;
    if (LogOr(Equal(local8_2,13672),Equal(local8_2,13833))) {
      Jump: 022938
    } else {
      Jump: 022970
    }
  } else {
    Jump: 022970
  }
LocOp 022938:
  TraceOperation 022938 (Store (Con 7) (Var (Local 3)));
  GetLocal 3 local3_1;
  SetLocal 7 local3_1;
  TraceOperation 022941 (Je [Var (Local 8),Con 13672,Con 13833] (Branch F (Dloc 022959)));
  GetLocal 8 local8_2;
  if (LogOr(Equal(local8_2,13672),Equal(local8_2,13833))) {
    TraceOperation 022949 (Add (Var (Local 1)) (Con 2) Sp);
    GetLocal 1 local1_3;
    PushStack Add(local1_3,2);
    TraceOperation 022953 (Storew (Var (Global 194)) (Var Sp) (Con 19559));
    Let b4 = M[008296];
    Let b5 = M[008297];
    PopStack popped6;
    SetByte Offset(Address(MakeHiLo(b4,b5)),Mul(2,popped6)) 76;
    SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),Mul(2,popped6)),1) 103;
    Jump: 022959
  } else {
    Jump: 022959
  }
LocOp 022959:
  TraceOperation 022959 (Jg (Var (Local 6)) (Con 2) (Branch T (Dloc 023386)));
  GetLocal 6 local6_1;
  if (GreaterThan(local6_1,2)) {
    Jump: 023386
  } else {
    TraceOperation 022964 (Store (Con 195) (Con 0));
    SetByte 008266 0;
    SetByte 008267 0;
    TraceOperation 022967 (Jump 023396);
    Jump: 023396
  }
LocOp 022970:
  TraceOperation 022970 (Call (Floc 023466) [Var (Local 2),Con 64,Con 1] (Local 3));
  GetLocal 2 local2_1;
  PushFrame;
  PushReturnAddress 022970;
  SetLocal 1 local2_1;
  SetLocal 2 64;
  SetLocal 3 1;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  Jump: 023477
LocReturn 022970:
  SetLocal 3 call_result;
  TraceOperation 022978 (Jz (Var (Local 3)) (Branch T (Dloc 023035)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    Jump: 023035
  } else {
    TraceOperation 022981 (Jz (Var (Local 4)) (Branch F (Dloc 023035)));
    GetLocal 4 local4_2;
    if (IsZero(local4_2)) {
      TraceOperation 022984 (Store (Con 4) (Var (Local 3)));
      GetLocal 3 local3_3;
      SetLocal 4 local3_3;
      TraceOperation 022987 (Storew (Var (Global 184)) (Con 0) (Var (Local 3)));
      Let b4 = M[008276];
      Let b5 = M[008277];
      GetLocal 3 local3_6;
      SetByte Offset(Address(MakeHiLo(b4,b5)),0) HiByte(local3_6);
      SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),0),1) LoByte(local3_6);
      TraceOperation 022992 (Storew (Var (Global 184)) (Con 1) (Var (Global 182)));
      Let b7 = M[008276];
      Let b8 = M[008277];
      Let b9 = M[008272];
      Let b10 = M[008273];
      SetByte Offset(Address(MakeHiLo(b7,b8)),2) b9;
      SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),2),1) b10;
      TraceOperation 022997 (Storew (Var (Global 182)) (Con 0) (Var (Local 2)));
      Let b11 = M[008272];
      Let b12 = M[008273];
      GetLocal 2 local2_13;
      SetByte Offset(Address(MakeHiLo(b11,b12)),0) HiByte(local2_13);
      SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),0),1) LoByte(local2_13);
      TraceOperation 023002 (Mul (Var (Local 1)) (Con 2) Sp);
      GetLocal 1 local1_14;
      PushStack Mul(local1_14,2);
      TraceOperation 023006 (Add (Var Sp) (Con 2) (Local 10));
      PopStack popped15;
      SetLocal 10 Add(popped15,2);
      TraceOperation 023010 (Loadb (Var (Global 194)) (Var (Local 10)) Sp);
      Let b16 = M[008296];
      Let b17 = M[008297];
      GetLocal 10 local10_18;
      Let b19 = M[Offset(Address(MakeHiLo(b16,b17)),local10_18)];
      PushStack Widen(b19);
      TraceOperation 023014 (Storeb (Var (Global 182)) (Con 2) (Var Sp));
      Let b20 = M[008272];
      Let b21 = M[008273];
      PopStack popped22;
      SetByte Offset(Address(MakeHiLo(b20,b21)),2) LoByte(popped22);
      TraceOperation 023019 (Add (Var (Local 10)) (Con 1) Sp);
      GetLocal 10 local10_23;
      PushStack Add(local10_23,1);
      TraceOperation 023023 (Loadb (Var (Global 194)) (Var Sp) Sp);
      Let b24 = M[008296];
      Let b25 = M[008297];
      PopStack popped26;
      Let b27 = M[Offset(Address(MakeHiLo(b24,b25)),popped26)];
      PushStack Widen(b27);
      TraceOperation 023027 (Storeb (Var (Global 182)) (Con 3) (Var Sp));
      Let b28 = M[008272];
      Let b29 = M[008273];
      PopStack popped30;
      SetByte Offset(Address(MakeHiLo(b28,b29)),3) LoByte(popped30);
      TraceOperation 023032 (Jump 023386);
      Jump: 023386
    } else {
      Jump: 023035
    }
  }
LocOp 023035:
  TraceOperation 023035 (Call (Floc 023466) [Var (Local 2),Con 8,Con 0] (Local 3));
  GetLocal 2 local2_1;
  PushFrame;
  PushReturnAddress 023035;
  SetLocal 1 local2_1;
  SetLocal 2 8;
  SetLocal 3 0;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  Jump: 023477
LocReturn 023035:
  SetLocal 3 call_result;
  TraceOperation 023043 (Jz (Var (Local 3)) (Branch F (Dloc 023080)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    TraceOperation 023046 (Je [Var (Local 2),Con 13798,Con 17473,Con 14386] (Branch T (Dloc 023077)));
    GetLocal 2 local2_2;
    if (LogOr(LogOr(Equal(local2_2,13798),Equal(local2_2,17473)),Equal(local2_2,14386))) {
      Jump: 023077
    } else {
      TraceOperation 023056 (Call (Floc 023466) [Var (Local 2),Con 32] Sp);
      GetLocal 2 local2_3;
      PushFrame;
      PushReturnAddress 023056;
      SetLocal 1 local2_3;
      SetLocal 2 32;
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 5;
      SetLocal 3 5;
      Jump: 023477
    }
  } else {
    Jump: 023080
  }
LocReturn 023056:
  PushStack call_result;
  TraceOperation 023063 (Jz (Var Sp) (Branch F (Dloc 023077)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 023066 (Call (Floc 023466) [Var (Local 2),Con 128] Sp);
    GetLocal 2 local2_2;
    PushFrame;
    PushReturnAddress 023066;
    SetLocal 1 local2_2;
    SetLocal 2 128;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 5;
    SetLocal 3 5;
    Jump: 023477
  } else {
    Jump: 023077
  }
LocReturn 023066:
  PushStack call_result;
  TraceOperation 023073 (Jz (Var Sp) (Branch T (Dloc 023277)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023277
  } else {
    Jump: 023077
  }
LocOp 023077:
  TraceOperation 023077 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 023080
LocOp 023080:
  TraceOperation 023080 (Jg (Var (Global 196)) (Con 0) (Branch F (Dloc 023120)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 023084 (Add (Var (Local 1)) (Con 2) Sp);
    GetLocal 1 local1_3;
    PushStack Add(local1_3,2);
    TraceOperation 023088 (Loadw (Var (Global 194)) (Var Sp) Sp);
    Let b4 = M[008296];
    Let b5 = M[008297];
    PopStack popped6;
    Let b7 = M[Offset(Address(MakeHiLo(b4,b5)),Mul(2,popped6))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b4,b5)),Mul(2,popped6)),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 023092 (Je [Var Sp,Con 17417] (Branch F (Dloc 023120)));
    PopStack popped9;
    if (Equal(popped9,17417)) {
      TraceOperation 023098 (Jz (Var (Local 3)) (Branch F (Dloc 023120)));
      GetLocal 3 local3_10;
      if (IsZero(local3_10)) {
        TraceOperation 023101 (Je [Var (Local 2),Con 13798,Con 17473,Con 13693] (Branch T (Dloc 023120)));
        GetLocal 2 local2_11;
        if (LogOr(LogOr(Equal(local2_11,13798),Equal(local2_11,17473)),Equal(local2_11,13693))) {
          Jump: 023120
        } else {
          TraceOperation 023111 (Je [Var (Local 2),Con 14386] (Branch T (Dloc 023120)));
          GetLocal 2 local2_12;
          if (Equal(local2_12,14386)) {
            Jump: 023120
          } else {
            TraceOperation 023117 (Jump 023386);
            Jump: 023386
          }
        }
      } else {
        Jump: 023120
      }
    } else {
      Jump: 023120
    }
  } else {
    Jump: 023120
  }
LocOp 023120:
  TraceOperation 023120 (Jz (Var (Local 3)) (Branch T (Dloc 023163)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    Jump: 023163
  } else {
    TraceOperation 023123 (Jz (Var (Global 196)) (Branch T (Dloc 023142)));
    Let b2 = M[008300];
    Let b3 = M[008301];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 023142
    } else {
      TraceOperation 023126 (Add (Var (Local 1)) (Con 2) Sp);
      GetLocal 1 local1_4;
      PushStack Add(local1_4,2);
      TraceOperation 023130 (Loadw (Var (Global 194)) (Var Sp) Sp);
      Let b5 = M[008296];
      Let b6 = M[008297];
      PopStack popped7;
      Let b8 = M[Offset(Address(MakeHiLo(b5,b6)),Mul(2,popped7))];
      Let b9 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,popped7)),1)];
      PushStack MakeHiLo(b8,b9);
      TraceOperation 023134 (Je [Var Sp,Con 19559,Con 13665] (Branch F (Dloc 023163)));
      PopStack popped10;
      if (LogOr(Equal(popped10,19559),Equal(popped10,13665))) {
        Jump: 023142
      } else {
        Jump: 023163
      }
    }
  }
LocOp 023142:
  TraceOperation 023142 (Store (Con 193) (Con 1));
  SetByte 008262 0;
  SetByte 008263 1;
  TraceOperation 023145 (Jl (Var (Global 180)) (Con 2) (Branch F (Dloc 023386)));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (LessThan(MakeHiLo(b1,b2),2)) {
    TraceOperation 023150 (Storew (Var (Global 184)) (Con 2) (Var (Local 3)));
    Let b3 = M[008276];
    Let b4 = M[008277];
    GetLocal 3 local3_5;
    SetByte Offset(Address(MakeHiLo(b3,b4)),4) HiByte(local3_5);
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),4),1) LoByte(local3_5);
    TraceOperation 023155 (Storew (Var (Global 184)) (Con 3) (Var (Local 2)));
    Let b6 = M[008276];
    Let b7 = M[008277];
    GetLocal 2 local2_8;
    SetByte Offset(Address(MakeHiLo(b6,b7)),6) HiByte(local2_8);
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),6),1) LoByte(local2_8);
    TraceOperation 023160 (Jump 023386);
    Jump: 023386
  } else {
    Jump: 023386
  }
LocOp 023163:
  TraceOperation 023163 (Je [Var (Global 180),Con 2] (Branch F (Dloc 023194)));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 023167 (Print "There were too many nouns in that sentence.");
    GamePrint "There were too many nouns in that sentence.";
    TraceOperation 023192 New_line;
    GamePrint "\n";
    TraceOperation 023193 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 023194
  }
LocOp 023194:
  TraceOperation 023194 (Inc (Con 196));
  Let b1 = M[008268];
  Let b2 = M[008269];
  SetByte 008268 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008269 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 023196 (Je [Var (Local 3),Con 250] (Branch F (Dloc 023220)));
  GetLocal 3 local3_3;
  if (Equal(local3_3,250)) {
    TraceOperation 023200 (Add (Var (Local 1)) (Con 2) Sp);
    GetLocal 1 local1_4;
    PushStack Add(local1_4,2);
    TraceOperation 023204 (Loadw (Var (Global 194)) (Var Sp) Sp);
    Let b5 = M[008296];
    Let b6 = M[008297];
    PopStack popped7;
    Let b8 = M[Offset(Address(MakeHiLo(b5,b6)),Mul(2,popped7))];
    Let b9 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),Mul(2,popped7)),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 023208 (Je [Var Sp,Con 15835] (Branch F (Dloc 023220)));
    PopStack popped10;
    if (Equal(popped10,15835)) {
      TraceOperation 023214 (Store (Con 220) (Con 1));
      SetByte 008316 0;
      SetByte 008317 1;
      TraceOperation 023217 (Jump 023255);
      Jump: 023255
    } else {
      Jump: 023220
    }
  } else {
    Jump: 023220
  }
LocOp 023220:
  TraceOperation 023220 (Je [Var (Local 3),Con 248] (Branch F (Dloc 023255)));
  GetLocal 3 local3_1;
  if (Equal(local3_1,248)) {
    TraceOperation 023224 (Add (Var (Local 1)) (Con 2) Sp);
    GetLocal 1 local1_2;
    PushStack Add(local1_2,2);
    TraceOperation 023228 (Loadw (Var (Global 194)) (Var Sp) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    PopStack popped5;
    Let b6 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5))];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,popped5)),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 023232 (Je [Var Sp,Con 16472] (Branch F (Dloc 023255)));
    PopStack popped8;
    if (Equal(popped8,16472)) {
      TraceOperation 023238 (Add (Var (Local 1)) (Con 4) Sp);
      GetLocal 1 local1_9;
      PushStack Add(local1_9,4);
      TraceOperation 023242 (Loadw (Var (Global 194)) (Var Sp) Sp);
      Let b10 = M[008296];
      Let b11 = M[008297];
      PopStack popped12;
      Let b13 = M[Offset(Address(MakeHiLo(b10,b11)),Mul(2,popped12))];
      Let b14 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),Mul(2,popped12)),1)];
      PushStack MakeHiLo(b13,b14);
      TraceOperation 023246 (Je [Var Sp,Con 15835] (Branch F (Dloc 023255)));
      PopStack popped15;
      if (Equal(popped15,15835)) {
        TraceOperation 023252 (Store (Con 220) (Con 1));
        SetByte 008316 0;
        SetByte 008317 1;
        Jump: 023255
      } else {
        Jump: 023255
      }
    } else {
      Jump: 023255
    }
  } else {
    Jump: 023255
  }
LocOp 023255:
  TraceOperation 023255 (Call (Floc 023504) [Var (Local 1),Var (Local 3),Var (Local 2)] (Local 1));
  GetLocal 1 local1_1;
  GetLocal 3 local3_2;
  GetLocal 2 local2_3;
  PushFrame;
  PushReturnAddress 023255;
  SetLocal 1 local1_1;
  SetLocal 2 local3_2;
  SetLocal 3 local2_3;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 1;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 023525
LocReturn 023255:
  SetLocal 1 call_result;
  TraceOperation 023263 (Jz (Var (Local 1)) (Branch T Dfalse));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 023266 (Jl (Var (Local 1)) (Con 0) (Branch F (Dloc 023386)));
    GetLocal 1 local1_3;
    if (LessThan(local1_3,0)) {
      TraceOperation 023271 (Store (Con 195) (Con 0));
      SetByte 008266 0;
      SetByte 008267 0;
      TraceOperation 023274 (Jump 023396);
      Jump: 023396
    } else {
      Jump: 023386
    }
  }
LocOp 023277:
  TraceOperation 023277 (Jz (Var (Local 4)) (Branch F (Dloc 023294)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    TraceOperation 023280 (Je [Var (Local 2),Con 15240,Con 15254] (Branch F (Dloc 023294)));
    GetLocal 2 local2_2;
    if (LogOr(Equal(local2_2,15240),Equal(local2_2,15254))) {
      TraceOperation 023288 (Store (Con 5) (Con 1));
      SetLocal 5 1;
      TraceOperation 023291 (Jump 023386);
      Jump: 023386
    } else {
      Jump: 023294
    }
  } else {
    Jump: 023294
  }
LocOp 023294:
  TraceOperation 023294 (Call (Floc 023466) [Var (Local 2),Con 4] Sp);
  GetLocal 2 local2_1;
  PushFrame;
  PushReturnAddress 023294;
  SetLocal 1 local2_1;
  SetLocal 2 4;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  SetLocal 3 5;
  Jump: 023477
LocReturn 023294:
  PushStack call_result;
  TraceOperation 023301 (Jz (Var Sp) (Branch T (Dloc 023307)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023307
  } else {
    TraceOperation 023304 (Jump 023386);
    Jump: 023386
  }
LocOp 023307:
  TraceOperation 023307 (Je [Var (Local 4),Con 233] (Branch F (Dloc 023372)));
  GetLocal 4 local4_1;
  if (Equal(local4_1,233)) {
    TraceOperation 023312 (Call (Floc 023466) [Var (Local 2),Con 64,Con 1] Sp);
    GetLocal 2 local2_2;
    PushFrame;
    PushReturnAddress 023312;
    SetLocal 1 local2_2;
    SetLocal 2 64;
    SetLocal 3 1;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 5;
    Jump: 023477
  } else {
    Jump: 023372
  }
LocReturn 023312:
  PushStack call_result;
  TraceOperation 023320 (Jz (Var Sp) (Branch T (Dloc 023372)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023372
  } else {
    TraceOperation 023323 (Je [Var (Global 195),Var (Global 235)] (Branch F (Dloc 023372)));
    Let b2 = M[008298];
    Let b3 = M[008299];
    Let b4 = M[008378];
    Let b5 = M[008379];
    if (Equal(MakeHiLo(b2,b3),MakeHiLo(b4,b5))) {
      TraceOperation 023327 (Print "Please consult your manual for the correct way to talk to characters.");
      GamePrint "Please consult your manual for the correct way to talk to characters.";
      TraceOperation 023370 New_line;
      GamePrint "\n";
      TraceOperation 023371 Rfalse;
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    } else {
      Jump: 023372
    }
  }
LocOp 023372:
  TraceOperation 023372 (Call (Floc 024824) [Var (Local 1)] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 023372;
  SetLocal 1 local1_1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 024831
LocReturn 023372:
  PushStack call_result;
  TraceOperation 023378 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 023379:
  TraceOperation 023379 (Call (Floc 024762) [Var (Local 1)] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 023379;
  SetLocal 1 local1_1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 024769
LocReturn 023379:
  PushStack call_result;
  TraceOperation 023385 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 023386:
  TraceOperation 023386 (Store (Con 9) (Var (Local 2)));
  GetLocal 2 local2_1;
  SetLocal 9 local2_1;
  TraceOperation 023389 (Add (Var (Local 1)) (Con 2) (Local 1));
  GetLocal 1 local1_2;
  SetLocal 1 Add(local1_2,2);
  TraceOperation 023393 (Jump 022679);
  Jump: 022679
LocOp 023396:
  TraceOperation 023396 (Jz (Var (Local 7)) (Branch T (Dloc 023416)));
  GetLocal 7 local7_1;
  if (IsZero(local7_1)) {
    Jump: 023416
  } else {
    TraceOperation 023399 (Store (Con 219) (Con 169));
    SetByte 008314 0;
    SetByte 008315 169;
    TraceOperation 023402 (Store (Con 217) (Var (Local 7)));
    GetLocal 7 local7_2;
    SetByte 008310 HiByte(local7_2);
    SetByte 008311 LoByte(local7_2);
    TraceOperation 023405 (Store (Con 205) (Con 0));
    SetByte 008286 0;
    SetByte 008287 0;
    TraceOperation 023408 (Store (Con 191) (Var (Local 7)));
    GetLocal 7 local7_3;
    SetByte 008258 HiByte(local7_3);
    SetByte 008259 LoByte(local7_3);
    TraceOperation 023411 (Store (Con 192) (Var (Local 5)));
    GetLocal 5 local5_4;
    SetByte 008260 HiByte(local5_4);
    SetByte 008261 LoByte(local5_4);
    TraceOperation 023414 (Ret (Con 1));
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  }
LocOp 023416:
  TraceOperation 023416 (Store (Con 191) (Con 0));
  SetByte 008258 0;
  SetByte 008259 0;
  TraceOperation 023419 (Jz (Var (Global 189)) (Branch T (Dloc 023430)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 023430
  } else {
    TraceOperation 023422 (Call (Floc 024134) [] Sp);
    PushFrame;
    PushReturnAddress 023422;
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 -1;
    Jump: 024151
  }
LocReturn 023422:
  PushStack call_result;
  TraceOperation 023427 (Jz (Var Sp) (Branch F (Dloc 023433)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023430
  } else {
    Jump: 023433
  }
LocOp 023430:
  TraceOperation 023430 (Store (Con 192) (Var (Local 5)));
  GetLocal 5 local5_1;
  SetByte 008260 HiByte(local5_1);
  SetByte 008261 LoByte(local5_1);
  Jump: 023433
LocOp 023433:
  TraceOperation 023433 (Call (Floc 024902) [] Sp);
  PushFrame;
  PushReturnAddress 023433;
  MakeRoutineFrame 11;
  SetLocal 11 0;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 024925
LocReturn 023433:
  PushStack call_result;
  TraceOperation 023438 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 023441 (Call (Floc 026166) [] Sp);
    PushFrame;
    PushReturnAddress 023441;
    MakeRoutineFrame 1;
    SetLocal 1 0;
    Jump: 026169
  }
LocReturn 023441:
  PushStack call_result;
  TraceOperation 023446 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 023449 (Call (Floc 028114) [] Sp);
    PushFrame;
    PushReturnAddress 023449;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 028121
  }
LocReturn 023449:
  PushStack call_result;
  TraceOperation 023454 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 023457 (Call (Floc 027810) [] Sp);
    PushFrame;
    PushReturnAddress 023457;
    MakeRoutineFrame 0;
    Jump: 027811
  }
LocReturn 023457:
  PushStack call_result;
  TraceOperation 023462 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 023465 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 023466:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 5;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 5;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 023477
LocOp 023477:
  TraceOperation 023477 (Loadb (Var (Local 1)) (Con 4) (Local 5));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),4)];
  SetLocal 5 Widen(b2);
  TraceOperation 023481 (Test (Var (Local 5)) (Var (Local 2)) (Branch F Dfalse));
  GetLocal 5 local5_3;
  GetLocal 2 local2_4;
  if (Equal(And(local5_3,local2_4),local2_4)) {
    TraceOperation 023485 (Jg (Var (Local 3)) (Con 4) (Branch T Dtrue));
    GetLocal 3 local3_5;
    if (GreaterThan(local3_5,4)) {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    } else {
      TraceOperation 023489 (And (Var (Local 5)) (Con 3) (Local 5));
      GetLocal 5 local5_7;
      SetLocal 5 And(local5_7,3);
      TraceOperation 023493 (Je [Var (Local 5),Var (Local 3)] (Branch T (Dloc 023499)));
      GetLocal 5 local5_8;
      GetLocal 3 local3_9;
      if (Equal(local5_8,local3_9)) {
        Jump: 023499
      } else {
        TraceOperation 023497 (Inc (Con 4));
        GetLocal 4 local4_10;
        SetLocal 4 Add(local4_10,1);
        Jump: 023499
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 0;
    JumpIndirect: (return) return_address_11
  }
LocOp 023499:
  TraceOperation 023499 (Loadb (Var (Local 1)) (Var (Local 4)) Sp);
  GetLocal 1 local1_1;
  GetLocal 4 local4_2;
  Let b3 = M[Offset(Address(local1_1),local4_2)];
  PushStack Widen(b3);
  TraceOperation 023503 Ret_popped;
  PopStack popped4;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult popped4;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 023504:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 1;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 023525
LocOp 023525:
  TraceOperation 023525 (Sub (Var (Global 180)) (Con 1) Sp);
  Let b1 = M[008268];
  Let b2 = M[008269];
  PushStack Sub(MakeHiLo(b1,b2),1);
  TraceOperation 023529 (Mul (Var Sp) (Con 2) (Local 4));
  PopStack popped3;
  SetLocal 4 Mul(popped3,2);
  TraceOperation 023533 (Jz (Var (Local 2)) (Branch T (Dloc 023561)));
  GetLocal 2 local2_4;
  if (IsZero(local2_4)) {
    Jump: 023561
  } else {
    TraceOperation 023536 (Add (Con 2) (Var (Local 4)) (Local 5));
    GetLocal 4 local4_5;
    SetLocal 5 Add(2,local4_5);
    TraceOperation 023540 (Storew (Var (Global 184)) (Var (Local 5)) (Var (Local 2)));
    Let b6 = M[008276];
    Let b7 = M[008277];
    GetLocal 5 local5_8;
    GetLocal 2 local2_9;
    SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,local5_8)) HiByte(local2_9);
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,local5_8)),1) LoByte(local2_9);
    TraceOperation 023545 (Add (Var (Local 5)) (Con 1) Sp);
    GetLocal 5 local5_10;
    PushStack Add(local5_10,1);
    TraceOperation 023549 (Storew (Var (Global 184)) (Var Sp) (Var (Local 3)));
    Let b11 = M[008276];
    Let b12 = M[008277];
    PopStack popped13;
    GetLocal 3 local3_14;
    SetByte Offset(Address(MakeHiLo(b11,b12)),Mul(2,popped13)) HiByte(local3_14);
    SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),Mul(2,popped13)),1) LoByte(local3_14);
    TraceOperation 023554 (Add (Var (Local 1)) (Con 2) (Local 1));
    GetLocal 1 local1_15;
    SetLocal 1 Add(local1_15,2);
    TraceOperation 023558 (Jump 023563);
    Jump: 023563
  }
LocOp 023561:
  TraceOperation 023561 (Inc (Con 212));
  Let b1 = M[008300];
  Let b2 = M[008301];
  SetByte 008300 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008301 LoByte(Add(MakeHiLo(b1,b2),1));
  Jump: 023563
LocOp 023563:
  TraceOperation 023563 (Jz (Var (Global 196)) (Branch F (Dloc 023571)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 023566 (Dec (Con 196));
    Let b3 = M[008268];
    Let b4 = M[008269];
    SetByte 008268 HiByte(Sub(MakeHiLo(b3,b4),1));
    SetByte 008269 LoByte(Sub(MakeHiLo(b3,b4),1));
    TraceOperation 023568 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult -1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 023571
  }
LocOp 023571:
  TraceOperation 023571 (Add (Con 6) (Var (Local 4)) (Local 5));
  GetLocal 4 local4_1;
  SetLocal 5 Add(6,local4_1);
  TraceOperation 023575 (Mul (Var (Local 1)) (Con 2) Sp);
  GetLocal 1 local1_2;
  PushStack Mul(local1_2,2);
  TraceOperation 023579 (Add (Var (Global 194)) (Var Sp) Sp);
  Let b3 = M[008296];
  Let b4 = M[008297];
  PopStack popped5;
  PushStack Add(MakeHiLo(b3,b4),popped5);
  TraceOperation 023583 (Storew (Var (Global 184)) (Var (Local 5)) (Var Sp));
  Let b6 = M[008276];
  Let b7 = M[008277];
  GetLocal 5 local5_8;
  PopStack popped9;
  SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,local5_8)) HiByte(popped9);
  SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,local5_8)),1) LoByte(popped9);
  TraceOperation 023588 (Loadw (Var (Global 194)) (Var (Local 1)) Sp);
  Let b10 = M[008296];
  Let b11 = M[008297];
  GetLocal 1 local1_12;
  Let b13 = M[Offset(Address(MakeHiLo(b10,b11)),Mul(2,local1_12))];
  Let b14 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),Mul(2,local1_12)),1)];
  PushStack MakeHiLo(b13,b14);
  TraceOperation 023592 (Je [Var Sp,Con 19545,Con 13693,Con 13819] (Branch F (Dloc 023615)));
  PopStack popped15;
  if (LogOr(LogOr(Equal(popped15,19545),Equal(popped15,13693)),Equal(popped15,13819))) {
    TraceOperation 023602 (Loadw (Var (Global 184)) (Var (Local 5)) Sp);
    Let b16 = M[008276];
    Let b17 = M[008277];
    GetLocal 5 local5_18;
    Let b19 = M[Offset(Address(MakeHiLo(b16,b17)),Mul(2,local5_18))];
    Let b20 = M[Offset(Offset(Address(MakeHiLo(b16,b17)),Mul(2,local5_18)),1)];
    PushStack MakeHiLo(b19,b20);
    TraceOperation 023606 (Add (Var Sp) (Con 4) Sp);
    PopStack popped21;
    PushStack Add(popped21,4);
    TraceOperation 023610 (Storew (Var (Global 184)) (Var (Local 5)) (Var Sp));
    Let b22 = M[008276];
    Let b23 = M[008277];
    GetLocal 5 local5_24;
    PopStack popped25;
    SetByte Offset(Address(MakeHiLo(b22,b23)),Mul(2,local5_24)) HiByte(popped25);
    SetByte Offset(Offset(Address(MakeHiLo(b22,b23)),Mul(2,local5_24)),1) LoByte(popped25);
    Jump: 023615
  } else {
    Jump: 023615
  }
LocOp 023615:
  TraceOperation 023615 (Dec_chk (Con 212) (Con 0) (Branch F (Dloc 023639)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (LessThanEqual(MakeHiLo(b1,b2),0)) {
    SetByte 008300 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008301 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 023619 (Add (Var (Local 5)) (Con 1) (Local 10));
    GetLocal 5 local5_3;
    SetLocal 10 Add(local5_3,1);
    TraceOperation 023623 (Mul (Var (Local 1)) (Con 2) Sp);
    GetLocal 1 local1_4;
    PushStack Mul(local1_4,2);
    TraceOperation 023627 (Add (Var (Global 194)) (Var Sp) Sp);
    Let b5 = M[008296];
    Let b6 = M[008297];
    PopStack popped7;
    PushStack Add(MakeHiLo(b5,b6),popped7);
    TraceOperation 023631 (Storew (Var (Global 184)) (Var (Local 10)) (Var Sp));
    Let b8 = M[008276];
    Let b9 = M[008277];
    GetLocal 10 local10_10;
    PopStack popped11;
    SetByte Offset(Address(MakeHiLo(b8,b9)),Mul(2,local10_10)) HiByte(popped11);
    SetByte Offset(Offset(Address(MakeHiLo(b8,b9)),Mul(2,local10_10)),1) LoByte(popped11);
    TraceOperation 023636 (Ret (Con -1));
    PopFrame;
    PopReturnAddress return_address_12;
    SetResult -1;
    JumpIndirect: (return) return_address_12
  } else {
    SetByte 008300 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 008301 LoByte(Sub(MakeHiLo(b1,b2),1));
    Jump: 023639
  }
LocOp 023639:
  TraceOperation 023639 (Loadw (Var (Global 194)) (Var (Local 1)) (Local 3));
  Let b1 = M[008296];
  Let b2 = M[008297];
  GetLocal 1 local1_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3)),1)];
  SetLocal 3 MakeHiLo(b4,b5);
  TraceOperation 023643 (Jz (Var (Local 3)) (Branch F (Dloc 023656)));
  GetLocal 3 local3_6;
  if (IsZero(local3_6)) {
    TraceOperation 023646 (Call (Floc 023996) [Var (Local 1)] (Local 3));
    GetLocal 1 local1_7;
    PushFrame;
    PushReturnAddress 023646;
    SetLocal 1 local1_7;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 024011
  } else {
    Jump: 023656
  }
LocReturn 023646:
  SetLocal 3 call_result;
  TraceOperation 023652 (Jz (Var (Local 3)) (Branch T (Dloc 023976)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    Jump: 023976
  } else {
    Jump: 023656
  }
LocOp 023656:
  TraceOperation 023656 (Jz (Var (Global 196)) (Branch F (Dloc 023665)));
  Let b1 = M[008300];
  Let b2 = M[008301];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 023659 (Store (Con 8) (Con 0));
    SetLocal 8 0;
    TraceOperation 023662 (Jump 023673);
    Jump: 023673
  } else {
    Jump: 023665
  }
LocOp 023665:
  TraceOperation 023665 (Add (Var (Local 1)) (Con 2) Sp);
  GetLocal 1 local1_1;
  PushStack Add(local1_1,2);
  TraceOperation 023669 (Loadw (Var (Global 194)) (Var Sp) (Local 8));
  Let b2 = M[008296];
  Let b3 = M[008297];
  PopStack popped4;
  Let b5 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4)),1)];
  SetLocal 8 MakeHiLo(b5,b6);
  Jump: 023673
LocOp 023673:
  TraceOperation 023673 (Je [Var (Local 3),Con 13665] (Branch F (Dloc 023691)));
  GetLocal 3 local3_1;
  if (Equal(local3_1,13665)) {
    TraceOperation 023679 (Je [Var (Local 9),Con 17228] (Branch F (Dloc 023691)));
    GetLocal 9 local9_2;
    if (Equal(local9_2,17228)) {
      TraceOperation 023685 (Store (Con 9) (Con 0));
      SetLocal 9 0;
      TraceOperation 023688 (Jump 023983);
      Jump: 023983
    } else {
      Jump: 023691
    }
  } else {
    Jump: 023691
  }
LocOp 023691:
  TraceOperation 023691 (Je [Var (Local 3),Con 13833,Con 13672] (Branch F (Dloc 023705)));
  GetLocal 3 local3_1;
  if (LogOr(Equal(local3_1,13833),Equal(local3_1,13672))) {
    TraceOperation 023699 (Store (Con 6) (Con 1));
    SetLocal 6 1;
    TraceOperation 023702 (Jump 023983);
    Jump: 023983
  } else {
    Jump: 023705
  }
LocOp 023705:
  TraceOperation 023705 (Je [Var (Local 3),Con 13798,Con 17473,Con 14386] (Branch F (Dloc 023731)));
  GetLocal 3 local3_1;
  if (LogOr(LogOr(Equal(local3_1,13798),Equal(local3_1,17473)),Equal(local3_1,14386))) {
    TraceOperation 023715 (Je [Var (Local 8),Con 17417] (Branch F (Dloc 023983)));
    GetLocal 8 local8_2;
    if (Equal(local8_2,17417)) {
      TraceOperation 023722 (Dec (Con 212));
      Let b3 = M[008300];
      Let b4 = M[008301];
      SetByte 008300 HiByte(Sub(MakeHiLo(b3,b4),1));
      SetByte 008301 LoByte(Sub(MakeHiLo(b3,b4),1));
      TraceOperation 023724 (Add (Var (Local 1)) (Con 2) (Local 1));
      GetLocal 1 local1_5;
      SetLocal 1 Add(local1_5,2);
      TraceOperation 023728 (Jump 023983);
      Jump: 023983
    } else {
      Jump: 023983
    }
  } else {
    Jump: 023731
  }
LocOp 023731:
  TraceOperation 023731 (Je [Var (Local 3),Con 19559,Con 13665] (Branch T (Dloc 023759)));
  GetLocal 3 local3_1;
  if (LogOr(Equal(local3_1,19559),Equal(local3_1,13665))) {
    Jump: 023759
  } else {
    TraceOperation 023739 (Call (Floc 023466) [Var (Local 3),Con 8] Sp);
    GetLocal 3 local3_2;
    PushFrame;
    PushReturnAddress 023739;
    SetLocal 1 local3_2;
    SetLocal 2 8;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 5;
    SetLocal 3 5;
    Jump: 023477
  }
LocReturn 023739:
  PushStack call_result;
  TraceOperation 023746 (Jz (Var Sp) (Branch T (Dloc 023784)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023784
  } else {
    TraceOperation 023749 (Loadw (Var (Global 184)) (Con 0) Sp);
    Let b2 = M[008276];
    Let b3 = M[008277];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),0)];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),0),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 023753 (Jz (Var Sp) (Branch T (Dloc 023784)));
    PopStack popped6;
    if (IsZero(popped6)) {
      Jump: 023784
    } else {
      TraceOperation 023756 (Jz (Var (Local 7)) (Branch F (Dloc 023784)));
      GetLocal 7 local7_7;
      if (IsZero(local7_7)) {
        Jump: 023759
      } else {
        Jump: 023784
      }
    }
  }
LocOp 023759:
  TraceOperation 023759 (Inc (Con 212));
  Let b1 = M[008300];
  Let b2 = M[008301];
  SetByte 008300 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008301 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 023761 (Add (Var (Local 5)) (Con 1) (Local 10));
  GetLocal 5 local5_3;
  SetLocal 10 Add(local5_3,1);
  TraceOperation 023765 (Mul (Var (Local 1)) (Con 2) Sp);
  GetLocal 1 local1_4;
  PushStack Mul(local1_4,2);
  TraceOperation 023769 (Add (Var (Global 194)) (Var Sp) Sp);
  Let b5 = M[008296];
  Let b6 = M[008297];
  PopStack popped7;
  PushStack Add(MakeHiLo(b5,b6),popped7);
  TraceOperation 023773 (Storew (Var (Global 184)) (Var (Local 10)) (Var Sp));
  Let b8 = M[008276];
  Let b9 = M[008277];
  GetLocal 10 local10_10;
  PopStack popped11;
  SetByte Offset(Address(MakeHiLo(b8,b9)),Mul(2,local10_10)) HiByte(popped11);
  SetByte Offset(Offset(Address(MakeHiLo(b8,b9)),Mul(2,local10_10)),1) LoByte(popped11);
  TraceOperation 023778 (Sub (Var (Local 1)) (Con 2) Sp);
  GetLocal 1 local1_12;
  PushStack Sub(local1_12,2);
  TraceOperation 023782 (Ret (Var Sp));
  PopStack popped13;
  PopFrame;
  PopReturnAddress return_address_14;
  SetResult popped13;
  JumpIndirect: (return) return_address_14
LocOp 023784:
  TraceOperation 023784 (Jz (Var (Local 6)) (Branch T (Dloc 023815)));
  GetLocal 6 local6_1;
  if (IsZero(local6_1)) {
    Jump: 023815
  } else {
    TraceOperation 023787 (Loadw (Var (Global 184)) (Con 0) Sp);
    Let b2 = M[008276];
    Let b3 = M[008277];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),0)];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),0),1)];
    PushStack MakeHiLo(b4,b5);
    TraceOperation 023791 (Jz (Var Sp) (Branch F (Dloc 023815)));
    PopStack popped6;
    if (IsZero(popped6)) {
      TraceOperation 023794 (Sub (Var (Local 1)) (Con 4) (Local 1));
      GetLocal 1 local1_7;
      SetLocal 1 Sub(local1_7,4);
      TraceOperation 023798 (Add (Var (Local 1)) (Con 2) Sp);
      GetLocal 1 local1_8;
      PushStack Add(local1_8,2);
      TraceOperation 023802 (Storew (Var (Global 194)) (Var Sp) (Con 19559));
      Let b9 = M[008296];
      Let b10 = M[008297];
      PopStack popped11;
      SetByte Offset(Address(MakeHiLo(b9,b10)),Mul(2,popped11)) 76;
      SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,popped11)),1) 103;
      TraceOperation 023808 (Add (Var (Global 196)) (Con 2) (Global 196));
      Let b12 = M[008300];
      Let b13 = M[008301];
      SetByte 008300 HiByte(Add(MakeHiLo(b12,b13),2));
      SetByte 008301 LoByte(Add(MakeHiLo(b12,b13),2));
      TraceOperation 023812 (Jump 023983);
      Jump: 023983
    } else {
      Jump: 023815
    }
  }
LocOp 023815:
  TraceOperation 023815 (Call (Floc 023466) [Var (Local 3),Con 128] Sp);
  GetLocal 3 local3_1;
  PushFrame;
  PushReturnAddress 023815;
  SetLocal 1 local3_1;
  SetLocal 2 128;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  SetLocal 3 5;
  Jump: 023477
LocReturn 023815:
  PushStack call_result;
  TraceOperation 023822 (Jz (Var Sp) (Branch T (Dloc 023933)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023933
  } else {
    TraceOperation 023826 (Jg (Var (Global 196)) (Con 0) (Branch F (Dloc 023847)));
    Let b2 = M[008300];
    Let b3 = M[008301];
    if (GreaterThan(MakeHiLo(b2,b3),0)) {
      TraceOperation 023830 (Je [Var (Local 8),Con 17417] (Branch F (Dloc 023847)));
      GetLocal 8 local8_4;
      if (Equal(local8_4,17417)) {
        TraceOperation 023836 (Je [Var (Local 3),Con 13798,Con 17473] (Branch T (Dloc 023847)));
        GetLocal 3 local3_5;
        if (LogOr(Equal(local3_5,13798),Equal(local3_5,17473))) {
          Jump: 023847
        } else {
          TraceOperation 023844 (Jump 023983);
          Jump: 023983
        }
      } else {
        Jump: 023847
      }
    } else {
      Jump: 023847
    }
  }
LocOp 023847:
  TraceOperation 023847 (Call (Floc 023466) [Var (Local 3),Con 32,Con 2] Sp);
  GetLocal 3 local3_1;
  PushFrame;
  PushReturnAddress 023847;
  SetLocal 1 local3_1;
  SetLocal 2 32;
  SetLocal 3 2;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  Jump: 023477
LocReturn 023847:
  PushStack call_result;
  TraceOperation 023855 (Jz (Var Sp) (Branch T (Dloc 023885)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023885
  } else {
    TraceOperation 023858 (Jz (Var (Local 8)) (Branch T (Dloc 023885)));
    GetLocal 8 local8_2;
    if (IsZero(local8_2)) {
      Jump: 023885
    } else {
      TraceOperation 023861 (Call (Floc 023466) [Var (Local 8),Con 128] Sp);
      GetLocal 8 local8_3;
      PushFrame;
      PushReturnAddress 023861;
      SetLocal 1 local8_3;
      SetLocal 2 128;
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 5;
      SetLocal 3 5;
      Jump: 023477
    }
  }
LocReturn 023861:
  PushStack call_result;
  TraceOperation 023868 (Jz (Var Sp) (Branch F (Dloc 023983)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 023872 (Call (Floc 023466) [Var (Local 8),Con 32] Sp);
    GetLocal 8 local8_2;
    PushFrame;
    PushReturnAddress 023872;
    SetLocal 1 local8_2;
    SetLocal 2 32;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 5;
    SetLocal 3 5;
    Jump: 023477
  } else {
    Jump: 023983
  }
LocReturn 023872:
  PushStack call_result;
  TraceOperation 023879 (Jz (Var Sp) (Branch T (Dloc 023885)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023885
  } else {
    TraceOperation 023882 (Jump 023983);
    Jump: 023983
  }
LocOp 023885:
  TraceOperation 023885 (Jz (Var (Local 6)) (Branch F (Dloc 023927)));
  GetLocal 6 local6_1;
  if (IsZero(local6_1)) {
    TraceOperation 023888 (Je [Var (Local 8),Con 14505,Con 15499] (Branch T (Dloc 023927)));
    GetLocal 8 local8_2;
    if (LogOr(Equal(local8_2,14505),Equal(local8_2,15499))) {
      Jump: 023927
    } else {
      TraceOperation 023896 (Je [Var (Local 8),Con 13833,Con 13672] (Branch T (Dloc 023927)));
      GetLocal 8 local8_3;
      if (LogOr(Equal(local8_3,13833),Equal(local8_3,13672))) {
        Jump: 023927
      } else {
        TraceOperation 023904 (Add (Var (Local 5)) (Con 1) (Local 10));
        GetLocal 5 local5_4;
        SetLocal 10 Add(local5_4,1);
        TraceOperation 023908 (Add (Var (Local 1)) (Con 2) Sp);
        GetLocal 1 local1_5;
        PushStack Add(local1_5,2);
        TraceOperation 023912 (Mul (Var Sp) (Con 2) Sp);
        PopStack popped6;
        PushStack Mul(popped6,2);
        TraceOperation 023916 (Add (Var (Global 194)) (Var Sp) Sp);
        Let b7 = M[008296];
        Let b8 = M[008297];
        PopStack popped9;
        PushStack Add(MakeHiLo(b7,b8),popped9);
        TraceOperation 023920 (Storew (Var (Global 184)) (Var (Local 10)) (Var Sp));
        Let b10 = M[008276];
        Let b11 = M[008277];
        GetLocal 10 local10_12;
        PopStack popped13;
        SetByte Offset(Address(MakeHiLo(b10,b11)),Mul(2,local10_12)) HiByte(popped13);
        SetByte Offset(Offset(Address(MakeHiLo(b10,b11)),Mul(2,local10_12)),1) LoByte(popped13);
        TraceOperation 023925 (Ret (Var (Local 1)));
        GetLocal 1 local1_14;
        PopFrame;
        PopReturnAddress return_address_15;
        SetResult local1_14;
        JumpIndirect: (return) return_address_15
      }
    }
  } else {
    Jump: 023927
  }
LocOp 023927:
  TraceOperation 023927 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  TraceOperation 023930 (Jump 023983);
  Jump: 023983
LocOp 023933:
  TraceOperation 023933 (Call (Floc 023466) [Var (Local 3),Con 32] Sp);
  GetLocal 3 local3_1;
  PushFrame;
  PushReturnAddress 023933;
  SetLocal 1 local3_1;
  SetLocal 2 32;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  SetLocal 3 5;
  Jump: 023477
LocReturn 023933:
  PushStack call_result;
  TraceOperation 023940 (Jz (Var Sp) (Branch F (Dloc 023983)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 023943 (Call (Floc 023466) [Var (Local 3),Con 4] Sp);
    GetLocal 3 local3_2;
    PushFrame;
    PushReturnAddress 023943;
    SetLocal 1 local3_2;
    SetLocal 2 4;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 5;
    SetLocal 3 5;
    Jump: 023477
  } else {
    Jump: 023983
  }
LocReturn 023943:
  PushStack call_result;
  TraceOperation 023950 (Jz (Var Sp) (Branch T (Dloc 023956)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023956
  } else {
    TraceOperation 023953 (Jump 023983);
    Jump: 023983
  }
LocOp 023956:
  TraceOperation 023956 (Call (Floc 023466) [Var (Local 3),Con 8] Sp);
  GetLocal 3 local3_1;
  PushFrame;
  PushReturnAddress 023956;
  SetLocal 1 local3_1;
  SetLocal 2 8;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  SetLocal 3 5;
  Jump: 023477
LocReturn 023956:
  PushStack call_result;
  TraceOperation 023963 (Jz (Var Sp) (Branch T (Dloc 023969)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 023969
  } else {
    TraceOperation 023966 (Jump 023983);
    Jump: 023983
  }
LocOp 023969:
  TraceOperation 023969 (Call (Floc 024824) [Var (Local 1)] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 023969;
  SetLocal 1 local1_1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 024831
LocReturn 023969:
  PushStack call_result;
  TraceOperation 023975 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 023976:
  TraceOperation 023976 (Call (Floc 024762) [Var (Local 1)] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 023976;
  SetLocal 1 local1_1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 024769
LocReturn 023976:
  PushStack call_result;
  TraceOperation 023982 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 023983:
  TraceOperation 023983 (Store (Con 9) (Var (Local 3)));
  GetLocal 3 local3_1;
  SetLocal 9 local3_1;
  TraceOperation 023986 (Store (Con 7) (Con 0));
  SetLocal 7 0;
  TraceOperation 023989 (Add (Var (Local 1)) (Con 2) (Local 1));
  GetLocal 1 local1_2;
  SetLocal 1 Add(local1_2,2);
  TraceOperation 023993 (Jump 023615);
  Jump: 023615
--------------------------------------------------
LocRoutine 023996:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 0;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 024011
LocOp 024011:
  TraceOperation 024011 (Mul (Var (Local 1)) (Con 2) Sp);
  GetLocal 1 local1_1;
  PushStack Mul(local1_1,2);
  TraceOperation 024015 (Add (Var (Global 194)) (Var Sp) Sp);
  Let b2 = M[008296];
  Let b3 = M[008297];
  PopStack popped4;
  PushStack Add(MakeHiLo(b2,b3),popped4);
  TraceOperation 024019 (Loadb (Var Sp) (Con 2) (Local 2));
  PopStack popped5;
  Let b6 = M[Offset(Address(popped5),2)];
  SetLocal 2 Widen(b6);
  TraceOperation 024023 (Mul (Var (Local 1)) (Con 2) Sp);
  GetLocal 1 local1_7;
  PushStack Mul(local1_7,2);
  TraceOperation 024027 (Add (Var (Global 194)) (Var Sp) Sp);
  Let b8 = M[008296];
  Let b9 = M[008297];
  PopStack popped10;
  PushStack Add(MakeHiLo(b8,b9),popped10);
  TraceOperation 024031 (Loadb (Var Sp) (Con 3) (Local 3));
  PopStack popped11;
  Let b12 = M[Offset(Address(popped11),3)];
  SetLocal 3 Widen(b12);
  Jump: 024035
LocOp 024035:
  TraceOperation 024035 (Dec_chk (Con 2) (Con 0) (Branch F (Dloc 024042)));
  GetLocal 2 local2_1;
  if (LessThanEqual(local2_1,0)) {
    SetLocal 2 Sub(local2_1,1);
    TraceOperation 024039 (Jump 024090);
    Jump: 024090
  } else {
    SetLocal 2 Sub(local2_1,1);
    Jump: 024042
  }
LocOp 024042:
  TraceOperation 024042 (Loadb (Var (Global 193)) (Var (Local 3)) (Local 4));
  Let b1 = M[008294];
  Let b2 = M[008295];
  GetLocal 3 local3_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),local3_3)];
  SetLocal 4 Widen(b4);
  TraceOperation 024046 (Je [Var (Local 4),Con 58] (Branch F (Dloc 024059)));
  GetLocal 4 local4_5;
  if (Equal(local4_5,58)) {
    TraceOperation 024050 (Store (Con 6) (Var (Local 5)));
    GetLocal 5 local5_6;
    SetLocal 6 local5_6;
    TraceOperation 024053 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    TraceOperation 024056 (Jump 024085);
    Jump: 024085
  } else {
    Jump: 024059
  }
LocOp 024059:
  TraceOperation 024059 (Jg (Var (Local 5)) (Con 10000) (Branch T Dfalse));
  GetLocal 5 local5_1;
  if (GreaterThan(local5_1,10000)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 024065 (Jl (Var (Local 4)) (Con 58) (Branch F Dfalse));
    GetLocal 4 local4_3;
    if (LessThan(local4_3,58)) {
      TraceOperation 024069 (Jg (Var (Local 4)) (Con 47) (Branch F Dfalse));
      GetLocal 4 local4_4;
      if (GreaterThan(local4_4,47)) {
        TraceOperation 024073 (Mul (Var (Local 5)) (Con 10) (Local 7));
        GetLocal 5 local5_5;
        SetLocal 7 Mul(local5_5,10);
        TraceOperation 024077 (Sub (Var (Local 4)) (Con 48) Sp);
        GetLocal 4 local4_6;
        PushStack Sub(local4_6,48);
        TraceOperation 024081 (Add (Var (Local 7)) (Var Sp) (Local 5));
        GetLocal 7 local7_7;
        PopStack popped8;
        SetLocal 5 Add(local7_7,popped8);
        Jump: 024085
      } else {
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 0;
        JumpIndirect: (return) return_address_9
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 0;
      JumpIndirect: (return) return_address_10
    }
  }
LocOp 024085:
  TraceOperation 024085 (Inc (Con 3));
  GetLocal 3 local3_1;
  SetLocal 3 Add(local3_1,1);
  TraceOperation 024087 (Jump 024035);
  Jump: 024035
LocOp 024090:
  TraceOperation 024090 (Storew (Var (Global 194)) (Var (Local 1)) (Con 16563));
  Let b1 = M[008296];
  Let b2 = M[008297];
  GetLocal 1 local1_3;
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3)) 64;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3)),1) 179;
  TraceOperation 024096 (Jg (Var (Local 5)) (Con 1000) (Branch T Dfalse));
  GetLocal 5 local5_4;
  if (GreaterThan(local5_4,1000)) {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  } else {
    TraceOperation 024102 (Jz (Var (Local 6)) (Branch T (Dloc 024128)));
    GetLocal 6 local6_6;
    if (IsZero(local6_6)) {
      Jump: 024128
    } else {
      TraceOperation 024105 (Jl (Var (Local 6)) (Con 8) (Branch F (Dloc 024116)));
      GetLocal 6 local6_7;
      if (LessThan(local6_7,8)) {
        TraceOperation 024109 (Add (Var (Local 6)) (Con 12) (Local 6));
        GetLocal 6 local6_8;
        SetLocal 6 Add(local6_8,12);
        TraceOperation 024113 (Jump 024120);
        Jump: 024120
      } else {
        Jump: 024116
      }
    }
  }
LocOp 024116:
  TraceOperation 024116 (Jg (Var (Local 6)) (Con 23) (Branch T Dfalse));
  GetLocal 6 local6_1;
  if (GreaterThan(local6_1,23)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 024120
  }
LocOp 024120:
  TraceOperation 024120 (Mul (Var (Local 6)) (Con 60) Sp);
  GetLocal 6 local6_1;
  PushStack Mul(local6_1,60);
  TraceOperation 024124 (Add (Var (Local 5)) (Var Sp) (Local 5));
  GetLocal 5 local5_2;
  PopStack popped3;
  SetLocal 5 Add(local5_2,popped3);
  Jump: 024128
LocOp 024128:
  TraceOperation 024128 (Store (Con 190) (Var (Local 5)));
  GetLocal 5 local5_1;
  SetByte 008256 HiByte(local5_1);
  SetByte 008257 LoByte(local5_1);
  TraceOperation 024131 (Ret (Con 16563));
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 16563;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 024134:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 -1;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 024151
LocOp 024151:
  TraceOperation 024151 (Store (Con 205) (Con 0));
  SetByte 008286 0;
  SetByte 008287 0;
  TraceOperation 024154 (Loadw (Var (Global 184)) (Con 1) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024158 (Loadw (Var Sp) (Con 0) (Local 7));
  PopStack popped5;
  Let b6 = M[Offset(Address(popped5),0)];
  Let b7 = M[Offset(Offset(Address(popped5),0),1)];
  SetLocal 7 MakeHiLo(b6,b7);
  TraceOperation 024162 (Call (Floc 023466) [Var (Local 7),Con 32,Con 2] Sp);
  GetLocal 7 local7_8;
  PushFrame;
  PushReturnAddress 024162;
  SetLocal 1 local7_8;
  SetLocal 2 32;
  SetLocal 3 2;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  Jump: 023477
LocReturn 024162:
  PushStack call_result;
  TraceOperation 024170 (Jz (Var Sp) (Branch T (Dloc 024179)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 024179
  } else {
    TraceOperation 024173 (Store (Con 6) (Con 1));
    SetLocal 6 1;
    TraceOperation 024176 (Jump 024224);
    Jump: 024224
  }
LocOp 024179:
  TraceOperation 024179 (Call (Floc 023466) [Var (Local 7),Con 128,Con 0] Sp);
  GetLocal 7 local7_1;
  PushFrame;
  PushReturnAddress 024179;
  SetLocal 1 local7_1;
  SetLocal 2 128;
  SetLocal 3 0;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  Jump: 023477
LocReturn 024179:
  PushStack call_result;
  TraceOperation 024187 (Jz (Var Sp) (Branch T (Dloc 024224)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 024224
  } else {
    TraceOperation 024190 (Jz (Var (Global 180)) (Branch F (Dloc 024224)));
    Let b2 = M[008268];
    Let b3 = M[008269];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 024193 (Storew (Var (Global 184)) (Con 0) (Con 0));
      Let b4 = M[008276];
      Let b5 = M[008277];
      SetByte Offset(Address(MakeHiLo(b4,b5)),0) 0;
      SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),0),1) 0;
      TraceOperation 024198 (Storew (Var (Global 184)) (Con 1) (Con 0));
      Let b6 = M[008276];
      Let b7 = M[008277];
      SetByte Offset(Address(MakeHiLo(b6,b7)),2) 0;
      SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),2),1) 0;
      TraceOperation 024203 (Add (Var (Global 194)) (Con 2) Sp);
      Let b8 = M[008296];
      Let b9 = M[008297];
      PushStack Add(MakeHiLo(b8,b9),2);
      TraceOperation 024207 (Storew (Var (Global 184)) (Con 6) (Var Sp));
      Let b10 = M[008276];
      Let b11 = M[008277];
      PopStack popped12;
      SetByte Offset(Address(MakeHiLo(b10,b11)),12) HiByte(popped12);
      SetByte Offset(Offset(Address(MakeHiLo(b10,b11)),12),1) LoByte(popped12);
      TraceOperation 024212 (Add (Var (Global 194)) (Con 6) Sp);
      Let b13 = M[008296];
      Let b14 = M[008297];
      PushStack Add(MakeHiLo(b13,b14),6);
      TraceOperation 024216 (Storew (Var (Global 184)) (Con 7) (Var Sp));
      Let b15 = M[008276];
      Let b16 = M[008277];
      PopStack popped17;
      SetByte Offset(Address(MakeHiLo(b15,b16)),14) HiByte(popped17);
      SetByte Offset(Offset(Address(MakeHiLo(b15,b16)),14),1) LoByte(popped17);
      TraceOperation 024221 (Store (Con 196) (Con 1));
      SetByte 008268 0;
      SetByte 008269 1;
      Jump: 024224
    } else {
      Jump: 024224
    }
  }
LocOp 024224:
  TraceOperation 024224 (Loadw (Var (Global 184)) (Con 0) (Local 3));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  SetLocal 3 MakeHiLo(b3,b4);
  TraceOperation 024228 (Jz (Var (Local 3)) (Branch T (Dloc 024242)));
  GetLocal 3 local3_5;
  if (IsZero(local3_5)) {
    Jump: 024242
  } else {
    TraceOperation 024231 (Jz (Var (Local 6)) (Branch F (Dloc 024242)));
    GetLocal 6 local6_6;
    if (IsZero(local6_6)) {
      TraceOperation 024234 (Loadw (Var (Global 183)) (Con 0) Sp);
      Let b7 = M[008274];
      Let b8 = M[008275];
      Let b9 = M[Offset(Address(MakeHiLo(b7,b8)),0)];
      Let b10 = M[Offset(Offset(Address(MakeHiLo(b7,b8)),0),1)];
      PushStack MakeHiLo(b9,b10);
      TraceOperation 024238 (Je [Var (Local 3),Var Sp] (Branch F Dfalse));
      GetLocal 3 local3_11;
      PopStack popped12;
      if (Equal(local3_11,popped12)) {
        Jump: 024242
      } else {
        PopFrame;
        PopReturnAddress return_address_13;
        SetResult 0;
        JumpIndirect: (return) return_address_13
      }
    } else {
      Jump: 024242
    }
  }
LocOp 024242:
  TraceOperation 024242 (Je [Var (Global 180),Con 2] (Branch T Dfalse));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (Equal(MakeHiLo(b1,b2),2)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 024246 (Loadw (Var (Global 183)) (Con 6) Sp);
    Let b4 = M[008274];
    Let b5 = M[008275];
    Let b6 = M[Offset(Address(MakeHiLo(b4,b5)),12)];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b4,b5)),12),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 024250 (Je [Var Sp,Con 1] (Branch F (Dloc 024328)));
    PopStack popped8;
    if (Equal(popped8,1)) {
      TraceOperation 024255 (Loadw (Var (Global 184)) (Con 2) (Local 2));
      Let b9 = M[008276];
      Let b10 = M[008277];
      Let b11 = M[Offset(Address(MakeHiLo(b9,b10)),4)];
      Let b12 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),4),1)];
      SetLocal 2 MakeHiLo(b11,b12);
      TraceOperation 024259 (Loadw (Var (Global 183)) (Con 2) Sp);
      Let b13 = M[008274];
      Let b14 = M[008275];
      Let b15 = M[Offset(Address(MakeHiLo(b13,b14)),4)];
      Let b16 = M[Offset(Offset(Address(MakeHiLo(b13,b14)),4),1)];
      PushStack MakeHiLo(b15,b16);
      TraceOperation 024263 (Je [Var (Local 2),Var Sp] (Branch T (Dloc 024270)));
      GetLocal 2 local2_17;
      PopStack popped18;
      if (Equal(local2_17,popped18)) {
        Jump: 024270
      } else {
        TraceOperation 024267 (Jz (Var (Local 2)) (Branch F Dfalse));
        GetLocal 2 local2_19;
        if (IsZero(local2_19)) {
          Jump: 024270
        } else {
          PopFrame;
          PopReturnAddress return_address_20;
          SetResult 0;
          JumpIndirect: (return) return_address_20
        }
      }
    } else {
      Jump: 024328
    }
  }
LocOp 024270:
  TraceOperation 024270 (Jz (Var (Local 6)) (Branch T (Dloc 024307)));
  GetLocal 6 local6_1;
  if (IsZero(local6_1)) {
    Jump: 024307
  } else {
    TraceOperation 024273 (Add (Var (Global 194)) (Con 2) Sp);
    Let b2 = M[008296];
    Let b3 = M[008297];
    PushStack Add(MakeHiLo(b2,b3),2);
    TraceOperation 024277 (Storew (Var (Global 183)) (Con 6) (Var Sp));
    Let b4 = M[008274];
    Let b5 = M[008275];
    PopStack popped6;
    SetByte Offset(Address(MakeHiLo(b4,b5)),12) HiByte(popped6);
    SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),12),1) LoByte(popped6);
    TraceOperation 024282 (Loadw (Var (Global 184)) (Con 7) Sp);
    Let b7 = M[008276];
    Let b8 = M[008277];
    Let b9 = M[Offset(Address(MakeHiLo(b7,b8)),14)];
    Let b10 = M[Offset(Offset(Address(MakeHiLo(b7,b8)),14),1)];
    PushStack MakeHiLo(b9,b10);
    TraceOperation 024286 (Jz (Var Sp) (Branch F (Dloc 024298)));
    PopStack popped11;
    if (IsZero(popped11)) {
      TraceOperation 024289 (Add (Var (Global 194)) (Con 6) Sp);
      Let b12 = M[008296];
      Let b13 = M[008297];
      PushStack Add(MakeHiLo(b12,b13),6);
      TraceOperation 024293 (Storew (Var (Global 184)) (Con 7) (Var Sp));
      Let b14 = M[008276];
      Let b15 = M[008277];
      PopStack popped16;
      SetByte Offset(Address(MakeHiLo(b14,b15)),14) HiByte(popped16);
      SetByte Offset(Offset(Address(MakeHiLo(b14,b15)),14),1) LoByte(popped16);
      Jump: 024298
    } else {
      Jump: 024298
    }
  }
LocOp 024298:
  TraceOperation 024298 (Jz (Var (Global 180)) (Branch F (Dloc 024316)));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 024301 (Store (Con 196) (Con 1));
    SetByte 008268 0;
    SetByte 008269 1;
    TraceOperation 024304 (Jump 024316);
    Jump: 024316
  } else {
    Jump: 024316
  }
LocOp 024307:
  TraceOperation 024307 (Loadw (Var (Global 184)) (Con 6) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024311 (Storew (Var (Global 183)) (Con 6) (Var Sp));
  Let b5 = M[008274];
  Let b6 = M[008275];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),12) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),12),1) LoByte(popped7);
  Jump: 024316
LocOp 024316:
  TraceOperation 024316 (Loadw (Var (Global 184)) (Con 7) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),14)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),14),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024320 (Storew (Var (Global 183)) (Con 7) (Var Sp));
  Let b5 = M[008274];
  Let b6 = M[008275];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),14) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),14),1) LoByte(popped7);
  TraceOperation 024325 (Jump 024561);
  Jump: 024561
LocOp 024328:
  TraceOperation 024328 (Loadw (Var (Global 183)) (Con 8) Sp);
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024332 (Je [Var Sp,Con 1] (Branch F (Dloc 024404)));
  PopStack popped5;
  if (Equal(popped5,1)) {
    TraceOperation 024337 (Loadw (Var (Global 184)) (Con 2) (Local 2));
    Let b6 = M[008276];
    Let b7 = M[008277];
    Let b8 = M[Offset(Address(MakeHiLo(b6,b7)),4)];
    Let b9 = M[Offset(Offset(Address(MakeHiLo(b6,b7)),4),1)];
    SetLocal 2 MakeHiLo(b8,b9);
    TraceOperation 024341 (Loadw (Var (Global 183)) (Con 4) Sp);
    Let b10 = M[008274];
    Let b11 = M[008275];
    Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),8)];
    Let b13 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),8),1)];
    PushStack MakeHiLo(b12,b13);
    TraceOperation 024345 (Je [Var (Local 2),Var Sp] (Branch T (Dloc 024352)));
    GetLocal 2 local2_14;
    PopStack popped15;
    if (Equal(local2_14,popped15)) {
      Jump: 024352
    } else {
      TraceOperation 024349 (Jz (Var (Local 2)) (Branch F Dfalse));
      GetLocal 2 local2_16;
      if (IsZero(local2_16)) {
        Jump: 024352
      } else {
        PopFrame;
        PopReturnAddress return_address_17;
        SetResult 0;
        JumpIndirect: (return) return_address_17
      }
    }
  } else {
    Jump: 024404
  }
LocOp 024352:
  TraceOperation 024352 (Jz (Var (Local 6)) (Branch T (Dloc 024380)));
  GetLocal 6 local6_1;
  if (IsZero(local6_1)) {
    Jump: 024380
  } else {
    TraceOperation 024355 (Add (Var (Global 194)) (Con 2) Sp);
    Let b2 = M[008296];
    Let b3 = M[008297];
    PushStack Add(MakeHiLo(b2,b3),2);
    TraceOperation 024359 (Storew (Var (Global 184)) (Con 6) (Var Sp));
    Let b4 = M[008276];
    Let b5 = M[008277];
    PopStack popped6;
    SetByte Offset(Address(MakeHiLo(b4,b5)),12) HiByte(popped6);
    SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),12),1) LoByte(popped6);
    TraceOperation 024364 (Loadw (Var (Global 184)) (Con 7) Sp);
    Let b7 = M[008276];
    Let b8 = M[008277];
    Let b9 = M[Offset(Address(MakeHiLo(b7,b8)),14)];
    Let b10 = M[Offset(Offset(Address(MakeHiLo(b7,b8)),14),1)];
    PushStack MakeHiLo(b9,b10);
    TraceOperation 024368 (Jz (Var Sp) (Branch F (Dloc 024380)));
    PopStack popped11;
    if (IsZero(popped11)) {
      TraceOperation 024371 (Add (Var (Global 194)) (Con 6) Sp);
      Let b12 = M[008296];
      Let b13 = M[008297];
      PushStack Add(MakeHiLo(b12,b13),6);
      TraceOperation 024375 (Storew (Var (Global 184)) (Con 7) (Var Sp));
      Let b14 = M[008276];
      Let b15 = M[008277];
      PopStack popped16;
      SetByte Offset(Address(MakeHiLo(b14,b15)),14) HiByte(popped16);
      SetByte Offset(Offset(Address(MakeHiLo(b14,b15)),14),1) LoByte(popped16);
      Jump: 024380
    } else {
      Jump: 024380
    }
  }
LocOp 024380:
  TraceOperation 024380 (Loadw (Var (Global 184)) (Con 6) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024384 (Storew (Var (Global 183)) (Con 8) (Var Sp));
  Let b5 = M[008274];
  Let b6 = M[008275];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),16) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),16),1) LoByte(popped7);
  TraceOperation 024389 (Loadw (Var (Global 184)) (Con 7) Sp);
  Let b8 = M[008276];
  Let b9 = M[008277];
  Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),14)];
  Let b11 = M[Offset(Offset(Address(MakeHiLo(b8,b9)),14),1)];
  PushStack MakeHiLo(b10,b11);
  TraceOperation 024393 (Storew (Var (Global 183)) (Con 9) (Var Sp));
  Let b12 = M[008274];
  Let b13 = M[008275];
  PopStack popped14;
  SetByte Offset(Address(MakeHiLo(b12,b13)),18) HiByte(popped14);
  SetByte Offset(Offset(Address(MakeHiLo(b12,b13)),18),1) LoByte(popped14);
  TraceOperation 024398 (Store (Con 196) (Con 2));
  SetByte 008268 0;
  SetByte 008269 2;
  TraceOperation 024401 (Jump 024561);
  Jump: 024561
LocOp 024404:
  TraceOperation 024404 (Jz (Var (Global 187)) (Branch T (Dloc 024561)));
  Let b1 = M[008282];
  Let b2 = M[008283];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 024561
  } else {
    TraceOperation 024408 (Je [Var (Global 180),Con 1] (Branch T (Dloc 024419)));
    Let b3 = M[008268];
    Let b4 = M[008269];
    if (Equal(MakeHiLo(b3,b4),1)) {
      Jump: 024419
    } else {
      TraceOperation 024412 (Jz (Var (Local 6)) (Branch F (Dloc 024419)));
      GetLocal 6 local6_5;
      if (IsZero(local6_5)) {
        TraceOperation 024415 (Store (Con 203) (Con 0));
        SetByte 008282 0;
        SetByte 008283 0;
        TraceOperation 024418 Rfalse;
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 0;
        JumpIndirect: (return) return_address_6
      } else {
        Jump: 024419
      }
    }
  }
LocOp 024419:
  TraceOperation 024419 (Loadw (Var (Global 184)) (Con 6) (Local 4));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  SetLocal 4 MakeHiLo(b3,b4);
  TraceOperation 024423 (Jz (Var (Local 6)) (Branch T (Dloc 024433)));
  GetLocal 6 local6_5;
  if (IsZero(local6_5)) {
    Jump: 024433
  } else {
    TraceOperation 024426 (Add (Var (Global 194)) (Con 2) (Local 4));
    Let b6 = M[008296];
    Let b7 = M[008297];
    SetLocal 4 Add(MakeHiLo(b6,b7),2);
    TraceOperation 024430 (Store (Con 6) (Con 0));
    SetLocal 6 0;
    Jump: 024433
  }
LocOp 024433:
  TraceOperation 024433 (Loadw (Var (Global 184)) (Con 7) (Local 5));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),14)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),14),1)];
  SetLocal 5 MakeHiLo(b3,b4);
  Jump: 024437
LocOp 024437:
  TraceOperation 024437 (Loadw (Var (Local 4)) (Con 0) (Local 7));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Address(local4_1),0)];
  Let b3 = M[Offset(Offset(Address(local4_1),0),1)];
  SetLocal 7 MakeHiLo(b2,b3);
  TraceOperation 024441 (Je [Var (Local 4),Var (Local 5)] (Branch F (Dloc 024461)));
  GetLocal 4 local4_4;
  GetLocal 5 local5_5;
  if (Equal(local4_4,local5_5)) {
    TraceOperation 024445 (Jz (Var (Local 6)) (Branch T (Dloc 024457)));
    GetLocal 6 local6_6;
    if (IsZero(local6_6)) {
      Jump: 024457
    } else {
      TraceOperation 024448 (Call (Floc 024618) [Var (Local 6)] Sp);
      GetLocal 6 local6_7;
      PushFrame;
      PushReturnAddress 024448;
      SetLocal 1 local6_7;
      MakeRoutineFrame 1;
      Jump: 024621
    }
  } else {
    Jump: 024461
  }
LocReturn 024448:
  PushStack call_result;
  TraceOperation 024454 (Jump 024561);
  Jump: 024561
LocOp 024457:
  TraceOperation 024457 (Store (Con 203) (Con 0));
  SetByte 008282 0;
  SetByte 008283 0;
  TraceOperation 024460 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 024461:
  TraceOperation 024461 (Jz (Var (Local 6)) (Branch F (Dloc 024486)));
  GetLocal 6 local6_1;
  if (IsZero(local6_1)) {
    TraceOperation 024464 (Loadb (Var (Local 7)) (Con 4) Sp);
    GetLocal 7 local7_2;
    Let b3 = M[Offset(Address(local7_2),4)];
    PushStack Widen(b3);
    TraceOperation 024468 (Test (Var Sp) (Con 32) (Branch T (Dloc 024480)));
    PopStack popped4;
    if (Equal(And(popped4,32),32)) {
      Jump: 024480
    } else {
      TraceOperation 024472 (Je [Var (Local 7),Con 13798,Con 17473] (Branch F (Dloc 024486)));
      GetLocal 7 local7_5;
      if (LogOr(Equal(local7_5,13798),Equal(local7_5,17473))) {
        Jump: 024480
      } else {
        Jump: 024486
      }
    }
  } else {
    Jump: 024486
  }
LocOp 024480:
  TraceOperation 024480 (Store (Con 6) (Var (Local 7)));
  GetLocal 7 local7_1;
  SetLocal 6 local7_1;
  TraceOperation 024483 (Jump 024530);
  Jump: 024530
LocOp 024486:
  TraceOperation 024486 (Je [Var (Local 7),Con 17473] (Branch F (Dloc 024501)));
  GetLocal 7 local7_1;
  if (Equal(local7_1,17473)) {
    TraceOperation 024492 (Call (Floc 024618) [Var (Local 6)] Sp);
    GetLocal 6 local6_2;
    PushFrame;
    PushReturnAddress 024492;
    SetLocal 1 local6_2;
    MakeRoutineFrame 1;
    Jump: 024621
  } else {
    Jump: 024501
  }
LocReturn 024492:
  PushStack call_result;
  TraceOperation 024498 (Jump 024561);
  Jump: 024561
LocOp 024501:
  TraceOperation 024501 (Loadb (Var (Local 7)) (Con 4) Sp);
  GetLocal 7 local7_1;
  Let b2 = M[Offset(Address(local7_1),4)];
  PushStack Widen(b2);
  TraceOperation 024505 (Test (Var Sp) (Con 128) (Branch F (Dloc 024530)));
  PopStack popped3;
  if (Equal(And(popped3,128),128)) {
    TraceOperation 024509 (Je [Var (Local 7),Var (Global 186)] (Branch F (Dloc 024522)));
    GetLocal 7 local7_4;
    Let b5 = M[008280];
    Let b6 = M[008281];
    if (Equal(local7_4,MakeHiLo(b5,b6))) {
      TraceOperation 024513 (Call (Floc 024618) [Var (Local 6)] Sp);
      GetLocal 6 local6_7;
      PushFrame;
      PushReturnAddress 024513;
      SetLocal 1 local6_7;
      MakeRoutineFrame 1;
      Jump: 024621
    } else {
      Jump: 024522
    }
  } else {
    Jump: 024530
  }
LocReturn 024513:
  PushStack call_result;
  TraceOperation 024519 (Jump 024561);
  Jump: 024561
LocOp 024522:
  TraceOperation 024522 (Call (Floc 024694) [] Sp);
  PushFrame;
  PushReturnAddress 024522;
  MakeRoutineFrame 0;
  Jump: 024695
LocReturn 024522:
  PushStack call_result;
  TraceOperation 024527 (Jump 024561);
  Jump: 024561
LocOp 024530:
  TraceOperation 024530 (Add (Var (Local 4)) (Con 4) (Local 4));
  GetLocal 4 local4_1;
  SetLocal 4 Add(local4_1,4);
  TraceOperation 024534 (Jz (Var (Local 5)) (Branch F (Dloc 024437)));
  GetLocal 5 local5_2;
  if (IsZero(local5_2)) {
    TraceOperation 024538 (Store (Con 5) (Var (Local 4)));
    GetLocal 4 local4_3;
    SetLocal 5 local4_3;
    TraceOperation 024541 (Store (Con 196) (Con 1));
    SetByte 008268 0;
    SetByte 008269 1;
    TraceOperation 024544 (Sub (Var (Local 4)) (Con 4) Sp);
    GetLocal 4 local4_4;
    PushStack Sub(local4_4,4);
    TraceOperation 024548 (Storew (Var (Global 184)) (Con 6) (Var Sp));
    Let b5 = M[008276];
    Let b6 = M[008277];
    PopStack popped7;
    SetByte Offset(Address(MakeHiLo(b5,b6)),12) HiByte(popped7);
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),12),1) LoByte(popped7);
    TraceOperation 024553 (Storew (Var (Global 184)) (Con 7) (Var (Local 4)));
    Let b8 = M[008276];
    Let b9 = M[008277];
    GetLocal 4 local4_10;
    SetByte Offset(Address(MakeHiLo(b8,b9)),14) HiByte(local4_10);
    SetByte Offset(Offset(Address(MakeHiLo(b8,b9)),14),1) LoByte(local4_10);
    TraceOperation 024558 (Jump 024437);
    Jump: 024437
  } else {
    Jump: 024437
  }
LocOp 024561:
  TraceOperation 024561 (Loadw (Var (Global 181)) (Con 0) Sp);
  Let b1 = M[008270];
  Let b2 = M[008271];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024565 (Storew (Var (Global 182)) (Con 0) (Var Sp));
  Let b5 = M[008272];
  Let b6 = M[008273];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),0) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),0),1) LoByte(popped7);
  TraceOperation 024570 (Loadb (Var (Global 181)) (Con 2) Sp);
  Let b8 = M[008270];
  Let b9 = M[008271];
  Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),2)];
  PushStack Widen(b10);
  TraceOperation 024574 (Storeb (Var (Global 182)) (Con 2) (Var Sp));
  Let b11 = M[008272];
  Let b12 = M[008273];
  PopStack popped13;
  SetByte Offset(Address(MakeHiLo(b11,b12)),2) LoByte(popped13);
  TraceOperation 024579 (Loadb (Var (Global 181)) (Con 3) Sp);
  Let b14 = M[008270];
  Let b15 = M[008271];
  Let b16 = M[Offset(Address(MakeHiLo(b14,b15)),3)];
  PushStack Widen(b16);
  TraceOperation 024583 (Storeb (Var (Global 182)) (Con 3) (Var Sp));
  Let b17 = M[008272];
  Let b18 = M[008273];
  PopStack popped19;
  SetByte Offset(Address(MakeHiLo(b17,b18)),3) LoByte(popped19);
  TraceOperation 024588 (Storew (Var (Global 183)) (Con 1) (Var (Global 182)));
  Let b20 = M[008274];
  Let b21 = M[008275];
  Let b22 = M[008272];
  Let b23 = M[008273];
  SetByte Offset(Address(MakeHiLo(b20,b21)),2) b22;
  SetByte Offset(Offset(Address(MakeHiLo(b20,b21)),2),1) b23;
  TraceOperation 024593 (Storeb (Var (Global 182)) (Con 2) (Con 0));
  Let b24 = M[008272];
  Let b25 = M[008273];
  SetByte Offset(Address(MakeHiLo(b24,b25)),2) 0;
  Jump: 024598
LocOp 024598:
  TraceOperation 024598 (Inc_chk (Con 1) (Con 9) (Branch F (Dloc 024606)));
  GetLocal 1 local1_1;
  SetLocal 1 Add(local1_1,1);
  if (GreaterThanEqual(local1_1,9)) {
    TraceOperation 024602 (Store (Con 204) (Con 1));
    SetByte 008284 0;
    SetByte 008285 1;
    TraceOperation 024605 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 024606
  }
LocOp 024606:
  TraceOperation 024606 (Loadw (Var (Global 183)) (Var (Local 1)) Sp);
  Let b1 = M[008274];
  Let b2 = M[008275];
  GetLocal 1 local1_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 024610 (Storew (Var (Global 184)) (Var (Local 1)) (Var Sp));
  Let b6 = M[008276];
  Let b7 = M[008277];
  GetLocal 1 local1_8;
  PopStack popped9;
  SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,local1_8)) HiByte(popped9);
  SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,local1_8)),1) LoByte(popped9);
  TraceOperation 024615 (Jump 024598);
  Jump: 024598
--------------------------------------------------
LocRoutine 024618:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 024621
LocOp 024621:
  TraceOperation 024621 (Loadw (Var (Global 183)) (Con 0) Sp);
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024625 (Storew (Var (Global 184)) (Con 0) (Var Sp));
  Let b5 = M[008276];
  Let b6 = M[008277];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),0) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),0),1) LoByte(popped7);
  TraceOperation 024630 (Je [Var (Local 1),Con 19503] (Branch F (Dloc 024644)));
  GetLocal 1 local1_8;
  if (Equal(local1_8,19503)) {
    TraceOperation 024636 (Call (Floc 024694) [] Sp);
    PushFrame;
    PushReturnAddress 024636;
    MakeRoutineFrame 0;
    Jump: 024695
  } else {
    Jump: 024644
  }
LocReturn 024636:
  PushStack call_result;
  TraceOperation 024641 (Jump 024680);
  Jump: 024680
LocOp 024644:
  TraceOperation 024644 (Storew (Var (Global 197)) (Con 0) (Var (Global 187)));
  Let b1 = M[008302];
  Let b2 = M[008303];
  Let b3 = M[008282];
  Let b4 = M[008283];
  SetByte Offset(Address(MakeHiLo(b1,b2)),0) b3;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),0),1) b4;
  TraceOperation 024649 (Add (Var (Global 187)) (Con 1) Sp);
  Let b5 = M[008282];
  Let b6 = M[008283];
  PushStack Add(MakeHiLo(b5,b6),1);
  TraceOperation 024653 (Storew (Var (Global 197)) (Con 1) (Var Sp));
  Let b7 = M[008302];
  Let b8 = M[008303];
  PopStack popped9;
  SetByte Offset(Address(MakeHiLo(b7,b8)),2) HiByte(popped9);
  SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),2),1) LoByte(popped9);
  TraceOperation 024658 (Storew (Var (Global 197)) (Con 2) (Var (Global 187)));
  Let b10 = M[008302];
  Let b11 = M[008303];
  Let b12 = M[008282];
  Let b13 = M[008283];
  SetByte Offset(Address(MakeHiLo(b10,b11)),4) b12;
  SetByte Offset(Offset(Address(MakeHiLo(b10,b11)),4),1) b13;
  TraceOperation 024663 (Add (Var (Global 187)) (Con 1) Sp);
  Let b14 = M[008282];
  Let b15 = M[008283];
  PushStack Add(MakeHiLo(b14,b15),1);
  TraceOperation 024667 (Storew (Var (Global 197)) (Con 3) (Var Sp));
  Let b16 = M[008302];
  Let b17 = M[008303];
  PopStack popped18;
  SetByte Offset(Address(MakeHiLo(b16,b17)),6) HiByte(popped18);
  SetByte Offset(Offset(Address(MakeHiLo(b16,b17)),6),1) LoByte(popped18);
  TraceOperation 024672 (Call (Floc 025860) [Var (Global 183),Var (Global 183),Var (Local 1)] Sp);
  Let b19 = M[008274];
  Let b20 = M[008275];
  Let b21 = M[008274];
  Let b22 = M[008275];
  GetLocal 1 local1_23;
  PushFrame;
  PushReturnAddress 024672;
  SetLocal 1 MakeHiLo(b19,b20);
  SetLocal 2 MakeHiLo(b21,b22);
  SetLocal 3 local1_23;
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 025873
LocReturn 024672:
  PushStack call_result;
  Jump: 024680
LocOp 024680:
  TraceOperation 024680 (Loadw (Var (Global 183)) (Con 8) Sp);
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024684 (Jz (Var Sp) (Branch T (Dloc 024690)));
  PopStack popped5;
  if (IsZero(popped5)) {
    Jump: 024690
  } else {
    TraceOperation 024687 (Store (Con 196) (Con 2));
    SetByte 008268 0;
    SetByte 008269 2;
    Jump: 024690
  }
LocOp 024690:
  TraceOperation 024690 (Store (Con 203) (Con 0));
  SetByte 008282 0;
  SetByte 008283 0;
  TraceOperation 024693 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 024694:
  MakeRoutineFrame 0;
  Jump: 024695
LocOp 024695:
  TraceOperation 024695 (Storew (Var (Global 197)) (Con 0) (Con 6));
  Let b1 = M[008302];
  Let b2 = M[008303];
  SetByte Offset(Address(MakeHiLo(b1,b2)),0) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),0),1) 6;
  TraceOperation 024700 (Storew (Var (Global 197)) (Con 1) (Con 7));
  Let b3 = M[008302];
  Let b4 = M[008303];
  SetByte Offset(Address(MakeHiLo(b3,b4)),2) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),2),1) 7;
  TraceOperation 024705 (Storew (Var (Global 197)) (Con 2) (Var (Global 187)));
  Let b5 = M[008302];
  Let b6 = M[008303];
  Let b7 = M[008282];
  Let b8 = M[008283];
  SetByte Offset(Address(MakeHiLo(b5,b6)),4) b7;
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),4),1) b8;
  TraceOperation 024710 (Add (Var (Global 187)) (Con 1) Sp);
  Let b9 = M[008282];
  Let b10 = M[008283];
  PushStack Add(MakeHiLo(b9,b10),1);
  TraceOperation 024714 (Storew (Var (Global 197)) (Con 3) (Var Sp));
  Let b11 = M[008302];
  Let b12 = M[008303];
  PopStack popped13;
  SetByte Offset(Address(MakeHiLo(b11,b12)),6) HiByte(popped13);
  SetByte Offset(Offset(Address(MakeHiLo(b11,b12)),6),1) LoByte(popped13);
  TraceOperation 024719 (Call (Floc 025860) [Var (Global 184),Var (Global 183)] Sp);
  Let b14 = M[008276];
  Let b15 = M[008277];
  Let b16 = M[008274];
  Let b17 = M[008275];
  PushFrame;
  PushReturnAddress 024719;
  SetLocal 1 MakeHiLo(b14,b15);
  SetLocal 2 MakeHiLo(b16,b17);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 025873
LocReturn 024719:
  PushStack call_result;
  TraceOperation 024726 (Loadw (Var (Global 183)) (Con 8) Sp);
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 024730 (Jz (Var Sp) (Branch T (Dloc 024736)));
  PopStack popped5;
  if (IsZero(popped5)) {
    Jump: 024736
  } else {
    TraceOperation 024733 (Store (Con 196) (Con 2));
    SetByte 008268 0;
    SetByte 008269 2;
    Jump: 024736
  }
LocOp 024736:
  TraceOperation 024736 (Store (Con 203) (Con 0));
  SetByte 008282 0;
  SetByte 008283 0;
  TraceOperation 024739 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 024740:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 024745
LocOp 024745:
  TraceOperation 024745 (Dec_chk (Con 1) (Con 0) (Branch T Dtrue));
  GetLocal 1 local1_1;
  if (LessThanEqual(local1_1,0)) {
    SetLocal 1 Sub(local1_1,1);
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    SetLocal 1 Sub(local1_1,1);
    TraceOperation 024749 (Loadb (Var (Global 193)) (Var (Local 2)) Sp);
    Let b3 = M[008294];
    Let b4 = M[008295];
    GetLocal 2 local2_5;
    Let b6 = M[Offset(Address(MakeHiLo(b3,b4)),local2_5)];
    PushStack Widen(b6);
    TraceOperation 024753 (Print_char (Var Sp));
    PopStack popped7;
    GamePrint SingleChar(popped7);
    TraceOperation 024756 (Inc (Con 2));
    GetLocal 2 local2_8;
    SetLocal 2 Add(local2_8,1);
    TraceOperation 024758 (Jump 024745);
    Jump: 024745
  }
--------------------------------------------------
LocRoutine 024762:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 024769
LocOp 024769:
  TraceOperation 024769 (Print "I don't know the word \"");
  GamePrint "I don't know the word \"";
  TraceOperation 024782 (Mul (Var (Local 1)) (Con 2) (Local 2));
  GetLocal 1 local1_1;
  SetLocal 2 Mul(local1_1,2);
  TraceOperation 024786 (Add (Var (Global 194)) (Var (Local 2)) Sp);
  Let b2 = M[008296];
  Let b3 = M[008297];
  GetLocal 2 local2_4;
  PushStack Add(MakeHiLo(b2,b3),local2_4);
  TraceOperation 024790 (Loadb (Var Sp) (Con 2) (Local 3));
  PopStack popped5;
  Let b6 = M[Offset(Address(popped5),2)];
  SetLocal 3 Widen(b6);
  TraceOperation 024794 (Add (Var (Global 194)) (Var (Local 2)) Sp);
  Let b7 = M[008296];
  Let b8 = M[008297];
  GetLocal 2 local2_9;
  PushStack Add(MakeHiLo(b7,b8),local2_9);
  TraceOperation 024798 (Loadb (Var Sp) (Con 3) Sp);
  PopStack popped10;
  Let b11 = M[Offset(Address(popped10),3)];
  PushStack Widen(b11);
  TraceOperation 024802 (Call (Floc 024740) [Var (Local 3),Var Sp] Sp);
  GetLocal 3 local3_12;
  PopStack popped13;
  PushFrame;
  PushReturnAddress 024802;
  SetLocal 1 local3_12;
  SetLocal 2 popped13;
  MakeRoutineFrame 2;
  Jump: 024745
LocReturn 024802:
  PushStack call_result;
  TraceOperation 024809 (Print "\".");
  GamePrint "\".";
  TraceOperation 024814 New_line;
  GamePrint "\n";
  TraceOperation 024815 (Store (Con 195) (Con 0));
  SetByte 008266 0;
  SetByte 008267 0;
  TraceOperation 024818 (Store (Con 205) (Con 0));
  SetByte 008286 0;
  SetByte 008287 0;
  TraceOperation 024821 (Ret (Var (Global 189)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult MakeHiLo(b1,b2);
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 024824:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 024831
LocOp 024831:
  TraceOperation 024831 (Print "You used the word \"");
  GamePrint "You used the word \"";
  TraceOperation 024844 (Mul (Var (Local 1)) (Con 2) (Local 2));
  GetLocal 1 local1_1;
  SetLocal 2 Mul(local1_1,2);
  TraceOperation 024848 (Add (Var (Global 194)) (Var (Local 2)) Sp);
  Let b2 = M[008296];
  Let b3 = M[008297];
  GetLocal 2 local2_4;
  PushStack Add(MakeHiLo(b2,b3),local2_4);
  TraceOperation 024852 (Loadb (Var Sp) (Con 2) (Local 3));
  PopStack popped5;
  Let b6 = M[Offset(Address(popped5),2)];
  SetLocal 3 Widen(b6);
  TraceOperation 024856 (Add (Var (Global 194)) (Var (Local 2)) Sp);
  Let b7 = M[008296];
  Let b8 = M[008297];
  GetLocal 2 local2_9;
  PushStack Add(MakeHiLo(b7,b8),local2_9);
  TraceOperation 024860 (Loadb (Var Sp) (Con 3) Sp);
  PopStack popped10;
  Let b11 = M[Offset(Address(popped10),3)];
  PushStack Widen(b11);
  TraceOperation 024864 (Call (Floc 024740) [Var (Local 3),Var Sp] Sp);
  GetLocal 3 local3_12;
  PopStack popped13;
  PushFrame;
  PushReturnAddress 024864;
  SetLocal 1 local3_12;
  SetLocal 2 popped13;
  MakeRoutineFrame 2;
  Jump: 024745
LocReturn 024864:
  PushStack call_result;
  TraceOperation 024871 (Print "\" in a way that I don't understand.");
  GamePrint "\" in a way that I don't understand.";
  TraceOperation 024892 New_line;
  GamePrint "\n";
  TraceOperation 024893 (Store (Con 195) (Con 0));
  SetByte 008266 0;
  SetByte 008267 0;
  TraceOperation 024896 (Store (Con 205) (Con 0));
  SetByte 008286 0;
  SetByte 008287 0;
  TraceOperation 024899 (Ret (Var (Global 189)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult MakeHiLo(b1,b2);
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 024902:
  MakeRoutineFrame 11;
  if (LessThanByte(num_actuals,11)) {
    SetLocal 11 0;
    if (LessThanByte(num_actuals,10)) {
      SetLocal 10 0;
      if (LessThanByte(num_actuals,9)) {
        SetLocal 9 0;
        if (LessThanByte(num_actuals,8)) {
          SetLocal 8 0;
          if (LessThanByte(num_actuals,7)) {
            SetLocal 7 0;
            if (LessThanByte(num_actuals,6)) {
              SetLocal 6 0;
              if (LessThanByte(num_actuals,5)) {
                SetLocal 5 0;
                if (LessThanByte(num_actuals,4)) {
                  SetLocal 4 0;
                  if (LessThanByte(num_actuals,3)) {
                    SetLocal 3 0;
                    if (LessThanByte(num_actuals,2)) {
                      SetLocal 2 0;
                      if (LessThanByte(num_actuals,1)) {
                        SetLocal 1 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 024925
LocOp 024925:
  TraceOperation 024925 (Loadw (Var (Global 184)) (Con 0) (Local 8));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  SetLocal 8 MakeHiLo(b3,b4);
  TraceOperation 024929 (Jz (Var (Local 8)) (Branch F (Dloc 024955)));
  GetLocal 8 local8_5;
  if (IsZero(local8_5)) {
    TraceOperation 024932 (Print "There was no verb in that sentence!");
    GamePrint "There was no verb in that sentence!";
    TraceOperation 024953 New_line;
    GamePrint "\n";
    TraceOperation 024954 Rfalse;
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 024955
  }
LocOp 024955:
  TraceOperation 024955 (Sub (Con 255) (Var (Local 8)) Sp);
  GetLocal 8 local8_1;
  PushStack Sub(255,local8_1);
  TraceOperation 024959 (Loadw (Var (Global 239)) (Var Sp) (Local 1));
  Let b2 = M[008386];
  Let b3 = M[008387];
  PopStack popped4;
  Let b5 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4)),1)];
  SetLocal 1 MakeHiLo(b5,b6);
  TraceOperation 024963 (Loadb (Var (Local 1)) (Con 0) (Local 2));
  GetLocal 1 local1_7;
  Let b8 = M[Offset(Address(local1_7),0)];
  SetLocal 2 Widen(b8);
  TraceOperation 024967 (Add (Con 1) (Var (Local 1)) (Local 1));
  GetLocal 1 local1_9;
  SetLocal 1 Add(1,local1_9);
  Jump: 024971
LocOp 024971:
  TraceOperation 024971 (Loadb (Var (Local 1)) (Con 0) Sp);
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),0)];
  PushStack Widen(b2);
  TraceOperation 024975 (And (Var Sp) (Con 3) (Local 3));
  PopStack popped3;
  SetLocal 3 And(popped3,3);
  TraceOperation 024979 (Jg (Var (Global 180)) (Var (Local 3)) (Branch F (Dloc 024986)));
  Let b4 = M[008268];
  Let b5 = M[008269];
  GetLocal 3 local3_6;
  if (GreaterThan(MakeHiLo(b4,b5),local3_6)) {
    TraceOperation 024983 (Jump 025059);
    Jump: 025059
  } else {
    Jump: 024986
  }
LocOp 024986:
  TraceOperation 024986 (Jl (Var (Local 3)) (Con 1) (Branch T (Dloc 025014)));
  GetLocal 3 local3_1;
  if (LessThan(local3_1,1)) {
    Jump: 025014
  } else {
    TraceOperation 024990 (Jz (Var (Global 180)) (Branch F (Dloc 025014)));
    Let b2 = M[008268];
    Let b3 = M[008269];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 024993 (Loadw (Var (Global 184)) (Con 2) (Local 7));
      Let b4 = M[008276];
      Let b5 = M[008277];
      Let b6 = M[Offset(Address(MakeHiLo(b4,b5)),4)];
      Let b7 = M[Offset(Offset(Address(MakeHiLo(b4,b5)),4),1)];
      SetLocal 7 MakeHiLo(b6,b7);
      TraceOperation 024997 (Jz (Var (Local 7)) (Branch T (Dloc 025008)));
      GetLocal 7 local7_8;
      if (IsZero(local7_8)) {
        Jump: 025008
      } else {
        TraceOperation 025000 (Loadb (Var (Local 1)) (Con 1) Sp);
        GetLocal 1 local1_9;
        Let b10 = M[Offset(Address(local1_9),1)];
        PushStack Widen(b10);
        TraceOperation 025004 (Je [Var (Local 7),Var Sp] (Branch F (Dloc 025014)));
        GetLocal 7 local7_11;
        PopStack popped12;
        if (Equal(local7_11,popped12)) {
          Jump: 025008
        } else {
          Jump: 025014
        }
      }
    } else {
      Jump: 025014
    }
  }
LocOp 025008:
  TraceOperation 025008 (Store (Con 5) (Var (Local 1)));
  GetLocal 1 local1_1;
  SetLocal 5 local1_1;
  TraceOperation 025011 (Jump 025059);
  Jump: 025059
LocOp 025014:
  TraceOperation 025014 (Loadb (Var (Local 1)) (Con 1) (Local 11));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),1)];
  SetLocal 11 Widen(b2);
  TraceOperation 025018 (Loadw (Var (Global 184)) (Con 2) Sp);
  Let b3 = M[008276];
  Let b4 = M[008277];
  Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),4)];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),4),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 025022 (Je [Var (Local 11),Var Sp] (Branch F (Dloc 025059)));
  GetLocal 11 local11_7;
  PopStack popped8;
  if (Equal(local11_7,popped8)) {
    TraceOperation 025026 (Je [Var (Local 3),Con 2] (Branch F (Dloc 025040)));
    GetLocal 3 local3_9;
    if (Equal(local3_9,2)) {
      TraceOperation 025030 (Je [Var (Global 180),Con 1] (Branch F (Dloc 025040)));
      Let b10 = M[008268];
      Let b11 = M[008269];
      if (Equal(MakeHiLo(b10,b11),1)) {
        TraceOperation 025034 (Store (Con 6) (Var (Local 1)));
        GetLocal 1 local1_12;
        SetLocal 6 local1_12;
        TraceOperation 025037 (Jump 025059);
        Jump: 025059
      } else {
        Jump: 025040
      }
    } else {
      Jump: 025040
    }
  } else {
    Jump: 025059
  }
LocOp 025040:
  TraceOperation 025040 (Loadb (Var (Local 1)) (Con 2) (Local 11));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),2)];
  SetLocal 11 Widen(b2);
  TraceOperation 025044 (Loadw (Var (Global 184)) (Con 4) Sp);
  Let b3 = M[008276];
  Let b4 = M[008277];
  Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),8)];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),8),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 025048 (Je [Var (Local 11),Var Sp] (Branch F (Dloc 025059)));
  GetLocal 11 local11_7;
  PopStack popped8;
  if (Equal(local11_7,popped8)) {
    TraceOperation 025052 (Call (Floc 026050) [Var (Local 1)] Sp);
    GetLocal 1 local1_9;
    PushFrame;
    PushReturnAddress 025052;
    SetLocal 1 local1_9;
    MakeRoutineFrame 1;
    Jump: 026053
  } else {
    Jump: 025059
  }
LocReturn 025052:
  PushStack call_result;
  TraceOperation 025058 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 025059:
  TraceOperation 025059 (Dec_chk (Con 2) (Con 1) (Branch F (Dloc 025078)));
  GetLocal 2 local2_1;
  if (LessThanEqual(local2_1,1)) {
    SetLocal 2 Sub(local2_1,1);
    TraceOperation 025063 (Jz (Var (Local 5)) (Branch F (Dloc 025085)));
    GetLocal 5 local5_2;
    if (IsZero(local5_2)) {
      TraceOperation 025066 (Jz (Var (Local 6)) (Branch T (Dloc 025072)));
      GetLocal 6 local6_3;
      if (IsZero(local6_3)) {
        Jump: 025072
      } else {
        TraceOperation 025069 (Jump 025085);
        Jump: 025085
      }
    } else {
      Jump: 025085
    }
  } else {
    SetLocal 2 Sub(local2_1,1);
    Jump: 025078
  }
LocOp 025072:
  TraceOperation 025072 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 025072;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 025072:
  PushStack call_result;
  TraceOperation 025077 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 025078:
  TraceOperation 025078 (Add (Var (Local 1)) (Con 8) (Local 1));
  GetLocal 1 local1_1;
  SetLocal 1 Add(local1_1,8);
  TraceOperation 025082 (Jump 024971);
  Jump: 024971
LocOp 025085:
  TraceOperation 025085 (Jz (Var (Local 5)) (Branch T (Dloc 025128)));
  GetLocal 5 local5_1;
  if (IsZero(local5_1)) {
    Jump: 025128
  } else {
    TraceOperation 025088 (Loadb (Var (Local 5)) (Con 3) (Local 10));
    GetLocal 5 local5_2;
    Let b3 = M[Offset(Address(local5_2),3)];
    SetLocal 10 Widen(b3);
    TraceOperation 025092 (Loadb (Var (Local 5)) (Con 5) (Local 11));
    GetLocal 5 local5_4;
    Let b5 = M[Offset(Address(local5_4),5)];
    SetLocal 11 Widen(b5);
    TraceOperation 025096 (Loadb (Var (Local 5)) (Con 1) Sp);
    GetLocal 5 local5_6;
    Let b7 = M[Offset(Address(local5_6),1)];
    PushStack Widen(b7);
    TraceOperation 025100 (Call (Floc 026062) [Var (Local 10),Var (Local 11),Var Sp] (Local 4));
    GetLocal 10 local10_8;
    GetLocal 11 local11_9;
    PopStack popped10;
    PushFrame;
    PushReturnAddress 025100;
    SetLocal 1 local10_8;
    SetLocal 2 local11_9;
    SetLocal 3 popped10;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 026071
  }
LocReturn 025100:
  SetLocal 4 call_result;
  TraceOperation 025108 (Jz (Var (Local 4)) (Branch T (Dloc 025128)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 025128
  } else {
    TraceOperation 025111 (Storew (Var (Global 167)) (Var (Global 162)) (Con 1));
    Let b2 = M[008242];
    Let b3 = M[008243];
    Let b4 = M[008232];
    Let b5 = M[008233];
    SetByte Offset(Address(MakeHiLo(b2,b3)),Mul(2,MakeHiLo(b4,b5))) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,MakeHiLo(b4,b5))),1) 1;
    TraceOperation 025116 (Storew (Var (Global 167)) (Con 1) (Var (Local 4)));
    Let b6 = M[008242];
    Let b7 = M[008243];
    GetLocal 4 local4_8;
    SetByte Offset(Address(MakeHiLo(b6,b7)),2) HiByte(local4_8);
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),2),1) LoByte(local4_8);
    TraceOperation 025121 (Call (Floc 026050) [Var (Local 5)] Sp);
    GetLocal 5 local5_9;
    PushFrame;
    PushReturnAddress 025121;
    SetLocal 1 local5_9;
    MakeRoutineFrame 1;
    Jump: 026053
  }
LocReturn 025121:
  PushStack call_result;
  TraceOperation 025127 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 025128:
  TraceOperation 025128 (Jz (Var (Local 6)) (Branch T (Dloc 025171)));
  GetLocal 6 local6_1;
  if (IsZero(local6_1)) {
    Jump: 025171
  } else {
    TraceOperation 025131 (Loadb (Var (Local 6)) (Con 4) (Local 10));
    GetLocal 6 local6_2;
    Let b3 = M[Offset(Address(local6_2),4)];
    SetLocal 10 Widen(b3);
    TraceOperation 025135 (Loadb (Var (Local 6)) (Con 6) (Local 11));
    GetLocal 6 local6_4;
    Let b5 = M[Offset(Address(local6_4),6)];
    SetLocal 11 Widen(b5);
    TraceOperation 025139 (Loadb (Var (Local 6)) (Con 2) Sp);
    GetLocal 6 local6_6;
    Let b7 = M[Offset(Address(local6_6),2)];
    PushStack Widen(b7);
    TraceOperation 025143 (Call (Floc 026062) [Var (Local 10),Var (Local 11),Var Sp] (Local 4));
    GetLocal 10 local10_8;
    GetLocal 11 local11_9;
    PopStack popped10;
    PushFrame;
    PushReturnAddress 025143;
    SetLocal 1 local10_8;
    SetLocal 2 local11_9;
    SetLocal 3 popped10;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 026071
  }
LocReturn 025143:
  SetLocal 4 call_result;
  TraceOperation 025151 (Jz (Var (Local 4)) (Branch T (Dloc 025171)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 025171
  } else {
    TraceOperation 025154 (Storew (Var (Global 166)) (Var (Global 162)) (Con 1));
    Let b2 = M[008240];
    Let b3 = M[008241];
    Let b4 = M[008232];
    Let b5 = M[008233];
    SetByte Offset(Address(MakeHiLo(b2,b3)),Mul(2,MakeHiLo(b4,b5))) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,MakeHiLo(b4,b5))),1) 1;
    TraceOperation 025159 (Storew (Var (Global 166)) (Con 1) (Var (Local 4)));
    Let b6 = M[008240];
    Let b7 = M[008241];
    GetLocal 4 local4_8;
    SetByte Offset(Address(MakeHiLo(b6,b7)),2) HiByte(local4_8);
    SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),2),1) LoByte(local4_8);
    TraceOperation 025164 (Call (Floc 026050) [Var (Local 6)] Sp);
    GetLocal 6 local6_9;
    PushFrame;
    PushReturnAddress 025164;
    SetLocal 1 local6_9;
    MakeRoutineFrame 1;
    Jump: 026053
  }
LocReturn 025164:
  PushStack call_result;
  TraceOperation 025170 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 025171:
  TraceOperation 025171 (Je [Var (Local 8),Con 168] (Branch F (Dloc 025194)));
  GetLocal 8 local8_1;
  if (Equal(local8_1,168)) {
    TraceOperation 025175 (Print "I can't answer that question.");
    GamePrint "I can't answer that question.";
    TraceOperation 025192 New_line;
    GamePrint "\n";
    TraceOperation 025193 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 025194
  }
LocOp 025194:
  TraceOperation 025194 (Je [Var (Global 195),Con 31] (Branch T (Dloc 025204)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),31)) {
    Jump: 025204
  } else {
    TraceOperation 025198 (Call (Floc 025324) [] Sp);
    PushFrame;
    PushReturnAddress 025198;
    MakeRoutineFrame 0;
    Jump: 025325
  }
LocReturn 025198:
  PushStack call_result;
  TraceOperation 025203 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 025204:
  TraceOperation 025204 (Call (Floc 025378) [Var (Local 5),Var (Local 6)] Sp);
  GetLocal 5 local5_1;
  GetLocal 6 local6_2;
  PushFrame;
  PushReturnAddress 025204;
  SetLocal 1 local5_1;
  SetLocal 2 local6_2;
  MakeRoutineFrame 3;
  SetLocal 3 -1;
  Jump: 025385
LocReturn 025204:
  PushStack call_result;
  TraceOperation 025211 (Print "What do");
  GamePrint "What do";
  TraceOperation 025218 (Jz (Var (Global 176)) (Branch T (Dloc 025226)));
  Let b1 = M[008260];
  Let b2 = M[008261];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 025226
  } else {
    TraceOperation 025221 (Print "n't");
    GamePrint "n't";
    Jump: 025226
  }
LocOp 025226:
  TraceOperation 025226 (Print " you want to ");
  GamePrint " you want to ";
  TraceOperation 025235 (Loadw (Var (Global 183)) (Con 1) (Local 9));
  Let b1 = M[008274];
  Let b2 = M[008275];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 9 MakeHiLo(b3,b4);
  TraceOperation 025239 (Jz (Var (Local 9)) (Branch F (Dloc 025250)));
  GetLocal 9 local9_5;
  if (IsZero(local9_5)) {
    TraceOperation 025242 (Print "tell");
    GamePrint "tell";
    TraceOperation 025247 (Jump 025286);
    Jump: 025286
  } else {
    Jump: 025250
  }
LocOp 025250:
  TraceOperation 025250 (Loadb (Var (Global 182)) (Con 2) Sp);
  Let b1 = M[008272];
  Let b2 = M[008273];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  PushStack Widen(b3);
  TraceOperation 025254 (Jz (Var Sp) (Branch F (Dloc 025266)));
  PopStack popped4;
  if (IsZero(popped4)) {
    TraceOperation 025257 (Loadw (Var (Local 9)) (Con 0) Sp);
    GetLocal 9 local9_5;
    Let b6 = M[Offset(Address(local9_5),0)];
    Let b7 = M[Offset(Offset(Address(local9_5),0),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 025261 (Print_addr (Var Sp));
    PopStack popped8;
    GamePrint GetText(Address(popped8));
    TraceOperation 025263 (Jump 025286);
    Jump: 025286
  } else {
    Jump: 025266
  }
LocOp 025266:
  TraceOperation 025266 (Loadb (Var (Local 9)) (Con 2) (Local 11));
  GetLocal 9 local9_1;
  Let b2 = M[Offset(Address(local9_1),2)];
  SetLocal 11 Widen(b2);
  TraceOperation 025270 (Loadb (Var (Local 9)) (Con 3) Sp);
  GetLocal 9 local9_3;
  Let b4 = M[Offset(Address(local9_3),3)];
  PushStack Widen(b4);
  TraceOperation 025274 (Call (Floc 024740) [Var (Local 11),Var Sp] Sp);
  GetLocal 11 local11_5;
  PopStack popped6;
  PushFrame;
  PushReturnAddress 025274;
  SetLocal 1 local11_5;
  SetLocal 2 popped6;
  MakeRoutineFrame 2;
  Jump: 024745
LocReturn 025274:
  PushStack call_result;
  TraceOperation 025281 (Storeb (Var (Global 182)) (Con 2) (Con 0));
  Let b1 = M[008272];
  Let b2 = M[008273];
  SetByte Offset(Address(MakeHiLo(b1,b2)),2) 0;
  Jump: 025286
LocOp 025286:
  TraceOperation 025286 (Jz (Var (Local 6)) (Branch T (Dloc 025296)));
  GetLocal 6 local6_1;
  if (IsZero(local6_1)) {
    Jump: 025296
  } else {
    TraceOperation 025289 (Call (Floc 025538) [Con 6,Con 7] Sp);
    PushFrame;
    PushReturnAddress 025289;
    SetLocal 1 6;
    SetLocal 2 7;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 1;
    Jump: 025547
  }
LocReturn 025289:
  PushStack call_result;
  Jump: 025296
LocOp 025296:
  TraceOperation 025296 (Store (Con 205) (Con 1));
  SetByte 008286 0;
  SetByte 008287 1;
  TraceOperation 025299 (Jz (Var (Local 5)) (Branch T (Dloc 025309)));
  GetLocal 5 local5_1;
  if (IsZero(local5_1)) {
    Jump: 025309
  } else {
    TraceOperation 025302 (Loadb (Var (Local 5)) (Con 1) Sp);
    GetLocal 5 local5_2;
    Let b3 = M[Offset(Address(local5_2),1)];
    PushStack Widen(b3);
    TraceOperation 025306 (Jump 025313);
    Jump: 025313
  }
LocOp 025309:
  TraceOperation 025309 (Loadb (Var (Local 6)) (Con 2) Sp);
  GetLocal 6 local6_1;
  Let b2 = M[Offset(Address(local6_1),2)];
  PushStack Widen(b2);
  Jump: 025313
LocOp 025313:
  TraceOperation 025313 (Call (Floc 025828) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 025313;
  SetLocal 1 popped1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 025833
LocReturn 025313:
  PushStack call_result;
  TraceOperation 025319 (Print "?");
  GamePrint "?";
  TraceOperation 025322 New_line;
  GamePrint "\n";
  TraceOperation 025323 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025324:
  MakeRoutineFrame 0;
  Jump: 025325
LocOp 025325:
  TraceOperation 025325 (Je [Var (Global 195),Con 27] (Branch F (Dloc 025341)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),27)) {
    TraceOperation 025329 (Je [Var (Global 0),Con 54] (Branch F (Dloc 025341)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),54)) {
      TraceOperation 025333 (Print "\"We");
      GamePrint "\"We";
      TraceOperation 025338 (Jump 025346);
      Jump: 025346
    } else {
      Jump: 025341
    }
  } else {
    Jump: 025341
  }
LocOp 025341:
  TraceOperation 025341 (Print "\"I");
  GamePrint "\"I";
  Jump: 025346
LocOp 025346:
  TraceOperation 025346 (Print " don't understand! What are you referring to?\"");
  GamePrint " don't understand! What are you referring to?\"";
  TraceOperation 025375 New_line;
  GamePrint "\n";
  TraceOperation 025376 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 025378:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 -1;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 025385
LocOp 025385:
  TraceOperation 025385 (Jz (Var (Global 188)) (Branch F (Dloc 025393)));
  Let b1 = M[008284];
  Let b2 = M[008285];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 025388 (Storew (Var (Global 163)) (Var (Global 162)) (Con 0));
    Let b3 = M[008234];
    Let b4 = M[008235];
    Let b5 = M[008232];
    Let b6 = M[008233];
    SetByte Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1) 0;
    Jump: 025393
  } else {
    Jump: 025393
  }
LocOp 025393:
  TraceOperation 025393 (Loadw (Var (Global 182)) (Con 0) Sp);
  Let b1 = M[008272];
  Let b2 = M[008273];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 025397 (Storew (Var (Global 181)) (Con 0) (Var Sp));
  Let b5 = M[008270];
  Let b6 = M[008271];
  PopStack popped7;
  SetByte Offset(Address(MakeHiLo(b5,b6)),0) HiByte(popped7);
  SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),0),1) LoByte(popped7);
  TraceOperation 025402 (Loadb (Var (Global 182)) (Con 2) Sp);
  Let b8 = M[008272];
  Let b9 = M[008273];
  Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),2)];
  PushStack Widen(b10);
  TraceOperation 025406 (Storeb (Var (Global 181)) (Con 2) (Var Sp));
  Let b11 = M[008270];
  Let b12 = M[008271];
  PopStack popped13;
  SetByte Offset(Address(MakeHiLo(b11,b12)),2) LoByte(popped13);
  TraceOperation 025411 (Loadb (Var (Global 182)) (Con 3) Sp);
  Let b14 = M[008272];
  Let b15 = M[008273];
  Let b16 = M[Offset(Address(MakeHiLo(b14,b15)),3)];
  PushStack Widen(b16);
  TraceOperation 025415 (Storeb (Var (Global 181)) (Con 3) (Var Sp));
  Let b17 = M[008270];
  Let b18 = M[008271];
  PopStack popped19;
  SetByte Offset(Address(MakeHiLo(b17,b18)),3) LoByte(popped19);
  Jump: 025420
LocOp 025420:
  TraceOperation 025420 (Inc_chk (Con 3) (Con 9) (Branch F (Dloc 025427)));
  GetLocal 3 local3_1;
  SetLocal 3 Add(local3_1,1);
  if (GreaterThanEqual(local3_1,9)) {
    TraceOperation 025424 (Jump 025439);
    Jump: 025439
  } else {
    Jump: 025427
  }
LocOp 025427:
  TraceOperation 025427 (Loadw (Var (Global 184)) (Var (Local 3)) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  GetLocal 3 local3_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,local3_3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local3_3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 025431 (Storew (Var (Global 183)) (Var (Local 3)) (Var Sp));
  Let b6 = M[008274];
  Let b7 = M[008275];
  GetLocal 3 local3_8;
  PopStack popped9;
  SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,local3_8)) HiByte(popped9);
  SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,local3_8)),1) LoByte(popped9);
  TraceOperation 025436 (Jump 025420);
  Jump: 025420
LocOp 025439:
  TraceOperation 025439 (Je [Var (Global 180),Con 2] (Branch F (Dloc 025470)));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 025443 (Storew (Var (Global 197)) (Con 0) (Con 8));
    Let b3 = M[008302];
    Let b4 = M[008303];
    SetByte Offset(Address(MakeHiLo(b3,b4)),0) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),0),1) 8;
    TraceOperation 025448 (Storew (Var (Global 197)) (Con 1) (Con 9));
    Let b5 = M[008302];
    Let b6 = M[008303];
    SetByte Offset(Address(MakeHiLo(b5,b6)),2) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),2),1) 9;
    TraceOperation 025453 (Storew (Var (Global 197)) (Con 2) (Con 8));
    Let b7 = M[008302];
    Let b8 = M[008303];
    SetByte Offset(Address(MakeHiLo(b7,b8)),4) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),4),1) 8;
    TraceOperation 025458 (Storew (Var (Global 197)) (Con 3) (Con 9));
    Let b9 = M[008302];
    Let b10 = M[008303];
    SetByte Offset(Address(MakeHiLo(b9,b10)),6) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),6),1) 9;
    TraceOperation 025463 (Call (Floc 025860) [Var (Global 184),Var (Global 183)] Sp);
    Let b11 = M[008276];
    Let b12 = M[008277];
    Let b13 = M[008274];
    Let b14 = M[008275];
    PushFrame;
    PushReturnAddress 025463;
    SetLocal 1 MakeHiLo(b11,b12);
    SetLocal 2 MakeHiLo(b13,b14);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 025873
  } else {
    Jump: 025470
  }
LocReturn 025463:
  PushStack call_result;
  Jump: 025470
LocOp 025470:
  TraceOperation 025470 (Jl (Var (Global 180)) (Con 1) (Branch T (Dloc 025501)));
  Let b1 = M[008268];
  Let b2 = M[008269];
  if (LessThan(MakeHiLo(b1,b2),1)) {
    Jump: 025501
  } else {
    TraceOperation 025474 (Storew (Var (Global 197)) (Con 0) (Con 6));
    Let b3 = M[008302];
    Let b4 = M[008303];
    SetByte Offset(Address(MakeHiLo(b3,b4)),0) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),0),1) 6;
    TraceOperation 025479 (Storew (Var (Global 197)) (Con 1) (Con 7));
    Let b5 = M[008302];
    Let b6 = M[008303];
    SetByte Offset(Address(MakeHiLo(b5,b6)),2) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),2),1) 7;
    TraceOperation 025484 (Storew (Var (Global 197)) (Con 2) (Con 6));
    Let b7 = M[008302];
    Let b8 = M[008303];
    SetByte Offset(Address(MakeHiLo(b7,b8)),4) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),4),1) 6;
    TraceOperation 025489 (Storew (Var (Global 197)) (Con 3) (Con 7));
    Let b9 = M[008302];
    Let b10 = M[008303];
    SetByte Offset(Address(MakeHiLo(b9,b10)),6) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),6),1) 7;
    TraceOperation 025494 (Call (Floc 025860) [Var (Global 184),Var (Global 183)] Sp);
    Let b11 = M[008276];
    Let b12 = M[008277];
    Let b13 = M[008274];
    Let b14 = M[008275];
    PushFrame;
    PushReturnAddress 025494;
    SetLocal 1 MakeHiLo(b11,b12);
    SetLocal 2 MakeHiLo(b13,b14);
    MakeRoutineFrame 6;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 025873
  }
LocReturn 025494:
  PushStack call_result;
  Jump: 025501
LocOp 025501:
  TraceOperation 025501 (Jz (Var (Local 1)) (Branch T (Dloc 025519)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    Jump: 025519
  } else {
    TraceOperation 025504 (Loadb (Var (Local 1)) (Con 1) Sp);
    GetLocal 1 local1_2;
    Let b3 = M[Offset(Address(local1_2),1)];
    PushStack Widen(b3);
    TraceOperation 025508 (Storew (Var (Global 183)) (Con 2) (Var Sp));
    Let b4 = M[008274];
    Let b5 = M[008275];
    PopStack popped6;
    SetByte Offset(Address(MakeHiLo(b4,b5)),4) HiByte(popped6);
    SetByte Offset(Offset(Address(MakeHiLo(b4,b5)),4),1) LoByte(popped6);
    TraceOperation 025513 (Storew (Var (Global 183)) (Con 6) (Con 1));
    Let b7 = M[008274];
    Let b8 = M[008275];
    SetByte Offset(Address(MakeHiLo(b7,b8)),12) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b7,b8)),12),1) 1;
    TraceOperation 025518 Rtrue;
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  }
LocOp 025519:
  TraceOperation 025519 (Jz (Var (Local 2)) (Branch T Dfalse));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 025522 (Loadb (Var (Local 2)) (Con 2) Sp);
    GetLocal 2 local2_3;
    Let b4 = M[Offset(Address(local2_3),2)];
    PushStack Widen(b4);
    TraceOperation 025526 (Storew (Var (Global 183)) (Con 4) (Var Sp));
    Let b5 = M[008274];
    Let b6 = M[008275];
    PopStack popped7;
    SetByte Offset(Address(MakeHiLo(b5,b6)),8) HiByte(popped7);
    SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),8),1) LoByte(popped7);
    TraceOperation 025531 (Storew (Var (Global 183)) (Con 8) (Con 1));
    Let b8 = M[008274];
    Let b9 = M[008275];
    SetByte Offset(Address(MakeHiLo(b8,b9)),16) 0;
    SetByte Offset(Offset(Address(MakeHiLo(b8,b9)),16),1) 1;
    TraceOperation 025536 Rtrue;
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 1;
    JumpIndirect: (return) return_address_10
  }
--------------------------------------------------
LocRoutine 025538:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 1;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 025547
LocOp 025547:
  TraceOperation 025547 (Loadw (Var (Global 184)) (Var (Local 1)) (Local 4));
  Let b1 = M[008276];
  Let b2 = M[008277];
  GetLocal 1 local1_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local1_3)),1)];
  SetLocal 4 MakeHiLo(b4,b5);
  TraceOperation 025551 (Loadw (Var (Global 184)) (Var (Local 2)) Sp);
  Let b6 = M[008276];
  Let b7 = M[008277];
  GetLocal 2 local2_8;
  Let b9 = M[Offset(Address(MakeHiLo(b6,b7)),Mul(2,local2_8))];
  Let b10 = M[Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,local2_8)),1)];
  PushStack MakeHiLo(b9,b10);
  TraceOperation 025555 (Call (Floc 025564) [Var (Local 4),Var Sp,Var (Local 3)] Sp);
  GetLocal 4 local4_11;
  PopStack popped12;
  GetLocal 3 local3_13;
  PushFrame;
  PushReturnAddress 025555;
  SetLocal 1 local4_11;
  SetLocal 2 popped12;
  SetLocal 3 local3_13;
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 1;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 025581
LocReturn 025555:
  PushStack call_result;
  TraceOperation 025563 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 025564:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 1;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 025581
LocOp 025581:
  TraceOperation 025581 (Je [Var (Local 1),Var (Local 2)] (Branch T Dtrue));
  GetLocal 1 local1_1;
  GetLocal 2 local2_2;
  if (Equal(local1_1,local2_2)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 025585 (Jz (Var (Local 4)) (Branch T (Dloc 025594)));
    GetLocal 4 local4_4;
    if (IsZero(local4_4)) {
      Jump: 025594
    } else {
      TraceOperation 025588 (Store (Con 4) (Con 0));
      SetLocal 4 0;
      TraceOperation 025591 (Jump 025597);
      Jump: 025597
    }
  }
LocOp 025594:
  TraceOperation 025594 (Print " ");
  GamePrint " ";
  Jump: 025597
LocOp 025597:
  TraceOperation 025597 (Loadw (Var (Local 1)) (Con 0) (Local 5));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),0)];
  Let b3 = M[Offset(Offset(Address(local1_1),0),1)];
  SetLocal 5 MakeHiLo(b2,b3);
  TraceOperation 025601 (Je [Var (Local 5),Con 13665] (Branch F (Dloc 025613)));
  GetLocal 5 local5_4;
  if (Equal(local5_4,13665)) {
    TraceOperation 025607 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    TraceOperation 025610 (Jump 025709);
    Jump: 025709
  } else {
    Jump: 025613
  }
LocOp 025613:
  TraceOperation 025613 (Je [Var (Local 5),Con 17074] (Branch F (Dloc 025627)));
  GetLocal 5 local5_1;
  if (Equal(local5_1,17074)) {
    TraceOperation 025619 (Print_obj (Con 30));
    Let b2 = M[001028];
    Let b3 = M[001029];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 025621 (Store (Con 7) (Con 1));
    SetLocal 7 1;
    TraceOperation 025624 (Jump 025709);
    Jump: 025709
  } else {
    Jump: 025627
  }
LocOp 025627:
  TraceOperation 025627 (Call (Floc 025716) [Var (Local 5)] Sp);
  GetLocal 5 local5_1;
  PushFrame;
  PushReturnAddress 025627;
  SetLocal 1 local5_1;
  MakeRoutineFrame 1;
  Jump: 025719
LocReturn 025627:
  PushStack call_result;
  TraceOperation 025633 (Jz (Var Sp) (Branch T (Dloc 025648)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 025648
  } else {
    TraceOperation 025636 (Call (Floc 025770) [Var (Local 1)] Sp);
    GetLocal 1 local1_2;
    PushFrame;
    PushReturnAddress 025636;
    SetLocal 1 local1_2;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 025775
  }
LocReturn 025636:
  PushStack call_result;
  TraceOperation 025642 (Store (Con 7) (Con 1));
  SetLocal 7 1;
  TraceOperation 025645 (Jump 025709);
  Jump: 025709
LocOp 025648:
  TraceOperation 025648 (Jz (Var (Local 6)) (Branch T (Dloc 025660)));
  GetLocal 6 local6_1;
  if (IsZero(local6_1)) {
    Jump: 025660
  } else {
    TraceOperation 025651 (Jz (Var (Local 7)) (Branch F (Dloc 025660)));
    GetLocal 7 local7_2;
    if (IsZero(local7_2)) {
      TraceOperation 025654 (Jz (Var (Local 3)) (Branch T (Dloc 025660)));
      GetLocal 3 local3_3;
      if (IsZero(local3_3)) {
        Jump: 025660
      } else {
        TraceOperation 025657 (Print "the ");
        GamePrint "the ";
        Jump: 025660
      }
    } else {
      Jump: 025660
    }
  }
LocOp 025660:
  TraceOperation 025660 (Jz (Var (Global 189)) (Branch F (Dloc 025666)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 025663 (Jz (Var (Global 188)) (Branch T (Dloc 025671)));
    Let b3 = M[008284];
    Let b4 = M[008285];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 025671
    } else {
      Jump: 025666
    }
  } else {
    Jump: 025666
  }
LocOp 025666:
  TraceOperation 025666 (Print_addr (Var (Local 5)));
  GetLocal 5 local5_1;
  GamePrint GetText(Address(local5_1));
  TraceOperation 025668 (Jump 025706);
  Jump: 025706
LocOp 025671:
  TraceOperation 025671 (Je [Var (Local 5),Con 16619] (Branch F (Dloc 025691)));
  GetLocal 5 local5_1;
  if (Equal(local5_1,16619)) {
    TraceOperation 025677 (Call (Floc 043298) [Var (Global 191)] Sp);
    Let b2 = M[008290];
    Let b3 = M[008291];
    PushFrame;
    PushReturnAddress 025677;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043303
  } else {
    Jump: 025691
  }
LocReturn 025677:
  PushStack call_result;
  TraceOperation 025683 (Jz (Var Sp) (Branch T (Dloc 025691)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 025691
  } else {
    TraceOperation 025686 (Print_obj (Var (Global 191)));
    Let b2 = M[008290];
    Let b3 = M[008291];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7)];
    Let b5 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 025688 (Jump 025706);
    Jump: 025706
  }
LocOp 025691:
  TraceOperation 025691 (Loadb (Var (Local 1)) (Con 2) (Local 8));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),2)];
  SetLocal 8 Widen(b2);
  TraceOperation 025695 (Loadb (Var (Local 1)) (Con 3) Sp);
  GetLocal 1 local1_3;
  Let b4 = M[Offset(Address(local1_3),3)];
  PushStack Widen(b4);
  TraceOperation 025699 (Call (Floc 024740) [Var (Local 8),Var Sp] Sp);
  GetLocal 8 local8_5;
  PopStack popped6;
  PushFrame;
  PushReturnAddress 025699;
  SetLocal 1 local8_5;
  SetLocal 2 popped6;
  MakeRoutineFrame 2;
  Jump: 024745
LocReturn 025699:
  PushStack call_result;
  Jump: 025706
LocOp 025706:
  TraceOperation 025706 (Store (Con 6) (Con 0));
  SetLocal 6 0;
  Jump: 025709
LocOp 025709:
  TraceOperation 025709 (Add (Var (Local 1)) (Con 4) (Local 1));
  GetLocal 1 local1_1;
  SetLocal 1 Add(local1_1,4);
  TraceOperation 025713 (Jump 025581);
  Jump: 025581
--------------------------------------------------
LocRoutine 025716:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 025719
LocOp 025719:
  TraceOperation 025719 (Je [Var (Local 1),Con 15730,Con 20441,Con 14162] (Branch T Dtrue));
  GetLocal 1 local1_1;
  if (LogOr(LogOr(Equal(local1_1,15730),Equal(local1_1,20441)),Equal(local1_1,14162))) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 025729 (Je [Var (Local 1),Con 19797,Con 19790,Con 17067] (Branch T Dtrue));
    GetLocal 1 local1_3;
    if (LogOr(LogOr(Equal(local1_3,19797),Equal(local1_3,19790)),Equal(local1_3,17067))) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 025739 (Je [Var (Local 1),Con 18005,Con 17025,Con 13924] (Branch T Dtrue));
      GetLocal 1 local1_5;
      if (LogOr(LogOr(Equal(local1_5,18005),Equal(local1_5,17025)),Equal(local1_5,13924))) {
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      } else {
        TraceOperation 025749 (Je [Var (Local 1),Con 15065,Con 17949,Con 17725] (Branch T Dtrue));
        GetLocal 1 local1_7;
        if (LogOr(LogOr(Equal(local1_7,15065),Equal(local1_7,17949)),Equal(local1_7,17725))) {
          PopFrame;
          PopReturnAddress return_address_8;
          SetResult 1;
          JumpIndirect: (return) return_address_8
        } else {
          TraceOperation 025759 (Je [Var (Local 1),Con 15429,Con 17018,Con 15422] (Branch F Dfalse));
          GetLocal 1 local1_9;
          if (LogOr(LogOr(Equal(local1_9,15429),Equal(local1_9,17018)),Equal(local1_9,15422))) {
            TraceOperation 025769 Rtrue;
            PopFrame;
            PopReturnAddress return_address_10;
            SetResult 1;
            JumpIndirect: (return) return_address_10
          } else {
            PopFrame;
            PopReturnAddress return_address_11;
            SetResult 0;
            JumpIndirect: (return) return_address_11
          }
        }
      }
    }
  }
--------------------------------------------------
LocRoutine 025770:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 025775
LocOp 025775:
  TraceOperation 025775 (Jz (Var (Global 189)) (Branch F (Dloc 025781)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 025778 (Jz (Var (Global 188)) (Branch T (Dloc 025788)));
    Let b3 = M[008284];
    Let b4 = M[008285];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 025788
    } else {
      Jump: 025781
    }
  } else {
    Jump: 025781
  }
LocOp 025781:
  TraceOperation 025781 (Loadw (Var (Local 1)) (Con 0) Sp);
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),0)];
  Let b3 = M[Offset(Offset(Address(local1_1),0),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 025785 (Print_addr (Var Sp));
  PopStack popped4;
  GamePrint GetText(Address(popped4));
  TraceOperation 025787 Rtrue;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 025788:
  TraceOperation 025788 (Loadb (Var (Local 1)) (Con 3) Sp);
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),3)];
  PushStack Widen(b2);
  TraceOperation 025792 (Loadb (Var (Global 193)) (Var Sp) Sp);
  Let b3 = M[008294];
  Let b4 = M[008295];
  PopStack popped5;
  Let b6 = M[Offset(Address(MakeHiLo(b3,b4)),popped5)];
  PushStack Widen(b6);
  TraceOperation 025796 (Sub (Var Sp) (Con 32) Sp);
  PopStack popped7;
  PushStack Sub(popped7,32);
  TraceOperation 025800 (Print_char (Var Sp));
  PopStack popped8;
  GamePrint SingleChar(popped8);
  TraceOperation 025803 (Loadb (Var (Local 1)) (Con 2) Sp);
  GetLocal 1 local1_9;
  Let b10 = M[Offset(Address(local1_9),2)];
  PushStack Widen(b10);
  TraceOperation 025807 (Sub (Var Sp) (Con 1) (Local 2));
  PopStack popped11;
  SetLocal 2 Sub(popped11,1);
  TraceOperation 025811 (Loadb (Var (Local 1)) (Con 3) Sp);
  GetLocal 1 local1_12;
  Let b13 = M[Offset(Address(local1_12),3)];
  PushStack Widen(b13);
  TraceOperation 025815 (Add (Var Sp) (Con 1) Sp);
  PopStack popped14;
  PushStack Add(popped14,1);
  TraceOperation 025819 (Call (Floc 024740) [Var (Local 2),Var Sp] Sp);
  GetLocal 2 local2_15;
  PopStack popped16;
  PushFrame;
  PushReturnAddress 025819;
  SetLocal 1 local2_15;
  SetLocal 2 popped16;
  MakeRoutineFrame 2;
  Jump: 024745
LocReturn 025819:
  PushStack call_result;
  TraceOperation 025826 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 025828:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 025833
LocOp 025833:
  TraceOperation 025833 (Jz (Var (Local 1)) (Branch T Dfalse));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 025836 (Print " ");
    GamePrint " ";
    TraceOperation 025839 (Je [Var (Local 1),Con 246] (Branch F (Dloc 025851)));
    GetLocal 1 local1_3;
    if (Equal(local1_3,246)) {
      TraceOperation 025843 (Print "through");
      GamePrint "through";
      TraceOperation 025850 Rtrue;
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      Jump: 025851
    }
  }
LocOp 025851:
  TraceOperation 025851 (Call (Floc 026012) [Var (Local 1)] (Local 2));
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 025851;
  SetLocal 1 local1_1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 026019
LocReturn 025851:
  SetLocal 2 call_result;
  TraceOperation 025857 (Print_addr (Var (Local 2)));
  GetLocal 2 local2_1;
  GamePrint GetText(Address(local2_1));
  TraceOperation 025859 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 025860:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 0;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 025873
LocOp 025873:
  TraceOperation 025873 (Loadw (Var (Global 197)) (Con 0) Sp);
  Let b1 = M[008302];
  Let b2 = M[008303];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 025877 (Loadw (Var (Local 1)) (Var Sp) (Local 4));
  GetLocal 1 local1_5;
  PopStack popped6;
  Let b7 = M[Offset(Address(local1_5),Mul(2,popped6))];
  Let b8 = M[Offset(Offset(Address(local1_5),Mul(2,popped6)),1)];
  SetLocal 4 MakeHiLo(b7,b8);
  TraceOperation 025881 (Loadw (Var (Global 197)) (Con 1) Sp);
  Let b9 = M[008302];
  Let b10 = M[008303];
  Let b11 = M[Offset(Address(MakeHiLo(b9,b10)),2)];
  Let b12 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),2),1)];
  PushStack MakeHiLo(b11,b12);
  TraceOperation 025885 (Loadw (Var (Local 1)) (Var Sp) (Local 5));
  GetLocal 1 local1_13;
  PopStack popped14;
  Let b15 = M[Offset(Address(local1_13),Mul(2,popped14))];
  Let b16 = M[Offset(Offset(Address(local1_13),Mul(2,popped14)),1)];
  SetLocal 5 MakeHiLo(b15,b16);
  TraceOperation 025889 (Loadw (Var (Global 197)) (Con 2) (Local 6));
  Let b17 = M[008302];
  Let b18 = M[008303];
  Let b19 = M[Offset(Address(MakeHiLo(b17,b18)),4)];
  Let b20 = M[Offset(Offset(Address(MakeHiLo(b17,b18)),4),1)];
  SetLocal 6 MakeHiLo(b19,b20);
  TraceOperation 025893 (Loadw (Var (Global 163)) (Var (Global 162)) Sp);
  Let b21 = M[008234];
  Let b22 = M[008235];
  Let b23 = M[008232];
  Let b24 = M[008233];
  Let b25 = M[Offset(Address(MakeHiLo(b21,b22)),Mul(2,MakeHiLo(b23,b24)))];
  Let b26 = M[Offset(Offset(Address(MakeHiLo(b21,b22)),Mul(2,MakeHiLo(b23,b24))),1)];
  PushStack MakeHiLo(b25,b26);
  TraceOperation 025897 (Mul (Var Sp) (Con 2) Sp);
  PopStack popped27;
  PushStack Mul(popped27,2);
  TraceOperation 025901 (Add (Var Sp) (Con 2) Sp);
  PopStack popped28;
  PushStack Add(popped28,2);
  TraceOperation 025905 (Add (Var (Global 163)) (Var Sp) Sp);
  Let b29 = M[008234];
  Let b30 = M[008235];
  PopStack popped31;
  PushStack Add(MakeHiLo(b29,b30),popped31);
  TraceOperation 025909 (Storew (Var (Local 2)) (Var (Local 6)) (Var Sp));
  GetLocal 2 local2_32;
  GetLocal 6 local6_33;
  PopStack popped34;
  SetByte Offset(Address(local2_32),Mul(2,local6_33)) HiByte(popped34);
  SetByte Offset(Offset(Address(local2_32),Mul(2,local6_33)),1) LoByte(popped34);
  Jump: 025914
LocOp 025914:
  TraceOperation 025914 (Je [Var (Local 4),Var (Local 5)] (Branch F (Dloc 025944)));
  GetLocal 4 local4_1;
  GetLocal 5 local5_2;
  if (Equal(local4_1,local5_2)) {
    TraceOperation 025918 (Loadw (Var (Global 197)) (Con 3) (Local 6));
    Let b3 = M[008302];
    Let b4 = M[008303];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),6)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),6),1)];
    SetLocal 6 MakeHiLo(b5,b6);
    TraceOperation 025922 (Loadw (Var (Global 163)) (Var (Global 162)) Sp);
    Let b7 = M[008234];
    Let b8 = M[008235];
    Let b9 = M[008232];
    Let b10 = M[008233];
    Let b11 = M[Offset(Address(MakeHiLo(b7,b8)),Mul(2,MakeHiLo(b9,b10)))];
    Let b12 = M[Offset(Offset(Address(MakeHiLo(b7,b8)),Mul(2,MakeHiLo(b9,b10))),1)];
    PushStack MakeHiLo(b11,b12);
    TraceOperation 025926 (Mul (Var Sp) (Con 2) Sp);
    PopStack popped13;
    PushStack Mul(popped13,2);
    TraceOperation 025930 (Add (Var Sp) (Con 2) Sp);
    PopStack popped14;
    PushStack Add(popped14,2);
    TraceOperation 025934 (Add (Var (Global 163)) (Var Sp) Sp);
    Let b15 = M[008234];
    Let b16 = M[008235];
    PopStack popped17;
    PushStack Add(MakeHiLo(b15,b16),popped17);
    TraceOperation 025938 (Storew (Var (Local 2)) (Var (Local 6)) (Var Sp));
    GetLocal 2 local2_18;
    GetLocal 6 local6_19;
    PopStack popped20;
    SetByte Offset(Address(local2_18),Mul(2,local6_19)) HiByte(popped20);
    SetByte Offset(Offset(Address(local2_18),Mul(2,local6_19)),1) LoByte(popped20);
    TraceOperation 025943 Rtrue;
    PopFrame;
    PopReturnAddress return_address_21;
    SetResult 1;
    JumpIndirect: (return) return_address_21
  } else {
    Jump: 025944
  }
LocOp 025944:
  TraceOperation 025944 (Jz (Var (Local 3)) (Branch T (Dloc 025961)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    Jump: 025961
  } else {
    TraceOperation 025947 (Loadw (Var (Local 4)) (Con 0) Sp);
    GetLocal 4 local4_2;
    Let b3 = M[Offset(Address(local4_2),0)];
    Let b4 = M[Offset(Offset(Address(local4_2),0),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 025951 (Je [Var (Global 186),Var Sp] (Branch F (Dloc 025961)));
    Let b5 = M[008280];
    Let b6 = M[008281];
    PopStack popped7;
    if (Equal(MakeHiLo(b5,b6),popped7)) {
      TraceOperation 025955 (Call (Floc 025978) [Var (Local 3)] Sp);
      GetLocal 3 local3_8;
      PushFrame;
      PushReturnAddress 025955;
      SetLocal 1 local3_8;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 025983
    } else {
      Jump: 025961
    }
  }
LocReturn 025955:
  PushStack call_result;
  Jump: 025961
LocOp 025961:
  TraceOperation 025961 (Loadw (Var (Local 4)) (Con 0) Sp);
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Address(local4_1),0)];
  Let b3 = M[Offset(Offset(Address(local4_1),0),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 025965 (Call (Floc 025978) [Var Sp] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 025965;
  SetLocal 1 popped4;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 025983
LocReturn 025965:
  PushStack call_result;
  TraceOperation 025971 (Add (Var (Local 4)) (Con 4) (Local 4));
  GetLocal 4 local4_1;
  SetLocal 4 Add(local4_1,4);
  TraceOperation 025975 (Jump 025914);
  Jump: 025914
--------------------------------------------------
LocRoutine 025978:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 025983
LocOp 025983:
  TraceOperation 025983 (Loadw (Var (Global 163)) (Var (Global 162)) Sp);
  Let b1 = M[008234];
  Let b2 = M[008235];
  Let b3 = M[008232];
  Let b4 = M[008233];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 025987 (Add (Var Sp) (Con 2) (Local 2));
  PopStack popped7;
  SetLocal 2 Add(popped7,2);
  TraceOperation 025991 (Sub (Var (Local 2)) (Con 1) Sp);
  GetLocal 2 local2_8;
  PushStack Sub(local2_8,1);
  TraceOperation 025995 (Storew (Var (Global 163)) (Var Sp) (Var (Local 1)));
  Let b9 = M[008234];
  Let b10 = M[008235];
  PopStack popped11;
  GetLocal 1 local1_12;
  SetByte Offset(Address(MakeHiLo(b9,b10)),Mul(2,popped11)) HiByte(local1_12);
  SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,popped11)),1) LoByte(local1_12);
  TraceOperation 026000 (Storew (Var (Global 163)) (Var (Local 2)) (Con 0));
  Let b13 = M[008234];
  Let b14 = M[008235];
  GetLocal 2 local2_15;
  SetByte Offset(Address(MakeHiLo(b13,b14)),Mul(2,local2_15)) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b13,b14)),Mul(2,local2_15)),1) 0;
  TraceOperation 026005 (Storew (Var (Global 163)) (Var (Global 162)) (Var (Local 2)));
  Let b16 = M[008234];
  Let b17 = M[008235];
  Let b18 = M[008232];
  Let b19 = M[008233];
  GetLocal 2 local2_20;
  SetByte Offset(Address(MakeHiLo(b16,b17)),Mul(2,MakeHiLo(b18,b19))) HiByte(local2_20);
  SetByte Offset(Offset(Address(MakeHiLo(b16,b17)),Mul(2,MakeHiLo(b18,b19))),1) LoByte(local2_20);
  TraceOperation 026010 Rtrue;
  PopFrame;
  PopReturnAddress return_address_21;
  SetResult 1;
  JumpIndirect: (return) return_address_21
--------------------------------------------------
LocRoutine 026012:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 026019
LocOp 026019:
  TraceOperation 026019 (Loadw (Var (Global 236)) (Con 0) Sp);
  Let b1 = M[008380];
  Let b2 = M[008381];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 026023 (Mul (Var Sp) (Con 2) (Local 3));
  PopStack popped5;
  SetLocal 3 Mul(popped5,2);
  Jump: 026027
LocOp 026027:
  TraceOperation 026027 (Inc_chk (Con 2) (Var (Local 3)) (Branch T Dfalse));
  GetLocal 2 local2_1;
  GetLocal 3 local3_2;
  SetLocal 2 Add(local2_1,1);
  if (GreaterThanEqual(local2_1,local3_2)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 026031 (Loadw (Var (Global 236)) (Var (Local 2)) Sp);
    Let b4 = M[008380];
    Let b5 = M[008381];
    GetLocal 2 local2_6;
    Let b7 = M[Offset(Address(MakeHiLo(b4,b5)),Mul(2,local2_6))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b4,b5)),Mul(2,local2_6)),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 026035 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 026027)));
    PopStack popped9;
    GetLocal 1 local1_10;
    if (Equal(popped9,local1_10)) {
      TraceOperation 026040 (Sub (Var (Local 2)) (Con 1) Sp);
      GetLocal 2 local2_11;
      PushStack Sub(local2_11,1);
      TraceOperation 026044 (Loadw (Var (Global 236)) (Var Sp) Sp);
      Let b12 = M[008380];
      Let b13 = M[008381];
      PopStack popped14;
      Let b15 = M[Offset(Address(MakeHiLo(b12,b13)),Mul(2,popped14))];
      Let b16 = M[Offset(Offset(Address(MakeHiLo(b12,b13)),Mul(2,popped14)),1)];
      PushStack MakeHiLo(b15,b16);
      TraceOperation 026048 (Ret (Var Sp));
      PopStack popped17;
      PopFrame;
      PopReturnAddress return_address_18;
      SetResult popped17;
      JumpIndirect: (return) return_address_18
    } else {
      Jump: 026027
    }
  }
--------------------------------------------------
LocRoutine 026050:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 026053
LocOp 026053:
  TraceOperation 026053 (Store (Con 214) (Var (Local 1)));
  GetLocal 1 local1_1;
  SetByte 008304 HiByte(local1_1);
  SetByte 008305 LoByte(local1_1);
  TraceOperation 026056 (Loadb (Var (Local 1)) (Con 7) (Global 203));
  GetLocal 1 local1_2;
  Let b3 = M[Offset(Address(local1_2),7)];
  SetByte 008314 HiByte(Widen(b3));
  SetByte 008315 LoByte(Widen(b3));
  TraceOperation 026060 (Ret (Var (Global 203)));
  Let b4 = M[008314];
  Let b5 = M[008315];
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult MakeHiLo(b4,b5);
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 026062:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 026071
LocOp 026071:
  TraceOperation 026071 (Je [Var (Local 1),Con 30] (Branch F (Dloc 026077)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,30)) {
    TraceOperation 026075 (Ret (Con 217));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 217;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 026077
  }
LocOp 026077:
  TraceOperation 026077 (Store (Con 188) (Var (Local 1)));
  GetLocal 1 local1_1;
  SetByte 008252 HiByte(local1_1);
  SetByte 008253 LoByte(local1_1);
  TraceOperation 026080 (Store (Con 189) (Var (Local 2)));
  GetLocal 2 local2_2;
  SetByte 008254 HiByte(local2_2);
  SetByte 008255 LoByte(local2_2);
  TraceOperation 026083 (Storew (Var (Global 164)) (Var (Global 162)) (Con 0));
  Let b3 = M[008236];
  Let b4 = M[008237];
  Let b5 = M[008232];
  Let b6 = M[008233];
  SetByte Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1) 0;
  TraceOperation 026088 (Call (Floc 026722) [Var (Global 164),Con 0] Sp);
  Let b7 = M[008236];
  Let b8 = M[008237];
  PushFrame;
  PushReturnAddress 026088;
  SetLocal 1 MakeHiLo(b7,b8);
  SetLocal 2 0;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 026743
LocReturn 026088:
  PushStack call_result;
  TraceOperation 026095 (Jz (Var Sp) (Branch T (Dloc 026161)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026161
  } else {
    TraceOperation 026099 (Store (Con 188) (Con 0));
    SetByte 008252 0;
    SetByte 008253 0;
    TraceOperation 026102 (Loadw (Var (Global 164)) (Var (Global 162)) Sp);
    Let b2 = M[008236];
    Let b3 = M[008237];
    Let b4 = M[008232];
    Let b5 = M[008233];
    Let b6 = M[Offset(Address(MakeHiLo(b2,b3)),Mul(2,MakeHiLo(b4,b5)))];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,MakeHiLo(b4,b5))),1)];
    PushStack MakeHiLo(b6,b7);
    TraceOperation 026106 (Je [Var Sp,Con 1] (Branch F Dfalse));
    PopStack popped8;
    if (Equal(popped8,1)) {
      TraceOperation 026110 (Loadw (Var (Global 164)) (Con 1) (Local 4));
      Let b9 = M[008236];
      Let b10 = M[008237];
      Let b11 = M[Offset(Address(MakeHiLo(b9,b10)),2)];
      Let b12 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),2),1)];
      SetLocal 4 MakeHiLo(b11,b12);
      TraceOperation 026114 (Print "(");
      GamePrint "(";
      TraceOperation 026117 (Jz (Var (Local 3)) (Branch T (Dloc 026153)));
      GetLocal 3 local3_13;
      if (IsZero(local3_13)) {
        Jump: 026153
      } else {
        TraceOperation 026120 (Jz (Var (Global 177)) (Branch F (Dloc 026153)));
        Let b14 = M[008262];
        Let b15 = M[008263];
        if (IsZero(MakeHiLo(b14,b15))) {
          TraceOperation 026123 (Call (Floc 026012) [Var (Local 3)] (Local 3));
          GetLocal 3 local3_16;
          PushFrame;
          PushReturnAddress 026123;
          SetLocal 1 local3_16;
          MakeRoutineFrame 3;
          SetLocal 3 0;
          SetLocal 2 0;
          Jump: 026019
        } else {
          Jump: 026153
        }
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_17;
      SetResult 0;
      JumpIndirect: (return) return_address_17
    }
  }
LocReturn 026123:
  SetLocal 3 call_result;
  TraceOperation 026129 (Print_addr (Var (Local 3)));
  GetLocal 3 local3_1;
  GamePrint GetText(Address(local3_1));
  TraceOperation 026131 (Je [Var (Local 3),Con 17522] (Branch F (Dloc 026140)));
  GetLocal 3 local3_2;
  if (Equal(local3_2,17522)) {
    TraceOperation 026137 (Print " of");
    GamePrint " of";
    Jump: 026140
  } else {
    Jump: 026140
  }
LocOp 026140:
  TraceOperation 026140 (Test_attr (Var (Local 4)) (Con 31) (Branch T (Dloc 026150)));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Offset(000751,Mul(local4_1,9)),3)];
  if (TestBit(b2,0)) {
    Jump: 026150
  } else {
    TraceOperation 026144 (Print " the ");
    GamePrint " the ";
    TraceOperation 026147 (Jump 026153);
    Jump: 026153
  }
LocOp 026150:
  TraceOperation 026150 (Print " ");
  GamePrint " ";
  Jump: 026153
LocOp 026153:
  TraceOperation 026153 (Print_obj (Var (Local 4)));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Offset(000751,Mul(local4_1,9)),7)];
  Let b3 = M[Offset(Offset(Offset(000751,Mul(local4_1,9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 026155 (Print ")");
  GamePrint ")";
  TraceOperation 026158 New_line;
  GamePrint "\n";
  TraceOperation 026159 (Ret (Var (Local 4)));
  GetLocal 4 local4_6;
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult local4_6;
  JumpIndirect: (return) return_address_7
LocOp 026161:
  TraceOperation 026161 (Store (Con 188) (Con 0));
  SetByte 008252 0;
  SetByte 008253 0;
  TraceOperation 026164 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 026166:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 026169
LocOp 026169:
  TraceOperation 026169 (Loadw (Var (Global 184)) (Con 6) (Local 1));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),12)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),12),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 026173 (Jz (Var (Local 1)) (Branch T (Dloc 026208)));
  GetLocal 1 local1_5;
  if (IsZero(local1_5)) {
    Jump: 026208
  } else {
    TraceOperation 026176 (Loadb (Var (Global 198)) (Con 5) (Global 173));
    Let b6 = M[008304];
    Let b7 = M[008305];
    Let b8 = M[Offset(Address(MakeHiLo(b6,b7)),5)];
    SetByte 008254 HiByte(Widen(b8));
    SetByte 008255 LoByte(Widen(b8));
    TraceOperation 026180 (Loadw (Var (Global 184)) (Con 7) Sp);
    Let b9 = M[008276];
    Let b10 = M[008277];
    Let b11 = M[Offset(Address(MakeHiLo(b9,b10)),14)];
    Let b12 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),14),1)];
    PushStack MakeHiLo(b11,b12);
    TraceOperation 026184 (Call (Floc 026342) [Var (Local 1),Var Sp,Var (Global 167)] Sp);
    GetLocal 1 local1_13;
    PopStack popped14;
    Let b15 = M[008242];
    Let b16 = M[008243];
    PushFrame;
    PushReturnAddress 026184;
    SetLocal 1 local1_13;
    SetLocal 2 popped14;
    SetLocal 3 MakeHiLo(b15,b16);
    MakeRoutineFrame 9;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 026361
  }
LocReturn 026184:
  PushStack call_result;
  TraceOperation 026192 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 026195 (Loadw (Var (Global 165)) (Var (Global 162)) Sp);
    Let b3 = M[008238];
    Let b4 = M[008239];
    Let b5 = M[008232];
    Let b6 = M[008233];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 026199 (Jz (Var Sp) (Branch T (Dloc 026208)));
    PopStack popped9;
    if (IsZero(popped9)) {
      Jump: 026208
    } else {
      TraceOperation 026202 (Call (Floc 026264) [Var (Global 167)] (Global 167));
      Let b10 = M[008242];
      Let b11 = M[008243];
      PushFrame;
      PushReturnAddress 026202;
      SetLocal 1 MakeHiLo(b10,b11);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 1;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 026279
    }
  }
LocReturn 026202:
  SetByte 008242 HiByte(call_result);
  SetByte 008243 LoByte(call_result);
  Jump: 026208
LocOp 026208:
  TraceOperation 026208 (Loadw (Var (Global 184)) (Con 8) (Local 1));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  SetLocal 1 MakeHiLo(b3,b4);
  TraceOperation 026212 (Jz (Var (Local 1)) (Branch T Dtrue));
  GetLocal 1 local1_5;
  if (IsZero(local1_5)) {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    TraceOperation 026215 (Loadb (Var (Global 198)) (Con 6) (Global 173));
    Let b7 = M[008304];
    Let b8 = M[008305];
    Let b9 = M[Offset(Address(MakeHiLo(b7,b8)),6)];
    SetByte 008254 HiByte(Widen(b9));
    SetByte 008255 LoByte(Widen(b9));
    TraceOperation 026219 (Loadw (Var (Global 184)) (Con 9) Sp);
    Let b10 = M[008276];
    Let b11 = M[008277];
    Let b12 = M[Offset(Address(MakeHiLo(b10,b11)),18)];
    Let b13 = M[Offset(Offset(Address(MakeHiLo(b10,b11)),18),1)];
    PushStack MakeHiLo(b12,b13);
    TraceOperation 026223 (Call (Floc 026342) [Var (Local 1),Var Sp,Var (Global 166)] Sp);
    GetLocal 1 local1_14;
    PopStack popped15;
    Let b16 = M[008240];
    Let b17 = M[008241];
    PushFrame;
    PushReturnAddress 026223;
    SetLocal 1 local1_14;
    SetLocal 2 popped15;
    SetLocal 3 MakeHiLo(b16,b17);
    MakeRoutineFrame 9;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 026361
  }
LocReturn 026223:
  PushStack call_result;
  TraceOperation 026231 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 026234 (Loadw (Var (Global 165)) (Var (Global 162)) Sp);
    Let b3 = M[008238];
    Let b4 = M[008239];
    Let b5 = M[008232];
    Let b6 = M[008233];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 026238 (Jz (Var Sp) (Branch T Dtrue));
    PopStack popped9;
    if (IsZero(popped9)) {
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 1;
      JumpIndirect: (return) return_address_10
    } else {
      TraceOperation 026241 (Loadw (Var (Global 166)) (Var (Global 162)) Sp);
      Let b11 = M[008240];
      Let b12 = M[008241];
      Let b13 = M[008232];
      Let b14 = M[008233];
      Let b15 = M[Offset(Address(MakeHiLo(b11,b12)),Mul(2,MakeHiLo(b13,b14)))];
      Let b16 = M[Offset(Offset(Address(MakeHiLo(b11,b12)),Mul(2,MakeHiLo(b13,b14))),1)];
      PushStack MakeHiLo(b15,b16);
      TraceOperation 026245 (Je [Var Sp,Con 1] (Branch F (Dloc 026256)));
      PopStack popped17;
      if (Equal(popped17,1)) {
        TraceOperation 026249 (Call (Floc 026264) [Var (Global 167)] (Global 167));
        Let b18 = M[008242];
        Let b19 = M[008243];
        PushFrame;
        PushReturnAddress 026249;
        SetLocal 1 MakeHiLo(b18,b19);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 1;
        SetLocal 3 0;
        SetLocal 2 0;
        Jump: 026279
      } else {
        Jump: 026256
      }
    }
  }
LocReturn 026249:
  SetByte 008242 HiByte(call_result);
  SetByte 008243 LoByte(call_result);
  TraceOperation 026255 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 026256:
  TraceOperation 026256 (Call (Floc 026264) [Var (Global 166)] (Global 166));
  Let b1 = M[008240];
  Let b2 = M[008241];
  PushFrame;
  PushReturnAddress 026256;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 1;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 026279
LocReturn 026256:
  SetByte 008240 HiByte(call_result);
  SetByte 008241 LoByte(call_result);
  TraceOperation 026262 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 026264:
  MakeRoutineFrame 7;
  if (LessThanByte(num_actuals,7)) {
    SetLocal 7 0;
    if (LessThanByte(num_actuals,6)) {
      SetLocal 6 0;
      if (LessThanByte(num_actuals,5)) {
        SetLocal 5 0;
        if (LessThanByte(num_actuals,4)) {
          SetLocal 4 1;
          if (LessThanByte(num_actuals,3)) {
            SetLocal 3 0;
            if (LessThanByte(num_actuals,2)) {
              SetLocal 2 0;
              if (LessThanByte(num_actuals,1)) {
                SetLocal 1 0;
              }
            }
          }
        }
      }
    }
  }
  Jump: 026279
LocOp 026279:
  TraceOperation 026279 (Loadw (Var (Local 1)) (Var (Global 162)) (Local 2));
  GetLocal 1 local1_1;
  Let b2 = M[008232];
  Let b3 = M[008233];
  Let b4 = M[Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3)))];
  Let b5 = M[Offset(Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3))),1)];
  SetLocal 2 MakeHiLo(b4,b5);
  TraceOperation 026283 (Storew (Var (Global 164)) (Var (Global 162)) (Con 0));
  Let b6 = M[008236];
  Let b7 = M[008237];
  Let b8 = M[008232];
  Let b9 = M[008233];
  SetByte Offset(Address(MakeHiLo(b6,b7)),Mul(2,MakeHiLo(b8,b9))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b6,b7)),Mul(2,MakeHiLo(b8,b9))),1) 0;
  Jump: 026288
LocOp 026288:
  TraceOperation 026288 (Dec_chk (Con 2) (Con 0) (Branch F (Dloc 026295)));
  GetLocal 2 local2_1;
  if (LessThanEqual(local2_1,0)) {
    SetLocal 2 Sub(local2_1,1);
    TraceOperation 026292 (Jump 026328);
    Jump: 026328
  } else {
    SetLocal 2 Sub(local2_1,1);
    Jump: 026295
  }
LocOp 026295:
  TraceOperation 026295 (Loadw (Var (Local 1)) (Var (Local 4)) (Local 6));
  GetLocal 1 local1_1;
  GetLocal 4 local4_2;
  Let b3 = M[Offset(Address(local1_1),Mul(2,local4_2))];
  Let b4 = M[Offset(Offset(Address(local1_1),Mul(2,local4_2)),1)];
  SetLocal 6 MakeHiLo(b3,b4);
  TraceOperation 026299 (Call (Floc 028252) [Var (Local 6),Var (Global 165)] Sp);
  GetLocal 6 local6_5;
  Let b6 = M[008238];
  Let b7 = M[008239];
  PushFrame;
  PushReturnAddress 026299;
  SetLocal 1 local6_5;
  SetLocal 2 MakeHiLo(b6,b7);
  MakeRoutineFrame 4;
  SetLocal 4 1;
  SetLocal 3 -1;
  Jump: 028261
LocReturn 026299:
  PushStack call_result;
  TraceOperation 026306 (Jz (Var Sp) (Branch T (Dloc 026312)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026312
  } else {
    TraceOperation 026309 (Jump 026323);
    Jump: 026323
  }
LocOp 026312:
  TraceOperation 026312 (Add (Var (Local 5)) (Con 1) Sp);
  GetLocal 5 local5_1;
  PushStack Add(local5_1,1);
  TraceOperation 026316 (Storew (Var (Global 164)) (Var Sp) (Var (Local 6)));
  Let b2 = M[008236];
  Let b3 = M[008237];
  PopStack popped4;
  GetLocal 6 local6_5;
  SetByte Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4)) HiByte(local6_5);
  SetByte Offset(Offset(Address(MakeHiLo(b2,b3)),Mul(2,popped4)),1) LoByte(local6_5);
  TraceOperation 026321 (Inc (Con 5));
  GetLocal 5 local5_6;
  SetLocal 5 Add(local5_6,1);
  Jump: 026323
LocOp 026323:
  TraceOperation 026323 (Inc (Con 4));
  GetLocal 4 local4_1;
  SetLocal 4 Add(local4_1,1);
  TraceOperation 026325 (Jump 026288);
  Jump: 026288
LocOp 026328:
  TraceOperation 026328 (Storew (Var (Global 164)) (Var (Global 162)) (Var (Local 5)));
  Let b1 = M[008236];
  Let b2 = M[008237];
  Let b3 = M[008232];
  Let b4 = M[008233];
  GetLocal 5 local5_5;
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) HiByte(local5_5);
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) LoByte(local5_5);
  TraceOperation 026333 (Store (Con 7) (Var (Global 164)));
  Let b6 = M[008236];
  Let b7 = M[008237];
  SetLocal 7 MakeHiLo(b6,b7);
  TraceOperation 026336 (Store (Con 180) (Var (Local 1)));
  GetLocal 1 local1_8;
  SetByte 008236 HiByte(local1_8);
  SetByte 008237 LoByte(local1_8);
  TraceOperation 026339 (Ret (Var (Local 7)));
  GetLocal 7 local7_9;
  PopFrame;
  PopReturnAddress return_address_10;
  SetResult local7_9;
  JumpIndirect: (return) return_address_10
--------------------------------------------------
LocRoutine 026342:
  MakeRoutineFrame 9;
  if (LessThanByte(num_actuals,9)) {
    SetLocal 9 0;
    if (LessThanByte(num_actuals,8)) {
      SetLocal 8 0;
      if (LessThanByte(num_actuals,7)) {
        SetLocal 7 0;
        if (LessThanByte(num_actuals,6)) {
          SetLocal 6 0;
          if (LessThanByte(num_actuals,5)) {
            SetLocal 5 0;
            if (LessThanByte(num_actuals,4)) {
              SetLocal 4 0;
              if (LessThanByte(num_actuals,3)) {
                SetLocal 3 0;
                if (LessThanByte(num_actuals,2)) {
                  SetLocal 2 0;
                  if (LessThanByte(num_actuals,1)) {
                    SetLocal 1 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 026361
LocOp 026361:
  TraceOperation 026361 (Store (Con 221) (Con 0));
  SetByte 008318 0;
  SetByte 008319 0;
  TraceOperation 026364 (Je [Var (Global 161),Con 1] (Branch F (Dloc 026371)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 026368 (Store (Con 9) (Con 1));
    SetLocal 9 1;
    Jump: 026371
  } else {
    Jump: 026371
  }
LocOp 026371:
  TraceOperation 026371 (Store (Con 177) (Con 0));
  SetByte 008230 0;
  SetByte 008231 0;
  TraceOperation 026374 (Store (Con 176) (Var (Local 1)));
  GetLocal 1 local1_1;
  SetByte 008228 HiByte(local1_1);
  SetByte 008229 LoByte(local1_1);
  TraceOperation 026377 (Store (Con 175) (Var (Local 2)));
  GetLocal 2 local2_2;
  SetByte 008226 HiByte(local2_2);
  SetByte 008227 LoByte(local2_2);
  TraceOperation 026380 (Storew (Var (Global 165)) (Var (Global 162)) (Con 0));
  Let b3 = M[008238];
  Let b4 = M[008239];
  Let b5 = M[008232];
  Let b6 = M[008233];
  SetByte Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1) 0;
  TraceOperation 026385 (Storew (Var (Local 3)) (Var (Global 162)) (Con 0));
  GetLocal 3 local3_7;
  Let b8 = M[008232];
  Let b9 = M[008233];
  SetByte Offset(Address(local3_7),Mul(2,MakeHiLo(b8,b9))) 0;
  SetByte Offset(Offset(Address(local3_7),Mul(2,MakeHiLo(b8,b9))),1) 0;
  TraceOperation 026390 (Loadw (Var (Local 1)) (Con 0) (Local 7));
  GetLocal 1 local1_10;
  Let b11 = M[Offset(Address(local1_10),0)];
  Let b12 = M[Offset(Offset(Address(local1_10),0),1)];
  SetLocal 7 MakeHiLo(b11,b12);
  Jump: 026394
LocOp 026394:
  TraceOperation 026394 (Je [Var (Local 1),Var (Local 2)] (Branch F (Dloc 026424)));
  GetLocal 1 local1_1;
  GetLocal 2 local2_2;
  if (Equal(local1_1,local2_2)) {
    TraceOperation 026398 (Jz (Var (Local 4)) (Branch T (Dloc 026407)));
    GetLocal 4 local4_3;
    if (IsZero(local4_3)) {
      Jump: 026407
    } else {
      TraceOperation 026401 (Push (Var (Local 4)));
      GetLocal 4 local4_4;
      PushStack local4_4;
      TraceOperation 026404 (Jump 026410);
      Jump: 026410
    }
  } else {
    Jump: 026424
  }
LocOp 026407:
  TraceOperation 026407 (Push (Var (Local 3)));
  GetLocal 3 local3_1;
  PushStack local3_1;
  Jump: 026410
LocOp 026410:
  TraceOperation 026410 (Call (Floc 026722) [Var Sp] (Local 6));
  PopStack popped1;
  PushFrame;
  PushReturnAddress 026410;
  SetLocal 1 popped1;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 1;
  Jump: 026743
LocReturn 026410:
  SetLocal 6 call_result;
  TraceOperation 026416 (Jz (Var (Local 9)) (Branch T (Dloc 026422)));
  GetLocal 9 local9_1;
  if (IsZero(local9_1)) {
    Jump: 026422
  } else {
    TraceOperation 026419 (Store (Con 177) (Con 1));
    SetByte 008230 0;
    SetByte 008231 1;
    Jump: 026422
  }
LocOp 026422:
  TraceOperation 026422 (Ret (Var (Local 6)));
  GetLocal 6 local6_1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult local6_1;
  JumpIndirect: (return) return_address_2
LocOp 026424:
  TraceOperation 026424 (Loadw (Var (Local 1)) (Con 2) (Local 8));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),4)];
  Let b3 = M[Offset(Offset(Address(local1_1),4),1)];
  SetLocal 8 MakeHiLo(b2,b3);
  TraceOperation 026428 (Je [Var (Local 7),Con 13798,Con 14386] (Branch F (Dloc 026453)));
  GetLocal 7 local7_4;
  if (LogOr(Equal(local7_4,13798),Equal(local7_4,14386))) {
    TraceOperation 026436 (Store (Con 177) (Con 1));
    SetByte 008230 0;
    SetByte 008231 1;
    TraceOperation 026439 (Je [Var (Local 8),Con 17417] (Branch F (Dloc 026691)));
    GetLocal 8 local8_5;
    if (Equal(local8_5,17417)) {
      TraceOperation 026446 (Add (Var (Local 1)) (Con 4) (Local 1));
      GetLocal 1 local1_6;
      SetLocal 1 Add(local1_6,4);
      TraceOperation 026450 (Jump 026691);
      Jump: 026691
    } else {
      Jump: 026691
    }
  } else {
    Jump: 026453
  }
LocOp 026453:
  TraceOperation 026453 (Je [Var (Local 7),Con 14505,Con 15499] (Branch F (Dloc 026493)));
  GetLocal 7 local7_1;
  if (LogOr(Equal(local7_1,14505),Equal(local7_1,15499))) {
    TraceOperation 026461 (Jz (Var (Local 4)) (Branch T (Dloc 026470)));
    GetLocal 4 local4_2;
    if (IsZero(local4_2)) {
      Jump: 026470
    } else {
      TraceOperation 026464 (Push (Var (Local 4)));
      GetLocal 4 local4_3;
      PushStack local4_3;
      TraceOperation 026467 (Jump 026473);
      Jump: 026473
    }
  } else {
    Jump: 026493
  }
LocOp 026470:
  TraceOperation 026470 (Push (Var (Local 3)));
  GetLocal 3 local3_1;
  PushStack local3_1;
  Jump: 026473
LocOp 026473:
  TraceOperation 026473 (Call (Floc 026722) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 026473;
  SetLocal 1 popped1;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 1;
  Jump: 026743
LocReturn 026473:
  PushStack call_result;
  TraceOperation 026479 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 026482 (Store (Con 4) (Var (Global 165)));
    Let b3 = M[008238];
    Let b4 = M[008239];
    SetLocal 4 MakeHiLo(b3,b4);
    TraceOperation 026485 (Storew (Var (Local 4)) (Var (Global 162)) (Con 0));
    GetLocal 4 local4_5;
    Let b6 = M[008232];
    Let b7 = M[008233];
    SetByte Offset(Address(local4_5),Mul(2,MakeHiLo(b6,b7))) 0;
    SetByte Offset(Offset(Address(local4_5),Mul(2,MakeHiLo(b6,b7))),1) 0;
    TraceOperation 026490 (Jump 026691);
    Jump: 026691
  }
LocOp 026493:
  TraceOperation 026493 (Je [Var (Local 7),Con 13693,Con 17473] (Branch F (Dloc 026551)));
  GetLocal 7 local7_1;
  if (LogOr(Equal(local7_1,13693),Equal(local7_1,17473))) {
    TraceOperation 026501 (Jz (Var (Global 170)) (Branch F (Dloc 026521)));
    Let b2 = M[008248];
    Let b3 = M[008249];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 026504 (Store (Con 177) (Con 2));
      SetByte 008230 0;
      SetByte 008231 2;
      TraceOperation 026507 (Je [Var (Local 8),Con 17417] (Branch F (Dloc 026691)));
      GetLocal 8 local8_4;
      if (Equal(local8_4,17417)) {
        TraceOperation 026514 (Add (Var (Local 1)) (Con 4) (Local 1));
        GetLocal 1 local1_5;
        SetLocal 1 Add(local1_5,4);
        TraceOperation 026518 (Jump 026691);
        Jump: 026691
      } else {
        Jump: 026691
      }
    } else {
      Jump: 026521
    }
  } else {
    Jump: 026551
  }
LocOp 026521:
  TraceOperation 026521 (Store (Con 187) (Var (Global 199)));
  Let b1 = M[008306];
  Let b2 = M[008307];
  SetByte 008250 b1;
  SetByte 008251 b2;
  TraceOperation 026524 (Jz (Var (Local 4)) (Branch T (Dloc 026533)));
  GetLocal 4 local4_3;
  if (IsZero(local4_3)) {
    Jump: 026533
  } else {
    TraceOperation 026527 (Push (Var (Local 4)));
    GetLocal 4 local4_4;
    PushStack local4_4;
    TraceOperation 026530 (Jump 026536);
    Jump: 026536
  }
LocOp 026533:
  TraceOperation 026533 (Push (Var (Local 3)));
  GetLocal 3 local3_1;
  PushStack local3_1;
  Jump: 026536
LocOp 026536:
  TraceOperation 026536 (Call (Floc 026722) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 026536;
  SetLocal 1 popped1;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 1;
  Jump: 026743
LocReturn 026536:
  PushStack call_result;
  TraceOperation 026542 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 026545 (Jz (Var (Local 8)) (Branch T Dtrue));
    GetLocal 8 local8_3;
    if (IsZero(local8_3)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 026548 (Jump 026691);
      Jump: 026691
    }
  }
LocOp 026551:
  TraceOperation 026551 (Je [Var (Local 7),Con 13833,Con 13672] (Branch F (Dloc 026593)));
  GetLocal 7 local7_1;
  if (LogOr(Equal(local7_1,13833),Equal(local7_1,13672))) {
    TraceOperation 026559 (Je [Var (Local 8),Con 13833,Con 13672] (Branch T (Dloc 026593)));
    GetLocal 8 local8_2;
    if (LogOr(Equal(local8_2,13833),Equal(local8_2,13672))) {
      Jump: 026593
    } else {
      TraceOperation 026567 (Store (Con 221) (Con 1));
      SetByte 008318 0;
      SetByte 008319 1;
      TraceOperation 026570 (Jz (Var (Local 4)) (Branch T (Dloc 026579)));
      GetLocal 4 local4_3;
      if (IsZero(local4_3)) {
        Jump: 026579
      } else {
        TraceOperation 026573 (Push (Var (Local 4)));
        GetLocal 4 local4_4;
        PushStack local4_4;
        TraceOperation 026576 (Jump 026582);
        Jump: 026582
      }
    }
  } else {
    Jump: 026593
  }
LocOp 026579:
  TraceOperation 026579 (Push (Var (Local 3)));
  GetLocal 3 local3_1;
  PushStack local3_1;
  Jump: 026582
LocOp 026582:
  TraceOperation 026582 (Call (Floc 026722) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 026582;
  SetLocal 1 popped1;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 1;
  Jump: 026743
LocReturn 026582:
  PushStack call_result;
  TraceOperation 026588 (Jz (Var Sp) (Branch F (Dloc 026691)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 026592 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 026691
  }
LocOp 026593:
  TraceOperation 026593 (Call (Floc 023466) [Var (Local 7),Con 4] Sp);
  GetLocal 7 local7_1;
  PushFrame;
  PushReturnAddress 026593;
  SetLocal 1 local7_1;
  SetLocal 2 4;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  SetLocal 3 5;
  Jump: 023477
LocReturn 026593:
  PushStack call_result;
  TraceOperation 026600 (Jz (Var Sp) (Branch T (Dloc 026606)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026606
  } else {
    TraceOperation 026603 (Jump 026691);
    Jump: 026691
  }
LocOp 026606:
  TraceOperation 026606 (Je [Var (Local 7),Con 13833,Con 13672] (Branch F (Dloc 026617)));
  GetLocal 7 local7_1;
  if (LogOr(Equal(local7_1,13833),Equal(local7_1,13672))) {
    TraceOperation 026614 (Jump 026691);
    Jump: 026691
  } else {
    Jump: 026617
  }
LocOp 026617:
  TraceOperation 026617 (Je [Var (Local 7),Con 17417] (Branch F (Dloc 026633)));
  GetLocal 7 local7_1;
  if (Equal(local7_1,17417)) {
    TraceOperation 026623 (Jz (Var (Global 161)) (Branch F (Dloc 026691)));
    Let b2 = M[008230];
    Let b3 = M[008231];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 026627 (Store (Con 177) (Con 4));
      SetByte 008230 0;
      SetByte 008231 4;
      TraceOperation 026630 (Jump 026691);
      Jump: 026691
    } else {
      Jump: 026691
    }
  } else {
    Jump: 026633
  }
LocOp 026633:
  TraceOperation 026633 (Call (Floc 023466) [Var (Local 7),Con 32,Con 2] (Local 6));
  GetLocal 7 local7_1;
  PushFrame;
  PushReturnAddress 026633;
  SetLocal 1 local7_1;
  SetLocal 2 32;
  SetLocal 3 2;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  Jump: 023477
LocReturn 026633:
  SetLocal 6 call_result;
  TraceOperation 026641 (Jz (Var (Local 6)) (Branch T (Dloc 026674)));
  GetLocal 6 local6_1;
  if (IsZero(local6_1)) {
    Jump: 026674
  } else {
    TraceOperation 026644 (Call (Floc 026706) [Var (Local 7)] Sp);
    GetLocal 7 local7_2;
    PushFrame;
    PushReturnAddress 026644;
    SetLocal 1 local7_2;
    MakeRoutineFrame 1;
    Jump: 026709
  }
LocReturn 026644:
  PushStack call_result;
  TraceOperation 026650 (Jz (Var Sp) (Branch T (Dloc 026674)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026674
  } else {
    TraceOperation 026653 (Je [Var (Local 7),Con 19503] (Branch F (Dloc 026665)));
    GetLocal 7 local7_2;
    if (Equal(local7_2,19503)) {
      TraceOperation 026659 (Je [Var (Global 171),Con 14911] (Branch T (Dloc 026674)));
      Let b3 = M[008250];
      Let b4 = M[008251];
      if (Equal(MakeHiLo(b3,b4),14911)) {
        Jump: 026674
      } else {
        Jump: 026665
      }
    } else {
      Jump: 026665
    }
  }
LocOp 026665:
  TraceOperation 026665 (Store (Con 186) (Var (Local 6)));
  GetLocal 6 local6_1;
  SetByte 008248 HiByte(local6_1);
  SetByte 008249 LoByte(local6_1);
  TraceOperation 026668 (Store (Con 184) (Var (Local 7)));
  GetLocal 7 local7_2;
  SetByte 008244 HiByte(local7_2);
  SetByte 008245 LoByte(local7_2);
  TraceOperation 026671 (Jump 026691);
  Jump: 026691
LocOp 026674:
  TraceOperation 026674 (Call (Floc 023466) [Var (Local 7),Con 128,Con 0] Sp);
  GetLocal 7 local7_1;
  PushFrame;
  PushReturnAddress 026674;
  SetLocal 1 local7_1;
  SetLocal 2 128;
  SetLocal 3 0;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 5;
  Jump: 023477
LocReturn 026674:
  PushStack call_result;
  TraceOperation 026682 (Jz (Var Sp) (Branch T (Dloc 026691)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026691
  } else {
    TraceOperation 026685 (Store (Con 187) (Var (Local 7)));
    GetLocal 7 local7_2;
    SetByte 008250 HiByte(local7_2);
    SetByte 008251 LoByte(local7_2);
    TraceOperation 026688 (Store (Con 215) (Var (Local 7)));
    GetLocal 7 local7_3;
    SetByte 008306 HiByte(local7_3);
    SetByte 008307 LoByte(local7_3);
    Jump: 026691
  }
LocOp 026691:
  TraceOperation 026691 (Je [Var (Local 1),Var (Local 2)] (Branch T (Dloc 026394)));
  GetLocal 1 local1_1;
  GetLocal 2 local2_2;
  if (Equal(local1_1,local2_2)) {
    Jump: 026394
  } else {
    TraceOperation 026696 (Add (Var (Local 1)) (Con 4) (Local 1));
    GetLocal 1 local1_3;
    SetLocal 1 Add(local1_3,4);
    TraceOperation 026700 (Store (Con 7) (Var (Local 8)));
    GetLocal 8 local8_4;
    SetLocal 7 local8_4;
    TraceOperation 026703 (Jump 026394);
    Jump: 026394
  }
--------------------------------------------------
LocRoutine 026706:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 026709
LocOp 026709:
  TraceOperation 026709 (Jz (Var (Global 170)) (Branch T Dtrue));
  Let b1 = M[008248];
  Let b2 = M[008249];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 026712 (Je [Var (Local 1),Con 16514,Con 17529] (Branch T Dtrue));
    GetLocal 1 local1_4;
    if (LogOr(Equal(local1_4,16514),Equal(local1_4,17529))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 026720 Rfalse;
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    }
  }
--------------------------------------------------
LocRoutine 026722:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 0;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 1;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 026743
LocOp 026743:
  TraceOperation 026743 (Store (Con 6) (Var (Global 173)));
  Let b1 = M[008254];
  Let b2 = M[008255];
  SetLocal 6 MakeHiLo(b1,b2);
  TraceOperation 026746 (Loadw (Var (Local 1)) (Var (Global 162)) (Local 7));
  GetLocal 1 local1_3;
  Let b4 = M[008232];
  Let b5 = M[008233];
  Let b6 = M[Offset(Address(local1_3),Mul(2,MakeHiLo(b4,b5)))];
  Let b7 = M[Offset(Offset(Address(local1_3),Mul(2,MakeHiLo(b4,b5))),1)];
  SetLocal 7 MakeHiLo(b6,b7);
  TraceOperation 026750 (Test (Var (Global 161)) (Con 4) (Branch T Dtrue));
  Let b8 = M[008230];
  Let b9 = M[008231];
  if (Equal(And(MakeHiLo(b8,b9),4),4)) {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 1;
    JumpIndirect: (return) return_address_10
  } else {
    TraceOperation 026754 (Jz (Var (Global 171)) (Branch F (Dloc 026777)));
    Let b11 = M[008250];
    Let b12 = M[008251];
    if (IsZero(MakeHiLo(b11,b12))) {
      TraceOperation 026757 (Jz (Var (Global 170)) (Branch T (Dloc 026777)));
      Let b13 = M[008248];
      Let b14 = M[008249];
      if (IsZero(MakeHiLo(b13,b14))) {
        Jump: 026777
      } else {
        TraceOperation 026760 (Call (Floc 023466) [Var (Global 168),Con 128,Con 0] Sp);
        Let b15 = M[008244];
        Let b16 = M[008245];
        PushFrame;
        PushReturnAddress 026760;
        SetLocal 1 MakeHiLo(b15,b16);
        SetLocal 2 128;
        SetLocal 3 0;
        MakeRoutineFrame 5;
        SetLocal 5 0;
        SetLocal 4 5;
        Jump: 023477
      }
    } else {
      Jump: 026777
    }
  }
LocReturn 026760:
  PushStack call_result;
  TraceOperation 026768 (Jz (Var Sp) (Branch T (Dloc 026777)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 026777
  } else {
    TraceOperation 026771 (Store (Con 187) (Var (Global 168)));
    Let b2 = M[008244];
    Let b3 = M[008245];
    SetByte 008250 b2;
    SetByte 008251 b3;
    TraceOperation 026774 (Store (Con 186) (Con 0));
    SetByte 008248 0;
    SetByte 008249 0;
    Jump: 026777
  }
LocOp 026777:
  TraceOperation 026777 (Jz (Var (Global 171)) (Branch F (Dloc 026797)));
  Let b1 = M[008250];
  Let b2 = M[008251];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 026780 (Jz (Var (Global 170)) (Branch F (Dloc 026797)));
    Let b3 = M[008248];
    Let b4 = M[008249];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 026783 (Je [Var (Global 161),Con 1] (Branch T (Dloc 026797)));
      Let b5 = M[008230];
      Let b6 = M[008231];
      if (Equal(MakeHiLo(b5,b6),1)) {
        Jump: 026797
      } else {
        TraceOperation 026787 (Jz (Var (Global 172)) (Branch F (Dloc 026797)));
        Let b7 = M[008252];
        Let b8 = M[008253];
        if (IsZero(MakeHiLo(b7,b8))) {
          TraceOperation 026790 (Jz (Var (Local 2)) (Branch T Dfalse));
          GetLocal 2 local2_9;
          if (IsZero(local2_9)) {
            PopFrame;
            PopReturnAddress return_address_10;
            SetResult 0;
            JumpIndirect: (return) return_address_10
          } else {
            TraceOperation 026793 (Print_paddr (Var (Global 158)));
            Let b11 = M[008224];
            Let b12 = M[008225];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
            TraceOperation 026795 New_line;
            GamePrint "\n";
            TraceOperation 026796 Rfalse;
            PopFrame;
            PopReturnAddress return_address_13;
            SetResult 0;
            JumpIndirect: (return) return_address_13
          }
        } else {
          Jump: 026797
        }
      }
    } else {
      Jump: 026797
    }
  } else {
    Jump: 026797
  }
LocOp 026797:
  TraceOperation 026797 (Je [Var (Global 161),Con 1] (Branch F (Dloc 026804)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 026801 (Jz (Var (Global 173)) (Branch F (Dloc 026809)));
    Let b3 = M[008254];
    Let b4 = M[008255];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 026804
    } else {
      Jump: 026809
    }
  } else {
    Jump: 026804
  }
LocOp 026804:
  TraceOperation 026804 (Store (Con 189) (Con -1));
  SetByte 008254 255;
  SetByte 008255 255;
  Jump: 026809
LocOp 026809:
  TraceOperation 026809 (Store (Con 216) (Var (Local 1)));
  GetLocal 1 local1_1;
  SetByte 008308 HiByte(local1_1);
  SetByte 008309 LoByte(local1_1);
  Jump: 026812
LocOp 026812:
  TraceOperation 026812 (Jz (Var (Local 8)) (Branch T (Dloc 026824)));
  GetLocal 8 local8_1;
  if (IsZero(local8_1)) {
    Jump: 026824
  } else {
    TraceOperation 026815 (Call (Floc 027432) [Var (Local 1)] Sp);
    GetLocal 1 local1_2;
    PushFrame;
    PushReturnAddress 026815;
    SetLocal 1 local1_2;
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 027449
  }
LocReturn 026815:
  PushStack call_result;
  TraceOperation 026821 (Jump 026849);
  Jump: 026849
LocOp 026824:
  TraceOperation 026824 (Jz (Var (Global 85)) (Branch T (Dloc 026841)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 026841
  } else {
    TraceOperation 026827 (Clear_attr (Var (Global 235)) (Con 17));
    Let b3 = M[008378];
    Let b4 = M[008379];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),2)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),2) ClearBit(b5,6);
    TraceOperation 026830 (Call (Floc 027620) [Var (Global 0),Con 16,Con 32] Sp);
    Let b6 = M[007908];
    Let b7 = M[007909];
    PushFrame;
    PushReturnAddress 026830;
    SetLocal 1 MakeHiLo(b6,b7);
    SetLocal 2 16;
    SetLocal 3 32;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 027629
  }
LocReturn 026830:
  PushStack call_result;
  TraceOperation 026838 (Set_attr (Var (Global 235)) (Con 17));
  Let b1 = M[008378];
  Let b2 = M[008379];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2) SetBit(b3,6);
  Jump: 026841
LocOp 026841:
  TraceOperation 026841 (Call (Floc 027620) [Var (Global 235),Con 128,Con 64] Sp);
  Let b1 = M[008378];
  Let b2 = M[008379];
  PushFrame;
  PushReturnAddress 026841;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 128;
  SetLocal 3 64;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 027629
LocReturn 026841:
  PushStack call_result;
  Jump: 026849
LocOp 026849:
  TraceOperation 026849 (Loadw (Var (Local 1)) (Var (Global 162)) Sp);
  GetLocal 1 local1_1;
  Let b2 = M[008232];
  Let b3 = M[008233];
  Let b4 = M[Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3)))];
  Let b5 = M[Offset(Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3))),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 026853 (Sub (Var Sp) (Var (Local 7)) (Local 5));
  PopStack popped6;
  GetLocal 7 local7_7;
  SetLocal 5 Sub(popped6,local7_7);
  TraceOperation 026857 (Test (Var (Global 161)) (Con 1) (Branch F (Dloc 026864)));
  Let b8 = M[008230];
  Let b9 = M[008231];
  if (Equal(And(MakeHiLo(b8,b9),1),1)) {
    TraceOperation 026861 (Jump 027209);
    Jump: 027209
  } else {
    Jump: 026864
  }
LocOp 026864:
  TraceOperation 026864 (Test (Var (Global 161)) (Con 2) (Branch F (Dloc 026917)));
  Let b1 = M[008230];
  Let b2 = M[008231];
  if (Equal(And(MakeHiLo(b1,b2),2),2)) {
    TraceOperation 026868 (Jz (Var (Local 5)) (Branch T (Dloc 026917)));
    GetLocal 5 local5_3;
    if (IsZero(local5_3)) {
      Jump: 026917
    } else {
      TraceOperation 026871 (Je [Var (Local 5),Con 1] (Branch T (Dloc 026909)));
      GetLocal 5 local5_4;
      if (Equal(local5_4,1)) {
        Jump: 026909
      } else {
        TraceOperation 026875 (Random (Var (Local 5)) Sp);
        GetLocal 5 local5_5;
        LetRandom random6 local5_5;
        PushStack random6;
        TraceOperation 026879 (Loadw (Var (Local 1)) (Var Sp) Sp);
        GetLocal 1 local1_7;
        PopStack popped8;
        Let b9 = M[Offset(Address(local1_7),Mul(2,popped8))];
        Let b10 = M[Offset(Offset(Address(local1_7),Mul(2,popped8)),1)];
        PushStack MakeHiLo(b9,b10);
        TraceOperation 026883 (Storew (Var (Local 1)) (Con 1) (Var Sp));
        GetLocal 1 local1_11;
        PopStack popped12;
        SetByte Offset(Address(local1_11),2) HiByte(popped12);
        SetByte Offset(Offset(Address(local1_11),2),1) LoByte(popped12);
        TraceOperation 026888 (Print "(How about the ");
        GamePrint "(How about the ";
        TraceOperation 026897 (Loadw (Var (Local 1)) (Con 1) Sp);
        GetLocal 1 local1_13;
        Let b14 = M[Offset(Address(local1_13),2)];
        Let b15 = M[Offset(Offset(Address(local1_13),2),1)];
        PushStack MakeHiLo(b14,b15);
        TraceOperation 026901 (Print_obj (Var Sp));
        PopStack popped16;
        Let b17 = M[Offset(Offset(000751,Mul(popped16,9)),7)];
        Let b18 = M[Offset(Offset(Offset(000751,Mul(popped16,9)),7),1)];
        Let b19 = M[Address(MakeHiLo(b17,b18))];
        Let ite_res20 = Ite((IsZeroByte(b19),"",GetText(Offset(Address(MakeHiLo(b17,b18)),1))));
        GamePrint ite_res20;
        TraceOperation 026903 (Print "?)");
        GamePrint "?)";
        TraceOperation 026908 New_line;
        GamePrint "\n";
        Jump: 026909
      }
    }
  } else {
    Jump: 026917
  }
LocOp 026909:
  TraceOperation 026909 (Storew (Var (Local 1)) (Var (Global 162)) (Con 1));
  GetLocal 1 local1_1;
  Let b2 = M[008232];
  Let b3 = M[008233];
  SetByte Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3))) 0;
  SetByte Offset(Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3))),1) 1;
  TraceOperation 026914 (Jump 027209);
  Jump: 027209
LocOp 026917:
  TraceOperation 026917 (Jg (Var (Local 5)) (Con 1) (Branch T (Dloc 026932)));
  GetLocal 5 local5_1;
  if (GreaterThan(local5_1,1)) {
    Jump: 026932
  } else {
    TraceOperation 026921 (Jz (Var (Local 5)) (Branch F (Dloc 027137)));
    GetLocal 5 local5_2;
    if (IsZero(local5_2)) {
      TraceOperation 026925 (Je [Var (Global 173),Con -1] (Branch T (Dloc 027137)));
      Let b3 = M[008254];
      Let b4 = M[008255];
      if (Equal(MakeHiLo(b3,b4),-1)) {
        Jump: 027137
      } else {
        Jump: 026932
      }
    } else {
      Jump: 027137
    }
  }
LocOp 026932:
  TraceOperation 026932 (Je [Var (Global 173),Con -1] (Branch F (Dloc 026960)));
  Let b1 = M[008254];
  Let b2 = M[008255];
  if (Equal(MakeHiLo(b1,b2),-1)) {
    TraceOperation 026938 (Store (Con 189) (Var (Local 6)));
    GetLocal 6 local6_3;
    SetByte 008254 HiByte(local6_3);
    SetByte 008255 LoByte(local6_3);
    TraceOperation 026941 (Store (Con 9) (Var (Local 5)));
    GetLocal 5 local5_4;
    SetLocal 9 local5_4;
    TraceOperation 026944 (Loadw (Var (Local 1)) (Var (Global 162)) Sp);
    GetLocal 1 local1_5;
    Let b6 = M[008232];
    Let b7 = M[008233];
    Let b8 = M[Offset(Address(local1_5),Mul(2,MakeHiLo(b6,b7)))];
    Let b9 = M[Offset(Offset(Address(local1_5),Mul(2,MakeHiLo(b6,b7))),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 026948 (Sub (Var Sp) (Var (Local 5)) Sp);
    PopStack popped10;
    GetLocal 5 local5_11;
    PushStack Sub(popped10,local5_11);
    TraceOperation 026952 (Storew (Var (Local 1)) (Var (Global 162)) (Var Sp));
    GetLocal 1 local1_12;
    Let b13 = M[008232];
    Let b14 = M[008233];
    PopStack popped15;
    SetByte Offset(Address(local1_12),Mul(2,MakeHiLo(b13,b14))) HiByte(popped15);
    SetByte Offset(Offset(Address(local1_12),Mul(2,MakeHiLo(b13,b14))),1) LoByte(popped15);
    TraceOperation 026957 (Jump 026812);
    Jump: 026812
  } else {
    Jump: 026960
  }
LocOp 026960:
  TraceOperation 026960 (Jz (Var (Local 5)) (Branch F (Dloc 026966)));
  GetLocal 5 local5_1;
  if (IsZero(local5_1)) {
    TraceOperation 026963 (Store (Con 5) (Var (Local 9)));
    GetLocal 9 local9_2;
    SetLocal 5 local9_2;
    Jump: 026966
  } else {
    Jump: 026966
  }
LocOp 026966:
  TraceOperation 026966 (Jg (Var (Local 5)) (Con 1) (Branch F (Dloc 027056)));
  GetLocal 5 local5_1;
  if (GreaterThan(local5_1,1)) {
    TraceOperation 026971 (Je [Var (Global 203),Con 174,Con 22] (Branch F (Dloc 027056)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (LogOr(Equal(MakeHiLo(b2,b3),174),Equal(MakeHiLo(b2,b3),22))) {
      TraceOperation 026978 (Je [Var (Global 171),Con 15695,Con 15345] (Branch F (Dloc 026989)));
      Let b4 = M[008250];
      Let b5 = M[008251];
      if (LogOr(Equal(MakeHiLo(b4,b5),15695),Equal(MakeHiLo(b4,b5),15345))) {
        TraceOperation 026986 (Jz (Var (Global 170)) (Branch T (Dloc 027015)));
        Let b6 = M[008248];
        Let b7 = M[008249];
        if (IsZero(MakeHiLo(b6,b7))) {
          Jump: 027015
        } else {
          Jump: 026989
        }
      } else {
        Jump: 026989
      }
    } else {
      Jump: 027056
    }
  } else {
    Jump: 027056
  }
LocOp 026989:
  TraceOperation 026989 (Je [Var (Global 171),Con 19699,Con 19685] (Branch F (Dloc 027003)));
  Let b1 = M[008250];
  Let b2 = M[008251];
  if (LogOr(Equal(MakeHiLo(b1,b2),19699),Equal(MakeHiLo(b1,b2),19685))) {
    TraceOperation 026997 (Je [Var (Global 168),Con 17998] (Branch T (Dloc 027015)));
    Let b3 = M[008244];
    Let b4 = M[008245];
    if (Equal(MakeHiLo(b3,b4),17998)) {
      Jump: 027015
    } else {
      Jump: 027003
    }
  } else {
    Jump: 027003
  }
LocOp 027003:
  TraceOperation 027003 (Je [Var (Global 171),Con 15345] (Branch F (Dloc 027056)));
  Let b1 = M[008250];
  Let b2 = M[008251];
  if (Equal(MakeHiLo(b1,b2),15345)) {
    TraceOperation 027009 (Je [Var (Global 168),Con 16465] (Branch F (Dloc 027056)));
    Let b3 = M[008244];
    Let b4 = M[008245];
    if (Equal(MakeHiLo(b3,b4),16465)) {
      Jump: 027015
    } else {
      Jump: 027056
    }
  } else {
    Jump: 027056
  }
LocOp 027015:
  TraceOperation 027015 (Loadw (Var (Local 1)) (Var (Local 5)) Sp);
  GetLocal 1 local1_1;
  GetLocal 5 local5_2;
  Let b3 = M[Offset(Address(local1_1),Mul(2,local5_2))];
  Let b4 = M[Offset(Offset(Address(local1_1),Mul(2,local5_2)),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 027019 (Get_prop (Var Sp) (Con 15) (Local 3));
  PopStack popped5;
  Let b6 = M[Offset(Offset(000751,Mul(popped5,9)),7)];
  Let b7 = M[Offset(Offset(Offset(000751,Mul(popped5,9)),7),1)];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Let loop_var9 = DeAddress(Offset(Address(MakeHiLo(b6,b7)),Add(Mul(2,Widen(b8)),1)));
  Label 10: {
    Let b11 = M[Address(loop_var9)];
    if (IsZeroByte(b11)) {
      Let b12 = M[000726];
      Let b13 = M[000727];
      SetLocal 3 MakeHiLo(b12,b13);
    } else {
      if (Equal(15,Widen(BwAnd(b11,31)))) {
        if (Equal(Add(Widen(ShiftR(b11,5)),1),2)) {
          Let b14 = M[Offset(Address(loop_var9),1)];
          Let b15 = M[Offset(Offset(Address(loop_var9),1),1)];
          SetLocal 3 MakeHiLo(b14,b15);
        } else {
          Let b16 = M[Offset(Address(loop_var9),1)];
          SetLocal 3 Widen(b16);
        }
      } else {
        Assign loop_var9 = DeAddress(Offset(Offset(Address(loop_var9),1),Add(Widen(ShiftR(b11,5)),1)));
        Goto: Label 10
      }
    }
  }
  TraceOperation 027023 (Add (Var (Local 7)) (Con 1) (Local 5));
  GetLocal 7 local7_17;
  SetLocal 5 Add(local7_17,1);
  TraceOperation 027027 (Storew (Var (Local 1)) (Var (Global 162)) (Var (Local 5)));
  GetLocal 1 local1_18;
  Let b19 = M[008232];
  Let b20 = M[008233];
  GetLocal 5 local5_21;
  SetByte Offset(Address(local1_18),Mul(2,MakeHiLo(b19,b20))) HiByte(local5_21);
  SetByte Offset(Offset(Address(local1_18),Mul(2,MakeHiLo(b19,b20))),1) LoByte(local5_21);
  TraceOperation 027032 (Storew (Var (Local 1)) (Var (Local 5)) (Var (Local 3)));
  GetLocal 1 local1_22;
  GetLocal 5 local5_23;
  GetLocal 3 local3_24;
  SetByte Offset(Address(local1_22),Mul(2,local5_23)) HiByte(local3_24);
  SetByte Offset(Offset(Address(local1_22),Mul(2,local5_23)),1) LoByte(local3_24);
  TraceOperation 027037 (Store (Con 171) (Var (Global 171)));
  Let b25 = M[008250];
  Let b26 = M[008251];
  SetByte 008218 b25;
  SetByte 008219 b26;
  TraceOperation 027040 (Store (Con 170) (Var (Global 170)));
  Let b27 = M[008248];
  Let b28 = M[008249];
  SetByte 008216 b27;
  SetByte 008217 b28;
  TraceOperation 027043 (Store (Con 169) (Var (Global 168)));
  Let b29 = M[008244];
  Let b30 = M[008245];
  SetByte 008214 b29;
  SetByte 008215 b30;
  TraceOperation 027046 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027049 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027052 (Store (Con 184) (Con 0));
  SetByte 008244 0;
  SetByte 008245 0;
  TraceOperation 027055 Rtrue;
  PopFrame;
  PopReturnAddress return_address_31;
  SetResult 1;
  JumpIndirect: (return) return_address_31
LocOp 027056:
  TraceOperation 027056 (Jz (Var (Local 2)) (Branch T (Dloc 027075)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    Jump: 027075
  } else {
    TraceOperation 027059 (Je [Var (Global 195),Con 31] (Branch T (Dloc 027075)));
    Let b2 = M[008298];
    Let b3 = M[008299];
    if (Equal(MakeHiLo(b2,b3),31)) {
      Jump: 027075
    } else {
      TraceOperation 027063 (Call (Floc 025324) [] Sp);
      PushFrame;
      PushReturnAddress 027063;
      MakeRoutineFrame 0;
      Jump: 025325
    }
  }
LocReturn 027063:
  PushStack call_result;
  TraceOperation 027068 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027071 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027074 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 027075:
  TraceOperation 027075 (Jz (Var (Local 2)) (Branch T (Dloc 027124)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    Jump: 027124
  } else {
    TraceOperation 027078 (Jz (Var (Global 171)) (Branch T (Dloc 027124)));
    Let b2 = M[008250];
    Let b3 = M[008251];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 027124
    } else {
      TraceOperation 027081 (Call (Floc 027314) [Var (Local 7),Var (Local 5),Var (Local 1)] Sp);
      GetLocal 7 local7_4;
      GetLocal 5 local5_5;
      GetLocal 1 local1_6;
      PushFrame;
      PushReturnAddress 027081;
      SetLocal 1 local7_4;
      SetLocal 2 local5_5;
      SetLocal 3 local1_6;
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 027325
    }
  }
LocReturn 027081:
  PushStack call_result;
  TraceOperation 027089 (Je [Var (Local 1),Var (Global 167)] (Branch F (Dloc 027099)));
  GetLocal 1 local1_1;
  Let b2 = M[008242];
  Let b3 = M[008243];
  if (Equal(local1_1,MakeHiLo(b2,b3))) {
    TraceOperation 027093 (Push (Con 6));
    PushStack 6;
    TraceOperation 027096 (Jump 027102);
    Jump: 027102
  } else {
    Jump: 027099
  }
LocOp 027099:
  TraceOperation 027099 (Push (Con 8));
  PushStack 8;
  Jump: 027102
LocOp 027102:
  TraceOperation 027102 (Store (Con 203) (Var Sp));
  PopStack popped1;
  SetByte 008282 HiByte(popped1);
  SetByte 008283 LoByte(popped1);
  TraceOperation 027105 (Store (Con 201) (Var (Global 170)));
  Let b2 = M[008248];
  Let b3 = M[008249];
  SetByte 008278 b2;
  SetByte 008279 b3;
  TraceOperation 027108 (Store (Con 202) (Var (Global 171)));
  Let b4 = M[008250];
  Let b5 = M[008251];
  SetByte 008280 b4;
  SetByte 008281 b5;
  TraceOperation 027111 (Call (Floc 025378) [Con 0,Con 0] Sp);
  PushFrame;
  PushReturnAddress 027111;
  SetLocal 1 0;
  SetLocal 2 0;
  MakeRoutineFrame 3;
  SetLocal 3 -1;
  Jump: 025385
LocReturn 027111:
  PushStack call_result;
  TraceOperation 027118 (Store (Con 205) (Con 1));
  SetByte 008286 0;
  SetByte 008287 1;
  TraceOperation 027121 (Jump 027130);
  Jump: 027130
LocOp 027124:
  TraceOperation 027124 (Jz (Var (Local 2)) (Branch T (Dloc 027130)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    Jump: 027130
  } else {
    TraceOperation 027127 (Print_paddr (Var (Global 158)));
    Let b2 = M[008224];
    Let b3 = M[008225];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 027129 New_line;
    GamePrint "\n";
    Jump: 027130
  }
LocOp 027130:
  TraceOperation 027130 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027133 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027136 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 027137:
  TraceOperation 027137 (Jz (Var (Local 5)) (Branch F (Dloc 027200)));
  GetLocal 5 local5_1;
  if (IsZero(local5_1)) {
    TraceOperation 027141 (Jz (Var (Local 8)) (Branch T (Dloc 027200)));
    GetLocal 8 local8_2;
    if (IsZero(local8_2)) {
      Jump: 027200
    } else {
      TraceOperation 027144 (Jz (Var (Local 2)) (Branch T (Dloc 027193)));
      GetLocal 2 local2_3;
      if (IsZero(local2_3)) {
        Jump: 027193
      } else {
        TraceOperation 027147 (Store (Con 189) (Var (Local 6)));
        GetLocal 6 local6_4;
        SetByte 008254 HiByte(local6_4);
        SetByte 008255 LoByte(local6_4);
        TraceOperation 027150 (Jz (Var (Global 85)) (Branch F (Dloc 027164)));
        Let b5 = M[008078];
        Let b6 = M[008079];
        if (IsZero(MakeHiLo(b5,b6))) {
          TraceOperation 027153 (Je [Var (Global 203),Con 15] (Branch T (Dloc 027164)));
          Let b7 = M[008314];
          Let b8 = M[008315];
          if (Equal(MakeHiLo(b7,b8),15)) {
            Jump: 027164
          } else {
            TraceOperation 027157 (Je [Var (Global 203),Con 177,Con 174,Con 178] (Branch F (Dloc 027190)));
            Let b9 = M[008314];
            Let b10 = M[008315];
            if (LogOr(LogOr(Equal(MakeHiLo(b9,b10),177),Equal(MakeHiLo(b9,b10),174)),Equal(MakeHiLo(b9,b10),178))) {
              Jump: 027164
            } else {
              Jump: 027190
            }
          }
        } else {
          Jump: 027164
        }
      }
    }
  } else {
    Jump: 027200
  }
LocOp 027164:
  TraceOperation 027164 (Call (Floc 027780) [Con 46,Var (Local 1)] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 027164;
  SetLocal 1 46;
  SetLocal 2 local1_1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 027787
LocReturn 027164:
  PushStack call_result;
  TraceOperation 027171 (Store (Con 171) (Var (Global 171)));
  Let b1 = M[008250];
  Let b2 = M[008251];
  SetByte 008218 b1;
  SetByte 008219 b2;
  TraceOperation 027174 (Store (Con 170) (Var (Global 170)));
  Let b3 = M[008248];
  Let b4 = M[008249];
  SetByte 008216 b3;
  SetByte 008217 b4;
  TraceOperation 027177 (Store (Con 169) (Var (Global 168)));
  Let b5 = M[008244];
  Let b6 = M[008245];
  SetByte 008214 b5;
  SetByte 008215 b6;
  TraceOperation 027180 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027183 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027186 (Store (Con 184) (Con 0));
  SetByte 008244 0;
  SetByte 008245 0;
  TraceOperation 027189 Rtrue;
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 027190:
  TraceOperation 027190 (Print_paddr (Var (Global 56)));
  Let b1 = M[008020];
  Let b2 = M[008021];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 027192 New_line;
  GamePrint "\n";
  Jump: 027193
LocOp 027193:
  TraceOperation 027193 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027196 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027199 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 027200:
  TraceOperation 027200 (Jz (Var (Local 5)) (Branch F (Dloc 027209)));
  GetLocal 5 local5_1;
  if (IsZero(local5_1)) {
    TraceOperation 027203 (Store (Con 8) (Con 1));
    SetLocal 8 1;
    TraceOperation 027206 (Jump 026812);
    Jump: 026812
  } else {
    Jump: 027209
  }
LocOp 027209:
  TraceOperation 027209 (Store (Con 189) (Var (Local 6)));
  GetLocal 6 local6_1;
  SetByte 008254 HiByte(local6_1);
  SetByte 008255 LoByte(local6_1);
  TraceOperation 027212 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027215 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027218 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 027220:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 027227
LocOp 027227:
  TraceOperation 027227 (Store (Con 172) (Con 1));
  SetByte 008220 0;
  SetByte 008221 1;
  TraceOperation 027230 (Store (Con 189) (Con -1));
  SetByte 008254 255;
  SetByte 008255 255;
  TraceOperation 027235 (Store (Con 216) (Var (Local 1)));
  GetLocal 1 local1_1;
  SetByte 008308 HiByte(local1_1);
  SetByte 008309 LoByte(local1_1);
  TraceOperation 027238 (Store (Con 187) (Var (Global 155)));
  Let b2 = M[008218];
  Let b3 = M[008219];
  SetByte 008250 b2;
  SetByte 008251 b3;
  TraceOperation 027241 (Store (Con 186) (Var (Global 154)));
  Let b4 = M[008216];
  Let b5 = M[008217];
  SetByte 008248 b4;
  SetByte 008249 b5;
  TraceOperation 027244 (Storew (Var (Local 1)) (Var (Global 162)) (Con 0));
  GetLocal 1 local1_6;
  Let b7 = M[008232];
  Let b8 = M[008233];
  SetByte Offset(Address(local1_6),Mul(2,MakeHiLo(b7,b8))) 0;
  SetByte Offset(Offset(Address(local1_6),Mul(2,MakeHiLo(b7,b8))),1) 0;
  TraceOperation 027249 (Get_child (Con 217) (Local 2) (Branch T (Dloc 027253)));
  Let b9 = M[002710];
  SetLocal 2 Widen(b9);
  if (IsZero(Widen(b9))) {
    Jump: 027253
  } else {
    Jump: 027253
  }
LocOp 027253:
  TraceOperation 027253 (Jz (Var (Local 2)) (Branch F (Dloc 027259)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    TraceOperation 027256 (Jump 027274);
    Jump: 027274
  } else {
    Jump: 027259
  }
LocOp 027259:
  TraceOperation 027259 (Call (Floc 027672) [Var (Local 2),Var (Local 1),Con 1] Sp);
  GetLocal 2 local2_1;
  GetLocal 1 local1_2;
  PushFrame;
  PushReturnAddress 027259;
  SetLocal 1 local2_1;
  SetLocal 2 local1_2;
  SetLocal 3 1;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 027683
LocReturn 027259:
  PushStack call_result;
  TraceOperation 027267 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 027271)));
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Offset(000751,Mul(local2_1,9)),5)];
  SetLocal 2 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 027271
  } else {
    Jump: 027271
  }
LocOp 027271:
  TraceOperation 027271 (Jump 027253);
  Jump: 027253
LocOp 027274:
  TraceOperation 027274 (Call (Floc 027620) [Con 219,Con 1,Con 1] Sp);
  PushFrame;
  PushReturnAddress 027274;
  SetLocal 1 219;
  SetLocal 2 1;
  SetLocal 3 1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 027629
LocReturn 027274:
  PushStack call_result;
  TraceOperation 027282 (Call (Floc 027672) [Con 217,Var (Local 1),Con 0] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 027282;
  SetLocal 1 217;
  SetLocal 2 local1_1;
  SetLocal 3 0;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 027683
LocReturn 027282:
  PushStack call_result;
  TraceOperation 027290 (Loadw (Var (Local 1)) (Var (Global 162)) (Local 3));
  GetLocal 1 local1_1;
  Let b2 = M[008232];
  Let b3 = M[008233];
  Let b4 = M[Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3)))];
  Let b5 = M[Offset(Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3))),1)];
  SetLocal 3 MakeHiLo(b4,b5);
  TraceOperation 027294 (Je [Var (Local 3),Con 1] (Branch F (Dloc 027302)));
  GetLocal 3 local3_6;
  if (Equal(local3_6,1)) {
    TraceOperation 027298 (Loadw (Var (Local 1)) (Con 1) (Global 157));
    GetLocal 1 local1_7;
    Let b8 = M[Offset(Address(local1_7),2)];
    Let b9 = M[Offset(Offset(Address(local1_7),2),1)];
    SetByte 008222 b8;
    SetByte 008223 b9;
    Jump: 027302
  } else {
    Jump: 027302
  }
LocOp 027302:
  TraceOperation 027302 (Store (Con 172) (Con 0));
  SetByte 008220 0;
  SetByte 008221 0;
  TraceOperation 027305 (Store (Con 187) (Con 0));
  SetByte 008250 0;
  SetByte 008251 0;
  TraceOperation 027308 (Store (Con 186) (Con 0));
  SetByte 008248 0;
  SetByte 008249 0;
  TraceOperation 027311 (Ret (Var (Local 3)));
  GetLocal 3 local3_1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult local3_1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 027314:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 027325
LocOp 027325:
  TraceOperation 027325 (Store (Con 5) (Var (Local 2)));
  GetLocal 2 local2_1;
  SetLocal 5 local2_1;
  TraceOperation 027328 (Print "Which");
  GamePrint "Which";
  TraceOperation 027333 (Jz (Var (Global 189)) (Branch F (Dloc 027342)));
  Let b2 = M[008286];
  Let b3 = M[008287];
  if (IsZero(MakeHiLo(b2,b3))) {
    TraceOperation 027336 (Jz (Var (Global 188)) (Branch F (Dloc 027342)));
    Let b4 = M[008284];
    Let b5 = M[008285];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 027339 (Jz (Var (Global 205)) (Branch T (Dloc 027350)));
      Let b6 = M[008318];
      Let b7 = M[008319];
      if (IsZero(MakeHiLo(b6,b7))) {
        Jump: 027350
      } else {
        Jump: 027342
      }
    } else {
      Jump: 027342
    }
  } else {
    Jump: 027342
  }
LocOp 027342:
  TraceOperation 027342 (Print " ");
  GamePrint " ";
  TraceOperation 027345 (Print_addr (Var (Global 171)));
  Let b1 = M[008250];
  Let b2 = M[008251];
  GamePrint GetText(Address(MakeHiLo(b1,b2)));
  TraceOperation 027347 (Jump 027373);
  Jump: 027373
LocOp 027350:
  TraceOperation 027350 (Je [Var (Local 3),Var (Global 167)] (Branch F (Dloc 027365)));
  GetLocal 3 local3_1;
  Let b2 = M[008242];
  Let b3 = M[008243];
  if (Equal(local3_1,MakeHiLo(b2,b3))) {
    TraceOperation 027354 (Call (Floc 025538) [Con 6,Con 7,Con 0] Sp);
    PushFrame;
    PushReturnAddress 027354;
    SetLocal 1 6;
    SetLocal 2 7;
    SetLocal 3 0;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 025547
  } else {
    Jump: 027365
  }
LocReturn 027354:
  PushStack call_result;
  TraceOperation 027362 (Jump 027373);
  Jump: 027373
LocOp 027365:
  TraceOperation 027365 (Call (Floc 025538) [Con 8,Con 9,Con 0] Sp);
  PushFrame;
  PushReturnAddress 027365;
  SetLocal 1 8;
  SetLocal 2 9;
  SetLocal 3 0;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 025547
LocReturn 027365:
  PushStack call_result;
  Jump: 027373
LocOp 027373:
  TraceOperation 027373 (Print " do you mean, ");
  GamePrint " do you mean, ";
  Jump: 027382
LocOp 027382:
  TraceOperation 027382 (Inc (Con 1));
  GetLocal 1 local1_1;
  SetLocal 1 Add(local1_1,1);
  TraceOperation 027384 (Loadw (Var (Local 3)) (Var (Local 1)) (Local 4));
  GetLocal 3 local3_2;
  GetLocal 1 local1_3;
  Let b4 = M[Offset(Address(local3_2),Mul(2,local1_3))];
  Let b5 = M[Offset(Offset(Address(local3_2),Mul(2,local1_3)),1)];
  SetLocal 4 MakeHiLo(b4,b5);
  TraceOperation 027388 (Test_attr (Var (Local 4)) (Con 31) (Branch T (Dloc 027395)));
  GetLocal 4 local4_6;
  Let b7 = M[Offset(Offset(000751,Mul(local4_6,9)),3)];
  if (TestBit(b7,0)) {
    Jump: 027395
  } else {
    TraceOperation 027392 (Print "the ");
    GamePrint "the ";
    Jump: 027395
  }
LocOp 027395:
  TraceOperation 027395 (Print_obj (Var (Local 4)));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Offset(000751,Mul(local4_1,9)),7)];
  Let b3 = M[Offset(Offset(Offset(000751,Mul(local4_1,9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 027397 (Je [Var (Local 2),Con 2] (Branch F (Dloc 027416)));
  GetLocal 2 local2_6;
  if (Equal(local2_6,2)) {
    TraceOperation 027401 (Je [Var (Local 5),Con 2] (Branch T (Dloc 027408)));
    GetLocal 5 local5_7;
    if (Equal(local5_7,2)) {
      Jump: 027408
    } else {
      TraceOperation 027405 (Print ",");
      GamePrint ",";
      Jump: 027408
    }
  } else {
    Jump: 027416
  }
LocOp 027408:
  TraceOperation 027408 (Print " or ");
  GamePrint " or ";
  TraceOperation 027413 (Jump 027423);
  Jump: 027423
LocOp 027416:
  TraceOperation 027416 (Jg (Var (Local 2)) (Con 2) (Branch F (Dloc 027423)));
  GetLocal 2 local2_1;
  if (GreaterThan(local2_1,2)) {
    TraceOperation 027420 (Print ", ");
    GamePrint ", ";
    Jump: 027423
  } else {
    Jump: 027423
  }
LocOp 027423:
  TraceOperation 027423 (Dec_chk (Con 2) (Con 1) (Branch F (Dloc 027382)));
  GetLocal 2 local2_1;
  if (LessThanEqual(local2_1,1)) {
    SetLocal 2 Sub(local2_1,1);
    TraceOperation 027428 (Print_ret "?");
    GamePrint "?\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    SetLocal 2 Sub(local2_1,1);
    Jump: 027382
  }
--------------------------------------------------
LocRoutine 027432:
  MakeRoutineFrame 8;
  if (LessThanByte(num_actuals,8)) {
    SetLocal 8 0;
    if (LessThanByte(num_actuals,7)) {
      SetLocal 7 0;
      if (LessThanByte(num_actuals,6)) {
        SetLocal 6 0;
        if (LessThanByte(num_actuals,5)) {
          SetLocal 5 0;
          if (LessThanByte(num_actuals,4)) {
            SetLocal 4 0;
            if (LessThanByte(num_actuals,3)) {
              SetLocal 3 0;
              if (LessThanByte(num_actuals,2)) {
                SetLocal 2 0;
                if (LessThanByte(num_actuals,1)) {
                  SetLocal 1 0;
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 027449
LocOp 027449:
  TraceOperation 027449 (Loadw (Var (Local 1)) (Var (Global 162)) (Local 2));
  GetLocal 1 local1_1;
  Let b2 = M[008232];
  Let b3 = M[008233];
  Let b4 = M[Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3)))];
  Let b5 = M[Offset(Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3))),1)];
  SetLocal 2 MakeHiLo(b4,b5);
  TraceOperation 027453 (Store (Con 7) (Var (Global 173)));
  Let b6 = M[008254];
  Let b7 = M[008255];
  SetLocal 7 MakeHiLo(b6,b7);
  TraceOperation 027456 (Get_prop_addr (Var (Global 0)) (Con 24) (Local 3));
  Let b8 = M[007908];
  Let b9 = M[007909];
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),7)];
  Let b11 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),7),1)];
  Let b12 = M[Address(MakeHiLo(b10,b11))];
  Let loop_var13 = DeAddress(Offset(Address(MakeHiLo(b10,b11)),Add(Mul(2,Widen(b12)),1)));
  Label 14: {
    Let b15 = M[Address(loop_var13)];
    if (IsZeroByte(b15)) {
      SetLocal 3 0;
    } else {
      if (Equal(24,Widen(BwAnd(b15,31)))) {
        SetLocal 3 DeAddress(Offset(Address(loop_var13),1));
      } else {
        Assign loop_var13 = DeAddress(Offset(Offset(Address(loop_var13),1),Add(Widen(ShiftR(b15,5)),1)));
        Goto: Label 14
      }
    }
  }
  TraceOperation 027460 (Jz (Var (Local 3)) (Branch T (Dloc 027496)));
  GetLocal 3 local3_16;
  if (IsZero(local3_16)) {
    Jump: 027496
  } else {
    TraceOperation 027463 (Get_prop_len (Var (Local 3)) Sp);
    GetLocal 3 local3_17;
    if (IsZero(local3_17)) {
      PushStack 0;
    } else {
      Let b18 = M[Offset(Address(local3_17),-1)];
      PushStack Add(Widen(ShiftR(b18,5)),1);
    }
    TraceOperation 027466 (Sub (Var Sp) (Con 1) (Local 4));
    PopStack popped19;
    SetLocal 4 Sub(popped19,1);
    Jump: 027470
  }
LocOp 027470:
  TraceOperation 027470 (Loadb (Var (Local 3)) (Var (Local 5)) (Local 6));
  GetLocal 3 local3_1;
  GetLocal 5 local5_2;
  Let b3 = M[Offset(Address(local3_1),local5_2)];
  SetLocal 6 Widen(b3);
  TraceOperation 027474 (Call (Floc 028496) [Var (Local 6),Var (Local 1)] Sp);
  GetLocal 6 local6_4;
  GetLocal 1 local1_5;
  PushFrame;
  PushReturnAddress 027474;
  SetLocal 1 local6_4;
  SetLocal 2 local1_5;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 028505
LocReturn 027474:
  PushStack call_result;
  TraceOperation 027481 (Jz (Var Sp) (Branch T (Dloc 027491)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 027491
  } else {
    TraceOperation 027484 (Call (Floc 027780) [Var (Local 6),Var (Local 1)] Sp);
    GetLocal 6 local6_2;
    GetLocal 1 local1_3;
    PushFrame;
    PushReturnAddress 027484;
    SetLocal 1 local6_2;
    SetLocal 2 local1_3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 027787
  }
LocReturn 027484:
  PushStack call_result;
  Jump: 027491
LocOp 027491:
  TraceOperation 027491 (Inc_chk (Con 5) (Var (Local 4)) (Branch F (Dloc 027470)));
  GetLocal 5 local5_1;
  GetLocal 4 local4_2;
  SetLocal 5 Add(local5_1,1);
  if (GreaterThanEqual(local5_1,local4_2)) {
    Jump: 027496
  } else {
    Jump: 027470
  }
LocOp 027496:
  TraceOperation 027496 (Get_prop_addr (Var (Global 0)) (Con 25) (Local 3));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      SetLocal 3 0;
    } else {
      if (Equal(25,Widen(BwAnd(b8,31)))) {
        SetLocal 3 DeAddress(Offset(Address(loop_var6),1));
      } else {
        Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
        Goto: Label 7
      }
    }
  }
  TraceOperation 027500 (Jz (Var (Local 3)) (Branch T (Dloc 027591)));
  GetLocal 3 local3_9;
  if (IsZero(local3_9)) {
    Jump: 027591
  } else {
    TraceOperation 027504 (Get_prop_len (Var (Local 3)) Sp);
    GetLocal 3 local3_10;
    if (IsZero(local3_10)) {
      PushStack 0;
    } else {
      Let b11 = M[Offset(Address(local3_10),-1)];
      PushStack Add(Widen(ShiftR(b11,5)),1);
    }
    TraceOperation 027507 (Div (Var Sp) (Con 4) Sp);
    PopStack popped12;
    PushStack Div(popped12,4);
    TraceOperation 027511 (Sub (Var Sp) (Con 1) (Local 4));
    PopStack popped13;
    SetLocal 4 Sub(popped13,1);
    TraceOperation 027515 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    Jump: 027518
  }
LocOp 027518:
  TraceOperation 027518 (Mul (Var (Local 5)) (Con 2) Sp);
  GetLocal 5 local5_1;
  PushStack Mul(local5_1,2);
  TraceOperation 027522 (Loadw (Var (Local 3)) (Var Sp) Sp);
  GetLocal 3 local3_2;
  PopStack popped3;
  Let b4 = M[Offset(Address(local3_2),Mul(2,popped3))];
  Let b5 = M[Offset(Offset(Address(local3_2),Mul(2,popped3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 027526 (Je [Var (Global 171),Var Sp] (Branch F (Dloc 027586)));
  Let b6 = M[008250];
  Let b7 = M[008251];
  PopStack popped8;
  if (Equal(MakeHiLo(b6,b7),popped8)) {
    TraceOperation 027530 (Store (Con 206) (Var (Global 0)));
    Let b9 = M[007908];
    Let b10 = M[007909];
    SetByte 008288 b9;
    SetByte 008289 b10;
    TraceOperation 027533 (Mul (Var (Local 5)) (Con 2) Sp);
    GetLocal 5 local5_11;
    PushStack Mul(local5_11,2);
    TraceOperation 027537 (Add (Var Sp) (Con 1) Sp);
    PopStack popped12;
    PushStack Add(popped12,1);
    TraceOperation 027541 (Loadw (Var (Local 3)) (Var Sp) Sp);
    GetLocal 3 local3_13;
    PopStack popped14;
    Let b15 = M[Offset(Address(local3_13),Mul(2,popped14))];
    Let b16 = M[Offset(Offset(Address(local3_13),Mul(2,popped14)),1)];
    PushStack MakeHiLo(b15,b16);
    TraceOperation 027545 (Put_prop (Con 48) (Con 29) (Var Sp));
    PopStack popped17;
    Let b18 = M[001190];
    Let b19 = M[001191];
    Let b20 = M[Address(MakeHiLo(b18,b19))];
    Let loop_var21 = DeAddress(Offset(Address(MakeHiLo(b18,b19)),Add(Mul(2,Widen(b20)),1)));
    Label 22: {
      Let b23 = M[Address(loop_var21)];
      if (IsZeroByte(b23)) {
        Error: ("putProp",29)
      } else {
        if (Equal(29,Widen(BwAnd(b23,31)))) {
          if (Equal(Add(Widen(ShiftR(b23,5)),1),2)) {
            SetByte Offset(Address(loop_var21),1) HiByte(popped17);
            SetByte Offset(Offset(Address(loop_var21),1),1) LoByte(popped17);
          } else {
            SetByte Offset(Address(loop_var21),1) LoByte(popped17);
          }
        } else {
          Assign loop_var21 = DeAddress(Offset(Offset(Address(loop_var21),1),Add(Widen(ShiftR(b23,5)),1)));
          Goto: Label 22
        }
      }
    }
    TraceOperation 027550 (Get_prop_addr (Con 48) (Con 29) Sp);
    Let b24 = M[001190];
    Let b25 = M[001191];
    Let b26 = M[Address(MakeHiLo(b24,b25))];
    Let loop_var27 = DeAddress(Offset(Address(MakeHiLo(b24,b25)),Add(Mul(2,Widen(b26)),1)));
    Label 28: {
      Let b29 = M[Address(loop_var27)];
      if (IsZeroByte(b29)) {
        PushStack 0;
      } else {
        if (Equal(29,Widen(BwAnd(b29,31)))) {
          PushStack DeAddress(Offset(Address(loop_var27),1));
        } else {
          Assign loop_var27 = DeAddress(Offset(Offset(Address(loop_var27),1),Add(Widen(ShiftR(b29,5)),1)));
          Goto: Label 28
        }
      }
    }
    TraceOperation 027554 (Sub (Var Sp) (Con 5) (Local 8));
    PopStack popped30;
    SetLocal 8 Sub(popped30,5);
    TraceOperation 027558 (Loadw (Var (Global 171)) (Con 0) Sp);
    Let b31 = M[008250];
    Let b32 = M[008251];
    Let b33 = M[Offset(Address(MakeHiLo(b31,b32)),0)];
    Let b34 = M[Offset(Offset(Address(MakeHiLo(b31,b32)),0),1)];
    PushStack MakeHiLo(b33,b34);
    TraceOperation 027562 (Storew (Var (Local 8)) (Con 0) (Var Sp));
    GetLocal 8 local8_35;
    PopStack popped36;
    SetByte Offset(Address(local8_35),0) HiByte(popped36);
    SetByte Offset(Offset(Address(local8_35),0),1) LoByte(popped36);
    TraceOperation 027567 (Loadw (Var (Global 171)) (Con 1) Sp);
    Let b37 = M[008250];
    Let b38 = M[008251];
    Let b39 = M[Offset(Address(MakeHiLo(b37,b38)),2)];
    Let b40 = M[Offset(Offset(Address(MakeHiLo(b37,b38)),2),1)];
    PushStack MakeHiLo(b39,b40);
    TraceOperation 027571 (Storew (Var (Local 8)) (Con 1) (Var Sp));
    GetLocal 8 local8_41;
    PopStack popped42;
    SetByte Offset(Address(local8_41),2) HiByte(popped42);
    SetByte Offset(Offset(Address(local8_41),2),1) LoByte(popped42);
    TraceOperation 027576 (Call (Floc 027780) [Con 48,Var (Local 1)] Sp);
    GetLocal 1 local1_43;
    PushFrame;
    PushReturnAddress 027576;
    SetLocal 1 48;
    SetLocal 2 local1_43;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 027787
  } else {
    Jump: 027586
  }
LocReturn 027576:
  PushStack call_result;
  TraceOperation 027583 (Jump 027591);
  Jump: 027591
LocOp 027586:
  TraceOperation 027586 (Inc_chk (Con 5) (Var (Local 4)) (Branch F (Dloc 027518)));
  GetLocal 5 local5_1;
  GetLocal 4 local4_2;
  SetLocal 5 Add(local5_1,1);
  if (GreaterThanEqual(local5_1,local4_2)) {
    Jump: 027591
  } else {
    Jump: 027518
  }
LocOp 027591:
  TraceOperation 027591 (Loadw (Var (Local 1)) (Var (Global 162)) Sp);
  GetLocal 1 local1_1;
  Let b2 = M[008232];
  Let b3 = M[008233];
  Let b4 = M[Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3)))];
  Let b5 = M[Offset(Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3))),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 027595 (Je [Var Sp,Var (Local 2)] (Branch F Dfalse));
  PopStack popped6;
  GetLocal 2 local2_7;
  if (Equal(popped6,local2_7)) {
    TraceOperation 027599 (Store (Con 189) (Con -1));
    SetByte 008254 255;
    SetByte 008255 255;
    TraceOperation 027604 (Store (Con 216) (Var (Local 1)));
    GetLocal 1 local1_8;
    SetByte 008308 HiByte(local1_8);
    SetByte 008309 LoByte(local1_8);
    TraceOperation 027607 (Call (Floc 027620) [Con 169,Con 1,Con 1] Sp);
    PushFrame;
    PushReturnAddress 027607;
    SetLocal 1 169;
    SetLocal 2 1;
    SetLocal 3 1;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 027629
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
LocReturn 027607:
  PushStack call_result;
  TraceOperation 027615 (Store (Con 189) (Var (Local 7)));
  GetLocal 7 local7_1;
  SetByte 008254 HiByte(local7_1);
  SetByte 008255 LoByte(local7_1);
  TraceOperation 027618 (Ret (Var (Global 173)));
  Let b2 = M[008254];
  Let b3 = M[008255];
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult MakeHiLo(b2,b3);
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 027620:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 027629
LocOp 027629:
  TraceOperation 027629 (Add (Var (Local 2)) (Var (Local 3)) Sp);
  GetLocal 2 local2_1;
  GetLocal 3 local3_2;
  PushStack Add(local2_1,local3_2);
  TraceOperation 027633 (Test (Var (Global 173)) (Var Sp) (Branch F (Dloc 027646)));
  Let b3 = M[008254];
  Let b4 = M[008255];
  PopStack popped5;
  if (Equal(And(MakeHiLo(b3,b4),popped5),popped5)) {
    TraceOperation 027637 (Call (Floc 027672) [Var (Local 1),Var (Global 200),Con 1] Sp);
    GetLocal 1 local1_6;
    Let b7 = M[008308];
    Let b8 = M[008309];
    PushFrame;
    PushReturnAddress 027637;
    SetLocal 1 local1_6;
    SetLocal 2 MakeHiLo(b7,b8);
    SetLocal 3 1;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 027683
  } else {
    Jump: 027646
  }
LocReturn 027637:
  PushStack call_result;
  TraceOperation 027645 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 027646:
  TraceOperation 027646 (Test (Var (Global 173)) (Var (Local 2)) (Branch F (Dloc 027659)));
  Let b1 = M[008254];
  Let b2 = M[008255];
  GetLocal 2 local2_3;
  if (Equal(And(MakeHiLo(b1,b2),local2_3),local2_3)) {
    TraceOperation 027650 (Call (Floc 027672) [Var (Local 1),Var (Global 200),Con 0] Sp);
    GetLocal 1 local1_4;
    Let b5 = M[008308];
    Let b6 = M[008309];
    PushFrame;
    PushReturnAddress 027650;
    SetLocal 1 local1_4;
    SetLocal 2 MakeHiLo(b5,b6);
    SetLocal 3 0;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 027683
  } else {
    Jump: 027659
  }
LocReturn 027650:
  PushStack call_result;
  TraceOperation 027658 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 027659:
  TraceOperation 027659 (Test (Var (Global 173)) (Var (Local 3)) (Branch F Dtrue));
  Let b1 = M[008254];
  Let b2 = M[008255];
  GetLocal 3 local3_3;
  if (Equal(And(MakeHiLo(b1,b2),local3_3),local3_3)) {
    TraceOperation 027663 (Call (Floc 027672) [Var (Local 1),Var (Global 200),Con 2] Sp);
    GetLocal 1 local1_4;
    Let b5 = M[008308];
    Let b6 = M[008309];
    PushFrame;
    PushReturnAddress 027663;
    SetLocal 1 local1_4;
    SetLocal 2 MakeHiLo(b5,b6);
    SetLocal 3 2;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 027683
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  }
LocReturn 027663:
  PushStack call_result;
  TraceOperation 027671 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 027672:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 027683
LocOp 027683:
  TraceOperation 027683 (Get_child (Var (Local 1)) (Local 1) (Branch F Dfalse));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),6)];
  SetLocal 1 Widen(b2);
  if (IsZero(Widen(b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027687
  }
LocOp 027687:
  TraceOperation 027687 (Je [Var (Local 3),Con 2] (Branch T (Dloc 027715)));
  GetLocal 3 local3_1;
  if (Equal(local3_1,2)) {
    Jump: 027715
  } else {
    TraceOperation 027691 (Get_prop_addr (Var (Local 1)) (Con 31) Sp);
    GetLocal 1 local1_2;
    Let b3 = M[Offset(Offset(000751,Mul(local1_2,9)),7)];
    Let b4 = M[Offset(Offset(Offset(000751,Mul(local1_2,9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
    Label 7: {
      Let b8 = M[Address(loop_var6)];
      if (IsZeroByte(b8)) {
        PushStack 0;
      } else {
        if (Equal(31,Widen(BwAnd(b8,31)))) {
          PushStack DeAddress(Offset(Address(loop_var6),1));
        } else {
          Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
          Goto: Label 7
        }
      }
    }
    TraceOperation 027695 (Jz (Var Sp) (Branch T (Dloc 027715)));
    PopStack popped9;
    if (IsZero(popped9)) {
      Jump: 027715
    } else {
      TraceOperation 027698 (Call (Floc 028496) [Var (Local 1),Var (Local 2)] Sp);
      GetLocal 1 local1_10;
      GetLocal 2 local2_11;
      PushFrame;
      PushReturnAddress 027698;
      SetLocal 1 local1_10;
      SetLocal 2 local2_11;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 028505
    }
  }
LocReturn 027698:
  PushStack call_result;
  TraceOperation 027705 (Jz (Var Sp) (Branch T (Dloc 027715)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 027715
  } else {
    TraceOperation 027708 (Call (Floc 027780) [Var (Local 1),Var (Local 2)] Sp);
    GetLocal 1 local1_2;
    GetLocal 2 local2_3;
    PushFrame;
    PushReturnAddress 027708;
    SetLocal 1 local1_2;
    SetLocal 2 local2_3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 027787
  }
LocReturn 027708:
  PushStack call_result;
  Jump: 027715
LocOp 027715:
  TraceOperation 027715 (Je [Var (Local 3),Con 0] (Branch F (Dloc 027727)));
  GetLocal 3 local3_1;
  if (Equal(local3_1,0)) {
    TraceOperation 027719 (Test_attr (Var (Local 1)) (Con 18) (Branch T (Dloc 027727)));
    GetLocal 1 local1_2;
    Let b3 = M[Offset(Offset(000751,Mul(local1_2,9)),2)];
    if (TestBit(b3,5)) {
      Jump: 027727
    } else {
      TraceOperation 027723 (Test_attr (Var (Local 1)) (Con 8) (Branch F (Dloc 027773)));
      GetLocal 1 local1_4;
      Let b5 = M[Offset(Offset(000751,Mul(local1_4,9)),1)];
      if (TestBit(b5,7)) {
        Jump: 027727
      } else {
        Jump: 027773
      }
    }
  } else {
    Jump: 027727
  }
LocOp 027727:
  TraceOperation 027727 (Get_child (Var (Local 1)) (Local 5) (Branch F (Dloc 027773)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),6)];
  SetLocal 5 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 027773
  } else {
    TraceOperation 027731 (Test_attr (Var (Local 1)) (Con 23) (Branch T (Dloc 027742)));
    GetLocal 1 local1_3;
    Let b4 = M[Offset(Offset(000751,Mul(local1_3,9)),2)];
    if (TestBit(b4,0)) {
      Jump: 027742
    } else {
      TraceOperation 027735 (Test_attr (Var (Local 1)) (Con 17) (Branch T (Dloc 027742)));
      GetLocal 1 local1_5;
      Let b6 = M[Offset(Offset(000751,Mul(local1_5,9)),2)];
      if (TestBit(b6,6)) {
        Jump: 027742
      } else {
        TraceOperation 027739 (Jz (Var (Global 156)) (Branch T (Dloc 027773)));
        Let b7 = M[008220];
        Let b8 = M[008221];
        if (IsZero(MakeHiLo(b7,b8))) {
          Jump: 027773
        } else {
          Jump: 027742
        }
      }
    }
  }
LocOp 027742:
  TraceOperation 027742 (Test_attr (Var (Local 1)) (Con 8) (Branch F (Dloc 027752)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),1)];
  if (TestBit(b2,7)) {
    TraceOperation 027746 (Push (Con 1));
    PushStack 1;
    TraceOperation 027749 (Jump 027765);
    Jump: 027765
  } else {
    Jump: 027752
  }
LocOp 027752:
  TraceOperation 027752 (Test_attr (Var (Local 1)) (Con 18) (Branch F (Dloc 027762)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),2)];
  if (TestBit(b2,5)) {
    TraceOperation 027756 (Push (Con 1));
    PushStack 1;
    TraceOperation 027759 (Jump 027765);
    Jump: 027765
  } else {
    Jump: 027762
  }
LocOp 027762:
  TraceOperation 027762 (Push (Con 0));
  PushStack 0;
  Jump: 027765
LocOp 027765:
  TraceOperation 027765 (Call (Floc 027672) [Var (Local 1),Var (Local 2),Var Sp] (Local 4));
  GetLocal 1 local1_1;
  GetLocal 2 local2_2;
  PopStack popped3;
  PushFrame;
  PushReturnAddress 027765;
  SetLocal 1 local1_1;
  SetLocal 2 local2_2;
  SetLocal 3 popped3;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 027683
LocReturn 027765:
  SetLocal 4 call_result;
  Jump: 027773
LocOp 027773:
  TraceOperation 027773 (Get_sibling (Var (Local 1)) (Local 1) (Branch T (Dloc 027687)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),5)];
  SetLocal 1 Widen(b2);
  if (IsZero(Widen(b2))) {
    TraceOperation 027778 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 027687
  }
--------------------------------------------------
LocRoutine 027780:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 027787
LocOp 027787:
  TraceOperation 027787 (Loadw (Var (Local 2)) (Var (Global 162)) (Local 3));
  GetLocal 2 local2_1;
  Let b2 = M[008232];
  Let b3 = M[008233];
  Let b4 = M[Offset(Address(local2_1),Mul(2,MakeHiLo(b2,b3)))];
  Let b5 = M[Offset(Offset(Address(local2_1),Mul(2,MakeHiLo(b2,b3))),1)];
  SetLocal 3 MakeHiLo(b4,b5);
  TraceOperation 027791 (Add (Var (Local 3)) (Con 1) Sp);
  GetLocal 3 local3_6;
  PushStack Add(local3_6,1);
  TraceOperation 027795 (Storew (Var (Local 2)) (Var Sp) (Var (Local 1)));
  GetLocal 2 local2_7;
  PopStack popped8;
  GetLocal 1 local1_9;
  SetByte Offset(Address(local2_7),Mul(2,popped8)) HiByte(local1_9);
  SetByte Offset(Offset(Address(local2_7),Mul(2,popped8)),1) LoByte(local1_9);
  TraceOperation 027800 (Add (Var (Local 3)) (Con 1) Sp);
  GetLocal 3 local3_10;
  PushStack Add(local3_10,1);
  TraceOperation 027804 (Storew (Var (Local 2)) (Var (Global 162)) (Var Sp));
  GetLocal 2 local2_11;
  Let b12 = M[008232];
  Let b13 = M[008233];
  PopStack popped14;
  SetByte Offset(Address(local2_11),Mul(2,MakeHiLo(b12,b13))) HiByte(popped14);
  SetByte Offset(Offset(Address(local2_11),Mul(2,MakeHiLo(b12,b13))),1) LoByte(popped14);
  TraceOperation 027809 Rtrue;
  PopFrame;
  PopReturnAddress return_address_15;
  SetResult 1;
  JumpIndirect: (return) return_address_15
--------------------------------------------------
LocRoutine 027810:
  MakeRoutineFrame 0;
  Jump: 027811
LocOp 027811:
  TraceOperation 027811 (Loadb (Var (Global 198)) (Con 5) Sp);
  Let b1 = M[008304];
  Let b2 = M[008305];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),5)];
  PushStack Widen(b3);
  TraceOperation 027815 (Call (Floc 027838) [Var (Global 167),Var Sp] Sp);
  Let b4 = M[008242];
  Let b5 = M[008243];
  PopStack popped6;
  PushFrame;
  PushReturnAddress 027815;
  SetLocal 1 MakeHiLo(b4,b5);
  SetLocal 2 popped6;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 027849
LocReturn 027815:
  PushStack call_result;
  TraceOperation 027822 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 027825 (Loadb (Var (Global 198)) (Con 6) Sp);
    Let b3 = M[008304];
    Let b4 = M[008305];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),6)];
    PushStack Widen(b5);
    TraceOperation 027829 (Call (Floc 027838) [Var (Global 166),Var Sp] Sp);
    Let b6 = M[008240];
    Let b7 = M[008241];
    PopStack popped8;
    PushFrame;
    PushReturnAddress 027829;
    SetLocal 1 MakeHiLo(b6,b7);
    SetLocal 2 popped8;
    MakeRoutineFrame 5;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 027849
  }
LocReturn 027829:
  PushStack call_result;
  TraceOperation 027836 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 027838:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 027849
LocOp 027849:
  TraceOperation 027849 (Loadw (Var (Local 1)) (Var (Global 162)) (Local 3));
  GetLocal 1 local1_1;
  Let b2 = M[008232];
  Let b3 = M[008233];
  Let b4 = M[Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3)))];
  Let b5 = M[Offset(Offset(Address(local1_1),Mul(2,MakeHiLo(b2,b3))),1)];
  SetLocal 3 MakeHiLo(b4,b5);
  TraceOperation 027853 (Jz (Var (Local 3)) (Branch T Dtrue));
  GetLocal 3 local3_6;
  if (IsZero(local3_6)) {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    TraceOperation 027856 (Test (Var (Local 2)) (Con 2) (Branch T (Dloc 027864)));
    GetLocal 2 local2_8;
    if (Equal(And(local2_8,2),2)) {
      Jump: 027864
    } else {
      TraceOperation 027860 (Test (Var (Local 2)) (Con 8) (Branch F Dtrue));
      GetLocal 2 local2_9;
      if (Equal(And(local2_9,8),8)) {
        Jump: 027864
      } else {
        PopFrame;
        PopReturnAddress return_address_10;
        SetResult 1;
        JumpIndirect: (return) return_address_10
      }
    }
  }
LocOp 027864:
  TraceOperation 027864 (Dec_chk (Con 3) (Con 0) (Branch T Dtrue));
  GetLocal 3 local3_1;
  if (LessThanEqual(local3_1,0)) {
    SetLocal 3 Sub(local3_1,1);
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    SetLocal 3 Sub(local3_1,1);
    TraceOperation 027868 (Add (Var (Local 3)) (Con 1) Sp);
    GetLocal 3 local3_3;
    PushStack Add(local3_3,1);
    TraceOperation 027872 (Loadw (Var (Local 1)) (Var Sp) (Local 4));
    GetLocal 1 local1_4;
    PopStack popped5;
    Let b6 = M[Offset(Address(local1_4),Mul(2,popped5))];
    Let b7 = M[Offset(Offset(Address(local1_4),Mul(2,popped5)),1)];
    SetLocal 4 MakeHiLo(b6,b7);
    TraceOperation 027876 (Je [Var (Local 4),Con 47] (Branch F (Dloc 027896)));
    GetLocal 4 local4_8;
    if (Equal(local4_8,47)) {
      TraceOperation 027880 (Call (Floc 043298) [Var (Global 191)] Sp);
      Let b9 = M[008290];
      Let b10 = M[008291];
      PushFrame;
      PushReturnAddress 027880;
      SetLocal 1 MakeHiLo(b9,b10);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043303
    } else {
      Jump: 027896
    }
  }
LocReturn 027880:
  PushStack call_result;
  TraceOperation 027886 (Jz (Var Sp) (Branch F (Dloc 027893)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 027889 (Print_paddr (Var (Global 51)));
    Let b2 = M[008010];
    Let b3 = M[008011];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 027891 New_line;
    GamePrint "\n";
    TraceOperation 027892 Rfalse;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 027893
  }
LocOp 027893:
  TraceOperation 027893 (Store (Con 4) (Var (Global 191)));
  Let b1 = M[008290];
  Let b2 = M[008291];
  SetLocal 4 MakeHiLo(b1,b2);
  Jump: 027896
LocOp 027896:
  TraceOperation 027896 (Call (Floc 043468) [Var (Local 4)] Sp);
  GetLocal 4 local4_1;
  PushFrame;
  PushReturnAddress 027896;
  SetLocal 1 local4_1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 027896:
  PushStack call_result;
  TraceOperation 027902 (Jz (Var Sp) (Branch F (Dloc 027864)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 027906 (Je [Var (Local 4),Con 36,Con 157,Con 43] (Branch T (Dloc 027864)));
    GetLocal 4 local4_2;
    if (LogOr(LogOr(Equal(local4_2,36),Equal(local4_2,157)),Equal(local4_2,43))) {
      Jump: 027864
    } else {
      TraceOperation 027914 (Je [Var (Local 4),Con 8] (Branch F (Dloc 027922)));
      GetLocal 4 local4_3;
      if (Equal(local4_3,8)) {
        TraceOperation 027918 (Jz (Var (Global 66)) (Branch F (Dloc 027864)));
        Let b4 = M[008040];
        Let b5 = M[008041];
        if (IsZero(MakeHiLo(b4,b5))) {
          Jump: 027922
        } else {
          Jump: 027864
        }
      } else {
        Jump: 027922
      }
    }
  } else {
    Jump: 027864
  }
LocOp 027922:
  TraceOperation 027922 (Je [Var (Local 4),Con 4] (Branch F (Dloc 027933)));
  GetLocal 4 local4_1;
  if (Equal(local4_1,4)) {
    TraceOperation 027926 (Je [Var (Global 203),Con 134] (Branch F (Dloc 027933)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (Equal(MakeHiLo(b2,b3),134)) {
      TraceOperation 027930 (Jump 027864);
      Jump: 027864
    } else {
      Jump: 027933
    }
  } else {
    Jump: 027933
  }
LocOp 027933:
  TraceOperation 027933 (Store (Con 217) (Var (Local 4)));
  GetLocal 4 local4_1;
  SetByte 008310 HiByte(local4_1);
  SetByte 008311 LoByte(local4_1);
  TraceOperation 027936 (Test_attr (Var (Local 4)) (Con 21) (Branch F (Dloc 027946)));
  GetLocal 4 local4_2;
  Let b3 = M[Offset(Offset(000751,Mul(local4_2,9)),2)];
  if (TestBit(b3,2)) {
    TraceOperation 027940 (Store (Con 5) (Con 1));
    SetLocal 5 1;
    TraceOperation 027943 (Jump 027979);
    Jump: 027979
  } else {
    Jump: 027946
  }
LocOp 027946:
  TraceOperation 027946 (Je [Var (Global 195),Con 31] (Branch T (Dloc 027956)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),31)) {
    Jump: 027956
  } else {
    TraceOperation 027950 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    TraceOperation 027953 (Jump 027979);
    Jump: 027979
  }
LocOp 027956:
  TraceOperation 027956 (Test (Var (Local 2)) (Con 8) (Branch F (Dloc 027976)));
  GetLocal 2 local2_1;
  if (Equal(And(local2_1,8),8)) {
    TraceOperation 027960 (Call (Floc 040994) [Con 0] Sp);
    PushFrame;
    PushReturnAddress 027960;
    SetLocal 1 0;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 041003
  } else {
    Jump: 027976
  }
LocReturn 027960:
  PushStack call_result;
  TraceOperation 027966 (Je [Var Sp,Con 1] (Branch F (Dloc 027976)));
  PopStack popped1;
  if (Equal(popped1,1)) {
    TraceOperation 027970 (Store (Con 5) (Con 0));
    SetLocal 5 0;
    TraceOperation 027973 (Jump 027979);
    Jump: 027979
  } else {
    Jump: 027976
  }
LocOp 027976:
  TraceOperation 027976 (Store (Con 5) (Con 1));
  SetLocal 5 1;
  Jump: 027979
LocOp 027979:
  TraceOperation 027979 (Jz (Var (Local 5)) (Branch T (Dloc 028079)));
  GetLocal 5 local5_1;
  if (IsZero(local5_1)) {
    Jump: 028079
  } else {
    TraceOperation 027983 (Test (Var (Local 2)) (Con 2) (Branch F (Dloc 028079)));
    GetLocal 2 local2_2;
    if (Equal(And(local2_2,2),2)) {
      TraceOperation 027988 (Loadw (Var (Local 1)) (Var (Global 162)) Sp);
      GetLocal 1 local1_3;
      Let b4 = M[008232];
      Let b5 = M[008233];
      Let b6 = M[Offset(Address(local1_3),Mul(2,MakeHiLo(b4,b5)))];
      Let b7 = M[Offset(Offset(Address(local1_3),Mul(2,MakeHiLo(b4,b5))),1)];
      PushStack MakeHiLo(b6,b7);
      TraceOperation 027992 (Jl (Con 1) (Var Sp) (Branch F (Dloc 028013)));
      PopStack popped8;
      if (LessThan(1,popped8)) {
        TraceOperation 027996 (Print_paddr (Var (Global 24)));
        Let b9 = M[007956];
        Let b10 = M[007957];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
        TraceOperation 027998 (Print " all those things!");
        GamePrint " all those things!";
        TraceOperation 028011 New_line;
        GamePrint "\n";
        TraceOperation 028012 Rfalse;
        PopFrame;
        PopReturnAddress return_address_11;
        SetResult 0;
        JumpIndirect: (return) return_address_11
      } else {
        Jump: 028013
      }
    } else {
      Jump: 028079
    }
  }
LocOp 028013:
  TraceOperation 028013 (Je [Var (Local 4),Con 46] (Branch F (Dloc 028028)));
  GetLocal 4 local4_1;
  if (Equal(local4_1,46)) {
    TraceOperation 028017 (Print "You can't see that here!");
    GamePrint "You can't see that here!";
    TraceOperation 028026 New_line;
    GamePrint "\n";
    TraceOperation 028027 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 028028
  }
LocOp 028028:
  TraceOperation 028028 (Je [Var (Global 195),Con 31] (Branch F (Dloc 028037)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),31)) {
    TraceOperation 028032 (Print_paddr (Var (Global 24)));
    Let b3 = M[007956];
    Let b4 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 028034 (Jump 028064);
    Jump: 028064
  } else {
    Jump: 028037
  }
LocOp 028037:
  TraceOperation 028037 (Print "It doesn't look like");
  GamePrint "It doesn't look like";
  TraceOperation 028048 (Call (Floc 043738) [Var (Global 195),Con 1] Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  PushFrame;
  PushReturnAddress 028048;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 028048:
  PushStack call_result;
  TraceOperation 028055 (Print " is holding");
  GamePrint " is holding";
  Jump: 028064
LocOp 028064:
  TraceOperation 028064 (Call (Floc 043738) [Var (Local 4),Con 1] Sp);
  GetLocal 4 local4_1;
  PushFrame;
  PushReturnAddress 028064;
  SetLocal 1 local4_1;
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 028064:
  PushStack call_result;
  TraceOperation 028071 (Store (Con 207) (Var (Local 4)));
  GetLocal 4 local4_1;
  SetByte 008290 HiByte(local4_1);
  SetByte 008291 LoByte(local4_1);
  TraceOperation 028074 (Print ".");
  GamePrint ".";
  TraceOperation 028077 New_line;
  GamePrint "\n";
  TraceOperation 028078 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 028079:
  TraceOperation 028079 (Jz (Var (Local 5)) (Branch F (Dloc 027864)));
  GetLocal 5 local5_1;
  if (IsZero(local5_1)) {
    TraceOperation 028083 (Je [Var (Global 195),Con 31] (Branch F (Dloc 027864)));
    Let b2 = M[008298];
    Let b3 = M[008299];
    if (Equal(MakeHiLo(b2,b3),31)) {
      TraceOperation 028088 (Print "(Taking");
      GamePrint "(Taking";
      TraceOperation 028095 (Call (Floc 043738) [Var (Local 4),Con 1] Sp);
      GetLocal 4 local4_4;
      PushFrame;
      PushReturnAddress 028095;
      SetLocal 1 local4_4;
      SetLocal 2 1;
      MakeRoutineFrame 2;
      Jump: 043743
    } else {
      Jump: 027864
    }
  } else {
    Jump: 027864
  }
LocReturn 028095:
  PushStack call_result;
  TraceOperation 028102 (Print " first)");
  GamePrint " first)";
  TraceOperation 028109 New_line;
  GamePrint "\n";
  TraceOperation 028110 (Jump 027864);
  Jump: 027864
--------------------------------------------------
LocRoutine 028114:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 028121
LocOp 028121:
  TraceOperation 028121 (Loadw (Var (Global 167)) (Var (Global 162)) Sp);
  Let b1 = M[008242];
  Let b2 = M[008243];
  Let b3 = M[008232];
  Let b4 = M[008233];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 028125 (Jg (Var Sp) (Con 1) (Branch F (Dloc 028143)));
  PopStack popped7;
  if (GreaterThan(popped7,1)) {
    TraceOperation 028129 (Loadb (Var (Global 198)) (Con 5) Sp);
    Let b8 = M[008304];
    Let b9 = M[008305];
    Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),5)];
    PushStack Widen(b10);
    TraceOperation 028133 (Test (Var Sp) (Con 4) (Branch T (Dloc 028143)));
    PopStack popped11;
    if (Equal(And(popped11,4),4)) {
      Jump: 028143
    } else {
      TraceOperation 028137 (Store (Con 1) (Con 1));
      SetLocal 1 1;
      TraceOperation 028140 (Jump 028162);
      Jump: 028162
    }
  } else {
    Jump: 028143
  }
LocOp 028143:
  TraceOperation 028143 (Loadw (Var (Global 166)) (Var (Global 162)) Sp);
  Let b1 = M[008240];
  Let b2 = M[008241];
  Let b3 = M[008232];
  Let b4 = M[008233];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 028147 (Jg (Var Sp) (Con 1) (Branch F (Dloc 028162)));
  PopStack popped7;
  if (GreaterThan(popped7,1)) {
    TraceOperation 028151 (Loadb (Var (Global 198)) (Con 6) Sp);
    Let b8 = M[008304];
    Let b9 = M[008305];
    Let b10 = M[Offset(Address(MakeHiLo(b8,b9)),6)];
    PushStack Widen(b10);
    TraceOperation 028155 (Test (Var Sp) (Con 4) (Branch T (Dloc 028162)));
    PopStack popped11;
    if (Equal(And(popped11,4),4)) {
      Jump: 028162
    } else {
      TraceOperation 028159 (Store (Con 1) (Con 2));
      SetLocal 1 2;
      Jump: 028162
    }
  } else {
    Jump: 028162
  }
LocOp 028162:
  TraceOperation 028162 (Jz (Var (Local 1)) (Branch T Dtrue));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 028165 (Print "You can't use multiple ");
    GamePrint "You can't use multiple ";
    TraceOperation 028178 (Je [Var (Local 1),Con 2] (Branch F (Dloc 028185)));
    GetLocal 1 local1_3;
    if (Equal(local1_3,2)) {
      TraceOperation 028182 (Print "in");
      GamePrint "in";
      Jump: 028185
    } else {
      Jump: 028185
    }
  }
LocOp 028185:
  TraceOperation 028185 (Print "direct objects with \"");
  GamePrint "direct objects with \"";
  TraceOperation 028200 (Loadw (Var (Global 184)) (Con 1) (Local 2));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 028204 (Jz (Var (Local 2)) (Branch F (Dloc 028215)));
  GetLocal 2 local2_5;
  if (IsZero(local2_5)) {
    TraceOperation 028207 (Print "tell");
    GamePrint "tell";
    TraceOperation 028212 (Jump 028245);
    Jump: 028245
  } else {
    Jump: 028215
  }
LocOp 028215:
  TraceOperation 028215 (Jz (Var (Global 189)) (Branch F (Dloc 028221)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 028218 (Jz (Var (Global 188)) (Branch T (Dloc 028230)));
    Let b3 = M[008284];
    Let b4 = M[008285];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 028230
    } else {
      Jump: 028221
    }
  } else {
    Jump: 028221
  }
LocOp 028221:
  TraceOperation 028221 (Loadw (Var (Local 2)) (Con 0) Sp);
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Address(local2_1),0)];
  Let b3 = M[Offset(Offset(Address(local2_1),0),1)];
  PushStack MakeHiLo(b2,b3);
  TraceOperation 028225 (Print_addr (Var Sp));
  PopStack popped4;
  GamePrint GetText(Address(popped4));
  TraceOperation 028227 (Jump 028245);
  Jump: 028245
LocOp 028230:
  TraceOperation 028230 (Loadb (Var (Local 2)) (Con 2) (Local 3));
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Address(local2_1),2)];
  SetLocal 3 Widen(b2);
  TraceOperation 028234 (Loadb (Var (Local 2)) (Con 3) Sp);
  GetLocal 2 local2_3;
  Let b4 = M[Offset(Address(local2_3),3)];
  PushStack Widen(b4);
  TraceOperation 028238 (Call (Floc 024740) [Var (Local 3),Var Sp] Sp);
  GetLocal 3 local3_5;
  PopStack popped6;
  PushFrame;
  PushReturnAddress 028238;
  SetLocal 1 local3_5;
  SetLocal 2 popped6;
  MakeRoutineFrame 2;
  Jump: 024745
LocReturn 028238:
  PushStack call_result;
  Jump: 028245
LocOp 028245:
  TraceOperation 028245 (Print "\".");
  GamePrint "\".";
  TraceOperation 028250 New_line;
  GamePrint "\n";
  TraceOperation 028251 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 028252:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 1;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 -1;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 028261
LocOp 028261:
  TraceOperation 028261 (Jz (Var (Local 2)) (Branch T Dfalse));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 028264 (Jl (Var (Local 3)) (Con 0) (Branch T (Dloc 028274)));
    GetLocal 3 local3_3;
    if (LessThan(local3_3,0)) {
      Jump: 028274
    } else {
      TraceOperation 028268 (Store (Con 4) (Con 0));
      SetLocal 4 0;
      TraceOperation 028271 (Jump 028278);
      Jump: 028278
    }
  }
LocOp 028274:
  TraceOperation 028274 (Loadw (Var (Local 2)) (Con 0) (Local 3));
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Address(local2_1),0)];
  Let b3 = M[Offset(Offset(Address(local2_1),0),1)];
  SetLocal 3 MakeHiLo(b2,b3);
  Jump: 028278
LocOp 028278:
  TraceOperation 028278 (Loadw (Var (Local 2)) (Var (Local 4)) Sp);
  GetLocal 2 local2_1;
  GetLocal 4 local4_2;
  Let b3 = M[Offset(Address(local2_1),Mul(2,local4_2))];
  Let b4 = M[Offset(Offset(Address(local2_1),Mul(2,local4_2)),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 028282 (Je [Var (Local 1),Var Sp] (Branch T Dtrue));
  GetLocal 1 local1_5;
  PopStack popped6;
  if (Equal(local1_5,popped6)) {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    TraceOperation 028286 (Inc_chk (Con 4) (Var (Local 3)) (Branch F (Dloc 028278)));
    GetLocal 4 local4_8;
    GetLocal 3 local3_9;
    SetLocal 4 Add(local4_8,1);
    if (GreaterThanEqual(local4_8,local3_9)) {
      TraceOperation 028291 Rfalse;
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 0;
      JumpIndirect: (return) return_address_10
    } else {
      Jump: 028278
    }
  }
--------------------------------------------------
LocRoutine 028292:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 028301
LocOp 028301:
  TraceOperation 028301 (Loadb (Var (Local 2)) (Var (Local 4)) Sp);
  GetLocal 2 local2_1;
  GetLocal 4 local4_2;
  Let b3 = M[Offset(Address(local2_1),local4_2)];
  PushStack Widen(b3);
  TraceOperation 028305 (Je [Var (Local 1),Var Sp] (Branch T Dtrue));
  GetLocal 1 local1_4;
  PopStack popped5;
  if (Equal(local1_4,popped5)) {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    TraceOperation 028309 (Inc_chk (Con 4) (Var (Local 3)) (Branch F (Dloc 028301)));
    GetLocal 4 local4_7;
    GetLocal 3 local3_8;
    SetLocal 4 Add(local4_7,1);
    if (GreaterThanEqual(local4_7,local3_8)) {
      TraceOperation 028314 Rfalse;
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    } else {
      Jump: 028301
    }
  }
--------------------------------------------------
LocRoutine 028316:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 1;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 028325
LocOp 028325:
  TraceOperation 028325 (Store (Con 188) (Con 29));
  SetByte 008252 0;
  SetByte 008253 29;
  TraceOperation 028328 (Store (Con 3) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  SetLocal 3 MakeHiLo(b1,b2);
  TraceOperation 028331 (Store (Con 16) (Var (Local 1)));
  GetLocal 1 local1_3;
  SetByte 007908 HiByte(local1_3);
  SetByte 007909 LoByte(local1_3);
  TraceOperation 028334 (Jz (Var (Local 2)) (Branch T (Dloc 028347)));
  GetLocal 2 local2_4;
  if (IsZero(local2_4)) {
    Jump: 028347
  } else {
    TraceOperation 028337 (Test_attr (Var (Local 1)) (Con 29) (Branch F (Dloc 028347)));
    GetLocal 1 local1_5;
    Let b6 = M[Offset(Offset(000751,Mul(local1_5,9)),3)];
    if (TestBit(b6,2)) {
      TraceOperation 028341 (Store (Con 4) (Con 1));
      SetLocal 4 1;
      TraceOperation 028344 (Jump 028407);
      Jump: 028407
    } else {
      Jump: 028347
    }
  }
LocOp 028347:
  TraceOperation 028347 (Storew (Var (Global 164)) (Var (Global 162)) (Con 0));
  Let b1 = M[008236];
  Let b2 = M[008237];
  Let b3 = M[008232];
  Let b4 = M[008233];
  SetByte Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1) 0;
  TraceOperation 028352 (Store (Con 216) (Var (Global 164)));
  Let b5 = M[008236];
  Let b6 = M[008237];
  SetByte 008308 b5;
  SetByte 008309 b6;
  TraceOperation 028355 (Store (Con 189) (Con -1));
  SetByte 008254 255;
  SetByte 008255 255;
  TraceOperation 028360 (Je [Var (Local 3),Var (Local 1)] (Branch F (Dloc 028388)));
  GetLocal 3 local3_7;
  GetLocal 1 local1_8;
  if (Equal(local3_7,local1_8)) {
    TraceOperation 028364 (Call (Floc 027620) [Var (Global 195),Con 1,Con 1] Sp);
    Let b9 = M[008298];
    Let b10 = M[008299];
    PushFrame;
    PushReturnAddress 028364;
    SetLocal 1 MakeHiLo(b9,b10);
    SetLocal 2 1;
    SetLocal 3 1;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 027629
  } else {
    Jump: 028388
  }
LocReturn 028364:
  PushStack call_result;
  TraceOperation 028372 (Je [Var (Global 195),Var (Global 235)] (Branch T (Dloc 028388)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[008378];
  Let b4 = M[008379];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 028388
  } else {
    TraceOperation 028376 (Jin (Var (Global 235)) (Var (Local 1)) (Branch F (Dloc 028388)));
    Let b5 = M[008378];
    Let b6 = M[008379];
    GetLocal 1 local1_7;
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
    if (Equal(local1_7,Widen(b8))) {
      TraceOperation 028380 (Call (Floc 027620) [Var (Global 235),Con 1,Con 1] Sp);
      Let b9 = M[008378];
      Let b10 = M[008379];
      PushFrame;
      PushReturnAddress 028380;
      SetLocal 1 MakeHiLo(b9,b10);
      SetLocal 2 1;
      SetLocal 3 1;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 027629
    } else {
      Jump: 028388
    }
  }
LocReturn 028380:
  PushStack call_result;
  Jump: 028388
LocOp 028388:
  TraceOperation 028388 (Call (Floc 027620) [Var (Local 1),Con 1,Con 1] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 028388;
  SetLocal 1 local1_1;
  SetLocal 2 1;
  SetLocal 3 1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  Jump: 027629
LocReturn 028388:
  PushStack call_result;
  TraceOperation 028396 (Loadw (Var (Global 200)) (Var (Global 162)) Sp);
  Let b1 = M[008308];
  Let b2 = M[008309];
  Let b3 = M[008232];
  Let b4 = M[008233];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 028400 (Jg (Var Sp) (Con 0) (Branch F (Dloc 028407)));
  PopStack popped7;
  if (GreaterThan(popped7,0)) {
    TraceOperation 028404 (Store (Con 4) (Con 1));
    SetLocal 4 1;
    Jump: 028407
  } else {
    Jump: 028407
  }
LocOp 028407:
  TraceOperation 028407 (Store (Con 16) (Var (Local 3)));
  GetLocal 3 local3_1;
  SetByte 007908 HiByte(local3_1);
  SetByte 007909 LoByte(local3_1);
  TraceOperation 028410 (Store (Con 188) (Con 0));
  SetByte 008252 0;
  SetByte 008253 0;
  TraceOperation 028413 (Ret (Var (Local 4)));
  GetLocal 4 local4_2;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult local4_2;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 028416:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 028419
LocOp 028419:
  TraceOperation 028419 (Jz (Var (Global 188)) (Branch F (Dloc 028436)));
  Let b1 = M[008284];
  Let b2 = M[008285];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 028422 (Loadw (Var (Global 184)) (Con 6) (Local 1));
    Let b3 = M[008276];
    Let b4 = M[008277];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),12)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),12),1)];
    SetLocal 1 MakeHiLo(b5,b6);
    TraceOperation 028426 (Loadw (Var (Local 1)) (Con 0) Sp);
    GetLocal 1 local1_7;
    Let b8 = M[Offset(Address(local1_7),0)];
    Let b9 = M[Offset(Offset(Address(local1_7),0),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 028430 (Je [Var Sp,Con 16619] (Branch F (Dloc 028442)));
    PopStack popped10;
    if (Equal(popped10,16619)) {
      Jump: 028436
    } else {
      Jump: 028442
    }
  } else {
    Jump: 028436
  }
LocOp 028436:
  TraceOperation 028436 (Print " ");
  GamePrint " ";
  TraceOperation 028439 (Print_obj (Var (Global 201)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 028441 Rtrue;
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 028442:
  TraceOperation 028442 (Loadw (Var (Global 184)) (Con 7) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),14)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),14),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 028446 (Call (Floc 025564) [Var (Local 1),Var Sp,Con 0] Sp);
  GetLocal 1 local1_5;
  PopStack popped6;
  PushFrame;
  PushReturnAddress 028446;
  SetLocal 1 local1_5;
  SetLocal 2 popped6;
  SetLocal 3 0;
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 1;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 025581
LocReturn 028446:
  PushStack call_result;
  TraceOperation 028454 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 028456:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 028459
LocOp 028459:
  TraceOperation 028459 (Jz (Var (Global 188)) (Branch F (Dloc 028476)));
  Let b1 = M[008284];
  Let b2 = M[008285];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 028462 (Loadw (Var (Global 184)) (Con 8) (Local 1));
    Let b3 = M[008276];
    Let b4 = M[008277];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),16)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),16),1)];
    SetLocal 1 MakeHiLo(b5,b6);
    TraceOperation 028466 (Loadw (Var (Local 1)) (Con 0) Sp);
    GetLocal 1 local1_7;
    Let b8 = M[Offset(Address(local1_7),0)];
    Let b9 = M[Offset(Offset(Address(local1_7),0),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 028470 (Je [Var Sp,Con 16619] (Branch F (Dloc 028482)));
    PopStack popped10;
    if (Equal(popped10,16619)) {
      Jump: 028476
    } else {
      Jump: 028482
    }
  } else {
    Jump: 028476
  }
LocOp 028476:
  TraceOperation 028476 (Print " ");
  GamePrint " ";
  TraceOperation 028479 (Print_obj (Var (Global 201)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 028481 Rtrue;
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 028482:
  TraceOperation 028482 (Loadw (Var (Global 184)) (Con 9) Sp);
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),18)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),18),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 028486 (Call (Floc 025564) [Var (Local 1),Var Sp,Con 0] Sp);
  GetLocal 1 local1_5;
  PopStack popped6;
  PushFrame;
  PushReturnAddress 028486;
  SetLocal 1 local1_5;
  SetLocal 2 popped6;
  SetLocal 3 0;
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 1;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 025581
LocReturn 028486:
  PushStack call_result;
  TraceOperation 028494 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 028496:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 028505
LocOp 028505:
  TraceOperation 028505 (Test_attr (Var (Local 1)) (Con 6) (Branch T Dfalse));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),0)];
  if (TestBit(b2,1)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 028509 (Jz (Var (Global 171)) (Branch T (Dloc 028538)));
    Let b4 = M[008250];
    Let b5 = M[008251];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 028538
    } else {
      TraceOperation 028512 (Get_prop_addr (Var (Local 1)) (Con 31) (Local 3));
      GetLocal 1 local1_6;
      Let b7 = M[Offset(Offset(000751,Mul(local1_6,9)),7)];
      Let b8 = M[Offset(Offset(Offset(000751,Mul(local1_6,9)),7),1)];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      Let loop_var10 = DeAddress(Offset(Address(MakeHiLo(b7,b8)),Add(Mul(2,Widen(b9)),1)));
      Label 11: {
        Let b12 = M[Address(loop_var10)];
        if (IsZeroByte(b12)) {
          SetLocal 3 0;
        } else {
          if (Equal(31,Widen(BwAnd(b12,31)))) {
            SetLocal 3 DeAddress(Offset(Address(loop_var10),1));
          } else {
            Assign loop_var10 = DeAddress(Offset(Offset(Address(loop_var10),1),Add(Widen(ShiftR(b12,5)),1)));
            Goto: Label 11
          }
        }
      }
      TraceOperation 028516 (Get_prop_len (Var (Local 3)) Sp);
      GetLocal 3 local3_13;
      if (IsZero(local3_13)) {
        PushStack 0;
      } else {
        Let b14 = M[Offset(Address(local3_13),-1)];
        PushStack Add(Widen(ShiftR(b14,5)),1);
      }
      TraceOperation 028519 (Div (Var Sp) (Con 2) Sp);
      PopStack popped15;
      PushStack Div(popped15,2);
      TraceOperation 028523 (Sub (Var Sp) (Con 1) Sp);
      PopStack popped16;
      PushStack Sub(popped16,1);
      TraceOperation 028527 (Call (Floc 028252) [Var (Global 171),Var (Local 3),Var Sp] Sp);
      Let b17 = M[008250];
      Let b18 = M[008251];
      GetLocal 3 local3_19;
      PopStack popped20;
      PushFrame;
      PushReturnAddress 028527;
      SetLocal 1 MakeHiLo(b17,b18);
      SetLocal 2 local3_19;
      SetLocal 3 popped20;
      MakeRoutineFrame 4;
      SetLocal 4 1;
      Jump: 028261
    }
  }
LocReturn 028527:
  PushStack call_result;
  TraceOperation 028535 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 028538
  }
LocOp 028538:
  TraceOperation 028538 (Jz (Var (Global 170)) (Branch T (Dloc 028566)));
  Let b1 = M[008248];
  Let b2 = M[008249];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028566
  } else {
    TraceOperation 028541 (Get_prop_addr (Var (Local 1)) (Con 30) (Local 3));
    GetLocal 1 local1_3;
    Let b4 = M[Offset(Offset(000751,Mul(local1_3,9)),7)];
    Let b5 = M[Offset(Offset(Offset(000751,Mul(local1_3,9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
    Label 8: {
      Let b9 = M[Address(loop_var7)];
      if (IsZeroByte(b9)) {
        SetLocal 3 0;
      } else {
        if (Equal(30,Widen(BwAnd(b9,31)))) {
          SetLocal 3 DeAddress(Offset(Address(loop_var7),1));
        } else {
          Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),Add(Widen(ShiftR(b9,5)),1)));
          Goto: Label 8
        }
      }
    }
    TraceOperation 028545 (Jz (Var (Local 3)) (Branch T Dfalse));
    GetLocal 3 local3_10;
    if (IsZero(local3_10)) {
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 0;
      JumpIndirect: (return) return_address_11
    } else {
      TraceOperation 028548 (Get_prop_len (Var (Local 3)) Sp);
      GetLocal 3 local3_12;
      if (IsZero(local3_12)) {
        PushStack 0;
      } else {
        Let b13 = M[Offset(Address(local3_12),-1)];
        PushStack Add(Widen(ShiftR(b13,5)),1);
      }
      TraceOperation 028551 (Sub (Var Sp) (Con 1) Sp);
      PopStack popped14;
      PushStack Sub(popped14,1);
      TraceOperation 028555 (Call (Floc 028292) [Var (Global 170),Var (Local 3),Var Sp] Sp);
      Let b15 = M[008248];
      Let b16 = M[008249];
      GetLocal 3 local3_17;
      PopStack popped18;
      PushFrame;
      PushReturnAddress 028555;
      SetLocal 1 MakeHiLo(b15,b16);
      SetLocal 2 local3_17;
      SetLocal 3 popped18;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      Jump: 028301
    }
  }
LocReturn 028555:
  PushStack call_result;
  TraceOperation 028563 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 028566
  }
LocOp 028566:
  TraceOperation 028566 (Jz (Var (Global 172)) (Branch T Dtrue));
  Let b1 = M[008252];
  Let b2 = M[008253];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 028569 (Test_attr (Var (Local 1)) (Var (Global 172)) (Branch T Dtrue));
    GetLocal 1 local1_4;
    Let b5 = M[008252];
    Let b6 = M[008253];
    Let b7 = M[Offset(Offset(000751,Mul(local1_4,9)),Div8(MakeHiLo(b5,b6)))];
    if (TestBit(b7,SevenMinus(LoByte(Mod(MakeHiLo(b5,b6),8))))) {
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 1;
      JumpIndirect: (return) return_address_8
    } else {
      TraceOperation 028573 Rfalse;
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    }
  }
--------------------------------------------------
LocRoutine 028574:
  MakeRoutineFrame 0;
  Jump: 028575
LocOp 028575:
  TraceOperation 028575 (Store (Con 168) (Con 2));
  SetByte 008212 0;
  SetByte 008213 2;
  TraceOperation 028578 (Print "Maximum verbosity.");
  GamePrint "Maximum verbosity.";
  TraceOperation 028593 New_line;
  GamePrint "\n";
  TraceOperation 028594 New_line;
  GamePrint "\n";
  TraceOperation 028595 (Call (Floc 034400) [] Sp);
  PushFrame;
  PushReturnAddress 028595;
  MakeRoutineFrame 0;
  Jump: 034401
LocReturn 028595:
  PushStack call_result;
  TraceOperation 028600 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 028602:
  MakeRoutineFrame 0;
  Jump: 028603
LocOp 028603:
  TraceOperation 028603 (Store (Con 168) (Con 1));
  SetByte 008212 0;
  SetByte 008213 1;
  TraceOperation 028606 (Print_ret "Brief descriptions.");
  GamePrint "Brief descriptions.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 028622:
  MakeRoutineFrame 0;
  Jump: 028623
LocOp 028623:
  TraceOperation 028623 (Store (Con 168) (Con 0));
  SetByte 008212 0;
  SetByte 008213 0;
  TraceOperation 028626 (Print_ret "Super-brief descriptions.");
  GamePrint "Super-brief descriptions.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 028648:
  MakeRoutineFrame 0;
  Jump: 028649
LocOp 028649:
  TraceOperation 028649 (Jz (Var (Global 144)) (Branch T (Dloc 028673)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028673
  } else {
    TraceOperation 028652 (Print_ret "You have a big blinding throbber.");
    GamePrint "You have a big blinding throbber.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 028673:
  TraceOperation 028673 (Jz (Var (Global 71)) (Branch T (Dloc 028687)));
  Let b1 = M[008050];
  Let b2 = M[008051];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028687
  } else {
    TraceOperation 028676 (Print_ret "You feel weak.");
    GamePrint "You feel weak.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 028687:
  TraceOperation 028687 (Je [Var (Global 120),Con 195] (Branch F (Dloc 028703)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),195)) {
    TraceOperation 028691 (Print "You have two ");
    GamePrint "You have two ";
    TraceOperation 028698 (Print_obj (Con 170));
    Let b3 = M[002288];
    Let b4 = M[002289];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 028700 (Print_ret "s.");
    GamePrint "s.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 028703
  }
LocOp 028703:
  TraceOperation 028703 (Print_ret "You are in good health.");
  GamePrint "You are in good health.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 028718:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 028721
LocOp 028721:
  TraceOperation 028721 (Test_attr (Con 186) (Con 27) (Branch F (Dloc 028734)));
  Let b1 = M[002428];
  if (TestBit(b1,4)) {
    TraceOperation 028725 (Store (Con 1) (Con 1));
    SetLocal 1 1;
    TraceOperation 028728 (Clear_attr (Con 186) (Con 27));
    Let b2 = M[002428];
    SetByte 002428 ClearBit(b2,4);
    TraceOperation 028731 (Jump 028737);
    Jump: 028737
  } else {
    Jump: 028734
  }
LocOp 028734:
  TraceOperation 028734 (Store (Con 1) (Con 0));
  SetLocal 1 0;
  Jump: 028737
LocOp 028737:
  TraceOperation 028737 (Je [Var (Global 120),Con 123] (Branch T (Dloc 028764)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),123)) {
    Jump: 028764
  } else {
    TraceOperation 028741 (Get_child (Con 31) Sp (Branch T (Dloc 028764)));
    Let b3 = M[001036];
    PushStack Widen(b3);
    if (IsZero(Widen(b3))) {
      TraceOperation 028745 (Print "You are empty-handed.");
      GamePrint "You are empty-handed.";
      TraceOperation 028760 New_line;
      GamePrint "\n";
      TraceOperation 028761 (Jump 028816);
      Jump: 028816
    } else {
      Jump: 028764
    }
  }
LocOp 028764:
  TraceOperation 028764 (Print "You have:");
  GamePrint "You have:";
  TraceOperation 028771 New_line;
  GamePrint "\n";
  TraceOperation 028772 (Jz (Var (Global 144)) (Branch T (Dloc 028783)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 028783
  } else {
    TraceOperation 028775 (Print "  a ");
    GamePrint "  a ";
    TraceOperation 028780 (Print_obj (Con 170));
    Let b3 = M[002288];
    Let b4 = M[002289];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 028782 New_line;
    GamePrint "\n";
    Jump: 028783
  }
LocOp 028783:
  TraceOperation 028783 (Je [Var (Global 120),Con 123] (Branch F (Dloc 028810)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),123)) {
    TraceOperation 028787 (Jz (Var (Global 66)) (Branch F (Dloc 028799)));
    Let b3 = M[008040];
    Let b4 = M[008041];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 028790 (Call (Floc 043468) [Con 9] Sp);
      PushFrame;
      PushReturnAddress 028790;
      SetLocal 1 9;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043473
    } else {
      Jump: 028799
    }
  } else {
    Jump: 028810
  }
LocReturn 028790:
  PushStack call_result;
  TraceOperation 028796 (Jz (Var Sp) (Branch F (Dloc 028810)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 028799
  } else {
    Jump: 028810
  }
LocOp 028799:
  TraceOperation 028799 (Store (Con 82) (Con 1));
  SetByte 008040 0;
  SetByte 008041 1;
  TraceOperation 028802 (Print "  no tea");
  GamePrint "  no tea";
  TraceOperation 028809 New_line;
  GamePrint "\n";
  Jump: 028810
LocOp 028810:
  TraceOperation 028810 (Call (Floc 042074) [Con 31] Sp);
  PushFrame;
  PushReturnAddress 028810;
  SetLocal 1 31;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 1;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 042095
LocReturn 028810:
  PushStack call_result;
  Jump: 028816
LocOp 028816:
  TraceOperation 028816 (Jz (Var (Local 1)) (Branch T Dfalse));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 028819 (Set_attr (Con 186) (Con 27));
    Let b3 = M[002428];
    SetByte 002428 SetBit(b3,4);
    TraceOperation 028822 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 028824:
  MakeRoutineFrame 0;
  Jump: 028825
LocOp 028825:
  TraceOperation 028825 (Call (Floc 029196) [] Sp);
  PushFrame;
  PushReturnAddress 028825;
  MakeRoutineFrame 1;
  SetLocal 1 1;
  Jump: 029199
LocReturn 028825:
  PushStack call_result;
  TraceOperation 028830 (Print "Do you wish to leave the game? (Y is affirmative): ");
  GamePrint "Do you wish to leave the game? (Y is affirmative): ";
  TraceOperation 028865 (Call (Floc 029140) [] Sp);
  PushFrame;
  PushReturnAddress 028865;
  MakeRoutineFrame 0;
  Jump: 029141
LocReturn 028865:
  PushStack call_result;
  TraceOperation 028870 (Jz (Var Sp) (Branch T (Dloc 028875)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 028875
  } else {
    TraceOperation 028873 Quit;
    Quit
  }
LocOp 028875:
  TraceOperation 028875 (Print_ret "Ok.");
  GamePrint "Ok.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 028880:
  MakeRoutineFrame 0;
  Jump: 028881
LocOp 028881:
  TraceOperation 028881 (Call (Floc 029196) [Con 1] Sp);
  PushFrame;
  PushReturnAddress 028881;
  SetLocal 1 1;
  MakeRoutineFrame 1;
  Jump: 029199
LocReturn 028881:
  PushStack call_result;
  TraceOperation 028887 (Print "Do you wish to restart? (Y is affirmative): ");
  GamePrint "Do you wish to restart? (Y is affirmative): ";
  TraceOperation 028920 (Call (Floc 029140) [] Sp);
  PushFrame;
  PushReturnAddress 028920;
  MakeRoutineFrame 0;
  Jump: 029141
LocReturn 028920:
  PushStack call_result;
  TraceOperation 028925 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 028928 (Print "Restarting.");
    GamePrint "Restarting.";
    TraceOperation 028939 New_line;
    GamePrint "\n";
    TraceOperation 028940 Restart;
    Jump: 020735
  }
--------------------------------------------------
LocRoutine 028948:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 028951
LocOp 028951:
  TraceOperation 028951 New_line;
  GamePrint "\n";
  TraceOperation 028952 (Jz (Var (Local 1)) (Branch F (Dloc 028961)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    TraceOperation 028955 (Call (Floc 029196) [] Sp);
    PushFrame;
    PushReturnAddress 028955;
    MakeRoutineFrame 1;
    SetLocal 1 1;
    Jump: 029199
  } else {
    Jump: 028961
  }
LocReturn 028955:
  PushStack call_result;
  TraceOperation 028960 New_line;
  GamePrint "\n";
  Jump: 028961
LocOp 028961:
  TraceOperation 028961 (Print "Would you like to start over, restore a saved position, or end this session of the game?\n(Type RESTART, RESTORE, or QUIT): >");
  GamePrint "Would you like to start over, restore a saved position, or end this session of the game?\n(Type RESTART, RESTORE, or QUIT): >";
  TraceOperation 029056 (Sread (Var (Global 193)) (Var (Global 194)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  Let b7 = M[007910];
  Let b8 = M[007911];
  Let b9 = M[007912];
  Let b10 = M[007913];
  ReadInputFromUser (Just (StatusInfo {room = ite_res6, score = MakeHiLo(b7,b8), turns = MakeHiLo(b9,b10)})) user_command_line_11;
  Let b12 = M[008294];
  Let b13 = M[008295];
  Let b14 = M[008296];
  Let b15 = M[008297];
  Tokenize user_command_line_11 (num_tokens_16,positions17,words18);
  StringBytes user_command_line_11 string_bytes_19;
  Let loop_var20 = 0;
  Label 21: {
    if (Equal(loop_var20,Widen(StringLength(user_command_line_11)))) {
      SetByte Offset(Address(MakeHiLo(b14,b15)),1) num_tokens_16;
      Let loop_var22 = 0;
      Label 23: {
        if (Equal(loop_var22,Widen(num_tokens_16))) {
          TraceOperation 029060 (Loadw (Var (Global 194)) (Con 1) Sp);
          Let b24 = M[008296];
          Let b25 = M[008297];
          Let b26 = M[Offset(Address(MakeHiLo(b24,b25)),2)];
          Let b27 = M[Offset(Offset(Address(MakeHiLo(b24,b25)),2),1)];
          PushStack MakeHiLo(b26,b27);
          TraceOperation 029064 (Je [Var Sp,Con 18285] (Branch F (Dloc 029086)));
          PopStack popped28;
          if (Equal(popped28,18285)) {
            TraceOperation 029070 Restart;
            Jump: 020735
          } else {
            Jump: 029086
          }
        } else {
          Let lookee29 = LookupInDict(IndexList(words18,loop_var22));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),0) HiByte(DeAddress(lookee29));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),1) LoByte(DeAddress(lookee29));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),2) StringLength(IndexList(words18,loop_var22));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),3) IndexList(positions17,loop_var22);
          Assign loop_var22 = Add(loop_var22,1);
          Goto: Label 23
        }
      }
    } else {
      SetByte Offset(Offset(Address(MakeHiLo(b12,b13)),1),loop_var20) IndexList(string_bytes_19,loop_var20);
      Assign loop_var20 = Add(loop_var20,1);
      Goto: Label 21
    }
  }
LocReturn 029079:
  PushStack call_result;
  TraceOperation 029085 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 029086:
  TraceOperation 029086 (Loadw (Var (Global 194)) (Con 1) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 029090 (Je [Var Sp,Con 18292] (Branch F (Dloc 029118)));
  PopStack popped5;
  if (Equal(popped5,18292)) {
    TraceOperation 029096 (Restore (Branch F (Dloc 029103)));
    Note "Restore (Branch F (Dloc 029103))";
    TraceOperation 029098 (Print_ret "Ok.");
    GamePrint "Ok.\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 029118
  }
LocOp 029103:
  TraceOperation 029103 (Print "Failed.");
  GamePrint "Failed.";
  TraceOperation 029110 New_line;
  GamePrint "\n";
  TraceOperation 029111 (Call (Floc 028948) [Con 1] Sp);
  PushFrame;
  PushReturnAddress 029111;
  SetLocal 1 1;
  MakeRoutineFrame 1;
  Jump: 028951
LocReturn 029111:
  PushStack call_result;
  TraceOperation 029117 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 029118:
  TraceOperation 029118 (Loadw (Var (Global 194)) (Con 1) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),2)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),2),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 029122 (Je [Var Sp,Con 18131,Con 18103] (Branch F (Dloc 029132)));
  PopStack popped5;
  if (LogOr(Equal(popped5,18131),Equal(popped5,18103))) {
    TraceOperation 029130 Quit;
    Quit
  } else {
    Jump: 029132
  }
LocOp 029132:
  TraceOperation 029132 (Call (Floc 028948) [Con 1] Sp);
  PushFrame;
  PushReturnAddress 029132;
  SetLocal 1 1;
  MakeRoutineFrame 1;
  Jump: 028951
LocReturn 029132:
  PushStack call_result;
  TraceOperation 029138 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 029140:
  MakeRoutineFrame 0;
  Jump: 029141
LocOp 029141:
  TraceOperation 029141 (Print ">");
  GamePrint ">";
  TraceOperation 029146 (Sread (Var (Global 193)) (Var (Global 194)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  Let b7 = M[007910];
  Let b8 = M[007911];
  Let b9 = M[007912];
  Let b10 = M[007913];
  ReadInputFromUser (Just (StatusInfo {room = ite_res6, score = MakeHiLo(b7,b8), turns = MakeHiLo(b9,b10)})) user_command_line_11;
  Let b12 = M[008294];
  Let b13 = M[008295];
  Let b14 = M[008296];
  Let b15 = M[008297];
  Tokenize user_command_line_11 (num_tokens_16,positions17,words18);
  StringBytes user_command_line_11 string_bytes_19;
  Let loop_var20 = 0;
  Label 21: {
    if (Equal(loop_var20,Widen(StringLength(user_command_line_11)))) {
      SetByte Offset(Address(MakeHiLo(b14,b15)),1) num_tokens_16;
      Let loop_var22 = 0;
      Label 23: {
        if (Equal(loop_var22,Widen(num_tokens_16))) {
          TraceOperation 029150 (Loadw (Var (Global 194)) (Con 1) Sp);
          Let b24 = M[008296];
          Let b25 = M[008297];
          Let b26 = M[Offset(Address(MakeHiLo(b24,b25)),2)];
          Let b27 = M[Offset(Offset(Address(MakeHiLo(b24,b25)),2),1)];
          PushStack MakeHiLo(b26,b27);
          TraceOperation 029154 (Je [Var Sp,Con 20420,Con 20392] (Branch F Dfalse));
          PopStack popped28;
          if (LogOr(Equal(popped28,20420),Equal(popped28,20392))) {
            TraceOperation 029162 Rtrue;
            PopFrame;
            PopReturnAddress return_address_29;
            SetResult 1;
            JumpIndirect: (return) return_address_29
          } else {
            PopFrame;
            PopReturnAddress return_address_30;
            SetResult 0;
            JumpIndirect: (return) return_address_30
          }
        } else {
          Let lookee31 = LookupInDict(IndexList(words18,loop_var22));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),0) HiByte(DeAddress(lookee31));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),1) LoByte(DeAddress(lookee31));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),2) StringLength(IndexList(words18,loop_var22));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),3) IndexList(positions17,loop_var22);
          Assign loop_var22 = Add(loop_var22,1);
          Goto: Label 23
        }
      }
    } else {
      SetByte Offset(Offset(Address(MakeHiLo(b12,b13)),1),loop_var20) IndexList(string_bytes_19,loop_var20);
      Assign loop_var20 = Add(loop_var20,1);
      Goto: Label 21
    }
  }
--------------------------------------------------
LocRoutine 029164:
  MakeRoutineFrame 0;
  Jump: 029165
LocOp 029165:
  TraceOperation 029165 (Restore (Branch F (Dloc 029172)));
  Note "Restore (Branch F (Dloc 029172))";
  TraceOperation 029167 (Print_ret "Ok.");
  GamePrint "Ok.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 029172:
  TraceOperation 029172 (Print_ret "Failed.");
  GamePrint "Failed.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029180:
  MakeRoutineFrame 0;
  Jump: 029181
LocOp 029181:
  TraceOperation 029181 (Save (Branch F (Dloc 029188)));
  Note "Save (Branch F (Dloc 029188))";
  TraceOperation 029183 (Print_ret "Ok.");
  GamePrint "Ok.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 029188:
  TraceOperation 029188 (Print_ret "Failed.");
  GamePrint "Failed.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029196:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 1;
  }
  Jump: 029199
LocOp 029199:
  TraceOperation 029199 (Jl (Var (Global 1)) (Con 400) (Branch F (Dloc 029298)));
  Let b1 = M[007910];
  Let b2 = M[007911];
  if (LessThan(MakeHiLo(b1,b2),400)) {
    TraceOperation 029206 (Print "We are about to give you your score. Put on your peril-sensitive sunglasses now. (Hit RETURN or ENTER when ready.) ");
    GamePrint "We are about to give you your score. Put on your peril-sensitive sunglasses now. (Hit RETURN or ENTER when ready.) ";
    TraceOperation 029285 (Print ">");
    GamePrint ">";
    TraceOperation 029290 (Sread (Var (Global 193)) (Var (Global 194)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    Let b9 = M[007910];
    Let b10 = M[007911];
    Let b11 = M[007912];
    Let b12 = M[007913];
    ReadInputFromUser (Just (StatusInfo {room = ite_res8, score = MakeHiLo(b9,b10), turns = MakeHiLo(b11,b12)})) user_command_line_13;
    Let b14 = M[008294];
    Let b15 = M[008295];
    Let b16 = M[008296];
    Let b17 = M[008297];
    Tokenize user_command_line_13 (num_tokens_18,positions19,words20);
    StringBytes user_command_line_13 string_bytes_21;
    Let loop_var22 = 0;
    Label 23: {
      if (Equal(loop_var22,Widen(StringLength(user_command_line_13)))) {
        SetByte Offset(Address(MakeHiLo(b16,b17)),1) num_tokens_18;
        Let loop_var24 = 0;
        Label 25: {
          if (Equal(loop_var24,Widen(num_tokens_18))) {
            TraceOperation 029294 (Store (Con 208) (Con 0));
            SetByte 008292 0;
            SetByte 008293 0;
            TraceOperation 029297 New_line;
            GamePrint "\n";
            Jump: 029298
          } else {
            Let lookee26 = LookupInDict(IndexList(words20,loop_var24));
            SetByte Offset(Offset(Offset(Address(MakeHiLo(b16,b17)),2),Mul(4,loop_var24)),0) HiByte(DeAddress(lookee26));
            SetByte Offset(Offset(Offset(Address(MakeHiLo(b16,b17)),2),Mul(4,loop_var24)),1) LoByte(DeAddress(lookee26));
            SetByte Offset(Offset(Offset(Address(MakeHiLo(b16,b17)),2),Mul(4,loop_var24)),2) StringLength(IndexList(words20,loop_var24));
            SetByte Offset(Offset(Offset(Address(MakeHiLo(b16,b17)),2),Mul(4,loop_var24)),3) IndexList(positions19,loop_var24);
            Assign loop_var24 = Add(loop_var24,1);
            Goto: Label 25
          }
        }
      } else {
        SetByte Offset(Offset(Address(MakeHiLo(b14,b15)),1),loop_var22) IndexList(string_bytes_21,loop_var22);
        Assign loop_var22 = Add(loop_var22,1);
        Goto: Label 23
      }
    }
  } else {
    Jump: 029298
  }
LocOp 029298:
  TraceOperation 029298 (Print "Your score is ");
  GamePrint "Your score is ";
  TraceOperation 029309 (Print_num (Var (Global 1)));
  Let b1 = M[007910];
  Let b2 = M[007911];
  GamePrint ShowNumber(MakeHiLo(b1,b2));
  TraceOperation 029312 (Print " of a possible 400, in ");
  GamePrint " of a possible 400, in ";
  TraceOperation 029329 (Print_num (Var (Global 2)));
  Let b3 = M[007912];
  Let b4 = M[007913];
  GamePrint ShowNumber(MakeHiLo(b3,b4));
  TraceOperation 029332 (Je [Var (Global 2),Con 1] (Branch F (Dloc 029346)));
  Let b5 = M[007912];
  Let b6 = M[007913];
  if (Equal(MakeHiLo(b5,b6),1)) {
    TraceOperation 029336 (Print " turn.");
    GamePrint " turn.";
    TraceOperation 029343 (Jump 029353);
    Jump: 029353
  } else {
    Jump: 029346
  }
LocOp 029346:
  TraceOperation 029346 (Print " turns.");
  GamePrint " turns.";
  Jump: 029353
LocOp 029353:
  TraceOperation 029353 New_line;
  GamePrint "\n";
  TraceOperation 029354 (Ret (Var (Global 1)));
  Let b1 = M[007910];
  Let b2 = M[007911];
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult MakeHiLo(b1,b2);
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 029356:
  MakeRoutineFrame 0;
  Jump: 029357
LocOp 029357:
  TraceOperation 029357 (Loadw (Con 0) (Con 8) Sp);
  PushStack 0;
  TraceOperation 029361 (Or (Var Sp) (Con 1) Sp);
  PopStack popped1;
  PushStack Or(popped1,1);
  TraceOperation 029365 (Storew (Con 0) (Con 8) (Var Sp));
  PopStack popped2;
  SetByte 000016 HiByte(popped2);
  SetByte 000017 LoByte(popped2);
  TraceOperation 029370 (Call (Floc 029414) [Con -11788] Sp);
  PushFrame;
  PushReturnAddress 029370;
  SetLocal 1 -11788;
  MakeRoutineFrame 1;
  Jump: 029417
LocReturn 029370:
  PushStack call_result;
  TraceOperation 029377 (Call (Floc 029450) [] Sp);
  PushFrame;
  PushReturnAddress 029377;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 17;
  Jump: 029455
LocReturn 029377:
  PushStack call_result;
  TraceOperation 029382 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 029384:
  MakeRoutineFrame 0;
  Jump: 029385
LocOp 029385:
  TraceOperation 029385 (Call (Floc 029414) [Con -11786] Sp);
  PushFrame;
  PushReturnAddress 029385;
  SetLocal 1 -11786;
  MakeRoutineFrame 1;
  Jump: 029417
LocReturn 029385:
  PushStack call_result;
  TraceOperation 029392 (Call (Floc 029450) [] Sp);
  PushFrame;
  PushReturnAddress 029392;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  SetLocal 1 17;
  Jump: 029455
LocReturn 029392:
  PushStack call_result;
  TraceOperation 029397 (Loadw (Con 0) (Con 8) Sp);
  PushStack 0;
  TraceOperation 029401 (And (Var Sp) (Con -2) Sp);
  PopStack popped1;
  PushStack And(popped1,-2);
  TraceOperation 029407 (Storew (Con 0) (Con 8) (Var Sp));
  PopStack popped2;
  SetByte 000016 HiByte(popped2);
  SetByte 000017 LoByte(popped2);
  TraceOperation 029412 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 029414:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 029417
LocOp 029417:
  TraceOperation 029417 (Print "Here ");
  GamePrint "Here ";
  TraceOperation 029422 (Print_paddr (Var (Local 1)));
  GetLocal 1 local1_1;
  GamePrint GetText(PackedAddress Z3(local1_1));
  TraceOperation 029424 (Print " a transcript of interaction with ");
  GamePrint " a transcript of interaction with ";
  TraceOperation 029445 (Print_paddr (Var (Global 37)));
  Let b2 = M[007982];
  Let b3 = M[007983];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 029447 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult 1;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 029450:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 17;
    }
  }
  Jump: 029455
LocOp 029455:
  TraceOperation 029455 (Loadw (Con 0) (Con 1) Sp);
  PushStack 59;
  TraceOperation 029459 (And (Var Sp) (Con 2047) (Local 2));
  PopStack popped1;
  SetLocal 2 And(popped1,2047);
  TraceOperation 029465 (Print "THE HITCHHIKER'S GUIDE TO THE GALAXY\nInfocom interactive fiction - a science fiction story\nCopyright (c) 1984 by Infocom, Inc. All rights reserved.\n");
  GamePrint "THE HITCHHIKER'S GUIDE TO THE GALAXY\nInfocom interactive fiction - a science fiction story\nCopyright (c) 1984 by Infocom, Inc. All rights reserved.\n";
  TraceOperation 029596 (Print "Release ");
  GamePrint "Release ";
  TraceOperation 029603 (Print_num (Var (Local 2)));
  GetLocal 2 local2_2;
  GamePrint ShowNumber(local2_2);
  TraceOperation 029606 (Print " / Serial number ");
  GamePrint " / Serial number ";
  Jump: 029621
LocOp 029621:
  TraceOperation 029621 (Inc_chk (Con 1) (Con 23) (Branch F (Dloc 029628)));
  GetLocal 1 local1_1;
  SetLocal 1 Add(local1_1,1);
  if (GreaterThanEqual(local1_1,23)) {
    TraceOperation 029625 (Jump 029638);
    Jump: 029638
  } else {
    Jump: 029628
  }
LocOp 029628:
  TraceOperation 029628 (Loadb (Con 0) (Var (Local 1)) Sp);
  GetLocal 1 local1_1;
  Let b2 = M[Offset(000000,local1_1)];
  PushStack Widen(b2);
  TraceOperation 029632 (Print_char (Var Sp));
  PopStack popped3;
  GamePrint SingleChar(popped3);
  TraceOperation 029635 (Jump 029621);
  Jump: 029621
LocOp 029638:
  TraceOperation 029638 New_line;
  GamePrint "\n";
  TraceOperation 029639 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029640:
  MakeRoutineFrame 0;
  Jump: 029641
LocOp 029641:
  TraceOperation 029641 (Je [Var (Global 201),Con 49] (Branch F (Dloc 029657)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 029645 (Je [Var (Global 174),Con 469] (Branch F (Dloc 029657)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (Equal(MakeHiLo(b3,b4),469)) {
      TraceOperation 029651 (Print_num (Con 1));
      GamePrint "1";
      TraceOperation 029655 New_line;
      GamePrint "\n";
      TraceOperation 029656 Rtrue;
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 029657
    }
  } else {
    Jump: 029657
  }
LocOp 029657:
  TraceOperation 029657 (Print "Verifying...");
  GamePrint "Verifying...";
  TraceOperation 029670 New_line;
  GamePrint "\n";
  TraceOperation 029671 (Verify (Branch F (Dloc 029680)));
  Note "Verify (Branch F (Dloc 029680))";
  TraceOperation 029673 (Print_ret "Good.");
  GamePrint "Good.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 029680:
  TraceOperation 029680 New_line;
  GamePrint "\n";
  TraceOperation 029681 (Print_ret "** Bad **");
  GamePrint "** Bad **\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 029698:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 029703
LocOp 029703:
  TraceOperation 029703 (Jz (Var (Global 229)) (Branch T (Dloc 029718)));
  Let b1 = M[008366];
  Let b2 = M[008367];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 029718
  } else {
    TraceOperation 029706 (Store (Con 192) (Con 1));
    SetByte 008260 0;
    SetByte 008261 1;
    TraceOperation 029709 (Store (Con 219) (Var (Global 232)));
    Let b3 = M[008372];
    Let b4 = M[008373];
    SetByte 008314 b3;
    SetByte 008315 b4;
    TraceOperation 029712 (Call (Floc 046754) [] Sp);
    PushFrame;
    PushReturnAddress 029712;
    MakeRoutineFrame 0;
    Jump: 046755
  }
LocReturn 029712:
  PushStack call_result;
  TraceOperation 029717 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 029718:
  TraceOperation 029718 (Jz (Var (Global 232)) (Branch F (Dloc 029736)));
  Let b1 = M[008372];
  Let b2 = M[008373];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 029721 (Print_ret "Not until you do something.");
    GamePrint "Not until you do something.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 029736
  }
LocOp 029736:
  TraceOperation 029736 (Je [Var (Global 232),Con 64,Con 69,Con 105] (Branch T (Dloc 029776)));
  Let b1 = M[008372];
  Let b2 = M[008373];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),64),Equal(MakeHiLo(b1,b2),69)),Equal(MakeHiLo(b1,b2),105))) {
    Jump: 029776
  } else {
    TraceOperation 029743 (Je [Var (Global 232),Con 174,Con 177,Con 178] (Branch T (Dloc 029776)));
    Let b3 = M[008372];
    Let b4 = M[008373];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),174),Equal(MakeHiLo(b3,b4),177)),Equal(MakeHiLo(b3,b4),178))) {
      Jump: 029776
    } else {
      TraceOperation 029750 (Je [Var (Global 232),Con 166,Con 21,Con 175] (Branch T (Dloc 029776)));
      Let b5 = M[008372];
      Let b6 = M[008373];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),166),Equal(MakeHiLo(b5,b6),21)),Equal(MakeHiLo(b5,b6),175))) {
        Jump: 029776
      } else {
        TraceOperation 029757 (Je [Var (Global 232),Con 22,Con 23,Con 5] (Branch T (Dloc 029776)));
        Let b7 = M[008372];
        Let b8 = M[008373];
        if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),22),Equal(MakeHiLo(b7,b8),23)),Equal(MakeHiLo(b7,b8),5))) {
          Jump: 029776
        } else {
          TraceOperation 029764 (Je [Var (Global 232),Con 101,Con 150,Con 106] (Branch T (Dloc 029776)));
          Let b9 = M[008372];
          Let b10 = M[008373];
          if (LogOr(LogOr(Equal(MakeHiLo(b9,b10),101),Equal(MakeHiLo(b9,b10),150)),Equal(MakeHiLo(b9,b10),106))) {
            Jump: 029776
          } else {
            TraceOperation 029771 (Je [Var (Global 232),Con 31] (Branch F (Dloc 029857)));
            Let b11 = M[008372];
            Let b12 = M[008373];
            if (Equal(MakeHiLo(b11,b12),31)) {
              Jump: 029776
            } else {
              Jump: 029857
            }
          }
        }
      }
    }
  }
LocOp 029776:
  TraceOperation 029776 (Print "Sorry, the Galactic Compendium on Interactive Fiction prohibits the use of AGAIN after your previous action.");
  GamePrint "Sorry, the Galactic Compendium on Interactive Fiction prohibits the use of AGAIN after your previous action.";
  TraceOperation 029851 New_line;
  GamePrint "\n";
  TraceOperation 029852 (Store (Con 219) (Con 0));
  SetByte 008314 0;
  SetByte 008315 0;
  TraceOperation 029855 (Ret (Var (Global 203)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult MakeHiLo(b1,b2);
  JumpIndirect: (return) return_address_3
LocOp 029857:
  TraceOperation 029857 (Je [Con 46,Var (Global 231),Var (Global 230)] (Branch F (Dloc 029872)));
  Let b1 = M[008370];
  Let b2 = M[008371];
  Let b3 = M[008368];
  Let b4 = M[008369];
  if (LogOr(Equal(46,MakeHiLo(b1,b2)),Equal(46,MakeHiLo(b3,b4)))) {
    TraceOperation 029863 (Print_ret "You can't see that here.");
    GamePrint "You can't see that here.\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 029872
  }
LocOp 029872:
  TraceOperation 029872 (Je [Var (Global 232),Con 169] (Branch F (Dloc 029883)));
  Let b1 = M[008372];
  Let b2 = M[008373];
  if (Equal(MakeHiLo(b1,b2),169)) {
    TraceOperation 029876 (Call (Floc 043620) [Var (Global 231)] Sp);
    Let b3 = M[008370];
    Let b4 = M[008371];
    PushFrame;
    PushReturnAddress 029876;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    Jump: 029883
  }
LocReturn 029876:
  PushStack call_result;
  TraceOperation 029882 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 029883:
  TraceOperation 029883 (Jz (Var (Global 231)) (Branch T (Dloc 029901)));
  Let b1 = M[008370];
  Let b2 = M[008371];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 029901
  } else {
    TraceOperation 029886 (Call (Floc 043370) [Var (Global 231)] Sp);
    Let b3 = M[008370];
    Let b4 = M[008371];
    PushFrame;
    PushReturnAddress 029886;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043375
  }
LocReturn 029886:
  PushStack call_result;
  TraceOperation 029892 (Jz (Var Sp) (Branch F (Dloc 029901)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 029895 (Push (Var (Global 231)));
    Let b2 = M[008370];
    Let b3 = M[008371];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 029898 (Jump 029922);
    Jump: 029922
  } else {
    Jump: 029901
  }
LocOp 029901:
  TraceOperation 029901 (Jz (Var (Global 230)) (Branch T (Dloc 029919)));
  Let b1 = M[008368];
  Let b2 = M[008369];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 029919
  } else {
    TraceOperation 029904 (Call (Floc 043370) [Var (Global 230)] Sp);
    Let b3 = M[008368];
    Let b4 = M[008369];
    PushFrame;
    PushReturnAddress 029904;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043375
  }
LocReturn 029904:
  PushStack call_result;
  TraceOperation 029910 (Jz (Var Sp) (Branch F (Dloc 029919)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 029913 (Push (Var (Global 230)));
    Let b2 = M[008368];
    Let b3 = M[008369];
    PushStack MakeHiLo(b2,b3);
    TraceOperation 029916 (Jump 029922);
    Jump: 029922
  } else {
    Jump: 029919
  }
LocOp 029919:
  TraceOperation 029919 (Push (Con 0));
  PushStack 0;
  Jump: 029922
LocOp 029922:
  TraceOperation 029922 (Store (Con 1) (Var Sp));
  PopStack popped1;
  SetLocal 1 popped1;
  TraceOperation 029925 (Jz (Var (Local 1)) (Branch T (Dloc 029976)));
  GetLocal 1 local1_2;
  if (IsZero(local1_2)) {
    Jump: 029976
  } else {
    TraceOperation 029928 (Je [Var (Local 1),Con 217] (Branch T (Dloc 029976)));
    GetLocal 1 local1_3;
    if (Equal(local1_3,217)) {
      Jump: 029976
    } else {
      TraceOperation 029932 (Print "You can't see");
      GamePrint "You can't see";
      TraceOperation 029939 (Jz (Var (Local 2)) (Branch T (Dloc 029957)));
      GetLocal 2 local2_4;
      if (IsZero(local2_4)) {
        Jump: 029957
      } else {
        TraceOperation 029942 (Print " any ");
        GamePrint " any ";
        TraceOperation 029947 (Print_obj (Var (Local 1)));
        GetLocal 1 local1_5;
        Let b6 = M[Offset(Offset(000751,Mul(local1_5,9)),7)];
        Let b7 = M[Offset(Offset(Offset(000751,Mul(local1_5,9)),7),1)];
        Let b8 = M[Address(MakeHiLo(b6,b7))];
        Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
        GamePrint ite_res9;
        TraceOperation 029949 (Print " here.");
        GamePrint " here.";
        TraceOperation 029954 New_line;
        GamePrint "\n";
        TraceOperation 029955 (Ret (Con 2));
        PopFrame;
        PopReturnAddress return_address_10;
        SetResult 2;
        JumpIndirect: (return) return_address_10
      }
    }
  }
LocOp 029957:
  TraceOperation 029957 (Call (Floc 043738) [Var (Local 1),Con 1] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 029957;
  SetLocal 1 local1_1;
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 029957:
  PushStack call_result;
  TraceOperation 029964 (Print " anymore.");
  GamePrint " anymore.";
  TraceOperation 029973 New_line;
  GamePrint "\n";
  TraceOperation 029974 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
LocOp 029976:
  TraceOperation 029976 (Jz (Var (Global 228)) (Branch T (Dloc 029982)));
  Let b1 = M[008364];
  Let b2 = M[008365];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 029982
  } else {
    TraceOperation 029979 (Store (Con 220) (Con 1));
    SetByte 008316 0;
    SetByte 008317 1;
    Jump: 029982
  }
LocOp 029982:
  TraceOperation 029982 (Call (Floc 022042) [Var (Global 232),Var (Global 231),Var (Global 230)] Sp);
  Let b1 = M[008372];
  Let b2 = M[008373];
  Let b3 = M[008370];
  Let b4 = M[008371];
  Let b5 = M[008368];
  Let b6 = M[008369];
  PushFrame;
  PushReturnAddress 029982;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 MakeHiLo(b5,b6);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 029982:
  PushStack call_result;
  TraceOperation 029990 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 029992:
  MakeRoutineFrame 0;
  Jump: 029993
LocOp 029993:
  TraceOperation 029993 (Je [Var (Global 201),Con 217] (Branch F (Dloc 030005)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 029997 (Call (Floc 022042) [Con 167,Con 30] Sp);
    PushFrame;
    PushReturnAddress 029997;
    SetLocal 1 167;
    SetLocal 2 30;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 030005
  }
LocReturn 029997:
  PushStack call_result;
  TraceOperation 030004 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 030005:
  TraceOperation 030005 (Print "I don't think");
  GamePrint "I don't think";
  TraceOperation 030012 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 030012;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 030012:
  PushStack call_result;
  TraceOperation 030019 (Print_ret " is sleeping.");
  GamePrint " is sleeping.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030030:
  MakeRoutineFrame 0;
  Jump: 030031
LocOp 030031:
  TraceOperation 030031 (Jz (Var (Global 213)) (Branch T (Dloc 030055)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 030055
  } else {
    TraceOperation 030034 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    Let b5 = M[008292];
    Let b6 = M[008293];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 030038 (Je [Var Sp,Con 20420] (Branch F (Dloc 030055)));
    PopStack popped9;
    if (Equal(popped9,20420)) {
      TraceOperation 030044 (Call (Floc 040748) [] Sp);
      PushFrame;
      PushReturnAddress 030044;
      MakeRoutineFrame 0;
      Jump: 040749
    } else {
      Jump: 030055
    }
  }
LocReturn 030044:
  PushStack call_result;
  TraceOperation 030049 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 030049;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 030049:
  PushStack call_result;
  TraceOperation 030054 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 030055:
  TraceOperation 030055 (Jz (Var (Global 213)) (Branch T (Dloc 030079)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 030079
  } else {
    TraceOperation 030058 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    Let b5 = M[008292];
    Let b6 = M[008293];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 030062 (Je [Var Sp,Con 17333] (Branch F (Dloc 030079)));
    PopStack popped9;
    if (Equal(popped9,17333)) {
      TraceOperation 030068 (Call (Floc 035052) [] Sp);
      PushFrame;
      PushReturnAddress 030068;
      MakeRoutineFrame 0;
      Jump: 035053
    } else {
      Jump: 030079
    }
  }
LocReturn 030068:
  PushStack call_result;
  TraceOperation 030073 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 030073;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 030073:
  PushStack call_result;
  TraceOperation 030078 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 030079:
  TraceOperation 030079 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 030094)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 030083 (Call (Floc 036558) [] Sp);
    PushFrame;
    PushReturnAddress 030083;
    MakeRoutineFrame 1;
    SetLocal 1 0;
    Jump: 036561
  } else {
    Jump: 030094
  }
LocReturn 030083:
  PushStack call_result;
  TraceOperation 030088 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 030088;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 030088:
  PushStack call_result;
  TraceOperation 030093 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 030094:
  TraceOperation 030094 (Print "Nobody is awaiting your answer.");
  GamePrint "Nobody is awaiting your answer.";
  TraceOperation 030115 New_line;
  GamePrint "\n";
  TraceOperation 030116 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 030116;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 030116:
  PushStack call_result;
  TraceOperation 030121 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 030122:
  MakeRoutineFrame 0;
  Jump: 030123
LocOp 030123:
  TraceOperation 030123 (Call (Floc 020662) [Con -24890] Sp);
  PushFrame;
  PushReturnAddress 030123;
  SetLocal 1 -24890;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 020671
LocReturn 030123:
  PushStack call_result;
  TraceOperation 030130 (Jz (Var Sp) (Branch T (Dloc 030162)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 030162
  } else {
    TraceOperation 030133 (Print_ret "If you want to enjoy the poetry, just type that.");
    GamePrint "If you want to enjoy the poetry, just type that.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 030162:
  TraceOperation 030162 (Print_ret "Thank you, thank you.");
  GamePrint "Thank you, thank you.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030178:
  MakeRoutineFrame 0;
  Jump: 030179
LocOp 030179:
  TraceOperation 030179 (Call (Floc 020662) [Con -24890] Sp);
  PushFrame;
  PushReturnAddress 030179;
  SetLocal 1 -24890;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 020671
LocReturn 030179:
  PushStack call_result;
  TraceOperation 030186 (Jz (Var Sp) (Branch T (Dloc 030195)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 030195
  } else {
    TraceOperation 030189 (Call (Floc 030122) [] Sp);
    PushFrame;
    PushReturnAddress 030189;
    MakeRoutineFrame 0;
    Jump: 030123
  }
LocReturn 030189:
  PushStack call_result;
  TraceOperation 030194 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 030195:
  TraceOperation 030195 (Print_ret "Hey, I never get any appreciation! There's absolutely no job satisfaction in being a computer.");
  GamePrint "Hey, I never get any appreciation! There's absolutely no job satisfaction in being a computer.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030256:
  MakeRoutineFrame 0;
  Jump: 030257
LocOp 030257:
  TraceOperation 030257 (Je [Var (Global 201),Con 30] (Branch F (Dloc 030269)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 030261 (Call (Floc 022042) [Con 15,Con 30] Sp);
    PushFrame;
    PushReturnAddress 030261;
    SetLocal 1 15;
    SetLocal 2 30;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 030269
  }
LocReturn 030261:
  PushStack call_result;
  TraceOperation 030268 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 030269:
  TraceOperation 030269 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 030345)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 030274 (Print "A long silence tells you that");
    GamePrint "A long silence tells you that";
    TraceOperation 030295 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 030295;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 030345
  }
LocReturn 030295:
  PushStack call_result;
  TraceOperation 030302 (Print " isn't interested in talking about");
  GamePrint " isn't interested in talking about";
  TraceOperation 030323 (Jin (Var (Global 202)) (Con 217) (Branch F (Dloc 030335)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(217,Widen(b3))) {
    TraceOperation 030327 (Print " that");
    GamePrint " that";
    TraceOperation 030332 (Jump 030342);
    Jump: 030342
  } else {
    Jump: 030335
  }
LocOp 030335:
  TraceOperation 030335 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 030335;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 030335:
  PushStack call_result;
  Jump: 030342
LocOp 030342:
  TraceOperation 030342 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 030345:
  TraceOperation 030345 (Call (Floc 022042) [Con 15,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 030345;
  SetLocal 1 15;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 030345:
  PushStack call_result;
  TraceOperation 030352 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030354:
  MakeRoutineFrame 0;
  Jump: 030355
LocOp 030355:
  TraceOperation 030355 (Print "Unsurprisingly,");
  GamePrint "Unsurprisingly,";
  TraceOperation 030368 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 030368;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 030368:
  PushStack call_result;
  TraceOperation 030375 (Print_ret " doesn't oblige.");
  GamePrint " doesn't oblige.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030384:
  MakeRoutineFrame 0;
  Jump: 030385
LocOp 030385:
  TraceOperation 030385 (Call (Floc 043716) [Con -11784] Sp);
  PushFrame;
  PushReturnAddress 030385;
  SetLocal 1 -11784;
  MakeRoutineFrame 1;
  Jump: 043719
LocReturn 030385:
  PushStack call_result;
  TraceOperation 030392 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 030394:
  MakeRoutineFrame 0;
  Jump: 030395
LocOp 030395:
  TraceOperation 030395 (Call (Floc 031422) [] Sp);
  PushFrame;
  PushReturnAddress 030395;
  MakeRoutineFrame 0;
  Jump: 031423
LocReturn 030395:
  PushStack call_result;
  TraceOperation 030400 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 030402:
  MakeRoutineFrame 0;
  Jump: 030403
LocOp 030403:
  TraceOperation 030403 (Call (Floc 031422) [] Sp);
  PushFrame;
  PushReturnAddress 030403;
  MakeRoutineFrame 0;
  Jump: 031423
LocReturn 030403:
  PushStack call_result;
  TraceOperation 030408 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 030410:
  MakeRoutineFrame 0;
  Jump: 030411
LocOp 030411:
  TraceOperation 030411 (Jz (Var (Global 204)) (Branch T (Dloc 030422)));
  Let b1 = M[008316];
  Let b2 = M[008317];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 030422
  } else {
    TraceOperation 030414 (Call (Floc 022042) [Con 144,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 030414;
    SetLocal 1 144;
    SetLocal 2 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 030414:
  PushStack call_result;
  TraceOperation 030421 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 030422:
  TraceOperation 030422 (Get_parent (Con 31) Sp);
  Let b1 = M[001034];
  PushStack Widen(b1);
  TraceOperation 030425 (Je [Var (Global 201),Var Sp] (Branch F Dfalse));
  Let b2 = M[008310];
  Let b3 = M[008311];
  PopStack popped4;
  if (Equal(MakeHiLo(b2,b3),popped4)) {
    TraceOperation 030429 (Print_paddr (Var (Global 57)));
    Let b5 = M[008022];
    Let b6 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 030431 New_line;
    GamePrint "\n";
    TraceOperation 030432 Rtrue;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
--------------------------------------------------
LocRoutine 030434:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 030437
LocOp 030437:
  TraceOperation 030437 (Test_attr (Var (Global 201)) (Con 12) (Branch F (Dloc 030481)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,3)) {
    TraceOperation 030441 (Print "You are now in");
    GamePrint "You are now in";
    TraceOperation 030450 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 030450;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 030481
  }
LocReturn 030450:
  PushStack call_result;
  TraceOperation 030457 (Print ".");
  GamePrint ".";
  TraceOperation 030460 New_line;
  GamePrint "\n";
  TraceOperation 030461 (Insert_obj (Var (Global 195)) (Var (Global 201)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[008310];
  Let b4 = M[008311];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {} else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
    } else {
      Let loop_var8 = Widen(b6);
      Label 9: {
        Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
        if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
        } else {
          Assign loop_var8 = Widen(b10);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
  Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
  TraceOperation 030464 (Je [Var (Global 0),Con 66] (Branch T (Dloc 030471)));
  Let b13 = M[007908];
  Let b14 = M[007909];
  if (Equal(MakeHiLo(b13,b14),66)) {
    Jump: 030471
  } else {
    TraceOperation 030468 (Store (Con 102) (Con 1));
    SetByte 008080 0;
    SetByte 008081 1;
    Jump: 030471
  }
LocOp 030471:
  TraceOperation 030471 (Get_prop (Var (Global 201)) (Con 29) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[000754];
      Let b10 = M[000755];
      PushStack MakeHiLo(b9,b10);
    } else {
      if (Equal(29,Widen(BwAnd(b8,31)))) {
        if (Equal(Add(Widen(ShiftR(b8,5)),1),2)) {
          Let b11 = M[Offset(Address(loop_var6),1)];
          Let b12 = M[Offset(Offset(Address(loop_var6),1),1)];
          PushStack MakeHiLo(b11,b12);
        } else {
          Let b13 = M[Offset(Address(loop_var6),1)];
          PushStack Widen(b13);
        }
      } else {
        Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
        Goto: Label 7
      }
    }
  }
  TraceOperation 030475 (Call (Fvar Sp) [Con 2] Sp);
  PopStack popped14;
  if (IsZeroAddress(PackedAddress Z3(popped14))) {
    PushStack 0;
    Jump: 030480
  } else {
    PushFrame;
    PushReturnAddress 030475;
    SetLocal 1 2;
    SetNumberActuals 1;
    JumpIndirect: (routine) PackedAddress Z3(popped14)
  }
LocReturn 030475:
  PushStack call_result;
  Jump: 030480
LocOp 030480:
  TraceOperation 030480 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 030481:
  TraceOperation 030481 (Print "You can't get into");
  GamePrint "You can't get into";
  TraceOperation 030490 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 030490;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 030490:
  PushStack call_result;
  TraceOperation 030497 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030500:
  MakeRoutineFrame 0;
  Jump: 030501
LocOp 030501:
  TraceOperation 030501 (Jz (Var (Global 202)) (Branch F (Dloc 030558)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 030504 (Call (Floc 043468) [Con 19] Sp);
    PushFrame;
    PushReturnAddress 030504;
    SetLocal 1 19;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    Jump: 030558
  }
LocReturn 030504:
  PushStack call_result;
  TraceOperation 030510 (Jz (Var Sp) (Branch T (Dloc 030533)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 030533
  } else {
    TraceOperation 030513 (Print "(with the ");
    GamePrint "(with the ";
    TraceOperation 030518 (Print_obj (Con 19));
    Let b2 = M[000929];
    Let b3 = M[000930];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 030520 (Print ")");
    GamePrint ")";
    TraceOperation 030523 New_line;
    GamePrint "\n";
    TraceOperation 030524 (Call (Floc 022042) [Con 29,Var (Global 201),Con 19] Sp);
    Let b6 = M[008310];
    Let b7 = M[008311];
    PushFrame;
    PushReturnAddress 030524;
    SetLocal 1 29;
    SetLocal 2 MakeHiLo(b6,b7);
    SetLocal 3 19;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 022057
  }
LocReturn 030524:
  PushStack call_result;
  TraceOperation 030532 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 030533:
  TraceOperation 030533 (Print "You have nothing to brush");
  GamePrint "You have nothing to brush";
  TraceOperation 030544 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 030544;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 030544:
  PushStack call_result;
  TraceOperation 030551 (Print_ret " with.");
  GamePrint " with.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 030558:
  TraceOperation 030558 (Je [Var (Global 202),Con 19] (Branch T (Dloc 030576)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),19)) {
    Jump: 030576
  } else {
    TraceOperation 030562 (Print "With");
    GamePrint "With";
    TraceOperation 030567 (Call (Floc 043738) [Var (Global 202)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame;
    PushReturnAddress 030567;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043743
  }
LocReturn 030567:
  PushStack call_result;
  TraceOperation 030573 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 030576:
  TraceOperation 030576 (Je [Var (Global 201),Con 35] (Branch T (Dloc 030608)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),35)) {
    Jump: 030608
  } else {
    TraceOperation 030580 (Print "In general, ");
    GamePrint "In general, ";
    TraceOperation 030591 (Print_obj (Con 19));
    Let b3 = M[000929];
    Let b4 = M[000930];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 030593 (Print_ret "es are meant for teeth.");
    GamePrint "es are meant for teeth.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  }
LocOp 030608:
  TraceOperation 030608 (Print_ret "Congratulations on your fine dental hygiene.");
  GamePrint "Congratulations on your fine dental hygiene.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030638:
  MakeRoutineFrame 0;
  Jump: 030639
LocOp 030639:
  TraceOperation 030639 (Print "Sorry,");
  GamePrint "Sorry,";
  TraceOperation 030646 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 030646;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 030646:
  PushStack call_result;
  TraceOperation 030653 (Print_ret " isn't for sale.");
  GamePrint " isn't for sale.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030662:
  MakeRoutineFrame 0;
  Jump: 030663
LocOp 030663:
  TraceOperation 030663 (Je [Var (Global 0),Con 168] (Branch T (Dloc 030678)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    Jump: 030678
  } else {
    TraceOperation 030667 (Print_ret "There's no phone here!");
    GamePrint "There's no phone here!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 030678:
  TraceOperation 030678 (Jz (Var (Global 144)) (Branch T (Dloc 030708)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 030708
  } else {
    TraceOperation 030681 (Print "You reach for the receiver. ");
    GamePrint "You reach for the receiver. ";
    TraceOperation 030698 (Call (Floc 020718) [Var (Global 150)] Sp);
    Let b3 = M[008208];
    Let b4 = M[008209];
    PushFrame;
    PushReturnAddress 030698;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 1;
    Jump: 020721
  }
LocReturn 030698:
  PushStack call_result;
  TraceOperation 030704 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 030706 New_line;
  GamePrint "\n";
  TraceOperation 030707 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 030708:
  TraceOperation 030708 (Test_attr (Con 162) (Con 5) (Branch F (Dloc 030731)));
  Let b1 = M[002209];
  if (TestBit(b1,2)) {
    TraceOperation 030712 (Print_ret "The cable is down, remember?");
    GamePrint "The cable is down, remember?\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 030731
  }
LocOp 030731:
  TraceOperation 030731 (Je [Var (Global 201),Con 54] (Branch F (Dloc 030833)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 030736 (Set_attr (Con 162) (Con 5));
    Let b3 = M[002209];
    SetByte 002209 SetBit(b3,2);
    TraceOperation 030739 (Print "You explain your situation. The desk sergeant promises to send someone over soon, and says not to try anything crazy in the meantime, like lying down in front of the ");
    GamePrint "You explain your situation. The desk sergeant promises to send someone over soon, and says not to try anything crazy in the meantime, like lying down in front of the ";
    TraceOperation 030824 (Print_obj (Con 166));
    Let b4 = M[002252];
    Let b5 = M[002253];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 030826 (Print ".");
    GamePrint ".";
    TraceOperation 030829 (Print_paddr (Var (Global 22)));
    Let b8 = M[007952];
    Let b9 = M[007953];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b8,b9)));
    TraceOperation 030831 New_line;
    GamePrint "\n";
    TraceOperation 030832 Rtrue;
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 1;
    JumpIndirect: (return) return_address_10
  } else {
    Jump: 030833
  }
LocOp 030833:
  TraceOperation 030833 (Je [Var (Global 201),Con 173] (Branch F (Dloc 030858)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),173)) {
    TraceOperation 030837 (Print_ret "Who do you think you are, E.T.?");
    GamePrint "Who do you think you are, E.T.?\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 030858
  }
LocOp 030858:
  TraceOperation 030858 (Je [Var (Global 201),Con 81] (Branch F (Dloc 030868)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),81)) {
    TraceOperation 030862 (Call (Floc 033832) [] Sp);
    PushFrame;
    PushReturnAddress 030862;
    MakeRoutineFrame 0;
    Jump: 033833
  } else {
    Jump: 030868
  }
LocReturn 030862:
  PushStack call_result;
  TraceOperation 030867 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 030868:
  TraceOperation 030868 (Print_ret "You don't know the number.");
  GamePrint "You don't know the number.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030884:
  MakeRoutineFrame 0;
  Jump: 030885
LocOp 030885:
  TraceOperation 030885 (Je [Var (Global 202),Con 162] (Branch T (Dloc 030912)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),162)) {
    Jump: 030912
  } else {
    TraceOperation 030889 (Print "You can't use");
    GamePrint "You can't use";
    TraceOperation 030896 (Call (Floc 043738) [Var (Global 202)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame;
    PushReturnAddress 030896;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043743
  }
LocReturn 030896:
  PushStack call_result;
  TraceOperation 030902 (Print " as a ");
  GamePrint " as a ";
  TraceOperation 030907 (Print_obj (Con 162));
  Let b1 = M[002216];
  Let b2 = M[002217];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 030909 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 030912:
  TraceOperation 030912 (Call (Floc 022042) [Con 105,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 030912;
  SetLocal 1 105;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 030912:
  PushStack call_result;
  TraceOperation 030919 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 030920:
  MakeRoutineFrame 0;
  Jump: 030921
LocOp 030921:
  TraceOperation 030921 (Call (Floc 043468) [Con 96] Sp);
  PushFrame;
  PushReturnAddress 030921;
  SetLocal 1 96;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 030921:
  PushStack call_result;
  TraceOperation 030927 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 030930 (Print_ret "You have no carving instrument.");
    GamePrint "You have no carving instrument.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 030950:
  MakeRoutineFrame 0;
  Jump: 030951
LocOp 030951:
  TraceOperation 030951 (Call (Floc 020718) [Var (Global 148)] Sp);
  Let b1 = M[008204];
  Let b2 = M[008205];
  PushFrame;
  PushReturnAddress 030951;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 020721
LocReturn 030951:
  PushStack call_result;
  TraceOperation 030957 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 030959 New_line;
  GamePrint "\n";
  TraceOperation 030960 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 030962:
  MakeRoutineFrame 0;
  Jump: 030963
LocOp 030963:
  TraceOperation 030963 (Je [Var (Global 0),Con 98] (Branch F (Dloc 031012)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),98)) {
    TraceOperation 030967 (Je [Var (Global 202),Con 96] (Branch F (Dloc 030980)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),96)) {
      TraceOperation 030971 (Call (Floc 022042) [Con 31,Var (Global 201),Con 97] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame;
      PushReturnAddress 030971;
      SetLocal 1 31;
      SetLocal 2 MakeHiLo(b5,b6);
      SetLocal 3 97;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 030980
    }
  } else {
    Jump: 031012
  }
LocReturn 030971:
  PushStack call_result;
  TraceOperation 030979 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 030980:
  TraceOperation 030980 (Print "No luck;");
  GamePrint "No luck;";
  TraceOperation 030989 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 030989;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 030989:
  PushStack call_result;
  TraceOperation 030996 (Print " doesn't even scratch the ");
  GamePrint " doesn't even scratch the ";
  TraceOperation 031007 (Print_obj (Con 97));
  Let b1 = M[001631];
  Let b2 = M[001632];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 031009 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 031012:
  TraceOperation 031012 (Print_ret "Huh?");
  GamePrint "Huh?\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031018:
  MakeRoutineFrame 0;
  Jump: 031019
LocOp 031019:
  TraceOperation 031019 (Print_ret "Use prepositions to indicate precisely what you want to do: LOOK AT the object, LOOK INSIDE it, LOOK UNDER it, etc.");
  GamePrint "Use prepositions to indicate precisely what you want to do: LOOK AT the object, LOOK INSIDE it, LOOK UNDER it, etc.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031110:
  MakeRoutineFrame 0;
  Jump: 031111
LocOp 031111:
  TraceOperation 031111 (Je [Var (Global 201),Con 29,Con 217] (Branch F (Dloc 031150)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(Equal(MakeHiLo(b1,b2),29),Equal(MakeHiLo(b1,b2),217))) {
    TraceOperation 031117 (Je [Var (Global 0),Con 168] (Branch F (Dloc 031150)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),168)) {
      TraceOperation 031121 (Print "Just as you've got it all spick and span");
      GamePrint "Just as you've got it all spick and span";
      TraceOperation 031144 (Call (Floc 058488) [] Sp);
      PushFrame;
      PushReturnAddress 031144;
      MakeRoutineFrame 0;
      Jump: 058489
    } else {
      Jump: 031150
    }
  } else {
    Jump: 031150
  }
LocReturn 031144:
  PushStack call_result;
  TraceOperation 031149 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 031150:
  TraceOperation 031150 (Je [Var (Global 201),Con 35] (Branch F (Dloc 031162)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),35)) {
    TraceOperation 031154 (Call (Floc 022042) [Con 29,Con 35] Sp);
    PushFrame;
    PushReturnAddress 031154;
    SetLocal 1 29;
    SetLocal 2 35;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 031162
  }
LocReturn 031154:
  PushStack call_result;
  TraceOperation 031161 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 031162:
  TraceOperation 031162 (Je [Var (Global 201),Con 139] (Branch F (Dloc 031169)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 031166 (Store (Con 148) (Con 0));
    SetByte 008172 0;
    SetByte 008173 0;
    Jump: 031169
  } else {
    Jump: 031169
  }
LocOp 031169:
  TraceOperation 031169 (Print_ret "It is now much cleaner.");
  GamePrint "It is now much cleaner.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031186:
  MakeRoutineFrame 0;
  Jump: 031187
LocOp 031187:
  TraceOperation 031187 (Je [Var (Global 201),Con 217] (Branch F (Dloc 031198)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 031191 (Call (Floc 043620) [Con 20] Sp);
    PushFrame;
    PushReturnAddress 031191;
    SetLocal 1 20;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    Jump: 031198
  }
LocReturn 031191:
  PushStack call_result;
  TraceOperation 031197 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 031198:
  TraceOperation 031198 (Call (Floc 030950) [] Sp);
  PushFrame;
  PushReturnAddress 031198;
  MakeRoutineFrame 0;
  Jump: 030951
LocReturn 031198:
  PushStack call_result;
  TraceOperation 031203 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 031204:
  MakeRoutineFrame 0;
  Jump: 031205
LocOp 031205:
  TraceOperation 031205 (Je [Var (Global 201),Con 217] (Branch F (Dloc 031216)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 031209 (Call (Floc 043620) [Con 18] Sp);
    PushFrame;
    PushReturnAddress 031209;
    SetLocal 1 18;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    Jump: 031216
  }
LocReturn 031209:
  PushStack call_result;
  TraceOperation 031215 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 031216:
  TraceOperation 031216 (Call (Floc 030950) [] Sp);
  PushFrame;
  PushReturnAddress 031216;
  MakeRoutineFrame 0;
  Jump: 030951
LocReturn 031216:
  PushStack call_result;
  TraceOperation 031221 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 031222:
  MakeRoutineFrame 0;
  Jump: 031223
LocOp 031223:
  TraceOperation 031223 (Test_attr (Var (Global 201)) (Con 12) (Branch F (Dloc 031235)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,3)) {
    TraceOperation 031227 (Call (Floc 022042) [Con 28,Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 031227;
    SetLocal 1 28;
    SetLocal 2 MakeHiLo(b4,b5);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 031235
  }
LocReturn 031227:
  PushStack call_result;
  TraceOperation 031234 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 031235:
  TraceOperation 031235 (Print "You can't climb onto");
  GamePrint "You can't climb onto";
  TraceOperation 031246 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 031246;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 031246:
  PushStack call_result;
  TraceOperation 031253 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031256:
  MakeRoutineFrame 0;
  Jump: 031257
LocOp 031257:
  TraceOperation 031257 (Call (Floc 030950) [] Sp);
  PushFrame;
  PushReturnAddress 031257;
  MakeRoutineFrame 0;
  Jump: 030951
LocReturn 031257:
  PushStack call_result;
  TraceOperation 031262 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 031264:
  MakeRoutineFrame 0;
  Jump: 031265
LocOp 031265:
  TraceOperation 031265 (Je [Var (Global 201),Con 217] (Branch F (Dloc 031276)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 031269 (Call (Floc 043620) [Con 18] Sp);
    PushFrame;
    PushReturnAddress 031269;
    SetLocal 1 18;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    Jump: 031276
  }
LocReturn 031269:
  PushStack call_result;
  TraceOperation 031275 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 031276:
  TraceOperation 031276 (Call (Floc 030950) [] Sp);
  PushFrame;
  PushReturnAddress 031276;
  MakeRoutineFrame 0;
  Jump: 030951
LocReturn 031276:
  PushStack call_result;
  TraceOperation 031281 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 031282:
  MakeRoutineFrame 0;
  Jump: 031283
LocOp 031283:
  TraceOperation 031283 (Test_attr (Var (Global 201)) (Con 8) (Branch F (Dloc 031293)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,7)) {
    TraceOperation 031287 (Call (Floc 031360) [] Sp);
    PushFrame;
    PushReturnAddress 031287;
    MakeRoutineFrame 0;
    Jump: 031361
  } else {
    Jump: 031293
  }
LocReturn 031287:
  PushStack call_result;
  TraceOperation 031292 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 031293:
  TraceOperation 031293 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 031309)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 031297 (Je [Var (Global 201),Con 216,Con 209] (Branch T (Dloc 031309)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (LogOr(Equal(MakeHiLo(b4,b5),216),Equal(MakeHiLo(b4,b5),209))) {
      Jump: 031309
    } else {
      TraceOperation 031303 (Call (Floc 031360) [] Sp);
      PushFrame;
      PushReturnAddress 031303;
      MakeRoutineFrame 0;
      Jump: 031361
    }
  } else {
    Jump: 031309
  }
LocReturn 031303:
  PushStack call_result;
  TraceOperation 031308 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 031309:
  TraceOperation 031309 (Test_attr (Var (Global 201)) (Con 28) (Branch T (Dloc 031317)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    Jump: 031317
  } else {
    TraceOperation 031313 (Test_attr (Var (Global 201)) (Con 24) (Branch F (Dloc 031353)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,7)) {
      Jump: 031317
    } else {
      Jump: 031353
    }
  }
LocOp 031317:
  TraceOperation 031317 (Test_attr (Var (Global 201)) (Con 23) (Branch F (Dloc 031349)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    TraceOperation 031321 (Print "Okay,");
    GamePrint "Okay,";
    TraceOperation 031328 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 031328;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 031349
  }
LocReturn 031328:
  PushStack call_result;
  TraceOperation 031335 (Print " is now closed.");
  GamePrint " is now closed.";
  TraceOperation 031344 New_line;
  GamePrint "\n";
  TraceOperation 031345 (Clear_attr (Var (Global 201)) (Con 23));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2) ClearBit(b3,0);
  TraceOperation 031348 Rtrue;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult 1;
  JumpIndirect: (return) return_address_4
LocOp 031349:
  TraceOperation 031349 (Print_paddr (Var (Global 52)));
  Let b1 = M[008012];
  Let b2 = M[008013];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 031351 New_line;
  GamePrint "\n";
  TraceOperation 031352 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 031353:
  TraceOperation 031353 (Call (Floc 057650) [] Sp);
  PushFrame;
  PushReturnAddress 031353;
  MakeRoutineFrame 0;
  Jump: 057651
LocReturn 031353:
  PushStack call_result;
  TraceOperation 031358 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 031360:
  MakeRoutineFrame 0;
  Jump: 031361
LocOp 031361:
  TraceOperation 031361 (Call (Floc 020718) [Var (Global 147)] Sp);
  Let b1 = M[008202];
  Let b2 = M[008203];
  PushFrame;
  PushReturnAddress 031361;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 020721
LocReturn 031361:
  PushStack call_result;
  TraceOperation 031367 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 031369 New_line;
  GamePrint "\n";
  TraceOperation 031370 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 031372:
  MakeRoutineFrame 0;
  Jump: 031373
LocOp 031373:
  TraceOperation 031373 (Jz (Var (Global 202)) (Branch F (Dloc 031382)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 031376 (Call (Floc 030950) [] Sp);
    PushFrame;
    PushReturnAddress 031376;
    MakeRoutineFrame 0;
    Jump: 030951
  } else {
    Jump: 031382
  }
LocReturn 031376:
  PushStack call_result;
  TraceOperation 031381 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 031382:
  TraceOperation 031382 (Print "I doubt that the \"cutting edge\" of");
  GamePrint "I doubt that the \"cutting edge\" of";
  TraceOperation 031405 (Call (Floc 043738) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 031405;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 031405:
  PushStack call_result;
  TraceOperation 031411 (Print_ret " is adequate.");
  GamePrint " is adequate.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031422:
  MakeRoutineFrame 0;
  Jump: 031423
LocOp 031423:
  TraceOperation 031423 (Call (Floc 020718) [Var (Global 146)] Sp);
  Let b1 = M[008200];
  Let b2 = M[008201];
  PushFrame;
  PushReturnAddress 031423;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 020721
LocReturn 031423:
  PushStack call_result;
  TraceOperation 031429 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 031431 New_line;
  GamePrint "\n";
  TraceOperation 031432 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 031434:
  MakeRoutineFrame 0;
  Jump: 031435
LocOp 031435:
  TraceOperation 031435 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 031465)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,6)) {
    TraceOperation 031439 (Call (Floc 043406) [Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 031439;
    SetLocal 1 MakeHiLo(b4,b5);
    MakeRoutineFrame 1;
    Jump: 043409
  } else {
    Jump: 031465
  }
LocReturn 031439:
  PushStack call_result;
  TraceOperation 031445 (Je [Var Sp,Var (Global 0)] (Branch F (Dloc 031465)));
  PopStack popped1;
  Let b2 = M[007908];
  Let b3 = M[007909];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    TraceOperation 031449 (Jin (Var (Global 201)) (Var (Global 0)) (Branch T (Dloc 031465)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[007908];
    Let b7 = M[007909];
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
    if (Equal(MakeHiLo(b6,b7),Widen(b8))) {
      Jump: 031465
    } else {
      TraceOperation 031453 (Jin (Var (Global 201)) (Con 31) (Branch T (Dloc 031465)));
      Let b9 = M[008310];
      Let b10 = M[008311];
      Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),4)];
      if (Equal(31,Widen(b11))) {
        Jump: 031465
      } else {
        TraceOperation 031457 (Call (Floc 022042) [Con 124,Var (Global 201)] Sp);
        Let b12 = M[008310];
        Let b13 = M[008311];
        PushFrame;
        PushReturnAddress 031457;
        SetLocal 1 124;
        SetLocal 2 MakeHiLo(b12,b13);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      }
    }
  } else {
    Jump: 031465
  }
LocReturn 031457:
  PushStack call_result;
  TraceOperation 031464 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 031465:
  TraceOperation 031465 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 031468 (Je [Var Sp,Var (Global 201)] (Branch T (Dloc 031477)));
  PopStack popped4;
  Let b5 = M[008310];
  Let b6 = M[008311];
  if (Equal(popped4,MakeHiLo(b5,b6))) {
    Jump: 031477
  } else {
    TraceOperation 031472 (Print_paddr (Var (Global 57)));
    Let b7 = M[008022];
    Let b8 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 031474 New_line;
    GamePrint "\n";
    TraceOperation 031475 (Ret (Con 2));
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 2;
    JumpIndirect: (return) return_address_9
  }
LocOp 031477:
  TraceOperation 031477 (Call (Floc 058110) [] Sp);
  PushFrame;
  PushReturnAddress 031477;
  MakeRoutineFrame 0;
  Jump: 058111
LocReturn 031477:
  PushStack call_result;
  TraceOperation 031482 (Store (Con 102) (Con 0));
  SetByte 008080 0;
  SetByte 008081 0;
  TraceOperation 031485 (Insert_obj (Var (Global 195)) (Var (Global 0)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {} else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
    } else {
      Let loop_var8 = Widen(b6);
      Label 9: {
        Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
        if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
        } else {
          Assign loop_var8 = Widen(b10);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
  Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
  TraceOperation 031488 Rtrue;
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 1;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 031490:
  MakeRoutineFrame 0;
  Jump: 031491
LocOp 031491:
  TraceOperation 031491 (Print "You doze for several minutes. ");
  GamePrint "You doze for several minutes. ";
  TraceOperation 031510 (Call (Floc 040434) [] Sp);
  PushFrame;
  PushReturnAddress 031510;
  MakeRoutineFrame 1;
  SetLocal 1 3;
  Jump: 040437
LocReturn 031510:
  PushStack call_result;
  TraceOperation 031515 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 031516:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 031519
LocOp 031519:
  TraceOperation 031519 (Print_ret "You can't drink that!");
  GamePrint "You can't drink that!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031532:
  MakeRoutineFrame 0;
  Jump: 031533
LocOp 031533:
  TraceOperation 031533 (Call (Floc 031360) [] Sp);
  PushFrame;
  PushReturnAddress 031533;
  MakeRoutineFrame 0;
  Jump: 031361
LocReturn 031533:
  PushStack call_result;
  TraceOperation 031538 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 031540:
  MakeRoutineFrame 0;
  Jump: 031541
LocOp 031541:
  TraceOperation 031541 (Call (Floc 041208) [] Sp);
  PushFrame;
  PushReturnAddress 031541;
  MakeRoutineFrame 0;
  Jump: 041209
LocReturn 031541:
  PushStack call_result;
  TraceOperation 031546 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 031549 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 031550:
  MakeRoutineFrame 0;
  Jump: 031551
LocOp 031551:
  TraceOperation 031551 (Je [Var (Global 0),Con 81] (Branch F (Dloc 031608)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),81)) {
    TraceOperation 031555 (Je [Var (Global 201),Con 156] (Branch T (Dloc 031562)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),156)) {
      Jump: 031562
    } else {
      TraceOperation 031559 (Store (Con 113) (Var (Global 201)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      SetByte 008102 b5;
      SetByte 008103 b6;
      Jump: 031562
    }
  } else {
    Jump: 031608
  }
LocOp 031562:
  TraceOperation 031562 (Insert_obj (Var (Global 201)) (Con 219));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),MakeHiLo(b1,b2))) {
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),MakeHiLo(b1,b2))) {
          Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 219;
  Let b10 = M[002728];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b10));
  SetByte 002728 b2;
  TraceOperation 031565 (Print "As you release");
  GamePrint "As you release";
  TraceOperation 031576 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b11 = M[008310];
  Let b12 = M[008311];
  PushFrame;
  PushReturnAddress 031576;
  SetLocal 1 MakeHiLo(b11,b12);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 031576:
  PushStack call_result;
  TraceOperation 031583 (Print_ret ", it vanishes into the maze of synapses.");
  GamePrint ", it vanishes into the maze of synapses.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 031608:
  TraceOperation 031608 (Je [Var (Global 0),Con 175] (Branch F (Dloc 031670)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),175)) {
    TraceOperation 031612 (Insert_obj (Var (Global 201)) (Con 219));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
    if (IsZero(Widen(b5))) {} else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b6),MakeHiLo(b3,b4))) {
        Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
      } else {
        Let loop_var8 = Widen(b6);
        Label 9: {
          Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
          if (Equal(Widen(b10),MakeHiLo(b3,b4))) {
            Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
            SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
          } else {
            Assign loop_var8 = Widen(b10);
            Goto: Label 9
          }
        }
      }
    }
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) 219;
    Let b12 = M[002728];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b12));
    SetByte 002728 b4;
    TraceOperation 031615 (Print "If you recall, the floor is just an open mesh, and");
    GamePrint "If you recall, the floor is just an open mesh, and";
    TraceOperation 031646 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b13 = M[008310];
    Let b14 = M[008311];
    PushFrame;
    PushReturnAddress 031646;
    SetLocal 1 MakeHiLo(b13,b14);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 031670
  }
LocReturn 031646:
  PushStack call_result;
  TraceOperation 031653 (Print_ret " drops through and disappears.");
  GamePrint " drops through and disappears.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 031670:
  TraceOperation 031670 (Insert_obj (Var (Global 201)) (Var (Global 0)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {} else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
    } else {
      Let loop_var8 = Widen(b6);
      Label 9: {
        Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
        if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
        } else {
          Assign loop_var8 = Widen(b10);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
  Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
  TraceOperation 031673 (Print_ret "Dropped.");
  GamePrint "Dropped.\n";
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 1;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 031682:
  MakeRoutineFrame 0;
  Jump: 031683
LocOp 031683:
  TraceOperation 031683 (Print "Stuffing");
  GamePrint "Stuffing";
  TraceOperation 031690 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 031690;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 031690:
  PushStack call_result;
  TraceOperation 031697 (Print_ret " in your mouth would do little to help at this point.");
  GamePrint " in your mouth would do little to help at this point.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031722:
  MakeRoutineFrame 0;
  Jump: 031723
LocOp 031723:
  TraceOperation 031723 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 031733)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 031727 (Call (Floc 034084) [] Sp);
    PushFrame;
    PushReturnAddress 031727;
    MakeRoutineFrame 0;
    Jump: 034085
  } else {
    Jump: 031733
  }
LocReturn 031727:
  PushStack call_result;
  TraceOperation 031732 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 031733:
  TraceOperation 031733 (Print "Not difficult at all, considering how enjoyable");
  GamePrint "Not difficult at all, considering how enjoyable";
  TraceOperation 031766 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 031766;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 031766:
  PushStack call_result;
  TraceOperation 031773 (Print_ret " is.");
  GamePrint " is.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031778:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 031781
LocOp 031781:
  TraceOperation 031781 (Call (Floc 043552) [Var (Global 0),Con 12] (Local 1));
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame;
  PushReturnAddress 031781;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 12;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 043559
LocReturn 031781:
  SetLocal 1 call_result;
  TraceOperation 031788 (Jz (Var (Local 1)) (Branch T (Dloc 031799)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    Jump: 031799
  } else {
    TraceOperation 031791 (Call (Floc 022042) [Con 28,Var (Local 1)] Sp);
    GetLocal 1 local1_2;
    PushFrame;
    PushReturnAddress 031791;
    SetLocal 1 28;
    SetLocal 2 local1_2;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 031791:
  PushStack call_result;
  TraceOperation 031798 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 031799:
  TraceOperation 031799 (Call (Floc 043620) [Con 8] Sp);
  PushFrame;
  PushReturnAddress 031799;
  SetLocal 1 8;
  MakeRoutineFrame 1;
  Jump: 043623
LocReturn 031799:
  PushStack call_result;
  TraceOperation 031805 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 031806:
  MakeRoutineFrame 0;
  Jump: 031807
LocOp 031807:
  TraceOperation 031807 (Store (Con 91) (Con 0));
  SetByte 008058 0;
  SetByte 008059 0;
  TraceOperation 031810 (Print "You are so keen on escape that you literally leap through the fabric of the space-time continuum. You wake up in a shack on tenth-century Earth. A dressing gown, a ");
  GamePrint "You are so keen on escape that you literally leap through the fabric of the space-time continuum. You wake up in a shack on tenth-century Earth. A dressing gown, a ";
  TraceOperation 031907 (Print_obj (Con 19));
  Let b1 = M[000929];
  Let b2 = M[000930];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 031909 (Call (Floc 042734) [Con -11781] Sp);
  PushFrame;
  PushReturnAddress 031909;
  SetLocal 1 -11781;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 031909:
  PushStack call_result;
  TraceOperation 031916 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 031918:
  MakeRoutineFrame 0;
  Jump: 031919
LocOp 031919:
  TraceOperation 031919 (Test_attr (Var (Global 201)) (Con 28) (Branch F (Dloc 031929)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    TraceOperation 031923 (Call (Floc 034480) [] Sp);
    PushFrame;
    PushReturnAddress 031923;
    MakeRoutineFrame 0;
    Jump: 034481
  } else {
    Jump: 031929
  }
LocReturn 031923:
  PushStack call_result;
  TraceOperation 031928 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 031929:
  TraceOperation 031929 (Test_attr (Var (Global 201)) (Con 24) (Branch F (Dloc 031952)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,7)) {
    TraceOperation 031933 (Test_attr (Var (Global 201)) (Con 26) (Branch T (Dloc 031952)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,5)) {
      Jump: 031952
    } else {
      TraceOperation 031937 (Test_attr (Var (Global 201)) (Con 23) (Branch F (Dloc 031947)));
      Let b7 = M[008310];
      Let b8 = M[008311];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),2)];
      if (TestBit(b9,0)) {
        TraceOperation 031941 (Call (Floc 034480) [] Sp);
        PushFrame;
        PushReturnAddress 031941;
        MakeRoutineFrame 0;
        Jump: 034481
      } else {
        Jump: 031947
      }
    }
  } else {
    Jump: 031952
  }
LocReturn 031941:
  PushStack call_result;
  TraceOperation 031946 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 031947:
  TraceOperation 031947 (Print_ret "It's closed.");
  GamePrint "It's closed.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 031952:
  TraceOperation 031952 (Get_prop (Var (Global 201)) (Con 13) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[000722];
      Let b10 = M[000723];
      PushStack MakeHiLo(b9,b10);
    } else {
      if (Equal(13,Widen(BwAnd(b8,31)))) {
        if (Equal(Add(Widen(ShiftR(b8,5)),1),2)) {
          Let b11 = M[Offset(Address(loop_var6),1)];
          Let b12 = M[Offset(Offset(Address(loop_var6),1),1)];
          PushStack MakeHiLo(b11,b12);
        } else {
          Let b13 = M[Offset(Address(loop_var6),1)];
          PushStack Widen(b13);
        }
      } else {
        Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
        Goto: Label 7
      }
    }
  }
  TraceOperation 031956 (Jz (Var Sp) (Branch T (Dloc 031967)));
  PopStack popped14;
  if (IsZero(popped14)) {
    Jump: 031967
  } else {
    TraceOperation 031959 (Call (Floc 022042) [Con 120,Var (Global 201)] Sp);
    Let b15 = M[008310];
    Let b16 = M[008311];
    PushFrame;
    PushReturnAddress 031959;
    SetLocal 1 120;
    SetLocal 2 MakeHiLo(b15,b16);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 031959:
  PushStack call_result;
  TraceOperation 031966 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 031967:
  TraceOperation 031967 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 031979)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008324];
  Let b4 = M[008325];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 031971 (Call (Floc 022042) [Con 61,Con 179] Sp);
    PushFrame;
    PushReturnAddress 031971;
    SetLocal 1 61;
    SetLocal 2 179;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 031979
  }
LocReturn 031971:
  PushStack call_result;
  TraceOperation 031978 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 031979:
  TraceOperation 031979 (Test_attr (Var (Global 201)) (Con 2) (Branch F (Dloc 032007)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,5)) {
    TraceOperation 031983 (Print_paddr (Var (Global 46)));
    Let b4 = M[008000];
    Let b5 = M[008001];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 031985 (Print " every other ");
    GamePrint " every other ";
    TraceOperation 031994 (Print_obj (Var (Global 201)));
    Let b6 = M[008310];
    Let b7 = M[008311];
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),7)];
    Let b9 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),7),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    Let ite_res11 = Ite((IsZeroByte(b10),"",GetText(Offset(Address(MakeHiLo(b8,b9)),1))));
    GamePrint ite_res11;
    TraceOperation 031996 (Print_ret " you've ever seen.");
    GamePrint " you've ever seen.\n";
    PopFrame;
    PopReturnAddress return_address_12;
    SetResult 1;
    JumpIndirect: (return) return_address_12
  } else {
    Jump: 032007
  }
LocOp 032007:
  TraceOperation 032007 (Je [Var (Global 201),Con 34,Con 35,Con 33] (Branch T (Dloc 032018)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),34),Equal(MakeHiLo(b1,b2),35)),Equal(MakeHiLo(b1,b2),33))) {
    Jump: 032018
  } else {
    TraceOperation 032014 (Je [Var (Global 201),Con 32] (Branch F (Dloc 032043)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),32)) {
      Jump: 032018
    } else {
      Jump: 032043
    }
  }
LocOp 032018:
  TraceOperation 032018 (Print_ret "That would involve quite a contortion.");
  GamePrint "That would involve quite a contortion.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032043:
  TraceOperation 032043 (Print "You see nothing special about");
  GamePrint "You see nothing special about";
  TraceOperation 032058 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 032058;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 032058:
  PushStack call_result;
  TraceOperation 032065 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 032068:
  MakeRoutineFrame 0;
  Jump: 032069
LocOp 032069:
  TraceOperation 032069 (Print_ret "This reveals nothing new.");
  GamePrint "This reveals nothing new.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 032082:
  MakeRoutineFrame 0;
  Jump: 032083
LocOp 032083:
  TraceOperation 032083 (Test_attr (Var (Global 201)) (Con 12) (Branch F (Dloc 032095)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,3)) {
    TraceOperation 032087 (Call (Floc 022042) [Con 48,Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 032087;
    SetLocal 1 48;
    SetLocal 2 MakeHiLo(b4,b5);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 032095
  }
LocReturn 032087:
  PushStack call_result;
  TraceOperation 032094 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032095:
  TraceOperation 032095 (Call (Floc 043620) [Con 26] Sp);
  PushFrame;
  PushReturnAddress 032095;
  SetLocal 1 26;
  MakeRoutineFrame 1;
  Jump: 043623
LocReturn 032095:
  PushStack call_result;
  TraceOperation 032101 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 032102:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 032105
LocOp 032105:
  TraceOperation 032105 (Call (Floc 043552) [Con 31,Con 20] (Local 1));
  PushFrame;
  PushReturnAddress 032105;
  SetLocal 1 31;
  SetLocal 2 20;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 043559
LocReturn 032105:
  SetLocal 1 call_result;
  TraceOperation 032112 (Jz (Var (Local 1)) (Branch T (Dloc 032135)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    Jump: 032135
  } else {
    TraceOperation 032115 (Print "(the ");
    GamePrint "(the ";
    TraceOperation 032120 (Print_obj (Var (Local 1)));
    GetLocal 1 local1_2;
    Let b3 = M[Offset(Offset(000751,Mul(local1_2,9)),7)];
    Let b4 = M[Offset(Offset(Offset(000751,Mul(local1_2,9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 032122 (Print ")");
    GamePrint ")";
    TraceOperation 032125 New_line;
    GamePrint "\n";
    TraceOperation 032126 (Call (Floc 022042) [Con 66,Var (Local 1),Var (Global 201)] Sp);
    GetLocal 1 local1_7;
    Let b8 = M[008310];
    Let b9 = M[008311];
    PushFrame;
    PushReturnAddress 032126;
    SetLocal 1 66;
    SetLocal 2 local1_7;
    SetLocal 3 MakeHiLo(b8,b9);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 022057
  }
LocReturn 032126:
  PushStack call_result;
  TraceOperation 032134 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032135:
  TraceOperation 032135 (Print "You have nothing to feed");
  GamePrint "You have nothing to feed";
  TraceOperation 032144 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 032144;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 032144:
  PushStack call_result;
  TraceOperation 032151 (Print_ret " with.");
  GamePrint " with.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 032158:
  MakeRoutineFrame 0;
  Jump: 032159
LocOp 032159:
  TraceOperation 032159 (Print_ret "Phil who?");
  GamePrint "Phil who?\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 032168:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 032173
LocOp 032173:
  TraceOperation 032173 (Get_parent (Var (Global 201)) (Local 2));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  SetLocal 2 Widen(b3);
  TraceOperation 032176 (Je [Var (Global 201),Con 32,Con 34,Con 36] (Branch T (Dloc 032189)));
  Let b4 = M[008310];
  Let b5 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),32),Equal(MakeHiLo(b4,b5),34)),Equal(MakeHiLo(b4,b5),36))) {
    Jump: 032189
  } else {
    TraceOperation 032183 (Je [Var (Global 201),Con 33,Con 35] (Branch F (Dloc 032212)));
    Let b6 = M[008310];
    Let b7 = M[008311];
    if (LogOr(Equal(MakeHiLo(b6,b7),33),Equal(MakeHiLo(b6,b7),35))) {
      Jump: 032189
    } else {
      Jump: 032212
    }
  }
LocOp 032189:
  TraceOperation 032189 (Print "Are you sure");
  GamePrint "Are you sure";
  TraceOperation 032198 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 032198;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 032198:
  PushStack call_result;
  TraceOperation 032205 (Print_ret " is lost?");
  GamePrint " is lost?\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032212:
  TraceOperation 032212 (Je [Var (Global 201),Con 30] (Branch F (Dloc 032231)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 032216 (Print "You're in");
    GamePrint "You're in";
    TraceOperation 032221 (Call (Floc 043738) [Var (Global 0),Con 1] Sp);
    Let b3 = M[007908];
    Let b4 = M[007909];
    PushFrame;
    PushReturnAddress 032221;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 032231
  }
LocReturn 032221:
  PushStack call_result;
  TraceOperation 032228 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032231:
  TraceOperation 032231 (Jin (Var (Global 201)) (Con 31) (Branch F (Dloc 032242)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(31,Widen(b3))) {
    TraceOperation 032235 (Print_ret "You have it!");
    GamePrint "You have it!\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 032242
  }
LocOp 032242:
  TraceOperation 032242 (Je [Var (Global 201),Con 145] (Branch F (Dloc 032272)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),145)) {
    TraceOperation 032246 (Je [Var (Global 120),Con 142] (Branch F (Dloc 032272)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),142)) {
      TraceOperation 032250 (Jz (Var (Global 138)) (Branch F (Dloc 032272)));
      Let b5 = M[008184];
      Let b6 = M[008185];
      if (IsZero(MakeHiLo(b5,b6))) {
        TraceOperation 032253 (Print "He's ");
        GamePrint "He's ";
        TraceOperation 032260 (Print_paddr (Var (Global 8)));
        Let b7 = M[007924];
        Let b8 = M[007925];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
        TraceOperation 032262 (Print " of the ");
        GamePrint " of the ";
        TraceOperation 032267 (Print_obj (Con 166));
        Let b9 = M[002252];
        Let b10 = M[002253];
        Let b11 = M[Address(MakeHiLo(b9,b10))];
        Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
        GamePrint ite_res12;
        TraceOperation 032269 (Print_ret ".");
        GamePrint ".\n";
        PopFrame;
        PopReturnAddress return_address_13;
        SetResult 1;
        JumpIndirect: (return) return_address_13
      } else {
        Jump: 032272
      }
    } else {
      Jump: 032272
    }
  } else {
    Jump: 032272
  }
LocOp 032272:
  TraceOperation 032272 (Jin (Var (Global 201)) (Var (Global 0)) (Branch T (Dloc 032296)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    Jump: 032296
  } else {
    TraceOperation 032276 (Je [Var (Global 201),Con 48] (Branch T (Dloc 032296)));
    Let b6 = M[008310];
    Let b7 = M[008311];
    if (Equal(MakeHiLo(b6,b7),48)) {
      Jump: 032296
    } else {
      TraceOperation 032280 (Je [Var (Global 201),Con 176] (Branch F (Dloc 032288)));
      Let b8 = M[008310];
      Let b9 = M[008311];
      if (Equal(MakeHiLo(b8,b9),176)) {
        TraceOperation 032284 (Je [Var (Global 0),Con 175] (Branch T (Dloc 032296)));
        Let b10 = M[007908];
        Let b11 = M[007909];
        if (Equal(MakeHiLo(b10,b11),175)) {
          Jump: 032296
        } else {
          Jump: 032288
        }
      } else {
        Jump: 032288
      }
    }
  }
LocOp 032288:
  TraceOperation 032288 (Je [Var (Global 201),Con 177] (Branch F (Dloc 032309)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),177)) {
    TraceOperation 032292 (Je [Var (Global 0),Con 178] (Branch F (Dloc 032309)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),178)) {
      Jump: 032296
    } else {
      Jump: 032309
    }
  } else {
    Jump: 032309
  }
LocOp 032296:
  TraceOperation 032296 (Print_ret "Right in front of you.");
  GamePrint "Right in front of you.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032309:
  TraceOperation 032309 (Call (Floc 043522) [Var (Global 201),Var (Global 0)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  PushFrame;
  PushReturnAddress 032309;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 043529
LocReturn 032309:
  PushStack call_result;
  TraceOperation 032316 (Jz (Var Sp) (Branch T (Dloc 032332)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 032332
  } else {
    TraceOperation 032319 (Print_ret "You figure it out!");
    GamePrint "You figure it out!\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 032332:
  TraceOperation 032332 (Test_attr (Var (Local 2)) (Con 26) (Branch F (Dloc 032374)));
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Offset(000751,Mul(local2_1,9)),3)];
  if (TestBit(b2,5)) {
    TraceOperation 032336 (Call (Floc 043370) [Var (Local 2)] Sp);
    GetLocal 2 local2_3;
    PushFrame;
    PushReturnAddress 032336;
    SetLocal 1 local2_3;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043375
  } else {
    Jump: 032374
  }
LocReturn 032336:
  PushStack call_result;
  TraceOperation 032342 (Jz (Var Sp) (Branch T (Dloc 032374)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 032374
  } else {
    TraceOperation 032345 (Print "As far as you can tell,");
    GamePrint "As far as you can tell,";
    TraceOperation 032360 (Call (Floc 043738) [Var (Local 2),Con 1] Sp);
    GetLocal 2 local2_2;
    PushFrame;
    PushReturnAddress 032360;
    SetLocal 1 local2_2;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  }
LocReturn 032360:
  PushStack call_result;
  TraceOperation 032367 (Print_ret " has it.");
  GamePrint " has it.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032374:
  TraceOperation 032374 (Test_attr (Var (Local 2)) (Con 24) (Branch F (Dloc 032402)));
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Offset(000751,Mul(local2_1,9)),3)];
  if (TestBit(b2,7)) {
    TraceOperation 032378 (Call (Floc 043370) [Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 032378;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043375
  } else {
    Jump: 032402
  }
LocReturn 032378:
  PushStack call_result;
  TraceOperation 032384 (Jz (Var Sp) (Branch T (Dloc 032402)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 032402
  } else {
    TraceOperation 032387 (Print "It's in");
    GamePrint "It's in";
    TraceOperation 032392 (Call (Floc 043738) [Var (Local 2),Con 1] Sp);
    GetLocal 2 local2_2;
    PushFrame;
    PushReturnAddress 032392;
    SetLocal 1 local2_2;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  }
LocReturn 032392:
  PushStack call_result;
  TraceOperation 032399 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032402:
  TraceOperation 032402 (Jz (Var (Local 1)) (Branch T (Dloc 032414)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    Jump: 032414
  } else {
    TraceOperation 032405 (Print_ret "Beats me.");
    GamePrint "Beats me.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 032414:
  TraceOperation 032414 (Print_ret "You'll have to do that yourself.");
  GamePrint "You'll have to do that yourself.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 032434:
  MakeRoutineFrame 0;
  Jump: 032435
LocOp 032435:
  TraceOperation 032435 (Call (Floc 041564) [] Sp);
  PushFrame;
  PushReturnAddress 032435;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 041573
LocReturn 032435:
  PushStack call_result;
  TraceOperation 032440 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 032443 (Je [Var (Global 152),Con 1,Con 2] (Branch F Dfalse));
    Let b3 = M[008212];
    Let b4 = M[008213];
    if (LogOr(Equal(MakeHiLo(b3,b4),1),Equal(MakeHiLo(b3,b4),2))) {
      TraceOperation 032449 (Call (Floc 041740) [] Sp);
      PushFrame;
      PushReturnAddress 032449;
      MakeRoutineFrame 1;
      SetLocal 1 0;
      Jump: 041743
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  }
LocReturn 032449:
  PushStack call_result;
  TraceOperation 032454 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 032456:
  MakeRoutineFrame 0;
  Jump: 032457
LocOp 032457:
  TraceOperation 032457 (Test_attr (Var (Global 201)) (Con 16) (Branch F (Dloc 032486)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,7)) {
    TraceOperation 032461 (Je [Var (Global 202),Con 49] (Branch F (Dloc 032486)));
    Let b4 = M[008312];
    Let b5 = M[008313];
    if (Equal(MakeHiLo(b4,b5),49)) {
      TraceOperation 032465 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 032486)));
      Let b6 = M[008256];
      Let b7 = M[008257];
      if (LessThan(MakeHiLo(b6,b7),9)) {
        TraceOperation 032469 (Call (Floc 043370) [Con 206] Sp);
        PushFrame;
        PushReturnAddress 032469;
        SetLocal 1 206;
        MakeRoutineFrame 2;
        SetLocal 2 0;
        Jump: 043375
      } else {
        Jump: 032486
      }
    } else {
      Jump: 032486
    }
  } else {
    Jump: 032486
  }
LocReturn 032469:
  PushStack call_result;
  TraceOperation 032475 (Jz (Var Sp) (Branch T (Dloc 032486)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 032486
  } else {
    TraceOperation 032478 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame;
    PushReturnAddress 032478;
    SetLocal 1 145;
    SetLocal 2 205;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 032478:
  PushStack call_result;
  TraceOperation 032485 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032486:
  TraceOperation 032486 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 032486;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 032486:
  PushStack call_result;
  TraceOperation 032491 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 032492:
  MakeRoutineFrame 0;
  Jump: 032493
LocOp 032493:
  TraceOperation 032493 (Jin (Var (Global 201)) (Var (Global 0)) (Branch F (Dloc 032520)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 032497 (Print "But");
    GamePrint "But";
    TraceOperation 032502 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b6 = M[008310];
    Let b7 = M[008311];
    PushFrame;
    PushReturnAddress 032502;
    SetLocal 1 MakeHiLo(b6,b7);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 032520
  }
LocReturn 032502:
  PushStack call_result;
  TraceOperation 032509 (Print_ret " is right here!");
  GamePrint " is right here!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032520:
  TraceOperation 032520 (Test_attr (Var (Global 201)) (Con 26) (Branch T (Dloc 032530)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    Jump: 032530
  } else {
    TraceOperation 032524 (Call (Floc 031360) [] Sp);
    PushFrame;
    PushReturnAddress 032524;
    MakeRoutineFrame 0;
    Jump: 031361
  }
LocReturn 032524:
  PushStack call_result;
  TraceOperation 032529 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 032530:
  TraceOperation 032530 (Print "You have no idea where");
  GamePrint "You have no idea where";
  TraceOperation 032541 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 032541;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 032541:
  PushStack call_result;
  TraceOperation 032548 (Print_ret " is.");
  GamePrint " is.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 032554:
  MakeRoutineFrame 0;
  Jump: 032555
LocOp 032555:
  TraceOperation 032555 (Store (Con 167) (Con 0));
  SetByte 008210 0;
  SetByte 008211 0;
  TraceOperation 032558 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 032560:
  MakeRoutineFrame 0;
  Jump: 032561
LocOp 032561:
  TraceOperation 032561 (Jz (Var (Global 201)) (Branch T (Dloc 032568)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 032568
  } else {
    TraceOperation 032564 (Je [Var (Global 201),Con 49] (Branch T (Dloc 032603)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),49)) {
      Jump: 032603
    } else {
      Jump: 032568
    }
  }
LocOp 032568:
  TraceOperation 032568 (Print_ret "Specify a number, as in \"FOOTNOTE 6.\"");
  GamePrint "Specify a number, as in \"FOOTNOTE 6.\"\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 032603:
  TraceOperation 032603 (Je [Var (Global 174),Con 1] (Branch F (Dloc 032723)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 032608 (Print_ret "In case anyone is interested, this quotation is from a letter written by John Keats, and thus he becomes the first major 19th Century British poet to feature in a computer game.");
    GamePrint "In case anyone is interested, this quotation is from a letter written by John Keats, and thus he becomes the first major 19th Century British poet to feature in a computer game.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032723
  }
LocOp 032723:
  TraceOperation 032723 (Je [Var (Global 174),Con 2] (Branch F (Dloc 032744)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 032727 (Print_ret "Bob Dylan, 1969.");
    GamePrint "Bob Dylan, 1969.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032744
  }
LocOp 032744:
  TraceOperation 032744 (Je [Var (Global 174),Con 3] (Branch F (Dloc 032769)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 032748 (Print_ret "A meaningless coincidence.");
    GamePrint "A meaningless coincidence.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032769
  }
LocOp 032769:
  TraceOperation 032769 (Je [Var (Global 174),Con 4] (Branch F (Dloc 032835)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 032774 (Print_ret "The first single they recorded on their own Apple label, and one of their most successful songs ever.");
    GamePrint "The first single they recorded on their own Apple label, and one of their most successful songs ever.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032835
  }
LocOp 032835:
  TraceOperation 032835 (Je [Var (Global 174),Con 5] (Branch F (Dloc 032899)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 032839 (Print "Peacefully for a ");
    GamePrint "Peacefully for a ";
    TraceOperation 032852 (Print_obj (Con 95));
    Let b3 = M[001613];
    Let b4 = M[001614];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 032854 (Print_ret " that is. Now and then it snorts or rolls over, and the walls shake a bit.");
    GamePrint " that is. Now and then it snorts or rolls over, and the walls shake a bit.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 032899
  }
LocOp 032899:
  TraceOperation 032899 (Je [Var (Global 174),Con 6] (Branch F (Dloc 032920)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 032903 (Print_ret "That was just an example.");
    GamePrint "That was just an example.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 032920
  }
LocOp 032920:
  TraceOperation 032920 (Je [Var (Global 174),Con 7] (Branch F (Dloc 032948)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 032924 (Store (Con 229) (Con 13));
    SetByte 008334 0;
    SetByte 008335 13;
    TraceOperation 032927 (Call (Floc 022320) [Con -14349,Con 1] Sp);
    PushFrame;
    PushReturnAddress 032927;
    SetLocal 1 -14349;
    SetLocal 2 1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 032948
  }
LocReturn 032927:
  PushStack call_result;
  TraceOperation 032935 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 032940 (Call (Floc 057748) [Con -11710] Sp);
  PushFrame;
  PushReturnAddress 032940;
  SetLocal 1 -11710;
  MakeRoutineFrame 1;
  Jump: 057751
LocReturn 032940:
  PushStack call_result;
  TraceOperation 032947 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 032948:
  TraceOperation 032948 (Je [Var (Global 174),Con 8] (Branch F (Dloc 032976)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 032952 (Store (Con 229) (Con 13));
    SetByte 008334 0;
    SetByte 008335 13;
    TraceOperation 032955 (Call (Floc 022320) [Con -14349,Con 1] Sp);
    PushFrame;
    PushReturnAddress 032955;
    SetLocal 1 -14349;
    SetLocal 2 1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 032976
  }
LocReturn 032955:
  PushStack call_result;
  TraceOperation 032963 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 032968 (Call (Floc 057748) [Con -11709] Sp);
  PushFrame;
  PushReturnAddress 032968;
  SetLocal 1 -11709;
  MakeRoutineFrame 1;
  Jump: 057751
LocReturn 032968:
  PushStack call_result;
  TraceOperation 032975 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 032976:
  TraceOperation 032976 (Je [Var (Global 174),Con 9] (Branch F (Dloc 033023)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 032980 (Print_ret "Unfortunately, you couldn't hear a word of it, because sound doesn't travel in a vacuum.");
    GamePrint "Unfortunately, you couldn't hear a word of it, because sound doesn't travel in a vacuum.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 033023
  }
LocOp 033023:
  TraceOperation 033023 (Je [Var (Global 174),Con 10] (Branch F (Dloc 033058)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 033027 (Print_ret "I guess it isn't all that dangerous a place after all.");
    GamePrint "I guess it isn't all that dangerous a place after all.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 033058
  }
LocOp 033058:
  TraceOperation 033058 (Je [Var (Global 174),Con 11] (Branch F (Dloc 033105)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 033062 (Store (Con 229) (Con 14));
    SetByte 008334 0;
    SetByte 008335 14;
    TraceOperation 033065 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame;
    PushReturnAddress 033065;
    SetLocal 1 -14349;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 033105
  }
LocReturn 033065:
  PushStack call_result;
  TraceOperation 033073 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 033078 (Print_ret "Isn't it fun reading through all the footnotes?");
  GamePrint "Isn't it fun reading through all the footnotes?\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 033105:
  TraceOperation 033105 (Je [Var (Global 174),Con 12] (Branch F (Dloc 033140)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 033109 (Print_ret "This is the famous recursive footnote (Footnote 12).");
    GamePrint "This is the famous recursive footnote (Footnote 12).\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 033140
  }
LocOp 033140:
  TraceOperation 033140 (Je [Var (Global 174),Con 13] (Branch F (Dloc 033168)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),13)) {
    TraceOperation 033144 (Store (Con 229) (Con 13));
    SetByte 008334 0;
    SetByte 008335 13;
    TraceOperation 033147 (Call (Floc 022320) [Con -14349,Con 1] Sp);
    PushFrame;
    PushReturnAddress 033147;
    SetLocal 1 -14349;
    SetLocal 2 1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 033168
  }
LocReturn 033147:
  PushStack call_result;
  TraceOperation 033155 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 033160 (Call (Floc 057748) [Con -11707] Sp);
  PushFrame;
  PushReturnAddress 033160;
  SetLocal 1 -11707;
  MakeRoutineFrame 1;
  Jump: 057751
LocReturn 033160:
  PushStack call_result;
  TraceOperation 033167 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 033168:
  TraceOperation 033168 (Je [Var (Global 174),Con 14] (Branch F (Dloc 033244)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 033173 (Print_paddr (Var (Global 37)));
    Let b3 = M[007982];
    Let b4 = M[007983];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 033175 (Print " is also the name of a terrific work of interactive fiction by Douglas Adams and S. Eric Meretzky.");
    GamePrint " is also the name of a terrific work of interactive fiction by Douglas Adams and S. Eric Meretzky.";
    TraceOperation 033240 (Print_paddr (Var (Global 36)));
    Let b5 = M[007980];
    Let b6 = M[007981];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 033242 New_line;
    GamePrint "\n";
    TraceOperation 033243 Rtrue;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 033244
  }
LocOp 033244:
  TraceOperation 033244 (Je [Var (Global 174),Con 15] (Branch F (Dloc 033272)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 033248 (Store (Con 229) (Con 13));
    SetByte 008334 0;
    SetByte 008335 13;
    TraceOperation 033251 (Call (Floc 022320) [Con -14349,Con 1] Sp);
    PushFrame;
    PushReturnAddress 033251;
    SetLocal 1 -14349;
    SetLocal 2 1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 033272
  }
LocReturn 033251:
  PushStack call_result;
  TraceOperation 033259 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 033264 (Call (Floc 057748) [Con -11704] Sp);
  PushFrame;
  PushReturnAddress 033264;
  SetLocal 1 -11704;
  MakeRoutineFrame 1;
  Jump: 057751
LocReturn 033264:
  PushStack call_result;
  TraceOperation 033271 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 033272:
  TraceOperation 033272 (Print "There is no Footnote ");
  GamePrint "There is no Footnote ";
  TraceOperation 033279 (Print_num (Var (Global 174)));
  Let b1 = M[008256];
  Let b2 = M[008257];
  GamePrint ShowNumber(MakeHiLo(b1,b2));
  TraceOperation 033282 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 033286:
  MakeRoutineFrame 0;
  Jump: 033287
LocOp 033287:
  TraceOperation 033287 (Print_ret "Aaaaaaarggggghhhhhh!");
  GamePrint "Aaaaaaarggggghhhhhh!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033304:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 033307
LocOp 033307:
  TraceOperation 033307 (Je [Var (Global 201),Con 217] (Branch F (Dloc 033374)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 033312 (Je [Var (Global 120),Con 123] (Branch F (Dloc 033320)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 033316 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 033327)));
      Let b5 = M[002174];
      if (TestBit(b5,6)) {
        Jump: 033320
      } else {
        Jump: 033327
      }
    } else {
      Jump: 033320
    }
  } else {
    Jump: 033374
  }
LocOp 033320:
  TraceOperation 033320 (Print_ret "You are!");
  GamePrint "You are!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 033327:
  TraceOperation 033327 (Call (Floc 043468) [Con 158] Sp);
  PushFrame;
  PushReturnAddress 033327;
  SetLocal 1 158;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 033327:
  PushStack call_result;
  TraceOperation 033333 (Jz (Var Sp) (Branch T (Dloc 033344)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 033344
  } else {
    TraceOperation 033336 (Call (Floc 022042) [Con 116,Con 158] Sp);
    PushFrame;
    PushReturnAddress 033336;
    SetLocal 1 116;
    SetLocal 2 158;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 033336:
  PushStack call_result;
  TraceOperation 033343 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 033344:
  TraceOperation 033344 (Call (Floc 043370) [Con 158] Sp);
  PushFrame;
  PushReturnAddress 033344;
  SetLocal 1 158;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043375
LocReturn 033344:
  PushStack call_result;
  TraceOperation 033350 (Jz (Var Sp) (Branch T (Dloc 033363)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 033363
  } else {
    TraceOperation 033353 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 033355 (Print " ");
    GamePrint " ";
    TraceOperation 033358 (Print_obj (Con 158));
    Let b4 = M[002180];
    Let b5 = M[002181];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 033360 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 1;
    JumpIndirect: (return) return_address_8
  }
LocOp 033363:
  TraceOperation 033363 (Print_ret "There's nothing to wear here.");
  GamePrint "There's nothing to wear here.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 033374:
  TraceOperation 033374 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 033374;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 033374:
  PushStack call_result;
  TraceOperation 033379 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 033380:
  MakeRoutineFrame 0;
  Jump: 033381
LocOp 033381:
  TraceOperation 033381 (Je [Var (Global 201),Con 217] (Branch F (Dloc 033624)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 033386 (Je [Var (Global 0),Con 134] (Branch F (Dloc 033596)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),134)) {
      TraceOperation 033391 (Print "You get drunk and have a terrific time for twelve minutes, are the life and soul of the Pub, tell some really great stories, make everyone laugh a lot, and they all clap you on the back and tell you what a great chap you are and then the Earth gets unexpectedly demolished");
      GamePrint "You get drunk and have a terrific time for twelve minutes, are the life and soul of the Pub, tell some really great stories, make everyone laugh a lot, and they all clap you on the back and tell you what a great chap you are and then the Earth gets unexpectedly demolished";
      TraceOperation 033544 (Je [Var (Global 120),Con 123] (Branch F (Dloc 033588)));
      Let b5 = M[008148];
      Let b6 = M[008149];
      if (Equal(MakeHiLo(b5,b6),123)) {
        TraceOperation 033548 (Print ". You wake up with a hangover which lasts for all eternity.");
        GamePrint ". You wake up with a hangover which lasts for all eternity.";
        TraceOperation 033581 New_line;
        GamePrint "\n";
        TraceOperation 033582 (Call (Floc 028948) [] Sp);
        PushFrame;
        PushReturnAddress 033582;
        MakeRoutineFrame 1;
        SetLocal 1 0;
        Jump: 028951
      } else {
        Jump: 033588
      }
    } else {
      Jump: 033596
    }
  } else {
    Jump: 033624
  }
LocReturn 033582:
  PushStack call_result;
  TraceOperation 033587 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 033588:
  TraceOperation 033588 (Call (Floc 042734) [Con -11702] Sp);
  PushFrame;
  PushReturnAddress 033588;
  SetLocal 1 -11702;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 033588:
  PushStack call_result;
  TraceOperation 033595 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 033596:
  TraceOperation 033596 (Je [Var (Global 0),Con 76,Con 74,Con 73] (Branch F (Dloc 033607)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),76),Equal(MakeHiLo(b1,b2),74)),Equal(MakeHiLo(b1,b2),73))) {
    TraceOperation 033603 (Print_paddr (Var (Global 54)));
    Let b3 = M[008016];
    Let b4 = M[008017];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 033605 New_line;
    GamePrint "\n";
    TraceOperation 033606 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 033607
  }
LocOp 033607:
  TraceOperation 033607 (Print_ret "You can't see any alcohol here!");
  GamePrint "You can't see any alcohol here!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 033624:
  TraceOperation 033624 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 033624;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 033624:
  PushStack call_result;
  TraceOperation 033629 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 033630:
  MakeRoutineFrame 0;
  Jump: 033631
LocOp 033631:
  TraceOperation 033631 (Jz (Var (Global 201)) (Branch F (Dloc 033637)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 033634 (Store (Con 217) (Con 217));
    SetByte 008310 0;
    SetByte 008311 217;
    Jump: 033637
  } else {
    Jump: 033637
  }
LocOp 033637:
  TraceOperation 033637 (Je [Var (Global 201),Con 217] (Branch F (Dloc 033674)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 033641 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 033653)));
    Let b3 = M[002174];
    if (TestBit(b3,6)) {
      TraceOperation 033645 (Call (Floc 022042) [Con 148,Con 158] Sp);
      PushFrame;
      PushReturnAddress 033645;
      SetLocal 1 148;
      SetLocal 2 158;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 033653
    }
  } else {
    Jump: 033674
  }
LocReturn 033645:
  PushStack call_result;
  TraceOperation 033652 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 033653:
  TraceOperation 033653 (Je [Var (Global 120),Con 123] (Branch F (Dloc 033670)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),123)) {
    TraceOperation 033657 (Print_ret "You're not wearing anything!");
    GamePrint "You're not wearing anything!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 033670
  }
LocOp 033670:
  TraceOperation 033670 (Print_paddr (Var (Global 19)));
  Let b1 = M[007946];
  Let b2 = M[007947];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 033672 New_line;
  GamePrint "\n";
  TraceOperation 033673 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 033674:
  TraceOperation 033674 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 033674;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 033674:
  PushStack call_result;
  TraceOperation 033679 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 033680:
  MakeRoutineFrame 0;
  Jump: 033681
LocOp 033681:
  TraceOperation 033681 (Call (Floc 041208) [] Sp);
  PushFrame;
  PushReturnAddress 033681;
  MakeRoutineFrame 0;
  Jump: 041209
LocReturn 033681:
  PushStack call_result;
  TraceOperation 033686 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 033689 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 033690:
  MakeRoutineFrame 0;
  Jump: 033691
LocOp 033691:
  TraceOperation 033691 (Test_attr (Var (Global 202)) (Con 26) (Branch F (Dloc 033724)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 033695 (Print "Politely,");
    GamePrint "Politely,";
    TraceOperation 033704 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
    Let b4 = M[008312];
    Let b5 = M[008313];
    PushFrame;
    PushReturnAddress 033704;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 033724
  }
LocReturn 033704:
  PushStack call_result;
  TraceOperation 033711 (Print_ret " refuses your offer.");
  GamePrint " refuses your offer.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 033724:
  TraceOperation 033724 (Print "You can't give");
  GamePrint "You can't give";
  TraceOperation 033731 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 033731;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 033731:
  PushStack call_result;
  TraceOperation 033737 (Print " to");
  GamePrint " to";
  TraceOperation 033740 (Call (Floc 043738) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 033740;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 033740:
  PushStack call_result;
  TraceOperation 033746 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033750:
  MakeRoutineFrame 0;
  Jump: 033751
LocOp 033751:
  TraceOperation 033751 (Je [Var (Global 201),Con 217] (Branch F (Dloc 033761)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 033755 (Call (Floc 028824) [] Sp);
    PushFrame;
    PushReturnAddress 033755;
    MakeRoutineFrame 0;
    Jump: 028825
  } else {
    Jump: 033761
  }
LocReturn 033755:
  PushStack call_result;
  TraceOperation 033760 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 033761:
  TraceOperation 033761 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 033761;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 033761:
  PushStack call_result;
  TraceOperation 033766 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 033768:
  MakeRoutineFrame 0;
  Jump: 033769
LocOp 033769:
  TraceOperation 033769 (Print "You can't hang something from");
  GamePrint "You can't hang something from";
  TraceOperation 033780 (Call (Floc 043738) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 033780;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 033780:
  PushStack call_result;
  TraceOperation 033786 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033790:
  MakeRoutineFrame 0;
  Jump: 033791
LocOp 033791:
  TraceOperation 033791 (Jz (Var (Global 201)) (Branch T (Dloc 033813)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 033813
  } else {
    TraceOperation 033794 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 033813)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,5)) {
      TraceOperation 033798 (Print_ret "\"Hello to you too.\"");
      GamePrint "\"Hello to you too.\"\n";
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    } else {
      Jump: 033813
    }
  }
LocOp 033813:
  TraceOperation 033813 (Jz (Var (Global 201)) (Branch T (Dloc 033824)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 033824
  } else {
    TraceOperation 033816 (Call (Floc 022042) [Con 15,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 033816;
    SetLocal 1 15;
    SetLocal 2 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 033816:
  PushStack call_result;
  TraceOperation 033823 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 033824:
  TraceOperation 033824 (Call (Floc 022042) [Con 15,Con 30] Sp);
  PushFrame;
  PushReturnAddress 033824;
  SetLocal 1 15;
  SetLocal 2 30;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 033824:
  PushStack call_result;
  TraceOperation 033831 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033832:
  MakeRoutineFrame 0;
  Jump: 033833
LocOp 033833:
  TraceOperation 033833 (Print_ret "If you're really stuck, a complete map and InvisiClues Hint Booklet are available from your dealer, or via mail order with the form that came in your package.");
  GamePrint "If you're really stuck, a complete map and InvisiClues Hint Booklet are available from your dealer, or via mail order with the form that came in your package.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033926:
  MakeRoutineFrame 0;
  Jump: 033927
LocOp 033927:
  TraceOperation 033927 (Print_ret "There's no place to hide here.");
  GamePrint "There's no place to hide here.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033944:
  MakeRoutineFrame 0;
  Jump: 033945
LocOp 033945:
  TraceOperation 033945 (Call (Floc 022042) [Con 114,Con 5] Sp);
  PushFrame;
  PushReturnAddress 033945;
  SetLocal 1 114;
  SetLocal 2 5;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 033945:
  PushStack call_result;
  TraceOperation 033952 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033954:
  MakeRoutineFrame 0;
  Jump: 033955
LocOp 033955:
  TraceOperation 033955 (Print_ret "Pleased to meet you. I'm your computer.");
  GamePrint "Pleased to meet you. I'm your computer.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033980:
  MakeRoutineFrame 0;
  Jump: 033981
LocOp 033981:
  TraceOperation 033981 (Call (Floc 022042) [Con 15,Con 30] Sp);
  PushFrame;
  PushReturnAddress 033981;
  SetLocal 1 15;
  SetLocal 2 30;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 033981:
  PushStack call_result;
  TraceOperation 033988 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 033990:
  MakeRoutineFrame 0;
  Jump: 033991
LocOp 033991:
  TraceOperation 033991 (Call (Floc 043716) [Con -11701] Sp);
  PushFrame;
  PushReturnAddress 033991;
  SetLocal 1 -11701;
  MakeRoutineFrame 1;
  Jump: 043719
LocReturn 033991:
  PushStack call_result;
  TraceOperation 033998 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 034000:
  MakeRoutineFrame 0;
  Jump: 034001
LocOp 034001:
  TraceOperation 034001 (Print_ret "You are obviously letting things get to you. You should learn to relax a little.");
  GamePrint "You are obviously letting things get to you. You should learn to relax a little.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034050:
  MakeRoutineFrame 0;
  Jump: 034051
LocOp 034051:
  TraceOperation 034051 (Call (Floc 038896) [] Sp);
  PushFrame;
  PushReturnAddress 034051;
  MakeRoutineFrame 0;
  Jump: 038897
LocReturn 034051:
  PushStack call_result;
  TraceOperation 034056 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 034058:
  MakeRoutineFrame 0;
  Jump: 034059
LocOp 034059:
  TraceOperation 034059 (Test_attr (Var (Global 201)) (Con 28) (Branch F (Dloc 034076)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    TraceOperation 034063 (Print_ret "Nobody's home.");
    GamePrint "Nobody's home.\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 034076
  }
LocOp 034076:
  TraceOperation 034076 (Call (Floc 043716) [Con -11698] Sp);
  PushFrame;
  PushReturnAddress 034076;
  SetLocal 1 -11698;
  MakeRoutineFrame 1;
  Jump: 043719
LocReturn 034076:
  PushStack call_result;
  TraceOperation 034083 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 034084:
  MakeRoutineFrame 0;
  Jump: 034085
LocOp 034085:
  TraceOperation 034085 (Print_ret "This is family entertainment, not a video nasty.");
  GamePrint "This is family entertainment, not a video nasty.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034116:
  MakeRoutineFrame 0;
  Jump: 034117
LocOp 034117:
  TraceOperation 034117 (Test_attr (Var (Global 201)) (Con 19) (Branch F (Dloc 034134)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,4)) {
    TraceOperation 034121 (Test_attr (Var (Global 201)) (Con 29) (Branch T (Dloc 034134)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,2)) {
      Jump: 034134
    } else {
      TraceOperation 034125 (Print_ret "It is already off.");
      GamePrint "It is already off.\n";
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    }
  } else {
    Jump: 034134
  }
LocOp 034134:
  TraceOperation 034134 (Je [Var (Global 201),Con 49] (Branch F (Dloc 034159)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 034138 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 034159)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 034142 (Call (Floc 043298) [Con 206] Sp);
      PushFrame;
      PushReturnAddress 034142;
      SetLocal 1 206;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043303
    } else {
      Jump: 034159
    }
  } else {
    Jump: 034159
  }
LocReturn 034142:
  PushStack call_result;
  TraceOperation 034148 (Jz (Var Sp) (Branch T (Dloc 034159)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 034159
  } else {
    TraceOperation 034151 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame;
    PushReturnAddress 034151;
    SetLocal 1 145;
    SetLocal 2 205;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 034151:
  PushStack call_result;
  TraceOperation 034158 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034159:
  TraceOperation 034159 (Print_ret "You can't turn that off.");
  GamePrint "You can't turn that off.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034172:
  MakeRoutineFrame 0;
  Jump: 034173
LocOp 034173:
  TraceOperation 034173 (Test_attr (Var (Global 201)) (Con 19) (Branch F (Dloc 034190)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,4)) {
    TraceOperation 034177 (Test_attr (Var (Global 201)) (Con 29) (Branch F (Dloc 034190)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,2)) {
      TraceOperation 034181 (Print_ret "It is already on.");
      GamePrint "It is already on.\n";
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 034190
    }
  } else {
    Jump: 034190
  }
LocOp 034190:
  TraceOperation 034190 (Je [Var (Global 201),Con 49] (Branch F (Dloc 034215)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 034194 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 034215)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 034198 (Call (Floc 043298) [Con 206] Sp);
      PushFrame;
      PushReturnAddress 034198;
      SetLocal 1 206;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043303
    } else {
      Jump: 034215
    }
  } else {
    Jump: 034215
  }
LocReturn 034198:
  PushStack call_result;
  TraceOperation 034204 (Jz (Var Sp) (Branch T (Dloc 034215)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 034215
  } else {
    TraceOperation 034207 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame;
    PushReturnAddress 034207;
    SetLocal 1 145;
    SetLocal 2 205;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 034207:
  PushStack call_result;
  TraceOperation 034214 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034215:
  TraceOperation 034215 (Print_ret "You can't turn that on.");
  GamePrint "You can't turn that on.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034226:
  MakeRoutineFrame 0;
  Jump: 034227
LocOp 034227:
  TraceOperation 034227 (Jz (Var (Global 86)) (Branch T (Dloc 034234)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 034234
  } else {
    TraceOperation 034230 (Print_paddr (Var (Global 50)));
    Let b3 = M[008008];
    Let b4 = M[008009];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 034232 New_line;
    GamePrint "\n";
    TraceOperation 034233 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  }
LocOp 034234:
  TraceOperation 034234 (Je [Var (Global 0),Con 108] (Branch F (Dloc 034244)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 034238 (Call (Floc 037874) [] Sp);
    PushFrame;
    PushReturnAddress 034238;
    MakeRoutineFrame 0;
    Jump: 037875
  } else {
    Jump: 034244
  }
LocReturn 034238:
  PushStack call_result;
  TraceOperation 034243 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 034244:
  TraceOperation 034244 (Jz (Var (Global 201)) (Branch T (Dloc 034257)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 034257
  } else {
    TraceOperation 034247 (Jin (Var (Global 201)) (Var (Global 0)) (Branch T (Dloc 034257)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[007908];
    Let b6 = M[007909];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
    if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
      Jump: 034257
    } else {
      TraceOperation 034251 (Call (Floc 031360) [] Sp);
      PushFrame;
      PushReturnAddress 034251;
      MakeRoutineFrame 0;
      Jump: 031361
    }
  }
LocReturn 034251:
  PushStack call_result;
  TraceOperation 034256 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 034257:
  TraceOperation 034257 (Jz (Var (Global 201)) (Branch F (Dloc 034268)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 034260 (Je [Var (Global 0),Con 66] (Branch F (Dloc 034268)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),66)) {
      TraceOperation 034264 (Print_paddr (Var (Global 16)));
      Let b5 = M[007940];
      Let b6 = M[007941];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 034266 New_line;
      GamePrint "\n";
      TraceOperation 034267 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 034268
    }
  } else {
    Jump: 034268
  }
LocOp 034268:
  TraceOperation 034268 (Call (Floc 037638) [] Sp);
  PushFrame;
  PushReturnAddress 034268;
  MakeRoutineFrame 0;
  Jump: 037639
LocReturn 034268:
  PushStack call_result;
  TraceOperation 034273 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 034274:
  MakeRoutineFrame 0;
  Jump: 034275
LocOp 034275:
  TraceOperation 034275 (Jz (Var (Global 201)) (Branch F (Dloc 034281)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 034278 (Store (Con 217) (Con 217));
    SetByte 008310 0;
    SetByte 008311 217;
    Jump: 034281
  } else {
    Jump: 034281
  }
LocOp 034281:
  TraceOperation 034281 (Je [Var (Global 201),Con 217] (Branch F (Dloc 034292)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 034285 (Call (Floc 043620) [Con 26] Sp);
    PushFrame;
    PushReturnAddress 034285;
    SetLocal 1 26;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    Jump: 034292
  }
LocReturn 034285:
  PushStack call_result;
  TraceOperation 034291 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 034292:
  TraceOperation 034292 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 034295 (Je [Var (Global 201),Var Sp] (Branch F (Dloc 034307)));
  Let b4 = M[008310];
  Let b5 = M[008311];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 034299 (Call (Floc 022042) [Con 48,Var (Global 201)] Sp);
    Let b7 = M[008310];
    Let b8 = M[008311];
    PushFrame;
    PushReturnAddress 034299;
    SetLocal 1 48;
    SetLocal 2 MakeHiLo(b7,b8);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 034307
  }
LocReturn 034299:
  PushStack call_result;
  TraceOperation 034306 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034307:
  TraceOperation 034307 (Call (Floc 022042) [Con 53,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034307;
  SetLocal 1 53;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 034307:
  PushStack call_result;
  TraceOperation 034314 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034316:
  MakeRoutineFrame 0;
  Jump: 034317
LocOp 034317:
  TraceOperation 034317 (Je [Var (Global 0),Con 108] (Branch F (Dloc 034327)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 034321 (Call (Floc 037874) [] Sp);
    PushFrame;
    PushReturnAddress 034321;
    MakeRoutineFrame 0;
    Jump: 037875
  } else {
    Jump: 034327
  }
LocReturn 034321:
  PushStack call_result;
  TraceOperation 034326 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 034327:
  TraceOperation 034327 (Je [Var (Global 201),Con 217] (Branch F (Dloc 034351)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 034331 (Je [Var (Global 0),Con 168] (Branch F (Dloc 034343)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),168)) {
      TraceOperation 034335 (Call (Floc 022042) [Con 87,Con 161] Sp);
      PushFrame;
      PushReturnAddress 034335;
      SetLocal 1 87;
      SetLocal 2 161;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 034343
    }
  } else {
    Jump: 034351
  }
LocReturn 034335:
  PushStack call_result;
  TraceOperation 034342 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034343:
  TraceOperation 034343 (Call (Floc 022042) [Con 87,Con 42] Sp);
  PushFrame;
  PushReturnAddress 034343;
  SetLocal 1 87;
  SetLocal 2 42;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 034343:
  PushStack call_result;
  TraceOperation 034350 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034351:
  TraceOperation 034351 (Call (Floc 022042) [Con 28,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034351;
  SetLocal 1 28;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 034351:
  PushStack call_result;
  TraceOperation 034358 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034360:
  MakeRoutineFrame 0;
  Jump: 034361
LocOp 034361:
  TraceOperation 034361 (Print "At the moment,");
  GamePrint "At the moment,";
  TraceOperation 034372 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034372;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 034372:
  PushStack call_result;
  TraceOperation 034379 (Print_ret " makes no sound.");
  GamePrint " makes no sound.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034392:
  MakeRoutineFrame 0;
  Jump: 034393
LocOp 034393:
  TraceOperation 034393 (Call (Floc 030950) [] Sp);
  PushFrame;
  PushReturnAddress 034393;
  MakeRoutineFrame 0;
  Jump: 030951
LocReturn 034393:
  PushStack call_result;
  TraceOperation 034398 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 034400:
  MakeRoutineFrame 0;
  Jump: 034401
LocOp 034401:
  TraceOperation 034401 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 034416)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 034405 (Print_ret "You see a towel.");
    GamePrint "You see a towel.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 034416
  }
LocOp 034416:
  TraceOperation 034416 (Call (Floc 041564) [Con 1] Sp);
  PushFrame;
  PushReturnAddress 034416;
  SetLocal 1 1;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 041573
LocReturn 034416:
  PushStack call_result;
  TraceOperation 034422 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 034425 (Call (Floc 041740) [Con 1] Sp);
    PushFrame;
    PushReturnAddress 034425;
    SetLocal 1 1;
    MakeRoutineFrame 1;
    Jump: 041743
  }
LocReturn 034425:
  PushStack call_result;
  TraceOperation 034431 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 034432:
  MakeRoutineFrame 0;
  Jump: 034433
LocOp 034433:
  TraceOperation 034433 (Print "There is nothing behind");
  GamePrint "There is nothing behind";
  TraceOperation 034442 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034442;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 034442:
  PushStack call_result;
  TraceOperation 034449 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034452:
  MakeRoutineFrame 0;
  Jump: 034453
LocOp 034453:
  TraceOperation 034453 (Jz (Var (Global 85)) (Branch F (Dloc 034460)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 034456 (Print_paddr (Var (Global 56)));
    Let b3 = M[008020];
    Let b4 = M[008021];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 034458 New_line;
    GamePrint "\n";
    TraceOperation 034459 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 034460
  }
LocOp 034460:
  TraceOperation 034460 (Je [Var (Global 201),Con 217] (Branch F (Dloc 034472)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 034464 (Call (Floc 022042) [Con 61,Con 42] Sp);
    PushFrame;
    PushReturnAddress 034464;
    SetLocal 1 61;
    SetLocal 2 42;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 034472
  }
LocReturn 034464:
  PushStack call_result;
  TraceOperation 034471 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034472:
  TraceOperation 034472 (Call (Floc 022042) [Con 63,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034472;
  SetLocal 1 63;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 034472:
  PushStack call_result;
  TraceOperation 034479 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034480:
  MakeRoutineFrame 0;
  Jump: 034481
LocOp 034481:
  TraceOperation 034481 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 034506)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 034485 (Je [Var (Global 201),Con 216] (Branch T (Dloc 034506)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (Equal(MakeHiLo(b4,b5),216)) {
      Jump: 034506
    } else {
      TraceOperation 034489 (Print_ret "There is nothing special to be seen.");
      GamePrint "There is nothing special to be seen.\n";
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  } else {
    Jump: 034506
  }
LocOp 034506:
  TraceOperation 034506 (Je [Var (Global 201),Con 182,Con 7,Con 186] (Branch F (Dloc 034524)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),182),Equal(MakeHiLo(b1,b2),7)),Equal(MakeHiLo(b1,b2),186))) {
    TraceOperation 034513 (Print_ret "You can't do that.");
    GamePrint "You can't do that.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 034524
  }
LocOp 034524:
  TraceOperation 034524 (Test_attr (Var (Global 201)) (Con 8) (Branch F (Dloc 034569)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,7)) {
    TraceOperation 034528 (Get_parent (Var (Global 195)) Sp);
    Let b4 = M[008298];
    Let b5 = M[008299];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
    PushStack Widen(b6);
    TraceOperation 034531 (Je [Var (Global 201),Var Sp] (Branch F (Dloc 034541)));
    Let b7 = M[008310];
    Let b8 = M[008311];
    PopStack popped9;
    if (Equal(MakeHiLo(b7,b8),popped9)) {
      TraceOperation 034535 (Call (Floc 042532) [] Sp);
      PushFrame;
      PushReturnAddress 034535;
      MakeRoutineFrame 0;
      Jump: 042533
    } else {
      Jump: 034541
    }
  } else {
    Jump: 034569
  }
LocReturn 034535:
  PushStack call_result;
  TraceOperation 034540 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034541:
  TraceOperation 034541 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 034552)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  PushStack Widen(b3);
  if (IsZero(Widen(b3))) {
    Jump: 034552
  } else {
    TraceOperation 034545 (Call (Floc 042074) [Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 034545;
    SetLocal 1 MakeHiLo(b4,b5);
    MakeRoutineFrame 10;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 1;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 042095
  }
LocReturn 034545:
  PushStack call_result;
  TraceOperation 034551 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 034552:
  TraceOperation 034552 (Print "There is nothing on");
  GamePrint "There is nothing on";
  TraceOperation 034559 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034559;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 034559:
  PushStack call_result;
  TraceOperation 034566 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034569:
  TraceOperation 034569 (Test_attr (Var (Global 201)) (Con 28) (Branch F (Dloc 034625)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    TraceOperation 034573 (Print "All you can tell is that");
    GamePrint "All you can tell is that";
    TraceOperation 034588 (Test_attr (Var (Global 201)) (Con 23) (Branch F (Dloc 034609)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,0)) {
      TraceOperation 034592 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
      Let b7 = M[008310];
      Let b8 = M[008311];
      PushFrame;
      PushReturnAddress 034592;
      SetLocal 1 MakeHiLo(b7,b8);
      SetLocal 2 1;
      MakeRoutineFrame 2;
      Jump: 043743
    } else {
      Jump: 034609
    }
  } else {
    Jump: 034625
  }
LocReturn 034592:
  PushStack call_result;
  TraceOperation 034599 (Print " is open.");
  GamePrint " is open.";
  TraceOperation 034606 (Jump 034623);
  Jump: 034623
LocOp 034609:
  TraceOperation 034609 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034609;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 034609:
  PushStack call_result;
  TraceOperation 034616 (Print " is closed.");
  GamePrint " is closed.";
  Jump: 034623
LocOp 034623:
  TraceOperation 034623 New_line;
  GamePrint "\n";
  TraceOperation 034624 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034625:
  TraceOperation 034625 (Test_attr (Var (Global 201)) (Con 24) (Branch F (Dloc 034707)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,7)) {
    TraceOperation 034630 (Get_parent (Var (Global 195)) Sp);
    Let b4 = M[008298];
    Let b5 = M[008299];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
    PushStack Widen(b6);
    TraceOperation 034633 (Je [Var (Global 201),Var Sp] (Branch F (Dloc 034643)));
    Let b7 = M[008310];
    Let b8 = M[008311];
    PopStack popped9;
    if (Equal(MakeHiLo(b7,b8),popped9)) {
      TraceOperation 034637 (Call (Floc 042532) [] Sp);
      PushFrame;
      PushReturnAddress 034637;
      MakeRoutineFrame 0;
      Jump: 042533
    } else {
      Jump: 034643
    }
  } else {
    Jump: 034707
  }
LocReturn 034637:
  PushStack call_result;
  TraceOperation 034642 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034643:
  TraceOperation 034643 (Call (Floc 043506) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034643;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 043509
LocReturn 034643:
  PushStack call_result;
  TraceOperation 034649 (Jz (Var Sp) (Branch T (Dloc 034670)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 034670
  } else {
    TraceOperation 034652 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 034663)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    PushStack Widen(b4);
    if (IsZero(Widen(b4))) {
      Jump: 034663
    } else {
      TraceOperation 034656 (Call (Floc 042074) [Var (Global 201)] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame;
      PushReturnAddress 034656;
      SetLocal 1 MakeHiLo(b5,b6);
      MakeRoutineFrame 10;
      SetLocal 10 0;
      SetLocal 9 0;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 1;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 042095
    }
  }
LocReturn 034656:
  PushStack call_result;
  TraceOperation 034662 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 034663:
  TraceOperation 034663 (Print_ret "It's empty.");
  GamePrint "It's empty.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034670:
  TraceOperation 034670 (Test_attr (Var (Global 201)) (Con 23) (Branch T (Dloc 034686)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    Jump: 034686
  } else {
    TraceOperation 034674 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 034686)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
    PushStack Widen(b6);
    if (IsZero(Widen(b6))) {
      Jump: 034686
    } else {
      TraceOperation 034678 (Call (Floc 022042) [Con 103,Var (Global 201)] Sp);
      Let b7 = M[008310];
      Let b8 = M[008311];
      PushFrame;
      PushReturnAddress 034678;
      SetLocal 1 103;
      SetLocal 2 MakeHiLo(b7,b8);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    }
  }
LocReturn 034678:
  PushStack call_result;
  TraceOperation 034685 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034686:
  TraceOperation 034686 (Print "It seems that");
  GamePrint "It seems that";
  TraceOperation 034693 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034693;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 034693:
  PushStack call_result;
  TraceOperation 034700 (Print_ret " is closed.");
  GamePrint " is closed.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034707:
  TraceOperation 034707 (Print_ret "You can't do that.");
  GamePrint "You can't do that.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034718:
  MakeRoutineFrame 0;
  Jump: 034719
LocOp 034719:
  TraceOperation 034719 (Call (Floc 043468) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034719;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 034719:
  PushStack call_result;
  TraceOperation 034725 (Jz (Var Sp) (Branch T (Dloc 034750)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 034750
  } else {
    TraceOperation 034728 (Test_attr (Var (Global 201)) (Con 9) (Branch F (Dloc 034743)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),1)];
    if (TestBit(b4,6)) {
      TraceOperation 034732 (Print_ret "You're wearing it!");
      GamePrint "You're wearing it!\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 034743
    }
  }
LocOp 034743:
  TraceOperation 034743 (Print_ret "You're holding it!");
  GamePrint "You're holding it!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034750:
  TraceOperation 034750 (Print "There is nothing but ");
  GamePrint "There is nothing but ";
  TraceOperation 034757 (Je [Var (Global 201),Con 114] (Branch F (Dloc 034769)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),114)) {
    TraceOperation 034761 (Print "a ");
    GamePrint "a ";
    TraceOperation 034764 (Print_obj (Con 115));
    Let b3 = M[001793];
    Let b4 = M[001794];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 034766 (Jump 034804);
    Jump: 034804
  } else {
    Jump: 034769
  }
LocOp 034769:
  TraceOperation 034769 (Je [Var (Global 201),Con 64] (Branch F (Dloc 034781)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 034773 (Print "water");
    GamePrint "water";
    TraceOperation 034778 (Jump 034804);
    Jump: 034804
  } else {
    Jump: 034781
  }
LocOp 034781:
  TraceOperation 034781 (Je [Var (Global 201),Con 139] (Branch F (Dloc 034799)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 034785 (Test_attr (Con 139) (Con 8) (Branch F (Dloc 034799)));
    Let b3 = M[002003];
    if (TestBit(b3,7)) {
      TraceOperation 034789 (Print "a drain");
      GamePrint "a drain";
      TraceOperation 034796 (Jump 034804);
      Jump: 034804
    } else {
      Jump: 034799
    }
  } else {
    Jump: 034799
  }
LocOp 034799:
  TraceOperation 034799 (Print "dust");
  GamePrint "dust";
  Jump: 034804
LocOp 034804:
  TraceOperation 034804 (Print_ret " there.");
  GamePrint " there.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034810:
  MakeRoutineFrame 0;
  Jump: 034811
LocOp 034811:
  TraceOperation 034811 (Jz (Var (Global 85)) (Branch F (Dloc 034818)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 034814 (Print_paddr (Var (Global 56)));
    Let b3 = M[008020];
    Let b4 = M[008021];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 034816 New_line;
    GamePrint "\n";
    TraceOperation 034817 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 034818
  }
LocOp 034818:
  TraceOperation 034818 (Je [Var (Global 201),Con 217] (Branch F (Dloc 034842)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),217)) {
    TraceOperation 034822 (Test_attr (Var (Global 0)) (Con 7) (Branch F (Dloc 034834)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),0)];
    if (TestBit(b5,0)) {
      TraceOperation 034826 (Call (Floc 022042) [Con 61,Con 38] Sp);
      PushFrame;
      PushReturnAddress 034826;
      SetLocal 1 61;
      SetLocal 2 38;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 034834
    }
  } else {
    Jump: 034842
  }
LocReturn 034826:
  PushStack call_result;
  TraceOperation 034833 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034834:
  TraceOperation 034834 (Call (Floc 022042) [Con 61,Con 40] Sp);
  PushFrame;
  PushReturnAddress 034834;
  SetLocal 1 61;
  SetLocal 2 40;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 034834:
  PushStack call_result;
  TraceOperation 034841 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034842:
  TraceOperation 034842 (Call (Floc 022042) [Con 63,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034842;
  SetLocal 1 63;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 034842:
  PushStack call_result;
  TraceOperation 034849 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034850:
  MakeRoutineFrame 0;
  Jump: 034851
LocOp 034851:
  TraceOperation 034851 (Call (Floc 036246) [] Sp);
  PushFrame;
  PushReturnAddress 034851;
  MakeRoutineFrame 0;
  Jump: 036247
LocReturn 034851:
  PushStack call_result;
  TraceOperation 034856 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 034858:
  MakeRoutineFrame 0;
  Jump: 034859
LocOp 034859:
  TraceOperation 034859 (Print "You can't make");
  GamePrint "You can't make";
  TraceOperation 034866 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034866;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 034866:
  PushStack call_result;
  TraceOperation 034872 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 034876:
  MakeRoutineFrame 0;
  Jump: 034877
LocOp 034877:
  TraceOperation 034877 (Call (Floc 043468) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 034877;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 034877:
  PushStack call_result;
  TraceOperation 034883 (Jz (Var Sp) (Branch T (Dloc 034901)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 034901
  } else {
    TraceOperation 034886 (Print_ret "Why juggle objects?");
    GamePrint "Why juggle objects?\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 034901:
  TraceOperation 034901 (Je [Var (Global 201),Var (Global 116)] (Branch F (Dloc 034932)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008140];
  Let b4 = M[008141];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 034905 (Store (Con 132) (Con 0));
    SetByte 008140 0;
    SetByte 008141 0;
    TraceOperation 034908 (Print "Okay, it's no longer in front of the ");
    GamePrint "Okay, it's no longer in front of the ";
    TraceOperation 034927 (Print_obj (Con 112));
    Let b5 = M[001766];
    Let b6 = M[001767];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 034929 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 034932
  }
LocOp 034932:
  TraceOperation 034932 (Test_attr (Var (Global 201)) (Con 22) (Branch F (Dloc 034942)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,1)) {
    TraceOperation 034936 (Call (Floc 057842) [] Sp);
    PushFrame;
    PushReturnAddress 034936;
    MakeRoutineFrame 0;
    Jump: 057843
  } else {
    Jump: 034942
  }
LocReturn 034936:
  PushStack call_result;
  TraceOperation 034941 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 034942:
  TraceOperation 034942 (Call (Floc 043578) [] Sp);
  PushFrame;
  PushReturnAddress 034942;
  MakeRoutineFrame 0;
  Jump: 043579
LocReturn 034942:
  PushStack call_result;
  TraceOperation 034947 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 034950 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 034981)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),3)];
    if (TestBit(b4,6)) {
      TraceOperation 034954 (Print "Moving");
      GamePrint "Moving";
      TraceOperation 034961 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame;
      PushReturnAddress 034961;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 1;
      MakeRoutineFrame 2;
      Jump: 043743
    } else {
      Jump: 034981
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  }
LocReturn 034961:
  PushStack call_result;
  TraceOperation 034968 (Print_ret " reveals nothing.");
  GamePrint " reveals nothing.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 034981:
  TraceOperation 034981 (Je [Var (Global 201),Con 49] (Branch F (Dloc 035006)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 034985 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 035006)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 034989 (Call (Floc 043298) [Con 206] Sp);
      PushFrame;
      PushReturnAddress 034989;
      SetLocal 1 206;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043303
    } else {
      Jump: 035006
    }
  } else {
    Jump: 035006
  }
LocReturn 034989:
  PushStack call_result;
  TraceOperation 034995 (Jz (Var Sp) (Branch T (Dloc 035006)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035006
  } else {
    TraceOperation 034998 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame;
    PushReturnAddress 034998;
    SetLocal 1 145;
    SetLocal 2 205;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 034998:
  PushStack call_result;
  TraceOperation 035005 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035006:
  TraceOperation 035006 (Print "You can't move");
  GamePrint "You can't move";
  TraceOperation 035013 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 035013;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 035013:
  PushStack call_result;
  TraceOperation 035020 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 035024:
  MakeRoutineFrame 0;
  Jump: 035025
LocOp 035025:
  TraceOperation 035025 (Call (Floc 043716) [Con -11694] Sp);
  PushFrame;
  PushReturnAddress 035025;
  SetLocal 1 -11694;
  MakeRoutineFrame 1;
  Jump: 043719
LocReturn 035025:
  PushStack call_result;
  TraceOperation 035032 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 035034:
  MakeRoutineFrame 0;
  Jump: 035035
LocOp 035035:
  TraceOperation 035035 (Je [Var (Global 201),Con 94] (Branch F (Dloc 035045)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),94)) {
    TraceOperation 035039 (Call (Floc 033954) [] Sp);
    PushFrame;
    PushReturnAddress 035039;
    MakeRoutineFrame 0;
    Jump: 033955
  } else {
    Jump: 035045
  }
LocReturn 035039:
  PushStack call_result;
  TraceOperation 035044 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 035045:
  TraceOperation 035045 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 035045;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 035045:
  PushStack call_result;
  TraceOperation 035050 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 035052:
  MakeRoutineFrame 0;
  Jump: 035053
LocOp 035053:
  TraceOperation 035053 (Je [Var (Global 213),Con 1] (Branch T Dfalse));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),1)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 035057 (Je [Var (Global 213),Con 2] (Branch F (Dloc 035068)));
    Let b4 = M[008334];
    Let b5 = M[008335];
    if (Equal(MakeHiLo(b4,b5),2)) {
      TraceOperation 035061 (Call (Floc 043620) [Con 16] Sp);
      PushFrame;
      PushReturnAddress 035061;
      SetLocal 1 16;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 035068
    }
  }
LocReturn 035061:
  PushStack call_result;
  TraceOperation 035067 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 035068:
  TraceOperation 035068 (Je [Var (Global 213),Con 3,Con 10] (Branch F (Dloc 035087)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),3),Equal(MakeHiLo(b1,b2),10))) {
    TraceOperation 035074 (Print_ret "I should think not.");
    GamePrint "I should think not.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035087
  }
LocOp 035087:
  TraceOperation 035087 (Je [Var (Global 213),Con 4] (Branch F (Dloc 035124)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 035091 (Print_ret "The word \"no\" is not in our hostess' vocabulary.");
    GamePrint "The word \"no\" is not in our hostess' vocabulary.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035124
  }
LocOp 035124:
  TraceOperation 035124 (Je [Var (Global 213),Con 5] (Branch F (Dloc 035137)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 035128 (Store (Con 229) (Con 3));
    SetByte 008334 0;
    SetByte 008335 3;
    TraceOperation 035131 (Call (Floc 040748) [] Sp);
    PushFrame;
    PushReturnAddress 035131;
    MakeRoutineFrame 0;
    Jump: 040749
  } else {
    Jump: 035137
  }
LocReturn 035131:
  PushStack call_result;
  TraceOperation 035136 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 035137:
  TraceOperation 035137 (Je [Var (Global 213),Con 6,Con 11] (Branch F (Dloc 035152)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),6),Equal(MakeHiLo(b1,b2),11))) {
    TraceOperation 035143 (Store (Con 229) (Con 6));
    SetByte 008334 0;
    SetByte 008335 6;
    TraceOperation 035146 (Call (Floc 040748) [] Sp);
    PushFrame;
    PushReturnAddress 035146;
    MakeRoutineFrame 0;
    Jump: 040749
  } else {
    Jump: 035152
  }
LocReturn 035146:
  PushStack call_result;
  TraceOperation 035151 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 035152:
  TraceOperation 035152 (Je [Var (Global 213),Con 7,Con 8] (Branch T (Dloc 035164)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),7),Equal(MakeHiLo(b1,b2),8))) {
    Jump: 035164
  } else {
    TraceOperation 035158 (Je [Var (Global 213),Con 13,Con 15] (Branch F (Dloc 035173)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (LogOr(Equal(MakeHiLo(b3,b4),13),Equal(MakeHiLo(b3,b4),15))) {
      Jump: 035164
    } else {
      Jump: 035173
    }
  }
LocOp 035164:
  TraceOperation 035164 (Store (Con 229) (Con 3));
  SetByte 008334 0;
  SetByte 008335 3;
  TraceOperation 035167 (Call (Floc 040748) [] Sp);
  PushFrame;
  PushReturnAddress 035167;
  MakeRoutineFrame 0;
  Jump: 040749
LocReturn 035167:
  PushStack call_result;
  TraceOperation 035172 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 035173:
  TraceOperation 035173 (Je [Var (Global 213),Con 9] (Branch F (Dloc 035186)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 035177 (Print_ret "I disagree.");
    GamePrint "I disagree.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035186
  }
LocOp 035186:
  TraceOperation 035186 (Je [Var (Global 213),Con 12] (Branch F (Dloc 035256)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 035191 (Call (Floc 052048) [] Sp);
    PushFrame;
    PushReturnAddress 035191;
    MakeRoutineFrame 0;
    Jump: 052049
  } else {
    Jump: 035256
  }
LocReturn 035191:
  PushStack call_result;
  TraceOperation 035196 (Print "\"Think you're funny, huh?\" The ");
  GamePrint "\"Think you're funny, huh?\" The ";
  TraceOperation 035217 (Print_obj (Con 3));
  Let b1 = M[000785];
  Let b2 = M[000786];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 035219 (Print_paddr (Var (Global 59)));
  Let b5 = M[008026];
  Let b6 = M[008027];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
  TraceOperation 035221 (Print_ret ", making sure to spray you with his Sub-Ethon exhaust.");
  GamePrint ", making sure to spray you with his Sub-Ethon exhaust.\n";
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 035256:
  TraceOperation 035256 (Je [Var (Global 213),Con 14] (Branch F (Dloc 035269)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),14)) {
    TraceOperation 035260 (Print_ret "Then stop.");
    GamePrint "Then stop.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035269
  }
LocOp 035269:
  TraceOperation 035269 (Je [Var (Global 213),Con 16] (Branch F (Dloc 035286)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 035273 (Print_ret "I didn't think so.");
    GamePrint "I didn't think so.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 035286
  }
LocOp 035286:
  TraceOperation 035286 (Je [Var (Global 213),Con 18,Con 19] (Branch F (Dloc 035298)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),18),Equal(MakeHiLo(b1,b2),19))) {
    TraceOperation 035292 (Call (Floc 040748) [] Sp);
    PushFrame;
    PushReturnAddress 035292;
    MakeRoutineFrame 0;
    Jump: 040749
  } else {
    Jump: 035298
  }
LocReturn 035292:
  PushStack call_result;
  TraceOperation 035297 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 035298:
  TraceOperation 035298 (Print_ret "You sound rather negative.");
  GamePrint "You sound rather negative.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 035318:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 035323
LocOp 035323:
  TraceOperation 035323 (Test_attr (Var (Global 201)) (Con 8) (Branch F (Dloc 035333)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,7)) {
    TraceOperation 035327 (Call (Floc 031360) [] Sp);
    PushFrame;
    PushReturnAddress 035327;
    MakeRoutineFrame 0;
    Jump: 031361
  } else {
    Jump: 035333
  }
LocReturn 035327:
  PushStack call_result;
  TraceOperation 035332 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 035333:
  TraceOperation 035333 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 035347)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 035337 (Je [Var (Global 201),Con 209] (Branch T (Dloc 035347)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (Equal(MakeHiLo(b4,b5),209)) {
      Jump: 035347
    } else {
      TraceOperation 035341 (Call (Floc 031360) [] Sp);
      PushFrame;
      PushReturnAddress 035341;
      MakeRoutineFrame 0;
      Jump: 031361
    }
  } else {
    Jump: 035347
  }
LocReturn 035341:
  PushStack call_result;
  TraceOperation 035346 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 035347:
  TraceOperation 035347 (Test_attr (Var (Global 201)) (Con 24) (Branch F (Dloc 035411)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,7)) {
    TraceOperation 035352 (Test_attr (Var (Global 201)) (Con 23) (Branch F (Dloc 035360)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,0)) {
      TraceOperation 035356 (Print_paddr (Var (Global 53)));
      Let b7 = M[008014];
      Let b8 = M[008015];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
      TraceOperation 035358 New_line;
      GamePrint "\n";
      TraceOperation 035359 Rtrue;
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    } else {
      Jump: 035360
    }
  } else {
    Jump: 035411
  }
LocOp 035360:
  TraceOperation 035360 (Set_attr (Var (Global 201)) (Con 23));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2) SetBit(b3,0);
  TraceOperation 035363 (Set_attr (Var (Global 201)) (Con 5));
  Let b4 = M[008310];
  Let b5 = M[008311];
  Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),0)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),0) SetBit(b6,2);
  TraceOperation 035366 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 035374)));
  Let b7 = M[008310];
  Let b8 = M[008311];
  Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
  PushStack Widen(b9);
  if (IsZero(Widen(b9))) {
    Jump: 035374
  } else {
    TraceOperation 035370 (Test_attr (Var (Global 201)) (Con 17) (Branch F (Dloc 035381)));
    Let b10 = M[008310];
    Let b11 = M[008311];
    Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),2)];
    if (TestBit(b12,6)) {
      Jump: 035374
    } else {
      Jump: 035381
    }
  }
LocOp 035374:
  TraceOperation 035374 (Print_ret "Opened.");
  GamePrint "Opened.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035381:
  TraceOperation 035381 (Print "Opening");
  GamePrint "Opening";
  TraceOperation 035388 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 035388;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 035388:
  PushStack call_result;
  TraceOperation 035395 (Print " reveals");
  GamePrint " reveals";
  TraceOperation 035402 (Call (Floc 042360) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 035402;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 6;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 1;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 042373
LocReturn 035402:
  PushStack call_result;
  TraceOperation 035408 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035411:
  TraceOperation 035411 (Test_attr (Var (Global 201)) (Con 28) (Branch F (Dloc 035453)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    TraceOperation 035415 (Test_attr (Var (Global 201)) (Con 23) (Branch F (Dloc 035423)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,0)) {
      TraceOperation 035419 (Print_paddr (Var (Global 53)));
      Let b7 = M[008014];
      Let b8 = M[008015];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
      TraceOperation 035421 New_line;
      GamePrint "\n";
      TraceOperation 035422 Rtrue;
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    } else {
      Jump: 035423
    }
  } else {
    Jump: 035453
  }
LocOp 035423:
  TraceOperation 035423 (Print "Okay,");
  GamePrint "Okay,";
  TraceOperation 035430 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 035430;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 035430:
  PushStack call_result;
  TraceOperation 035437 (Print " is now open.");
  GamePrint " is now open.";
  TraceOperation 035448 New_line;
  GamePrint "\n";
  TraceOperation 035449 (Set_attr (Var (Global 201)) (Con 23));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2) SetBit(b3,0);
  TraceOperation 035452 Rtrue;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult 1;
  JumpIndirect: (return) return_address_4
LocOp 035453:
  TraceOperation 035453 (Call (Floc 057650) [] Sp);
  PushFrame;
  PushReturnAddress 035453;
  MakeRoutineFrame 0;
  Jump: 057651
LocReturn 035453:
  PushStack call_result;
  TraceOperation 035458 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 035460:
  MakeRoutineFrame 0;
  Jump: 035461
LocOp 035461:
  TraceOperation 035461 (Print_ret "Not surprised.");
  GamePrint "Not surprised.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 035474:
  MakeRoutineFrame 0;
  Jump: 035475
LocOp 035475:
  TraceOperation 035475 (Call (Floc 031360) [] Sp);
  PushFrame;
  PushReturnAddress 035475;
  MakeRoutineFrame 0;
  Jump: 031361
LocReturn 035475:
  PushStack call_result;
  TraceOperation 035480 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 035482:
  MakeRoutineFrame 0;
  Jump: 035483
LocOp 035483:
  TraceOperation 035483 (Call (Floc 022042) [Con 124,Var (Global 201),Var (Global 202)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008312];
  Let b4 = M[008313];
  PushFrame;
  PushReturnAddress 035483;
  SetLocal 1 124;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 035483:
  PushStack call_result;
  TraceOperation 035491 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 035492:
  MakeRoutineFrame 0;
  Jump: 035493
LocOp 035493:
  TraceOperation 035493 (Je [Var (Global 202),Con 214] (Branch F (Dloc 035506)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),214)) {
    TraceOperation 035497 (Call (Floc 022042) [Con 46,Var (Global 201),Var (Global 202)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[008312];
    Let b6 = M[008313];
    PushFrame;
    PushReturnAddress 035497;
    SetLocal 1 46;
    SetLocal 2 MakeHiLo(b3,b4);
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 022057
  } else {
    Jump: 035506
  }
LocReturn 035497:
  PushStack call_result;
  TraceOperation 035505 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035506:
  TraceOperation 035506 (Print "You can't plant something in");
  GamePrint "You can't plant something in";
  TraceOperation 035517 (Call (Floc 043738) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 035517;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 035517:
  PushStack call_result;
  TraceOperation 035523 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 035526:
  MakeRoutineFrame 0;
  Jump: 035527
LocOp 035527:
  TraceOperation 035527 (Print "You can't seem to plug");
  GamePrint "You can't seem to plug";
  TraceOperation 035538 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 035538;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 035538:
  PushStack call_result;
  TraceOperation 035545 (Print " into");
  GamePrint " into";
  TraceOperation 035550 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 035550;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 035550:
  PushStack call_result;
  TraceOperation 035557 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 035560:
  MakeRoutineFrame 0;
  Jump: 035561
LocOp 035561:
  TraceOperation 035561 (Je [Var (Global 0),Con 66] (Branch F (Dloc 035574)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 035565 (Call (Floc 022042) [Con 111,Con 64,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 035565;
    SetLocal 1 111;
    SetLocal 2 64;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 022057
  } else {
    Jump: 035574
  }
LocReturn 035565:
  PushStack call_result;
  TraceOperation 035573 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035574:
  TraceOperation 035574 (Call (Floc 038194) [] Sp);
  PushFrame;
  PushReturnAddress 035574;
  MakeRoutineFrame 0;
  Jump: 038195
LocReturn 035574:
  PushStack call_result;
  TraceOperation 035579 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 035580:
  MakeRoutineFrame 0;
  Jump: 035581
LocOp 035581:
  TraceOperation 035581 (Call (Floc 030950) [] Sp);
  PushFrame;
  PushReturnAddress 035581;
  MakeRoutineFrame 0;
  Jump: 030951
LocReturn 035581:
  PushStack call_result;
  TraceOperation 035586 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 035588:
  MakeRoutineFrame 0;
  Jump: 035589
LocOp 035589:
  TraceOperation 035589 (Je [Var (Global 0),Con 149] (Branch F (Dloc 035647)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),149)) {
    TraceOperation 035593 (Call (Floc 020662) [Con 30621] Sp);
    PushFrame;
    PushReturnAddress 035593;
    SetLocal 1 30621;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 020671
  } else {
    Jump: 035647
  }
LocReturn 035593:
  PushStack call_result;
  TraceOperation 035600 (Jz (Var Sp) (Branch T (Dloc 035647)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035647
  } else {
    TraceOperation 035603 (Print "Prosser says \"I wouldn't stop the ");
    GamePrint "Prosser says \"I wouldn't stop the ";
    TraceOperation 035622 (Print_obj (Con 166));
    Let b2 = M[002252];
    Let b3 = M[002253];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 035624 (Print_ret " even if you were lying in front of it!\"");
    GamePrint " even if you were lying in front of it!\"\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  }
LocOp 035647:
  TraceOperation 035647 (Print_ret "To whom? About what? Why?");
  GamePrint "To whom? About what? Why?\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 035668:
  MakeRoutineFrame 0;
  Jump: 035669
LocOp 035669:
  TraceOperation 035669 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 035669;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 035669:
  PushStack call_result;
  TraceOperation 035674 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 035676:
  MakeRoutineFrame 0;
  Jump: 035677
LocOp 035677:
  TraceOperation 035677 (Je [Var (Global 201),Con 49] (Branch F (Dloc 035702)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 035681 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 035702)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 035685 (Call (Floc 043298) [Con 206] Sp);
      PushFrame;
      PushReturnAddress 035685;
      SetLocal 1 206;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043303
    } else {
      Jump: 035702
    }
  } else {
    Jump: 035702
  }
LocReturn 035685:
  PushStack call_result;
  TraceOperation 035691 (Jz (Var Sp) (Branch T (Dloc 035702)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035702
  } else {
    TraceOperation 035694 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame;
    PushReturnAddress 035694;
    SetLocal 1 145;
    SetLocal 2 205;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 035694:
  PushStack call_result;
  TraceOperation 035701 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035702:
  TraceOperation 035702 (Call (Floc 043716) [Con -11689] Sp);
  PushFrame;
  PushReturnAddress 035702;
  SetLocal 1 -11689;
  MakeRoutineFrame 1;
  Jump: 043719
LocReturn 035702:
  PushStack call_result;
  TraceOperation 035709 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 035710:
  MakeRoutineFrame 0;
  Jump: 035711
LocOp 035711:
  TraceOperation 035711 (Je [Var (Global 202),Con 42] (Branch F (Dloc 035723)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),42)) {
    TraceOperation 035715 (Call (Floc 022042) [Con 53,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 035715;
    SetLocal 1 53;
    SetLocal 2 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 035723
  }
LocReturn 035715:
  PushStack call_result;
  TraceOperation 035722 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035723:
  TraceOperation 035723 (Call (Floc 043468) [Var (Global 202),Var (Global 201)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 035723;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  MakeRoutineFrame 2;
  Jump: 043473
LocReturn 035723:
  PushStack call_result;
  TraceOperation 035730 (Jz (Var Sp) (Branch T (Dloc 035786)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035786
  } else {
    TraceOperation 035733 (Print "You can't put");
    GamePrint "You can't put";
    TraceOperation 035740 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b2 = M[008310];
    Let b3 = M[008311];
    PushFrame;
    PushReturnAddress 035740;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  }
LocReturn 035740:
  PushStack call_result;
  TraceOperation 035747 (Print " in");
  GamePrint " in";
  TraceOperation 035750 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 035750;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 035750:
  PushStack call_result;
  TraceOperation 035757 (Print " when");
  GamePrint " when";
  TraceOperation 035762 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 035762;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 035762:
  PushStack call_result;
  TraceOperation 035769 (Print " is already in");
  GamePrint " is already in";
  TraceOperation 035776 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 035776;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 035776:
  PushStack call_result;
  TraceOperation 035783 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035786:
  TraceOperation 035786 (Call (Floc 041208) [] Sp);
  PushFrame;
  PushReturnAddress 035786;
  MakeRoutineFrame 0;
  Jump: 041209
LocReturn 035786:
  PushStack call_result;
  TraceOperation 035791 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 035794 (Jz (Var (Global 204)) (Branch T (Dloc 035806)));
    Let b2 = M[008316];
    Let b3 = M[008317];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 035806
    } else {
      TraceOperation 035797 (Call (Floc 022042) [Con 54,Var (Global 201),Var (Global 202)] Sp);
      Let b4 = M[008310];
      Let b5 = M[008311];
      Let b6 = M[008312];
      Let b7 = M[008313];
      PushFrame;
      PushReturnAddress 035797;
      SetLocal 1 54;
      SetLocal 2 MakeHiLo(b4,b5);
      SetLocal 3 MakeHiLo(b6,b7);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 1;
    JumpIndirect: (return) return_address_8
  }
LocReturn 035797:
  PushStack call_result;
  TraceOperation 035805 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035806:
  TraceOperation 035806 (Je [Var (Global 201),Con 9] (Branch F (Dloc 035819)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 035810 (Call (Floc 022042) [Con 112,Con 9,Var (Global 202)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame;
    PushReturnAddress 035810;
    SetLocal 1 112;
    SetLocal 2 9;
    SetLocal 3 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 022057
  } else {
    Jump: 035819
  }
LocReturn 035810:
  PushStack call_result;
  TraceOperation 035818 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035819:
  TraceOperation 035819 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 035832)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008324];
  Let b4 = M[008325];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 035823 (Store (Con 224) (Con 0));
    SetByte 008324 0;
    SetByte 008325 0;
    TraceOperation 035826 (Call (Floc 057820) [] Sp);
    PushFrame;
    PushReturnAddress 035826;
    MakeRoutineFrame 0;
    Jump: 057821
  } else {
    Jump: 035832
  }
LocReturn 035826:
  PushStack call_result;
  TraceOperation 035831 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 035832:
  TraceOperation 035832 (Je [Var (Global 201),Con 182] (Branch F (Dloc 035848)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),182)) {
    TraceOperation 035836 (Jz (Var (Global 208)) (Branch T (Dloc 035848)));
    Let b3 = M[008324];
    Let b4 = M[008325];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 035848
    } else {
      TraceOperation 035839 (Store (Con 224) (Con 0));
      SetByte 008324 0;
      SetByte 008325 0;
      TraceOperation 035842 (Call (Floc 057820) [] Sp);
      PushFrame;
      PushReturnAddress 035842;
      MakeRoutineFrame 0;
      Jump: 057821
    }
  } else {
    Jump: 035848
  }
LocReturn 035842:
  PushStack call_result;
  TraceOperation 035847 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 035848:
  TraceOperation 035848 (Je [Var (Global 201),Con 182] (Branch F (Dloc 035855)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),182)) {
    TraceOperation 035852 (Jz (Var (Global 209)) (Branch F (Dloc 035869)));
    Let b3 = M[008326];
    Let b4 = M[008327];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 035855
    } else {
      Jump: 035869
    }
  } else {
    Jump: 035855
  }
LocOp 035855:
  TraceOperation 035855 (Je [Var (Global 201),Con 186] (Branch F (Dloc 035862)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),186)) {
    TraceOperation 035859 (Jz (Var (Global 209)) (Branch F (Dloc 035869)));
    Let b3 = M[008326];
    Let b4 = M[008327];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 035862
    } else {
      Jump: 035869
    }
  } else {
    Jump: 035862
  }
LocOp 035862:
  TraceOperation 035862 (Je [Var (Global 201),Con 186] (Branch F Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),186)) {
    TraceOperation 035866 (Jz (Var (Global 210)) (Branch T Dfalse));
    Let b3 = M[008328];
    Let b4 = M[008329];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 035869
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocOp 035869:
  TraceOperation 035869 (Print_ret "You'll have to unplug it first.");
  GamePrint "You'll have to unplug it first.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 035890:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 035893
LocOp 035893:
  TraceOperation 035893 (Test_attr (Var (Global 202)) (Con 23) (Branch T (Dloc 035939)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    Jump: 035939
  } else {
    TraceOperation 035897 (Test_attr (Var (Global 202)) (Con 28) (Branch T (Dloc 035939)));
    Let b4 = M[008312];
    Let b5 = M[008313];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
    if (TestBit(b6,3)) {
      Jump: 035939
    } else {
      TraceOperation 035901 (Test_attr (Var (Global 202)) (Con 24) (Branch T (Dloc 035939)));
      Let b7 = M[008312];
      Let b8 = M[008313];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),3)];
      if (TestBit(b9,7)) {
        Jump: 035939
      } else {
        TraceOperation 035905 (Test_attr (Var (Global 202)) (Con 8) (Branch T (Dloc 035939)));
        Let b10 = M[008312];
        Let b11 = M[008313];
        Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),1)];
        if (TestBit(b12,7)) {
          Jump: 035939
        } else {
          TraceOperation 035909 (Test_attr (Var (Global 202)) (Con 12) (Branch T (Dloc 035939)));
          Let b13 = M[008312];
          Let b14 = M[008313];
          Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),1)];
          if (TestBit(b15,3)) {
            Jump: 035939
          } else {
            TraceOperation 035913 (Print "You can't put");
            GamePrint "You can't put";
            TraceOperation 035920 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
            Let b16 = M[008310];
            Let b17 = M[008311];
            PushFrame;
            PushReturnAddress 035920;
            SetLocal 1 MakeHiLo(b16,b17);
            SetLocal 2 1;
            MakeRoutineFrame 2;
            Jump: 043743
          }
        }
      }
    }
  }
LocReturn 035920:
  PushStack call_result;
  TraceOperation 035927 (Print " in");
  GamePrint " in";
  TraceOperation 035930 (Call (Floc 043738) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 035930;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 035930:
  PushStack call_result;
  TraceOperation 035936 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035939:
  TraceOperation 035939 (Je [Var (Global 202),Var (Global 201)] (Branch T (Dloc 035963)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    Jump: 035963
  } else {
    TraceOperation 035943 (Call (Floc 043468) [Var (Global 201)] Sp);
    Let b5 = M[008310];
    Let b6 = M[008311];
    PushFrame;
    PushReturnAddress 035943;
    SetLocal 1 MakeHiLo(b5,b6);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  }
LocReturn 035943:
  PushStack call_result;
  TraceOperation 035949 (Jz (Var Sp) (Branch T (Dloc 035956)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 035956
  } else {
    TraceOperation 035952 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 035963)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),3)];
    if (TestBit(b4,6)) {
      Jump: 035956
    } else {
      Jump: 035963
    }
  }
LocOp 035956:
  TraceOperation 035956 (Je [Var (Global 202),Con 182,Con 7,Con 186] (Branch F (Dloc 035976)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),182),Equal(MakeHiLo(b1,b2),7)),Equal(MakeHiLo(b1,b2),186))) {
    Jump: 035963
  } else {
    Jump: 035976
  }
LocOp 035963:
  TraceOperation 035963 (Print_ret "How can you do that?");
  GamePrint "How can you do that?\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 035976:
  TraceOperation 035976 (Test_attr (Var (Global 202)) (Con 23) (Branch T (Dloc 036021)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    Jump: 036021
  } else {
    TraceOperation 035980 (Test_attr (Var (Global 202)) (Con 8) (Branch T (Dloc 036021)));
    Let b4 = M[008312];
    Let b5 = M[008313];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),1)];
    if (TestBit(b6,7)) {
      Jump: 036021
    } else {
      TraceOperation 035984 (Print "Inspection reveals that");
      GamePrint "Inspection reveals that";
      TraceOperation 036001 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame;
      PushReturnAddress 036001;
      SetLocal 1 MakeHiLo(b7,b8);
      SetLocal 2 1;
      MakeRoutineFrame 2;
      Jump: 043743
    }
  }
LocReturn 036001:
  PushStack call_result;
  TraceOperation 036008 (Print " isn't open.");
  GamePrint " isn't open.";
  TraceOperation 036015 New_line;
  GamePrint "\n";
  TraceOperation 036016 (Store (Con 207) (Var (Global 202)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  SetByte 008290 b1;
  SetByte 008291 b2;
  TraceOperation 036019 (Ret (Var (Global 191)));
  Let b3 = M[008290];
  Let b4 = M[008291];
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult MakeHiLo(b3,b4);
  JumpIndirect: (return) return_address_5
LocOp 036021:
  TraceOperation 036021 (Jin (Var (Global 201)) (Var (Global 202)) (Branch F (Dloc 036056)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008312];
  Let b4 = M[008313];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 036025 (Print "I think");
    GamePrint "I think";
    TraceOperation 036032 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b6 = M[008310];
    Let b7 = M[008311];
    PushFrame;
    PushReturnAddress 036032;
    SetLocal 1 MakeHiLo(b6,b7);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 036056
  }
LocReturn 036032:
  PushStack call_result;
  TraceOperation 036039 (Print " is already in");
  GamePrint " is already in";
  TraceOperation 036046 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 036046;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 036046:
  PushStack call_result;
  TraceOperation 036053 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036056:
  TraceOperation 036056 (Call (Floc 041486) [Var (Global 202)] (Local 1));
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 036056;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 041493
LocReturn 036056:
  SetLocal 1 call_result;
  TraceOperation 036062 (Get_prop (Var (Global 201)) (Con 22) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[000740];
      Let b10 = M[000741];
      PushStack MakeHiLo(b9,b10);
    } else {
      if (Equal(22,Widen(BwAnd(b8,31)))) {
        if (Equal(Add(Widen(ShiftR(b8,5)),1),2)) {
          Let b11 = M[Offset(Address(loop_var6),1)];
          Let b12 = M[Offset(Offset(Address(loop_var6),1),1)];
          PushStack MakeHiLo(b11,b12);
        } else {
          Let b13 = M[Offset(Address(loop_var6),1)];
          PushStack Widen(b13);
        }
      } else {
        Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
        Goto: Label 7
      }
    }
  }
  TraceOperation 036066 (Add (Var (Local 1)) (Var Sp) (Local 1));
  GetLocal 1 local1_14;
  PopStack popped15;
  SetLocal 1 Add(local1_14,popped15);
  TraceOperation 036070 (Get_prop (Var (Global 202)) (Con 22) Sp);
  Let b16 = M[008312];
  Let b17 = M[008313];
  Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b16,b17),9)),7)];
  Let b19 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b16,b17),9)),7),1)];
  Let b20 = M[Address(MakeHiLo(b18,b19))];
  Let loop_var21 = DeAddress(Offset(Address(MakeHiLo(b18,b19)),Add(Mul(2,Widen(b20)),1)));
  Label 22: {
    Let b23 = M[Address(loop_var21)];
    if (IsZeroByte(b23)) {
      Let b24 = M[000740];
      Let b25 = M[000741];
      PushStack MakeHiLo(b24,b25);
    } else {
      if (Equal(22,Widen(BwAnd(b23,31)))) {
        if (Equal(Add(Widen(ShiftR(b23,5)),1),2)) {
          Let b26 = M[Offset(Address(loop_var21),1)];
          Let b27 = M[Offset(Offset(Address(loop_var21),1),1)];
          PushStack MakeHiLo(b26,b27);
        } else {
          Let b28 = M[Offset(Address(loop_var21),1)];
          PushStack Widen(b28);
        }
      } else {
        Assign loop_var21 = DeAddress(Offset(Offset(Address(loop_var21),1),Add(Widen(ShiftR(b23,5)),1)));
        Goto: Label 22
      }
    }
  }
  TraceOperation 036074 (Sub (Var (Local 1)) (Var Sp) (Local 1));
  GetLocal 1 local1_29;
  PopStack popped30;
  SetLocal 1 Sub(local1_29,popped30);
  TraceOperation 036078 (Get_prop (Var (Global 202)) (Con 23) Sp);
  Let b31 = M[008312];
  Let b32 = M[008313];
  Let b33 = M[Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),7)];
  Let b34 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),7),1)];
  Let b35 = M[Address(MakeHiLo(b33,b34))];
  Let loop_var36 = DeAddress(Offset(Address(MakeHiLo(b33,b34)),Add(Mul(2,Widen(b35)),1)));
  Label 37: {
    Let b38 = M[Address(loop_var36)];
    if (IsZeroByte(b38)) {
      Let b39 = M[000742];
      Let b40 = M[000743];
      PushStack MakeHiLo(b39,b40);
    } else {
      if (Equal(23,Widen(BwAnd(b38,31)))) {
        if (Equal(Add(Widen(ShiftR(b38,5)),1),2)) {
          Let b41 = M[Offset(Address(loop_var36),1)];
          Let b42 = M[Offset(Offset(Address(loop_var36),1),1)];
          PushStack MakeHiLo(b41,b42);
        } else {
          Let b43 = M[Offset(Address(loop_var36),1)];
          PushStack Widen(b43);
        }
      } else {
        Assign loop_var36 = DeAddress(Offset(Offset(Address(loop_var36),1),Add(Widen(ShiftR(b38,5)),1)));
        Goto: Label 37
      }
    }
  }
  TraceOperation 036082 (Jg (Var (Local 1)) (Var Sp) (Branch F (Dloc 036105)));
  GetLocal 1 local1_44;
  PopStack popped45;
  if (GreaterThan(local1_44,popped45)) {
    TraceOperation 036086 (Test_attr (Var (Global 202)) (Con 12) (Branch F (Dloc 036096)));
    Let b46 = M[008312];
    Let b47 = M[008313];
    Let b48 = M[Offset(Offset(000751,Mul(MakeHiLo(b46,b47),9)),1)];
    if (TestBit(b48,3)) {
      TraceOperation 036090 (Call (Floc 031422) [] Sp);
      PushFrame;
      PushReturnAddress 036090;
      MakeRoutineFrame 0;
      Jump: 031423
    } else {
      Jump: 036096
    }
  } else {
    Jump: 036105
  }
LocReturn 036090:
  PushStack call_result;
  TraceOperation 036095 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 036096:
  TraceOperation 036096 (Print_ret "There's no room.");
  GamePrint "There's no room.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036105:
  TraceOperation 036105 (Call (Floc 043468) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 036105;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 036105:
  PushStack call_result;
  TraceOperation 036111 (Jz (Var Sp) (Branch F (Dloc 036125)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 036114 (Call (Floc 040994) [] Sp);
    PushFrame;
    PushReturnAddress 036114;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 1;
    Jump: 041003
  } else {
    Jump: 036125
  }
LocReturn 036114:
  PushStack call_result;
  TraceOperation 036119 (Je [Var Sp,Con 2,Con 0] (Branch T Dtrue));
  PopStack popped1;
  if (LogOr(Equal(popped1,2),Equal(popped1,0))) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 036125
  }
LocOp 036125:
  TraceOperation 036125 (Insert_obj (Var (Global 201)) (Var (Global 202)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008312];
  Let b4 = M[008313];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {} else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
    } else {
      Let loop_var8 = Widen(b6);
      Label 9: {
        Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
        if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
        } else {
          Assign loop_var8 = Widen(b10);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
  Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
  TraceOperation 036128 (Set_attr (Var (Global 201)) (Con 5));
  Let b13 = M[008310];
  Let b14 = M[008311];
  Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),0)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),0) SetBit(b15,2);
  TraceOperation 036131 (Print_ret "Done.");
  GamePrint "Done.\n";
  PopFrame;
  PopReturnAddress return_address_16;
  SetResult 1;
  JumpIndirect: (return) return_address_16
--------------------------------------------------
LocRoutine 036138:
  MakeRoutineFrame 0;
  Jump: 036139
LocOp 036139:
  TraceOperation 036139 (Call (Floc 031422) [] Sp);
  PushFrame;
  PushReturnAddress 036139;
  MakeRoutineFrame 0;
  Jump: 031423
LocReturn 036139:
  PushStack call_result;
  TraceOperation 036144 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 036146:
  MakeRoutineFrame 0;
  Jump: 036147
LocOp 036147:
  TraceOperation 036147 (Call (Floc 031422) [] Sp);
  PushFrame;
  PushReturnAddress 036147;
  MakeRoutineFrame 0;
  Jump: 031423
LocReturn 036147:
  PushStack call_result;
  TraceOperation 036152 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 036154:
  MakeRoutineFrame 0;
  Jump: 036155
LocOp 036155:
  TraceOperation 036155 (Je [Var (Global 202),Con 30] (Branch F (Dloc 036167)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 036159 (Call (Floc 022042) [Con 116,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 036159;
    SetLocal 1 116;
    SetLocal 2 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 036167
  }
LocReturn 036159:
  PushStack call_result;
  TraceOperation 036166 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036167:
  TraceOperation 036167 (Test_attr (Var (Global 202)) (Con 8) (Branch F (Dloc 036177)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,7)) {
    TraceOperation 036171 (Call (Floc 035890) [] Sp);
    PushFrame;
    PushReturnAddress 036171;
    MakeRoutineFrame 1;
    SetLocal 1 0;
    Jump: 035893
  } else {
    Jump: 036177
  }
LocReturn 036171:
  PushStack call_result;
  TraceOperation 036176 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 036177:
  TraceOperation 036177 (Je [Var (Global 202),Con 33,Con 34] (Branch F (Dloc 036204)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),33),Equal(MakeHiLo(b1,b2),34))) {
    TraceOperation 036183 (Print "You can't cover");
    GamePrint "You can't cover";
    TraceOperation 036190 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame;
    PushReturnAddress 036190;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 036204
  }
LocReturn 036190:
  PushStack call_result;
  TraceOperation 036197 (Print_ret " with that.");
  GamePrint " with that.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036204:
  TraceOperation 036204 (Print "There's no good surface on");
  GamePrint "There's no good surface on";
  TraceOperation 036219 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 036219;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 036219:
  PushStack call_result;
  TraceOperation 036226 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 036230:
  MakeRoutineFrame 0;
  Jump: 036231
LocOp 036231:
  TraceOperation 036231 (Call (Floc 031422) [] Sp);
  PushFrame;
  PushReturnAddress 036231;
  MakeRoutineFrame 0;
  Jump: 031423
LocReturn 036231:
  PushStack call_result;
  TraceOperation 036236 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 036238:
  MakeRoutineFrame 0;
  Jump: 036239
LocOp 036239:
  TraceOperation 036239 (Call (Floc 034084) [] Sp);
  PushFrame;
  PushReturnAddress 036239;
  MakeRoutineFrame 0;
  Jump: 034085
LocReturn 036239:
  PushStack call_result;
  TraceOperation 036244 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 036246:
  MakeRoutineFrame 0;
  Jump: 036247
LocOp 036247:
  TraceOperation 036247 (Call (Floc 043716) [Con -11686] Sp);
  PushFrame;
  PushReturnAddress 036247;
  SetLocal 1 -11686;
  MakeRoutineFrame 1;
  Jump: 043719
LocReturn 036247:
  PushStack call_result;
  TraceOperation 036254 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 036256:
  MakeRoutineFrame 0;
  Jump: 036257
LocOp 036257:
  TraceOperation 036257 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 036269)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 036261 (Je [Var (Global 201),Con 139] (Branch T (Dloc 036269)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    if (Equal(MakeHiLo(b2,b3),139)) {
      Jump: 036269
    } else {
      TraceOperation 036265 (Print_paddr (Var (Global 49)));
      Let b4 = M[008006];
      Let b5 = M[008007];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 036267 New_line;
      GamePrint "\n";
      TraceOperation 036268 Rtrue;
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  } else {
    Jump: 036269
  }
LocOp 036269:
  TraceOperation 036269 (Jz (Var (Global 85)) (Branch F (Dloc 036280)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 036272 (Je [Var (Global 201),Con 170] (Branch T (Dloc 036280)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),170)) {
      Jump: 036280
    } else {
      TraceOperation 036276 (Print_paddr (Var (Global 56)));
      Let b5 = M[008020];
      Let b6 = M[008021];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 036278 New_line;
      GamePrint "\n";
      TraceOperation 036279 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    }
  } else {
    Jump: 036280
  }
LocOp 036280:
  TraceOperation 036280 (Jz (Var (Global 202)) (Branch T Dfalse));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 036283 (Test_attr (Var (Global 202)) (Con 17) (Branch T Dfalse));
    Let b4 = M[008312];
    Let b5 = M[008313];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,6)) {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    } else {
      TraceOperation 036287 (Print "How does one look through");
      GamePrint "How does one look through";
      TraceOperation 036306 (Call (Floc 043738) [Var (Global 202)] Sp);
      Let b8 = M[008312];
      Let b9 = M[008313];
      PushFrame;
      PushReturnAddress 036306;
      SetLocal 1 MakeHiLo(b8,b9);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043743
    }
  }
LocReturn 036306:
  PushStack call_result;
  TraceOperation 036312 (Print_ret "?");
  GamePrint "?\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 036316:
  MakeRoutineFrame 0;
  Jump: 036317
LocOp 036317:
  TraceOperation 036317 (Test_attr (Var (Global 201)) (Con 13) (Branch F (Dloc 036329)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,2)) {
    TraceOperation 036321 (Get_prop (Var (Global 201)) (Con 13) Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Let loop_var9 = DeAddress(Offset(Address(MakeHiLo(b6,b7)),Add(Mul(2,Widen(b8)),1)));
    Label 10: {
      Let b11 = M[Address(loop_var9)];
      if (IsZeroByte(b11)) {
        Let b12 = M[000722];
        Let b13 = M[000723];
        PushStack MakeHiLo(b12,b13);
      } else {
        if (Equal(13,Widen(BwAnd(b11,31)))) {
          if (Equal(Add(Widen(ShiftR(b11,5)),1),2)) {
            Let b14 = M[Offset(Address(loop_var9),1)];
            Let b15 = M[Offset(Offset(Address(loop_var9),1),1)];
            PushStack MakeHiLo(b14,b15);
          } else {
            Let b16 = M[Offset(Address(loop_var9),1)];
            PushStack Widen(b16);
          }
        } else {
          Assign loop_var9 = DeAddress(Offset(Offset(Address(loop_var9),1),Add(Widen(ShiftR(b11,5)),1)));
          Goto: Label 10
        }
      }
    }
    TraceOperation 036325 (Print_paddr (Var Sp));
    PopStack popped17;
    GamePrint GetText(PackedAddress Z3(popped17));
    TraceOperation 036327 New_line;
    GamePrint "\n";
    TraceOperation 036328 Rtrue;
    PopFrame;
    PopReturnAddress return_address_18;
    SetResult 1;
    JumpIndirect: (return) return_address_18
  } else {
    Jump: 036329
  }
LocOp 036329:
  TraceOperation 036329 (Print "How can you read");
  GamePrint "How can you read";
  TraceOperation 036340 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 036340;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 036340:
  PushStack call_result;
  TraceOperation 036346 (Print_ret "?");
  GamePrint "?\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 036350:
  MakeRoutineFrame 0;
  Jump: 036351
LocOp 036351:
  TraceOperation 036351 (Store (Con 219) (Con 124));
  SetByte 008314 0;
  SetByte 008315 124;
  TraceOperation 036354 (Call (Floc 046754) [] Sp);
  PushFrame;
  PushReturnAddress 036354;
  MakeRoutineFrame 0;
  Jump: 046755
LocReturn 036354:
  PushStack call_result;
  TraceOperation 036359 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 036360:
  MakeRoutineFrame 0;
  Jump: 036361
LocOp 036361:
  TraceOperation 036361 (Print_paddr (Var (Global 48)));
  Let b1 = M[008004];
  Let b2 = M[008005];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 036363 New_line;
  GamePrint "\n";
  TraceOperation 036364 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 036366:
  MakeRoutineFrame 0;
  Jump: 036367
LocOp 036367:
  TraceOperation 036367 (Test_attr (Var (Global 201)) (Con 10) (Branch F (Dloc 036379)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,5)) {
    TraceOperation 036371 (Call (Floc 022042) [Con 148,Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 036371;
    SetLocal 1 148;
    SetLocal 2 MakeHiLo(b4,b5);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 036379
  }
LocReturn 036371:
  PushStack call_result;
  TraceOperation 036378 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036379:
  TraceOperation 036379 (Call (Floc 022042) [Con 124,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 036379;
  SetLocal 1 124;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 036379:
  PushStack call_result;
  TraceOperation 036386 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 036388:
  MakeRoutineFrame 0;
  Jump: 036389
LocOp 036389:
  TraceOperation 036389 (Print_ret "It's not in need of replacement.");
  GamePrint "It's not in need of replacement.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 036408:
  MakeRoutineFrame 0;
  Jump: 036409
LocOp 036409:
  TraceOperation 036409 (Je [Var (Global 201),Con 7] (Branch F (Dloc 036417)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 036413 (Test_attr (Con 7) (Con 3) (Branch T (Dloc 036424)));
    Let b3 = M[000814];
    if (TestBit(b3,4)) {
      Jump: 036424
    } else {
      Jump: 036417
    }
  } else {
    Jump: 036417
  }
LocOp 036417:
  TraceOperation 036417 (Je [Var (Global 201),Con 177] (Branch F (Dloc 036451)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),177)) {
    TraceOperation 036421 (Jz (Var (Global 214)) (Branch T (Dloc 036451)));
    Let b3 = M[008336];
    Let b4 = M[008337];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 036451
    } else {
      Jump: 036424
    }
  } else {
    Jump: 036451
  }
LocOp 036424:
  TraceOperation 036424 (Print_ret "You have neither the tools nor the expertise.");
  GamePrint "You have neither the tools nor the expertise.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036451:
  TraceOperation 036451 (Print_ret "I'm not sure it's broken.");
  GamePrint "I'm not sure it's broken.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 036466:
  MakeRoutineFrame 0;
  Jump: 036467
LocOp 036467:
  TraceOperation 036467 (Print "It is hardly likely that");
  GamePrint "It is hardly likely that";
  TraceOperation 036484 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 036484;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 036484:
  PushStack call_result;
  TraceOperation 036491 (Print " is interested.");
  GamePrint " is interested.";
  TraceOperation 036502 New_line;
  GamePrint "\n";
  TraceOperation 036503 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 036503;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 036503:
  PushStack call_result;
  TraceOperation 036508 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 036510:
  MakeRoutineFrame 0;
  Jump: 036511
LocOp 036511:
  TraceOperation 036511 (Call (Floc 043578) [] Sp);
  PushFrame;
  PushReturnAddress 036511;
  MakeRoutineFrame 0;
  Jump: 043579
LocReturn 036511:
  PushStack call_result;
  TraceOperation 036516 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 036519 (Call (Floc 043716) [Con -11679] Sp);
    PushFrame;
    PushReturnAddress 036519;
    SetLocal 1 -11679;
    MakeRoutineFrame 1;
    Jump: 043719
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocReturn 036519:
  PushStack call_result;
  TraceOperation 036526 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 036528:
  MakeRoutineFrame 0;
  Jump: 036529
LocOp 036529:
  TraceOperation 036529 (Print "Sorry, but");
  GamePrint "Sorry, but";
  TraceOperation 036538 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 036538;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 036538:
  PushStack call_result;
  TraceOperation 036545 (Print_ret " is beyond help.");
  GamePrint " is beyond help.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 036558:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 036561
LocOp 036561:
  TraceOperation 036561 (Jz (Var (Global 213)) (Branch T (Dloc 036585)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 036585
  } else {
    TraceOperation 036564 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    Let b5 = M[008292];
    Let b6 = M[008293];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 036568 (Je [Var Sp,Con 20420] (Branch F (Dloc 036585)));
    PopStack popped9;
    if (Equal(popped9,20420)) {
      TraceOperation 036574 (Call (Floc 040748) [] Sp);
      PushFrame;
      PushReturnAddress 036574;
      MakeRoutineFrame 0;
      Jump: 040749
    } else {
      Jump: 036585
    }
  }
LocReturn 036574:
  PushStack call_result;
  TraceOperation 036579 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 036579;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 036579:
  PushStack call_result;
  TraceOperation 036584 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 036585:
  TraceOperation 036585 (Jz (Var (Global 213)) (Branch T (Dloc 036609)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 036609
  } else {
    TraceOperation 036588 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
    Let b3 = M[008296];
    Let b4 = M[008297];
    Let b5 = M[008292];
    Let b6 = M[008293];
    Let b7 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6)))];
    Let b8 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,MakeHiLo(b5,b6))),1)];
    PushStack MakeHiLo(b7,b8);
    TraceOperation 036592 (Je [Var Sp,Con 17333] (Branch F (Dloc 036609)));
    PopStack popped9;
    if (Equal(popped9,17333)) {
      TraceOperation 036598 (Call (Floc 035052) [] Sp);
      PushFrame;
      PushReturnAddress 036598;
      MakeRoutineFrame 0;
      Jump: 035053
    } else {
      Jump: 036609
    }
  }
LocReturn 036598:
  PushStack call_result;
  TraceOperation 036603 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 036603;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 036603:
  PushStack call_result;
  TraceOperation 036608 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 036609:
  TraceOperation 036609 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 036628)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 036613 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 036628)));
    Let b4 = M[002003];
    if (TestBit(b4,6)) {
      TraceOperation 036617 (Call (Floc 036802) [] Sp);
      PushFrame;
      PushReturnAddress 036617;
      MakeRoutineFrame 0;
      Jump: 036803
    } else {
      Jump: 036628
    }
  } else {
    Jump: 036628
  }
LocReturn 036617:
  PushStack call_result;
  TraceOperation 036622 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 036622;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 036622:
  PushStack call_result;
  TraceOperation 036627 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 036628:
  TraceOperation 036628 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 036643)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 036632 (Jz (Var (Global 192)) (Branch F (Dloc 036643)));
    Let b4 = M[008292];
    Let b5 = M[008293];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 036635 (Call (Floc 022042) [Con 15,Con 95] Sp);
      PushFrame;
      PushReturnAddress 036635;
      SetLocal 1 15;
      SetLocal 2 95;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 036643
    }
  } else {
    Jump: 036643
  }
LocReturn 036635:
  PushStack call_result;
  TraceOperation 036642 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 036643:
  TraceOperation 036643 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 036668)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 036647 (Call (Floc 036742) [] Sp);
    PushFrame;
    PushReturnAddress 036647;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    SetLocal 1 0;
    Jump: 036749
  } else {
    Jump: 036668
  }
LocReturn 036647:
  PushStack call_result;
  TraceOperation 036652 (Jz (Var Sp) (Branch T (Dloc 036668)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 036668
  } else {
    TraceOperation 036655 (Call (Floc 022042) [Con 127,Con 92] Sp);
    PushFrame;
    PushReturnAddress 036655;
    SetLocal 1 127;
    SetLocal 2 92;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 036655:
  PushStack call_result;
  TraceOperation 036662 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 036662;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 036662:
  PushStack call_result;
  TraceOperation 036667 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 036668:
  TraceOperation 036668 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 036685)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 036672 (Call (Floc 022042) [Con 127,Con 91] Sp);
    PushFrame;
    PushReturnAddress 036672;
    SetLocal 1 127;
    SetLocal 2 91;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 036685
  }
LocReturn 036672:
  PushStack call_result;
  TraceOperation 036679 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 036679;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 036679:
  PushStack call_result;
  TraceOperation 036684 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 036685:
  TraceOperation 036685 (Call (Floc 043552) [Var (Global 0),Con 26] (Local 1));
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame;
  PushReturnAddress 036685;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 26;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 043559
LocReturn 036685:
  SetLocal 1 call_result;
  TraceOperation 036692 (Jz (Var (Local 1)) (Branch T (Dloc 036729)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    Jump: 036729
  } else {
    TraceOperation 036695 (Print "You must address");
    GamePrint "You must address";
    TraceOperation 036706 (Call (Floc 043738) [Var (Local 1),Con 1] Sp);
    GetLocal 1 local1_2;
    PushFrame;
    PushReturnAddress 036706;
    SetLocal 1 local1_2;
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  }
LocReturn 036706:
  PushStack call_result;
  TraceOperation 036713 (Print " directly.");
  GamePrint " directly.";
  TraceOperation 036722 New_line;
  GamePrint "\n";
  TraceOperation 036723 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 036723;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 036723:
  PushStack call_result;
  TraceOperation 036728 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 036729:
  TraceOperation 036729 (Call (Floc 022042) [Con 15,Con 30] Sp);
  PushFrame;
  PushReturnAddress 036729;
  SetLocal 1 15;
  SetLocal 2 30;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 036729:
  PushStack call_result;
  TraceOperation 036736 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 036736;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 036736:
  PushStack call_result;
  TraceOperation 036741 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 036742:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 036749
LocOp 036749:
  TraceOperation 036749 (Store (Con 1) (Var (Global 192)));
  Let b1 = M[008292];
  Let b2 = M[008293];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 036752 (Store (Con 2) (Var (Global 196)));
  Let b3 = M[008300];
  Let b4 = M[008301];
  SetLocal 2 MakeHiLo(b3,b4);
  Jump: 036755
LocOp 036755:
  TraceOperation 036755 (Dec_chk (Con 2) (Con 0) (Branch T Dfalse));
  GetLocal 2 local2_1;
  if (LessThanEqual(local2_1,0)) {
    SetLocal 2 Sub(local2_1,1);
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    SetLocal 2 Sub(local2_1,1);
    TraceOperation 036759 (Loadw (Var (Global 194)) (Var (Local 1)) (Local 3));
    Let b3 = M[008296];
    Let b4 = M[008297];
    GetLocal 1 local1_5;
    Let b6 = M[Offset(Address(MakeHiLo(b3,b4)),Mul(2,local1_5))];
    Let b7 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),Mul(2,local1_5)),1)];
    SetLocal 3 MakeHiLo(b6,b7);
    TraceOperation 036763 (Je [Var (Local 3),Con 17256,Con 17277,Con 16605] (Branch T (Dloc 036795)));
    GetLocal 3 local3_8;
    if (LogOr(LogOr(Equal(local3_8,17256),Equal(local3_8,17277)),Equal(local3_8,16605))) {
      Jump: 036795
    } else {
      TraceOperation 036773 (Je [Var (Local 3),Con 16430,Con 13812,Con 16437] (Branch F (Dloc 036786)));
      GetLocal 3 local3_9;
      if (LogOr(LogOr(Equal(local3_9,16430),Equal(local3_9,13812)),Equal(local3_9,16437))) {
        TraceOperation 036783 (Jump 036795);
        Jump: 036795
      } else {
        Jump: 036786
      }
    }
  }
LocOp 036786:
  TraceOperation 036786 (Je [Var (Local 3),Con 13924,Con 15065] (Branch F Dfalse));
  GetLocal 3 local3_1;
  if (LogOr(Equal(local3_1,13924),Equal(local3_1,15065))) {
    TraceOperation 036794 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocOp 036795:
  TraceOperation 036795 (Add (Var (Local 1)) (Con 2) (Local 1));
  GetLocal 1 local1_1;
  SetLocal 1 Add(local1_1,2);
  TraceOperation 036799 (Jump 036755);
  Jump: 036755
--------------------------------------------------
LocRoutine 036802:
  MakeRoutineFrame 0;
  Jump: 036803
LocOp 036803:
  TraceOperation 036803 (Print "The Beast is puzzled by a voice coming from something it can't see.");
  GamePrint "The Beast is puzzled by a voice coming from something it can't see.";
  TraceOperation 036834 (Print_paddr (Var (Global 12)));
  Let b1 = M[007932];
  Let b2 = M[007933];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 036836 New_line;
  GamePrint "\n";
  TraceOperation 036837 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 036838:
  MakeRoutineFrame 0;
  Jump: 036839
LocOp 036839:
  TraceOperation 036839 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 037088)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 036844 (Jz (Var (Global 103)) (Branch T (Dloc 036862)));
    Let b4 = M[008114];
    Let b5 = M[008115];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 036862
    } else {
      TraceOperation 036847 (Print_ret "You already told the Beast your name.");
      GamePrint "You already told the Beast your name.\n";
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  } else {
    Jump: 037088
  }
LocOp 036862:
  TraceOperation 036862 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 036872)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 036866 (Call (Floc 036802) [] Sp);
    PushFrame;
    PushReturnAddress 036866;
    MakeRoutineFrame 0;
    Jump: 036803
  } else {
    Jump: 036872
  }
LocReturn 036866:
  PushStack call_result;
  TraceOperation 036871 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 036872:
  TraceOperation 036872 (Je [Var (Global 201),Con 94,Con 123,Con 92] (Branch T (Dloc 036884)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),94),Equal(MakeHiLo(b1,b2),123)),Equal(MakeHiLo(b1,b2),92))) {
    Jump: 036884
  } else {
    TraceOperation 036879 (Je [Var (Global 201),Con 30] (Branch F (Dloc 036969)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      Jump: 036884
    } else {
      Jump: 036969
    }
  }
LocOp 036884:
  TraceOperation 036884 (Call (Floc 022320) [Con -22735,Con 2] Sp);
  PushFrame;
  PushReturnAddress 036884;
  SetLocal 1 -22735;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 036884:
  PushStack call_result;
  TraceOperation 036892 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 036897 (Store (Con 119) (Con 1));
  SetByte 008114 0;
  SetByte 008115 1;
  TraceOperation 036900 (Print_ret "The Beast roars your name with relish, and explains that once it has eaten you, your name will be added to its list of remembrance.");
  GamePrint "The Beast roars your name with relish, and explains that once it has eaten you, your name will be added to its list of remembrance.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 036969:
  TraceOperation 036969 (Print_ret "There's something about detecting insincerity that transcends even the vast gulf between Humanity and Bugblatter Bestiality. The Beast bellows, obviously convinced that you were lying and that isn't your name nor anything remotely like it.");
  GamePrint "There's something about detecting insincerity that transcends even the vast gulf between Humanity and Bugblatter Bestiality. The Beast bellows, obviously convinced that you were lying and that isn't your name nor anything remotely like it.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037088:
  TraceOperation 037088 (Print_ret "You should use quotes with this verb.");
  GamePrint "You should use quotes with this verb.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037110:
  MakeRoutineFrame 0;
  Jump: 037111
LocOp 037111:
  TraceOperation 037111 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 037134)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 037115 (Print_ret "That wouldn't be polite.");
    GamePrint "That wouldn't be polite.\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 037134
  }
LocOp 037134:
  TraceOperation 037134 (Test_attr (Var (Global 201)) (Con 24) (Branch F (Dloc 037203)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,7)) {
    TraceOperation 037139 (Get_parent (Var (Global 195)) Sp);
    Let b4 = M[008298];
    Let b5 = M[008299];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
    PushStack Widen(b6);
    TraceOperation 037142 (Je [Var (Global 201),Var Sp] (Branch F (Dloc 037152)));
    Let b7 = M[008310];
    Let b8 = M[008311];
    PopStack popped9;
    if (Equal(MakeHiLo(b7,b8),popped9)) {
      TraceOperation 037146 (Call (Floc 042532) [] Sp);
      PushFrame;
      PushReturnAddress 037146;
      MakeRoutineFrame 0;
      Jump: 042533
    } else {
      Jump: 037152
    }
  } else {
    Jump: 037203
  }
LocReturn 037146:
  PushStack call_result;
  TraceOperation 037151 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037152:
  TraceOperation 037152 (Test_attr (Var (Global 201)) (Con 23) (Branch T (Dloc 037175)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,0)) {
    Jump: 037175
  } else {
    TraceOperation 037156 (Print_ret "You'll have to open it first.");
    GamePrint "You'll have to open it first.\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  }
LocOp 037175:
  TraceOperation 037175 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 037203)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  PushStack Widen(b3);
  if (IsZero(Widen(b3))) {
    Jump: 037203
  } else {
    TraceOperation 037179 (Get_child (Var (Global 201)) Sp (Branch T (Dloc 037189)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
    PushStack Widen(b6);
    if (IsZero(Widen(b6))) {
      TraceOperation 037183 (Push (Con 0));
      PushStack 0;
      TraceOperation 037186 (Jump 037192);
      Jump: 037192
    } else {
      Jump: 037189
    }
  }
LocOp 037189:
  TraceOperation 037189 (Push (Con 1));
  PushStack 1;
  Jump: 037192
LocOp 037192:
  TraceOperation 037192 (Test_attr (Var Sp) (Con 27) (Branch T (Dloc 037203)));
  PopStack popped1;
  Let b2 = M[Offset(Offset(000751,Mul(popped1,9)),3)];
  if (TestBit(b2,4)) {
    Jump: 037203
  } else {
    TraceOperation 037196 (Call (Floc 042074) [Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 037196;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 10;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 1;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 042095
  }
LocReturn 037196:
  PushStack call_result;
  TraceOperation 037202 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037203:
  TraceOperation 037203 (Print_ret "You find nothing unusual.");
  GamePrint "You find nothing unusual.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037216:
  MakeRoutineFrame 0;
  Jump: 037217
LocOp 037217:
  TraceOperation 037217 (Call (Floc 022042) [Con 66,Var (Global 202),Var (Global 201)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 037217;
  SetLocal 1 66;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 037217:
  PushStack call_result;
  TraceOperation 037225 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037226:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 037229
LocOp 037229:
  TraceOperation 037229 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 037242)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 037233 (Print_ret "Be real.");
    GamePrint "Be real.\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 037242
  }
LocOp 037242:
  TraceOperation 037242 (Call (Floc 043716) [Con -11674] Sp);
  PushFrame;
  PushReturnAddress 037242;
  SetLocal 1 -11674;
  MakeRoutineFrame 1;
  Jump: 043719
LocReturn 037242:
  PushStack call_result;
  TraceOperation 037249 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 037250:
  MakeRoutineFrame 0;
  Jump: 037251
LocOp 037251:
  TraceOperation 037251 (Je [Var (Global 201),Con 36] (Branch T (Dloc 037261)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),36)) {
    Jump: 037261
  } else {
    TraceOperation 037255 (Call (Floc 039060) [] Sp);
    PushFrame;
    PushReturnAddress 037255;
    MakeRoutineFrame 0;
    Jump: 039061
  }
LocReturn 037255:
  PushStack call_result;
  TraceOperation 037260 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 037261:
  TraceOperation 037261 (Test_attr (Var (Global 202)) (Con 26) (Branch T (Dloc 037288)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    Jump: 037288
  } else {
    TraceOperation 037265 (Print "I don't think");
    GamePrint "I don't think";
    TraceOperation 037272 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
    Let b4 = M[008312];
    Let b5 = M[008313];
    PushFrame;
    PushReturnAddress 037272;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  }
LocReturn 037272:
  PushStack call_result;
  TraceOperation 037279 (Print_ret " even has hands.");
  GamePrint " even has hands.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037288:
  TraceOperation 037288 (Call (Floc 022042) [Con 153,Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 037288;
  SetLocal 1 153;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 037288:
  PushStack call_result;
  TraceOperation 037295 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037296:
  MakeRoutineFrame 0;
  Jump: 037297
LocOp 037297:
  TraceOperation 037297 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 037305)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 037301 (Print_paddr (Var (Global 49)));
    Let b2 = M[008006];
    Let b3 = M[008007];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 037303 New_line;
    GamePrint "\n";
    TraceOperation 037304 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 037305
  }
LocOp 037305:
  TraceOperation 037305 (Jz (Var (Global 201)) (Branch F (Dloc 037359)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 037308 (Call (Floc 043468) [Con 202] Sp);
    PushFrame;
    PushReturnAddress 037308;
    SetLocal 1 202;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    Jump: 037359
  }
LocReturn 037308:
  PushStack call_result;
  TraceOperation 037314 (Jz (Var Sp) (Branch T (Dloc 037323)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037323
  } else {
    TraceOperation 037317 (Store (Con 217) (Con 202));
    SetByte 008310 0;
    SetByte 008311 202;
    TraceOperation 037320 (Jump 037359);
    Jump: 037359
  }
LocOp 037323:
  TraceOperation 037323 (Call (Floc 043468) [Con 52] Sp);
  PushFrame;
  PushReturnAddress 037323;
  SetLocal 1 52;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 037323:
  PushStack call_result;
  TraceOperation 037329 (Jz (Var Sp) (Branch T (Dloc 037338)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037338
  } else {
    TraceOperation 037332 (Store (Con 217) (Con 52));
    SetByte 008310 0;
    SetByte 008311 52;
    TraceOperation 037335 (Jump 037359);
    Jump: 037359
  }
LocOp 037338:
  TraceOperation 037338 (Print_ret "With what? At whom? Why?");
  GamePrint "With what? At whom? Why?\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037359:
  TraceOperation 037359 (Jz (Var (Global 202)) (Branch F (Dloc 037451)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 037363 (Je [Var (Global 201),Con 52,Con 202] (Branch F (Dloc 037390)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),52),Equal(MakeHiLo(b3,b4),202))) {
      TraceOperation 037369 (Print_ret "Some rays shoot out of the gun.");
      GamePrint "Some rays shoot out of the gun.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 037390
    }
  } else {
    Jump: 037451
  }
LocOp 037390:
  TraceOperation 037390 (Call (Floc 043468) [Con 202] Sp);
  PushFrame;
  PushReturnAddress 037390;
  SetLocal 1 202;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 037390:
  PushStack call_result;
  TraceOperation 037396 (Jz (Var Sp) (Branch T (Dloc 037408)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037408
  } else {
    TraceOperation 037399 (Call (Floc 022042) [Con 132,Var (Global 201),Con 202] Sp);
    Let b2 = M[008310];
    Let b3 = M[008311];
    PushFrame;
    PushReturnAddress 037399;
    SetLocal 1 132;
    SetLocal 2 MakeHiLo(b2,b3);
    SetLocal 3 202;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 022057
  }
LocReturn 037399:
  PushStack call_result;
  TraceOperation 037407 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037408:
  TraceOperation 037408 (Call (Floc 043468) [Con 52] Sp);
  PushFrame;
  PushReturnAddress 037408;
  SetLocal 1 52;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 037408:
  PushStack call_result;
  TraceOperation 037414 (Jz (Var Sp) (Branch T (Dloc 037426)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037426
  } else {
    TraceOperation 037417 (Call (Floc 022042) [Con 132,Var (Global 201),Con 52] Sp);
    Let b2 = M[008310];
    Let b3 = M[008311];
    PushFrame;
    PushReturnAddress 037417;
    SetLocal 1 132;
    SetLocal 2 MakeHiLo(b2,b3);
    SetLocal 3 52;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 022057
  }
LocReturn 037417:
  PushStack call_result;
  TraceOperation 037425 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037426:
  TraceOperation 037426 (Print "You have nothing to shoot");
  GamePrint "You have nothing to shoot";
  TraceOperation 037437 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 037437;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 037437:
  PushStack call_result;
  TraceOperation 037444 (Print_ret " with.");
  GamePrint " with.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037451:
  TraceOperation 037451 (Je [Var (Global 202),Con 202] (Branch F (Dloc 037541)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),202)) {
    TraceOperation 037456 (Print "Some rays from the gun strike");
    GamePrint "Some rays from the gun strike";
    TraceOperation 037475 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 037475;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 037541
  }
LocReturn 037475:
  PushStack call_result;
  TraceOperation 037482 (Print ", but ");
  GamePrint ", but ";
  TraceOperation 037487 (Je [Var (Global 201),Con 95] (Branch F (Dloc 037528)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),95)) {
    TraceOperation 037491 (Test_attr (Con 95) (Con 3) (Branch T (Dloc 037528)));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      Jump: 037528
    } else {
      TraceOperation 037495 (Inc (Con 232));
      Let b4 = M[008340];
      Let b5 = M[008341];
      SetByte 008340 HiByte(Add(MakeHiLo(b4,b5),1));
      SetByte 008341 LoByte(Add(MakeHiLo(b4,b5),1));
      TraceOperation 037497 (Print "it only seems to make it madder");
      GamePrint "it only seems to make it madder";
      TraceOperation 037514 (Je [Var (Global 216),Con 3] (Branch F (Dloc 037525)));
      Let b6 = M[008340];
      Let b7 = M[008341];
      if (Equal(MakeHiLo(b6,b7),3)) {
        TraceOperation 037518 (Print " (Footnote 7)");
        GamePrint " (Footnote 7)";
        Jump: 037525
      } else {
        Jump: 037525
      }
    }
  } else {
    Jump: 037528
  }
LocOp 037525:
  TraceOperation 037525 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037528:
  TraceOperation 037528 (Print_ret "nothing else happens.");
  GamePrint "nothing else happens.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037541:
  TraceOperation 037541 (Print_ret "Don't ever bother applying for a job as an armaments expert.");
  GamePrint "Don't ever bother applying for a job as an armaments expert.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037584:
  MakeRoutineFrame 0;
  Jump: 037585
LocOp 037585:
  TraceOperation 037585 (Print "I doubt");
  GamePrint "I doubt";
  TraceOperation 037592 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 037592;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 037592:
  PushStack call_result;
  TraceOperation 037599 (Print_ret " is interested.");
  GamePrint " is interested.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037610:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 037613
LocOp 037613:
  TraceOperation 037613 (Call (Floc 043552) [Var (Global 0),Con 12] (Local 1));
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame;
  PushReturnAddress 037613;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 12;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 043559
LocReturn 037613:
  SetLocal 1 call_result;
  TraceOperation 037620 (Jz (Var (Local 1)) (Branch T (Dloc 037631)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    Jump: 037631
  } else {
    TraceOperation 037623 (Call (Floc 022042) [Con 28,Var (Local 1)] Sp);
    GetLocal 1 local1_2;
    PushFrame;
    PushReturnAddress 037623;
    SetLocal 1 28;
    SetLocal 2 local1_2;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 037623:
  PushStack call_result;
  TraceOperation 037630 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037631:
  TraceOperation 037631 (Call (Floc 031422) [] Sp);
  PushFrame;
  PushReturnAddress 037631;
  MakeRoutineFrame 0;
  Jump: 031423
LocReturn 037631:
  PushStack call_result;
  TraceOperation 037636 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 037638:
  MakeRoutineFrame 0;
  Jump: 037639
LocOp 037639:
  TraceOperation 037639 (Store (Con 229) (Con 15));
  SetByte 008334 0;
  SetByte 008335 15;
  TraceOperation 037642 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame;
  PushReturnAddress 037642;
  SetLocal 1 -14349;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 037642:
  PushStack call_result;
  TraceOperation 037650 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 037655 (Print_ret "Wasn't that fun?");
  GamePrint "Wasn't that fun?\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 037668:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 037671
LocOp 037671:
  TraceOperation 037671 (Je [Var (Global 0),Con 168] (Branch F (Dloc 037716)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 037675 (Print "You nod off and are wakened briefly a few hours later as");
    GamePrint "You nod off and are wakened briefly a few hours later as";
    TraceOperation 037710 (Call (Floc 058488) [] Sp);
    PushFrame;
    PushReturnAddress 037710;
    MakeRoutineFrame 0;
    Jump: 058489
  } else {
    Jump: 037716
  }
LocReturn 037710:
  PushStack call_result;
  TraceOperation 037715 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 037716:
  TraceOperation 037716 (Je [Var (Global 0),Con 121] (Branch F (Dloc 037753)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 037720 (Print_ret "You try, but the grubby mattresses are too repulsive.");
    GamePrint "You try, but the grubby mattresses are too repulsive.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 037753
  }
LocOp 037753:
  TraceOperation 037753 (Print_ret "There's no bed here.");
  GamePrint "There's no bed here.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037764:
  MakeRoutineFrame 0;
  Jump: 037765
LocOp 037765:
  TraceOperation 037765 (Print "It smells just like");
  GamePrint "It smells just like";
  TraceOperation 037776 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 037776;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 037776:
  PushStack call_result;
  TraceOperation 037782 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037786:
  MakeRoutineFrame 0;
  Jump: 037787
LocOp 037787:
  TraceOperation 037787 (Je [Var (Global 0),Con 108] (Branch F (Dloc 037801)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 037791 (Jin (Con 105) (Var (Global 0)) (Branch F (Dloc 037801)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001700];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 037795 (Call (Floc 030122) [] Sp);
      PushFrame;
      PushReturnAddress 037795;
      MakeRoutineFrame 0;
      Jump: 030123
    } else {
      Jump: 037801
    }
  } else {
    Jump: 037801
  }
LocReturn 037795:
  PushStack call_result;
  TraceOperation 037800 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 037801:
  TraceOperation 037801 (Print_ret "How nice.");
  GamePrint "How nice.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037810:
  MakeRoutineFrame 0;
  Jump: 037811
LocOp 037811:
  TraceOperation 037811 (Print_ret "You can't spin that!");
  GamePrint "You can't spin that!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037822:
  MakeRoutineFrame 0;
  Jump: 037823
LocOp 037823:
  TraceOperation 037823 (Je [Var (Global 201),Con 32] (Branch F (Dloc 037844)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),32)) {
    TraceOperation 037827 (Call (Floc 043370) [Con 105] Sp);
    PushFrame;
    PushReturnAddress 037827;
    SetLocal 1 105;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043375
  } else {
    Jump: 037844
  }
LocReturn 037827:
  PushStack call_result;
  TraceOperation 037833 (Jz (Var Sp) (Branch T (Dloc 037844)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037844
  } else {
    TraceOperation 037836 (Call (Floc 022042) [Con 74,Con 105] Sp);
    PushFrame;
    PushReturnAddress 037836;
    SetLocal 1 74;
    SetLocal 2 105;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 037836:
  PushStack call_result;
  TraceOperation 037843 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037844:
  TraceOperation 037844 (Call (Floc 022042) [Con 55,Var (Global 202),Var (Global 201)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 037844;
  SetLocal 1 55;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 037844:
  PushStack call_result;
  TraceOperation 037852 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037854:
  MakeRoutineFrame 0;
  Jump: 037855
LocOp 037855:
  TraceOperation 037855 (Call (Floc 022042) [Con 132,Var (Global 202),Var (Global 201)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 037855;
  SetLocal 1 132;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 037855:
  PushStack call_result;
  TraceOperation 037863 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037864:
  MakeRoutineFrame 0;
  Jump: 037865
LocOp 037865:
  TraceOperation 037865 (Call (Floc 022042) [Con 134,Var (Global 202),Var (Global 201)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 037865;
  SetLocal 1 134;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 MakeHiLo(b3,b4);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 037865:
  PushStack call_result;
  TraceOperation 037873 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 037874:
  MakeRoutineFrame 0;
  Jump: 037875
LocOp 037875:
  TraceOperation 037875 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 037878 (Test_attr (Var Sp) (Con 12) (Branch F (Dloc 037893)));
  PopStack popped4;
  Let b5 = M[Offset(Offset(000751,Mul(popped4,9)),1)];
  if (TestBit(b5,3)) {
    TraceOperation 037882 (Get_parent (Var (Global 195)) Sp);
    Let b6 = M[008298];
    Let b7 = M[008299];
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),4)];
    PushStack Widen(b8);
    TraceOperation 037885 (Call (Floc 022042) [Con 48,Var Sp] Sp);
    PopStack popped9;
    PushFrame;
    PushReturnAddress 037885;
    SetLocal 1 48;
    SetLocal 2 popped9;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 037893
  }
LocReturn 037885:
  PushStack call_result;
  TraceOperation 037892 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 037893:
  TraceOperation 037893 (Jz (Var (Global 86)) (Branch T (Dloc 038034)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 038034
  } else {
    TraceOperation 037897 (Store (Con 102) (Con 0));
    SetByte 008080 0;
    SetByte 008081 0;
    TraceOperation 037900 (Call (Floc 020662) [Con 31225] Sp);
    PushFrame;
    PushReturnAddress 037900;
    SetLocal 1 31225;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 020671
  }
LocReturn 037900:
  PushStack call_result;
  TraceOperation 037907 (Jz (Var Sp) (Branch T (Dloc 037970)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 037970
  } else {
    TraceOperation 037910 (Print "You are safe! Prosser heaves a visible sigh of relief, shakes his head and wipes his brow. ");
    GamePrint "You are safe! Prosser heaves a visible sigh of relief, shakes his head and wipes his brow. ";
    TraceOperation 037961 (Print_paddr (Var (Global 47)));
    Let b2 = M[008002];
    Let b3 = M[008003];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 037963 New_line;
    GamePrint "\n";
    TraceOperation 037964 (Call (Floc 061320) [] Sp);
    PushFrame;
    PushReturnAddress 037964;
    MakeRoutineFrame 0;
    Jump: 061321
  }
LocReturn 037964:
  PushStack call_result;
  TraceOperation 037969 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 037970:
  TraceOperation 037970 (Je [Var (Global 0),Con 149] (Branch F (Dloc 038028)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),149)) {
    TraceOperation 037974 (Jz (Var (Global 139)) (Branch F (Dloc 038028)));
    Let b3 = M[008186];
    Let b4 = M[008187];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 037977 (Jin (Con 124) (Var (Global 0)) (Branch T (Dloc 038028)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[001871];
      if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
        Jump: 038028
      } else {
        TraceOperation 037981 (Print "The ");
        GamePrint "The ";
        TraceOperation 037984 (Print_obj (Con 146));
        Let b8 = M[002072];
        Let b9 = M[002073];
        Let b10 = M[Address(MakeHiLo(b8,b9))];
        Let ite_res11 = Ite((IsZeroByte(b10),"",GetText(Offset(Address(MakeHiLo(b8,b9)),1))));
        GamePrint ite_res11;
        TraceOperation 037986 (Print " gives a quick chew of his gum and slams in the clutch. ");
        GamePrint " gives a quick chew of his gum and slams in the clutch. ";
        TraceOperation 038019 (Print_paddr (Var (Global 47)));
        Let b12 = M[008002];
        Let b13 = M[008003];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b12,b13)));
        TraceOperation 038021 New_line;
        GamePrint "\n";
        TraceOperation 038022 (Call (Floc 061320) [] Sp);
        PushFrame;
        PushReturnAddress 038022;
        MakeRoutineFrame 0;
        Jump: 061321
      }
    } else {
      Jump: 038028
    }
  } else {
    Jump: 038028
  }
LocReturn 038022:
  PushStack call_result;
  TraceOperation 038027 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 038028:
  TraceOperation 038028 (Call (Floc 058110) [] Sp);
  PushFrame;
  PushReturnAddress 038028;
  MakeRoutineFrame 0;
  Jump: 058111
LocReturn 038028:
  PushStack call_result;
  TraceOperation 038033 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 038034:
  TraceOperation 038034 (Jz (Var (Global 201)) (Branch T (Dloc 038047)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 038047
  } else {
    TraceOperation 038037 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 038047)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,6)) {
      TraceOperation 038041 (Call (Floc 031422) [] Sp);
      PushFrame;
      PushReturnAddress 038041;
      MakeRoutineFrame 0;
      Jump: 031423
    } else {
      Jump: 038047
    }
  }
LocReturn 038041:
  PushStack call_result;
  TraceOperation 038046 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 038047:
  TraceOperation 038047 (Print_ret "You are already standing.");
  GamePrint "You are already standing.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 038060:
  MakeRoutineFrame 0;
  Jump: 038061
LocOp 038061:
  TraceOperation 038061 (Je [Var (Global 201),Con 117] (Branch F (Dloc 038088)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),117)) {
    TraceOperation 038065 (Print_ret "The slot is too wide to block that way.");
    GamePrint "The slot is too wide to block that way.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 038088
  }
LocOp 038088:
  TraceOperation 038088 (Je [Var (Global 201),Con 114,Con 112,Con 115] (Branch F (Dloc 038129)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),114),Equal(MakeHiLo(b1,b2),112)),Equal(MakeHiLo(b1,b2),115))) {
    TraceOperation 038095 (Print "You'd never be able to push the ");
    GamePrint "You'd never be able to push the ";
    TraceOperation 038116 (Print_obj (Con 116));
    Let b3 = M[001802];
    Let b4 = M[001803];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 038118 (Print " from there.");
    GamePrint " from there.";
    TraceOperation 038125 (Print_paddr (Var (Global 30)));
    Let b7 = M[007968];
    Let b8 = M[007969];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 038127 New_line;
    GamePrint "\n";
    TraceOperation 038128 Rtrue;
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 038129
  }
LocOp 038129:
  TraceOperation 038129 (Je [Var (Global 201),Con 173,Con 172,Con 166] (Branch F (Dloc 038170)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),173),Equal(MakeHiLo(b1,b2),172)),Equal(MakeHiLo(b1,b2),166))) {
    TraceOperation 038136 (Je [Var (Global 120),Con 123] (Branch F (Dloc 038170)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 038140 (Print "The ");
      GamePrint "The ";
      TraceOperation 038143 (Print_obj (Con 166));
      Let b5 = M[002252];
      Let b6 = M[002253];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 038145 (Print " could easily maneuver around you.");
      GamePrint " could easily maneuver around you.";
      TraceOperation 038166 (Print_paddr (Var (Global 30)));
      Let b9 = M[007968];
      Let b10 = M[007969];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
      TraceOperation 038168 New_line;
      GamePrint "\n";
      TraceOperation 038169 Rtrue;
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 1;
      JumpIndirect: (return) return_address_11
    } else {
      Jump: 038170
    }
  } else {
    Jump: 038170
  }
LocOp 038170:
  TraceOperation 038170 (Call (Floc 031422) [] Sp);
  PushFrame;
  PushReturnAddress 038170;
  MakeRoutineFrame 0;
  Jump: 031423
LocReturn 038170:
  PushStack call_result;
  TraceOperation 038175 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 038176:
  MakeRoutineFrame 0;
  Jump: 038177
LocOp 038177:
  TraceOperation 038177 (Jz (Var (Global 204)) (Branch T (Dloc 038188)));
  Let b1 = M[008316];
  Let b2 = M[008317];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 038188
  } else {
    TraceOperation 038180 (Call (Floc 022042) [Con 144,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 038180;
    SetLocal 1 144;
    SetLocal 2 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 038180:
  PushStack call_result;
  TraceOperation 038187 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 038188:
  TraceOperation 038188 (Call (Floc 031422) [] Sp);
  PushFrame;
  PushReturnAddress 038188;
  MakeRoutineFrame 0;
  Jump: 031423
LocReturn 038188:
  PushStack call_result;
  TraceOperation 038193 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 038194:
  MakeRoutineFrame 0;
  Jump: 038195
LocOp 038195:
  TraceOperation 038195 (Print_ret "That would be pointless.");
  GamePrint "That would be pointless.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 038210:
  MakeRoutineFrame 0;
  Jump: 038211
LocOp 038211:
  TraceOperation 038211 (Je [Var (Global 201),Con 158] (Branch F (Dloc 038221)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),158)) {
    TraceOperation 038215 (Jz (Var (Global 117)) (Branch T (Dloc 038221)));
    Let b3 = M[008142];
    Let b4 = M[008143];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 038221
    } else {
      TraceOperation 038218 (Jz (Var (Global 86)) (Branch F (Dloc 038232)));
      Let b5 = M[008080];
      Let b6 = M[008081];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 038221
      } else {
        Jump: 038232
      }
    }
  } else {
    Jump: 038221
  }
LocOp 038221:
  TraceOperation 038221 (Je [Var (Global 201),Con 139] (Branch F (Dloc 038236)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 038225 (Test_attr (Con 139) (Con 8) (Branch F (Dloc 038236)));
    Let b3 = M[002003];
    if (TestBit(b3,7)) {
      TraceOperation 038229 (Jz (Var (Global 86)) (Branch T (Dloc 038236)));
      Let b4 = M[008080];
      Let b5 = M[008081];
      if (IsZero(MakeHiLo(b4,b5))) {
        Jump: 038236
      } else {
        Jump: 038232
      }
    } else {
      Jump: 038236
    }
  } else {
    Jump: 038236
  }
LocOp 038232:
  TraceOperation 038232 (Print_paddr (Var (Global 50)));
  Let b1 = M[008008];
  Let b2 = M[008009];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 038234 New_line;
  GamePrint "\n";
  TraceOperation 038235 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 038236:
  TraceOperation 038236 (Je [Var (Global 201),Con 111] (Branch T Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),111)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 038240 (Call (Floc 043578) [] Sp);
    PushFrame;
    PushReturnAddress 038240;
    MakeRoutineFrame 0;
    Jump: 043579
  }
LocReturn 038240:
  PushStack call_result;
  TraceOperation 038245 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 038248 (Je [Var (Global 201),Con 179] (Branch F (Dloc 038259)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    if (Equal(MakeHiLo(b2,b3),179)) {
      TraceOperation 038252 (Je [Var (Global 202),Var (Global 208)] (Branch F (Dloc 038259)));
      Let b4 = M[008312];
      Let b5 = M[008313];
      Let b6 = M[008324];
      Let b7 = M[008325];
      if (Equal(MakeHiLo(b4,b5),MakeHiLo(b6,b7))) {
        TraceOperation 038256 (Jz (Var (Global 202)) (Branch F (Dloc 038285)));
        Let b8 = M[008312];
        Let b9 = M[008313];
        if (IsZero(MakeHiLo(b8,b9))) {
          Jump: 038259
        } else {
          Jump: 038285
        }
      } else {
        Jump: 038259
      }
    } else {
      Jump: 038259
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 1;
    JumpIndirect: (return) return_address_10
  }
LocOp 038259:
  TraceOperation 038259 (Je [Var (Global 201),Con 184] (Branch F (Dloc 038272)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),184)) {
    TraceOperation 038263 (Je [Var (Global 202),Con 180,Con 182] (Branch F (Dloc 038272)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),180),Equal(MakeHiLo(b3,b4),182))) {
      TraceOperation 038269 (Jz (Var (Global 209)) (Branch F (Dloc 038285)));
      Let b5 = M[008326];
      Let b6 = M[008327];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 038272
      } else {
        Jump: 038285
      }
    } else {
      Jump: 038272
    }
  } else {
    Jump: 038272
  }
LocOp 038272:
  TraceOperation 038272 (Je [Var (Global 201),Con 185] (Branch F (Dloc 038293)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),185)) {
    TraceOperation 038276 (Je [Var (Global 202),Con 197,Con 199] (Branch F (Dloc 038293)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),197),Equal(MakeHiLo(b3,b4),199))) {
      TraceOperation 038282 (Jz (Var (Global 210)) (Branch T (Dloc 038293)));
      Let b5 = M[008328];
      Let b6 = M[008329];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 038293
      } else {
        Jump: 038285
      }
    } else {
      Jump: 038293
    }
  } else {
    Jump: 038293
  }
LocOp 038285:
  TraceOperation 038285 (Call (Floc 022042) [Con 123,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 038285;
  SetLocal 1 123;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 038285:
  PushStack call_result;
  TraceOperation 038292 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 038293:
  TraceOperation 038293 (Test_attr (Var (Global 201)) (Con 22) (Branch F (Dloc 038304)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,1)) {
    TraceOperation 038297 (Get_parent (Var (Global 201)) Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
    PushStack Widen(b6);
    TraceOperation 038300 (Je [Var (Global 202),Var Sp] (Branch T Dfalse));
    Let b7 = M[008312];
    Let b8 = M[008313];
    PopStack popped9;
    if (Equal(MakeHiLo(b7,b8),popped9)) {
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 0;
      JumpIndirect: (return) return_address_10
    } else {
      Jump: 038304
    }
  } else {
    Jump: 038304
  }
LocOp 038304:
  TraceOperation 038304 (Jin (Var (Global 201)) (Con 31) (Branch T (Dloc 038321)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(31,Widen(b3))) {
    Jump: 038321
  } else {
    TraceOperation 038308 (Call (Floc 043468) [Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 038308;
    SetLocal 1 MakeHiLo(b4,b5);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  }
LocReturn 038308:
  PushStack call_result;
  TraceOperation 038314 (Jz (Var Sp) (Branch T (Dloc 038347)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 038347
  } else {
    TraceOperation 038317 (Test_attr (Var (Global 201)) (Con 25) (Branch T (Dloc 038347)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),3)];
    if (TestBit(b4,6)) {
      Jump: 038347
    } else {
      Jump: 038321
    }
  }
LocOp 038321:
  TraceOperation 038321 (Test_attr (Var (Global 201)) (Con 9) (Branch F (Dloc 038338)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,6)) {
    TraceOperation 038325 (Print_ret "You are already wearing it.");
    GamePrint "You are already wearing it.\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 038338
  }
LocOp 038338:
  TraceOperation 038338 (Print_ret "You already have it.");
  GamePrint "You already have it.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 038347:
  TraceOperation 038347 (Jz (Var (Global 202)) (Branch T (Dloc 038453)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 038453
  } else {
    TraceOperation 038351 (Je [Var (Global 201),Con 30] (Branch F (Dloc 038363)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 038355 (Call (Floc 022042) [Con 53,Var (Global 202)] Sp);
      Let b5 = M[008312];
      Let b6 = M[008313];
      PushFrame;
      PushReturnAddress 038355;
      SetLocal 1 53;
      SetLocal 2 MakeHiLo(b5,b6);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 038363
    }
  }
LocReturn 038355:
  PushStack call_result;
  TraceOperation 038362 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 038363:
  TraceOperation 038363 (Je [Var (Global 201),Var (Global 115)] (Branch F (Dloc 038371)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008138];
  Let b4 = M[008139];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 038367 (Je [Var (Global 202),Con 141] (Branch T Dfalse));
    Let b5 = M[008312];
    Let b6 = M[008313];
    if (Equal(MakeHiLo(b5,b6),141)) {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 038371
    }
  } else {
    Jump: 038371
  }
LocOp 038371:
  TraceOperation 038371 (Je [Var (Global 201),Var (Global 96)] (Branch F (Dloc 038379)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008100];
  Let b4 = M[008101];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 038375 (Je [Var (Global 202),Con 70] (Branch T Dfalse));
    Let b5 = M[008312];
    Let b6 = M[008313];
    if (Equal(MakeHiLo(b5,b6),70)) {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 038379
    }
  } else {
    Jump: 038379
  }
LocOp 038379:
  TraceOperation 038379 (Get_parent (Var (Global 201)) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 038382 (Je [Var (Global 202),Var Sp] (Branch T (Dloc 038449)));
  Let b4 = M[008312];
  Let b5 = M[008313];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    Jump: 038449
  } else {
    TraceOperation 038387 (Print "But");
    GamePrint "But";
    TraceOperation 038392 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b7 = M[008310];
    Let b8 = M[008311];
    PushFrame;
    PushReturnAddress 038392;
    SetLocal 1 MakeHiLo(b7,b8);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  }
LocReturn 038392:
  PushStack call_result;
  TraceOperation 038399 (Print " isn't ");
  GamePrint " isn't ";
  TraceOperation 038402 (Test_attr (Var (Global 202)) (Con 26) (Branch F (Dloc 038426)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 038406 (Je [Var (Global 202),Con 216,Con 209] (Branch T (Dloc 038426)));
    Let b4 = M[008312];
    Let b5 = M[008313];
    if (LogOr(Equal(MakeHiLo(b4,b5),216),Equal(MakeHiLo(b4,b5),209))) {
      Jump: 038426
    } else {
      TraceOperation 038412 (Print "being held by");
      GamePrint "being held by";
      TraceOperation 038423 (Jump 038439);
      Jump: 038439
    }
  } else {
    Jump: 038426
  }
LocOp 038426:
  TraceOperation 038426 (Test_attr (Var (Global 202)) (Con 8) (Branch F (Dloc 038436)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,7)) {
    TraceOperation 038430 (Print "on");
    GamePrint "on";
    TraceOperation 038433 (Jump 038439);
    Jump: 038439
  } else {
    Jump: 038436
  }
LocOp 038436:
  TraceOperation 038436 (Print "in");
  GamePrint "in";
  Jump: 038439
LocOp 038439:
  TraceOperation 038439 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 038439;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 038439:
  PushStack call_result;
  TraceOperation 038446 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 038449:
  TraceOperation 038449 (Store (Con 218) (Con 0));
  SetByte 008312 0;
  SetByte 008313 0;
  TraceOperation 038452 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 038453:
  TraceOperation 038453 (Get_parent (Var (Global 195)) Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 038456 (Je [Var (Global 201),Var Sp] (Branch F (Dloc 038469)));
  Let b4 = M[008310];
  Let b5 = M[008311];
  PopStack popped6;
  if (Equal(MakeHiLo(b4,b5),popped6)) {
    TraceOperation 038460 (Print_ret "You are in it!");
    GamePrint "You are in it!\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 038469
  }
LocOp 038469:
  TraceOperation 038469 (Jz (Var (Global 144)) (Branch T Dfalse));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 038472 (Je [Var (Global 201),Con 158] (Branch T Dfalse));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (Equal(MakeHiLo(b4,b5),158)) {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    } else {
      TraceOperation 038476 (Test_attr (Var (Global 201)) (Con 25) (Branch F Dfalse));
      Let b7 = M[008310];
      Let b8 = M[008311];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),3)];
      if (TestBit(b9,6)) {
        TraceOperation 038480 (Call (Floc 043468) [Var (Global 201)] Sp);
        Let b10 = M[008310];
        Let b11 = M[008311];
        PushFrame;
        PushReturnAddress 038480;
        SetLocal 1 MakeHiLo(b10,b11);
        MakeRoutineFrame 2;
        SetLocal 2 0;
        Jump: 043473
      } else {
        PopFrame;
        PopReturnAddress return_address_12;
        SetResult 0;
        JumpIndirect: (return) return_address_12
      }
    }
  }
LocReturn 038480:
  PushStack call_result;
  TraceOperation 038486 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 038489 (Call (Floc 020718) [Var (Global 150)] Sp);
    Let b2 = M[008208];
    Let b3 = M[008209];
    PushFrame;
    PushReturnAddress 038489;
    SetLocal 1 MakeHiLo(b2,b3);
    MakeRoutineFrame 1;
    Jump: 020721
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocReturn 038489:
  PushStack call_result;
  TraceOperation 038495 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 038497 New_line;
  GamePrint "\n";
  TraceOperation 038498 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 038500:
  MakeRoutineFrame 0;
  Jump: 038501
LocOp 038501:
  TraceOperation 038501 (Call (Floc 040994) [] Sp);
  PushFrame;
  PushReturnAddress 038501;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 1;
  Jump: 041003
LocReturn 038501:
  PushStack call_result;
  TraceOperation 038506 (Je [Var Sp,Con 1] (Branch F Dfalse));
  PopStack popped1;
  if (Equal(popped1,1)) {
    TraceOperation 038510 (Je [Var (Global 201),Con 69] (Branch F (Dloc 038693)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    if (Equal(MakeHiLo(b2,b3),69)) {
      TraceOperation 038515 (Test_attr (Con 69) (Con 21) (Branch F (Dloc 038693)));
      Let b4 = M[001374];
      if (TestBit(b4,2)) {
        TraceOperation 038520 (Clear_attr (Con 69) (Con 21));
        Let b5 = M[001374];
        SetByte 001374 ClearBit(b5,2);
        TraceOperation 038523 (Clear_attr (Con 69) (Con 27));
        Let b6 = M[001375];
        SetByte 001375 ClearBit(b6,4);
        TraceOperation 038526 (Store (Con 111) (Con 1));
        SetByte 008098 0;
        SetByte 008099 1;
        TraceOperation 038529 (Call (Floc 022320) [Con -14685,Con 6] Sp);
        PushFrame;
        PushReturnAddress 038529;
        SetLocal 1 -14685;
        SetLocal 2 6;
        MakeRoutineFrame 3;
        SetLocal 3 0;
        Jump: 022327
      } else {
        Jump: 038693
      }
    } else {
      Jump: 038693
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocReturn 038529:
  PushStack call_result;
  TraceOperation 038537 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 038542 (Call (Floc 022320) [Con -27122,Con 2] Sp);
  PushFrame;
  PushReturnAddress 038542;
  SetLocal 1 -27122;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 038542:
  PushStack call_result;
  TraceOperation 038550 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 038555 (Print "You remove the ");
  GamePrint "You remove the ";
  TraceOperation 038564 (Print_obj (Con 69));
  Let b2 = M[001379];
  Let b3 = M[001380];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 038566 (Print_ret ", improving Arthur's appearance greatly. He is clearly touched, and starts happily to chat away to you. You discover that he is only slightly more interesting to talk to than an averagely interesting wall.");
  GamePrint ", improving Arthur's appearance greatly. He is clearly touched, and starts happily to chat away to you. You discover that he is only slightly more interesting to talk to than an averagely interesting wall.\n";
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
LocOp 038693:
  TraceOperation 038693 (Je [Var (Global 201),Var (Global 96)] (Branch F (Dloc 038764)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008100];
  Let b4 = M[008101];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 038698 (Clear_attr (Var (Global 96)) (Con 27));
    Let b5 = M[008100];
    Let b6 = M[008101];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),3)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),3) ClearBit(b7,4);
    TraceOperation 038701 (Call (Floc 043468) [Con 72] Sp);
    PushFrame;
    PushReturnAddress 038701;
    SetLocal 1 72;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    Jump: 038764
  }
LocReturn 038701:
  PushStack call_result;
  TraceOperation 038707 (Jz (Var Sp) (Branch F (Dloc 038719)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 038710 (Store (Con 112) (Con 72));
    SetByte 008100 0;
    SetByte 008101 72;
    TraceOperation 038713 (Clear_attr (Con 70) (Con 5));
    Let b2 = M[001381];
    SetByte 001381 ClearBit(b2,2);
    TraceOperation 038716 (Jump 038799);
    Jump: 038799
  } else {
    Jump: 038719
  }
LocOp 038719:
  TraceOperation 038719 (Call (Floc 043468) [Con 193] Sp);
  PushFrame;
  PushReturnAddress 038719;
  SetLocal 1 193;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 038719:
  PushStack call_result;
  TraceOperation 038725 (Jz (Var Sp) (Branch F (Dloc 038737)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 038728 (Store (Con 112) (Con 193));
    SetByte 008100 0;
    SetByte 008101 193;
    TraceOperation 038731 (Clear_attr (Con 70) (Con 5));
    Let b2 = M[001381];
    SetByte 001381 ClearBit(b2,2);
    TraceOperation 038734 (Jump 038799);
    Jump: 038799
  } else {
    Jump: 038737
  }
LocOp 038737:
  TraceOperation 038737 (Call (Floc 043468) [Con 71] Sp);
  PushFrame;
  PushReturnAddress 038737;
  SetLocal 1 71;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 038737:
  PushStack call_result;
  TraceOperation 038743 (Jz (Var Sp) (Branch F (Dloc 038755)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 038746 (Store (Con 112) (Con 71));
    SetByte 008100 0;
    SetByte 008101 71;
    TraceOperation 038749 (Clear_attr (Con 70) (Con 5));
    Let b2 = M[001381];
    SetByte 001381 ClearBit(b2,2);
    TraceOperation 038752 (Jump 038799);
    Jump: 038799
  } else {
    Jump: 038755
  }
LocOp 038755:
  TraceOperation 038755 (Store (Con 112) (Con 0));
  SetByte 008100 0;
  SetByte 008101 0;
  TraceOperation 038758 (Clear_attr (Con 70) (Con 27));
  Let b1 = M[001384];
  SetByte 001384 ClearBit(b1,4);
  TraceOperation 038761 (Jump 038799);
  Jump: 038799
LocOp 038764:
  TraceOperation 038764 (Je [Var (Global 201),Con 158] (Branch F (Dloc 038786)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),158)) {
    TraceOperation 038768 (Jz (Var (Global 117)) (Branch T (Dloc 038786)));
    Let b3 = M[008142];
    Let b4 = M[008143];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 038786
    } else {
      TraceOperation 038771 (Clear_attr (Con 158) (Con 21));
      Let b5 = M[002175];
      SetByte 002175 ClearBit(b5,2);
      TraceOperation 038774 (Clear_attr (Con 158) (Con 27));
      Let b6 = M[002176];
      SetByte 002176 ClearBit(b6,4);
      TraceOperation 038777 (Set_attr (Con 158) (Con 23));
      Let b7 = M[002175];
      SetByte 002175 SetBit(b7,0);
      TraceOperation 038780 (Store (Con 133) (Con 0));
      SetByte 008142 0;
      SetByte 008143 0;
      TraceOperation 038783 (Jump 038799);
      Jump: 038799
    }
  } else {
    Jump: 038786
  }
LocOp 038786:
  TraceOperation 038786 (Je [Var (Global 201),Var (Global 116)] (Branch F (Dloc 038799)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008140];
  Let b4 = M[008141];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 038790 (Store (Con 132) (Con 0));
    SetByte 008140 0;
    SetByte 008141 0;
    TraceOperation 038793 (Clear_attr (Var (Global 201)) (Con 21));
    Let b5 = M[008310];
    Let b6 = M[008311];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),2)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),2) ClearBit(b7,2);
    TraceOperation 038796 (Clear_attr (Var (Global 201)) (Con 27));
    Let b8 = M[008310];
    Let b9 = M[008311];
    Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),3)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),3) ClearBit(b10,4);
    Jump: 038799
  } else {
    Jump: 038799
  }
LocOp 038799:
  TraceOperation 038799 (Je [Var (Global 201),Con 141] (Branch F (Dloc 038821)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),141)) {
    TraceOperation 038803 (Jz (Var (Global 115)) (Branch T (Dloc 038821)));
    Let b3 = M[008138];
    Let b4 = M[008139];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 038821
    } else {
      TraceOperation 038806 (Insert_obj (Var (Global 115)) (Var (Global 0)));
      Let b5 = M[008138];
      Let b6 = M[008139];
      Let b7 = M[007908];
      Let b8 = M[007909];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      if (IsZero(Widen(b9))) {} else {
        Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
        if (Equal(Widen(b10),MakeHiLo(b5,b6))) {
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
        } else {
          Let loop_var12 = Widen(b10);
          Label 13: {
            Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
            if (Equal(Widen(b14),MakeHiLo(b5,b6))) {
              Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
              SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
            } else {
              Assign loop_var12 = Widen(b14);
              Goto: Label 13
            }
          }
        }
      }
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) b8;
      Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b16));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) b6;
      TraceOperation 038809 (Clear_attr (Var (Global 115)) (Con 27));
      Let b17 = M[008138];
      Let b18 = M[008139];
      Let b19 = M[Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),3)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b17,b18),9)),3) ClearBit(b19,4);
      TraceOperation 038812 (Clear_attr (Var (Global 115)) (Con 21));
      Let b20 = M[008138];
      Let b21 = M[008139];
      Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b20,b21),9)),2)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b20,b21),9)),2) ClearBit(b22,2);
      TraceOperation 038815 (Store (Con 131) (Con 0));
      SetByte 008138 0;
      SetByte 008139 0;
      TraceOperation 038818 (Jump 038834);
      Jump: 038834
    }
  } else {
    Jump: 038821
  }
LocOp 038821:
  TraceOperation 038821 (Je [Var (Global 201),Var (Global 115)] (Branch F (Dloc 038834)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008138];
  Let b4 = M[008139];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 038825 (Clear_attr (Var (Global 115)) (Con 27));
    Let b5 = M[008138];
    Let b6 = M[008139];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),3)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),3) ClearBit(b7,4);
    TraceOperation 038828 (Clear_attr (Var (Global 115)) (Con 21));
    Let b8 = M[008138];
    Let b9 = M[008139];
    Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),2)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),2) ClearBit(b10,2);
    TraceOperation 038831 (Store (Con 131) (Con 0));
    SetByte 008138 0;
    SetByte 008139 0;
    Jump: 038834
  } else {
    Jump: 038834
  }
LocOp 038834:
  TraceOperation 038834 (Print_ret "Taken.");
  GamePrint "Taken.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 038842:
  MakeRoutineFrame 0;
  Jump: 038843
LocOp 038843:
  TraceOperation 038843 (Test_attr (Var (Global 201)) (Con 9) (Branch F (Dloc 038879)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,6)) {
    TraceOperation 038847 (Clear_attr (Var (Global 201)) (Con 9));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),1)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),1) ClearBit(b6,6);
    TraceOperation 038850 (Print "Okay, you're no longer wearing");
    GamePrint "Okay, you're no longer wearing";
    TraceOperation 038869 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b7 = M[008310];
    Let b8 = M[008311];
    PushFrame;
    PushReturnAddress 038869;
    SetLocal 1 MakeHiLo(b7,b8);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 038879
  }
LocReturn 038869:
  PushStack call_result;
  TraceOperation 038876 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 038879:
  TraceOperation 038879 (Print_ret "You aren't wearing that!");
  GamePrint "You aren't wearing that!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 038896:
  MakeRoutineFrame 0;
  Jump: 038897
LocOp 038897:
  TraceOperation 038897 (Print_ret "You can't. At least, not in this game you can't.");
  GamePrint "You can't. At least, not in this game you can't.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 038926:
  MakeRoutineFrame 0;
  Jump: 038927
LocOp 038927:
  TraceOperation 038927 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 038993)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 038932 (Jz (Var (Global 192)) (Branch T (Dloc 038942)));
    Let b4 = M[008292];
    Let b5 = M[008293];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 038942
    } else {
      TraceOperation 038935 (Store (Con 211) (Var (Global 201)));
      Let b6 = M[008310];
      Let b7 = M[008311];
      SetByte 008298 b6;
      SetByte 008299 b7;
      TraceOperation 038938 (Get_parent (Var (Global 195)) (Global 0));
      Let b8 = M[008298];
      Let b9 = M[008299];
      Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),4)];
      SetByte 007908 HiByte(Widen(b10));
      SetByte 007909 LoByte(Widen(b10));
      TraceOperation 038941 Rtrue;
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 1;
      JumpIndirect: (return) return_address_11
    }
  } else {
    Jump: 038993
  }
LocOp 038942:
  TraceOperation 038942 (Print "Hmmm ...");
  GamePrint "Hmmm ...";
  TraceOperation 038951 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 038951;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 038951:
  PushStack call_result;
  TraceOperation 038958 (Print_ret " looks at you expectantly, as if you seemed to be about to talk.");
  GamePrint " looks at you expectantly, as if you seemed to be about to talk.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 038993:
  TraceOperation 038993 (Print "You can't talk to");
  GamePrint "You can't talk to";
  TraceOperation 039002 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 039002;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 039002:
  PushStack call_result;
  TraceOperation 039008 (Print "!");
  GamePrint "!";
  TraceOperation 039011 New_line;
  GamePrint "\n";
  TraceOperation 039012 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 039012;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 039012:
  PushStack call_result;
  TraceOperation 039017 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 039018:
  MakeRoutineFrame 0;
  Jump: 039019
LocOp 039019:
  TraceOperation 039019 (Je [Var (Global 201),Con 30] (Branch F (Dloc 039031)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 039023 (Call (Floc 022042) [Con 174,Var (Global 202)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame;
    PushReturnAddress 039023;
    SetLocal 1 174;
    SetLocal 2 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 039031
  }
LocReturn 039023:
  PushStack call_result;
  TraceOperation 039030 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039031:
  TraceOperation 039031 (Print "It doesn't look like");
  GamePrint "It doesn't look like";
  TraceOperation 039042 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 039042;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 039042:
  PushStack call_result;
  TraceOperation 039049 (Print_ret " is interested.");
  GamePrint " is interested.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 039060:
  MakeRoutineFrame 0;
  Jump: 039061
LocOp 039061:
  TraceOperation 039061 (Print_ret "That sentence isn't one I recognise.");
  GamePrint "That sentence isn't one I recognise.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 039084:
  MakeRoutineFrame 0;
  Jump: 039085
LocOp 039085:
  TraceOperation 039085 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 039085;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 039085:
  PushStack call_result;
  TraceOperation 039090 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 039092:
  MakeRoutineFrame 0;
  Jump: 039093
LocOp 039093:
  TraceOperation 039093 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 039130)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 039097 (Print "You do so, but");
    GamePrint "You do so, but";
    TraceOperation 039106 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 039106;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 039130
  }
LocReturn 039106:
  PushStack call_result;
  TraceOperation 039113 (Print_ret " seems less than overjoyed.");
  GamePrint " seems less than overjoyed.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039130:
  TraceOperation 039130 (Call (Floc 030950) [] Sp);
  PushFrame;
  PushReturnAddress 039130;
  MakeRoutineFrame 0;
  Jump: 030951
LocReturn 039130:
  PushStack call_result;
  TraceOperation 039135 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 039136:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 039139
LocOp 039139:
  TraceOperation 039139 (Test_attr (Var (Global 201)) (Con 28) (Branch F (Dloc 039156)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,3)) {
    TraceOperation 039143 (Call (Floc 043430) [Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 039143;
    SetLocal 1 MakeHiLo(b4,b5);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 043437
  } else {
    Jump: 039156
  }
LocReturn 039143:
  PushStack call_result;
  TraceOperation 039149 (Call (Floc 043620) [Var Sp] Sp);
  PopStack popped1;
  PushFrame;
  PushReturnAddress 039149;
  SetLocal 1 popped1;
  MakeRoutineFrame 1;
  Jump: 043623
LocReturn 039149:
  PushStack call_result;
  TraceOperation 039155 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039156:
  TraceOperation 039156 (Test_attr (Var (Global 201)) (Con 12) (Branch F (Dloc 039168)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,3)) {
    TraceOperation 039160 (Call (Floc 022042) [Con 28,Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 039160;
    SetLocal 1 28;
    SetLocal 2 MakeHiLo(b4,b5);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 039168
  }
LocReturn 039160:
  PushStack call_result;
  TraceOperation 039167 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039168:
  TraceOperation 039168 (Test_attr (Var (Global 201)) (Con 25) (Branch T (Dloc 039211)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,6)) {
    Jump: 039211
  } else {
    TraceOperation 039172 (Print "You hit your head against");
    GamePrint "You hit your head against";
    TraceOperation 039187 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 039187;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  }
LocReturn 039187:
  PushStack call_result;
  TraceOperation 039194 (Print_ret " as you attempt this feat.");
  GamePrint " as you attempt this feat.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039211:
  TraceOperation 039211 (Jin (Var (Global 201)) (Var (Global 195)) (Branch F (Dloc 039223)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008298];
  Let b4 = M[008299];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    TraceOperation 039215 (Call (Floc 022042) [Con 61,Con 33] Sp);
    PushFrame;
    PushReturnAddress 039215;
    SetLocal 1 61;
    SetLocal 2 33;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 039223
  }
LocReturn 039215:
  PushStack call_result;
  TraceOperation 039222 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039223:
  TraceOperation 039223 (Call (Floc 030950) [] Sp);
  PushFrame;
  PushReturnAddress 039223;
  MakeRoutineFrame 0;
  Jump: 030951
LocReturn 039223:
  PushStack call_result;
  TraceOperation 039228 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 039230:
  MakeRoutineFrame 0;
  Jump: 039231
LocOp 039231:
  TraceOperation 039231 (Je [Var (Global 201),Con 49] (Branch F (Dloc 039256)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 039235 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 039256)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 039239 (Call (Floc 043298) [Con 206] Sp);
      PushFrame;
      PushReturnAddress 039239;
      SetLocal 1 206;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043303
    } else {
      Jump: 039256
    }
  } else {
    Jump: 039256
  }
LocReturn 039239:
  PushStack call_result;
  TraceOperation 039245 (Jz (Var Sp) (Branch T (Dloc 039256)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 039256
  } else {
    TraceOperation 039248 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame;
    PushReturnAddress 039248;
    SetLocal 1 145;
    SetLocal 2 205;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 039248:
  PushStack call_result;
  TraceOperation 039255 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039256:
  TraceOperation 039256 (Test_attr (Var (Global 201)) (Con 16) (Branch T Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,7)) {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    TraceOperation 039260 (Call (Floc 041208) [] Sp);
    PushFrame;
    PushReturnAddress 039260;
    MakeRoutineFrame 0;
    Jump: 041209
  }
LocReturn 039260:
  PushStack call_result;
  TraceOperation 039265 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 039268 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 039270:
  MakeRoutineFrame 0;
  Jump: 039271
LocOp 039271:
  TraceOperation 039271 (Je [Var (Global 0),Con 121] (Branch F (Dloc 039315)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 039275 (Insert_obj (Var (Global 201)) (Con 219));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
    if (IsZero(Widen(b5))) {} else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b6),MakeHiLo(b3,b4))) {
        Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
      } else {
        Let loop_var8 = Widen(b6);
        Label 9: {
          Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
          if (Equal(Widen(b10),MakeHiLo(b3,b4))) {
            Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
            SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
          } else {
            Assign loop_var8 = Widen(b10);
            Goto: Label 9
          }
        }
      }
    }
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) 219;
    Let b12 = M[002728];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b12));
    SetByte 002728 b4;
    TraceOperation 039278 (Print_paddr (Var (Global 9)));
    Let b13 = M[007926];
    Let b14 = M[007927];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b13,b14)));
    TraceOperation 039280 (Print "collects");
    GamePrint "collects";
    TraceOperation 039287 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b15 = M[008310];
    Let b16 = M[008311];
    PushFrame;
    PushReturnAddress 039287;
    SetLocal 1 MakeHiLo(b15,b16);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 039315
  }
LocReturn 039287:
  PushStack call_result;
  TraceOperation 039294 (Print_ret " in mid-air, and flashes away.");
  GamePrint " in mid-air, and flashes away.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039315:
  TraceOperation 039315 (Je [Var (Global 0),Con 81,Con 175] (Branch F (Dloc 039329)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(Equal(MakeHiLo(b1,b2),81),Equal(MakeHiLo(b1,b2),175))) {
    TraceOperation 039321 (Call (Floc 022042) [Con 53,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 039321;
    SetLocal 1 53;
    SetLocal 2 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 039329
  }
LocReturn 039321:
  PushStack call_result;
  TraceOperation 039328 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039329:
  TraceOperation 039329 (Jz (Var (Global 202)) (Branch T (Dloc 039344)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 039344
  } else {
    TraceOperation 039332 (Insert_obj (Var (Global 201)) (Var (Global 0)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[007908];
    Let b6 = M[007909];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
    if (IsZero(Widen(b7))) {} else {
      Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b8),MakeHiLo(b3,b4))) {
        Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
      } else {
        Let loop_var10 = Widen(b8);
        Label 11: {
          Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
          if (Equal(Widen(b12),MakeHiLo(b3,b4))) {
            Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
            SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
          } else {
            Assign loop_var10 = Widen(b12);
            Goto: Label 11
          }
        }
      }
    }
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) b6;
    Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b14));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) b4;
    TraceOperation 039335 (Print_ret "You missed.");
    GamePrint "You missed.\n";
    PopFrame;
    PopReturnAddress return_address_15;
    SetResult 1;
    JumpIndirect: (return) return_address_15
  }
LocOp 039344:
  TraceOperation 039344 (Insert_obj (Var (Global 201)) (Var (Global 0)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {} else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
    } else {
      Let loop_var8 = Widen(b6);
      Label 9: {
        Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
        if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
        } else {
          Assign loop_var8 = Widen(b10);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
  Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
  TraceOperation 039347 (Print_ret "Thrown.");
  GamePrint "Thrown.\n";
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 1;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 039354:
  MakeRoutineFrame 0;
  Jump: 039355
LocOp 039355:
  TraceOperation 039355 (Print_ret "You can't do that!");
  GamePrint "You can't do that!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 039366:
  MakeRoutineFrame 0;
  Jump: 039367
LocOp 039367:
  TraceOperation 039367 (Je [Var (Global 201),Con 139] (Branch F (Dloc 039377)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 039371 (Call (Floc 028824) [] Sp);
    PushFrame;
    PushReturnAddress 039371;
    MakeRoutineFrame 0;
    Jump: 028825
  } else {
    Jump: 039377
  }
LocReturn 039371:
  PushStack call_result;
  TraceOperation 039376 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039377:
  TraceOperation 039377 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 039377;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 039377:
  PushStack call_result;
  TraceOperation 039382 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 039384:
  MakeRoutineFrame 0;
  Jump: 039385
LocOp 039385:
  TraceOperation 039385 (Print "You can't tie");
  GamePrint "You can't tie";
  TraceOperation 039392 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 039392;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 039392:
  PushStack call_result;
  TraceOperation 039398 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 039402:
  MakeRoutineFrame 0;
  Jump: 039403
LocOp 039403:
  TraceOperation 039403 (Je [Var (Global 201),Con 157] (Branch F (Dloc 039415)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),157)) {
    TraceOperation 039407 (Call (Floc 022042) [Con 157,Con 157] Sp);
    PushFrame;
    PushReturnAddress 039407;
    SetLocal 1 157;
    SetLocal 2 157;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 039415
  }
LocReturn 039407:
  PushStack call_result;
  TraceOperation 039414 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039415:
  TraceOperation 039415 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 039415;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 039415:
  PushStack call_result;
  TraceOperation 039420 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 039422:
  MakeRoutineFrame 0;
  Jump: 039423
LocOp 039423:
  TraceOperation 039423 (Je [Var (Global 201),Con 64] (Branch F (Dloc 039460)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 039427 (Print_ret "Try: STEER BOAT TOWARD (something).");
    GamePrint "Try: STEER BOAT TOWARD (something).\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 039460
  }
LocOp 039460:
  TraceOperation 039460 (Je [Var (Global 201),Con 217,Con 30] (Branch F (Dloc 039472)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(Equal(MakeHiLo(b1,b2),217),Equal(MakeHiLo(b1,b2),30))) {
    TraceOperation 039466 (Call (Floc 037638) [] Sp);
    PushFrame;
    PushReturnAddress 039466;
    MakeRoutineFrame 0;
    Jump: 037639
  } else {
    Jump: 039472
  }
LocReturn 039466:
  PushStack call_result;
  TraceOperation 039471 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039472:
  TraceOperation 039472 (Je [Var (Global 201),Con 49] (Branch F (Dloc 039497)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),49)) {
    TraceOperation 039476 (Jl (Var (Global 174)) (Con 9) (Branch F (Dloc 039497)));
    Let b3 = M[008256];
    Let b4 = M[008257];
    if (LessThan(MakeHiLo(b3,b4),9)) {
      TraceOperation 039480 (Call (Floc 043298) [Con 206] Sp);
      PushFrame;
      PushReturnAddress 039480;
      SetLocal 1 206;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043303
    } else {
      Jump: 039497
    }
  } else {
    Jump: 039497
  }
LocReturn 039480:
  PushStack call_result;
  TraceOperation 039486 (Jz (Var Sp) (Branch T (Dloc 039497)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 039497
  } else {
    TraceOperation 039489 (Call (Floc 022042) [Con 145,Con 205] Sp);
    PushFrame;
    PushReturnAddress 039489;
    SetLocal 1 145;
    SetLocal 2 205;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 039489:
  PushStack call_result;
  TraceOperation 039496 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039497:
  TraceOperation 039497 (Print_ret "This has no effect.");
  GamePrint "This has no effect.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 039508:
  MakeRoutineFrame 0;
  Jump: 039509
LocOp 039509:
  TraceOperation 039509 (Je [Var (Global 0),Con 121] (Branch T (Dloc 039536)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    Jump: 039536
  } else {
    TraceOperation 039513 (Print "There's no ");
    GamePrint "There's no ";
    TraceOperation 039518 (Print_obj (Con 110));
    Let b3 = M[001748];
    Let b4 = M[001749];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 039520 (Print " in sight.");
    GamePrint " in sight.";
    TraceOperation 039529 New_line;
    GamePrint "\n";
    TraceOperation 039530 (Call (Floc 043634) [] Sp);
    PushFrame;
    PushReturnAddress 039530;
    MakeRoutineFrame 0;
    Jump: 043635
  }
LocReturn 039530:
  PushStack call_result;
  TraceOperation 039535 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039536:
  TraceOperation 039536 (Jz (Var (Global 105)) (Branch F (Dloc 039550)));
  Let b1 = M[008118];
  Let b2 = M[008119];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 039539 (Jz (Var (Global 192)) (Branch T (Dloc 039550)));
    Let b3 = M[008292];
    Let b4 = M[008293];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 039550
    } else {
      TraceOperation 039542 (Call (Floc 022042) [Con 45,Con 181] Sp);
      PushFrame;
      PushReturnAddress 039542;
      SetLocal 1 45;
      SetLocal 2 181;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    }
  } else {
    Jump: 039550
  }
LocReturn 039542:
  PushStack call_result;
  TraceOperation 039549 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 039550:
  TraceOperation 039550 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039554 (Je [Var Sp,Con 15814] (Branch F (Dloc 039576)));
  PopStack popped7;
  if (Equal(popped7,15814)) {
    TraceOperation 039560 (Je [Var (Global 107),Con 1,Con 2] (Branch F (Dloc 039576)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),1),Equal(MakeHiLo(b8,b9),2))) {
      TraceOperation 039566 (Je [Var (Global 106),Con 1] (Branch F (Dloc 039576)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),1)) {
        TraceOperation 039570 (Call (Floc 080304) [] Sp);
        PushFrame;
        PushReturnAddress 039570;
        MakeRoutineFrame 0;
        Jump: 080305
      } else {
        Jump: 039576
      }
    } else {
      Jump: 039576
    }
  } else {
    Jump: 039576
  }
LocReturn 039570:
  PushStack call_result;
  TraceOperation 039575 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039576:
  TraceOperation 039576 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039580 (Je [Var Sp,Con 16955] (Branch F (Dloc 039602)));
  PopStack popped7;
  if (Equal(popped7,16955)) {
    TraceOperation 039586 (Je [Var (Global 107),Con 1,Con 2] (Branch F (Dloc 039602)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),1),Equal(MakeHiLo(b8,b9),2))) {
      TraceOperation 039592 (Je [Var (Global 106),Con 2] (Branch F (Dloc 039602)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),2)) {
        TraceOperation 039596 (Call (Floc 080304) [] Sp);
        PushFrame;
        PushReturnAddress 039596;
        MakeRoutineFrame 0;
        Jump: 080305
      } else {
        Jump: 039602
      }
    } else {
      Jump: 039602
    }
  } else {
    Jump: 039602
  }
LocReturn 039596:
  PushStack call_result;
  TraceOperation 039601 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039602:
  TraceOperation 039602 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039606 (Je [Var Sp,Con 20308] (Branch F (Dloc 039628)));
  PopStack popped7;
  if (Equal(popped7,20308)) {
    TraceOperation 039612 (Je [Var (Global 107),Con 1,Con 2] (Branch F (Dloc 039628)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),1),Equal(MakeHiLo(b8,b9),2))) {
      TraceOperation 039618 (Je [Var (Global 106),Con 3] (Branch F (Dloc 039628)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),3)) {
        TraceOperation 039622 (Call (Floc 080304) [] Sp);
        PushFrame;
        PushReturnAddress 039622;
        MakeRoutineFrame 0;
        Jump: 080305
      } else {
        Jump: 039628
      }
    } else {
      Jump: 039628
    }
  } else {
    Jump: 039628
  }
LocReturn 039622:
  PushStack call_result;
  TraceOperation 039627 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039628:
  TraceOperation 039628 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039632 (Je [Var Sp,Con 15926] (Branch F (Dloc 039654)));
  PopStack popped7;
  if (Equal(popped7,15926)) {
    TraceOperation 039638 (Je [Var (Global 107),Con 3,Con 4] (Branch F (Dloc 039654)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),3),Equal(MakeHiLo(b8,b9),4))) {
      TraceOperation 039644 (Je [Var (Global 106),Con 1] (Branch F (Dloc 039654)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),1)) {
        TraceOperation 039648 (Call (Floc 080304) [] Sp);
        PushFrame;
        PushReturnAddress 039648;
        MakeRoutineFrame 0;
        Jump: 080305
      } else {
        Jump: 039654
      }
    } else {
      Jump: 039654
    }
  } else {
    Jump: 039654
  }
LocReturn 039648:
  PushStack call_result;
  TraceOperation 039653 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039654:
  TraceOperation 039654 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039658 (Je [Var Sp,Con 17200] (Branch F (Dloc 039680)));
  PopStack popped7;
  if (Equal(popped7,17200)) {
    TraceOperation 039664 (Je [Var (Global 107),Con 3,Con 4] (Branch F (Dloc 039680)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),3),Equal(MakeHiLo(b8,b9),4))) {
      TraceOperation 039670 (Je [Var (Global 106),Con 2] (Branch F (Dloc 039680)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),2)) {
        TraceOperation 039674 (Call (Floc 080304) [] Sp);
        PushFrame;
        PushReturnAddress 039674;
        MakeRoutineFrame 0;
        Jump: 080305
      } else {
        Jump: 039680
      }
    } else {
      Jump: 039680
    }
  } else {
    Jump: 039680
  }
LocReturn 039674:
  PushStack call_result;
  TraceOperation 039679 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039680:
  TraceOperation 039680 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039684 (Je [Var Sp,Con 19594] (Branch F (Dloc 039706)));
  PopStack popped7;
  if (Equal(popped7,19594)) {
    TraceOperation 039690 (Je [Var (Global 107),Con 3,Con 4] (Branch F (Dloc 039706)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),3),Equal(MakeHiLo(b8,b9),4))) {
      TraceOperation 039696 (Je [Var (Global 106),Con 3] (Branch F (Dloc 039706)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),3)) {
        TraceOperation 039700 (Call (Floc 080304) [] Sp);
        PushFrame;
        PushReturnAddress 039700;
        MakeRoutineFrame 0;
        Jump: 080305
      } else {
        Jump: 039706
      }
    } else {
      Jump: 039706
    }
  } else {
    Jump: 039706
  }
LocReturn 039700:
  PushStack call_result;
  TraceOperation 039705 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039706:
  TraceOperation 039706 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039710 (Je [Var Sp,Con 14302] (Branch F (Dloc 039732)));
  PopStack popped7;
  if (Equal(popped7,14302)) {
    TraceOperation 039716 (Je [Var (Global 107),Con 5,Con 6] (Branch F (Dloc 039732)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),5),Equal(MakeHiLo(b8,b9),6))) {
      TraceOperation 039722 (Je [Var (Global 106),Con 1] (Branch F (Dloc 039732)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),1)) {
        TraceOperation 039726 (Call (Floc 080304) [] Sp);
        PushFrame;
        PushReturnAddress 039726;
        MakeRoutineFrame 0;
        Jump: 080305
      } else {
        Jump: 039732
      }
    } else {
      Jump: 039732
    }
  } else {
    Jump: 039732
  }
LocReturn 039726:
  PushStack call_result;
  TraceOperation 039731 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039732:
  TraceOperation 039732 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039736 (Je [Var Sp,Con 17151] (Branch F (Dloc 039758)));
  PopStack popped7;
  if (Equal(popped7,17151)) {
    TraceOperation 039742 (Je [Var (Global 107),Con 5,Con 6] (Branch F (Dloc 039758)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),5),Equal(MakeHiLo(b8,b9),6))) {
      TraceOperation 039748 (Je [Var (Global 106),Con 2] (Branch F (Dloc 039758)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),2)) {
        TraceOperation 039752 (Call (Floc 080304) [] Sp);
        PushFrame;
        PushReturnAddress 039752;
        MakeRoutineFrame 0;
        Jump: 080305
      } else {
        Jump: 039758
      }
    } else {
      Jump: 039758
    }
  } else {
    Jump: 039758
  }
LocReturn 039752:
  PushStack call_result;
  TraceOperation 039757 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039758:
  TraceOperation 039758 (Loadw (Var (Global 194)) (Var (Global 192)) Sp);
  Let b1 = M[008296];
  Let b2 = M[008297];
  Let b3 = M[008292];
  Let b4 = M[008293];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  PushStack MakeHiLo(b5,b6);
  TraceOperation 039762 (Je [Var Sp,Con 20028] (Branch F (Dloc 039784)));
  PopStack popped7;
  if (Equal(popped7,20028)) {
    TraceOperation 039768 (Je [Var (Global 107),Con 5,Con 6] (Branch F (Dloc 039784)));
    Let b8 = M[008122];
    Let b9 = M[008123];
    if (LogOr(Equal(MakeHiLo(b8,b9),5),Equal(MakeHiLo(b8,b9),6))) {
      TraceOperation 039774 (Je [Var (Global 106),Con 3] (Branch F (Dloc 039784)));
      Let b10 = M[008120];
      Let b11 = M[008121];
      if (Equal(MakeHiLo(b10,b11),3)) {
        TraceOperation 039778 (Call (Floc 080304) [] Sp);
        PushFrame;
        PushReturnAddress 039778;
        MakeRoutineFrame 0;
        Jump: 080305
      } else {
        Jump: 039784
      }
    } else {
      Jump: 039784
    }
  } else {
    Jump: 039784
  }
LocReturn 039778:
  PushStack call_result;
  TraceOperation 039783 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039784:
  TraceOperation 039784 (Jz (Var (Global 192)) (Branch F (Dloc 039814)));
  Let b1 = M[008292];
  Let b2 = M[008293];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 039787 (Print_ret "You didn't specify what you wanted to type.");
    GamePrint "You didn't specify what you wanted to type.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 039814
  }
LocOp 039814:
  TraceOperation 039814 (Call (Floc 022042) [Con 45,Con 181] Sp);
  PushFrame;
  PushReturnAddress 039814;
  SetLocal 1 45;
  SetLocal 2 181;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 039814:
  PushStack call_result;
  TraceOperation 039821 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 039824:
  MakeRoutineFrame 0;
  Jump: 039825
LocOp 039825:
  TraceOperation 039825 (Je [Var (Global 201),Con 110] (Branch F (Dloc 039838)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),110)) {
    TraceOperation 039829 (Store (Con 208) (Con 0));
    SetByte 008292 0;
    SetByte 008293 0;
    TraceOperation 039832 (Call (Floc 039508) [] Sp);
    PushFrame;
    PushReturnAddress 039832;
    MakeRoutineFrame 0;
    Jump: 039509
  } else {
    Jump: 039838
  }
LocReturn 039832:
  PushStack call_result;
  TraceOperation 039837 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 039838:
  TraceOperation 039838 (Print_ret "You can't type on that!");
  GamePrint "You can't type on that!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 039852:
  MakeRoutineFrame 0;
  Jump: 039853
LocOp 039853:
  TraceOperation 039853 (Call (Floc 030950) [] Sp);
  PushFrame;
  PushReturnAddress 039853;
  MakeRoutineFrame 0;
  Jump: 030951
LocReturn 039853:
  PushStack call_result;
  TraceOperation 039858 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 039860:
  MakeRoutineFrame 0;
  Jump: 039861
LocOp 039861:
  TraceOperation 039861 (Je [Var (Global 201),Con 184,Con 185,Con 186] (Branch T (Dloc 039872)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),184),Equal(MakeHiLo(b1,b2),185)),Equal(MakeHiLo(b1,b2),186))) {
    Jump: 039872
  } else {
    TraceOperation 039868 (Je [Var (Global 201),Con 182] (Branch F (Dloc 039876)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),182)) {
      Jump: 039872
    } else {
      Jump: 039876
    }
  }
LocOp 039872:
  TraceOperation 039872 (Print_paddr (Var (Global 61)));
  Let b1 = M[008030];
  Let b2 = M[008031];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 039874 New_line;
  GamePrint "\n";
  TraceOperation 039875 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 039876:
  TraceOperation 039876 (Call (Floc 031360) [] Sp);
  PushFrame;
  PushReturnAddress 039876;
  MakeRoutineFrame 0;
  Jump: 031361
LocReturn 039876:
  PushStack call_result;
  TraceOperation 039881 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 039882:
  MakeRoutineFrame 0;
  Jump: 039883
LocOp 039883:
  TraceOperation 039883 (Call (Floc 030950) [] Sp);
  PushFrame;
  PushReturnAddress 039883;
  MakeRoutineFrame 0;
  Jump: 030951
LocReturn 039883:
  PushStack call_result;
  TraceOperation 039888 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 039890:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 039901
LocOp 039901:
  TraceOperation 039901 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 039926)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001871];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 039905 (Je [Var (Global 201),Con 20,Con 18] (Branch T (Dloc 039926)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (LogOr(Equal(MakeHiLo(b4,b5),20),Equal(MakeHiLo(b4,b5),18))) {
      Jump: 039926
    } else {
      TraceOperation 039911 (Print_ret "You would be no safer there.");
      GamePrint "You would be no safer there.\n";
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  } else {
    Jump: 039926
  }
LocOp 039926:
  TraceOperation 039926 (Jz (Var (Global 86)) (Branch T (Dloc 039933)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 039933
  } else {
    TraceOperation 039929 (Print_paddr (Var (Global 50)));
    Let b3 = M[008008];
    Let b4 = M[008009];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 039931 New_line;
    GamePrint "\n";
    TraceOperation 039932 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  }
LocOp 039933:
  TraceOperation 039933 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 040033)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 039938 (Store (Con 118) (Con 1));
    SetByte 008112 0;
    SetByte 008113 1;
    TraceOperation 039941 (Print "You stumble in that direction, but as you can't see where you're going you wander around in circles.");
    GamePrint "You stumble in that direction, but as you can't see where you're going you wander around in circles.";
    TraceOperation 039986 (Test_attr (Con 95) (Con 3) (Branch T (Dloc 040031)));
    Let b2 = M[001606];
    if (TestBit(b2,4)) {
      Jump: 040031
    } else {
      TraceOperation 039990 (Print " The Beast is getting puzzled that something it can't see is stumbling around its lair.");
      GamePrint " The Beast is getting puzzled that something it can't see is stumbling around its lair.";
      TraceOperation 040029 (Print_paddr (Var (Global 12)));
      Let b3 = M[007932];
      Let b4 = M[007933];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
      Jump: 040031
    }
  } else {
    Jump: 040033
  }
LocOp 040031:
  TraceOperation 040031 New_line;
  GamePrint "\n";
  TraceOperation 040032 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 040033:
  TraceOperation 040033 (Je [Var (Global 0),Con 81] (Branch T (Dloc 040128)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),81)) {
    Jump: 040128
  } else {
    TraceOperation 040038 (Je [Var (Global 120),Con 123] (Branch F (Dloc 040128)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 040043 (Jz (Var (Global 97)) (Branch T (Dloc 040128)));
      Let b5 = M[008102];
      Let b6 = M[008103];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 040128
      } else {
        TraceOperation 040047 (Random (Con 100) Sp);
        LetRandom random7 100;
        PushStack random7;
        TraceOperation 040051 (Jl (Con 30) (Var Sp) (Branch T (Dloc 040128)));
        PopStack popped8;
        if (LessThan(30,popped8)) {
          Jump: 040128
        } else {
          TraceOperation 040056 (Print "You notice that you can't remember how to walk. Oddly, as you think about walking, all that comes to mind is an image of");
          GamePrint "You notice that you can't remember how to walk. Oddly, as you think about walking, all that comes to mind is an image of";
          TraceOperation 040119 (Call (Floc 043738) [Var (Global 97)] Sp);
          Let b9 = M[008102];
          Let b10 = M[008103];
          PushFrame;
          PushReturnAddress 040119;
          SetLocal 1 MakeHiLo(b9,b10);
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 043743
        }
      }
    } else {
      Jump: 040128
    }
  }
LocReturn 040119:
  PushStack call_result;
  TraceOperation 040125 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 040128:
  TraceOperation 040128 (Jz (Var (Global 175)) (Branch F (Dloc 040139)));
  Let b1 = M[008258];
  Let b2 = M[008259];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 040131 (Call (Floc 022042) [Con 21,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 040131;
    SetLocal 1 21;
    SetLocal 2 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 040139
  }
LocReturn 040131:
  PushStack call_result;
  TraceOperation 040138 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 040139:
  TraceOperation 040139 (Get_prop_addr (Var (Global 0)) (Var (Global 201)) (Local 1));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[008310];
  Let b4 = M[008311];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let loop_var8 = DeAddress(Offset(Address(MakeHiLo(b5,b6)),Add(Mul(2,Widen(b7)),1)));
  Label 9: {
    Let b10 = M[Address(loop_var8)];
    if (IsZeroByte(b10)) {
      SetLocal 1 0;
    } else {
      if (Equal(MakeHiLo(b3,b4),Widen(BwAnd(b10,31)))) {
        SetLocal 1 DeAddress(Offset(Address(loop_var8),1));
      } else {
        Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),Add(Widen(ShiftR(b10,5)),1)));
        Goto: Label 9
      }
    }
  }
  TraceOperation 040143 (Jz (Var (Local 1)) (Branch T (Dloc 040308)));
  GetLocal 1 local1_11;
  if (IsZero(local1_11)) {
    Jump: 040308
  } else {
    TraceOperation 040147 (Get_prop_len (Var (Local 1)) (Local 2));
    GetLocal 1 local1_12;
    if (IsZero(local1_12)) {
      SetLocal 2 0;
    } else {
      Let b13 = M[Offset(Address(local1_12),-1)];
      SetLocal 2 Add(Widen(ShiftR(b13,5)),1);
    }
    TraceOperation 040150 (Je [Var (Local 2),Con 1] (Branch F (Dloc 040165)));
    GetLocal 2 local2_14;
    if (Equal(local2_14,1)) {
      TraceOperation 040154 (Loadb (Var (Local 1)) (Con 0) Sp);
      GetLocal 1 local1_15;
      Let b16 = M[Offset(Address(local1_15),0)];
      PushStack Widen(b16);
      TraceOperation 040158 (Call (Floc 042574) [Var Sp] Sp);
      PopStack popped17;
      PushFrame;
      PushReturnAddress 040158;
      SetLocal 1 popped17;
      MakeRoutineFrame 2;
      SetLocal 2 1;
      Jump: 042579
    } else {
      Jump: 040165
    }
  }
LocReturn 040158:
  PushStack call_result;
  TraceOperation 040164 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 040165:
  TraceOperation 040165 (Je [Var (Local 2),Con 2] (Branch F (Dloc 040178)));
  GetLocal 2 local2_1;
  if (Equal(local2_1,2)) {
    TraceOperation 040169 (Loadw (Var (Local 1)) (Con 0) Sp);
    GetLocal 1 local1_2;
    Let b3 = M[Offset(Address(local1_2),0)];
    Let b4 = M[Offset(Offset(Address(local1_2),0),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 040173 (Print_paddr (Var Sp));
    PopStack popped5;
    GamePrint GetText(PackedAddress Z3(popped5));
    TraceOperation 040175 New_line;
    GamePrint "\n";
    TraceOperation 040176 (Ret (Con 2));
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 2;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 040178
  }
LocOp 040178:
  TraceOperation 040178 (Je [Var (Local 2),Con 3] (Branch F (Dloc 040210)));
  GetLocal 2 local2_1;
  if (Equal(local2_1,3)) {
    TraceOperation 040182 (Loadw (Var (Local 1)) (Con 0) Sp);
    GetLocal 1 local1_2;
    Let b3 = M[Offset(Address(local1_2),0)];
    Let b4 = M[Offset(Offset(Address(local1_2),0),1)];
    PushStack MakeHiLo(b3,b4);
    TraceOperation 040186 (Call (Fvar Sp) [] (Local 5));
    PopStack popped5;
    if (IsZeroAddress(PackedAddress Z3(popped5))) {
      SetLocal 5 0;
      Jump: 040190
    } else {
      PushFrame;
      PushReturnAddress 040186;
      SetNumberActuals 0;
      JumpIndirect: (routine) PackedAddress Z3(popped5)
    }
  } else {
    Jump: 040210
  }
LocReturn 040186:
  SetLocal 5 call_result;
  Jump: 040190
LocOp 040190:
  TraceOperation 040190 (Jz (Var (Local 5)) (Branch T (Dloc 040200)));
  GetLocal 5 local5_1;
  if (IsZero(local5_1)) {
    Jump: 040200
  } else {
    TraceOperation 040193 (Call (Floc 042574) [Var (Local 5)] Sp);
    GetLocal 5 local5_2;
    PushFrame;
    PushReturnAddress 040193;
    SetLocal 1 local5_2;
    MakeRoutineFrame 2;
    SetLocal 2 1;
    Jump: 042579
  }
LocReturn 040193:
  PushStack call_result;
  TraceOperation 040199 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 040200:
  TraceOperation 040200 (Je [Var (Global 0),Con 201] (Branch F (Dloc 040208)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),201)) {
    TraceOperation 040204 (Je [Var (Global 175),Con 19] (Branch T Dtrue));
    Let b3 = M[008258];
    Let b4 = M[008259];
    if (Equal(MakeHiLo(b3,b4),19)) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 040208
    }
  } else {
    Jump: 040208
  }
LocOp 040208:
  TraceOperation 040208 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
LocOp 040210:
  TraceOperation 040210 (Je [Var (Local 2),Con 4] (Branch F (Dloc 040252)));
  GetLocal 2 local2_1;
  if (Equal(local2_1,4)) {
    TraceOperation 040214 (Loadb (Var (Local 1)) (Con 1) Sp);
    GetLocal 1 local1_2;
    Let b3 = M[Offset(Address(local1_2),1)];
    PushStack Widen(b3);
    TraceOperation 040218 (Load (Var Sp) Sp);
    PopStack popped4;
    if (IsZeroByte(LoByte(popped4))) {
      PopStack popped5;
      PushStack popped5;
      PushStack popped5;
    } else {
      if (LessThanByte(LoByte(popped4),16)) {
        GetLocal LoByte(popped4) localLoByte(popped4)_6;
        PushStack localLoByte(popped4)_6;
      } else {
        Let b7 = M[Offset(007908,Mul(2,Widen(MinusByte(LoByte(popped4),16))))];
        Let b8 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(LoByte(popped4),16)))),1)];
        PushStack MakeHiLo(b7,b8);
      }
    }
    TraceOperation 040221 (Jz (Var Sp) (Branch T (Dloc 040235)));
    PopStack popped9;
    if (IsZero(popped9)) {
      Jump: 040235
    } else {
      TraceOperation 040224 (Loadb (Var (Local 1)) (Con 0) Sp);
      GetLocal 1 local1_10;
      Let b11 = M[Offset(Address(local1_10),0)];
      PushStack Widen(b11);
      TraceOperation 040228 (Call (Floc 042574) [Var Sp] Sp);
      PopStack popped12;
      PushFrame;
      PushReturnAddress 040228;
      SetLocal 1 popped12;
      MakeRoutineFrame 2;
      SetLocal 2 1;
      Jump: 042579
    }
  } else {
    Jump: 040252
  }
LocReturn 040228:
  PushStack call_result;
  TraceOperation 040234 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 040235:
  TraceOperation 040235 (Loadw (Var (Local 1)) (Con 1) (Local 3));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),2)];
  Let b3 = M[Offset(Offset(Address(local1_1),2),1)];
  SetLocal 3 MakeHiLo(b2,b3);
  TraceOperation 040239 (Jz (Var (Local 3)) (Branch T (Dloc 040247)));
  GetLocal 3 local3_4;
  if (IsZero(local3_4)) {
    Jump: 040247
  } else {
    TraceOperation 040242 (Print_paddr (Var (Local 3)));
    GetLocal 3 local3_5;
    GamePrint GetText(PackedAddress Z3(local3_5));
    TraceOperation 040244 New_line;
    GamePrint "\n";
    TraceOperation 040245 (Ret (Con 2));
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 2;
    JumpIndirect: (return) return_address_6
  }
LocOp 040247:
  TraceOperation 040247 (Print_paddr (Var (Global 55)));
  Let b1 = M[008018];
  Let b2 = M[008019];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 040249 New_line;
  GamePrint "\n";
  TraceOperation 040250 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 2;
  JumpIndirect: (return) return_address_3
LocOp 040252:
  TraceOperation 040252 (Je [Var (Local 2),Con 5] (Branch F Dfalse));
  GetLocal 2 local2_1;
  if (Equal(local2_1,5)) {
    TraceOperation 040256 (Loadb (Var (Local 1)) (Con 1) (Local 4));
    GetLocal 1 local1_2;
    Let b3 = M[Offset(Address(local1_2),1)];
    SetLocal 4 Widen(b3);
    TraceOperation 040260 (Test_attr (Var (Local 4)) (Con 23) (Branch F (Dloc 040275)));
    GetLocal 4 local4_4;
    Let b5 = M[Offset(Offset(000751,Mul(local4_4,9)),2)];
    if (TestBit(b5,0)) {
      TraceOperation 040264 (Loadb (Var (Local 1)) (Con 0) Sp);
      GetLocal 1 local1_6;
      Let b7 = M[Offset(Address(local1_6),0)];
      PushStack Widen(b7);
      TraceOperation 040268 (Call (Floc 042574) [Var Sp] Sp);
      PopStack popped8;
      PushFrame;
      PushReturnAddress 040268;
      SetLocal 1 popped8;
      MakeRoutineFrame 2;
      SetLocal 2 1;
      Jump: 042579
    } else {
      Jump: 040275
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
LocReturn 040268:
  PushStack call_result;
  TraceOperation 040274 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 040275:
  TraceOperation 040275 (Loadw (Var (Local 1)) (Con 1) (Local 3));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Address(local1_1),2)];
  Let b3 = M[Offset(Offset(Address(local1_1),2),1)];
  SetLocal 3 MakeHiLo(b2,b3);
  TraceOperation 040279 (Jz (Var (Local 3)) (Branch T (Dloc 040290)));
  GetLocal 3 local3_4;
  if (IsZero(local3_4)) {
    Jump: 040290
  } else {
    TraceOperation 040282 (Print_paddr (Var (Local 3)));
    GetLocal 3 local3_5;
    GamePrint GetText(PackedAddress Z3(local3_5));
    TraceOperation 040284 New_line;
    GamePrint "\n";
    TraceOperation 040285 (Store (Con 207) (Var (Local 4)));
    GetLocal 4 local4_6;
    SetByte 008290 HiByte(local4_6);
    SetByte 008291 LoByte(local4_6);
    TraceOperation 040288 (Ret (Con 2));
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 2;
    JumpIndirect: (return) return_address_7
  }
LocOp 040290:
  TraceOperation 040290 (Print "The ");
  GamePrint "The ";
  TraceOperation 040293 (Print_obj (Var (Local 4)));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Offset(000751,Mul(local4_1,9)),7)];
  Let b3 = M[Offset(Offset(Offset(000751,Mul(local4_1,9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 040295 (Print " is closed.");
  GamePrint " is closed.";
  TraceOperation 040302 New_line;
  GamePrint "\n";
  TraceOperation 040303 (Store (Con 207) (Var (Local 4)));
  GetLocal 4 local4_6;
  SetByte 008290 HiByte(local4_6);
  SetByte 008291 LoByte(local4_6);
  TraceOperation 040306 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 2;
  JumpIndirect: (return) return_address_7
LocOp 040308:
  TraceOperation 040308 (Je [Var (Global 201),Con 8,Con 26] (Branch F (Dloc 040321)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),26))) {
    TraceOperation 040314 (Call (Floc 040326) [] Sp);
    PushFrame;
    PushReturnAddress 040314;
    MakeRoutineFrame 0;
    Jump: 040327
  } else {
    Jump: 040321
  }
LocReturn 040314:
  PushStack call_result;
  TraceOperation 040319 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
LocOp 040321:
  TraceOperation 040321 (Print_paddr (Var (Global 55)));
  Let b1 = M[008018];
  Let b2 = M[008019];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 040323 New_line;
  GamePrint "\n";
  TraceOperation 040324 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 2;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 040326:
  MakeRoutineFrame 0;
  Jump: 040327
LocOp 040327:
  TraceOperation 040327 (Store (Con 229) (Con 16));
  SetByte 008334 0;
  SetByte 008335 16;
  TraceOperation 040330 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame;
  PushReturnAddress 040330;
  SetLocal 1 -14349;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 040330:
  PushStack call_result;
  TraceOperation 040338 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 040343 (Print_ret "Did you have any particular direction in mind?");
  GamePrint "Did you have any particular direction in mind?\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 040372:
  MakeRoutineFrame 0;
  Jump: 040373
LocOp 040373:
  TraceOperation 040373 (Jin (Var (Global 201)) (Var (Global 0)) (Branch T (Dloc 040387)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    Jump: 040387
  } else {
    TraceOperation 040377 (Call (Floc 043522) [Var (Global 201),Var (Global 0)] Sp);
    Let b6 = M[008310];
    Let b7 = M[008311];
    Let b8 = M[007908];
    Let b9 = M[007909];
    PushFrame;
    PushReturnAddress 040377;
    SetLocal 1 MakeHiLo(b6,b7);
    SetLocal 2 MakeHiLo(b8,b9);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 043529
  }
LocReturn 040377:
  PushStack call_result;
  TraceOperation 040384 (Jz (Var Sp) (Branch T (Dloc 040428)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 040428
  } else {
    Jump: 040387
  }
LocOp 040387:
  TraceOperation 040387 (Je [Var (Global 201),Con 70,Con 194] (Branch F (Dloc 040401)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(Equal(MakeHiLo(b1,b2),70),Equal(MakeHiLo(b1,b2),194))) {
    TraceOperation 040393 (Print "She");
    GamePrint "She";
    TraceOperation 040398 (Jump 040421);
    Jump: 040421
  } else {
    Jump: 040401
  }
LocOp 040401:
  TraceOperation 040401 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 040418)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 040405 (Je [Var (Global 201),Con 95,Con 216,Con 209] (Branch T (Dloc 040418)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),95),Equal(MakeHiLo(b4,b5),216)),Equal(MakeHiLo(b4,b5),209))) {
      Jump: 040418
    } else {
      TraceOperation 040412 (Print "He");
      GamePrint "He";
      TraceOperation 040415 (Jump 040421);
      Jump: 040421
    }
  } else {
    Jump: 040418
  }
LocOp 040418:
  TraceOperation 040418 (Print "It");
  GamePrint "It";
  Jump: 040421
LocOp 040421:
  TraceOperation 040421 (Print_ret "'s here!");
  GamePrint "'s here!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 040428:
  TraceOperation 040428 (Call (Floc 040326) [] Sp);
  PushFrame;
  PushReturnAddress 040428;
  MakeRoutineFrame 0;
  Jump: 040327
LocReturn 040428:
  PushStack call_result;
  TraceOperation 040433 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 040434:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 3;
  }
  Jump: 040437
LocOp 040437:
  TraceOperation 040437 (Print "Time passes...");
  GamePrint "Time passes...";
  TraceOperation 040450 New_line;
  GamePrint "\n";
  Jump: 040451
LocOp 040451:
  TraceOperation 040451 (Dec_chk (Con 1) (Con 0) (Branch F (Dloc 040458)));
  GetLocal 1 local1_1;
  if (LessThanEqual(local1_1,0)) {
    SetLocal 1 Sub(local1_1,1);
    TraceOperation 040455 (Jump 040467);
    Jump: 040467
  } else {
    SetLocal 1 Sub(local1_1,1);
    Jump: 040458
  }
LocOp 040458:
  TraceOperation 040458 (Call (Floc 022394) [] Sp);
  PushFrame;
  PushReturnAddress 040458;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  SetLocal 1 0;
  Jump: 022403
LocReturn 040458:
  PushStack call_result;
  TraceOperation 040463 (Jz (Var Sp) (Branch T (Dloc 040451)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 040451
  } else {
    Jump: 040467
  }
LocOp 040467:
  TraceOperation 040467 (Store (Con 241) (Con 1));
  SetByte 008358 0;
  SetByte 008359 1;
  TraceOperation 040470 (Ret (Var (Global 225)));
  Let b1 = M[008358];
  Let b2 = M[008359];
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult MakeHiLo(b1,b2);
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 040472:
  MakeRoutineFrame 0;
  Jump: 040473
LocOp 040473:
  TraceOperation 040473 (Print_ret "You may be waiting quite a while.");
  GamePrint "You may be waiting quite a while.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040496:
  MakeRoutineFrame 0;
  Jump: 040497
LocOp 040497:
  TraceOperation 040497 (Print_ret "It doesn't need watering.");
  GamePrint "It doesn't need watering.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040512:
  MakeRoutineFrame 0;
  Jump: 040513
LocOp 040513:
  TraceOperation 040513 (Call (Floc 030950) [] Sp);
  PushFrame;
  PushReturnAddress 040513;
  MakeRoutineFrame 0;
  Jump: 030951
LocReturn 040513:
  PushStack call_result;
  TraceOperation 040518 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 040520:
  MakeRoutineFrame 0;
  Jump: 040521
LocOp 040521:
  TraceOperation 040521 (Jz (Var (Global 201)) (Branch F (Dloc 040530)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 040524 (Call (Floc 037786) [] Sp);
    PushFrame;
    PushReturnAddress 040524;
    MakeRoutineFrame 0;
    Jump: 037787
  } else {
    Jump: 040530
  }
LocReturn 040524:
  PushStack call_result;
  TraceOperation 040529 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 040530:
  TraceOperation 040530 (Print "Despite your friendly nature,");
  GamePrint "Despite your friendly nature,";
  TraceOperation 040551 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 040551;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 040551:
  PushStack call_result;
  TraceOperation 040558 (Print_ret " isn't likely to respond.");
  GamePrint " isn't likely to respond.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040574:
  MakeRoutineFrame 0;
  Jump: 040575
LocOp 040575:
  TraceOperation 040575 (Test_attr (Var (Global 201)) (Con 10) (Branch T (Dloc 040596)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,5)) {
    Jump: 040596
  } else {
    TraceOperation 040579 (Print "You can't wear");
    GamePrint "You can't wear";
    TraceOperation 040586 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 040586;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  }
LocReturn 040586:
  PushStack call_result;
  TraceOperation 040593 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 040596:
  TraceOperation 040596 (Test_attr (Var (Global 201)) (Con 9) (Branch F (Dloc 040619)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,6)) {
    TraceOperation 040600 (Print "You're already wearing");
    GamePrint "You're already wearing";
    TraceOperation 040609 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 040609;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 040619
  }
LocReturn 040609:
  PushStack call_result;
  TraceOperation 040616 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 040619:
  TraceOperation 040619 (Insert_obj (Var (Global 201)) (Con 31));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),MakeHiLo(b1,b2))) {
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),MakeHiLo(b1,b2))) {
          Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 31;
  Let b10 = M[001036];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b10));
  SetByte 001036 b2;
  TraceOperation 040622 (Set_attr (Var (Global 201)) (Con 9));
  Let b11 = M[008310];
  Let b12 = M[008311];
  Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),1)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),1) SetBit(b13,6);
  TraceOperation 040625 (Print "You are now wearing");
  GamePrint "You are now wearing";
  TraceOperation 040636 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b14 = M[008310];
  Let b15 = M[008311];
  PushFrame;
  PushReturnAddress 040636;
  SetLocal 1 MakeHiLo(b14,b15);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 040636:
  PushStack call_result;
  TraceOperation 040643 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040646:
  MakeRoutineFrame 0;
  Jump: 040647
LocOp 040647:
  TraceOperation 040647 (Print_ret "Good question.");
  GamePrint "Good question.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040660:
  MakeRoutineFrame 0;
  Jump: 040661
LocOp 040661:
  TraceOperation 040661 (Print_ret "Well, what about it?");
  GamePrint "Well, what about it?\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040672:
  MakeRoutineFrame 0;
  Jump: 040673
LocOp 040673:
  TraceOperation 040673 (Call (Floc 039060) [] Sp);
  PushFrame;
  PushReturnAddress 040673;
  MakeRoutineFrame 0;
  Jump: 039061
LocReturn 040673:
  PushStack call_result;
  TraceOperation 040678 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 040680:
  MakeRoutineFrame 0;
  Jump: 040681
LocOp 040681:
  TraceOperation 040681 (Call (Floc 032168) [Con 1] Sp);
  PushFrame;
  PushReturnAddress 040681;
  SetLocal 1 1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 032173
LocReturn 040681:
  PushStack call_result;
  TraceOperation 040687 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 040688:
  MakeRoutineFrame 0;
  Jump: 040689
LocOp 040689:
  TraceOperation 040689 (Test_attr (Var (Global 201)) (Con 26) (Branch F (Dloc 040701)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,5)) {
    TraceOperation 040693 (Call (Floc 022042) [Con 174,Var (Global 201)] Sp);
    Let b4 = M[008310];
    Let b5 = M[008311];
    PushFrame;
    PushReturnAddress 040693;
    SetLocal 1 174;
    SetLocal 2 MakeHiLo(b4,b5);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 040701
  }
LocReturn 040693:
  PushStack call_result;
  TraceOperation 040700 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 040701:
  TraceOperation 040701 (Print_ret "That's not a person!");
  GamePrint "That's not a person!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040716:
  MakeRoutineFrame 0;
  Jump: 040717
LocOp 040717:
  TraceOperation 040717 (Print_ret "Why not?");
  GamePrint "Why not?\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040726:
  MakeRoutineFrame 0;
  Jump: 040727
LocOp 040727:
  TraceOperation 040727 (Print_ret "You begin to get a sore throat.");
  GamePrint "You begin to get a sore throat.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040748:
  MakeRoutineFrame 0;
  Jump: 040749
LocOp 040749:
  TraceOperation 040749 (Je [Var (Global 213),Con 1] (Branch F (Dloc 040760)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 040753 (Call (Floc 043620) [Con 16] Sp);
    PushFrame;
    PushReturnAddress 040753;
    SetLocal 1 16;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    Jump: 040760
  }
LocReturn 040753:
  PushStack call_result;
  TraceOperation 040759 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 040760:
  TraceOperation 040760 (Je [Var (Global 213),Con 2] (Branch T Dfalse));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),2)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 040764 (Je [Var (Global 213),Con 3] (Branch F (Dloc 040779)));
    Let b4 = M[008334];
    Let b5 = M[008335];
    if (Equal(MakeHiLo(b4,b5),3)) {
      TraceOperation 040768 (Print_ret "Well, tough.");
      GamePrint "Well, tough.\n";
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    } else {
      Jump: 040779
    }
  }
LocOp 040779:
  TraceOperation 040779 (Je [Var (Global 213),Con 4] (Branch F (Dloc 040791)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 040783 (Call (Floc 022042) [Con 124,Var (Global 96)] Sp);
    Let b3 = M[008100];
    Let b4 = M[008101];
    PushFrame;
    PushReturnAddress 040783;
    SetLocal 1 124;
    SetLocal 2 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 040791
  }
LocReturn 040783:
  PushStack call_result;
  TraceOperation 040790 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 040791:
  TraceOperation 040791 (Je [Var (Global 213),Con 5] (Branch F (Dloc 040804)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 040795 (Print_ret "So do I.");
    GamePrint "So do I.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 040804
  }
LocOp 040804:
  TraceOperation 040804 (Je [Var (Global 213),Con 6,Con 8,Con 11] (Branch T (Dloc 040818)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),6),Equal(MakeHiLo(b1,b2),8)),Equal(MakeHiLo(b1,b2),11))) {
    Jump: 040818
  } else {
    TraceOperation 040811 (Je [Var (Global 213),Con 13,Con 14,Con 15] (Branch F (Dloc 040843)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),13),Equal(MakeHiLo(b3,b4),14)),Equal(MakeHiLo(b3,b4),15))) {
      Jump: 040818
    } else {
      Jump: 040843
    }
  }
LocOp 040818:
  TraceOperation 040818 (Print_ret "That was just a rhetorical question.");
  GamePrint "That was just a rhetorical question.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 040843:
  TraceOperation 040843 (Je [Var (Global 213),Con 7,Con 9] (Branch F (Dloc 040862)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),7),Equal(MakeHiLo(b1,b2),9))) {
    TraceOperation 040849 (Print_ret "Well, good for you!");
    GamePrint "Well, good for you!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 040862
  }
LocOp 040862:
  TraceOperation 040862 (Je [Var (Global 213),Con 10] (Branch F (Dloc 040874)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 040866 (Call (Floc 022042) [Con 57,Con 142] Sp);
    PushFrame;
    PushReturnAddress 040866;
    SetLocal 1 57;
    SetLocal 2 142;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 040874
  }
LocReturn 040866:
  PushStack call_result;
  TraceOperation 040873 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 040874:
  TraceOperation 040874 (Je [Var (Global 213),Con 12] (Branch F (Dloc 040924)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),12)) {
    TraceOperation 040878 (Call (Floc 022320) [Con 26048,Con 2] Sp);
    PushFrame;
    PushReturnAddress 040878;
    SetLocal 1 26048;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 040924
  }
LocReturn 040878:
  PushStack call_result;
  TraceOperation 040886 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 040891 (Print_ret "\"Well, let's see the malfunctioning equipment.\"");
  GamePrint "\"Well, let's see the malfunctioning equipment.\"\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 040924:
  TraceOperation 040924 (Je [Var (Global 213),Con 16] (Branch F (Dloc 040939)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (Equal(MakeHiLo(b1,b2),16)) {
    TraceOperation 040928 (Print_ret "Then type it.");
    GamePrint "Then type it.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 040939
  }
LocOp 040939:
  TraceOperation 040939 (Je [Var (Global 213),Con 18,Con 19] (Branch F (Dloc 040974)));
  Let b1 = M[008334];
  Let b2 = M[008335];
  if (LogOr(Equal(MakeHiLo(b1,b2),18),Equal(MakeHiLo(b1,b2),19))) {
    TraceOperation 040945 (Print_ret "\"Well, leave me alone then! I'm busy!\"");
    GamePrint "\"Well, leave me alone then! I'm busy!\"\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 040974
  }
LocOp 040974:
  TraceOperation 040974 (Print_ret "You sound rather positive.");
  GamePrint "You sound rather positive.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 040994:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 1;
        }
      }
    }
  }
  Jump: 041003
LocOp 041003:
  TraceOperation 041003 (Test_attr (Var (Global 201)) (Con 22) (Branch F (Dloc 041017)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,1)) {
    TraceOperation 041007 (Jz (Var (Local 1)) (Branch T (Dloc 041015)));
    GetLocal 1 local1_4;
    if (IsZero(local1_4)) {
      Jump: 041015
    } else {
      TraceOperation 041010 (Call (Floc 057842) [] Sp);
      PushFrame;
      PushReturnAddress 041010;
      MakeRoutineFrame 0;
      Jump: 057843
    }
  } else {
    Jump: 041017
  }
LocReturn 041010:
  PushStack call_result;
  Jump: 041015
LocOp 041015:
  TraceOperation 041015 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
LocOp 041017:
  TraceOperation 041017 (Test_attr (Var (Global 201)) (Con 25) (Branch T (Dloc 041031)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,6)) {
    Jump: 041031
  } else {
    TraceOperation 041021 (Jz (Var (Local 1)) (Branch T (Dloc 041029)));
    GetLocal 1 local1_4;
    if (IsZero(local1_4)) {
      Jump: 041029
    } else {
      TraceOperation 041024 (Call (Floc 030950) [] Sp);
      PushFrame;
      PushReturnAddress 041024;
      MakeRoutineFrame 0;
      Jump: 030951
    }
  }
LocReturn 041024:
  PushStack call_result;
  Jump: 041029
LocOp 041029:
  TraceOperation 041029 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
LocOp 041031:
  TraceOperation 041031 (Je [Var (Global 120),Con 194] (Branch F (Dloc 041105)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),194)) {
    TraceOperation 041036 (Call (Floc 041458) [Con 31] Sp);
    PushFrame;
    PushReturnAddress 041036;
    SetLocal 1 31;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 041465
  } else {
    Jump: 041105
  }
LocReturn 041036:
  PushStack call_result;
  TraceOperation 041042 (Jg (Var Sp) (Con 2) (Branch F (Dloc 041105)));
  PopStack popped1;
  if (GreaterThan(popped1,2)) {
    TraceOperation 041046 (Jz (Var (Local 1)) (Branch T (Dloc 041103)));
    GetLocal 1 local1_2;
    if (IsZero(local1_2)) {
      Jump: 041103
    } else {
      TraceOperation 041049 (Print "As is the case so often at parties, you find that you are holding too much and can't pick up anything else.");
      GamePrint "As is the case so often at parties, you find that you are holding too much and can't pick up anything else.";
      TraceOperation 041102 New_line;
      GamePrint "\n";
      Jump: 041103
    }
  } else {
    Jump: 041105
  }
LocOp 041103:
  TraceOperation 041103 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
LocOp 041105:
  TraceOperation 041105 (Get_parent (Var (Global 201)) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 041108 (Jin (Var Sp) (Var (Global 195)) (Branch T (Dloc 041201)));
  PopStack popped4;
  Let b5 = M[008298];
  Let b6 = M[008299];
  Let b7 = M[Offset(Offset(000751,Mul(popped4,9)),4)];
  if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
    Jump: 041201
  } else {
    TraceOperation 041113 (Call (Floc 041486) [Var (Global 201)] (Local 4));
    Let b8 = M[008310];
    Let b9 = M[008311];
    PushFrame;
    PushReturnAddress 041113;
    SetLocal 1 MakeHiLo(b8,b9);
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 041493
  }
LocReturn 041113:
  SetLocal 4 call_result;
  TraceOperation 041119 (Call (Floc 041486) [Var (Global 195)] Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  PushFrame;
  PushReturnAddress 041119;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 041493
LocReturn 041119:
  PushStack call_result;
  TraceOperation 041125 (Add (Var (Local 4)) (Var Sp) Sp);
  GetLocal 4 local4_1;
  PopStack popped2;
  PushStack Add(local4_1,popped2);
  TraceOperation 041129 (Jg (Var Sp) (Con 100) (Branch F (Dloc 041156)));
  PopStack popped3;
  if (GreaterThan(popped3,100)) {
    TraceOperation 041133 (Jz (Var (Local 1)) (Branch T (Dloc 041154)));
    GetLocal 1 local1_4;
    if (IsZero(local1_4)) {
      Jump: 041154
    } else {
      TraceOperation 041136 (Print "Your load is too heavy.");
      GamePrint "Your load is too heavy.";
      TraceOperation 041153 New_line;
      GamePrint "\n";
      Jump: 041154
    }
  } else {
    Jump: 041156
  }
LocOp 041154:
  TraceOperation 041154 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
LocOp 041156:
  TraceOperation 041156 (Call (Floc 041458) [Var (Global 195)] (Local 2));
  Let b1 = M[008298];
  Let b2 = M[008299];
  PushFrame;
  PushReturnAddress 041156;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 041465
LocReturn 041156:
  SetLocal 2 call_result;
  TraceOperation 041162 (Jg (Var (Local 2)) (Con 7) (Branch F (Dloc 041201)));
  GetLocal 2 local2_1;
  if (GreaterThan(local2_1,7)) {
    TraceOperation 041166 (Mul (Var (Local 2)) (Con 8) (Local 4));
    GetLocal 2 local2_2;
    SetLocal 4 Mul(local2_2,8);
    TraceOperation 041170 (Random (Con 100) Sp);
    LetRandom random3 100;
    PushStack random3;
    TraceOperation 041174 (Jl (Var (Local 4)) (Var Sp) (Branch T (Dloc 041201)));
    GetLocal 4 local4_4;
    PopStack popped5;
    if (LessThan(local4_4,popped5)) {
      Jump: 041201
    } else {
      TraceOperation 041178 (Jz (Var (Local 1)) (Branch T (Dloc 041199)));
      GetLocal 1 local1_6;
      if (IsZero(local1_6)) {
        Jump: 041199
      } else {
        TraceOperation 041181 (Print "You're holding too much already.");
        GamePrint "You're holding too much already.";
        TraceOperation 041198 New_line;
        GamePrint "\n";
        Jump: 041199
      }
    }
  } else {
    Jump: 041201
  }
LocOp 041199:
  TraceOperation 041199 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
LocOp 041201:
  TraceOperation 041201 (Insert_obj (Var (Global 201)) (Con 31));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),MakeHiLo(b1,b2))) {
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),MakeHiLo(b1,b2))) {
          Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 31;
  Let b10 = M[001036];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b10));
  SetByte 001036 b2;
  TraceOperation 041204 (Set_attr (Var (Global 201)) (Con 5));
  Let b11 = M[008310];
  Let b12 = M[008311];
  Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),0)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),0) SetBit(b13,2);
  TraceOperation 041207 Rtrue;
  PopFrame;
  PopReturnAddress return_address_14;
  SetResult 1;
  JumpIndirect: (return) return_address_14
--------------------------------------------------
LocRoutine 041208:
  MakeRoutineFrame 0;
  Jump: 041209
LocOp 041209:
  TraceOperation 041209 (Je [Var (Global 201),Con 170] (Branch T Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),170)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 041213 (Je [Var (Global 201),Con 8] (Branch F (Dloc 041220)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (Equal(MakeHiLo(b4,b5),8)) {
      TraceOperation 041217 (Jz (Var (Global 66)) (Branch F Dfalse));
      Let b6 = M[008040];
      Let b7 = M[008041];
      if (IsZero(MakeHiLo(b6,b7))) {
        Jump: 041220
      } else {
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 0;
        JumpIndirect: (return) return_address_8
      }
    } else {
      Jump: 041220
    }
  }
LocOp 041220:
  TraceOperation 041220 (Je [Var (Global 201),Con 184,Con 185,Con 179] (Branch F (Dloc 041233)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),184),Equal(MakeHiLo(b1,b2),185)),Equal(MakeHiLo(b1,b2),179))) {
    TraceOperation 041227 (Je [Var (Global 203),Con 55,Con 46] (Branch T Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),55),Equal(MakeHiLo(b3,b4),46))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 041233
    }
  } else {
    Jump: 041233
  }
LocOp 041233:
  TraceOperation 041233 (Je [Var (Global 203),Con 66] (Branch F (Dloc 041241)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 041237 (Je [Var (Global 201),Con 43] (Branch T Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),43)) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 041241
    }
  } else {
    Jump: 041241
  }
LocOp 041241:
  TraceOperation 041241 (Je [Var (Global 201),Con 157] (Branch F (Dloc 041251)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),157)) {
    TraceOperation 041245 (Call (Floc 031422) [] Sp);
    PushFrame;
    PushReturnAddress 041245;
    MakeRoutineFrame 0;
    Jump: 031423
  } else {
    Jump: 041251
  }
LocReturn 041245:
  PushStack call_result;
  TraceOperation 041250 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 041251:
  TraceOperation 041251 (Je [Var (Global 201),Con 36,Con 32,Con 33] (Branch T (Dloc 041262)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),36),Equal(MakeHiLo(b1,b2),32)),Equal(MakeHiLo(b1,b2),33))) {
    Jump: 041262
  } else {
    TraceOperation 041258 (Je [Var (Global 201),Con 34] (Branch F (Dloc 041289)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),34)) {
      Jump: 041262
    } else {
      Jump: 041289
    }
  }
LocOp 041262:
  TraceOperation 041262 (Je [Var (Global 203),Con 66,Con 154,Con 53] (Branch F (Dloc 041275)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),66),Equal(MakeHiLo(b1,b2),154)),Equal(MakeHiLo(b1,b2),53))) {
    TraceOperation 041269 (Call (Floc 031360) [] Sp);
    PushFrame;
    PushReturnAddress 041269;
    MakeRoutineFrame 0;
    Jump: 031361
  } else {
    Jump: 041275
  }
LocReturn 041269:
  PushStack call_result;
  TraceOperation 041274 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 041275:
  TraceOperation 041275 (Je [Var (Global 203),Con 55] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 041279 (Je [Var (Global 202),Con 141] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),141)) {
      TraceOperation 041283 (Call (Floc 031360) [] Sp);
      PushFrame;
      PushReturnAddress 041283;
      MakeRoutineFrame 0;
      Jump: 031361
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 041283:
  PushStack call_result;
  TraceOperation 041288 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 041289:
  TraceOperation 041289 (Je [Var (Global 201),Con 186] (Branch F (Dloc 041304)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),186)) {
    TraceOperation 041293 (Je [Var (Global 202),Con 199,Con 180,Con 197] (Branch T Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),199),Equal(MakeHiLo(b3,b4),180)),Equal(MakeHiLo(b3,b4),197))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 041300 (Je [Var (Global 202),Con 182] (Branch T Dfalse));
      Let b6 = M[008312];
      Let b7 = M[008313];
      if (Equal(MakeHiLo(b6,b7),182)) {
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 0;
        JumpIndirect: (return) return_address_8
      } else {
        Jump: 041304
      }
    }
  } else {
    Jump: 041304
  }
LocOp 041304:
  TraceOperation 041304 (Call (Floc 043468) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 041304;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 041304:
  PushStack call_result;
  TraceOperation 041310 (Jz (Var Sp) (Branch F (Dloc 041352)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 041313 (Print "That's easy for you to say since you don't even have");
    GamePrint "That's easy for you to say since you don't even have";
    TraceOperation 041342 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
    Let b2 = M[008310];
    Let b3 = M[008311];
    PushFrame;
    PushReturnAddress 041342;
    SetLocal 1 MakeHiLo(b2,b3);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 041352
  }
LocReturn 041342:
  PushStack call_result;
  TraceOperation 041349 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 041352:
  TraceOperation 041352 (Je [Var (Global 201),Con 212] (Branch F (Dloc 041364)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),212)) {
    TraceOperation 041356 (Call (Floc 022042) [Con 53,Con 214] Sp);
    PushFrame;
    PushReturnAddress 041356;
    SetLocal 1 53;
    SetLocal 2 214;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 041364
  }
LocReturn 041356:
  PushStack call_result;
  TraceOperation 041363 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 041364:
  TraceOperation 041364 (Test_attr (Var (Global 201)) (Con 22) (Branch F (Dloc 041374)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),2)];
  if (TestBit(b3,1)) {
    TraceOperation 041368 (Call (Floc 057842) [] Sp);
    PushFrame;
    PushReturnAddress 041368;
    MakeRoutineFrame 0;
    Jump: 057843
  } else {
    Jump: 041374
  }
LocReturn 041368:
  PushStack call_result;
  TraceOperation 041373 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 041374:
  TraceOperation 041374 (Jin (Var (Global 201)) (Var (Global 195)) (Branch T (Dloc 041424)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008298];
  Let b4 = M[008299];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
    Jump: 041424
  } else {
    TraceOperation 041378 (Get_parent (Var (Global 201)) Sp);
    Let b6 = M[008310];
    Let b7 = M[008311];
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),4)];
    PushStack Widen(b8);
    TraceOperation 041381 (Test_attr (Var Sp) (Con 24) (Branch F (Dloc 041424)));
    PopStack popped9;
    Let b10 = M[Offset(Offset(000751,Mul(popped9,9)),3)];
    if (TestBit(b10,7)) {
      TraceOperation 041385 (Get_parent (Var (Global 201)) Sp);
      Let b11 = M[008310];
      Let b12 = M[008311];
      Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),4)];
      PushStack Widen(b13);
      TraceOperation 041388 (Test_attr (Var Sp) (Con 23) (Branch T (Dloc 041424)));
      PopStack popped14;
      Let b15 = M[Offset(Offset(000751,Mul(popped14,9)),2)];
      if (TestBit(b15,0)) {
        Jump: 041424
      } else {
        TraceOperation 041392 (Print "Impossible because");
        GamePrint "Impossible because";
        TraceOperation 041407 (Get_parent (Var (Global 201)) Sp);
        Let b16 = M[008310];
        Let b17 = M[008311];
        Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b16,b17),9)),4)];
        PushStack Widen(b18);
        TraceOperation 041410 (Call (Floc 043738) [Var Sp,Con 1] Sp);
        PopStack popped19;
        PushFrame;
        PushReturnAddress 041410;
        SetLocal 1 popped19;
        SetLocal 2 1;
        MakeRoutineFrame 2;
        Jump: 043743
      }
    } else {
      Jump: 041424
    }
  }
LocReturn 041410:
  PushStack call_result;
  TraceOperation 041417 (Print_ret " is closed.");
  GamePrint " is closed.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 041424:
  TraceOperation 041424 (Je [Var (Global 201),Con 111] (Branch F (Dloc 041432)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),111)) {
    TraceOperation 041428 (Je [Var (Global 203),Con 134] (Branch F (Dloc 041436)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),134)) {
      Jump: 041432
    } else {
      Jump: 041436
    }
  } else {
    Jump: 041432
  }
LocOp 041432:
  TraceOperation 041432 (Test_attr (Var (Global 201)) (Con 9) (Branch F Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),1)];
  if (TestBit(b3,6)) {
    Jump: 041436
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 041436:
  TraceOperation 041436 (Print_ret "You'll have to remove it first.");
  GamePrint "You'll have to remove it first.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 041458:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 041465
LocOp 041465:
  TraceOperation 041465 (Get_child (Var (Local 1)) (Local 3) (Branch F (Dloc 041484)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),6)];
  SetLocal 3 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 041484
  } else {
    Jump: 041469
  }
LocOp 041469:
  TraceOperation 041469 (Test_attr (Var (Local 3)) (Con 9) (Branch T (Dloc 041479)));
  GetLocal 3 local3_1;
  Let b2 = M[Offset(Offset(000751,Mul(local3_1,9)),1)];
  if (TestBit(b2,6)) {
    Jump: 041479
  } else {
    TraceOperation 041473 (Je [Var (Local 3),Con 111] (Branch T (Dloc 041479)));
    GetLocal 3 local3_3;
    if (Equal(local3_3,111)) {
      Jump: 041479
    } else {
      TraceOperation 041477 (Inc (Con 2));
      GetLocal 2 local2_4;
      SetLocal 2 Add(local2_4,1);
      Jump: 041479
    }
  }
LocOp 041479:
  TraceOperation 041479 (Get_sibling (Var (Local 3)) (Local 3) (Branch T (Dloc 041469)));
  GetLocal 3 local3_1;
  Let b2 = M[Offset(Offset(000751,Mul(local3_1,9)),5)];
  SetLocal 3 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 041484
  } else {
    Jump: 041469
  }
LocOp 041484:
  TraceOperation 041484 (Ret (Var (Local 2)));
  GetLocal 2 local2_1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult local2_1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 041486:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 041493
LocOp 041493:
  TraceOperation 041493 (Get_child (Var (Local 1)) (Local 2) (Branch F (Dloc 041555)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),6)];
  SetLocal 2 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 041555
  } else {
    Jump: 041498
  }
LocOp 041498:
  TraceOperation 041498 (Je [Var (Local 1),Var (Global 235)] (Branch F (Dloc 041511)));
  GetLocal 1 local1_1;
  Let b2 = M[008378];
  Let b3 = M[008379];
  if (Equal(local1_1,MakeHiLo(b2,b3))) {
    TraceOperation 041502 (Test_attr (Var (Local 2)) (Con 9) (Branch F (Dloc 041511)));
    GetLocal 2 local2_4;
    Let b5 = M[Offset(Offset(000751,Mul(local2_4,9)),1)];
    if (TestBit(b5,6)) {
      TraceOperation 041506 (Inc (Con 3));
      GetLocal 3 local3_6;
      SetLocal 3 Add(local3_6,1);
      TraceOperation 041508 (Jump 041550);
      Jump: 041550
    } else {
      Jump: 041511
    }
  } else {
    Jump: 041511
  }
LocOp 041511:
  TraceOperation 041511 (Je [Var (Local 1),Var (Global 235)] (Branch F (Dloc 041527)));
  GetLocal 1 local1_1;
  Let b2 = M[008378];
  Let b3 = M[008379];
  if (Equal(local1_1,MakeHiLo(b2,b3))) {
    TraceOperation 041515 (Get_parent (Var (Local 2)) Sp);
    GetLocal 2 local2_4;
    Let b5 = M[Offset(Offset(000751,Mul(local2_4,9)),4)];
    PushStack Widen(b5);
    TraceOperation 041518 (Test_attr (Var Sp) (Con 9) (Branch F (Dloc 041527)));
    PopStack popped6;
    Let b7 = M[Offset(Offset(000751,Mul(popped6,9)),1)];
    if (TestBit(b7,6)) {
      TraceOperation 041522 (Inc (Con 3));
      GetLocal 3 local3_8;
      SetLocal 3 Add(local3_8,1);
      TraceOperation 041524 (Jump 041550);
      Jump: 041550
    } else {
      Jump: 041527
    }
  } else {
    Jump: 041527
  }
LocOp 041527:
  TraceOperation 041527 (Je [Var (Local 1),Var (Global 235)] (Branch F (Dloc 041540)));
  GetLocal 1 local1_1;
  Let b2 = M[008378];
  Let b3 = M[008379];
  if (Equal(local1_1,MakeHiLo(b2,b3))) {
    TraceOperation 041531 (Je [Var (Local 2),Con 111] (Branch F (Dloc 041540)));
    GetLocal 2 local2_4;
    if (Equal(local2_4,111)) {
      TraceOperation 041535 (Inc (Con 3));
      GetLocal 3 local3_5;
      SetLocal 3 Add(local3_5,1);
      TraceOperation 041537 (Jump 041550);
      Jump: 041550
    } else {
      Jump: 041540
    }
  } else {
    Jump: 041540
  }
LocOp 041540:
  TraceOperation 041540 (Call (Floc 041486) [Var (Local 2)] Sp);
  GetLocal 2 local2_1;
  PushFrame;
  PushReturnAddress 041540;
  SetLocal 1 local2_1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 041493
LocReturn 041540:
  PushStack call_result;
  TraceOperation 041546 (Add (Var (Local 3)) (Var Sp) (Local 3));
  GetLocal 3 local3_1;
  PopStack popped2;
  SetLocal 3 Add(local3_1,popped2);
  Jump: 041550
LocOp 041550:
  TraceOperation 041550 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 041498)));
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Offset(000751,Mul(local2_1,9)),5)];
  SetLocal 2 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 041555
  } else {
    Jump: 041498
  }
LocOp 041555:
  TraceOperation 041555 (Get_prop (Var (Local 1)) (Con 22) Sp);
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),7)];
  Let b3 = M[Offset(Offset(Offset(000751,Mul(local1_1,9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
  Label 6: {
    Let b7 = M[Address(loop_var5)];
    if (IsZeroByte(b7)) {
      Let b8 = M[000740];
      Let b9 = M[000741];
      PushStack MakeHiLo(b8,b9);
    } else {
      if (Equal(22,Widen(BwAnd(b7,31)))) {
        if (Equal(Add(Widen(ShiftR(b7,5)),1),2)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          Let b11 = M[Offset(Offset(Address(loop_var5),1),1)];
          PushStack MakeHiLo(b10,b11);
        } else {
          Let b12 = M[Offset(Address(loop_var5),1)];
          PushStack Widen(b12);
        }
      } else {
        Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),Add(Widen(ShiftR(b7,5)),1)));
        Goto: Label 6
      }
    }
  }
  TraceOperation 041559 (Add (Var (Local 3)) (Var Sp) Sp);
  GetLocal 3 local3_13;
  PopStack popped14;
  PushStack Add(local3_13,popped14);
  TraceOperation 041563 Ret_popped;
  PopStack popped15;
  PopFrame;
  PopReturnAddress return_address_16;
  SetResult popped15;
  JumpIndirect: (return) return_address_16
--------------------------------------------------
LocRoutine 041564:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 041573
LocOp 041573:
  TraceOperation 041573 (Jz (Var (Local 1)) (Branch T (Dloc 041582)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    Jump: 041582
  } else {
    TraceOperation 041576 (Push (Var (Local 1)));
    GetLocal 1 local1_2;
    PushStack local1_2;
    TraceOperation 041579 (Jump 041595);
    Jump: 041595
  }
LocOp 041582:
  TraceOperation 041582 (Je [Var (Global 152),Con 2] (Branch T (Dloc 041592)));
  Let b1 = M[008212];
  Let b2 = M[008213];
  if (Equal(MakeHiLo(b1,b2),2)) {
    Jump: 041592
  } else {
    TraceOperation 041586 (Push (Con 0));
    PushStack 0;
    TraceOperation 041589 (Jump 041595);
    Jump: 041595
  }
LocOp 041592:
  TraceOperation 041592 (Push (Con 1));
  PushStack 1;
  Jump: 041595
LocOp 041595:
  TraceOperation 041595 (Pull (Con 2));
  PopStack popped1;
  SetLocal 2 popped1;
  TraceOperation 041598 (Jz (Var (Global 85)) (Branch F (Dloc 041617)));
  Let b2 = M[008078];
  Let b3 = M[008079];
  if (IsZero(MakeHiLo(b2,b3))) {
    TraceOperation 041601 (Print "It is pitch black.");
    GamePrint "It is pitch black.";
    TraceOperation 041614 New_line;
    GamePrint "\n";
    TraceOperation 041615 (Ret (Con 0));
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 041617
  }
LocOp 041617:
  TraceOperation 041617 (Test_attr (Var (Global 0)) (Con 5) (Branch T (Dloc 041627)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,2)) {
    Jump: 041627
  } else {
    TraceOperation 041621 (Set_attr (Var (Global 0)) (Con 5));
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),0)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),0) SetBit(b6,2);
    TraceOperation 041624 (Store (Con 2) (Con 1));
    SetLocal 2 1;
    Jump: 041627
  }
LocOp 041627:
  TraceOperation 041627 (Jin (Var (Global 0)) (Con 217) (Branch F (Dloc 041644)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (Equal(217,Widen(b3))) {
    TraceOperation 041631 (Print_obj (Var (Global 0)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),7)];
    Let b7 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),7),1)];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
    GamePrint ite_res9;
    TraceOperation 041633 (Get_parent (Var (Global 195)) (Local 4));
    Let b10 = M[008298];
    Let b11 = M[008299];
    Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b10,b11),9)),4)];
    SetLocal 4 Widen(b12);
    TraceOperation 041636 (Jz (Var (Global 86)) (Branch F (Dloc 041644)));
    Let b13 = M[008080];
    Let b14 = M[008081];
    if (IsZero(MakeHiLo(b13,b14))) {
      TraceOperation 041639 (Test_attr (Var (Local 4)) (Con 12) (Branch T (Dloc 041644)));
      GetLocal 4 local4_15;
      Let b16 = M[Offset(Offset(000751,Mul(local4_15,9)),1)];
      if (TestBit(b16,3)) {
        Jump: 041644
      } else {
        TraceOperation 041643 New_line;
        GamePrint "\n";
        Jump: 041644
      }
    } else {
      Jump: 041644
    }
  } else {
    Jump: 041644
  }
LocOp 041644:
  TraceOperation 041644 (Jz (Var (Local 1)) (Branch F (Dloc 041653)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    TraceOperation 041647 (Je [Var (Global 152),Con 1,Con 2] (Branch F Dtrue));
    Let b2 = M[008212];
    Let b3 = M[008213];
    if (LogOr(Equal(MakeHiLo(b2,b3),1),Equal(MakeHiLo(b2,b3),2))) {
      Jump: 041653
    } else {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    }
  } else {
    Jump: 041653
  }
LocOp 041653:
  TraceOperation 041653 (Test_attr (Var (Local 4)) (Con 12) (Branch F (Dloc 041668)));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Offset(000751,Mul(local4_1,9)),1)];
  if (TestBit(b2,3)) {
    TraceOperation 041657 (Print ", in the ");
    GamePrint ", in the ";
    TraceOperation 041662 (Print_obj (Var (Local 4)));
    GetLocal 4 local4_3;
    Let b4 = M[Offset(Offset(000751,Mul(local4_3,9)),7)];
    Let b5 = M[Offset(Offset(Offset(000751,Mul(local4_3,9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 041664 New_line;
    GamePrint "\n";
    TraceOperation 041665 (Jump 041681);
    Jump: 041681
  } else {
    Jump: 041668
  }
LocOp 041668:
  TraceOperation 041668 (Jz (Var (Global 86)) (Branch T (Dloc 041681)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 041681
  } else {
    TraceOperation 041671 (Print ", lying down");
    GamePrint ", lying down";
    TraceOperation 041680 New_line;
    GamePrint "\n";
    Jump: 041681
  }
LocOp 041681:
  TraceOperation 041681 (Jz (Var (Local 2)) (Branch T (Dloc 041696)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    Jump: 041696
  } else {
    TraceOperation 041684 (Get_prop (Var (Global 0)) (Con 29) Sp);
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7)];
    Let b5 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
    Label 8: {
      Let b9 = M[Address(loop_var7)];
      if (IsZeroByte(b9)) {
        Let b10 = M[000754];
        Let b11 = M[000755];
        PushStack MakeHiLo(b10,b11);
      } else {
        if (Equal(29,Widen(BwAnd(b9,31)))) {
          if (Equal(Add(Widen(ShiftR(b9,5)),1),2)) {
            Let b12 = M[Offset(Address(loop_var7),1)];
            Let b13 = M[Offset(Offset(Address(loop_var7),1),1)];
            PushStack MakeHiLo(b12,b13);
          } else {
            Let b14 = M[Offset(Address(loop_var7),1)];
            PushStack Widen(b14);
          }
        } else {
          Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),Add(Widen(ShiftR(b9,5)),1)));
          Goto: Label 8
        }
      }
    }
    TraceOperation 041688 (Call (Fvar Sp) [Con 3] Sp);
    PopStack popped15;
    if (IsZeroAddress(PackedAddress Z3(popped15))) {
      PushStack 0;
      Jump: 041693
    } else {
      PushFrame;
      PushReturnAddress 041688;
      SetLocal 1 3;
      SetNumberActuals 1;
      JumpIndirect: (routine) PackedAddress Z3(popped15)
    }
  }
LocReturn 041688:
  PushStack call_result;
  Jump: 041693
LocOp 041693:
  TraceOperation 041693 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 041696
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 041696:
  TraceOperation 041696 (Jz (Var (Local 2)) (Branch T (Dloc 041712)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    Jump: 041712
  } else {
    TraceOperation 041699 (Get_prop (Var (Global 0)) (Con 28) (Local 3));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7)];
    Let b5 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let loop_var7 = DeAddress(Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1)));
    Label 8: {
      Let b9 = M[Address(loop_var7)];
      if (IsZeroByte(b9)) {
        Let b10 = M[000752];
        Let b11 = M[000753];
        SetLocal 3 MakeHiLo(b10,b11);
      } else {
        if (Equal(28,Widen(BwAnd(b9,31)))) {
          if (Equal(Add(Widen(ShiftR(b9,5)),1),2)) {
            Let b12 = M[Offset(Address(loop_var7),1)];
            Let b13 = M[Offset(Offset(Address(loop_var7),1),1)];
            SetLocal 3 MakeHiLo(b12,b13);
          } else {
            Let b14 = M[Offset(Address(loop_var7),1)];
            SetLocal 3 Widen(b14);
          }
        } else {
          Assign loop_var7 = DeAddress(Offset(Offset(Address(loop_var7),1),Add(Widen(ShiftR(b9,5)),1)));
          Goto: Label 8
        }
      }
    }
    TraceOperation 041703 (Jz (Var (Local 3)) (Branch T (Dloc 041712)));
    GetLocal 3 local3_15;
    if (IsZero(local3_15)) {
      Jump: 041712
    } else {
      TraceOperation 041706 (Print_paddr (Var (Local 3)));
      GetLocal 3 local3_16;
      GamePrint GetText(PackedAddress Z3(local3_16));
      TraceOperation 041708 New_line;
      GamePrint "\n";
      TraceOperation 041709 (Jump 041721);
      Jump: 041721
    }
  }
LocOp 041712:
  TraceOperation 041712 (Get_prop (Var (Global 0)) (Con 29) Sp);
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[000754];
      Let b10 = M[000755];
      PushStack MakeHiLo(b9,b10);
    } else {
      if (Equal(29,Widen(BwAnd(b8,31)))) {
        if (Equal(Add(Widen(ShiftR(b8,5)),1),2)) {
          Let b11 = M[Offset(Address(loop_var6),1)];
          Let b12 = M[Offset(Offset(Address(loop_var6),1),1)];
          PushStack MakeHiLo(b11,b12);
        } else {
          Let b13 = M[Offset(Address(loop_var6),1)];
          PushStack Widen(b13);
        }
      } else {
        Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
        Goto: Label 7
      }
    }
  }
  TraceOperation 041716 (Call (Fvar Sp) [Con 4] Sp);
  PopStack popped14;
  if (IsZeroAddress(PackedAddress Z3(popped14))) {
    PushStack 0;
    Jump: 041721
  } else {
    PushFrame;
    PushReturnAddress 041716;
    SetLocal 1 4;
    SetNumberActuals 1;
    JumpIndirect: (routine) PackedAddress Z3(popped14)
  }
LocReturn 041716:
  PushStack call_result;
  Jump: 041721
LocOp 041721:
  TraceOperation 041721 (Je [Var (Global 0),Var (Local 4)] (Branch T Dtrue));
  Let b1 = M[007908];
  Let b2 = M[007909];
  GetLocal 4 local4_3;
  if (Equal(MakeHiLo(b1,b2),local4_3)) {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    TraceOperation 041725 (Test_attr (Var (Local 4)) (Con 12) (Branch F Dtrue));
    GetLocal 4 local4_5;
    Let b6 = M[Offset(Offset(000751,Mul(local4_5,9)),1)];
    if (TestBit(b6,3)) {
      TraceOperation 041729 (Get_prop (Var (Local 4)) (Con 29) Sp);
      GetLocal 4 local4_7;
      Let b8 = M[Offset(Offset(000751,Mul(local4_7,9)),7)];
      Let b9 = M[Offset(Offset(Offset(000751,Mul(local4_7,9)),7),1)];
      Let b10 = M[Address(MakeHiLo(b8,b9))];
      Let loop_var11 = DeAddress(Offset(Address(MakeHiLo(b8,b9)),Add(Mul(2,Widen(b10)),1)));
      Label 12: {
        Let b13 = M[Address(loop_var11)];
        if (IsZeroByte(b13)) {
          Let b14 = M[000754];
          Let b15 = M[000755];
          PushStack MakeHiLo(b14,b15);
        } else {
          if (Equal(29,Widen(BwAnd(b13,31)))) {
            if (Equal(Add(Widen(ShiftR(b13,5)),1),2)) {
              Let b16 = M[Offset(Address(loop_var11),1)];
              Let b17 = M[Offset(Offset(Address(loop_var11),1),1)];
              PushStack MakeHiLo(b16,b17);
            } else {
              Let b18 = M[Offset(Address(loop_var11),1)];
              PushStack Widen(b18);
            }
          } else {
            Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),Add(Widen(ShiftR(b13,5)),1)));
            Goto: Label 12
          }
        }
      }
      TraceOperation 041733 (Call (Fvar Sp) [Con 3] Sp);
      PopStack popped19;
      if (IsZeroAddress(PackedAddress Z3(popped19))) {
        PushStack 0;
        Jump: 041738
      } else {
        PushFrame;
        PushReturnAddress 041733;
        SetLocal 1 3;
        SetNumberActuals 1;
        JumpIndirect: (routine) PackedAddress Z3(popped19)
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_20;
      SetResult 1;
      JumpIndirect: (return) return_address_20
    }
  }
LocReturn 041733:
  PushStack call_result;
  Jump: 041738
LocOp 041738:
  TraceOperation 041738 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 041740:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 041743
LocOp 041743:
  TraceOperation 041743 (Jz (Var (Global 85)) (Branch T (Dloc 041785)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 041785
  } else {
    TraceOperation 041746 (Get_child (Var (Global 0)) Sp (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    PushStack Widen(b5);
    if (IsZero(Widen(b5))) {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    } else {
      TraceOperation 041750 (Jz (Var (Local 1)) (Branch T (Dloc 041759)));
      GetLocal 1 local1_7;
      if (IsZero(local1_7)) {
        Jump: 041759
      } else {
        TraceOperation 041753 (Push (Var (Local 1)));
        GetLocal 1 local1_8;
        PushStack local1_8;
        TraceOperation 041756 (Jump 041772);
        Jump: 041772
      }
    }
  }
LocOp 041759:
  TraceOperation 041759 (Je [Var (Global 152),Con 2] (Branch T (Dloc 041769)));
  Let b1 = M[008212];
  Let b2 = M[008213];
  if (Equal(MakeHiLo(b1,b2),2)) {
    Jump: 041769
  } else {
    TraceOperation 041763 (Push (Con 0));
    PushStack 0;
    TraceOperation 041766 (Jump 041772);
    Jump: 041772
  }
LocOp 041769:
  TraceOperation 041769 (Push (Con 1));
  PushStack 1;
  Jump: 041772
LocOp 041772:
  TraceOperation 041772 (Pull (Con 1));
  PopStack popped1;
  SetLocal 1 popped1;
  TraceOperation 041775 (Call (Floc 042074) [Var (Global 0),Var (Local 1),Con -1] Sp);
  Let b2 = M[007908];
  Let b3 = M[007909];
  GetLocal 1 local1_4;
  PushFrame;
  PushReturnAddress 041775;
  SetLocal 1 MakeHiLo(b2,b3);
  SetLocal 2 local1_4;
  SetLocal 3 -1;
  MakeRoutineFrame 10;
  SetLocal 10 0;
  SetLocal 9 0;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 1;
  SetLocal 4 0;
  Jump: 042095
LocReturn 041775:
  PushStack call_result;
  TraceOperation 041784 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 041785:
  TraceOperation 041785 (Print_paddr (Var (Global 56)));
  Let b1 = M[008020];
  Let b2 = M[008021];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 041787 New_line;
  GamePrint "\n";
  TraceOperation 041788 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 041790:
  MakeRoutineFrame 5;
  if (LessThanByte(num_actuals,5)) {
    SetLocal 5 0;
    if (LessThanByte(num_actuals,4)) {
      SetLocal 4 0;
      if (LessThanByte(num_actuals,3)) {
        SetLocal 3 0;
        if (LessThanByte(num_actuals,2)) {
          SetLocal 2 0;
          if (LessThanByte(num_actuals,1)) {
            SetLocal 1 0;
          }
        }
      }
    }
  }
  Jump: 041801
LocOp 041801:
  TraceOperation 041801 (Jz (Var (Local 3)) (Branch F (Dloc 041816)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    TraceOperation 041804 (Get_prop (Var (Local 1)) (Con 21) Sp);
    GetLocal 1 local1_2;
    Let b3 = M[Offset(Offset(000751,Mul(local1_2,9)),7)];
    Let b4 = M[Offset(Offset(Offset(000751,Mul(local1_2,9)),7),1)];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
    Label 7: {
      Let b8 = M[Address(loop_var6)];
      if (IsZeroByte(b8)) {
        Let b9 = M[000738];
        Let b10 = M[000739];
        PushStack MakeHiLo(b9,b10);
      } else {
        if (Equal(21,Widen(BwAnd(b8,31)))) {
          if (Equal(Add(Widen(ShiftR(b8,5)),1),2)) {
            Let b11 = M[Offset(Address(loop_var6),1)];
            Let b12 = M[Offset(Offset(Address(loop_var6),1),1)];
            PushStack MakeHiLo(b11,b12);
          } else {
            Let b13 = M[Offset(Address(loop_var6),1)];
            PushStack Widen(b13);
          }
        } else {
          Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
          Goto: Label 7
        }
      }
    }
    TraceOperation 041808 (Call (Fvar Sp) [Con 5] Sp);
    PopStack popped14;
    if (IsZeroAddress(PackedAddress Z3(popped14))) {
      PushStack 0;
      Jump: 041813
    } else {
      PushFrame;
      PushReturnAddress 041808;
      SetLocal 1 5;
      SetNumberActuals 1;
      JumpIndirect: (routine) PackedAddress Z3(popped14)
    }
  } else {
    Jump: 041816
  }
LocReturn 041808:
  PushStack call_result;
  Jump: 041813
LocOp 041813:
  TraceOperation 041813 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 041816
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 041816:
  TraceOperation 041816 (Jz (Var (Local 3)) (Branch F (Dloc 041842)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    TraceOperation 041819 (Test_attr (Var (Local 1)) (Con 5) (Branch T (Dloc 041830)));
    GetLocal 1 local1_2;
    Let b3 = M[Offset(Offset(000751,Mul(local1_2,9)),0)];
    if (TestBit(b3,2)) {
      Jump: 041830
    } else {
      TraceOperation 041823 (Get_prop (Var (Local 1)) (Con 14) (Local 4));
      GetLocal 1 local1_4;
      Let b5 = M[Offset(Offset(000751,Mul(local1_4,9)),7)];
      Let b6 = M[Offset(Offset(Offset(000751,Mul(local1_4,9)),7),1)];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let loop_var8 = DeAddress(Offset(Address(MakeHiLo(b5,b6)),Add(Mul(2,Widen(b7)),1)));
      Label 9: {
        Let b10 = M[Address(loop_var8)];
        if (IsZeroByte(b10)) {
          Let b11 = M[000724];
          Let b12 = M[000725];
          SetLocal 4 MakeHiLo(b11,b12);
        } else {
          if (Equal(14,Widen(BwAnd(b10,31)))) {
            if (Equal(Add(Widen(ShiftR(b10,5)),1),2)) {
              Let b13 = M[Offset(Address(loop_var8),1)];
              Let b14 = M[Offset(Offset(Address(loop_var8),1),1)];
              SetLocal 4 MakeHiLo(b13,b14);
            } else {
              Let b15 = M[Offset(Address(loop_var8),1)];
              SetLocal 4 Widen(b15);
            }
          } else {
            Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),Add(Widen(ShiftR(b10,5)),1)));
            Goto: Label 9
          }
        }
      }
      TraceOperation 041827 (Jz (Var (Local 4)) (Branch F (Dloc 041837)));
      GetLocal 4 local4_16;
      if (IsZero(local4_16)) {
        Jump: 041830
      } else {
        Jump: 041837
      }
    }
  } else {
    Jump: 041842
  }
LocOp 041830:
  TraceOperation 041830 (Get_prop (Var (Local 1)) (Con 28) (Local 4));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),7)];
  Let b3 = M[Offset(Offset(Offset(000751,Mul(local1_1,9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
  Label 6: {
    Let b7 = M[Address(loop_var5)];
    if (IsZeroByte(b7)) {
      Let b8 = M[000752];
      Let b9 = M[000753];
      SetLocal 4 MakeHiLo(b8,b9);
    } else {
      if (Equal(28,Widen(BwAnd(b7,31)))) {
        if (Equal(Add(Widen(ShiftR(b7,5)),1),2)) {
          Let b10 = M[Offset(Address(loop_var5),1)];
          Let b11 = M[Offset(Offset(Address(loop_var5),1),1)];
          SetLocal 4 MakeHiLo(b10,b11);
        } else {
          Let b12 = M[Offset(Address(loop_var5),1)];
          SetLocal 4 Widen(b12);
        }
      } else {
        Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),Add(Widen(ShiftR(b7,5)),1)));
        Goto: Label 6
      }
    }
  }
  TraceOperation 041834 (Jz (Var (Local 4)) (Branch T (Dloc 041842)));
  GetLocal 4 local4_13;
  if (IsZero(local4_13)) {
    Jump: 041842
  } else {
    Jump: 041837
  }
LocOp 041837:
  TraceOperation 041837 (Print_paddr (Var (Local 4)));
  GetLocal 4 local4_1;
  GamePrint GetText(PackedAddress Z3(local4_1));
  TraceOperation 041839 (Jump 042017);
  Jump: 042017
LocOp 041842:
  TraceOperation 041842 (Jz (Var (Local 3)) (Branch F (Dloc 041864)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    TraceOperation 041845 (Print "There is");
    GamePrint "There is";
    TraceOperation 041850 (Call (Floc 043738) [Var (Local 1)] Sp);
    GetLocal 1 local1_2;
    PushFrame;
    PushReturnAddress 041850;
    SetLocal 1 local1_2;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043743
  } else {
    Jump: 041864
  }
LocReturn 041850:
  PushStack call_result;
  TraceOperation 041856 (Print " here.");
  GamePrint " here.";
  TraceOperation 041861 (Jump 042017);
  Jump: 042017
LocOp 041864:
  TraceOperation 041864 (Loadw (Var (Global 84)) (Var (Local 3)) Sp);
  Let b1 = M[008076];
  Let b2 = M[008077];
  GetLocal 3 local3_3;
  Let b4 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,local3_3))];
  Let b5 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,local3_3)),1)];
  PushStack MakeHiLo(b4,b5);
  TraceOperation 041868 (Print_paddr (Var Sp));
  PopStack popped6;
  GamePrint GetText(PackedAddress Z3(popped6));
  TraceOperation 041870 (Test_attr (Var (Local 1)) (Con 31) (Branch F (Dloc 041877)));
  GetLocal 1 local1_7;
  Let b8 = M[Offset(Offset(000751,Mul(local1_7,9)),3)];
  if (TestBit(b8,0)) {
    TraceOperation 041874 (Jump 041890);
    Jump: 041890
  } else {
    Jump: 041877
  }
LocOp 041877:
  TraceOperation 041877 (Test_attr (Var (Local 1)) (Con 15) (Branch F (Dloc 041887)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),1)];
  if (TestBit(b2,0)) {
    TraceOperation 041881 (Print "an ");
    GamePrint "an ";
    TraceOperation 041884 (Jump 041890);
    Jump: 041890
  } else {
    Jump: 041887
  }
LocOp 041887:
  TraceOperation 041887 (Print "a ");
  GamePrint "a ";
  Jump: 041890
LocOp 041890:
  TraceOperation 041890 (Print_obj (Var (Local 1)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),7)];
  Let b3 = M[Offset(Offset(Offset(000751,Mul(local1_1,9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 041892 (Test_attr (Var (Local 1)) (Con 9) (Branch F (Dloc 041910)));
  GetLocal 1 local1_6;
  Let b7 = M[Offset(Offset(000751,Mul(local1_6,9)),1)];
  if (TestBit(b7,6)) {
    TraceOperation 041896 (Print " (being worn)");
    GamePrint " (being worn)";
    TraceOperation 041907 (Jump 042017);
    Jump: 042017
  } else {
    Jump: 041910
  }
LocOp 041910:
  TraceOperation 041910 (Je [Var (Local 1),Con 111] (Branch F (Dloc 041926)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,111)) {
    TraceOperation 041914 (Print " (in your ear)");
    GamePrint " (in your ear)";
    TraceOperation 041923 (Jump 042017);
    Jump: 042017
  } else {
    Jump: 041926
  }
LocOp 041926:
  TraceOperation 041926 (Je [Var (Local 1),Con 182] (Branch F (Dloc 041956)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,182)) {
    TraceOperation 041930 (Jz (Var (Global 208)) (Branch T (Dloc 041956)));
    Let b2 = M[008324];
    Let b3 = M[008325];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 041956
    } else {
      TraceOperation 041933 (Print " (suspended in");
      GamePrint " (suspended in";
      TraceOperation 041944 (Call (Floc 043738) [Var (Global 208)] Sp);
      Let b4 = M[008324];
      Let b5 = M[008325];
      PushFrame;
      PushReturnAddress 041944;
      SetLocal 1 MakeHiLo(b4,b5);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043743
    }
  } else {
    Jump: 041956
  }
LocReturn 041944:
  PushStack call_result;
  TraceOperation 041950 (Print ")");
  GamePrint ")";
  TraceOperation 041953 (Jump 042017);
  Jump: 042017
LocOp 041956:
  TraceOperation 041956 (Je [Var (Local 1),Con 186] (Branch F (Dloc 042017)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,186)) {
    TraceOperation 041961 (Jz (Var (Global 209)) (Branch F (Dloc 041967)));
    Let b2 = M[008326];
    Let b3 = M[008327];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 041964 (Jz (Var (Global 210)) (Branch T (Dloc 042017)));
      Let b4 = M[008328];
      Let b5 = M[008329];
      if (IsZero(MakeHiLo(b4,b5))) {
        Jump: 042017
      } else {
        Jump: 041967
      }
    } else {
      Jump: 041967
    }
  } else {
    Jump: 042017
  }
LocOp 041967:
  TraceOperation 041967 (Print " (connected to");
  GamePrint " (connected to";
  TraceOperation 041978 (Jz (Var (Global 209)) (Branch T (Dloc 041998)));
  Let b1 = M[008326];
  Let b2 = M[008327];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 041998
  } else {
    TraceOperation 041981 (Print " the plotter");
    GamePrint " the plotter";
    TraceOperation 041990 (Jz (Var (Global 210)) (Branch T (Dloc 041998)));
    Let b3 = M[008328];
    Let b4 = M[008329];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 041998
    } else {
      TraceOperation 041993 (Print " and");
      GamePrint " and";
      Jump: 041998
    }
  }
LocOp 041998:
  TraceOperation 041998 (Jz (Var (Global 210)) (Branch T (Dloc 042014)));
  Let b1 = M[008328];
  Let b2 = M[008329];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 042014
  } else {
    TraceOperation 042001 (Print " the control console");
    GamePrint " the control console";
    Jump: 042014
  }
LocOp 042014:
  TraceOperation 042014 (Print ")");
  GamePrint ")";
  Jump: 042017
LocOp 042017:
  TraceOperation 042017 (Jz (Var (Local 3)) (Branch F (Dloc 042050)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    TraceOperation 042020 (Test_attr (Var (Local 1)) (Con 26) (Branch T (Dloc 042050)));
    GetLocal 1 local1_2;
    Let b3 = M[Offset(Offset(000751,Mul(local1_2,9)),3)];
    if (TestBit(b3,5)) {
      Jump: 042050
    } else {
      TraceOperation 042024 (Get_parent (Var (Global 195)) (Local 5));
      Let b4 = M[008298];
      Let b5 = M[008299];
      Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
      SetLocal 5 Widen(b6);
      TraceOperation 042027 (Jz (Var (Local 5)) (Branch T (Dloc 042050)));
      GetLocal 5 local5_7;
      if (IsZero(local5_7)) {
        Jump: 042050
      } else {
        TraceOperation 042030 (Test_attr (Var (Local 5)) (Con 12) (Branch F (Dloc 042050)));
        GetLocal 5 local5_8;
        Let b9 = M[Offset(Offset(000751,Mul(local5_8,9)),1)];
        if (TestBit(b9,3)) {
          TraceOperation 042034 (Print " (outside the ");
          GamePrint " (outside the ";
          TraceOperation 042045 (Print_obj (Var (Local 5)));
          GetLocal 5 local5_10;
          Let b11 = M[Offset(Offset(000751,Mul(local5_10,9)),7)];
          Let b12 = M[Offset(Offset(Offset(000751,Mul(local5_10,9)),7),1)];
          Let b13 = M[Address(MakeHiLo(b11,b12))];
          Let ite_res14 = Ite((IsZeroByte(b13),"",GetText(Offset(Address(MakeHiLo(b11,b12)),1))));
          GamePrint ite_res14;
          TraceOperation 042047 (Print ")");
          GamePrint ")";
          Jump: 042050
        } else {
          Jump: 042050
        }
      }
    }
  } else {
    Jump: 042050
  }
LocOp 042050:
  TraceOperation 042050 New_line;
  GamePrint "\n";
  TraceOperation 042051 (Call (Floc 043506) [Var (Local 1)] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 042051;
  SetLocal 1 local1_1;
  MakeRoutineFrame 1;
  Jump: 043509
LocReturn 042051:
  PushStack call_result;
  TraceOperation 042057 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 042060 (Get_child (Var (Local 1)) Sp (Branch F Dfalse));
    GetLocal 1 local1_3;
    Let b4 = M[Offset(Offset(000751,Mul(local1_3,9)),6)];
    PushStack Widen(b4);
    if (IsZero(Widen(b4))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 042064 (Call (Floc 042074) [Var (Local 1),Var (Local 2),Var (Local 3)] Sp);
      GetLocal 1 local1_6;
      GetLocal 2 local2_7;
      GetLocal 3 local3_8;
      PushFrame;
      PushReturnAddress 042064;
      SetLocal 1 local1_6;
      SetLocal 2 local2_7;
      SetLocal 3 local3_8;
      MakeRoutineFrame 10;
      SetLocal 10 0;
      SetLocal 9 0;
      SetLocal 8 0;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 1;
      SetLocal 4 0;
      Jump: 042095
    }
  }
LocReturn 042064:
  PushStack call_result;
  TraceOperation 042072 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 042074:
  MakeRoutineFrame 10;
  if (LessThanByte(num_actuals,10)) {
    SetLocal 10 0;
    if (LessThanByte(num_actuals,9)) {
      SetLocal 9 0;
      if (LessThanByte(num_actuals,8)) {
        SetLocal 8 0;
        if (LessThanByte(num_actuals,7)) {
          SetLocal 7 0;
          if (LessThanByte(num_actuals,6)) {
            SetLocal 6 0;
            if (LessThanByte(num_actuals,5)) {
              SetLocal 5 1;
              if (LessThanByte(num_actuals,4)) {
                SetLocal 4 0;
                if (LessThanByte(num_actuals,3)) {
                  SetLocal 3 0;
                  if (LessThanByte(num_actuals,2)) {
                    SetLocal 2 0;
                    if (LessThanByte(num_actuals,1)) {
                      SetLocal 1 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  Jump: 042095
LocOp 042095:
  TraceOperation 042095 (Get_child (Var (Local 1)) (Local 4) (Branch F Dtrue));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),6)];
  SetLocal 4 Widen(b2);
  if (IsZero(Widen(b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 042099 (Get_parent (Var (Global 195)) Sp);
    Let b4 = M[008298];
    Let b5 = M[008299];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),4)];
    PushStack Widen(b6);
    TraceOperation 042102 (Test_attr (Var Sp) (Con 12) (Branch F (Dloc 042109)));
    PopStack popped7;
    Let b8 = M[Offset(Offset(000751,Mul(popped7,9)),1)];
    if (TestBit(b8,3)) {
      TraceOperation 042106 (Get_parent (Var (Global 195)) (Local 6));
      Let b9 = M[008298];
      Let b10 = M[008299];
      Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),4)];
      SetLocal 6 Widen(b11);
      Jump: 042109
    } else {
      Jump: 042109
    }
  }
LocOp 042109:
  TraceOperation 042109 (Get_parent (Var (Local 1)) Sp);
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),4)];
  PushStack Widen(b2);
  TraceOperation 042112 (Je [Con 31,Var (Local 1),Var Sp] (Branch F (Dloc 042124)));
  GetLocal 1 local1_3;
  PopStack popped4;
  if (LogOr(Equal(31,local1_3),Equal(31,popped4))) {
    TraceOperation 042118 (Store (Con 9) (Con 1));
    SetLocal 9 1;
    TraceOperation 042121 (Jump 042207);
    Jump: 042207
  } else {
    Jump: 042124
  }
LocOp 042124:
  TraceOperation 042124 (Jz (Var (Local 4)) (Branch F (Dloc 042130)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    TraceOperation 042127 (Jump 042207);
    Jump: 042207
  } else {
    Jump: 042130
  }
LocOp 042130:
  TraceOperation 042130 (Je [Var (Local 4),Var (Local 6)] (Branch F (Dloc 042140)));
  GetLocal 4 local4_1;
  GetLocal 6 local6_2;
  if (Equal(local4_1,local6_2)) {
    TraceOperation 042134 (Store (Con 8) (Con 1));
    SetLocal 8 1;
    TraceOperation 042137 (Jump 042200);
    Jump: 042200
  } else {
    Jump: 042140
  }
LocOp 042140:
  TraceOperation 042140 (Je [Var (Local 4),Var (Global 195)] (Branch F (Dloc 042147)));
  GetLocal 4 local4_1;
  Let b2 = M[008298];
  Let b3 = M[008299];
  if (Equal(local4_1,MakeHiLo(b2,b3))) {
    TraceOperation 042144 (Jump 042200);
    Jump: 042200
  } else {
    Jump: 042147
  }
LocOp 042147:
  TraceOperation 042147 (Test_attr (Var (Local 4)) (Con 6) (Branch T (Dloc 042200)));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Offset(000751,Mul(local4_1,9)),0)];
  if (TestBit(b2,1)) {
    Jump: 042200
  } else {
    TraceOperation 042151 (Test_attr (Var (Local 4)) (Con 5) (Branch T (Dloc 042200)));
    GetLocal 4 local4_3;
    Let b4 = M[Offset(Offset(000751,Mul(local4_3,9)),0)];
    if (TestBit(b4,2)) {
      Jump: 042200
    } else {
      TraceOperation 042155 (Get_prop (Var (Local 4)) (Con 14) (Local 7));
      GetLocal 4 local4_5;
      Let b6 = M[Offset(Offset(000751,Mul(local4_5,9)),7)];
      Let b7 = M[Offset(Offset(Offset(000751,Mul(local4_5,9)),7),1)];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      Let loop_var9 = DeAddress(Offset(Address(MakeHiLo(b6,b7)),Add(Mul(2,Widen(b8)),1)));
      Label 10: {
        Let b11 = M[Address(loop_var9)];
        if (IsZeroByte(b11)) {
          Let b12 = M[000724];
          Let b13 = M[000725];
          SetLocal 7 MakeHiLo(b12,b13);
        } else {
          if (Equal(14,Widen(BwAnd(b11,31)))) {
            if (Equal(Add(Widen(ShiftR(b11,5)),1),2)) {
              Let b14 = M[Offset(Address(loop_var9),1)];
              Let b15 = M[Offset(Offset(Address(loop_var9),1),1)];
              SetLocal 7 MakeHiLo(b14,b15);
            } else {
              Let b16 = M[Offset(Address(loop_var9),1)];
              SetLocal 7 Widen(b16);
            }
          } else {
            Assign loop_var9 = DeAddress(Offset(Offset(Address(loop_var9),1),Add(Widen(ShiftR(b11,5)),1)));
            Goto: Label 10
          }
        }
      }
      TraceOperation 042159 (Jz (Var (Local 7)) (Branch T (Dloc 042200)));
      GetLocal 7 local7_17;
      if (IsZero(local7_17)) {
        Jump: 042200
      } else {
        TraceOperation 042162 (Test_attr (Var (Local 4)) (Con 27) (Branch T (Dloc 042169)));
        GetLocal 4 local4_18;
        Let b19 = M[Offset(Offset(000751,Mul(local4_18,9)),3)];
        if (TestBit(b19,4)) {
          Jump: 042169
        } else {
          TraceOperation 042166 (Print_paddr (Var (Local 7)));
          GetLocal 7 local7_20;
          GamePrint GetText(PackedAddress Z3(local7_20));
          TraceOperation 042168 New_line;
          GamePrint "\n";
          Jump: 042169
        }
      }
    }
  }
LocOp 042169:
  TraceOperation 042169 (Call (Floc 043506) [Var (Local 4)] Sp);
  GetLocal 4 local4_1;
  PushFrame;
  PushReturnAddress 042169;
  SetLocal 1 local4_1;
  MakeRoutineFrame 1;
  Jump: 043509
LocReturn 042169:
  PushStack call_result;
  TraceOperation 042175 (Jz (Var Sp) (Branch T (Dloc 042200)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042200
  } else {
    TraceOperation 042178 (Get_parent (Var (Local 4)) Sp);
    GetLocal 4 local4_2;
    Let b3 = M[Offset(Offset(000751,Mul(local4_2,9)),4)];
    PushStack Widen(b3);
    TraceOperation 042181 (Get_prop (Var Sp) (Con 21) Sp);
    PopStack popped4;
    Let b5 = M[Offset(Offset(000751,Mul(popped4,9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(popped4,9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let loop_var8 = DeAddress(Offset(Address(MakeHiLo(b5,b6)),Add(Mul(2,Widen(b7)),1)));
    Label 9: {
      Let b10 = M[Address(loop_var8)];
      if (IsZeroByte(b10)) {
        Let b11 = M[000738];
        Let b12 = M[000739];
        PushStack MakeHiLo(b11,b12);
      } else {
        if (Equal(21,Widen(BwAnd(b10,31)))) {
          if (Equal(Add(Widen(ShiftR(b10,5)),1),2)) {
            Let b13 = M[Offset(Address(loop_var8),1)];
            Let b14 = M[Offset(Offset(Address(loop_var8),1),1)];
            PushStack MakeHiLo(b13,b14);
          } else {
            Let b15 = M[Offset(Address(loop_var8),1)];
            PushStack Widen(b15);
          }
        } else {
          Assign loop_var8 = DeAddress(Offset(Offset(Address(loop_var8),1),Add(Widen(ShiftR(b10,5)),1)));
          Goto: Label 9
        }
      }
    }
    TraceOperation 042185 (Jz (Var Sp) (Branch F (Dloc 042200)));
    PopStack popped16;
    if (IsZero(popped16)) {
      TraceOperation 042188 (Get_child (Var (Local 4)) Sp (Branch F (Dloc 042200)));
      GetLocal 4 local4_17;
      Let b18 = M[Offset(Offset(000751,Mul(local4_17,9)),6)];
      PushStack Widen(b18);
      if (IsZero(Widen(b18))) {
        Jump: 042200
      } else {
        TraceOperation 042192 (Call (Floc 042074) [Var (Local 4),Var (Local 2),Con 0] Sp);
        GetLocal 4 local4_19;
        GetLocal 2 local2_20;
        PushFrame;
        PushReturnAddress 042192;
        SetLocal 1 local4_19;
        SetLocal 2 local2_20;
        SetLocal 3 0;
        MakeRoutineFrame 10;
        SetLocal 10 0;
        SetLocal 9 0;
        SetLocal 8 0;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 1;
        SetLocal 4 0;
        Jump: 042095
      }
    } else {
      Jump: 042200
    }
  }
LocReturn 042192:
  PushStack call_result;
  Jump: 042200
LocOp 042200:
  TraceOperation 042200 (Get_sibling (Var (Local 4)) (Local 4) (Branch T (Dloc 042204)));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Offset(000751,Mul(local4_1,9)),5)];
  SetLocal 4 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 042204
  } else {
    Jump: 042204
  }
LocOp 042204:
  TraceOperation 042204 (Jump 042124);
  Jump: 042124
LocOp 042207:
  TraceOperation 042207 (Get_child (Var (Local 1)) (Local 4) (Branch T (Dloc 042211)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),6)];
  SetLocal 4 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 042211
  } else {
    Jump: 042211
  }
LocOp 042211:
  TraceOperation 042211 (Jz (Var (Local 4)) (Branch F (Dloc 042245)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    TraceOperation 042214 (Jz (Var (Local 8)) (Branch T (Dloc 042232)));
    GetLocal 8 local8_2;
    if (IsZero(local8_2)) {
      Jump: 042232
    } else {
      TraceOperation 042217 (Jz (Var (Local 6)) (Branch T (Dloc 042232)));
      GetLocal 6 local6_3;
      if (IsZero(local6_3)) {
        Jump: 042232
      } else {
        TraceOperation 042220 (Get_child (Var (Local 6)) Sp (Branch F (Dloc 042232)));
        GetLocal 6 local6_4;
        Let b5 = M[Offset(Offset(000751,Mul(local6_4,9)),6)];
        PushStack Widen(b5);
        if (IsZero(Widen(b5))) {
          Jump: 042232
        } else {
          TraceOperation 042224 (Call (Floc 042074) [Var (Local 6),Var (Local 2),Var (Local 3)] Sp);
          GetLocal 6 local6_6;
          GetLocal 2 local2_7;
          GetLocal 3 local3_8;
          PushFrame;
          PushReturnAddress 042224;
          SetLocal 1 local6_6;
          SetLocal 2 local2_7;
          SetLocal 3 local3_8;
          MakeRoutineFrame 10;
          SetLocal 10 0;
          SetLocal 9 0;
          SetLocal 8 0;
          SetLocal 7 0;
          SetLocal 6 0;
          SetLocal 5 1;
          SetLocal 4 0;
          Jump: 042095
        }
      }
    }
  } else {
    Jump: 042245
  }
LocReturn 042224:
  PushStack call_result;
  Jump: 042232
LocOp 042232:
  TraceOperation 042232 (Jz (Var (Local 5)) (Branch F (Dloc 042240)));
  GetLocal 5 local5_1;
  if (IsZero(local5_1)) {
    TraceOperation 042235 (Push (Con 1));
    PushStack 1;
    TraceOperation 042238 (Ret (Var Sp));
    PopStack popped2;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult popped2;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 042240
  }
LocOp 042240:
  TraceOperation 042240 (Push (Con 0));
  PushStack 0;
  TraceOperation 042243 (Ret (Var Sp));
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 042245:
  TraceOperation 042245 (Je [Var (Local 4),Var (Local 6),Con 31] (Branch F (Dloc 042254)));
  GetLocal 4 local4_1;
  GetLocal 6 local6_2;
  if (LogOr(Equal(local4_1,local6_2),Equal(local4_1,31))) {
    TraceOperation 042251 (Jump 042353);
    Jump: 042353
  } else {
    Jump: 042254
  }
LocOp 042254:
  TraceOperation 042254 (Test_attr (Var (Local 4)) (Con 6) (Branch T (Dloc 042353)));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Offset(000751,Mul(local4_1,9)),0)];
  if (TestBit(b2,1)) {
    Jump: 042353
  } else {
    TraceOperation 042259 (Jz (Var (Local 9)) (Branch F (Dloc 042274)));
    GetLocal 9 local9_3;
    if (IsZero(local9_3)) {
      TraceOperation 042262 (Test_attr (Var (Local 4)) (Con 5) (Branch T (Dloc 042274)));
      GetLocal 4 local4_4;
      Let b5 = M[Offset(Offset(000751,Mul(local4_4,9)),0)];
      if (TestBit(b5,2)) {
        Jump: 042274
      } else {
        TraceOperation 042266 (Get_prop (Var (Local 4)) (Con 14) Sp);
        GetLocal 4 local4_6;
        Let b7 = M[Offset(Offset(000751,Mul(local4_6,9)),7)];
        Let b8 = M[Offset(Offset(Offset(000751,Mul(local4_6,9)),7),1)];
        Let b9 = M[Address(MakeHiLo(b7,b8))];
        Let loop_var10 = DeAddress(Offset(Address(MakeHiLo(b7,b8)),Add(Mul(2,Widen(b9)),1)));
        Label 11: {
          Let b12 = M[Address(loop_var10)];
          if (IsZeroByte(b12)) {
            Let b13 = M[000724];
            Let b14 = M[000725];
            PushStack MakeHiLo(b13,b14);
          } else {
            if (Equal(14,Widen(BwAnd(b12,31)))) {
              if (Equal(Add(Widen(ShiftR(b12,5)),1),2)) {
                Let b15 = M[Offset(Address(loop_var10),1)];
                Let b16 = M[Offset(Offset(Address(loop_var10),1),1)];
                PushStack MakeHiLo(b15,b16);
              } else {
                Let b17 = M[Offset(Address(loop_var10),1)];
                PushStack Widen(b17);
              }
            } else {
              Assign loop_var10 = DeAddress(Offset(Offset(Address(loop_var10),1),Add(Widen(ShiftR(b12,5)),1)));
              Goto: Label 11
            }
          }
        }
        TraceOperation 042270 (Jz (Var Sp) (Branch F (Dloc 042353)));
        PopStack popped18;
        if (IsZero(popped18)) {
          Jump: 042274
        } else {
          Jump: 042353
        }
      }
    } else {
      Jump: 042274
    }
  }
LocOp 042274:
  TraceOperation 042274 (Je [Var (Local 4),Con 96] (Branch F (Dloc 042292)));
  GetLocal 4 local4_1;
  if (Equal(local4_1,96)) {
    TraceOperation 042278 (Je [Var (Global 0),Con 98] (Branch F (Dloc 042292)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    if (Equal(MakeHiLo(b2,b3),98)) {
      TraceOperation 042282 (Jin (Var (Local 4)) (Var (Global 0)) (Branch F (Dloc 042292)));
      GetLocal 4 local4_4;
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[Offset(Offset(000751,Mul(local4_4,9)),4)];
      if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
        TraceOperation 042286 (Set_attr (Var (Local 4)) (Con 27));
        GetLocal 4 local4_8;
        Let b9 = M[Offset(Offset(000751,Mul(local4_8,9)),3)];
        SetByte Offset(Offset(000751,Mul(local4_8,9)),3) SetBit(b9,4);
        TraceOperation 042289 (Jump 042353);
        Jump: 042353
      } else {
        Jump: 042292
      }
    } else {
      Jump: 042292
    }
  } else {
    Jump: 042292
  }
LocOp 042292:
  TraceOperation 042292 (Test_attr (Var (Local 4)) (Con 27) (Branch T (Dloc 042332)));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Offset(000751,Mul(local4_1,9)),3)];
  if (TestBit(b2,4)) {
    Jump: 042332
  } else {
    TraceOperation 042296 (Jz (Var (Local 5)) (Branch T (Dloc 042321)));
    GetLocal 5 local5_3;
    if (IsZero(local5_3)) {
      Jump: 042321
    } else {
      TraceOperation 042299 (Call (Floc 042442) [Var (Local 1),Var (Local 3)] Sp);
      GetLocal 1 local1_4;
      GetLocal 3 local3_5;
      PushFrame;
      PushReturnAddress 042299;
      SetLocal 1 local1_4;
      SetLocal 2 local3_5;
      MakeRoutineFrame 2;
      Jump: 042447
    }
  }
LocReturn 042299:
  PushStack call_result;
  TraceOperation 042306 (Jz (Var Sp) (Branch T (Dloc 042316)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042316
  } else {
    TraceOperation 042309 (Jl (Var (Local 3)) (Con 0) (Branch F (Dloc 042316)));
    GetLocal 3 local3_2;
    if (LessThan(local3_2,0)) {
      TraceOperation 042313 (Store (Con 3) (Con 0));
      SetLocal 3 0;
      Jump: 042316
    } else {
      Jump: 042316
    }
  }
LocOp 042316:
  TraceOperation 042316 (Inc (Con 3));
  GetLocal 3 local3_1;
  SetLocal 3 Add(local3_1,1);
  TraceOperation 042318 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  Jump: 042321
LocOp 042321:
  TraceOperation 042321 (Call (Floc 041790) [Var (Local 4),Var (Local 2),Var (Local 3)] Sp);
  GetLocal 4 local4_1;
  GetLocal 2 local2_2;
  GetLocal 3 local3_3;
  PushFrame;
  PushReturnAddress 042321;
  SetLocal 1 local4_1;
  SetLocal 2 local2_2;
  SetLocal 3 local3_3;
  MakeRoutineFrame 5;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 041801
LocReturn 042321:
  PushStack call_result;
  TraceOperation 042329 (Jump 042353);
  Jump: 042353
LocOp 042332:
  TraceOperation 042332 (Get_child (Var (Local 4)) Sp (Branch F (Dloc 042353)));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Offset(000751,Mul(local4_1,9)),6)];
  PushStack Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 042353
  } else {
    TraceOperation 042336 (Call (Floc 043506) [Var (Local 4)] Sp);
    GetLocal 4 local4_3;
    PushFrame;
    PushReturnAddress 042336;
    SetLocal 1 local4_3;
    MakeRoutineFrame 1;
    Jump: 043509
  }
LocReturn 042336:
  PushStack call_result;
  TraceOperation 042342 (Jz (Var Sp) (Branch T (Dloc 042353)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042353
  } else {
    TraceOperation 042345 (Call (Floc 042074) [Var (Local 4),Var (Local 2),Var (Local 3)] Sp);
    GetLocal 4 local4_2;
    GetLocal 2 local2_3;
    GetLocal 3 local3_4;
    PushFrame;
    PushReturnAddress 042345;
    SetLocal 1 local4_2;
    SetLocal 2 local2_3;
    SetLocal 3 local3_4;
    MakeRoutineFrame 10;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 1;
    SetLocal 4 0;
    Jump: 042095
  }
LocReturn 042345:
  PushStack call_result;
  Jump: 042353
LocOp 042353:
  TraceOperation 042353 (Get_sibling (Var (Local 4)) (Local 4) (Branch T (Dloc 042357)));
  GetLocal 4 local4_1;
  Let b2 = M[Offset(Offset(000751,Mul(local4_1,9)),5)];
  SetLocal 4 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 042357
  } else {
    Jump: 042357
  }
LocOp 042357:
  TraceOperation 042357 (Jump 042211);
  Jump: 042211
--------------------------------------------------
LocRoutine 042360:
  MakeRoutineFrame 6;
  if (LessThanByte(num_actuals,6)) {
    SetLocal 6 0;
    if (LessThanByte(num_actuals,5)) {
      SetLocal 5 0;
      if (LessThanByte(num_actuals,4)) {
        SetLocal 4 1;
        if (LessThanByte(num_actuals,3)) {
          SetLocal 3 0;
          if (LessThanByte(num_actuals,2)) {
            SetLocal 2 0;
            if (LessThanByte(num_actuals,1)) {
              SetLocal 1 0;
            }
          }
        }
      }
    }
  }
  Jump: 042373
LocOp 042373:
  TraceOperation 042373 (Get_child (Var (Local 1)) (Local 2) (Branch F Dfalse));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),6)];
  SetLocal 2 Widen(b2);
  if (IsZero(Widen(b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 042377
  }
LocOp 042377:
  TraceOperation 042377 (Get_sibling (Var (Local 2)) (Local 3) (Branch T (Dloc 042381)));
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Offset(000751,Mul(local2_1,9)),5)];
  SetLocal 3 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 042381
  } else {
    Jump: 042381
  }
LocOp 042381:
  TraceOperation 042381 (Jz (Var (Local 4)) (Branch T (Dloc 042390)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 042390
  } else {
    TraceOperation 042384 (Store (Con 4) (Con 0));
    SetLocal 4 0;
    TraceOperation 042387 (Jump 042401);
    Jump: 042401
  }
LocOp 042390:
  TraceOperation 042390 (Print ",");
  GamePrint ",";
  TraceOperation 042393 (Jz (Var (Local 3)) (Branch F (Dloc 042401)));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    TraceOperation 042396 (Print " and");
    GamePrint " and";
    Jump: 042401
  } else {
    Jump: 042401
  }
LocOp 042401:
  TraceOperation 042401 (Call (Floc 043738) [Var (Local 2)] Sp);
  GetLocal 2 local2_1;
  PushFrame;
  PushReturnAddress 042401;
  SetLocal 1 local2_1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 042401:
  PushStack call_result;
  TraceOperation 042407 (Jz (Var (Local 5)) (Branch F (Dloc 042419)));
  GetLocal 5 local5_1;
  if (IsZero(local5_1)) {
    TraceOperation 042410 (Jz (Var (Local 6)) (Branch F (Dloc 042419)));
    GetLocal 6 local6_2;
    if (IsZero(local6_2)) {
      TraceOperation 042413 (Store (Con 5) (Var (Local 2)));
      GetLocal 2 local2_3;
      SetLocal 5 local2_3;
      TraceOperation 042416 (Jump 042425);
      Jump: 042425
    } else {
      Jump: 042419
    }
  } else {
    Jump: 042419
  }
LocOp 042419:
  TraceOperation 042419 (Store (Con 6) (Con 1));
  SetLocal 6 1;
  TraceOperation 042422 (Store (Con 5) (Con 0));
  SetLocal 5 0;
  Jump: 042425
LocOp 042425:
  TraceOperation 042425 (Store (Con 2) (Var (Local 3)));
  GetLocal 3 local3_1;
  SetLocal 2 local3_1;
  TraceOperation 042428 (Jz (Var (Local 2)) (Branch F (Dloc 042377)));
  GetLocal 2 local2_2;
  if (IsZero(local2_2)) {
    TraceOperation 042432 (Jz (Var (Local 5)) (Branch T Dtrue));
    GetLocal 5 local5_3;
    if (IsZero(local5_3)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 042435 (Jz (Var (Local 6)) (Branch F Dtrue));
      GetLocal 6 local6_5;
      if (IsZero(local6_5)) {
        TraceOperation 042438 (Store (Con 207) (Var (Local 5)));
        GetLocal 5 local5_6;
        SetByte 008290 HiByte(local5_6);
        SetByte 008291 LoByte(local5_6);
        TraceOperation 042441 Rtrue;
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      } else {
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 1;
        JumpIndirect: (return) return_address_8
      }
    }
  } else {
    Jump: 042377
  }
--------------------------------------------------
LocRoutine 042442:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 042447
LocOp 042447:
  TraceOperation 042447 (Je [Var (Local 1),Var (Global 195)] (Branch T Dtrue));
  GetLocal 1 local1_1;
  Let b2 = M[008298];
  Let b3 = M[008299];
  if (Equal(local1_1,MakeHiLo(b2,b3))) {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    TraceOperation 042451 (Jin (Var (Local 1)) (Con 217) (Branch T Dfalse));
    GetLocal 1 local1_5;
    Let b6 = M[Offset(Offset(000751,Mul(local1_5,9)),4)];
    if (Equal(217,Widen(b6))) {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    } else {
      TraceOperation 042455 (Jg (Var (Local 2)) (Con 0) (Branch F (Dloc 042465)));
      GetLocal 2 local2_8;
      if (GreaterThan(local2_8,0)) {
        TraceOperation 042459 (Loadw (Var (Global 84)) (Var (Local 2)) Sp);
        Let b9 = M[008076];
        Let b10 = M[008077];
        GetLocal 2 local2_11;
        Let b12 = M[Offset(Address(MakeHiLo(b9,b10)),Mul(2,local2_11))];
        Let b13 = M[Offset(Offset(Address(MakeHiLo(b9,b10)),Mul(2,local2_11)),1)];
        PushStack MakeHiLo(b12,b13);
        TraceOperation 042463 (Print_paddr (Var Sp));
        PopStack popped14;
        GamePrint GetText(PackedAddress Z3(popped14));
        Jump: 042465
      } else {
        Jump: 042465
      }
    }
  }
LocOp 042465:
  TraceOperation 042465 (Test_attr (Var (Local 1)) (Con 8) (Branch F (Dloc 042487)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),1)];
  if (TestBit(b2,7)) {
    TraceOperation 042469 (Print "Sitting on the ");
    GamePrint "Sitting on the ";
    TraceOperation 042480 (Print_obj (Var (Local 1)));
    GetLocal 1 local1_3;
    Let b4 = M[Offset(Offset(000751,Mul(local1_3,9)),7)];
    Let b5 = M[Offset(Offset(Offset(000751,Mul(local1_3,9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 042482 (Print_ret " is:");
    GamePrint " is:\n";
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 1;
    JumpIndirect: (return) return_address_8
  } else {
    Jump: 042487
  }
LocOp 042487:
  TraceOperation 042487 (Test_attr (Var (Local 1)) (Con 26) (Branch F (Dloc 042513)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),3)];
  if (TestBit(b2,5)) {
    TraceOperation 042491 (Je [Var (Local 1),Con 209] (Branch T (Dloc 042513)));
    GetLocal 1 local1_3;
    if (Equal(local1_3,209)) {
      Jump: 042513
    } else {
      TraceOperation 042495 (Print_paddr (Var (Global 46)));
      Let b4 = M[008000];
      Let b5 = M[008001];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 042497 (Call (Floc 043738) [Var (Local 1),Con 1] Sp);
      GetLocal 1 local1_6;
      PushFrame;
      PushReturnAddress 042497;
      SetLocal 1 local1_6;
      SetLocal 2 1;
      MakeRoutineFrame 2;
      Jump: 043743
    }
  } else {
    Jump: 042513
  }
LocReturn 042497:
  PushStack call_result;
  TraceOperation 042504 (Print_ret " is holding:");
  GamePrint " is holding:\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 042513:
  TraceOperation 042513 (Print_paddr (Var (Global 46)));
  Let b1 = M[008000];
  Let b2 = M[008001];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 042515 (Call (Floc 043738) [Var (Local 1),Con 1] Sp);
  GetLocal 1 local1_3;
  PushFrame;
  PushReturnAddress 042515;
  SetLocal 1 local1_3;
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 042515:
  PushStack call_result;
  TraceOperation 042522 (Print_ret " contains:");
  GamePrint " contains:\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 042532:
  MakeRoutineFrame 0;
  Jump: 042533
LocOp 042533:
  TraceOperation 042533 (Insert_obj (Con 31) (Con 217));
  Let b1 = M[001034];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),31)) {
      Let b3 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),31)) {
          Let b7 = M[001035];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 001034 217;
  Let b8 = M[002710];
  SetByte 001035 LoByte(Widen(b8));
  SetByte 002710 31;
  TraceOperation 042536 (Get_child (Var (Global 201)) Sp (Branch F (Dloc 042549)));
  Let b9 = M[008310];
  Let b10 = M[008311];
  Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6)];
  PushStack Widen(b11);
  if (IsZero(Widen(b11))) {
    Jump: 042549
  } else {
    TraceOperation 042540 (Call (Floc 042074) [Var (Global 201)] Sp);
    Let b12 = M[008310];
    Let b13 = M[008311];
    PushFrame;
    PushReturnAddress 042540;
    SetLocal 1 MakeHiLo(b12,b13);
    MakeRoutineFrame 10;
    SetLocal 10 0;
    SetLocal 9 0;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 1;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 042095
  }
LocReturn 042540:
  PushStack call_result;
  TraceOperation 042546 (Jump 042569);
  Jump: 042569
LocOp 042549:
  TraceOperation 042549 (Print "It's empty (not counting you).");
  GamePrint "It's empty (not counting you).";
  TraceOperation 042568 New_line;
  GamePrint "\n";
  Jump: 042569
LocOp 042569:
  TraceOperation 042569 (Insert_obj (Con 31) (Var (Global 201)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[001034];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),31)) {
      Let b5 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),31)) {
          Let b9 = M[001035];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 001034 b2;
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  SetByte 001035 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 31;
  TraceOperation 042572 Rtrue;
  PopFrame;
  PopReturnAddress return_address_11;
  SetResult 1;
  JumpIndirect: (return) return_address_11
--------------------------------------------------
LocRoutine 042574:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 1;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 042579
LocOp 042579:
  TraceOperation 042579 (Insert_obj (Con 31) (Var (Local 1)));
  GetLocal 1 local1_1;
  Let b2 = M[001034];
  if (IsZero(Widen(b2))) {} else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b3),31)) {
      Let b4 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
    } else {
      Let loop_var5 = Widen(b3);
      Label 6: {
        Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
        if (Equal(Widen(b7),31)) {
          Let b8 = M[001035];
          SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
        } else {
          Assign loop_var5 = Widen(b7);
          Goto: Label 6
        }
      }
    }
  }
  SetByte 001034 LoByte(local1_1);
  Let b9 = M[Offset(Offset(000751,Mul(local1_1,9)),6)];
  SetByte 001035 LoByte(Widen(b9));
  SetByte Offset(Offset(000751,Mul(local1_1,9)),6) 31;
  TraceOperation 042582 (Store (Con 16) (Var (Local 1)));
  GetLocal 1 local1_10;
  SetByte 007908 HiByte(local1_10);
  SetByte 007909 LoByte(local1_10);
  TraceOperation 042585 (Je [Var (Global 0),Con 25] (Branch T (Dloc 042592)));
  Let b11 = M[007908];
  Let b12 = M[007909];
  if (Equal(MakeHiLo(b11,b12),25)) {
    Jump: 042592
  } else {
    TraceOperation 042589 (Insert_obj (Con 94) (Var (Global 0)));
    Let b13 = M[007908];
    Let b14 = M[007909];
    Let b15 = M[001601];
    if (IsZero(Widen(b15))) {} else {
      Let b16 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
      if (Equal(Widen(b16),94)) {
        Let b17 = M[001602];
        SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b17));
      } else {
        Let loop_var18 = Widen(b16);
        Label 19: {
          Let b20 = M[Offset(Offset(000751,Mul(loop_var18,9)),5)];
          if (Equal(Widen(b20),94)) {
            Let b21 = M[001602];
            SetByte Offset(Offset(000751,Mul(loop_var18,9)),5) LoByte(Widen(b21));
          } else {
            Assign loop_var18 = Widen(b20);
            Goto: Label 19
          }
        }
      }
    }
    SetByte 001601 b14;
    Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6)];
    SetByte 001602 LoByte(Widen(b22));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6) 94;
    Jump: 042592
  }
LocOp 042592:
  TraceOperation 042592 (Call (Floc 028316) [Var (Global 0)] (Global 85));
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame;
  PushReturnAddress 042592;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 1;
  Jump: 028325
LocReturn 042592:
  SetByte 008078 HiByte(call_result);
  SetByte 008079 LoByte(call_result);
  TraceOperation 042598 (Call (Floc 042626) [] Sp);
  PushFrame;
  PushReturnAddress 042598;
  MakeRoutineFrame 0;
  Jump: 042627
LocReturn 042598:
  PushStack call_result;
  TraceOperation 042603 (Get_prop (Var (Global 0)) (Con 29) Sp);
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[000754];
      Let b10 = M[000755];
      PushStack MakeHiLo(b9,b10);
    } else {
      if (Equal(29,Widen(BwAnd(b8,31)))) {
        if (Equal(Add(Widen(ShiftR(b8,5)),1),2)) {
          Let b11 = M[Offset(Address(loop_var6),1)];
          Let b12 = M[Offset(Offset(Address(loop_var6),1),1)];
          PushStack MakeHiLo(b11,b12);
        } else {
          Let b13 = M[Offset(Address(loop_var6),1)];
          PushStack Widen(b13);
        }
      } else {
        Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
        Goto: Label 7
      }
    }
  }
  TraceOperation 042607 (Call (Fvar Sp) [Con 2] Sp);
  PopStack popped14;
  if (IsZeroAddress(PackedAddress Z3(popped14))) {
    PushStack 0;
    Jump: 042612
  } else {
    PushFrame;
    PushReturnAddress 042607;
    SetLocal 1 2;
    SetNumberActuals 1;
    JumpIndirect: (routine) PackedAddress Z3(popped14)
  }
LocReturn 042607:
  PushStack call_result;
  Jump: 042612
LocOp 042612:
  TraceOperation 042612 (Jz (Var (Local 2)) (Branch T Dtrue));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 042615 (Je [Var (Global 0),Var (Local 1)] (Branch F Dtrue));
    Let b3 = M[007908];
    Let b4 = M[007909];
    GetLocal 1 local1_5;
    if (Equal(MakeHiLo(b3,b4),local1_5)) {
      TraceOperation 042619 (Call (Floc 032434) [] Sp);
      PushFrame;
      PushReturnAddress 042619;
      MakeRoutineFrame 0;
      Jump: 032435
    } else {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  }
LocReturn 042619:
  PushStack call_result;
  TraceOperation 042624 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 042626:
  MakeRoutineFrame 0;
  Jump: 042627
LocOp 042627:
  TraceOperation 042627 (Jz (Var (Global 210)) (Branch T (Dloc 042669)));
  Let b1 = M[008328];
  Let b2 = M[008329];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 042669
  } else {
    TraceOperation 042630 (Call (Floc 043468) [Con 186] Sp);
    PushFrame;
    PushReturnAddress 042630;
    SetLocal 1 186;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  }
LocReturn 042630:
  PushStack call_result;
  TraceOperation 042636 (Jz (Var Sp) (Branch T (Dloc 042669)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042669
  } else {
    TraceOperation 042639 (Store (Con 226) (Con 0));
    SetByte 008328 0;
    SetByte 008329 0;
    TraceOperation 042642 (Clear_attr (Con 186) (Con 27));
    Let b2 = M[002428];
    SetByte 002428 ClearBit(b2,4);
    TraceOperation 042645 (Print "(unplugging the spare drive first)");
    GamePrint "(unplugging the spare drive first)";
    TraceOperation 042668 New_line;
    GamePrint "\n";
    Jump: 042669
  }
LocOp 042669:
  TraceOperation 042669 (Call (Floc 043674) [Con 186,Con 182] Sp);
  PushFrame;
  PushReturnAddress 042669;
  SetLocal 1 186;
  SetLocal 2 182;
  MakeRoutineFrame 2;
  Jump: 043679
LocReturn 042669:
  PushStack call_result;
  TraceOperation 042676 (Jz (Var Sp) (Branch T (Dloc 042711)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 042711
  } else {
    TraceOperation 042679 (Jz (Var (Global 209)) (Branch T (Dloc 042711)));
    Let b2 = M[008326];
    Let b3 = M[008327];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 042711
    } else {
      TraceOperation 042682 (Store (Con 225) (Con 0));
      SetByte 008326 0;
      SetByte 008327 0;
      TraceOperation 042685 (Print "(disconnecting the short cord first)");
      GamePrint "(disconnecting the short cord first)";
      TraceOperation 042710 New_line;
      GamePrint "\n";
      Jump: 042711
    }
  }
LocOp 042711:
  TraceOperation 042711 (Call (Floc 043674) [Var (Global 208),Con 182] Sp);
  Let b1 = M[008324];
  Let b2 = M[008325];
  PushFrame;
  PushReturnAddress 042711;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 182;
  MakeRoutineFrame 2;
  Jump: 043679
LocReturn 042711:
  PushStack call_result;
  TraceOperation 042718 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 042721 (Jz (Var (Global 208)) (Branch T Dfalse));
    Let b3 = M[008324];
    Let b4 = M[008325];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 042724 (Store (Con 224) (Con 0));
      SetByte 008324 0;
      SetByte 008325 0;
      TraceOperation 042727 (Call (Floc 057820) [] Sp);
      PushFrame;
      PushReturnAddress 042727;
      MakeRoutineFrame 0;
      Jump: 057821
    }
  }
LocReturn 042727:
  PushStack call_result;
  TraceOperation 042732 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 042734:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 042737
LocOp 042737:
  TraceOperation 042737 (Print_paddr (Var (Local 1)));
  GetLocal 1 local1_1;
  GamePrint GetText(PackedAddress Z3(local1_1));
  TraceOperation 042739 (Jz (Var (Global 75)) (Branch T (Dloc 043255)));
  Let b2 = M[008058];
  Let b3 = M[008059];
  if (IsZero(MakeHiLo(b2,b3))) {
    Jump: 043255
  } else {
    TraceOperation 042743 (Print " Everything becomes...");
    GamePrint " Everything becomes...";
    TraceOperation 042762 New_line;
    GamePrint "\n";
    TraceOperation 042763 New_line;
    GamePrint "\n";
    TraceOperation 042764 (Je [Var (Global 120),Con 142] (Branch F (Dloc 042867)));
    Let b4 = M[008148];
    Let b5 = M[008149];
    if (Equal(MakeHiLo(b4,b5),142)) {
      TraceOperation 042769 (Call (Floc 043644) [Con 31,Con 219] Sp);
      PushFrame;
      PushReturnAddress 042769;
      SetLocal 1 31;
      SetLocal 2 219;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 043653
    } else {
      Jump: 042867
    }
  }
LocReturn 042769:
  PushStack call_result;
  TraceOperation 042776 (Loadw (Var (Global 123)) (Con 4) Sp);
  Let b1 = M[008154];
  Let b2 = M[008155];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),8)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),8),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 042780 (Jz (Var Sp) (Branch T (Dloc 042786)));
  PopStack popped5;
  if (IsZero(popped5)) {
    Jump: 042786
  } else {
    TraceOperation 042783 (Set_attr (Con 7) (Con 3));
    Let b6 = M[000814];
    SetByte 000814 SetBit(b6,4);
    Jump: 042786
  }
LocOp 042786:
  TraceOperation 042786 (Call (Floc 043644) [Con 97,Con 31] Sp);
  PushFrame;
  PushReturnAddress 042786;
  SetLocal 1 97;
  SetLocal 2 31;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 043653
LocReturn 042786:
  PushStack call_result;
  TraceOperation 042793 (Loadw (Var (Global 123)) (Con 0) Sp);
  Let b1 = M[008154];
  Let b2 = M[008155];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),0)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),0),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 042797 (Insert_obj (Con 141) (Var Sp));
  PopStack popped5;
  Let b6 = M[002024];
  if (IsZero(Widen(b6))) {} else {
    Let b7 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
    if (Equal(Widen(b7),141)) {
      Let b8 = M[002025];
      SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b8));
    } else {
      Let loop_var9 = Widen(b7);
      Label 10: {
        Let b11 = M[Offset(Offset(000751,Mul(loop_var9,9)),5)];
        if (Equal(Widen(b11),141)) {
          Let b12 = M[002025];
          SetByte Offset(Offset(000751,Mul(loop_var9,9)),5) LoByte(Widen(b12));
        } else {
          Assign loop_var9 = Widen(b11);
          Goto: Label 10
        }
      }
    }
  }
  SetByte 002024 LoByte(popped5);
  Let b13 = M[Offset(Offset(000751,Mul(popped5,9)),6)];
  SetByte 002025 LoByte(Widen(b13));
  SetByte Offset(Offset(000751,Mul(popped5,9)),6) 141;
  TraceOperation 042800 (Loadw (Var (Global 123)) (Con 1) Sp);
  Let b14 = M[008154];
  Let b15 = M[008155];
  Let b16 = M[Offset(Address(MakeHiLo(b14,b15)),2)];
  Let b17 = M[Offset(Offset(Address(MakeHiLo(b14,b15)),2),1)];
  PushStack MakeHiLo(b16,b17);
  TraceOperation 042804 (Insert_obj (Con 7) (Var Sp));
  PopStack popped18;
  Let b19 = M[000818];
  if (IsZero(Widen(b19))) {} else {
    Let b20 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
    if (Equal(Widen(b20),7)) {
      Let b21 = M[000819];
      SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b21));
    } else {
      Let loop_var22 = Widen(b20);
      Label 23: {
        Let b24 = M[Offset(Offset(000751,Mul(loop_var22,9)),5)];
        if (Equal(Widen(b24),7)) {
          Let b25 = M[000819];
          SetByte Offset(Offset(000751,Mul(loop_var22,9)),5) LoByte(Widen(b25));
        } else {
          Assign loop_var22 = Widen(b24);
          Goto: Label 23
        }
      }
    }
  }
  SetByte 000818 LoByte(popped18);
  Let b26 = M[Offset(Offset(000751,Mul(popped18,9)),6)];
  SetByte 000819 LoByte(Widen(b26));
  SetByte Offset(Offset(000751,Mul(popped18,9)),6) 7;
  TraceOperation 042807 (Loadw (Var (Global 123)) (Con 2) Sp);
  Let b27 = M[008154];
  Let b28 = M[008155];
  Let b29 = M[Offset(Address(MakeHiLo(b27,b28)),4)];
  Let b30 = M[Offset(Offset(Address(MakeHiLo(b27,b28)),4),1)];
  PushStack MakeHiLo(b29,b30);
  TraceOperation 042811 (Insert_obj (Con 1) (Var Sp));
  PopStack popped31;
  Let b32 = M[000764];
  if (IsZero(Widen(b32))) {} else {
    Let b33 = M[Offset(Offset(000751,Mul(Widen(b32),9)),6)];
    if (Equal(Widen(b33),1)) {
      Let b34 = M[000765];
      SetByte Offset(Offset(000751,Mul(Widen(b32),9)),6) LoByte(Widen(b34));
    } else {
      Let loop_var35 = Widen(b33);
      Label 36: {
        Let b37 = M[Offset(Offset(000751,Mul(loop_var35,9)),5)];
        if (Equal(Widen(b37),1)) {
          Let b38 = M[000765];
          SetByte Offset(Offset(000751,Mul(loop_var35,9)),5) LoByte(Widen(b38));
        } else {
          Assign loop_var35 = Widen(b37);
          Goto: Label 36
        }
      }
    }
  }
  SetByte 000764 LoByte(popped31);
  Let b39 = M[Offset(Offset(000751,Mul(popped31,9)),6)];
  SetByte 000765 LoByte(Widen(b39));
  SetByte Offset(Offset(000751,Mul(popped31,9)),6) 1;
  TraceOperation 042814 (Loadw (Var (Global 123)) (Con 3) Sp);
  Let b40 = M[008154];
  Let b41 = M[008155];
  Let b42 = M[Offset(Address(MakeHiLo(b40,b41)),6)];
  Let b43 = M[Offset(Offset(Address(MakeHiLo(b40,b41)),6),1)];
  PushStack MakeHiLo(b42,b43);
  TraceOperation 042818 (Insert_obj (Con 139) (Var Sp));
  PopStack popped44;
  Let b45 = M[002006];
  if (IsZero(Widen(b45))) {} else {
    Let b46 = M[Offset(Offset(000751,Mul(Widen(b45),9)),6)];
    if (Equal(Widen(b46),139)) {
      Let b47 = M[002007];
      SetByte Offset(Offset(000751,Mul(Widen(b45),9)),6) LoByte(Widen(b47));
    } else {
      Let loop_var48 = Widen(b46);
      Label 49: {
        Let b50 = M[Offset(Offset(000751,Mul(loop_var48,9)),5)];
        if (Equal(Widen(b50),139)) {
          Let b51 = M[002007];
          SetByte Offset(Offset(000751,Mul(loop_var48,9)),5) LoByte(Widen(b51));
        } else {
          Assign loop_var48 = Widen(b50);
          Goto: Label 49
        }
      }
    }
  }
  SetByte 002006 LoByte(popped44);
  Let b52 = M[Offset(Offset(000751,Mul(popped44,9)),6)];
  SetByte 002007 LoByte(Widen(b52));
  SetByte Offset(Offset(000751,Mul(popped44,9)),6) 139;
  TraceOperation 042821 (Loadw (Var (Global 123)) (Con 5) Sp);
  Let b53 = M[008154];
  Let b54 = M[008155];
  Let b55 = M[Offset(Address(MakeHiLo(b53,b54)),10)];
  Let b56 = M[Offset(Offset(Address(MakeHiLo(b53,b54)),10),1)];
  PushStack MakeHiLo(b55,b56);
  TraceOperation 042825 (Insert_obj (Con 122) (Var Sp));
  PopStack popped57;
  Let b58 = M[001853];
  if (IsZero(Widen(b58))) {} else {
    Let b59 = M[Offset(Offset(000751,Mul(Widen(b58),9)),6)];
    if (Equal(Widen(b59),122)) {
      Let b60 = M[001854];
      SetByte Offset(Offset(000751,Mul(Widen(b58),9)),6) LoByte(Widen(b60));
    } else {
      Let loop_var61 = Widen(b59);
      Label 62: {
        Let b63 = M[Offset(Offset(000751,Mul(loop_var61,9)),5)];
        if (Equal(Widen(b63),122)) {
          Let b64 = M[001854];
          SetByte Offset(Offset(000751,Mul(loop_var61,9)),5) LoByte(Widen(b64));
        } else {
          Assign loop_var61 = Widen(b63);
          Goto: Label 62
        }
      }
    }
  }
  SetByte 001853 LoByte(popped57);
  Let b65 = M[Offset(Offset(000751,Mul(popped57,9)),6)];
  SetByte 001854 LoByte(Widen(b65));
  SetByte Offset(Offset(000751,Mul(popped57,9)),6) 122;
  TraceOperation 042828 (Test_attr (Con 137) (Con 4) (Branch T (Dloc 042835)));
  Let b66 = M[001984];
  if (TestBit(b66,3)) {
    Jump: 042835
  } else {
    TraceOperation 042832 (Insert_obj (Con 140) (Con 141));
    Let b67 = M[002015];
    if (IsZero(Widen(b67))) {} else {
      Let b68 = M[Offset(Offset(000751,Mul(Widen(b67),9)),6)];
      if (Equal(Widen(b68),140)) {
        Let b69 = M[002016];
        SetByte Offset(Offset(000751,Mul(Widen(b67),9)),6) LoByte(Widen(b69));
      } else {
        Let loop_var70 = Widen(b68);
        Label 71: {
          Let b72 = M[Offset(Offset(000751,Mul(loop_var70,9)),5)];
          if (Equal(Widen(b72),140)) {
            Let b73 = M[002016];
            SetByte Offset(Offset(000751,Mul(loop_var70,9)),5) LoByte(Widen(b73));
          } else {
            Assign loop_var70 = Widen(b72);
            Goto: Label 71
          }
        }
      }
    }
    SetByte 002015 141;
    Let b74 = M[002026];
    SetByte 002016 LoByte(Widen(b74));
    SetByte 002026 140;
    Jump: 042835
  }
LocOp 042835:
  TraceOperation 042835 (Clear_attr (Con 141) (Con 23));
  Let b1 = M[002022];
  SetByte 002022 ClearBit(b1,0);
  TraceOperation 042838 (Clear_attr (Con 137) (Con 27));
  Let b2 = M[001987];
  SetByte 001987 ClearBit(b2,4);
  TraceOperation 042841 (Store (Con 147) (Con 0));
  SetByte 008170 0;
  SetByte 008171 0;
  TraceOperation 042844 (Store (Con 154) (Con 0));
  SetByte 008184 0;
  SetByte 008185 0;
  TraceOperation 042847 (Call (Floc 022340) [Con -27122] Sp);
  PushFrame;
  PushReturnAddress 042847;
  SetLocal 1 -27122;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 042847:
  PushStack call_result;
  TraceOperation 042854 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 042859 (Call (Floc 075134) [] Sp);
  PushFrame;
  PushReturnAddress 042859;
  MakeRoutineFrame 0;
  Jump: 075135
LocReturn 042859:
  PushStack call_result;
  TraceOperation 042864 (Jump 043239);
  Jump: 043239
LocOp 042867:
  TraceOperation 042867 (Je [Var (Global 120),Con 194] (Branch F (Dloc 042995)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),194)) {
    TraceOperation 042872 (Loadw (Var (Global 94)) (Con 0) Sp);
    Let b3 = M[008096];
    Let b4 = M[008097];
    Let b5 = M[Offset(Address(MakeHiLo(b3,b4)),0)];
    Let b6 = M[Offset(Offset(Address(MakeHiLo(b3,b4)),0),1)];
    PushStack MakeHiLo(b5,b6);
    TraceOperation 042876 (Insert_obj (Con 193) (Var Sp));
    PopStack popped7;
    Let b8 = M[002492];
    if (IsZero(Widen(b8))) {} else {
      Let b9 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
      if (Equal(Widen(b9),193)) {
        Let b10 = M[002493];
        SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b10));
      } else {
        Let loop_var11 = Widen(b9);
        Label 12: {
          Let b13 = M[Offset(Offset(000751,Mul(loop_var11,9)),5)];
          if (Equal(Widen(b13),193)) {
            Let b14 = M[002493];
            SetByte Offset(Offset(000751,Mul(loop_var11,9)),5) LoByte(Widen(b14));
          } else {
            Assign loop_var11 = Widen(b13);
            Goto: Label 12
          }
        }
      }
    }
    SetByte 002492 LoByte(popped7);
    Let b15 = M[Offset(Offset(000751,Mul(popped7,9)),6)];
    SetByte 002493 LoByte(Widen(b15));
    SetByte Offset(Offset(000751,Mul(popped7,9)),6) 193;
    TraceOperation 042879 (Jin (Con 13) (Con 193) (Branch F (Dloc 042890)));
    Let b16 = M[000872];
    if (Equal(193,Widen(b16))) {
      TraceOperation 042883 (Loadw (Var (Global 94)) (Con 1) Sp);
      Let b17 = M[008096];
      Let b18 = M[008097];
      Let b19 = M[Offset(Address(MakeHiLo(b17,b18)),2)];
      Let b20 = M[Offset(Offset(Address(MakeHiLo(b17,b18)),2),1)];
      PushStack MakeHiLo(b19,b20);
      TraceOperation 042887 (Insert_obj (Con 13) (Var Sp));
      PopStack popped21;
      Let b22 = M[000872];
      if (IsZero(Widen(b22))) {} else {
        Let b23 = M[Offset(Offset(000751,Mul(Widen(b22),9)),6)];
        if (Equal(Widen(b23),13)) {
          Let b24 = M[000873];
          SetByte Offset(Offset(000751,Mul(Widen(b22),9)),6) LoByte(Widen(b24));
        } else {
          Let loop_var25 = Widen(b23);
          Label 26: {
            Let b27 = M[Offset(Offset(000751,Mul(loop_var25,9)),5)];
            if (Equal(Widen(b27),13)) {
              Let b28 = M[000873];
              SetByte Offset(Offset(000751,Mul(loop_var25,9)),5) LoByte(Widen(b28));
            } else {
              Assign loop_var25 = Widen(b27);
              Goto: Label 26
            }
          }
        }
      }
      SetByte 000872 LoByte(popped21);
      Let b29 = M[Offset(Offset(000751,Mul(popped21,9)),6)];
      SetByte 000873 LoByte(Widen(b29));
      SetByte Offset(Offset(000751,Mul(popped21,9)),6) 13;
      Jump: 042890
    } else {
      Jump: 042890
    }
  } else {
    Jump: 042995
  }
LocOp 042890:
  TraceOperation 042890 (Loadw (Var (Global 94)) (Con 2) Sp);
  Let b1 = M[008096];
  Let b2 = M[008097];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),4)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),4),1)];
  PushStack MakeHiLo(b3,b4);
  TraceOperation 042894 (Jz (Var Sp) (Branch T (Dloc 042903)));
  PopStack popped5;
  if (IsZero(popped5)) {
    Jump: 042903
  } else {
    TraceOperation 042897 (Set_attr (Con 193) (Con 23));
    Let b6 = M[002490];
    SetByte 002490 SetBit(b6,0);
    TraceOperation 042900 (Jump 042906);
    Jump: 042906
  }
LocOp 042903:
  TraceOperation 042903 (Clear_attr (Con 193) (Con 23));
  Let b1 = M[002490];
  SetByte 002490 ClearBit(b1,0);
  Jump: 042906
LocOp 042906:
  TraceOperation 042906 (Test_attr (Con 76) (Con 4) (Branch T (Dloc 042925)));
  Let b1 = M[001435];
  if (TestBit(b1,3)) {
    Jump: 042925
  } else {
    TraceOperation 042910 (Insert_obj (Con 69) (Con 219));
    Let b2 = M[001376];
    if (IsZero(Widen(b2))) {} else {
      Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b3),69)) {
        Let b4 = M[001377];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
      } else {
        Let loop_var5 = Widen(b3);
        Label 6: {
          Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
          if (Equal(Widen(b7),69)) {
            Let b8 = M[001377];
            SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
          } else {
            Assign loop_var5 = Widen(b7);
            Goto: Label 6
          }
        }
      }
    }
    SetByte 001376 219;
    Let b9 = M[002728];
    SetByte 001377 LoByte(Widen(b9));
    SetByte 002728 69;
    TraceOperation 042913 (Set_attr (Con 69) (Con 21));
    Let b10 = M[001374];
    SetByte 001374 SetBit(b10,2);
    TraceOperation 042916 (Set_attr (Con 69) (Con 27));
    Let b11 = M[001375];
    SetByte 001375 SetBit(b11,4);
    TraceOperation 042919 (Store (Con 111) (Con 0));
    SetByte 008098 0;
    SetByte 008099 0;
    TraceOperation 042922 (Clear_attr (Con 70) (Con 27));
    Let b12 = M[001384];
    SetByte 001384 ClearBit(b12,4);
    Jump: 042925
  }
LocOp 042925:
  TraceOperation 042925 (Call (Floc 043644) [Con 174,Con 193] Sp);
  PushFrame;
  PushReturnAddress 042925;
  SetLocal 1 174;
  SetLocal 2 193;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 043653
LocReturn 042925:
  PushStack call_result;
  TraceOperation 042932 (Clear_attr (Con 76) (Con 5));
  Let b1 = M[001435];
  SetByte 001435 ClearBit(b1,2);
  TraceOperation 042935 (Clear_attr (Con 193) (Con 27));
  Let b2 = M[002491];
  SetByte 002491 ClearBit(b2,4);
  TraceOperation 042938 (Clear_attr (Con 72) (Con 27));
  Let b3 = M[001402];
  SetByte 001402 ClearBit(b3,4);
  TraceOperation 042941 (Clear_attr (Con 71) (Con 27));
  Let b4 = M[001393];
  SetByte 001393 ClearBit(b4,4);
  TraceOperation 042944 (Insert_obj (Con 72) (Con 219));
  Let b5 = M[001403];
  if (IsZero(Widen(b5))) {} else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b6),72)) {
      Let b7 = M[001404];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
    } else {
      Let loop_var8 = Widen(b6);
      Label 9: {
        Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
        if (Equal(Widen(b10),72)) {
          Let b11 = M[001404];
          SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
        } else {
          Assign loop_var8 = Widen(b10);
          Goto: Label 9
        }
      }
    }
  }
  SetByte 001403 219;
  Let b12 = M[002728];
  SetByte 001404 LoByte(Widen(b12));
  SetByte 002728 72;
  TraceOperation 042947 (Insert_obj (Con 71) (Con 219));
  Let b13 = M[001394];
  if (IsZero(Widen(b13))) {} else {
    Let b14 = M[Offset(Offset(000751,Mul(Widen(b13),9)),6)];
    if (Equal(Widen(b14),71)) {
      Let b15 = M[001395];
      SetByte Offset(Offset(000751,Mul(Widen(b13),9)),6) LoByte(Widen(b15));
    } else {
      Let loop_var16 = Widen(b14);
      Label 17: {
        Let b18 = M[Offset(Offset(000751,Mul(loop_var16,9)),5)];
        if (Equal(Widen(b18),71)) {
          Let b19 = M[001395];
          SetByte Offset(Offset(000751,Mul(loop_var16,9)),5) LoByte(Widen(b19));
        } else {
          Assign loop_var16 = Widen(b18);
          Goto: Label 17
        }
      }
    }
  }
  SetByte 001394 219;
  Let b20 = M[002728];
  SetByte 001395 LoByte(Widen(b20));
  SetByte 002728 71;
  TraceOperation 042950 (Store (Con 94) (Con 10));
  SetByte 008064 0;
  SetByte 008065 10;
  TraceOperation 042953 (Store (Con 112) (Con 0));
  SetByte 008100 0;
  SetByte 008101 0;
  TraceOperation 042956 (Call (Floc 022340) [Con -27122] Sp);
  PushFrame;
  PushReturnAddress 042956;
  SetLocal 1 -27122;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 042956:
  PushStack call_result;
  TraceOperation 042963 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 042968 (Call (Floc 022340) [Con -14685] Sp);
  PushFrame;
  PushReturnAddress 042968;
  SetLocal 1 -14685;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 042968:
  PushStack call_result;
  TraceOperation 042975 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 042980 (Call (Floc 022340) [Con -20734] Sp);
  PushFrame;
  PushReturnAddress 042980;
  SetLocal 1 -20734;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 042980:
  PushStack call_result;
  TraceOperation 042987 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 042992 (Jump 043239);
  Jump: 043239
LocOp 042995:
  TraceOperation 042995 (Je [Var (Global 120),Con 195] (Branch F (Dloc 043074)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),195)) {
    TraceOperation 043000 (Store (Con 106) (Con 0));
    SetByte 008088 0;
    SetByte 008089 0;
    TraceOperation 043003 (Store (Con 108) (Con 0));
    SetByte 008092 0;
    SetByte 008093 0;
    TraceOperation 043006 (Store (Con 109) (Con 0));
    SetByte 008094 0;
    SetByte 008095 0;
    TraceOperation 043009 (Store (Con 104) (Con 0));
    SetByte 008084 0;
    SetByte 008085 0;
    TraceOperation 043012 (Insert_obj (Con 27) (Con 219));
    Let b3 = M[000998];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),27)) {
        Let b5 = M[000999];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),27)) {
            Let b9 = M[000999];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 000998 219;
    Let b10 = M[002728];
    SetByte 000999 LoByte(Widen(b10));
    SetByte 002728 27;
    TraceOperation 043015 (Insert_obj (Con 52) (Con 219));
    Let b11 = M[001223];
    if (IsZero(Widen(b11))) {} else {
      Let b12 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
      if (Equal(Widen(b12),52)) {
        Let b13 = M[001224];
        SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b13));
      } else {
        Let loop_var14 = Widen(b12);
        Label 15: {
          Let b16 = M[Offset(Offset(000751,Mul(loop_var14,9)),5)];
          if (Equal(Widen(b16),52)) {
            Let b17 = M[001224];
            SetByte Offset(Offset(000751,Mul(loop_var14,9)),5) LoByte(Widen(b17));
          } else {
            Assign loop_var14 = Widen(b16);
            Goto: Label 15
          }
        }
      }
    }
    SetByte 001223 219;
    Let b18 = M[002728];
    SetByte 001224 LoByte(Widen(b18));
    SetByte 002728 52;
    TraceOperation 043018 (Insert_obj (Con 51) (Con 219));
    Let b19 = M[001214];
    if (IsZero(Widen(b19))) {} else {
      Let b20 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
      if (Equal(Widen(b20),51)) {
        Let b21 = M[001215];
        SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b21));
      } else {
        Let loop_var22 = Widen(b20);
        Label 23: {
          Let b24 = M[Offset(Offset(000751,Mul(loop_var22,9)),5)];
          if (Equal(Widen(b24),51)) {
            Let b25 = M[001215];
            SetByte Offset(Offset(000751,Mul(loop_var22,9)),5) LoByte(Widen(b25));
          } else {
            Assign loop_var22 = Widen(b24);
            Goto: Label 23
          }
        }
      }
    }
    SetByte 001214 219;
    Let b26 = M[002728];
    SetByte 001215 LoByte(Widen(b26));
    SetByte 002728 51;
    TraceOperation 043021 (Clear_attr (Con 66) (Con 5));
    Let b27 = M[001345];
    SetByte 001345 ClearBit(b27,2);
    TraceOperation 043024 (Set_attr (Con 51) (Con 27));
    Let b28 = M[001213];
    SetByte 001213 SetBit(b28,4);
    TraceOperation 043027 (Call (Floc 022340) [Con -25112] Sp);
    PushFrame;
    PushReturnAddress 043027;
    SetLocal 1 -25112;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    Jump: 043074
  }
LocReturn 043027:
  PushStack call_result;
  TraceOperation 043034 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 043039 (Call (Floc 022340) [Con -20422] Sp);
  PushFrame;
  PushReturnAddress 043039;
  SetLocal 1 -20422;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 043039:
  PushStack call_result;
  TraceOperation 043046 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 043051 (Test_attr (Con 66) (Con 4) (Branch T (Dloc 043064)));
  Let b2 = M[001345];
  if (TestBit(b2,3)) {
    Jump: 043064
  } else {
    TraceOperation 043055 (Insert_obj (Con 60) (Con 66));
    Let b3 = M[001295];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),60)) {
        Let b5 = M[001296];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),60)) {
            Let b9 = M[001296];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 001295 66;
    Let b10 = M[001351];
    SetByte 001296 LoByte(Widen(b10));
    SetByte 001351 60;
    TraceOperation 043058 (Insert_obj (Con 61) (Con 219));
    Let b11 = M[001304];
    if (IsZero(Widen(b11))) {} else {
      Let b12 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
      if (Equal(Widen(b12),61)) {
        Let b13 = M[001305];
        SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b13));
      } else {
        Let loop_var14 = Widen(b12);
        Label 15: {
          Let b16 = M[Offset(Offset(000751,Mul(loop_var14,9)),5)];
          if (Equal(Widen(b16),61)) {
            Let b17 = M[001305];
            SetByte Offset(Offset(000751,Mul(loop_var14,9)),5) LoByte(Widen(b17));
          } else {
            Assign loop_var14 = Widen(b16);
            Goto: Label 15
          }
        }
      }
    }
    SetByte 001304 219;
    Let b18 = M[002728];
    SetByte 001305 LoByte(Widen(b18));
    SetByte 002728 61;
    TraceOperation 043061 (Insert_obj (Con 62) (Con 219));
    Let b19 = M[001313];
    if (IsZero(Widen(b19))) {} else {
      Let b20 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
      if (Equal(Widen(b20),62)) {
        Let b21 = M[001314];
        SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b21));
      } else {
        Let loop_var22 = Widen(b20);
        Label 23: {
          Let b24 = M[Offset(Offset(000751,Mul(loop_var22,9)),5)];
          if (Equal(Widen(b24),62)) {
            Let b25 = M[001314];
            SetByte Offset(Offset(000751,Mul(loop_var22,9)),5) LoByte(Widen(b25));
          } else {
            Assign loop_var22 = Widen(b24);
            Goto: Label 23
          }
        }
      }
    }
    SetByte 001313 219;
    Let b26 = M[002728];
    SetByte 001314 LoByte(Widen(b26));
    SetByte 002728 62;
    Jump: 043064
  }
LocOp 043064:
  TraceOperation 043064 (Call (Floc 043644) [Con 31,Con 219] Sp);
  PushFrame;
  PushReturnAddress 043064;
  SetLocal 1 31;
  SetLocal 2 219;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 043653
LocReturn 043064:
  PushStack call_result;
  TraceOperation 043071 (Jump 043239);
  Jump: 043239
LocOp 043074:
  TraceOperation 043074 (Je [Var (Global 0),Con 213] (Branch F (Dloc 043133)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),213)) {
    TraceOperation 043078 (Call (Floc 043644) [Con 213,Con 166] Sp);
    PushFrame;
    PushReturnAddress 043078;
    SetLocal 1 213;
    SetLocal 2 166;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 043653
  } else {
    Jump: 043133
  }
LocReturn 043078:
  PushStack call_result;
  TraceOperation 043085 (Insert_obj (Con 50) (Con 213));
  Let b1 = M[001205];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),50)) {
      Let b3 = M[001206];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),50)) {
          Let b7 = M[001206];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 001205 213;
  Let b8 = M[002674];
  SetByte 001206 LoByte(Widen(b8));
  SetByte 002674 50;
  TraceOperation 043088 (Call (Floc 043468) [Con 214,Con 156] Sp);
  PushFrame;
  PushReturnAddress 043088;
  SetLocal 1 214;
  SetLocal 2 156;
  MakeRoutineFrame 2;
  Jump: 043473
LocReturn 043088:
  PushStack call_result;
  TraceOperation 043095 (Jz (Var Sp) (Branch F (Dloc 043101)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 043098 (Insert_obj (Con 214) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[002681];
    if (IsZero(Widen(b4))) {} else {
      Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b5),214)) {
        Let b6 = M[002682];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
      } else {
        Let loop_var7 = Widen(b5);
        Label 8: {
          Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
          if (Equal(Widen(b9),214)) {
            Let b10 = M[002682];
            SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
          } else {
            Assign loop_var7 = Widen(b9);
            Goto: Label 8
          }
        }
      }
    }
    SetByte 002681 b3;
    Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    SetByte 002682 LoByte(Widen(b11));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 214;
    Jump: 043101
  } else {
    Jump: 043101
  }
LocOp 043101:
  TraceOperation 043101 (Call (Floc 043644) [Con 31,Con 166] Sp);
  PushFrame;
  PushReturnAddress 043101;
  SetLocal 1 31;
  SetLocal 2 166;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 043653
LocReturn 043101:
  PushStack call_result;
  TraceOperation 043108 (Clear_attr (Con 213) (Con 5));
  Let b1 = M[002668];
  SetByte 002668 ClearBit(b1,2);
  TraceOperation 043111 (Jin (Con 158) (Con 166) (Branch F (Dloc 043122)));
  Let b2 = M[002177];
  if (Equal(166,Widen(b2))) {
    TraceOperation 043115 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 043122)));
    Let b3 = M[002174];
    if (TestBit(b3,6)) {
      TraceOperation 043119 (Insert_obj (Con 158) (Con 31));
      Let b4 = M[002177];
      if (IsZero(Widen(b4))) {} else {
        Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
        if (Equal(Widen(b5),158)) {
          Let b6 = M[002178];
          SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
        } else {
          Let loop_var7 = Widen(b5);
          Label 8: {
            Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
            if (Equal(Widen(b9),158)) {
              Let b10 = M[002178];
              SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
            } else {
              Assign loop_var7 = Widen(b9);
              Goto: Label 8
            }
          }
        }
      }
      SetByte 002177 31;
      Let b11 = M[001036];
      SetByte 002178 LoByte(Widen(b11));
      SetByte 001036 158;
      Jump: 043122
    } else {
      Jump: 043122
    }
  } else {
    Jump: 043122
  }
LocOp 043122:
  TraceOperation 043122 (Jin (Con 111) (Con 166) (Branch F (Dloc 043239)));
  Let b1 = M[001754];
  if (Equal(166,Widen(b1))) {
    TraceOperation 043127 (Insert_obj (Con 111) (Con 31));
    Let b2 = M[001754];
    if (IsZero(Widen(b2))) {} else {
      Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b3),111)) {
        Let b4 = M[001755];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
      } else {
        Let loop_var5 = Widen(b3);
        Label 6: {
          Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
          if (Equal(Widen(b7),111)) {
            Let b8 = M[001755];
            SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
          } else {
            Assign loop_var5 = Widen(b7);
            Goto: Label 6
          }
        }
      }
    }
    SetByte 001754 31;
    Let b9 = M[001036];
    SetByte 001755 LoByte(Widen(b9));
    SetByte 001036 111;
    TraceOperation 043130 (Jump 043239);
    Jump: 043239
  } else {
    Jump: 043239
  }
LocOp 043133:
  TraceOperation 043133 (Je [Var (Global 0),Con 86,Con 81] (Branch F (Dloc 043196)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(Equal(MakeHiLo(b1,b2),86),Equal(MakeHiLo(b1,b2),81))) {
    TraceOperation 043139 (Call (Floc 022340) [Con -30860] Sp);
    PushFrame;
    PushReturnAddress 043139;
    SetLocal 1 -30860;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    Jump: 043196
  }
LocReturn 043139:
  PushStack call_result;
  TraceOperation 043146 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 043151 (Clear_attr (Con 86) (Con 5));
  Let b2 = M[001525];
  SetByte 001525 ClearBit(b2,2);
  TraceOperation 043154 (Insert_obj (Con 163) (Con 219));
  Let b3 = M[002222];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),163)) {
      Let b5 = M[002223];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),163)) {
          Let b9 = M[002223];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 002222 219;
  Let b10 = M[002728];
  SetByte 002223 LoByte(Widen(b10));
  SetByte 002728 163;
  TraceOperation 043157 (Store (Con 115) (Con 0));
  SetByte 008106 0;
  SetByte 008107 0;
  TraceOperation 043160 (Je [Var (Global 0),Con 86] (Branch F (Dloc 043239)));
  Let b11 = M[007908];
  Let b12 = M[007909];
  if (Equal(MakeHiLo(b11,b12),86)) {
    TraceOperation 043165 (Call (Floc 043644) [Con 86,Con 219] Sp);
    PushFrame;
    PushReturnAddress 043165;
    SetLocal 1 86;
    SetLocal 2 219;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 043653
  } else {
    Jump: 043239
  }
LocReturn 043165:
  PushStack call_result;
  TraceOperation 043172 (Insert_obj (Con 15) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[000890];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),15)) {
      Let b5 = M[000891];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),15)) {
          Let b9 = M[000891];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 000890 b2;
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  SetByte 000891 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 15;
  TraceOperation 043175 (Insert_obj (Con 83) (Var (Global 0)));
  Let b11 = M[007908];
  Let b12 = M[007909];
  Let b13 = M[001502];
  if (IsZero(Widen(b13))) {} else {
    Let b14 = M[Offset(Offset(000751,Mul(Widen(b13),9)),6)];
    if (Equal(Widen(b14),83)) {
      Let b15 = M[001503];
      SetByte Offset(Offset(000751,Mul(Widen(b13),9)),6) LoByte(Widen(b15));
    } else {
      Let loop_var16 = Widen(b14);
      Label 17: {
        Let b18 = M[Offset(Offset(000751,Mul(loop_var16,9)),5)];
        if (Equal(Widen(b18),83)) {
          Let b19 = M[001503];
          SetByte Offset(Offset(000751,Mul(loop_var16,9)),5) LoByte(Widen(b19));
        } else {
          Assign loop_var16 = Widen(b18);
          Goto: Label 17
        }
      }
    }
  }
  SetByte 001502 b12;
  Let b20 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6)];
  SetByte 001503 LoByte(Widen(b20));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6) 83;
  TraceOperation 043178 (Insert_obj (Con 84) (Var (Global 0)));
  Let b21 = M[007908];
  Let b22 = M[007909];
  Let b23 = M[001511];
  if (IsZero(Widen(b23))) {} else {
    Let b24 = M[Offset(Offset(000751,Mul(Widen(b23),9)),6)];
    if (Equal(Widen(b24),84)) {
      Let b25 = M[001512];
      SetByte Offset(Offset(000751,Mul(Widen(b23),9)),6) LoByte(Widen(b25));
    } else {
      Let loop_var26 = Widen(b24);
      Label 27: {
        Let b28 = M[Offset(Offset(000751,Mul(loop_var26,9)),5)];
        if (Equal(Widen(b28),84)) {
          Let b29 = M[001512];
          SetByte Offset(Offset(000751,Mul(loop_var26,9)),5) LoByte(Widen(b29));
        } else {
          Assign loop_var26 = Widen(b28);
          Goto: Label 27
        }
      }
    }
  }
  SetByte 001511 b22;
  Let b30 = M[Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),6)];
  SetByte 001512 LoByte(Widen(b30));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b21,b22),9)),6) 84;
  TraceOperation 043181 (Insert_obj (Con 85) (Var (Global 0)));
  Let b31 = M[007908];
  Let b32 = M[007909];
  Let b33 = M[001520];
  if (IsZero(Widen(b33))) {} else {
    Let b34 = M[Offset(Offset(000751,Mul(Widen(b33),9)),6)];
    if (Equal(Widen(b34),85)) {
      Let b35 = M[001521];
      SetByte Offset(Offset(000751,Mul(Widen(b33),9)),6) LoByte(Widen(b35));
    } else {
      Let loop_var36 = Widen(b34);
      Label 37: {
        Let b38 = M[Offset(Offset(000751,Mul(loop_var36,9)),5)];
        if (Equal(Widen(b38),85)) {
          Let b39 = M[001521];
          SetByte Offset(Offset(000751,Mul(loop_var36,9)),5) LoByte(Widen(b39));
        } else {
          Assign loop_var36 = Widen(b38);
          Goto: Label 37
        }
      }
    }
  }
  SetByte 001520 b32;
  Let b40 = M[Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),6)];
  SetByte 001521 LoByte(Widen(b40));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),6) 85;
  TraceOperation 043184 (Insert_obj (Con 87) (Var (Global 0)));
  Let b41 = M[007908];
  Let b42 = M[007909];
  Let b43 = M[001538];
  if (IsZero(Widen(b43))) {} else {
    Let b44 = M[Offset(Offset(000751,Mul(Widen(b43),9)),6)];
    if (Equal(Widen(b44),87)) {
      Let b45 = M[001539];
      SetByte Offset(Offset(000751,Mul(Widen(b43),9)),6) LoByte(Widen(b45));
    } else {
      Let loop_var46 = Widen(b44);
      Label 47: {
        Let b48 = M[Offset(Offset(000751,Mul(loop_var46,9)),5)];
        if (Equal(Widen(b48),87)) {
          Let b49 = M[001539];
          SetByte Offset(Offset(000751,Mul(loop_var46,9)),5) LoByte(Widen(b49));
        } else {
          Assign loop_var46 = Widen(b48);
          Goto: Label 47
        }
      }
    }
  }
  SetByte 001538 b42;
  Let b50 = M[Offset(Offset(000751,Mul(MakeHiLo(b41,b42),9)),6)];
  SetByte 001539 LoByte(Widen(b50));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b41,b42),9)),6) 87;
  TraceOperation 043187 (Insert_obj (Con 82) (Var (Global 0)));
  Let b51 = M[007908];
  Let b52 = M[007909];
  Let b53 = M[001493];
  if (IsZero(Widen(b53))) {} else {
    Let b54 = M[Offset(Offset(000751,Mul(Widen(b53),9)),6)];
    if (Equal(Widen(b54),82)) {
      Let b55 = M[001494];
      SetByte Offset(Offset(000751,Mul(Widen(b53),9)),6) LoByte(Widen(b55));
    } else {
      Let loop_var56 = Widen(b54);
      Label 57: {
        Let b58 = M[Offset(Offset(000751,Mul(loop_var56,9)),5)];
        if (Equal(Widen(b58),82)) {
          Let b59 = M[001494];
          SetByte Offset(Offset(000751,Mul(loop_var56,9)),5) LoByte(Widen(b59));
        } else {
          Assign loop_var56 = Widen(b58);
          Goto: Label 57
        }
      }
    }
  }
  SetByte 001493 b52;
  Let b60 = M[Offset(Offset(000751,Mul(MakeHiLo(b51,b52),9)),6)];
  SetByte 001494 LoByte(Widen(b60));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b51,b52),9)),6) 82;
  TraceOperation 043190 (Clear_attr (Con 84) (Con 3));
  Let b61 = M[001507];
  SetByte 001507 ClearBit(b61,4);
  TraceOperation 043193 (Jump 043239);
  Jump: 043239
LocOp 043196:
  TraceOperation 043196 (Je [Var (Global 0),Con 99,Con 90,Con 98] (Branch F (Dloc 043239)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),99),Equal(MakeHiLo(b1,b2),90)),Equal(MakeHiLo(b1,b2),98))) {
    TraceOperation 043203 (Clear_attr (Con 95) (Con 3));
    Let b3 = M[001606];
    SetByte 001606 ClearBit(b3,4);
    TraceOperation 043206 (Store (Con 117) (Con 0));
    SetByte 008110 0;
    SetByte 008111 0;
    TraceOperation 043209 (Store (Con 118) (Con 0));
    SetByte 008112 0;
    SetByte 008113 0;
    TraceOperation 043212 (Store (Con 119) (Con 0));
    SetByte 008114 0;
    SetByte 008115 0;
    TraceOperation 043215 (Clear_attr (Con 139) (Con 9));
    Let b4 = M[002003];
    SetByte 002003 ClearBit(b4,6);
    TraceOperation 043218 (Clear_attr (Con 99) (Con 27));
    Let b5 = M[001645];
    SetByte 001645 ClearBit(b5,4);
    TraceOperation 043221 (Insert_obj (Con 96) (Con 98));
    Let b6 = M[001619];
    if (IsZero(Widen(b6))) {} else {
      Let b7 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
      if (Equal(Widen(b7),96)) {
        Let b8 = M[001620];
        SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b8));
      } else {
        Let loop_var9 = Widen(b7);
        Label 10: {
          Let b11 = M[Offset(Offset(000751,Mul(loop_var9,9)),5)];
          if (Equal(Widen(b11),96)) {
            Let b12 = M[001620];
            SetByte Offset(Offset(000751,Mul(loop_var9,9)),5) LoByte(Widen(b12));
          } else {
            Assign loop_var9 = Widen(b11);
            Goto: Label 10
          }
        }
      }
    }
    SetByte 001619 98;
    Let b13 = M[001639];
    SetByte 001620 LoByte(Widen(b13));
    SetByte 001639 96;
    TraceOperation 043224 (Insert_obj (Con 95) (Con 99));
    Let b14 = M[001610];
    if (IsZero(Widen(b14))) {} else {
      Let b15 = M[Offset(Offset(000751,Mul(Widen(b14),9)),6)];
      if (Equal(Widen(b15),95)) {
        Let b16 = M[001611];
        SetByte Offset(Offset(000751,Mul(Widen(b14),9)),6) LoByte(Widen(b16));
      } else {
        Let loop_var17 = Widen(b15);
        Label 18: {
          Let b19 = M[Offset(Offset(000751,Mul(loop_var17,9)),5)];
          if (Equal(Widen(b19),95)) {
            Let b20 = M[001611];
            SetByte Offset(Offset(000751,Mul(loop_var17,9)),5) LoByte(Widen(b20));
          } else {
            Assign loop_var17 = Widen(b19);
            Goto: Label 18
          }
        }
      }
    }
    SetByte 001610 99;
    Let b21 = M[001648];
    SetByte 001611 LoByte(Widen(b21));
    SetByte 001648 95;
    TraceOperation 043227 (Call (Floc 022340) [Con -22735] Sp);
    PushFrame;
    PushReturnAddress 043227;
    SetLocal 1 -22735;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    Jump: 043239
  }
LocReturn 043227:
  PushStack call_result;
  TraceOperation 043234 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  Jump: 043239
LocOp 043239:
  TraceOperation 043239 (Store (Con 231) (Con 0));
  SetByte 008338 0;
  SetByte 008339 0;
  TraceOperation 043242 (Insert_obj (Con 187) (Con 169));
  Let b1 = M[002438];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),187)) {
      Let b3 = M[002439];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),187)) {
          Let b7 = M[002439];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002438 169;
  Let b8 = M[002278];
  SetByte 002439 LoByte(Widen(b8));
  SetByte 002278 187;
  TraceOperation 043245 (Store (Con 98) (Con 100));
  SetByte 008072 0;
  SetByte 008073 100;
  TraceOperation 043248 (Call (Floc 042574) [Con 25] Sp);
  PushFrame;
  PushReturnAddress 043248;
  SetLocal 1 25;
  MakeRoutineFrame 2;
  SetLocal 2 1;
  Jump: 042579
LocReturn 043248:
  PushStack call_result;
  TraceOperation 043254 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 043255:
  TraceOperation 043255 New_line;
  GamePrint "\n";
  TraceOperation 043256 New_line;
  GamePrint "\n";
  TraceOperation 043257 (Print "    ****  You have died  ****");
  GamePrint "    ****  You have died  ****";
  TraceOperation 043290 New_line;
  GamePrint "\n";
  TraceOperation 043291 New_line;
  GamePrint "\n";
  TraceOperation 043292 (Call (Floc 028948) [] Sp);
  PushFrame;
  PushReturnAddress 043292;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 028951
LocReturn 043292:
  PushStack call_result;
  TraceOperation 043297 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 043298:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 043303
LocOp 043303:
  TraceOperation 043303 (Get_parent (Var (Local 1)) (Local 2));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),4)];
  SetLocal 2 Widen(b2);
  TraceOperation 043306 (Test_attr (Var (Local 1)) (Con 6) (Branch T Dfalse));
  GetLocal 1 local1_3;
  Let b4 = M[Offset(Offset(000751,Mul(local1_3,9)),0)];
  if (TestBit(b4,1)) {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  } else {
    TraceOperation 043310 (Je [Var (Local 1),Con 48] (Branch F (Dloc 043319)));
    GetLocal 1 local1_6;
    if (Equal(local1_6,48)) {
      TraceOperation 043314 (Je [Var (Global 190),Var (Global 0)] (Branch F Dfalse));
      Let b7 = M[008288];
      Let b8 = M[008289];
      Let b9 = M[007908];
      Let b10 = M[007909];
      if (Equal(MakeHiLo(b7,b8),MakeHiLo(b9,b10))) {
        TraceOperation 043318 Rtrue;
        PopFrame;
        PopReturnAddress return_address_11;
        SetResult 1;
        JumpIndirect: (return) return_address_11
      } else {
        PopFrame;
        PopReturnAddress return_address_12;
        SetResult 0;
        JumpIndirect: (return) return_address_12
      }
    } else {
      Jump: 043319
    }
  }
LocOp 043319:
  TraceOperation 043319 (Jz (Var (Local 2)) (Branch T Dfalse));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 043322 (Je [Var (Local 2),Con 169] (Branch T Dtrue));
    GetLocal 2 local2_3;
    if (Equal(local2_3,169)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 043326 (Je [Var (Local 2),Con 219] (Branch F (Dloc 043340)));
      GetLocal 2 local2_5;
      if (Equal(local2_5,219)) {
        TraceOperation 043330 (Call (Floc 043522) [Var (Local 1),Var (Global 0)] Sp);
        GetLocal 1 local1_6;
        Let b7 = M[007908];
        Let b8 = M[007909];
        PushFrame;
        PushReturnAddress 043330;
        SetLocal 1 local1_6;
        SetLocal 2 MakeHiLo(b7,b8);
        MakeRoutineFrame 3;
        SetLocal 3 0;
        Jump: 043529
      } else {
        Jump: 043340
      }
    }
  }
LocReturn 043330:
  PushStack call_result;
  TraceOperation 043337 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 043340
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 043340:
  TraceOperation 043340 (Call (Floc 043406) [Var (Local 1)] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 043340;
  SetLocal 1 local1_1;
  MakeRoutineFrame 1;
  Jump: 043409
LocReturn 043340:
  PushStack call_result;
  TraceOperation 043346 (Je [Var Sp,Var (Global 0)] (Branch F Dfalse));
  PopStack popped1;
  Let b2 = M[007908];
  Let b3 = M[007909];
  if (Equal(popped1,MakeHiLo(b2,b3))) {
    TraceOperation 043350 (Je [Var (Local 2),Var (Global 195),Var (Global 0)] (Branch T Dtrue));
    GetLocal 2 local2_4;
    Let b5 = M[008298];
    Let b6 = M[008299];
    Let b7 = M[007908];
    Let b8 = M[007909];
    if (LogOr(Equal(local2_4,MakeHiLo(b5,b6)),Equal(local2_4,MakeHiLo(b7,b8)))) {
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    } else {
      TraceOperation 043356 (Test_attr (Var (Local 2)) (Con 23) (Branch F Dfalse));
      GetLocal 2 local2_10;
      Let b11 = M[Offset(Offset(000751,Mul(local2_10,9)),2)];
      if (TestBit(b11,0)) {
        TraceOperation 043360 (Call (Floc 043298) [Var (Local 2)] Sp);
        GetLocal 2 local2_12;
        PushFrame;
        PushReturnAddress 043360;
        SetLocal 1 local2_12;
        MakeRoutineFrame 2;
        SetLocal 2 0;
        Jump: 043303
      } else {
        PopFrame;
        PopReturnAddress return_address_13;
        SetResult 0;
        JumpIndirect: (return) return_address_13
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_14;
    SetResult 0;
    JumpIndirect: (return) return_address_14
  }
LocReturn 043360:
  PushStack call_result;
  TraceOperation 043366 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 043369 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 043370:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 043375
LocOp 043375:
  TraceOperation 043375 (Get_parent (Var (Local 1)) (Local 2));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),4)];
  SetLocal 2 Widen(b2);
  TraceOperation 043378 (Call (Floc 043298) [Var (Local 1)] Sp);
  GetLocal 1 local1_3;
  PushFrame;
  PushReturnAddress 043378;
  SetLocal 1 local1_3;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043303
LocReturn 043378:
  PushStack call_result;
  TraceOperation 043384 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 043387 (Call (Floc 043506) [Var (Local 2)] Sp);
    GetLocal 2 local2_2;
    PushFrame;
    PushReturnAddress 043387;
    SetLocal 1 local2_2;
    MakeRoutineFrame 1;
    Jump: 043509
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocReturn 043387:
  PushStack call_result;
  TraceOperation 043393 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 043396 (Call (Floc 043370) [Var (Local 2)] Sp);
    GetLocal 2 local2_3;
    PushFrame;
    PushReturnAddress 043396;
    SetLocal 1 local2_3;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043375
  }
LocReturn 043396:
  PushStack call_result;
  TraceOperation 043402 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 043405 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 043406:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 043409
LocOp 043409:
  TraceOperation 043409 (Jz (Var (Local 1)) (Branch T Dfalse));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 043412 (Jin (Var (Local 1)) (Con 169) (Branch F (Dloc 043418)));
    GetLocal 1 local1_3;
    Let b4 = M[Offset(Offset(000751,Mul(local1_3,9)),4)];
    if (Equal(169,Widen(b4))) {
      TraceOperation 043416 (Ret (Con 169));
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 169;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 043418
    }
  }
LocOp 043418:
  TraceOperation 043418 (Jin (Var (Local 1)) (Con 217) (Branch F (Dloc 043424)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),4)];
  if (Equal(217,Widen(b2))) {
    TraceOperation 043422 (Ret (Var (Local 1)));
    GetLocal 1 local1_3;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult local1_3;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 043424
  }
LocOp 043424:
  TraceOperation 043424 (Get_parent (Var (Local 1)) (Local 1));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),4)];
  SetLocal 1 Widen(b2);
  TraceOperation 043427 (Jump 043409);
  Jump: 043409
--------------------------------------------------
LocRoutine 043430:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 043437
LocOp 043437:
  TraceOperation 043437 (Get_next_prop (Var (Global 0)) (Var (Local 2)) (Local 2));
  Let b1 = M[007908];
  Let b2 = M[007909];
  GetLocal 2 local2_3;
  if (IsZero(local2_3)) {
    Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
    Let b5 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let b7 = M[Offset(Address(MakeHiLo(b4,b5)),Add(Mul(2,Widen(b6)),1))];
    SetLocal 2 Widen(BwAnd(b7,31));
  } else {
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
    Let b9 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
    Let b10 = M[Address(MakeHiLo(b8,b9))];
    Let loop_var11 = DeAddress(Offset(Address(MakeHiLo(b8,b9)),Add(Mul(2,Widen(b10)),1)));
    Label 12: {
      Let b13 = M[Address(loop_var11)];
      if (IsZeroByte(b13)) {
        Error: ("getNextProp",local2_3)
      } else {
        if (Equal(local2_3,Widen(BwAnd(b13,31)))) {
          Let b14 = M[Offset(Offset(Address(loop_var11),1),Add(Widen(ShiftR(b13,5)),1))];
          SetLocal 2 Widen(BwAnd(b14,31));
        } else {
          Assign loop_var11 = DeAddress(Offset(Offset(Address(loop_var11),1),Add(Widen(ShiftR(b13,5)),1)));
          Goto: Label 12
        }
      }
    }
  }
  TraceOperation 043441 (Jl (Var (Local 2)) (Var (Global 87)) (Branch T Dfalse));
  GetLocal 2 local2_15;
  Let b16 = M[008082];
  Let b17 = M[008083];
  if (LessThan(local2_15,MakeHiLo(b16,b17))) {
    PopFrame;
    PopReturnAddress return_address_18;
    SetResult 0;
    JumpIndirect: (return) return_address_18
  } else {
    TraceOperation 043445 (Get_prop_addr (Var (Global 0)) (Var (Local 2)) (Local 3));
    Let b19 = M[007908];
    Let b20 = M[007909];
    GetLocal 2 local2_21;
    Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),7)];
    Let b23 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),7),1)];
    Let b24 = M[Address(MakeHiLo(b22,b23))];
    Let loop_var25 = DeAddress(Offset(Address(MakeHiLo(b22,b23)),Add(Mul(2,Widen(b24)),1)));
    Label 26: {
      Let b27 = M[Address(loop_var25)];
      if (IsZeroByte(b27)) {
        SetLocal 3 0;
      } else {
        if (Equal(local2_21,Widen(BwAnd(b27,31)))) {
          SetLocal 3 DeAddress(Offset(Address(loop_var25),1));
        } else {
          Assign loop_var25 = DeAddress(Offset(Offset(Address(loop_var25),1),Add(Widen(ShiftR(b27,5)),1)));
          Goto: Label 26
        }
      }
    }
    TraceOperation 043449 (Get_prop_len (Var (Local 3)) Sp);
    GetLocal 3 local3_28;
    if (IsZero(local3_28)) {
      PushStack 0;
    } else {
      Let b29 = M[Offset(Address(local3_28),-1)];
      PushStack Add(Widen(ShiftR(b29,5)),1);
    }
    TraceOperation 043452 (Je [Var Sp,Con 5] (Branch F (Dloc 043437)));
    PopStack popped30;
    if (Equal(popped30,5)) {
      TraceOperation 043457 (Loadb (Var (Local 3)) (Con 1) Sp);
      GetLocal 3 local3_31;
      Let b32 = M[Offset(Address(local3_31),1)];
      PushStack Widen(b32);
      TraceOperation 043461 (Je [Var Sp,Var (Local 1)] (Branch F (Dloc 043437)));
      PopStack popped33;
      GetLocal 1 local1_34;
      if (Equal(popped33,local1_34)) {
        TraceOperation 043466 (Ret (Var (Local 2)));
        GetLocal 2 local2_35;
        PopFrame;
        PopReturnAddress return_address_36;
        SetResult local2_35;
        JumpIndirect: (return) return_address_36
      } else {
        Jump: 043437
      }
    } else {
      Jump: 043437
    }
  }
--------------------------------------------------
LocRoutine 043468:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 043473
LocOp 043473:
  TraceOperation 043473 (Jz (Var (Local 2)) (Branch F (Dloc 043479)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    TraceOperation 043476 (Store (Con 2) (Var (Global 195)));
    Let b2 = M[008298];
    Let b3 = M[008299];
    SetLocal 2 MakeHiLo(b2,b3);
    Jump: 043479
  } else {
    Jump: 043479
  }
LocOp 043479:
  TraceOperation 043479 (Jz (Var (Local 1)) (Branch T Dfalse));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 043482 (Jin (Var (Local 1)) (Var (Local 2)) (Branch T Dtrue));
    GetLocal 1 local1_3;
    GetLocal 2 local2_4;
    Let b5 = M[Offset(Offset(000751,Mul(local1_3,9)),4)];
    if (Equal(local2_4,Widen(b5))) {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    } else {
      TraceOperation 043486 (Jin (Var (Local 1)) (Con 217) (Branch T Dfalse));
      GetLocal 1 local1_7;
      Let b8 = M[Offset(Offset(000751,Mul(local1_7,9)),4)];
      if (Equal(217,Widen(b8))) {
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 0;
        JumpIndirect: (return) return_address_9
      } else {
        TraceOperation 043490 (Jin (Var (Local 1)) (Con 169) (Branch T Dfalse));
        GetLocal 1 local1_10;
        Let b11 = M[Offset(Offset(000751,Mul(local1_10,9)),4)];
        if (Equal(169,Widen(b11))) {
          PopFrame;
          PopReturnAddress return_address_12;
          SetResult 0;
          JumpIndirect: (return) return_address_12
        } else {
          TraceOperation 043494 (Get_parent (Var (Local 1)) Sp);
          GetLocal 1 local1_13;
          Let b14 = M[Offset(Offset(000751,Mul(local1_13,9)),4)];
          PushStack Widen(b14);
          TraceOperation 043497 (Call (Floc 043468) [Var Sp,Var (Local 2)] Sp);
          PopStack popped15;
          GetLocal 2 local2_16;
          PushFrame;
          PushReturnAddress 043497;
          SetLocal 1 popped15;
          SetLocal 2 local2_16;
          MakeRoutineFrame 2;
          Jump: 043473
        }
      }
    }
  }
LocReturn 043497:
  PushStack call_result;
  TraceOperation 043504 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 043506:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 043509
LocOp 043509:
  TraceOperation 043509 (Test_attr (Var (Local 1)) (Con 6) (Branch T Dfalse));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),0)];
  if (TestBit(b2,1)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 043513 (Test_attr (Var (Local 1)) (Con 17) (Branch T Dtrue));
    GetLocal 1 local1_4;
    Let b5 = M[Offset(Offset(000751,Mul(local1_4,9)),2)];
    if (TestBit(b5,6)) {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    } else {
      TraceOperation 043517 (Test_attr (Var (Local 1)) (Con 23) (Branch T Dtrue));
      GetLocal 1 local1_7;
      Let b8 = M[Offset(Offset(000751,Mul(local1_7,9)),2)];
      if (TestBit(b8,0)) {
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 1;
        JumpIndirect: (return) return_address_9
      } else {
        TraceOperation 043521 Rfalse;
        PopFrame;
        PopReturnAddress return_address_10;
        SetResult 0;
        JumpIndirect: (return) return_address_10
      }
    }
  }
--------------------------------------------------
LocRoutine 043522:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 043529
LocOp 043529:
  TraceOperation 043529 (Get_prop_addr (Var (Local 2)) (Con 24) (Local 3));
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Offset(000751,Mul(local2_1,9)),7)];
  Let b3 = M[Offset(Offset(Offset(000751,Mul(local2_1,9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
  Label 6: {
    Let b7 = M[Address(loop_var5)];
    if (IsZeroByte(b7)) {
      SetLocal 3 0;
    } else {
      if (Equal(24,Widen(BwAnd(b7,31)))) {
        SetLocal 3 DeAddress(Offset(Address(loop_var5),1));
      } else {
        Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),Add(Widen(ShiftR(b7,5)),1)));
        Goto: Label 6
      }
    }
  }
  TraceOperation 043533 (Jz (Var (Local 3)) (Branch T Dfalse));
  GetLocal 3 local3_8;
  if (IsZero(local3_8)) {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  } else {
    TraceOperation 043536 (Get_prop_len (Var (Local 3)) Sp);
    GetLocal 3 local3_10;
    if (IsZero(local3_10)) {
      PushStack 0;
    } else {
      Let b11 = M[Offset(Address(local3_10),-1)];
      PushStack Add(Widen(ShiftR(b11,5)),1);
    }
    TraceOperation 043539 (Sub (Var Sp) (Con 1) Sp);
    PopStack popped12;
    PushStack Sub(popped12,1);
    TraceOperation 043543 (Call (Floc 028292) [Var (Local 1),Var (Local 3),Var Sp] Sp);
    GetLocal 1 local1_13;
    GetLocal 3 local3_14;
    PopStack popped15;
    PushFrame;
    PushReturnAddress 043543;
    SetLocal 1 local1_13;
    SetLocal 2 local3_14;
    SetLocal 3 popped15;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    Jump: 028301
  }
LocReturn 043543:
  PushStack call_result;
  TraceOperation 043551 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 043552:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 043559
LocOp 043559:
  TraceOperation 043559 (Get_child (Var (Local 1)) (Local 3) (Branch T (Dloc 043563)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),6)];
  SetLocal 3 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 043563
  } else {
    Jump: 043563
  }
LocOp 043563:
  TraceOperation 043563 (Jz (Var (Local 3)) (Branch T Dfalse));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 043566
  }
LocOp 043566:
  TraceOperation 043566 (Test_attr (Var (Local 3)) (Var (Local 2)) (Branch F (Dloc 043572)));
  GetLocal 3 local3_1;
  GetLocal 2 local2_2;
  Let b3 = M[Offset(Offset(000751,Mul(local3_1,9)),Div8(local2_2))];
  if (TestBit(b3,SevenMinus(LoByte(Mod(local2_2,8))))) {
    TraceOperation 043570 (Ret (Var (Local 3)));
    GetLocal 3 local3_4;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult local3_4;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 043572
  }
LocOp 043572:
  TraceOperation 043572 (Get_sibling (Var (Local 3)) (Local 3) (Branch T (Dloc 043566)));
  GetLocal 3 local3_1;
  Let b2 = M[Offset(Offset(000751,Mul(local3_1,9)),5)];
  SetLocal 3 Widen(b2);
  if (IsZero(Widen(b2))) {
    TraceOperation 043577 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 043566
  }
--------------------------------------------------
LocRoutine 043578:
  MakeRoutineFrame 0;
  Jump: 043579
LocOp 043579:
  TraceOperation 043579 (Get_parent (Var (Global 201)) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 043582 (Test_attr (Var Sp) (Con 24) (Branch F Dfalse));
  PopStack popped4;
  Let b5 = M[Offset(Offset(000751,Mul(popped4,9)),3)];
  if (TestBit(b5,7)) {
    TraceOperation 043586 (Get_parent (Var (Global 201)) Sp);
    Let b6 = M[008310];
    Let b7 = M[008311];
    Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),4)];
    PushStack Widen(b8);
    TraceOperation 043589 (Test_attr (Var Sp) (Con 23) (Branch T Dfalse));
    PopStack popped9;
    Let b10 = M[Offset(Offset(000751,Mul(popped9,9)),2)];
    if (TestBit(b10,0)) {
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 0;
      JumpIndirect: (return) return_address_11
    } else {
      TraceOperation 043593 (Test_attr (Var (Global 201)) (Con 25) (Branch F Dfalse));
      Let b12 = M[008310];
      Let b13 = M[008311];
      Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),3)];
      if (TestBit(b14,6)) {
        TraceOperation 043597 (Print "But");
        GamePrint "But";
        TraceOperation 043602 (Get_parent (Var (Global 201)) Sp);
        Let b15 = M[008310];
        Let b16 = M[008311];
        Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),4)];
        PushStack Widen(b17);
        TraceOperation 043605 (Call (Floc 043738) [Var Sp,Con 1] Sp);
        PopStack popped18;
        PushFrame;
        PushReturnAddress 043605;
        SetLocal 1 popped18;
        SetLocal 2 1;
        MakeRoutineFrame 2;
        Jump: 043743
      } else {
        PopFrame;
        PopReturnAddress return_address_19;
        SetResult 0;
        JumpIndirect: (return) return_address_19
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_20;
    SetResult 0;
    JumpIndirect: (return) return_address_20
  }
LocReturn 043605:
  PushStack call_result;
  TraceOperation 043612 (Print_ret " is closed!");
  GamePrint " is closed!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 043620:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 043623
LocOp 043623:
  TraceOperation 043623 (Store (Con 191) (Var (Local 1)));
  GetLocal 1 local1_1;
  SetByte 008258 HiByte(local1_1);
  SetByte 008259 LoByte(local1_1);
  TraceOperation 043626 (Call (Floc 022042) [Con 169,Var (Local 1)] Sp);
  GetLocal 1 local1_2;
  PushFrame;
  PushReturnAddress 043626;
  SetLocal 1 169;
  SetLocal 2 local1_2;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 043626:
  PushStack call_result;
  TraceOperation 043633 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 043634:
  MakeRoutineFrame 0;
  Jump: 043635
LocOp 043635:
  TraceOperation 043635 (Store (Con 208) (Con 0));
  SetByte 008292 0;
  SetByte 008293 0;
  TraceOperation 043638 (Store (Con 195) (Con 0));
  SetByte 008266 0;
  SetByte 008267 0;
  TraceOperation 043641 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 043644:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 043653
LocOp 043653:
  TraceOperation 043653 (Get_child (Var (Local 1)) (Local 4) (Branch T (Dloc 043657)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),6)];
  SetLocal 4 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 043657
  } else {
    Jump: 043657
  }
LocOp 043657:
  TraceOperation 043657 (Jz (Var (Local 4)) (Branch T Dtrue));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 043660 (Get_sibling (Var (Local 4)) (Local 3) (Branch T (Dloc 043664)));
    GetLocal 4 local4_3;
    Let b4 = M[Offset(Offset(000751,Mul(local4_3,9)),5)];
    SetLocal 3 Widen(b4);
    if (IsZero(Widen(b4))) {
      Jump: 043664
    } else {
      Jump: 043664
    }
  }
LocOp 043664:
  TraceOperation 043664 (Insert_obj (Var (Local 4)) (Var (Local 2)));
  GetLocal 4 local4_1;
  GetLocal 2 local2_2;
  Let b3 = M[Offset(Offset(000751,Mul(local4_1,9)),4)];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),local4_1)) {
      Let b5 = M[Offset(Offset(000751,Mul(local4_1,9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),local4_1)) {
          Let b9 = M[Offset(Offset(000751,Mul(local4_1,9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(local4_1,9)),4) LoByte(local2_2);
  Let b10 = M[Offset(Offset(000751,Mul(local2_2,9)),6)];
  SetByte Offset(Offset(000751,Mul(local4_1,9)),5) LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(local2_2,9)),6) LoByte(local4_1);
  TraceOperation 043667 (Store (Con 4) (Var (Local 3)));
  GetLocal 3 local3_11;
  SetLocal 4 local3_11;
  TraceOperation 043670 (Jump 043657);
  Jump: 043657
--------------------------------------------------
LocRoutine 043674:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 043679
LocOp 043679:
  TraceOperation 043679 (Call (Floc 043468) [Var (Local 1)] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 043679;
  SetLocal 1 local1_1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 043679:
  PushStack call_result;
  TraceOperation 043685 (Jz (Var Sp) (Branch T (Dloc 043697)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 043697
  } else {
    TraceOperation 043688 (Call (Floc 043468) [Var (Local 2)] Sp);
    GetLocal 2 local2_2;
    PushFrame;
    PushReturnAddress 043688;
    SetLocal 1 local2_2;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  }
LocReturn 043688:
  PushStack call_result;
  TraceOperation 043694 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 043697
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 043697:
  TraceOperation 043697 (Call (Floc 043468) [Var (Local 1)] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 043697;
  SetLocal 1 local1_1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 043697:
  PushStack call_result;
  TraceOperation 043703 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 043706 (Call (Floc 043468) [Var (Local 2)] Sp);
    GetLocal 2 local2_2;
    PushFrame;
    PushReturnAddress 043706;
    SetLocal 1 local2_2;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocReturn 043706:
  PushStack call_result;
  TraceOperation 043712 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 043715 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 043716:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 043719
LocOp 043719:
  TraceOperation 043719 (Print_paddr (Var (Local 1)));
  GetLocal 1 local1_1;
  GamePrint GetText(PackedAddress Z3(local1_1));
  TraceOperation 043721 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b2 = M[008310];
  Let b3 = M[008311];
  PushFrame;
  PushReturnAddress 043721;
  SetLocal 1 MakeHiLo(b2,b3);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 043721:
  PushStack call_result;
  TraceOperation 043728 (Call (Floc 020718) [Var (Global 149)] Sp);
  Let b1 = M[008206];
  Let b2 = M[008207];
  PushFrame;
  PushReturnAddress 043728;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 020721
LocReturn 043728:
  PushStack call_result;
  TraceOperation 043734 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 043736 New_line;
  GamePrint "\n";
  TraceOperation 043737 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 043738:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 043743
LocOp 043743:
  TraceOperation 043743 (Jz (Var (Local 1)) (Branch F (Dloc 043749)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    TraceOperation 043746 (Store (Con 1) (Con 46));
    SetLocal 1 46;
    Jump: 043749
  } else {
    Jump: 043749
  }
LocOp 043749:
  TraceOperation 043749 (Test_attr (Var (Local 1)) (Con 31) (Branch T (Dloc 043777)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),3)];
  if (TestBit(b2,0)) {
    Jump: 043777
  } else {
    TraceOperation 043753 (Jz (Var (Local 2)) (Branch T (Dloc 043764)));
    GetLocal 2 local2_3;
    if (IsZero(local2_3)) {
      Jump: 043764
    } else {
      TraceOperation 043756 (Print " the");
      GamePrint " the";
      TraceOperation 043761 (Jump 043777);
      Jump: 043777
    }
  }
LocOp 043764:
  TraceOperation 043764 (Test_attr (Var (Local 1)) (Con 15) (Branch F (Dloc 043774)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),1)];
  if (TestBit(b2,0)) {
    TraceOperation 043768 (Print " an");
    GamePrint " an";
    TraceOperation 043771 (Jump 043777);
    Jump: 043777
  } else {
    Jump: 043774
  }
LocOp 043774:
  TraceOperation 043774 (Print " a");
  GamePrint " a";
  Jump: 043777
LocOp 043777:
  TraceOperation 043777 (Print " ");
  GamePrint " ";
  TraceOperation 043780 (Print_obj (Var (Local 1)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),7)];
  Let b3 = M[Offset(Offset(Offset(000751,Mul(local1_1,9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 043782 Rtrue;
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 043784:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 1;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 043793
LocOp 043793:
  TraceOperation 043793 (Je [Var (Global 201),Con 46] (Branch F (Dloc 043820)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 043797 (Je [Var (Global 202),Con 46] (Branch F (Dloc 043820)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),46)) {
      TraceOperation 043801 (Print_ret "Those things aren't here!");
      GamePrint "Those things aren't here!\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 043820
    }
  } else {
    Jump: 043820
  }
LocOp 043820:
  TraceOperation 043820 (Je [Var (Global 201),Con 46] (Branch F (Dloc 043830)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 043824 (Store (Con 1) (Var (Global 167)));
    Let b3 = M[008242];
    Let b4 = M[008243];
    SetLocal 1 MakeHiLo(b3,b4);
    TraceOperation 043827 (Jump 043836);
    Jump: 043836
  } else {
    Jump: 043830
  }
LocOp 043830:
  TraceOperation 043830 (Store (Con 1) (Var (Global 166)));
  Let b1 = M[008240];
  Let b2 = M[008241];
  SetLocal 1 MakeHiLo(b1,b2);
  TraceOperation 043833 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 043836
LocOp 043836:
  TraceOperation 043836 (Jz (Var (Local 2)) (Branch T (Dloc 043887)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    Jump: 043887
  } else {
    TraceOperation 043839 (Je [Var (Global 203),Con 64,Con 69,Con 105] (Branch T (Dloc 043867)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b2,b3),64),Equal(MakeHiLo(b2,b3),69)),Equal(MakeHiLo(b2,b3),105))) {
      Jump: 043867
    } else {
      TraceOperation 043846 (Je [Var (Global 203),Con 174,Con 177,Con 178] (Branch T (Dloc 043867)));
      Let b4 = M[008314];
      Let b5 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),174),Equal(MakeHiLo(b4,b5),177)),Equal(MakeHiLo(b4,b5),178))) {
        Jump: 043867
      } else {
        TraceOperation 043853 (Je [Var (Global 203),Con 166,Con 21,Con 175] (Branch T (Dloc 043867)));
        Let b6 = M[008314];
        Let b7 = M[008315];
        if (LogOr(LogOr(Equal(MakeHiLo(b6,b7),166),Equal(MakeHiLo(b6,b7),21)),Equal(MakeHiLo(b6,b7),175))) {
          Jump: 043867
        } else {
          TraceOperation 043860 (Je [Var (Global 203),Con 5,Con 31,Con 106] (Branch F (Dloc 043915)));
          Let b8 = M[008314];
          Let b9 = M[008315];
          if (LogOr(LogOr(Equal(MakeHiLo(b8,b9),5),Equal(MakeHiLo(b8,b9),31)),Equal(MakeHiLo(b8,b9),106))) {
            Jump: 043867
          } else {
            Jump: 043915
          }
        }
      }
    }
  }
LocOp 043867:
  TraceOperation 043867 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  TraceOperation 043870 (Call (Floc 044094) [Var (Local 1),Var (Local 2)] (Local 3));
  GetLocal 1 local1_1;
  GetLocal 2 local2_2;
  PushFrame;
  PushReturnAddress 043870;
  SetLocal 1 local1_1;
  SetLocal 2 local2_2;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 044103
LocReturn 043870:
  SetLocal 3 call_result;
  TraceOperation 043877 (Jz (Var (Local 3)) (Branch T Dfalse));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 043880 (Je [Var (Local 3),Con 46] (Branch F Dtrue));
    GetLocal 3 local3_3;
    if (Equal(local3_3,46)) {
      TraceOperation 043884 (Jump 043915);
      Jump: 043915
    } else {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    }
  }
LocOp 043887:
  TraceOperation 043887 (Je [Var (Global 203),Con 22,Con 23,Con 150] (Branch T (Dloc 043898)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),22),Equal(MakeHiLo(b1,b2),23)),Equal(MakeHiLo(b1,b2),150))) {
    Jump: 043898
  } else {
    TraceOperation 043894 (Je [Var (Global 203),Con 101] (Branch F (Dloc 043915)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),101)) {
      Jump: 043898
    } else {
      Jump: 043915
    }
  }
LocOp 043898:
  TraceOperation 043898 (Store (Con 4) (Con 1));
  SetLocal 4 1;
  TraceOperation 043901 (Call (Floc 044094) [Var (Local 1),Var (Local 2)] (Local 3));
  GetLocal 1 local1_1;
  GetLocal 2 local2_2;
  PushFrame;
  PushReturnAddress 043901;
  SetLocal 1 local1_1;
  SetLocal 2 local2_2;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 044103
LocReturn 043901:
  SetLocal 3 call_result;
  TraceOperation 043908 (Jz (Var (Local 3)) (Branch T Dfalse));
  GetLocal 3 local3_1;
  if (IsZero(local3_1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 043911 (Je [Var (Local 3),Con 46] (Branch F Dtrue));
    GetLocal 3 local3_3;
    if (Equal(local3_3,46)) {
      Jump: 043915
    } else {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    }
  }
LocOp 043915:
  TraceOperation 043915 (Jz (Var (Local 4)) (Branch T (Dloc 043951)));
  GetLocal 4 local4_1;
  if (IsZero(local4_1)) {
    Jump: 043951
  } else {
    TraceOperation 043918 (Print "You'll have to be more specific, I'm afraid.");
    GamePrint "You'll have to be more specific, I'm afraid.";
    TraceOperation 043947 New_line;
    GamePrint "\n";
    TraceOperation 043948 (Jump 044088);
    Jump: 044088
  }
LocOp 043951:
  TraceOperation 043951 (Je [Var (Global 195),Con 31] (Branch F (Dloc 044010)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),31)) {
    TraceOperation 043955 (Print "You can't ");
    GamePrint "You can't ";
    TraceOperation 043960 (Je [Var (Global 155),Con 17893,Con 17900,Con 14799] (Branch F (Dloc 043978)));
    Let b3 = M[008218];
    Let b4 = M[008219];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),17893),Equal(MakeHiLo(b3,b4),17900)),Equal(MakeHiLo(b3,b4),14799))) {
      TraceOperation 043970 (Print "hear");
      GamePrint "hear";
      TraceOperation 043975 (Jump 043981);
      Jump: 043981
    } else {
      Jump: 043978
    }
  } else {
    Jump: 044010
  }
LocOp 043978:
  TraceOperation 043978 (Print "see");
  GamePrint "see";
  Jump: 043981
LocOp 043981:
  TraceOperation 043981 (Call (Floc 025716) [Var (Global 155)] Sp);
  Let b1 = M[008218];
  Let b2 = M[008219];
  PushFrame;
  PushReturnAddress 043981;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 025719
LocReturn 043981:
  PushStack call_result;
  TraceOperation 043987 (Jz (Var Sp) (Branch F (Dloc 043995)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 043990 (Print " any");
    GamePrint " any";
    Jump: 043995
  } else {
    Jump: 043995
  }
LocOp 043995:
  TraceOperation 043995 (Call (Floc 044162) [Var (Local 2)] Sp);
  GetLocal 2 local2_1;
  PushFrame;
  PushReturnAddress 043995;
  SetLocal 1 local2_1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 044167
LocReturn 043995:
  PushStack call_result;
  TraceOperation 044001 (Print " here!");
  GamePrint " here!";
  TraceOperation 044006 New_line;
  GamePrint "\n";
  TraceOperation 044007 (Jump 044088);
  Jump: 044088
LocOp 044010:
  TraceOperation 044010 (Je [Var (Global 195),Con 142] (Branch F (Dloc 044017)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 044014 (Jz (Var (Global 136)) (Branch F Dfalse));
    Let b3 = M[008180];
    Let b4 = M[008181];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 044017
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 044017
  }
LocOp 044017:
  TraceOperation 044017 (Je [Var (Global 195),Con 95] (Branch F (Dloc 044025)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),95)) {
    TraceOperation 044021 (Test_attr (Con 95) (Con 3) (Branch T Dfalse));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    } else {
      Jump: 044025
    }
  } else {
    Jump: 044025
  }
LocOp 044025:
  TraceOperation 044025 (Print "Looking confused,");
  GamePrint "Looking confused,";
  TraceOperation 044040 (Call (Floc 043738) [Var (Global 195),Con 1] Sp);
  Let b1 = M[008298];
  Let b2 = M[008299];
  PushFrame;
  PushReturnAddress 044040;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 044040:
  PushStack call_result;
  TraceOperation 044047 (Print " says, \"I don't see");
  GamePrint " says, \"I don't see";
  TraceOperation 044060 (Call (Floc 025716) [Var (Global 155)] Sp);
  Let b1 = M[008218];
  Let b2 = M[008219];
  PushFrame;
  PushReturnAddress 044060;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 025719
LocReturn 044060:
  PushStack call_result;
  TraceOperation 044066 (Jz (Var Sp) (Branch F (Dloc 044074)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 044069 (Print " any");
    GamePrint " any";
    Jump: 044074
  } else {
    Jump: 044074
  }
LocOp 044074:
  TraceOperation 044074 (Call (Floc 044162) [Var (Local 2)] Sp);
  GetLocal 2 local2_1;
  PushFrame;
  PushReturnAddress 044074;
  SetLocal 1 local2_1;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 044167
LocReturn 044074:
  PushStack call_result;
  TraceOperation 044080 (Print " here!\"");
  GamePrint " here!\"";
  TraceOperation 044087 New_line;
  GamePrint "\n";
  Jump: 044088
LocOp 044088:
  TraceOperation 044088 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 044088;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 044088:
  PushStack call_result;
  TraceOperation 044093 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 044094:
  MakeRoutineFrame 4;
  if (LessThanByte(num_actuals,4)) {
    SetLocal 4 0;
    if (LessThanByte(num_actuals,3)) {
      SetLocal 3 0;
      if (LessThanByte(num_actuals,2)) {
        SetLocal 2 0;
        if (LessThanByte(num_actuals,1)) {
          SetLocal 1 0;
        }
      }
    }
  }
  Jump: 044103
LocOp 044103:
  TraceOperation 044103 (Call (Floc 027220) [Var (Local 1)] (Local 3));
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 044103;
  SetLocal 1 local1_1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 027227
LocReturn 044103:
  SetLocal 3 call_result;
  TraceOperation 044109 (Je [Con 1,Var (Local 3)] (Branch F (Dloc 044124)));
  GetLocal 3 local3_1;
  if (Equal(1,local3_1)) {
    TraceOperation 044113 (Jz (Var (Local 2)) (Branch T (Dloc 044120)));
    GetLocal 2 local2_2;
    if (IsZero(local2_2)) {
      Jump: 044120
    } else {
      TraceOperation 044116 (Store (Con 217) (Var (Global 157)));
      Let b3 = M[008222];
      Let b4 = M[008223];
      SetByte 008310 b3;
      SetByte 008311 b4;
      TraceOperation 044119 Rfalse;
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 044124
  }
LocOp 044120:
  TraceOperation 044120 (Store (Con 218) (Var (Global 157)));
  Let b1 = M[008222];
  Let b2 = M[008223];
  SetByte 008312 b1;
  SetByte 008313 b2;
  TraceOperation 044123 Rfalse;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 0;
  JumpIndirect: (return) return_address_3
LocOp 044124:
  TraceOperation 044124 (Je [Var (Global 155),Con 15695] (Branch F (Dloc 044141)));
  Let b1 = M[008218];
  Let b2 = M[008219];
  if (Equal(MakeHiLo(b1,b2),15695)) {
    TraceOperation 044130 (Jz (Var (Local 2)) (Branch T (Dloc 044137)));
    GetLocal 2 local2_3;
    if (IsZero(local2_3)) {
      Jump: 044137
    } else {
      TraceOperation 044133 (Store (Con 217) (Con 155));
      SetByte 008310 0;
      SetByte 008311 155;
      TraceOperation 044136 Rfalse;
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    }
  } else {
    Jump: 044141
  }
LocOp 044137:
  TraceOperation 044137 (Store (Con 218) (Con 155));
  SetByte 008312 0;
  SetByte 008313 155;
  TraceOperation 044140 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 044141:
  TraceOperation 044141 (Je [Var (Global 155),Con 19685,Con 19699] (Branch F (Dloc 044160)));
  Let b1 = M[008218];
  Let b2 = M[008219];
  if (LogOr(Equal(MakeHiLo(b1,b2),19685),Equal(MakeHiLo(b1,b2),19699))) {
    TraceOperation 044149 (Jz (Var (Local 2)) (Branch T (Dloc 044156)));
    GetLocal 2 local2_3;
    if (IsZero(local2_3)) {
      Jump: 044156
    } else {
      TraceOperation 044152 (Store (Con 217) (Con 13));
      SetByte 008310 0;
      SetByte 008311 13;
      TraceOperation 044155 Rfalse;
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    }
  } else {
    Jump: 044160
  }
LocOp 044156:
  TraceOperation 044156 (Store (Con 218) (Con 13));
  SetByte 008312 0;
  SetByte 008313 13;
  TraceOperation 044159 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 044160:
  TraceOperation 044160 (Ret (Con 46));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 46;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 044162:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 0;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 0;
    }
  }
  Jump: 044167
LocOp 044167:
  TraceOperation 044167 (Jz (Var (Global 189)) (Branch T (Dloc 044187)));
  Let b1 = M[008286];
  Let b2 = M[008287];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 044187
  } else {
    TraceOperation 044170 (Jz (Var (Global 154)) (Branch T (Dloc 044178)));
    Let b3 = M[008216];
    Let b4 = M[008217];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 044178
    } else {
      TraceOperation 044173 (Print " ");
      GamePrint " ";
      TraceOperation 044176 (Print_addr (Var (Global 153)));
      Let b5 = M[008214];
      Let b6 = M[008215];
      GamePrint GetText(Address(MakeHiLo(b5,b6)));
      Jump: 044178
    }
  }
LocOp 044178:
  TraceOperation 044178 (Jz (Var (Global 155)) (Branch T Dfalse));
  Let b1 = M[008218];
  Let b2 = M[008219];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 044181 (Print " ");
    GamePrint " ";
    TraceOperation 044184 (Print_addr (Var (Global 155)));
    Let b4 = M[008218];
    Let b5 = M[008219];
    GamePrint GetText(Address(MakeHiLo(b4,b5)));
    TraceOperation 044186 Rtrue;
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  }
LocOp 044187:
  TraceOperation 044187 (Jz (Var (Local 1)) (Branch T (Dloc 044207)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    Jump: 044207
  } else {
    TraceOperation 044190 (Loadw (Var (Global 184)) (Con 6) (Local 2));
    Let b2 = M[008276];
    Let b3 = M[008277];
    Let b4 = M[Offset(Address(MakeHiLo(b2,b3)),12)];
    Let b5 = M[Offset(Offset(Address(MakeHiLo(b2,b3)),12),1)];
    SetLocal 2 MakeHiLo(b4,b5);
    TraceOperation 044194 (Loadw (Var (Global 184)) (Con 7) Sp);
    Let b6 = M[008276];
    Let b7 = M[008277];
    Let b8 = M[Offset(Address(MakeHiLo(b6,b7)),14)];
    Let b9 = M[Offset(Offset(Address(MakeHiLo(b6,b7)),14),1)];
    PushStack MakeHiLo(b8,b9);
    TraceOperation 044198 (Call (Floc 025564) [Var (Local 2),Var Sp,Con 0] Sp);
    GetLocal 2 local2_10;
    PopStack popped11;
    PushFrame;
    PushReturnAddress 044198;
    SetLocal 1 local2_10;
    SetLocal 2 popped11;
    SetLocal 3 0;
    MakeRoutineFrame 8;
    SetLocal 8 0;
    SetLocal 7 0;
    SetLocal 6 1;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 025581
  }
LocReturn 044198:
  PushStack call_result;
  TraceOperation 044206 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 044207:
  TraceOperation 044207 (Loadw (Var (Global 184)) (Con 8) (Local 2));
  Let b1 = M[008276];
  Let b2 = M[008277];
  Let b3 = M[Offset(Address(MakeHiLo(b1,b2)),16)];
  Let b4 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),16),1)];
  SetLocal 2 MakeHiLo(b3,b4);
  TraceOperation 044211 (Loadw (Var (Global 184)) (Con 9) Sp);
  Let b5 = M[008276];
  Let b6 = M[008277];
  Let b7 = M[Offset(Address(MakeHiLo(b5,b6)),18)];
  Let b8 = M[Offset(Offset(Address(MakeHiLo(b5,b6)),18),1)];
  PushStack MakeHiLo(b7,b8);
  TraceOperation 044215 (Call (Floc 025564) [Var (Local 2),Var Sp,Con 0] Sp);
  GetLocal 2 local2_9;
  PopStack popped10;
  PushFrame;
  PushReturnAddress 044215;
  SetLocal 1 local2_9;
  SetLocal 2 popped10;
  SetLocal 3 0;
  MakeRoutineFrame 8;
  SetLocal 8 0;
  SetLocal 7 0;
  SetLocal 6 1;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 025581
LocReturn 044215:
  PushStack call_result;
  TraceOperation 044223 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 044224:
  MakeRoutineFrame 0;
  Jump: 044225
LocOp 044225:
  TraceOperation 044225 (Jin (Con 124) (Var (Global 0)) (Branch T (Dloc 044235)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001871];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 044235
  } else {
    TraceOperation 044229 (Je [Var (Global 0),Con 101,Con 213] (Branch F (Dloc 044266)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    if (LogOr(Equal(MakeHiLo(b4,b5),101),Equal(MakeHiLo(b4,b5),213))) {
      Jump: 044235
    } else {
      Jump: 044266
    }
  }
LocOp 044235:
  TraceOperation 044235 (Call (Floc 043370) [Con 7] Sp);
  PushFrame;
  PushReturnAddress 044235;
  SetLocal 1 7;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043375
LocReturn 044235:
  PushStack call_result;
  TraceOperation 044241 (Jz (Var Sp) (Branch T (Dloc 044266)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 044266
  } else {
    TraceOperation 044244 (Je [Con 45,Var (Global 202)] (Branch F (Dloc 044257)));
    Let b2 = M[008312];
    Let b3 = M[008313];
    if (Equal(45,MakeHiLo(b2,b3))) {
      TraceOperation 044248 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 7] Sp);
      Let b4 = M[008314];
      Let b5 = M[008315];
      Let b6 = M[008310];
      Let b7 = M[008311];
      PushFrame;
      PushReturnAddress 044248;
      SetLocal 1 MakeHiLo(b4,b5);
      SetLocal 2 MakeHiLo(b6,b7);
      SetLocal 3 7;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 044257
    }
  }
LocReturn 044248:
  PushStack call_result;
  TraceOperation 044256 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 044257:
  TraceOperation 044257 (Call (Floc 022042) [Var (Global 203),Con 7,Var (Global 202)] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008312];
  Let b4 = M[008313];
  PushFrame;
  PushReturnAddress 044257;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 7;
  SetLocal 3 MakeHiLo(b3,b4);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 044257:
  PushStack call_result;
  TraceOperation 044265 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 044266:
  TraceOperation 044266 (Je [Var (Global 0),Con 210] (Branch F (Dloc 044276)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),210)) {
    TraceOperation 044270 (Call (Floc 046716) [] Sp);
    PushFrame;
    PushReturnAddress 044270;
    MakeRoutineFrame 0;
    Jump: 046717
  } else {
    Jump: 044276
  }
LocReturn 044270:
  PushStack call_result;
  TraceOperation 044275 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 044276:
  TraceOperation 044276 (Je [Con 45,Var (Global 201)] (Branch F (Dloc 044294)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(45,MakeHiLo(b1,b2))) {
    TraceOperation 044280 (Je [Var (Global 203),Con 174,Con 69,Con 64] (Branch T Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),174),Equal(MakeHiLo(b3,b4),69)),Equal(MakeHiLo(b3,b4),64))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 044287 (Je [Var (Global 203),Con 175,Con 21,Con 177] (Branch T Dfalse));
      Let b6 = M[008314];
      Let b7 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b6,b7),175),Equal(MakeHiLo(b6,b7),21)),Equal(MakeHiLo(b6,b7),177))) {
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 0;
        JumpIndirect: (return) return_address_8
      } else {
        Jump: 044294
      }
    }
  } else {
    Jump: 044294
  }
LocOp 044294:
  TraceOperation 044294 (Je [Con 45,Var (Global 202)] (Branch F (Dloc 044304)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(45,MakeHiLo(b1,b2))) {
    TraceOperation 044298 (Je [Var (Global 203),Con 150,Con 22] (Branch T Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),150),Equal(MakeHiLo(b3,b4),22))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 044304
    }
  } else {
    Jump: 044304
  }
LocOp 044304:
  TraceOperation 044304 (Je [Var (Global 0),Con 168] (Branch T (Dloc 044315)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    Jump: 044315
  } else {
    TraceOperation 044308 (Call (Floc 057596) [Con 45] Sp);
    PushFrame;
    PushReturnAddress 044308;
    SetLocal 1 45;
    MakeRoutineFrame 1;
    Jump: 057599
  }
LocReturn 044308:
  PushStack call_result;
  TraceOperation 044314 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 044315:
  TraceOperation 044315 (Je [Var (Global 203),Con 88] (Branch F (Dloc 044400)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 044320 (Test_attr (Var (Global 0)) (Con 29) (Branch F (Dloc 044329)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),3)];
    if (TestBit(b5,2)) {
      TraceOperation 044324 (Print_ret "It is.");
      GamePrint "It is.\n";
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    } else {
      Jump: 044329
    }
  } else {
    Jump: 044400
  }
LocOp 044329:
  TraceOperation 044329 (Store (Con 101) (Con 1));
  SetByte 008078 0;
  SetByte 008079 1;
  TraceOperation 044332 (Set_attr (Var (Global 0)) (Con 29));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3) SetBit(b3,2);
  TraceOperation 044335 (Set_attr (Con 24) (Con 11));
  Let b4 = M[000968];
  SetByte 000968 SetBit(b4,4);
  TraceOperation 044338 (Insert_obj (Con 24) (Con 25));
  Let b5 = M[000971];
  if (IsZero(Widen(b5))) {} else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b6),24)) {
      Let b7 = M[000972];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
    } else {
      Let loop_var8 = Widen(b6);
      Label 9: {
        Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
        if (Equal(Widen(b10),24)) {
          Let b11 = M[000972];
          SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
        } else {
          Assign loop_var8 = Widen(b10);
          Goto: Label 9
        }
      }
    }
  }
  SetByte 000971 25;
  Let b12 = M[000982];
  SetByte 000972 LoByte(Widen(b12));
  SetByte 000982 24;
  TraceOperation 044341 (Print "Good start to the day. Pity it's going to be the worst one of your life. The light is now on.");
  GamePrint "Good start to the day. Pity it's going to be the worst one of your life. The light is now on.";
  TraceOperation 044392 New_line;
  GamePrint "\n";
  TraceOperation 044393 New_line;
  GamePrint "\n";
  TraceOperation 044394 (Call (Floc 034400) [] Sp);
  PushFrame;
  PushReturnAddress 044394;
  MakeRoutineFrame 0;
  Jump: 034401
LocReturn 044394:
  PushStack call_result;
  TraceOperation 044399 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 044400:
  TraceOperation 044400 (Je [Var (Global 203),Con 40] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),40)) {
    TraceOperation 044404 (Call (Floc 031422) [] Sp);
    PushFrame;
    PushReturnAddress 044404;
    MakeRoutineFrame 0;
    Jump: 031423
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 044404:
  PushStack call_result;
  TraceOperation 044409 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 044410:
  MakeRoutineFrame 0;
  Jump: 044411
LocOp 044411:
  TraceOperation 044411 (Je [Var (Global 203),Con 124,Con 21] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),124),Equal(MakeHiLo(b1,b2),21))) {
    TraceOperation 044417 (Call (Floc 022042) [Con 138] Sp);
    PushFrame;
    PushReturnAddress 044417;
    SetLocal 1 138;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022057
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 044417:
  PushStack call_result;
  TraceOperation 044423 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 044424:
  MakeRoutineFrame 0;
  Jump: 044425
LocOp 044425:
  TraceOperation 044425 (Je [Var (Global 203),Con 97,Con 66] (Branch F (Dloc 044468)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),97),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 044431 (Print "This isn't the time");
    GamePrint "This isn't the time";
    TraceOperation 044440 (Je [Var (Global 0),Con 54] (Branch T (Dloc 044453)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),54)) {
      Jump: 044453
    } else {
      TraceOperation 044444 (Print " or the place");
      GamePrint " or the place";
      Jump: 044453
    }
  } else {
    Jump: 044468
  }
LocOp 044453:
  TraceOperation 044453 (Print_ret " for making speeches.");
  GamePrint " for making speeches.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 044468:
  TraceOperation 044468 (Je [Var (Global 203),Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),120)) {
    TraceOperation 044472 (Print_ret "It's extemporaneous.");
    GamePrint "It's extemporaneous.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 044486:
  MakeRoutineFrame 0;
  Jump: 044487
LocOp 044487:
  TraceOperation 044487 (Je [Var (Global 203),Con 38] (Branch F (Dloc 044510)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 044491 (Je [Var (Global 0),Con 175] (Branch F (Dloc 044510)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),175)) {
      TraceOperation 044495 (Print_ret "The mesh is too fine.");
      GamePrint "The mesh is too fine.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 044510
    }
  } else {
    Jump: 044510
  }
LocOp 044510:
  TraceOperation 044510 (Je [Var (Global 203),Con 33,Con 34,Con 35] (Branch T (Dloc 044521)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),33),Equal(MakeHiLo(b1,b2),34)),Equal(MakeHiLo(b1,b2),35))) {
    Jump: 044521
  } else {
    TraceOperation 044517 (Je [Var (Global 203),Con 28] (Branch F (Dloc 044527)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),28)) {
      Jump: 044521
    } else {
      Jump: 044527
    }
  }
LocOp 044521:
  TraceOperation 044521 (Call (Floc 031422) [] Sp);
  PushFrame;
  PushReturnAddress 044521;
  MakeRoutineFrame 0;
  Jump: 031423
LocReturn 044521:
  PushStack call_result;
  TraceOperation 044526 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 044527:
  TraceOperation 044527 (Je [Var (Global 203),Con 93] (Branch F (Dloc 044537)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 044531 (Call (Floc 031360) [] Sp);
    PushFrame;
    PushReturnAddress 044531;
    MakeRoutineFrame 0;
    Jump: 031361
  } else {
    Jump: 044537
  }
LocReturn 044531:
  PushStack call_result;
  TraceOperation 044536 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 044537:
  TraceOperation 044537 (Je [Var (Global 203),Con 86] (Branch F (Dloc 044548)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),86)) {
    TraceOperation 044541 (Call (Floc 043620) [Con 18] Sp);
    PushFrame;
    PushReturnAddress 044541;
    SetLocal 1 18;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    Jump: 044548
  }
LocReturn 044541:
  PushStack call_result;
  TraceOperation 044547 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 044548:
  TraceOperation 044548 (Je [Var (Global 203),Con 87] (Branch F (Dloc 044607)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 044552 (Jin (Con 31) (Con 161) (Branch F (Dloc 044563)));
    Let b3 = M[001034];
    if (Equal(161,Widen(b3))) {
      TraceOperation 044556 (Call (Floc 057682) [Con 161] Sp);
      PushFrame;
      PushReturnAddress 044556;
      SetLocal 1 161;
      MakeRoutineFrame 1;
      Jump: 057685
    } else {
      Jump: 044563
    }
  } else {
    Jump: 044607
  }
LocReturn 044556:
  PushStack call_result;
  TraceOperation 044562 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 044563:
  TraceOperation 044563 (Jz (Var (Global 86)) (Branch T (Dloc 044570)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 044570
  } else {
    TraceOperation 044566 (Print_paddr (Var (Global 54)));
    Let b3 = M[008016];
    Let b4 = M[008017];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 044568 New_line;
    GamePrint "\n";
    TraceOperation 044569 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  }
LocOp 044570:
  TraceOperation 044570 (Je [Var (Global 0),Con 149] (Branch F (Dloc 044585)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),149)) {
    TraceOperation 044574 (Call (Floc 022042) [Con 26,Con 166] Sp);
    PushFrame;
    PushReturnAddress 044574;
    SetLocal 1 26;
    SetLocal 2 166;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 044585
  }
LocReturn 044574:
  PushStack call_result;
  TraceOperation 044581 (Store (Con 207) (Con 42));
  SetByte 008290 0;
  SetByte 008291 42;
  TraceOperation 044584 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 044585:
  TraceOperation 044585 (Store (Con 102) (Con 1));
  SetByte 008080 0;
  SetByte 008081 1;
  TraceOperation 044588 (Print_ret "You are now lying on the ground.");
  GamePrint "You are now lying on the ground.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 044607:
  TraceOperation 044607 (Je [Var (Global 203),Con 61] (Branch F (Dloc 044700)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 044612 (Je [Var (Global 0),Var (Global 69)] (Branch F (Dloc 044659)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[008046];
    Let b6 = M[008047];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 044616 (Print_ret "The walls, floor, and ceiling are covered with little pieces of flesh and bone.");
      GamePrint "The walls, floor, and ceiling are covered with little pieces of flesh and bone.\n";
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 044659
    }
  } else {
    Jump: 044700
  }
LocOp 044659:
  TraceOperation 044659 (Je [Var (Global 0),Con 175] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),175)) {
    TraceOperation 044663 (Print_ret "The floor is an open metal mesh, like the floor of a catwalk.");
    GamePrint "The floor is an open metal mesh, like the floor of a catwalk.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 044700:
  TraceOperation 044700 (Je [Var (Global 203),Con 63] (Branch F (Dloc 044719)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 044704 (Je [Var (Global 0),Con 175] (Branch F (Dloc 044719)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),175)) {
      TraceOperation 044708 (Call (Floc 022042) [Con 63,Con 115] Sp);
      PushFrame;
      PushReturnAddress 044708;
      SetLocal 1 63;
      SetLocal 2 115;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 044719
    }
  } else {
    Jump: 044719
  }
LocReturn 044708:
  PushStack call_result;
  TraceOperation 044715 (Store (Con 207) (Con 42));
  SetByte 008290 0;
  SetByte 008291 42;
  TraceOperation 044718 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 044719:
  TraceOperation 044719 (Je [Var (Global 203),Con 57] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 044723 (Je [Var (Global 0),Con 149] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),149)) {
      TraceOperation 044727 (Jz (Var (Global 86)) (Branch T Dfalse));
      Let b5 = M[008080];
      Let b6 = M[008081];
      if (IsZero(MakeHiLo(b5,b6))) {
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 0;
        JumpIndirect: (return) return_address_7
      } else {
        TraceOperation 044730 (Print_ret "It occurs to you that you've never deliberately lain in any mud before and that it's actually a pleasant sort of squishy sensation. You let the mud ooze between your toes. You may be here for some time, so you may as well make the most of it.");
        GamePrint "It occurs to you that you've never deliberately lain in any mud before and that it's actually a pleasant sort of squishy sensation. You let the mud ooze between your toes. You may be here for some time, so you may as well make the most of it.\n";
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 1;
        JumpIndirect: (return) return_address_8
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
--------------------------------------------------
LocRoutine 044860:
  MakeRoutineFrame 0;
  Jump: 044861
LocOp 044861:
  TraceOperation 044861 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 044865 (Je [Var (Global 0),Var (Global 69)] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[008046];
    Let b6 = M[008047];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 044869 (Call (Floc 022042) [Con 61,Con 42] Sp);
      PushFrame;
      PushReturnAddress 044869;
      SetLocal 1 61;
      SetLocal 2 42;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
LocReturn 044869:
  PushStack call_result;
  TraceOperation 044876 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 044878:
  MakeRoutineFrame 0;
  Jump: 044879
LocOp 044879:
  TraceOperation 044879 (Je [Var (Global 203),Con 93] (Branch F (Dloc 044890)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 044883 (Call (Floc 022042) [Con 90] Sp);
    PushFrame;
    PushReturnAddress 044883;
    SetLocal 1 90;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022057
  } else {
    Jump: 044890
  }
LocReturn 044883:
  PushStack call_result;
  TraceOperation 044889 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 044890:
  TraceOperation 044890 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 044894 (Je [Var (Global 0),Var (Global 69)] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[008046];
    Let b6 = M[008047];
    if (Equal(MakeHiLo(b3,b4),MakeHiLo(b5,b6))) {
      TraceOperation 044898 (Call (Floc 022042) [Con 61,Con 42] Sp);
      PushFrame;
      PushReturnAddress 044898;
      SetLocal 1 61;
      SetLocal 2 42;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
LocReturn 044898:
  PushStack call_result;
  TraceOperation 044905 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 044906:
  MakeRoutineFrame 0;
  Jump: 044907
LocOp 044907:
  TraceOperation 044907 (Jz (Var (Global 85)) (Branch F (Dloc 044914)));
  Let b1 = M[008078];
  Let b2 = M[008079];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 044910 (Print_paddr (Var (Global 56)));
    Let b3 = M[008020];
    Let b4 = M[008021];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 044912 New_line;
    GamePrint "\n";
    TraceOperation 044913 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 044914
  }
LocOp 044914:
  TraceOperation 044914 (Je [Var (Global 203),Con 45] (Branch F (Dloc 044926)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),45)) {
    TraceOperation 044918 (Call (Floc 022042) [Con 24,Con 165] Sp);
    PushFrame;
    PushReturnAddress 044918;
    SetLocal 1 24;
    SetLocal 2 165;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 044926
  }
LocReturn 044918:
  PushStack call_result;
  TraceOperation 044925 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 044926:
  TraceOperation 044926 (Je [Var (Global 0),Con 168] (Branch F (Dloc 044985)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 044930 (Je [Var (Global 203),Con 61,Con 63] (Branch F (Dloc 044944)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),61),Equal(MakeHiLo(b3,b4),63))) {
      TraceOperation 044936 (Call (Floc 022042) [Con 103,Con 159] Sp);
      PushFrame;
      PushReturnAddress 044936;
      SetLocal 1 103;
      SetLocal 2 159;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 044944
    }
  } else {
    Jump: 044985
  }
LocReturn 044936:
  PushStack call_result;
  TraceOperation 044943 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 044944:
  TraceOperation 044944 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 044950 (Print_ret "The bloody thing's been jammed shut for months, now.");
    GamePrint "The bloody thing's been jammed shut for months, now.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 044985:
  TraceOperation 044985 (Je [Var (Global 203),Con 63] (Branch F (Dloc 045004)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 044989 (Print_ret "You see the country lane.");
    GamePrint "You see the country lane.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 045004
  }
LocOp 045004:
  TraceOperation 045004 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 045010 (Print_paddr (Var (Global 26)));
    Let b3 = M[007960];
    Let b4 = M[007961];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 045012 New_line;
    GamePrint "\n";
    TraceOperation 045013 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 045014:
  MakeRoutineFrame 0;
  Jump: 045015
LocOp 045015:
  TraceOperation 045015 (Je [Var (Global 203),Con 33,Con 35] (Branch F (Dloc 045028)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),33),Equal(MakeHiLo(b1,b2),35))) {
    TraceOperation 045021 (Call (Floc 043620) [Con 18] Sp);
    PushFrame;
    PushReturnAddress 045021;
    SetLocal 1 18;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    Jump: 045028
  }
LocReturn 045021:
  PushStack call_result;
  TraceOperation 045027 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 045028:
  TraceOperation 045028 (Je [Var (Global 203),Con 36] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),36)) {
    TraceOperation 045032 (Call (Floc 043620) [Con 20] Sp);
    PushFrame;
    PushReturnAddress 045032;
    SetLocal 1 20;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 045032:
  PushStack call_result;
  TraceOperation 045038 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 045040:
  MakeRoutineFrame 0;
  Jump: 045041
LocOp 045041:
  TraceOperation 045041 (Test_attr (Var (Global 0)) (Con 7) (Branch T (Dloc 045052)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,0)) {
    Jump: 045052
  } else {
    TraceOperation 045045 (Call (Floc 057596) [Con 38] Sp);
    PushFrame;
    PushReturnAddress 045045;
    SetLocal 1 38;
    MakeRoutineFrame 1;
    Jump: 057599
  }
LocReturn 045045:
  PushStack call_result;
  TraceOperation 045051 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 045052:
  TraceOperation 045052 (Jin (Con 124) (Var (Global 0)) (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001871];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 045056 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),61)) {
      TraceOperation 045060 (Print "The sky is filled with the ships of the ");
      GamePrint "The sky is filled with the ships of the ";
      TraceOperation 045081 (Print_obj (Con 124));
      Let b6 = M[001874];
      Let b7 = M[001875];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
      GamePrint ite_res9;
      TraceOperation 045083 (Print_ret ".");
      GamePrint ".\n";
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 1;
      JumpIndirect: (return) return_address_10
    } else {
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 0;
      JumpIndirect: (return) return_address_11
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_12;
    SetResult 0;
    JumpIndirect: (return) return_address_12
  }
--------------------------------------------------
LocRoutine 045086:
  MakeRoutineFrame 0;
  Jump: 045087
LocOp 045087:
  TraceOperation 045087 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 045091 (Je [Var (Global 0),Con 86] (Branch F (Dloc 045174)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),86)) {
      TraceOperation 045096 (Print "The approaching star is a small, unregarded yellow sun, with nine planets of varying sizes. The ");
      GamePrint "The approaching star is a small, unregarded yellow sun, with nine planets of varying sizes. The ";
      TraceOperation 045155 (Print_obj (Con 163));
      Let b5 = M[002225];
      Let b6 = M[002226];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 045157 (Print_ret " catches your attention.");
      GamePrint " catches your attention.\n";
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    } else {
      Jump: 045174
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
LocOp 045174:
  TraceOperation 045174 (Je [Var (Global 0),Con 54,Con 66] (Branch F (Dloc 045203)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(Equal(MakeHiLo(b1,b2),54),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 045180 (Print_ret "The sun is a smallish orange star.");
    GamePrint "The sun is a smallish orange star.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 045203
  }
LocOp 045203:
  TraceOperation 045203 (Je [Var (Global 0),Con 149,Con 137,Con 138] (Branch F (Dloc 045233)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),149),Equal(MakeHiLo(b1,b2),137)),Equal(MakeHiLo(b1,b2),138))) {
    TraceOperation 045210 (Print_ret "The sun is a smallish yellow star.");
    GamePrint "The sun is a smallish yellow star.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 045233
  }
LocOp 045233:
  TraceOperation 045233 (Call (Floc 057596) [Con 37] Sp);
  PushFrame;
  PushReturnAddress 045233;
  SetLocal 1 37;
  MakeRoutineFrame 1;
  Jump: 057599
LocReturn 045233:
  PushStack call_result;
  TraceOperation 045239 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 045240:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 045243
LocOp 045243:
  TraceOperation 045243 (Je [Var (Global 203),Con 172] (Branch F (Dloc 045257)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),172)) {
    TraceOperation 045247 (Store (Con 217) (Con 0));
    SetByte 008310 0;
    SetByte 008311 0;
    TraceOperation 045250 (Call (Floc 022042) [Con 173] Sp);
    PushFrame;
    PushReturnAddress 045250;
    SetLocal 1 173;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022057
  } else {
    Jump: 045257
  }
LocReturn 045250:
  PushStack call_result;
  TraceOperation 045256 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 045257:
  TraceOperation 045257 (Je [Var (Global 203),Con 130] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),130)) {
    TraceOperation 045261 (Call (Floc 043552) [Var (Global 0),Con 26] (Local 1));
    Let b3 = M[007908];
    Let b4 = M[007909];
    PushFrame;
    PushReturnAddress 045261;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 26;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 043559
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 045261:
  SetLocal 1 call_result;
  TraceOperation 045268 (Jz (Var (Local 1)) (Branch T (Dloc 045279)));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    Jump: 045279
  } else {
    TraceOperation 045271 (Call (Floc 022042) [Con 153,Var (Local 1)] Sp);
    GetLocal 1 local1_2;
    PushFrame;
    PushReturnAddress 045271;
    SetLocal 1 153;
    SetLocal 2 local1_2;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 045271:
  PushStack call_result;
  TraceOperation 045278 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 045279:
  TraceOperation 045279 (Print_ret "Pleased to meet you.");
  GamePrint "Pleased to meet you.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 045294:
  MakeRoutineFrame 0;
  Jump: 045295
LocOp 045295:
  TraceOperation 045295 (Je [Var (Global 203),Con 103] (Branch F (Dloc 045308)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 045299 (Print_ret "They are.");
    GamePrint "They are.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 045308
  }
LocOp 045308:
  TraceOperation 045308 (Je [Var (Global 203),Con 39] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),39)) {
    TraceOperation 045312 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 045331)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001610];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 045316 (Print "The Beast doesn't notice.");
      GamePrint "The Beast doesn't notice.";
      TraceOperation 045327 (Print_paddr (Var (Global 30)));
      Let b6 = M[007968];
      Let b7 = M[007969];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 045329 New_line;
      GamePrint "\n";
      TraceOperation 045330 Rtrue;
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 1;
      JumpIndirect: (return) return_address_8
    } else {
      Jump: 045331
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
LocOp 045331:
  TraceOperation 045331 (Print_ret "That won't help.");
  GamePrint "That won't help.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 045344:
  MakeRoutineFrame 0;
  Jump: 045345
LocOp 045345:
  TraceOperation 045345 (Je [Var (Global 201),Con 8] (Branch F Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 045349 (Jz (Var (Global 202)) (Branch T Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 045352 (Call (Floc 050116) [] Sp);
      PushFrame;
      PushReturnAddress 045352;
      MakeRoutineFrame 0;
      Jump: 050117
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 045352:
  PushStack call_result;
  TraceOperation 045357 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 045358:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 045361
LocOp 045361:
  TraceOperation 045361 (Je [Var (Global 203),Con 15] (Branch F (Dloc 045411)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 045365 (Print "Talking to yourself is a sign of impending mental collapse.");
    GamePrint "Talking to yourself is a sign of impending mental collapse.";
    TraceOperation 045404 New_line;
    GamePrint "\n";
    TraceOperation 045405 (Call (Floc 043634) [] Sp);
    PushFrame;
    PushReturnAddress 045405;
    MakeRoutineFrame 0;
    Jump: 043635
  } else {
    Jump: 045411
  }
LocReturn 045405:
  PushStack call_result;
  TraceOperation 045410 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 045411:
  TraceOperation 045411 (Je [Var (Global 203),Con 74] (Branch F (Dloc 045420)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 045415 (Print_ret "Yes?");
    GamePrint "Yes?\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 045420
  }
LocOp 045420:
  TraceOperation 045420 (Je [Var (Global 203),Con 167] (Branch F (Dloc 045428)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),167)) {
    TraceOperation 045424 (Print_paddr (Var (Global 54)));
    Let b3 = M[008016];
    Let b4 = M[008017];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 045426 New_line;
    GamePrint "\n";
    TraceOperation 045427 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 045428
  }
LocOp 045428:
  TraceOperation 045428 (Je [Var (Global 203),Con 66] (Branch F (Dloc 045460)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 045432 (Je [Var (Global 202),Con 30] (Branch F (Dloc 045460)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 045436 (Jin (Var (Global 201)) (Con 31) (Branch F (Dloc 045452)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      if (Equal(31,Widen(b7))) {
        TraceOperation 045440 (Je [Var (Global 201),Con 111,Con 8] (Branch T (Dloc 045452)));
        Let b8 = M[008310];
        Let b9 = M[008311];
        if (LogOr(Equal(MakeHiLo(b8,b9),111),Equal(MakeHiLo(b8,b9),8))) {
          Jump: 045452
        } else {
          TraceOperation 045446 (Call (Floc 038210) [] Sp);
          PushFrame;
          PushReturnAddress 045446;
          MakeRoutineFrame 0;
          Jump: 038211
        }
      } else {
        Jump: 045452
      }
    } else {
      Jump: 045460
    }
  } else {
    Jump: 045460
  }
LocReturn 045446:
  PushStack call_result;
  TraceOperation 045451 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 045452:
  TraceOperation 045452 (Call (Floc 022042) [Con 124,Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 045452;
  SetLocal 1 124;
  SetLocal 2 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 045452:
  PushStack call_result;
  TraceOperation 045459 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 045460:
  TraceOperation 045460 (Je [Var (Global 203),Con 98] (Branch F (Dloc 045470)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),98)) {
    TraceOperation 045464 (Call (Floc 040326) [] Sp);
    PushFrame;
    PushReturnAddress 045464;
    MakeRoutineFrame 0;
    Jump: 040327
  } else {
    Jump: 045470
  }
LocReturn 045464:
  PushStack call_result;
  TraceOperation 045469 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 045470:
  TraceOperation 045470 (Je [Var (Global 203),Con 129] (Branch F (Dloc 045480)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),129)) {
    TraceOperation 045474 (Call (Floc 028718) [] Sp);
    PushFrame;
    PushReturnAddress 045474;
    MakeRoutineFrame 1;
    SetLocal 1 0;
    Jump: 028721
  } else {
    Jump: 045480
  }
LocReturn 045474:
  PushStack call_result;
  TraceOperation 045479 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 045480:
  TraceOperation 045480 (Je [Var (Global 203),Con 45,Con 24] (Branch T (Dloc 045494)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),45),Equal(MakeHiLo(b1,b2),24))) {
    Jump: 045494
  } else {
    TraceOperation 045486 (Je [Var (Global 203),Con 132] (Branch F (Dloc 045502)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),132)) {
      TraceOperation 045490 (Je [Var (Global 202),Con 52] (Branch F (Dloc 045502)));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (Equal(MakeHiLo(b5,b6),52)) {
        Jump: 045494
      } else {
        Jump: 045502
      }
    } else {
      Jump: 045502
    }
  }
LocOp 045494:
  TraceOperation 045494 (Call (Floc 042734) [Con -9998] Sp);
  PushFrame;
  PushReturnAddress 045494;
  SetLocal 1 -9998;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 045494:
  PushStack call_result;
  TraceOperation 045501 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 045502:
  TraceOperation 045502 (Je [Var (Global 203),Con 64] (Branch F (Dloc 045515)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),64)) {
    TraceOperation 045506 (Print_ret "You're right here!");
    GamePrint "You're right here!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 045515
  }
LocOp 045515:
  TraceOperation 045515 (Je [Var (Global 203),Con 178] (Branch F (Dloc 045529)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),178)) {
    TraceOperation 045519 (Print "You are ");
    GamePrint "You are ";
    TraceOperation 045524 (Print_obj (Var (Global 120)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 045526 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 045529
  }
LocOp 045529:
  TraceOperation 045529 (Je [Var (Global 203),Con 61] (Branch F (Dloc 045576)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 045533 (Je [Var (Global 0),Con 81] (Branch F (Dloc 045576)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),81)) {
      TraceOperation 045537 (Print_ret "You look perfectly normal (except that you're two microns tall).");
      GamePrint "You look perfectly normal (except that you're two microns tall).\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 045576
    }
  } else {
    Jump: 045576
  }
LocOp 045576:
  TraceOperation 045576 (Je [Var (Global 203),Con 100] (Branch F (Dloc 045584)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),100)) {
    TraceOperation 045580 (Print_paddr (Var (Global 48)));
    Let b3 = M[008004];
    Let b4 = M[008005];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 045582 New_line;
    GamePrint "\n";
    TraceOperation 045583 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 045584
  }
LocOp 045584:
  TraceOperation 045584 (Je [Var (Global 203),Con 69] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 045588 (Print_ret "I'd like to, but like most computers I don't have legs.");
    GamePrint "I'd like to, but like most computers I don't have legs.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 045620:
  MakeRoutineFrame 0;
  Jump: 045621
LocOp 045621:
  TraceOperation 045621 (Je [Var (Global 203),Con 63,Con 61,Con 90] (Branch F (Dloc 045634)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),61)),Equal(MakeHiLo(b1,b2),90))) {
    TraceOperation 045628 (Call (Floc 034400) [] Sp);
    PushFrame;
    PushReturnAddress 045628;
    MakeRoutineFrame 0;
    Jump: 034401
  } else {
    Jump: 045634
  }
LocReturn 045628:
  PushStack call_result;
  TraceOperation 045633 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 045634:
  TraceOperation 045634 (Je [Var (Global 203),Con 21,Con 38] (Branch F (Dloc 045646)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),21),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 045640 (Call (Floc 040326) [] Sp);
    PushFrame;
    PushReturnAddress 045640;
    MakeRoutineFrame 0;
    Jump: 040327
  } else {
    Jump: 045646
  }
LocReturn 045640:
  PushStack call_result;
  TraceOperation 045645 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 045646:
  TraceOperation 045646 (Je [Var (Global 203),Con 59,Con 86] (Branch F (Dloc 045659)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),59),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 045652 (Call (Floc 043620) [Con 26] Sp);
    PushFrame;
    PushReturnAddress 045652;
    SetLocal 1 26;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    Jump: 045659
  }
LocReturn 045652:
  PushStack call_result;
  TraceOperation 045658 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 045659:
  TraceOperation 045659 (Je [Var (Global 203),Con 168] (Branch F (Dloc 045729)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 045664 (Je [Var (Global 0),Con 108] (Branch F (Dloc 045674)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),108)) {
      TraceOperation 045668 (Call (Floc 037874) [] Sp);
      PushFrame;
      PushReturnAddress 045668;
      MakeRoutineFrame 0;
      Jump: 037875
    } else {
      Jump: 045674
    }
  } else {
    Jump: 045729
  }
LocReturn 045668:
  PushStack call_result;
  TraceOperation 045673 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 045674:
  TraceOperation 045674 (Print_ret "Walking around the room reveals nothing new. To move elsewhere, just type the desired direction.");
  GamePrint "Walking around the room reveals nothing new. To move elsewhere, just type the desired direction.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 045729:
  TraceOperation 045729 (Je [Var (Global 203),Con 88] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 045733 (Call (Floc 022042) [Con 88,Con 45] Sp);
    PushFrame;
    PushReturnAddress 045733;
    SetLocal 1 88;
    SetLocal 2 45;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 045733:
  PushStack call_result;
  TraceOperation 045740 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 045742:
  MakeRoutineFrame 0;
  Jump: 045743
LocOp 045743:
  TraceOperation 045743 (Je [Var (Global 203),Con 174] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 045747 (Print_ret "That's for me to know and you to find out.");
    GamePrint "That's for me to know and you to find out.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 045774:
  MakeRoutineFrame 0;
  Jump: 045775
LocOp 045775:
  TraceOperation 045775 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 045779 (Je [Var (Global 0),Con 66] (Branch F (Dloc 045845)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),66)) {
      TraceOperation 045784 (Print "The only control, other than those related to steering the boat, is the large red ");
      GamePrint "The only control, other than those related to steering the boat, is the large red ";
      TraceOperation 045833 (Print_obj (Con 58));
      Let b5 = M[001280];
      Let b6 = M[001281];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 045835 (Print ".");
      GamePrint ".";
      TraceOperation 045838 (Call (Floc 057998) [] Sp);
      PushFrame;
      PushReturnAddress 045838;
      MakeRoutineFrame 0;
      Jump: 057999
    } else {
      Jump: 045845
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
LocReturn 045838:
  PushStack call_result;
  TraceOperation 045843 New_line;
  GamePrint "\n";
  TraceOperation 045844 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 045845:
  TraceOperation 045845 (Je [Var (Global 0),Con 201] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),201)) {
    TraceOperation 045849 (Print "Most of the controls are beyond your comprehension. ");
    GamePrint "Most of the controls are beyond your comprehension. ";
    TraceOperation 045880 (Jin (Con 197) (Var (Global 0)) (Branch F (Dloc 045926)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[002528];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 045884 (Print "The simplest one is a ");
      GamePrint "The simplest one is a ";
      TraceOperation 045899 (Print_obj (Con 197));
      Let b6 = M[002531];
      Let b7 = M[002532];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
      GamePrint ite_res9;
      TraceOperation 045901 (Print " of some kind.");
      GamePrint " of some kind.";
      TraceOperation 045910 (Jz (Var (Global 210)) (Branch T (Dloc 045924)));
      Let b10 = M[008328];
      Let b11 = M[008329];
      if (IsZero(MakeHiLo(b10,b11))) {
        Jump: 045924
      } else {
        TraceOperation 045913 (Print " ");
        GamePrint " ";
        TraceOperation 045916 (Call (Floc 022042) [Con 61,Con 197] Sp);
        PushFrame;
        PushReturnAddress 045916;
        SetLocal 1 61;
        SetLocal 2 197;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      }
    } else {
      Jump: 045926
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_12;
    SetResult 0;
    JumpIndirect: (return) return_address_12
  }
LocReturn 045916:
  PushStack call_result;
  TraceOperation 045923 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 045924:
  TraceOperation 045924 New_line;
  GamePrint "\n";
  TraceOperation 045925 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 045926:
  TraceOperation 045926 (Print_ret "A fused spot shows where a receptacle once was.");
  GamePrint "A fused spot shows where a receptacle once was.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 045960:
  MakeRoutineFrame 0;
  Jump: 045961
LocOp 045961:
  TraceOperation 045961 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 045965 (Je [Var (Global 0),Con 149] (Branch F (Dloc 045982)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),149)) {
      TraceOperation 045969 (Print_ret "You can't hear anything from here.");
      GamePrint "You can't hear anything from here.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 045982
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocOp 045982:
  TraceOperation 045982 (Call (Floc 022042) [Con 74,Con 84] Sp);
  PushFrame;
  PushReturnAddress 045982;
  SetLocal 1 74;
  SetLocal 2 84;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 045982:
  PushStack call_result;
  TraceOperation 045989 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 045990:
  MakeRoutineFrame 0;
  Jump: 045991
LocOp 045991:
  TraceOperation 045991 (Je [Con 27,Var (Global 195)] (Branch F (Dloc 046511)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(27,MakeHiLo(b1,b2))) {
    TraceOperation 045996 (Je [Var (Global 203),Con 150] (Branch F (Dloc 046019)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 046000 (Je [Var (Global 201),Con 30] (Branch F (Dloc 046019)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 046004 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 046007 (Call (Floc 022042) [Con 22,Con 27,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame;
        PushReturnAddress 046007;
        SetLocal 1 22;
        SetLocal 2 27;
        SetLocal 3 MakeHiLo(b7,b8);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 022057
      } else {
        Jump: 046019
      }
    } else {
      Jump: 046019
    }
  } else {
    Jump: 046511
  }
LocReturn 046007:
  PushStack call_result;
  TraceOperation 046015 (Store (Con 211) (Con 27));
  SetByte 008298 0;
  SetByte 008299 27;
  TraceOperation 046018 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 046019:
  TraceOperation 046019 (Je [Var (Global 203),Con 75] (Branch F (Dloc 046037)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 046023 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 046026 (Call (Floc 022042) [Con 75,Con 27] Sp);
    PushFrame;
    PushReturnAddress 046026;
    SetLocal 1 75;
    SetLocal 2 27;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 046037
  }
LocReturn 046026:
  PushStack call_result;
  TraceOperation 046033 (Store (Con 211) (Con 27));
  SetByte 008298 0;
  SetByte 008299 27;
  TraceOperation 046036 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 046037:
  TraceOperation 046037 (Je [Var (Global 0),Con 54] (Branch F (Dloc 046460)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 046042 (Jin (Con 51) (Con 27) (Branch F (Dloc 046053)));
    Let b3 = M[001214];
    if (Equal(27,Widen(b3))) {
      TraceOperation 046046 (Je [Var (Global 203),Con 132] (Branch F (Dloc 046053)));
      Let b4 = M[008314];
      Let b5 = M[008315];
      if (Equal(MakeHiLo(b4,b5),132)) {
        TraceOperation 046050 (Jz (Var (Global 176)) (Branch F (Dloc 046068)));
        Let b6 = M[008260];
        Let b7 = M[008261];
        if (IsZero(MakeHiLo(b6,b7))) {
          Jump: 046053
        } else {
          Jump: 046068
        }
      } else {
        Jump: 046053
      }
    } else {
      Jump: 046053
    }
  } else {
    Jump: 046460
  }
LocOp 046053:
  TraceOperation 046053 (Jin (Con 51) (Con 27) (Branch F (Dloc 046133)));
  Let b1 = M[001214];
  if (Equal(27,Widen(b1))) {
    TraceOperation 046058 (Je [Var (Global 203),Con 53] (Branch F (Dloc 046133)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (Equal(MakeHiLo(b2,b3),53)) {
      TraceOperation 046063 (Je [Var (Global 201),Con 51] (Branch F (Dloc 046133)));
      Let b4 = M[008310];
      Let b5 = M[008311];
      if (Equal(MakeHiLo(b4,b5),51)) {
        Jump: 046068
      } else {
        Jump: 046133
      }
    } else {
      Jump: 046133
    }
  } else {
    Jump: 046133
  }
LocOp 046068:
  TraceOperation 046068 (Clear_attr (Con 51) (Con 27));
  Let b1 = M[001213];
  SetByte 001213 ClearBit(b1,4);
  TraceOperation 046071 (Call (Floc 022320) [Con -25112,Con 8] Sp);
  PushFrame;
  PushReturnAddress 046071;
  SetLocal 1 -25112;
  SetLocal 2 8;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 046071:
  PushStack call_result;
  TraceOperation 046079 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 046084 (Insert_obj (Con 51) (Var (Global 0)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[001214];
  if (IsZero(Widen(b4))) {} else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
    if (Equal(Widen(b5),51)) {
      Let b6 = M[001215];
      SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
    } else {
      Let loop_var7 = Widen(b5);
      Label 8: {
        Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
        if (Equal(Widen(b9),51)) {
          Let b10 = M[001215];
          SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
        } else {
          Assign loop_var7 = Widen(b9);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 001214 b3;
  Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
  SetByte 001215 LoByte(Widen(b11));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 51;
  TraceOperation 046087 (Set_attr (Con 51) (Con 25));
  Let b12 = M[001213];
  SetByte 001213 SetBit(b12,6);
  TraceOperation 046090 (Set_attr (Con 51) (Con 21));
  Let b13 = M[001212];
  SetByte 001212 SetBit(b13,2);
  TraceOperation 046093 (Print "The guards hesitate, then toss their ");
  GamePrint "The guards hesitate, then toss their ";
  TraceOperation 046116 (Print_obj (Con 51));
  Let b14 = M[001217];
  Let b15 = M[001218];
  Let b16 = M[Address(MakeHiLo(b14,b15))];
  Let ite_res17 = Ite((IsZeroByte(b16),"",GetText(Offset(Address(MakeHiLo(b14,b15)),1))));
  GamePrint ite_res17;
  TraceOperation 046118 (Print_ret "s into a pile in front of you.");
  GamePrint "s into a pile in front of you.\n";
  PopFrame;
  PopReturnAddress return_address_18;
  SetResult 1;
  JumpIndirect: (return) return_address_18
LocOp 046133:
  TraceOperation 046133 (Je [Var (Global 203),Con 132] (Branch F (Dloc 046289)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 046138 (Jin (Con 51) (Con 27) (Branch F (Dloc 046150)));
    Let b3 = M[001214];
    if (Equal(27,Widen(b3))) {
      TraceOperation 046142 (Call (Floc 042734) [Con -9995] Sp);
      PushFrame;
      PushReturnAddress 046142;
      SetLocal 1 -9995;
      MakeRoutineFrame 1;
      Jump: 042737
    } else {
      Jump: 046150
    }
  } else {
    Jump: 046289
  }
LocReturn 046142:
  PushStack call_result;
  TraceOperation 046149 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 046150:
  TraceOperation 046150 (Print_ret "Someone around here is being very stupid. Let's say it's the guards, since they're only fictitious characters and therefore not potential Infocom customers. The poor fictitious saps don't understand how they can shoot without rifles.");
  GamePrint "Someone around here is being very stupid. Let's say it's the guards, since they're only fictitious characters and therefore not potential Infocom customers. The poor fictitious saps don't understand how they can shoot without rifles.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 046289:
  TraceOperation 046289 (Je [Var (Global 203),Con 124] (Branch F (Dloc 046341)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 046293 (Je [Var (Global 201),Con 51] (Branch F (Dloc 046341)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),51)) {
      TraceOperation 046297 (Jin (Con 51) (Con 27) (Branch F (Dloc 046314)));
      Let b5 = M[001214];
      if (Equal(27,Widen(b5))) {
        TraceOperation 046301 (Print_ret "\"We already have them!\"");
        GamePrint "\"We already have them!\"\n";
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      } else {
        Jump: 046314
      }
    } else {
      Jump: 046341
    }
  } else {
    Jump: 046341
  }
LocOp 046314:
  TraceOperation 046314 (Insert_obj (Con 51) (Con 27));
  Let b1 = M[001214];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),51)) {
      Let b3 = M[001215];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),51)) {
          Let b7 = M[001215];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 001214 27;
  Let b8 = M[001000];
  SetByte 001215 LoByte(Widen(b8));
  SetByte 001000 51;
  TraceOperation 046317 (Call (Floc 022320) [Con -25112,Con 5] Sp);
  PushFrame;
  PushReturnAddress 046317;
  SetLocal 1 -25112;
  SetLocal 2 5;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 046317:
  PushStack call_result;
  TraceOperation 046325 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 046330 (Print_ret "They do so.");
  GamePrint "They do so.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 046341:
  TraceOperation 046341 (Je [Var (Global 203),Con 86] (Branch F (Dloc 046382)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),86)) {
    TraceOperation 046345 (Print_ret "\"We can't leave while you're in trouble, Mr. President!\"");
    GamePrint "\"We can't leave while you're in trouble, Mr. President!\"\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 046382
  }
LocOp 046382:
  TraceOperation 046382 (Print "You have failed to issue one of the small set of commands that the guards' military intelligences are trained to understand.");
  GamePrint "You have failed to issue one of the small set of commands that the guards' military intelligences are trained to understand.";
  TraceOperation 046453 New_line;
  GamePrint "\n";
  TraceOperation 046454 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 046454;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 046454:
  PushStack call_result;
  TraceOperation 046459 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 046460:
  TraceOperation 046460 (Call (Floc 043468) [Con 111,Con 31] Sp);
  PushFrame;
  PushReturnAddress 046460;
  SetLocal 1 111;
  SetLocal 2 31;
  MakeRoutineFrame 2;
  Jump: 043473
LocReturn 046460:
  PushStack call_result;
  TraceOperation 046467 (Jz (Var Sp) (Branch T (Dloc 046493)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 046493
  } else {
    TraceOperation 046470 (Print "\"Resistance is useless!\"");
    GamePrint "\"Resistance is useless!\"";
    TraceOperation 046489 New_line;
    GamePrint "\n";
    TraceOperation 046490 (Jump 046505);
    Jump: 046505
  }
LocOp 046493:
  TraceOperation 046493 (Print "\"I");
  GamePrint "\"I";
  TraceOperation 046498 (Call (Floc 080570) [Con 1] Sp);
  PushFrame;
  PushReturnAddress 046498;
  SetLocal 1 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 080577
LocReturn 046498:
  PushStack call_result;
  TraceOperation 046504 New_line;
  GamePrint "\n";
  Jump: 046505
LocOp 046505:
  TraceOperation 046505 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 046505;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 046505:
  PushStack call_result;
  TraceOperation 046510 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 046511:
  TraceOperation 046511 (Je [Var (Global 0),Con 108] (Branch F (Dloc 046530)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 046515 (Je [Var (Global 203),Con 153,Con 75,Con 15] (Branch F (Dloc 046530)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),153),Equal(MakeHiLo(b3,b4),75)),Equal(MakeHiLo(b3,b4),15))) {
      TraceOperation 046522 (Call (Floc 022042) [Con 15,Con 106] Sp);
      PushFrame;
      PushReturnAddress 046522;
      SetLocal 1 15;
      SetLocal 2 106;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 046530
    }
  } else {
    Jump: 046530
  }
LocReturn 046522:
  PushStack call_result;
  TraceOperation 046529 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 046530:
  TraceOperation 046530 (Je [Var (Global 0),Con 108] (Branch F (Dloc 046552)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 046534 (Je [Var (Global 203),Con 23,Con 22] (Branch F (Dloc 046552)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),23),Equal(MakeHiLo(b3,b4),22))) {
      TraceOperation 046540 (Je [Con 27,Var (Global 201)] (Branch F (Dloc 046552)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(27,MakeHiLo(b5,b6))) {
        TraceOperation 046544 (Call (Floc 022042) [Con 15,Con 106] Sp);
        PushFrame;
        PushReturnAddress 046544;
        SetLocal 1 15;
        SetLocal 2 106;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      } else {
        Jump: 046552
      }
    } else {
      Jump: 046552
    }
  } else {
    Jump: 046552
  }
LocReturn 046544:
  PushStack call_result;
  TraceOperation 046551 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 046552:
  TraceOperation 046552 (Je [Var (Global 203),Con 61] (Branch F (Dloc 046574)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 046556 (Jin (Con 51) (Con 27) (Branch F (Dloc 046574)));
    Let b3 = M[001214];
    if (Equal(27,Widen(b3))) {
      TraceOperation 046560 (Print "They're holding ");
      GamePrint "They're holding ";
      TraceOperation 046569 (Print_obj (Con 51));
      Let b4 = M[001217];
      Let b5 = M[001218];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
      GamePrint ite_res7;
      TraceOperation 046571 (Print_ret "s.");
      GamePrint "s.\n";
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 1;
      JumpIndirect: (return) return_address_8
    } else {
      Jump: 046574
    }
  } else {
    Jump: 046574
  }
LocOp 046574:
  TraceOperation 046574 (Je [Var (Global 0),Con 54] (Branch F (Dloc 046600)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 046578 (Je [Var (Global 203),Con 132] (Branch F (Dloc 046600)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),132)) {
      TraceOperation 046582 (Call (Floc 092464) [] Sp);
      PushFrame;
      PushReturnAddress 046582;
      MakeRoutineFrame 0;
      Jump: 092465
    } else {
      Jump: 046600
    }
  } else {
    Jump: 046600
  }
LocReturn 046582:
  PushStack call_result;
  TraceOperation 046587 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 046590 (Print_paddr (Var (Global 31)));
    Let b2 = M[007970];
    Let b3 = M[007971];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 046592 (Call (Floc 042734) [Con -9983] Sp);
    PushFrame;
    PushReturnAddress 046592;
    SetLocal 1 -9983;
    MakeRoutineFrame 1;
    Jump: 042737
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  }
LocReturn 046592:
  PushStack call_result;
  TraceOperation 046599 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 046600:
  TraceOperation 046600 (Je [Var (Global 203),Con 66] (Branch F (Dloc 046645)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 046604 (Je [Var (Global 201),Con 52] (Branch F (Dloc 046645)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),52)) {
      TraceOperation 046608 (Print "The guards are more than glad to disarm you. They");
      GamePrint "The guards are more than glad to disarm you. They";
      TraceOperation 046639 (Call (Floc 092666) [] Sp);
      PushFrame;
      PushReturnAddress 046639;
      MakeRoutineFrame 0;
      Jump: 092667
    } else {
      Jump: 046645
    }
  } else {
    Jump: 046645
  }
LocReturn 046639:
  PushStack call_result;
  TraceOperation 046644 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 046645:
  TraceOperation 046645 (Je [Var (Global 203),Con 43] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 046649 (Je [Var (Global 0),Con 121] (Branch F (Dloc 046658)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),121)) {
      TraceOperation 046653 (Print_ret "One.");
      GamePrint "One.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 046658
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocOp 046658:
  TraceOperation 046658 (Je [Var (Global 0),Con 108] (Branch F (Dloc 046671)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 046662 (Print_ret "Several.");
    GamePrint "Several.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 046671
  }
LocOp 046671:
  TraceOperation 046671 (Print_ret "Many.");
  GamePrint "Many.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 046678:
  MakeRoutineFrame 0;
  Jump: 046679
LocOp 046679:
  TraceOperation 046679 (Jin (Con 27) (Var (Global 0)) (Branch T (Dloc 046694)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[000998];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 046694
  } else {
    TraceOperation 046683 (Print_ret "What weapon?");
    GamePrint "What weapon?\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  }
LocOp 046694:
  TraceOperation 046694 (Je [Var (Global 203),Con 132] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 046698 (Print_paddr (Var (Global 24)));
    Let b3 = M[007956];
    Let b4 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 046700 (Print_ret " it.");
    GamePrint " it.\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 046706:
  MakeRoutineFrame 0;
  Jump: 046707
LocOp 046707:
  TraceOperation 046707 (Je [Var (Global 203),Con 57] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 046711 (Print_paddr (Var (Global 48)));
    Let b3 = M[008004];
    Let b4 = M[008005];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 046713 New_line;
    GamePrint "\n";
    TraceOperation 046714 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 046716:
  MakeRoutineFrame 0;
  Jump: 046717
LocOp 046717:
  TraceOperation 046717 (Je [Var (Global 203),Con 22] (Branch F (Dloc 046725)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 046721 (Je [Var (Global 201),Con 1] (Branch T Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),1)) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 046725
    }
  } else {
    Jump: 046725
  }
LocOp 046725:
  TraceOperation 046725 (Print_ret "That's not important; leave it alone.");
  GamePrint "That's not important; leave it alone.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 046754:
  MakeRoutineFrame 0;
  Jump: 046755
LocOp 046755:
  TraceOperation 046755 (Je [Var (Global 203),Con 104] (Branch F (Dloc 046846)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),104)) {
    TraceOperation 046760 (Random (Con 100) Sp);
    LetRandom random3 100;
    PushStack random3;
    TraceOperation 046764 (Jl (Con 50) (Var Sp) (Branch T (Dloc 046811)));
    PopStack popped4;
    if (LessThan(50,popped4)) {
      Jump: 046811
    } else {
      TraceOperation 046768 (Print_ret "Very clever. It looks like there's a lot you should be panicking about.");
      GamePrint "Very clever. It looks like there's a lot you should be panicking about.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 046846
  }
LocOp 046811:
  TraceOperation 046811 (Print_ret "Why not? Your position appears quite hopeless.");
  GamePrint "Why not? Your position appears quite hopeless.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 046846:
  TraceOperation 046846 (Je [Var (Global 203),Con 90] (Branch F (Dloc 046861)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),90)) {
    TraceOperation 046850 (Store (Con 192) (Con 0));
    SetByte 008260 0;
    SetByte 008261 0;
    TraceOperation 046853 (Call (Floc 022042) [Con 39,Con 33] Sp);
    PushFrame;
    PushReturnAddress 046853;
    SetLocal 1 39;
    SetLocal 2 33;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 046861
  }
LocReturn 046853:
  PushStack call_result;
  TraceOperation 046860 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 046861:
  TraceOperation 046861 (Je [Var (Global 203),Con 165] (Branch F (Dloc 046878)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),165)) {
    TraceOperation 046865 (Print_ret "Time doesn't pass...");
    GamePrint "Time doesn't pass...\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 046878
  }
LocOp 046878:
  TraceOperation 046878 (Je [Var (Global 203),Con 124] (Branch F (Dloc 046891)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 046882 (Print_ret "Not taken.");
    GamePrint "Not taken.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 046891
  }
LocOp 046891:
  TraceOperation 046891 (Je [Var (Global 203),Con 74] (Branch F (Dloc 046915)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 046895 (Call (Floc 043370) [Con 105] Sp);
    PushFrame;
    PushReturnAddress 046895;
    SetLocal 1 105;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043375
  } else {
    Jump: 046915
  }
LocReturn 046895:
  PushStack call_result;
  TraceOperation 046901 (Jz (Var Sp) (Branch T (Dloc 046915)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 046915
  } else {
    TraceOperation 046904 (Store (Con 192) (Con 0));
    SetByte 008260 0;
    SetByte 008261 0;
    TraceOperation 046907 (Call (Floc 022042) [Con 74,Con 105] Sp);
    PushFrame;
    PushReturnAddress 046907;
    SetLocal 1 74;
    SetLocal 2 105;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 046907:
  PushStack call_result;
  TraceOperation 046914 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 046915:
  TraceOperation 046915 (Print_ret "Not done.");
  GamePrint "Not done.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 046924:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 046927
LocOp 046927:
  TraceOperation 046927 (Je [Var (Local 1),Con 2] (Branch F (Dloc 047142)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 046932 (Put_prop (Con 31) (Con 29) (Con 23574));
    Let b2 = M[001037];
    Let b3 = M[001038];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let loop_var5 = DeAddress(Offset(Address(MakeHiLo(b2,b3)),Add(Mul(2,Widen(b4)),1)));
    Label 6: {
      Let b7 = M[Address(loop_var5)];
      if (IsZeroByte(b7)) {
        Error: ("putProp",29)
      } else {
        if (Equal(29,Widen(BwAnd(b7,31)))) {
          if (Equal(Add(Widen(ShiftR(b7,5)),1),2)) {
            SetByte Offset(Address(loop_var5),1) 92;
            SetByte Offset(Offset(Address(loop_var5),1),1) 22;
          } else {
            SetByte Offset(Address(loop_var5),1) 22;
          }
        } else {
          Assign loop_var5 = DeAddress(Offset(Offset(Address(loop_var5),1),Add(Widen(ShiftR(b7,5)),1)));
          Goto: Label 6
        }
      }
    }
    TraceOperation 046938 (Call (Floc 043644) [Con 31,Con 24] Sp);
    PushFrame;
    PushReturnAddress 046938;
    SetLocal 1 31;
    SetLocal 2 24;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 043653
  } else {
    Jump: 047142
  }
LocReturn 046938:
  PushStack call_result;
  TraceOperation 046945 (Set_attr (Con 148) (Con 6));
  Let b1 = M[002083];
  SetByte 002083 SetBit(b1,1);
  TraceOperation 046948 (Store (Con 91) (Con 0));
  SetByte 008058 0;
  SetByte 008059 0;
  TraceOperation 046951 (Store (Con 102) (Con 0));
  SetByte 008080 0;
  SetByte 008081 0;
  Jump: 046954
LocOp 046954:
  TraceOperation 046954 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 046958 (Jl (Var (Global 82)) (Var Sp) (Branch T (Dloc 046977)));
  Let b2 = M[008072];
  Let b3 = M[008073];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 046977
  } else {
    TraceOperation 046962 (Store (Con 98) (Con 0));
    SetByte 008072 0;
    SetByte 008073 0;
    TraceOperation 046965 (Store (Con 99) (Con 10));
    SetByte 008074 0;
    SetByte 008075 10;
    TraceOperation 046968 (Store (Con 89) (Con 190));
    SetByte 008054 0;
    SetByte 008055 190;
    TraceOperation 046971 (Store (Con 88) (Con 3));
    SetByte 008052 0;
    SetByte 008053 3;
    TraceOperation 046974 (Jump 047137);
    Jump: 047137
  }
LocOp 046977:
  TraceOperation 046977 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 046981 (Jl (Var (Global 83)) (Var Sp) (Branch T (Dloc 047000)));
  Let b2 = M[008074];
  Let b3 = M[008075];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047000
  } else {
    TraceOperation 046985 (Store (Con 99) (Con 0));
    SetByte 008074 0;
    SetByte 008075 0;
    TraceOperation 046988 (Store (Con 98) (Con 100));
    SetByte 008072 0;
    SetByte 008073 100;
    TraceOperation 046991 (Store (Con 89) (Con 121));
    SetByte 008054 0;
    SetByte 008055 121;
    TraceOperation 046994 (Store (Con 88) (Con 0));
    SetByte 008052 0;
    SetByte 008053 0;
    TraceOperation 046997 (Jump 047137);
    Jump: 047137
  }
LocOp 047000:
  TraceOperation 047000 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047004 (Jl (Var (Global 81)) (Var Sp) (Branch T (Dloc 047033)));
  Let b2 = M[008070];
  Let b3 = M[008071];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047033
  } else {
    TraceOperation 047008 (Je [Var (Global 81),Con 10] (Branch T (Dloc 047024)));
    Let b5 = M[008070];
    Let b6 = M[008071];
    if (Equal(MakeHiLo(b5,b6),10)) {
      Jump: 047024
    } else {
      TraceOperation 047012 (Store (Con 97) (Con 10));
      SetByte 008070 0;
      SetByte 008071 10;
      TraceOperation 047015 (Store (Con 94) (Con 25));
      SetByte 008064 0;
      SetByte 008065 25;
      TraceOperation 047018 (Store (Con 92) (Con 25));
      SetByte 008060 0;
      SetByte 008061 25;
      TraceOperation 047021 (Store (Con 93) (Con 25));
      SetByte 008062 0;
      SetByte 008063 25;
      Jump: 047024
    }
  }
LocOp 047024:
  TraceOperation 047024 (Store (Con 89) (Con 99));
  SetByte 008054 0;
  SetByte 008055 99;
  TraceOperation 047027 (Store (Con 88) (Con 4));
  SetByte 008052 0;
  SetByte 008053 4;
  TraceOperation 047030 (Jump 047137);
  Jump: 047137
LocOp 047033:
  TraceOperation 047033 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047037 (Jl (Var (Global 78)) (Var Sp) (Branch T (Dloc 047053)));
  Let b2 = M[008064];
  Let b3 = M[008065];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047053
  } else {
    TraceOperation 047041 (Store (Con 94) (Con 10));
    SetByte 008064 0;
    SetByte 008065 10;
    TraceOperation 047044 (Store (Con 89) (Con 76));
    SetByte 008054 0;
    SetByte 008055 76;
    TraceOperation 047047 (Store (Con 88) (Con 2));
    SetByte 008052 0;
    SetByte 008053 2;
    TraceOperation 047050 (Jump 047137);
    Jump: 047137
  }
LocOp 047053:
  TraceOperation 047053 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047057 (Jl (Var (Global 76)) (Var Sp) (Branch T (Dloc 047073)));
  Let b2 = M[008060];
  Let b3 = M[008061];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047073
  } else {
    TraceOperation 047061 (Store (Con 92) (Con 10));
    SetByte 008060 0;
    SetByte 008061 10;
    TraceOperation 047064 (Store (Con 89) (Con 137));
    SetByte 008054 0;
    SetByte 008055 137;
    TraceOperation 047067 (Store (Con 88) (Con 1));
    SetByte 008052 0;
    SetByte 008053 1;
    TraceOperation 047070 (Jump 047137);
    Jump: 047137
  }
LocOp 047073:
  TraceOperation 047073 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047077 (Jl (Var (Global 77)) (Var Sp) (Branch T (Dloc 047093)));
  Let b2 = M[008062];
  Let b3 = M[008063];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047093
  } else {
    TraceOperation 047081 (Store (Con 93) (Con 10));
    SetByte 008062 0;
    SetByte 008063 10;
    TraceOperation 047084 (Store (Con 89) (Con 66));
    SetByte 008054 0;
    SetByte 008055 66;
    TraceOperation 047087 (Store (Con 88) (Con 5));
    SetByte 008052 0;
    SetByte 008053 5;
    TraceOperation 047090 (Jump 047137);
    Jump: 047137
  }
LocOp 047093:
  TraceOperation 047093 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047097 (Jl (Var (Global 80)) (Var Sp) (Branch T (Dloc 047113)));
  Let b2 = M[008068];
  Let b3 = M[008069];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047113
  } else {
    TraceOperation 047101 (Store (Con 96) (Con 10));
    SetByte 008068 0;
    SetByte 008069 10;
    TraceOperation 047104 (Store (Con 89) (Con 86));
    SetByte 008054 0;
    SetByte 008055 86;
    TraceOperation 047107 (Store (Con 88) (Con 7));
    SetByte 008052 0;
    SetByte 008053 7;
    TraceOperation 047110 (Jump 047137);
    Jump: 047137
  }
LocOp 047113:
  TraceOperation 047113 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 047117 (Jl (Var (Global 79)) (Var Sp) (Branch T (Dloc 047137)));
  Let b2 = M[008066];
  Let b3 = M[008067];
  PopStack popped4;
  if (LessThan(MakeHiLo(b2,b3),popped4)) {
    Jump: 047137
  } else {
    TraceOperation 047121 (Print "Bug #60");
    GamePrint "Bug #60";
    TraceOperation 047130 New_line;
    GamePrint "\n";
    TraceOperation 047131 (Store (Con 89) (Con 213));
    SetByte 008054 0;
    SetByte 008055 213;
    TraceOperation 047134 (Store (Con 88) (Con 6));
    SetByte 008052 0;
    SetByte 008053 6;
    Jump: 047137
  }
LocOp 047137:
  TraceOperation 047137 (Jz (Var (Global 73)) (Branch T (Dloc 046954)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 046954
  } else {
    TraceOperation 047141 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocOp 047142:
  TraceOperation 047142 (Je [Var (Local 1),Con 3] (Branch T Dtrue));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 047146 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 047148:
  MakeRoutineFrame 0;
  Jump: 047149
LocOp 047149:
  TraceOperation 047149 (Je [Var (Global 203),Con 8,Con 7,Con 6] (Branch T Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),7)),Equal(MakeHiLo(b1,b2),6))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 047156 (Je [Var (Global 203),Con 9,Con 13,Con 10] (Branch T Dfalse));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),9),Equal(MakeHiLo(b4,b5),13)),Equal(MakeHiLo(b4,b5),10))) {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    } else {
      TraceOperation 047163 (Je [Var (Global 203),Con 0,Con 76,Con 16] (Branch T Dfalse));
      Let b7 = M[008314];
      Let b8 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),0),Equal(MakeHiLo(b7,b8),76)),Equal(MakeHiLo(b7,b8),16))) {
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 0;
        JumpIndirect: (return) return_address_9
      } else {
        TraceOperation 047170 (Je [Var (Global 203),Con 11,Con 2,Con 1] (Branch T Dfalse));
        Let b10 = M[008314];
        Let b11 = M[008315];
        if (LogOr(LogOr(Equal(MakeHiLo(b10,b11),11),Equal(MakeHiLo(b10,b11),2)),Equal(MakeHiLo(b10,b11),1))) {
          PopFrame;
          PopReturnAddress return_address_12;
          SetResult 0;
          JumpIndirect: (return) return_address_12
        } else {
          TraceOperation 047177 (Je [Var (Global 203),Con 70,Con 12] (Branch T Dfalse));
          Let b13 = M[008314];
          Let b14 = M[008315];
          if (LogOr(Equal(MakeHiLo(b13,b14),70),Equal(MakeHiLo(b13,b14),12))) {
            PopFrame;
            PopReturnAddress return_address_15;
            SetResult 0;
            JumpIndirect: (return) return_address_15
          } else {
            TraceOperation 047183 (Jz (Var (Global 176)) (Branch F Dfalse));
            Let b16 = M[008260];
            Let b17 = M[008261];
            if (IsZero(MakeHiLo(b16,b17))) {
              TraceOperation 047186 (Je [Var (Global 203),Con 180,Con 104] (Branch F (Dloc 047225)));
              Let b18 = M[008314];
              Let b19 = M[008315];
              if (LogOr(Equal(MakeHiLo(b18,b19),180),Equal(MakeHiLo(b18,b19),104))) {
                TraceOperation 047192 (Print_ret "You yell as loudly as you can, but no sound emerges.");
                GamePrint "You yell as loudly as you can, but no sound emerges.\n";
                PopFrame;
                PopReturnAddress return_address_20;
                SetResult 1;
                JumpIndirect: (return) return_address_20
              } else {
                Jump: 047225
              }
            } else {
              PopFrame;
              PopReturnAddress return_address_21;
              SetResult 0;
              JumpIndirect: (return) return_address_21
            }
          }
        }
      }
    }
  }
LocOp 047225:
  TraceOperation 047225 (Je [Var (Global 203),Con 122] (Branch T (Dloc 047239)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),122)) {
    Jump: 047239
  } else {
    TraceOperation 047229 (Je [Var (Global 203),Con 57] (Branch F (Dloc 047342)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),57)) {
      TraceOperation 047234 (Je [Var (Global 201),Con 24] (Branch F (Dloc 047342)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),24)) {
        Jump: 047239
      } else {
        Jump: 047342
      }
    } else {
      Jump: 047342
    }
  }
LocOp 047239:
  TraceOperation 047239 (Print_ret "You achieve a state of Negative Capability, and are able to be in uncertainties, mysteries, doubts, without any irritable searching after fact and reason (Footnote 1).");
  GamePrint "You achieve a state of Negative Capability, and are able to be in uncertainties, mysteries, doubts, without any irritable searching after fact and reason (Footnote 1).\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 047342:
  TraceOperation 047342 (Je [Var (Global 73),Con 190,Con 86] (Branch F (Dloc 047442)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (LogOr(Equal(MakeHiLo(b1,b2),190),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 047349 (Je [Var (Global 203),Con 74] (Branch F (Dloc 047442)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),74)) {
      TraceOperation 047354 (Je [Var (Global 201),Con 24] (Branch F (Dloc 047442)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),24)) {
        TraceOperation 047359 (Call (Floc 048958) [] Sp);
        PushFrame;
        PushReturnAddress 047359;
        MakeRoutineFrame 0;
        Jump: 048959
      } else {
        Jump: 047442
      }
    } else {
      Jump: 047442
    }
  } else {
    Jump: 047442
  }
LocReturn 047359:
  PushStack call_result;
  TraceOperation 047364 (Jz (Var Sp) (Branch T (Dloc 047442)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 047442
  } else {
    TraceOperation 047368 (Insert_obj (Con 20) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[000935];
    if (IsZero(Widen(b4))) {} else {
      Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b5),20)) {
        Let b6 = M[000936];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
      } else {
        Let loop_var7 = Widen(b5);
        Label 8: {
          Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
          if (Equal(Widen(b9),20)) {
            Let b10 = M[000936];
            SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
          } else {
            Assign loop_var7 = Widen(b9);
            Goto: Label 8
          }
        }
      }
    }
    SetByte 000935 b3;
    Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    SetByte 000936 LoByte(Widen(b11));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 20;
    TraceOperation 047371 (Store (Con 207) (Con 20));
    SetByte 008290 0;
    SetByte 008291 20;
    TraceOperation 047374 (Print "You hear the deep and distant hum of a ");
    GamePrint "You hear the deep and distant hum of a ";
    TraceOperation 047397 (Print_obj (Con 20));
    Let b12 = M[000938];
    Let b13 = M[000939];
    Let b14 = M[Address(MakeHiLo(b12,b13))];
    Let ite_res15 = Ite((IsZeroByte(b14),"",GetText(Offset(Address(MakeHiLo(b12,b13)),1))));
    GamePrint ite_res15;
    TraceOperation 047399 (Print " coming from far ");
    GamePrint " coming from far ";
    TraceOperation 047410 (Je [Var (Global 73),Con 190] (Branch F (Dloc 047422)));
    Let b16 = M[008054];
    Let b17 = M[008055];
    if (Equal(MakeHiLo(b16,b17),190)) {
      TraceOperation 047414 (Print "above");
      GamePrint "above";
      TraceOperation 047419 (Jump 047427);
      Jump: 047427
    } else {
      Jump: 047422
    }
  }
LocOp 047422:
  TraceOperation 047422 (Print "below");
  GamePrint "below";
  Jump: 047427
LocOp 047427:
  TraceOperation 047427 (Print_ret ". There is an exit to port.");
  GamePrint ". There is an exit to port.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 047442:
  TraceOperation 047442 (Je [Var (Global 203),Con 169] (Branch F (Dloc 047539)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    TraceOperation 047447 (Call (Floc 048958) [] Sp);
    PushFrame;
    PushReturnAddress 047447;
    MakeRoutineFrame 0;
    Jump: 048959
  } else {
    Jump: 047539
  }
LocReturn 047447:
  PushStack call_result;
  TraceOperation 047452 (Jz (Var Sp) (Branch T (Dloc 047539)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 047539
  } else {
    TraceOperation 047456 (Je [Var (Global 73),Con 86,Con 190] (Branch F (Dloc 047539)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),86),Equal(MakeHiLo(b2,b3),190))) {
      TraceOperation 047463 (Jin (Con 20) (Var (Global 0)) (Branch F (Dloc 047539)));
      Let b4 = M[007908];
      Let b5 = M[007909];
      Let b6 = M[000935];
      if (Equal(MakeHiLo(b4,b5),Widen(b6))) {
        TraceOperation 047468 (Je [Var (Global 201),Con 16] (Branch F (Dloc 047505)));
        Let b7 = M[008310];
        Let b8 = M[008311];
        if (Equal(MakeHiLo(b7,b8),16)) {
          TraceOperation 047472 (Jl (Var (Global 70)) (Con 4) (Branch F (Dloc 047478)));
          Let b9 = M[008048];
          Let b10 = M[008049];
          if (LessThan(MakeHiLo(b9,b10),4)) {
            TraceOperation 047476 (Print_paddr (Var (Global 60)));
            Let b11 = M[008028];
            Let b12 = M[008029];
            GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
            Jump: 047478
          } else {
            Jump: 047478
          }
        } else {
          Jump: 047505
        }
      } else {
        Jump: 047539
      }
    } else {
      Jump: 047539
    }
  }
LocOp 047478:
  TraceOperation 047478 (Print "You emerge from a small doorway...");
  GamePrint "You emerge from a small doorway...";
  TraceOperation 047499 (Call (Floc 048670) [] Sp);
  PushFrame;
  PushReturnAddress 047499;
  MakeRoutineFrame 0;
  Jump: 048671
LocReturn 047499:
  PushStack call_result;
  TraceOperation 047504 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 047505:
  TraceOperation 047505 (Print_paddr (Var (Global 55)));
  Let b1 = M[008018];
  Let b2 = M[008019];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 047507 (Je [Var (Global 201),Con 19] (Branch F (Dloc 047537)));
  Let b3 = M[008310];
  Let b4 = M[008311];
  if (Equal(MakeHiLo(b3,b4),19)) {
    TraceOperation 047511 (Inc (Con 86));
    Let b5 = M[008048];
    Let b6 = M[008049];
    SetByte 008048 HiByte(Add(MakeHiLo(b5,b6),1));
    SetByte 008049 LoByte(Add(MakeHiLo(b5,b6),1));
    TraceOperation 047513 (Je [Var (Global 70),Con 4] (Branch F (Dloc 047537)));
    Let b7 = M[008048];
    Let b8 = M[008049];
    if (Equal(MakeHiLo(b7,b8),4)) {
      TraceOperation 047517 (Print " ");
      GamePrint " ";
      TraceOperation 047520 (Print_paddr (Var (Global 60)));
      Let b9 = M[008028];
      Let b10 = M[008029];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
      TraceOperation 047522 (Print "There is an exit aft...");
      GamePrint "There is an exit aft...";
      Jump: 047537
    } else {
      Jump: 047537
    }
  } else {
    Jump: 047537
  }
LocOp 047537:
  TraceOperation 047537 New_line;
  GamePrint "\n";
  TraceOperation 047538 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 047539:
  TraceOperation 047539 (Je [Var (Global 201),Con 20] (Branch T (Dloc 047547)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),20)) {
    Jump: 047547
  } else {
    TraceOperation 047543 (Je [Var (Global 202),Con 20] (Branch F (Dloc 047603)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),20)) {
      Jump: 047547
    } else {
      Jump: 047603
    }
  }
LocOp 047547:
  TraceOperation 047547 (Je [Var (Global 203),Con 169] (Branch T (Dloc 047603)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    Jump: 047603
  } else {
    TraceOperation 047551 (Je [Var (Global 73),Con 190,Con 86] (Branch T (Dloc 047564)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (LogOr(Equal(MakeHiLo(b3,b4),190),Equal(MakeHiLo(b3,b4),86))) {
      Jump: 047564
    } else {
      TraceOperation 047557 (Call (Floc 057596) [Con 20] Sp);
      PushFrame;
      PushReturnAddress 047557;
      SetLocal 1 20;
      MakeRoutineFrame 1;
      Jump: 057599
    }
  }
LocReturn 047557:
  PushStack call_result;
  TraceOperation 047563 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 047564:
  TraceOperation 047564 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 047568 (Print "The sound comes from far ");
    GamePrint "The sound comes from far ";
    TraceOperation 047583 (Je [Var (Global 73),Con 190] (Branch F (Dloc 047595)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (Equal(MakeHiLo(b3,b4),190)) {
      TraceOperation 047587 (Print "above");
      GamePrint "above";
      TraceOperation 047592 (Jump 047600);
      Jump: 047600
    } else {
      Jump: 047595
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocOp 047595:
  TraceOperation 047595 (Print "below");
  GamePrint "below";
  Jump: 047600
LocOp 047600:
  TraceOperation 047600 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 047603:
  TraceOperation 047603 (Je [Var (Global 73),Con 137,Con 66] (Branch F (Dloc 047690)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (LogOr(Equal(MakeHiLo(b1,b2),137),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 047610 (Je [Var (Global 203),Con 61] (Branch F (Dloc 047690)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),61)) {
      TraceOperation 047615 (Je [Var (Global 201),Con 24] (Branch F (Dloc 047690)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),24)) {
        TraceOperation 047620 (Call (Floc 048958) [] Sp);
        PushFrame;
        PushReturnAddress 047620;
        MakeRoutineFrame 0;
        Jump: 048959
      } else {
        Jump: 047690
      }
    } else {
      Jump: 047690
    }
  } else {
    Jump: 047690
  }
LocReturn 047620:
  PushStack call_result;
  TraceOperation 047625 (Jz (Var Sp) (Branch T (Dloc 047690)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 047690
  } else {
    TraceOperation 047629 (Insert_obj (Con 21) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[000944];
    if (IsZero(Widen(b4))) {} else {
      Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b5),21)) {
        Let b6 = M[000945];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
      } else {
        Let loop_var7 = Widen(b5);
        Label 8: {
          Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
          if (Equal(Widen(b9),21)) {
            Let b10 = M[000945];
            SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
          } else {
            Assign loop_var7 = Widen(b9);
            Goto: Label 8
          }
        }
      }
    }
    SetByte 000944 b3;
    Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    SetByte 000945 LoByte(Widen(b11));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 21;
    TraceOperation 047632 (Store (Con 207) (Con 21));
    SetByte 008290 0;
    SetByte 008291 21;
    TraceOperation 047635 (Print "You see a painfully bright light that stabs at the ");
    GamePrint "You see a painfully bright light that stabs at the ";
    TraceOperation 047664 (Je [Var (Global 73),Con 137] (Branch F (Dloc 047676)));
    Let b12 = M[008054];
    Let b13 = M[008055];
    if (Equal(MakeHiLo(b12,b13),137)) {
      TraceOperation 047668 (Print "front");
      GamePrint "front";
      TraceOperation 047673 (Jump 047681);
      Jump: 047681
    } else {
      Jump: 047676
    }
  }
LocOp 047676:
  TraceOperation 047676 (Print "back");
  GamePrint "back";
  Jump: 047681
LocOp 047681:
  TraceOperation 047681 (Print_ret " of your eyes.");
  GamePrint " of your eyes.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 047690:
  TraceOperation 047690 (Je [Var (Global 201),Con 21] (Branch T (Dloc 047699)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),21)) {
    Jump: 047699
  } else {
    TraceOperation 047694 (Je [Var (Global 202),Con 21] (Branch F (Dloc 047790)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),21)) {
      Jump: 047699
    } else {
      Jump: 047790
    }
  }
LocOp 047699:
  TraceOperation 047699 (Je [Var (Global 203),Con 169] (Branch T (Dloc 047790)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    Jump: 047790
  } else {
    TraceOperation 047704 (Je [Var (Global 73),Con 66,Con 137] (Branch T (Dloc 047717)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (LogOr(Equal(MakeHiLo(b3,b4),66),Equal(MakeHiLo(b3,b4),137))) {
      Jump: 047717
    } else {
      TraceOperation 047710 (Call (Floc 057596) [Con 21] Sp);
      PushFrame;
      PushReturnAddress 047710;
      SetLocal 1 21;
      MakeRoutineFrame 1;
      Jump: 057599
    }
  }
LocReturn 047710:
  PushStack call_result;
  TraceOperation 047716 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 047717:
  TraceOperation 047717 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 047721 (Print "The light resolves itself into the bright ");
    GamePrint "The light resolves itself into the bright ";
    TraceOperation 047746 (Je [Var (Global 73),Con 137] (Branch F (Dloc 047768)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (Equal(MakeHiLo(b3,b4),137)) {
      TraceOperation 047750 (Print "yellow Sun of Earth");
      GamePrint "yellow Sun of Earth";
      TraceOperation 047765 (Jump 047781);
      Jump: 047781
    } else {
      Jump: 047768
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocOp 047768:
  TraceOperation 047768 (Print "orange Sun of ");
  GamePrint "orange Sun of ";
  TraceOperation 047779 (Print_obj (Con 67));
  Let b1 = M[001361];
  Let b2 = M[001362];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  Jump: 047781
LocOp 047781:
  TraceOperation 047781 (Print ".");
  GamePrint ".";
  TraceOperation 047784 (Call (Floc 048670) [] Sp);
  PushFrame;
  PushReturnAddress 047784;
  MakeRoutineFrame 0;
  Jump: 048671
LocReturn 047784:
  PushStack call_result;
  TraceOperation 047789 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 047790:
  TraceOperation 047790 (Je [Var (Global 73),Con 76,Con 213] (Branch F (Dloc 047887)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (LogOr(Equal(MakeHiLo(b1,b2),76),Equal(MakeHiLo(b1,b2),213))) {
    TraceOperation 047797 (Je [Var (Global 203),Con 159] (Branch F (Dloc 047887)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),159)) {
      TraceOperation 047802 (Je [Var (Global 201),Con 24] (Branch F (Dloc 047887)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),24)) {
        TraceOperation 047807 (Call (Floc 048958) [] Sp);
        PushFrame;
        PushReturnAddress 047807;
        MakeRoutineFrame 0;
        Jump: 048959
      } else {
        Jump: 047887
      }
    } else {
      Jump: 047887
    }
  } else {
    Jump: 047887
  }
LocReturn 047807:
  PushStack call_result;
  TraceOperation 047812 (Jz (Var Sp) (Branch T (Dloc 047887)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 047887
  } else {
    TraceOperation 047816 (Insert_obj (Con 22) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[000953];
    if (IsZero(Widen(b4))) {} else {
      Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b5),22)) {
        Let b6 = M[000954];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
      } else {
        Let loop_var7 = Widen(b5);
        Label 8: {
          Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
          if (Equal(Widen(b9),22)) {
            Let b10 = M[000954];
            SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
          } else {
            Assign loop_var7 = Widen(b9);
            Goto: Label 8
          }
        }
      }
    }
    SetByte 000953 b3;
    Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    SetByte 000954 LoByte(Widen(b11));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 22;
    TraceOperation 047819 (Store (Con 207) (Con 22));
    SetByte 008290 0;
    SetByte 008291 22;
    TraceOperation 047822 (Print "It does feel a bit ");
    GamePrint "It does feel a bit ";
    TraceOperation 047835 (Je [Var (Global 73),Con 76] (Branch F (Dloc 047847)));
    Let b12 = M[008054];
    Let b13 = M[008055];
    if (Equal(MakeHiLo(b12,b13),76)) {
      TraceOperation 047839 (Print "cold");
      GamePrint "cold";
      TraceOperation 047844 (Jump 047852);
      Jump: 047852
    } else {
      Jump: 047847
    }
  }
LocOp 047847:
  TraceOperation 047847 (Print "warm");
  GamePrint "warm";
  Jump: 047852
LocOp 047852:
  TraceOperation 047852 (Print_ret " and wet and squishy. There seems to be some liquid at your fingertips.");
  GamePrint " and wet and squishy. There seems to be some liquid at your fingertips.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 047887:
  TraceOperation 047887 (Je [Var (Global 201),Con 22] (Branch T (Dloc 047896)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),22)) {
    Jump: 047896
  } else {
    TraceOperation 047891 (Je [Var (Global 202),Con 22] (Branch F (Dloc 048109)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),22)) {
      Jump: 047896
    } else {
      Jump: 048109
    }
  }
LocOp 047896:
  TraceOperation 047896 (Je [Var (Global 203),Con 169] (Branch T (Dloc 048109)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    Jump: 048109
  } else {
    TraceOperation 047901 (Je [Var (Global 73),Con 76,Con 213] (Branch T (Dloc 047914)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (LogOr(Equal(MakeHiLo(b3,b4),76),Equal(MakeHiLo(b3,b4),213))) {
      Jump: 047914
    } else {
      TraceOperation 047907 (Call (Floc 057596) [Con 22] Sp);
      PushFrame;
      PushReturnAddress 047907;
      SetLocal 1 22;
      MakeRoutineFrame 1;
      Jump: 057599
    }
  }
LocReturn 047907:
  PushStack call_result;
  TraceOperation 047913 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 047914:
  TraceOperation 047914 (Je [Var (Global 73),Con 76] (Branch F (Dloc 048011)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),76)) {
    TraceOperation 047919 (Je [Var (Global 203),Con 159,Con 61] (Branch F (Dloc 047936)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),159),Equal(MakeHiLo(b3,b4),61))) {
      TraceOperation 047925 (Print_ret "It seems coldish.");
      GamePrint "It seems coldish.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 047936
    }
  } else {
    Jump: 048011
  }
LocOp 047936:
  TraceOperation 047936 (Je [Var (Global 203),Con 51,Con 149] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),51),Equal(MakeHiLo(b1,b2),149))) {
    TraceOperation 047942 (Print "It tastes just like wine. In fact, you realise with growing embarrassment that ");
    GamePrint "It tastes just like wine. In fact, you realise with growing embarrassment that ";
    TraceOperation 047987 (Print_obj (Con 36));
    Let b3 = M[001082];
    Let b4 = M[001083];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 047989 (Print " is sitting in a ");
    GamePrint " is sitting in a ";
    TraceOperation 048000 (Print_obj (Con 72));
    Let b7 = M[001406];
    Let b8 = M[001407];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
    GamePrint ite_res10;
    TraceOperation 048002 (Print ".");
    GamePrint ".";
    TraceOperation 048005 (Call (Floc 048670) [] Sp);
    PushFrame;
    PushReturnAddress 048005;
    MakeRoutineFrame 0;
    Jump: 048671
  } else {
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 0;
    JumpIndirect: (return) return_address_11
  }
LocReturn 048005:
  PushStack call_result;
  TraceOperation 048010 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 048011:
  TraceOperation 048011 (Je [Var (Global 73),Con 213] (Branch F Dfalse));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),213)) {
    TraceOperation 048015 (Je [Var (Global 203),Con 159,Con 61] (Branch F (Dloc 048032)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),159),Equal(MakeHiLo(b3,b4),61))) {
      TraceOperation 048021 (Print_ret "It seems warmish.");
      GamePrint "It seems warmish.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 048032
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocOp 048032:
  TraceOperation 048032 (Je [Var (Global 203),Con 51,Con 149] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),51),Equal(MakeHiLo(b1,b2),149))) {
    TraceOperation 048038 (Print "Yucchhh! You are jerked to your senses by the realisation that you are licking the lining of a whale's stomach.");
    GamePrint "Yucchhh! You are jerked to your senses by the realisation that you are licking the lining of a whale's stomach.";
    TraceOperation 048103 (Call (Floc 048670) [] Sp);
    PushFrame;
    PushReturnAddress 048103;
    MakeRoutineFrame 0;
    Jump: 048671
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 048103:
  PushStack call_result;
  TraceOperation 048108 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 048109:
  TraceOperation 048109 (Je [Var (Global 73),Con 121,Con 99] (Branch F (Dloc 048240)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (LogOr(Equal(MakeHiLo(b1,b2),121),Equal(MakeHiLo(b1,b2),99))) {
    TraceOperation 048116 (Je [Var (Global 203),Con 139] (Branch F (Dloc 048240)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),139)) {
      TraceOperation 048121 (Je [Var (Global 201),Con 24] (Branch F (Dloc 048240)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),24)) {
        TraceOperation 048126 (Call (Floc 048958) [] Sp);
        PushFrame;
        PushReturnAddress 048126;
        MakeRoutineFrame 0;
        Jump: 048959
      } else {
        Jump: 048240
      }
    } else {
      Jump: 048240
    }
  } else {
    Jump: 048240
  }
LocReturn 048126:
  PushStack call_result;
  TraceOperation 048131 (Jz (Var Sp) (Branch T (Dloc 048240)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 048240
  } else {
    TraceOperation 048135 (Insert_obj (Con 23) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[000962];
    if (IsZero(Widen(b4))) {} else {
      Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b5),23)) {
        Let b6 = M[000963];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
      } else {
        Let loop_var7 = Widen(b5);
        Label 8: {
          Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
          if (Equal(Widen(b9),23)) {
            Let b10 = M[000963];
            SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
          } else {
            Assign loop_var7 = Widen(b9);
            Goto: Label 8
          }
        }
      }
    }
    SetByte 000962 b3;
    Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    SetByte 000963 LoByte(Widen(b11));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 23;
    TraceOperation 048138 (Store (Con 207) (Con 23));
    SetByte 008290 0;
    SetByte 008291 23;
    TraceOperation 048141 (Print "It does smell a bit. There's something pungent ");
    GamePrint "It does smell a bit. There's something pungent ";
    TraceOperation 048164 (Je [Var (Global 73),Con 121] (Branch F (Dloc 048180)));
    Let b12 = M[008054];
    Let b13 = M[008055];
    if (Equal(MakeHiLo(b12,b13),121)) {
      TraceOperation 048168 (Print "being waved");
      GamePrint "being waved";
      TraceOperation 048177 (Jump 048185);
      Jump: 048185
    } else {
      Jump: 048180
    }
  }
LocOp 048180:
  TraceOperation 048180 (Print "waving");
  GamePrint "waving";
  Jump: 048185
LocOp 048185:
  TraceOperation 048185 (Print_ret " under your nose. Your head begins to clear. You can make out a shadow moving in the dark.");
  GamePrint " under your nose. Your head begins to clear. You can make out a shadow moving in the dark.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 048240:
  TraceOperation 048240 (Je [Var (Global 201),Con 23] (Branch T (Dloc 048249)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),23)) {
    Jump: 048249
  } else {
    TraceOperation 048244 (Je [Var (Global 202),Con 23] (Branch F (Dloc 048400)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),23)) {
      Jump: 048249
    } else {
      Jump: 048400
    }
  }
LocOp 048249:
  TraceOperation 048249 (Je [Var (Global 203),Con 169] (Branch T (Dloc 048400)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    Jump: 048400
  } else {
    TraceOperation 048254 (Je [Var (Global 73),Con 121,Con 99] (Branch T (Dloc 048267)));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (LogOr(Equal(MakeHiLo(b3,b4),121),Equal(MakeHiLo(b3,b4),99))) {
      Jump: 048267
    } else {
      TraceOperation 048260 (Call (Floc 057596) [Con 23] Sp);
      PushFrame;
      PushReturnAddress 048260;
      SetLocal 1 23;
      MakeRoutineFrame 1;
      Jump: 057599
    }
  }
LocReturn 048260:
  PushStack call_result;
  TraceOperation 048266 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 048267:
  TraceOperation 048267 (Je [Var (Global 203),Con 61] (Branch F (Dloc 048306)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 048271 (Print "The shadow is vaguely ");
    GamePrint "The shadow is vaguely ";
    TraceOperation 048286 (Call (Floc 049502) [] Sp);
    PushFrame;
    PushReturnAddress 048286;
    MakeRoutineFrame 0;
    Jump: 049503
  } else {
    Jump: 048306
  }
LocReturn 048286:
  PushStack call_result;
  TraceOperation 048291 (Print "-shaped.");
  GamePrint "-shaped.";
  TraceOperation 048300 (Call (Floc 048670) [] Sp);
  PushFrame;
  PushReturnAddress 048300;
  MakeRoutineFrame 0;
  Jump: 048671
LocReturn 048300:
  PushStack call_result;
  TraceOperation 048305 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 048306:
  TraceOperation 048306 (Je [Var (Global 203),Con 159] (Branch F (Dloc 048359)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),159)) {
    TraceOperation 048310 (Print "The shadow turns out to be a solid object of a ");
    GamePrint "The shadow turns out to be a solid object of a ";
    TraceOperation 048339 (Call (Floc 049502) [] Sp);
    PushFrame;
    PushReturnAddress 048339;
    MakeRoutineFrame 0;
    Jump: 049503
  } else {
    Jump: 048359
  }
LocReturn 048339:
  PushStack call_result;
  TraceOperation 048344 (Print "-like nature.");
  GamePrint "-like nature.";
  TraceOperation 048353 (Call (Floc 048670) [] Sp);
  PushFrame;
  PushReturnAddress 048353;
  MakeRoutineFrame 0;
  Jump: 048671
LocReturn 048353:
  PushStack call_result;
  TraceOperation 048358 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 048359:
  TraceOperation 048359 (Je [Var (Global 203),Con 139] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 048363 (Print "The shadow has a sort of ");
    GamePrint "The shadow has a sort of ";
    TraceOperation 048378 (Call (Floc 049502) [] Sp);
    PushFrame;
    PushReturnAddress 048378;
    MakeRoutineFrame 0;
    Jump: 049503
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 048378:
  PushStack call_result;
  TraceOperation 048383 (Print "y smell to it.");
  GamePrint "y smell to it.";
  TraceOperation 048394 (Call (Floc 048670) [] Sp);
  PushFrame;
  PushReturnAddress 048394;
  MakeRoutineFrame 0;
  Jump: 048671
LocReturn 048394:
  PushStack call_result;
  TraceOperation 048399 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 048400:
  TraceOperation 048400 (Inc (Con 90));
  Let b1 = M[008056];
  Let b2 = M[008057];
  SetByte 008056 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008057 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 048402 (Jz (Var (Global 207)) (Branch T (Dloc 048418)));
  Let b3 = M[008322];
  Let b4 = M[008323];
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 048418
  } else {
    TraceOperation 048405 (Inc (Con 88));
    Let b5 = M[008052];
    Let b6 = M[008053];
    SetByte 008052 HiByte(Add(MakeHiLo(b5,b6),1));
    SetByte 008053 LoByte(Add(MakeHiLo(b5,b6),1));
    TraceOperation 048407 (Je [Var (Global 72),Con 8] (Branch F (Dloc 048414)));
    Let b7 = M[008052];
    Let b8 = M[008053];
    if (Equal(MakeHiLo(b7,b8),8)) {
      TraceOperation 048411 (Store (Con 88) (Con 0));
      SetByte 008052 0;
      SetByte 008053 0;
      Jump: 048414
    } else {
      Jump: 048414
    }
  }
LocOp 048414:
  TraceOperation 048414 (Loadw (Var (Global 68)) (Var (Global 72)) (Global 73));
  Let b1 = M[008044];
  Let b2 = M[008045];
  Let b3 = M[008052];
  Let b4 = M[008053];
  Let b5 = M[Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4)))];
  Let b6 = M[Offset(Offset(Address(MakeHiLo(b1,b2)),Mul(2,MakeHiLo(b3,b4))),1)];
  SetByte 008054 b5;
  SetByte 008055 b6;
  Jump: 048418
LocOp 048418:
  TraceOperation 048418 (Je [Var (Global 203),Con 90] (Branch F (Dloc 048428)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),90)) {
    TraceOperation 048422 (Print "Dark");
    GamePrint "Dark";
    TraceOperation 048427 New_line;
    GamePrint "\n";
    Jump: 048428
  } else {
    Jump: 048428
  }
LocOp 048428:
  TraceOperation 048428 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 048432 (Jl (Con 25) (Var Sp) (Branch T (Dloc 048449)));
  PopStack popped2;
  if (LessThan(25,popped2)) {
    Jump: 048449
  } else {
    TraceOperation 048436 (Call (Floc 048968) [] Sp);
    PushFrame;
    PushReturnAddress 048436;
    MakeRoutineFrame 0;
    Jump: 048969
  }
LocReturn 048436:
  PushStack call_result;
  TraceOperation 048441 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 048441;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 048441:
  PushStack call_result;
  TraceOperation 048446 (Jump 048501);
  Jump: 048501
LocOp 048449:
  TraceOperation 048449 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 048453 (Jl (Con 33) (Var Sp) (Branch T (Dloc 048470)));
  PopStack popped2;
  if (LessThan(33,popped2)) {
    Jump: 048470
  } else {
    TraceOperation 048457 (Call (Floc 049102) [] Sp);
    PushFrame;
    PushReturnAddress 048457;
    MakeRoutineFrame 0;
    Jump: 049103
  }
LocReturn 048457:
  PushStack call_result;
  TraceOperation 048462 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 048462;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 048462:
  PushStack call_result;
  TraceOperation 048467 (Jump 048501);
  Jump: 048501
LocOp 048470:
  TraceOperation 048470 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 048474 (Jl (Con 50) (Var Sp) (Branch T (Dloc 048491)));
  PopStack popped2;
  if (LessThan(50,popped2)) {
    Jump: 048491
  } else {
    TraceOperation 048478 (Call (Floc 049240) [] Sp);
    PushFrame;
    PushReturnAddress 048478;
    MakeRoutineFrame 0;
    Jump: 049241
  }
LocReturn 048478:
  PushStack call_result;
  TraceOperation 048483 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 048483;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 048483:
  PushStack call_result;
  TraceOperation 048488 (Jump 048501);
  Jump: 048501
LocOp 048491:
  TraceOperation 048491 (Call (Floc 049376) [] Sp);
  PushFrame;
  PushReturnAddress 048491;
  MakeRoutineFrame 0;
  Jump: 049377
LocReturn 048491:
  PushStack call_result;
  TraceOperation 048496 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 048496;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 048496:
  PushStack call_result;
  Jump: 048501
LocOp 048501:
  TraceOperation 048501 (Je [Var (Global 74),Con 18] (Branch F (Dloc 048537)));
  Let b1 = M[008056];
  Let b2 = M[008057];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 048505 New_line;
    GamePrint "\n";
    TraceOperation 048506 (Print_ret "When will you come to your senses and solve this puzzle?");
    GamePrint "When will you come to your senses and solve this puzzle?\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 048537
  }
LocOp 048537:
  TraceOperation 048537 (Je [Var (Global 74),Con 33] (Branch F (Dloc 048579)));
  Let b1 = M[008056];
  Let b2 = M[008057];
  if (Equal(MakeHiLo(b1,b2),33)) {
    TraceOperation 048541 New_line;
    GamePrint "\n";
    TraceOperation 048542 (Print_ret "4 out of 5 sensitive people solve this puzzle right away.");
    GamePrint "4 out of 5 sensitive people solve this puzzle right away.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 048579
  }
LocOp 048579:
  TraceOperation 048579 (Je [Var (Global 74),Con 48] (Branch F (Dloc 048613)));
  Let b1 = M[008056];
  Let b2 = M[008057];
  if (Equal(MakeHiLo(b1,b2),48)) {
    TraceOperation 048583 New_line;
    GamePrint "\n";
    TraceOperation 048584 (Print_ret "Don't count your senses before they hatch.");
    GamePrint "Don't count your senses before they hatch.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 048613
  }
LocOp 048613:
  TraceOperation 048613 (Je [Var (Global 74),Con 63] (Branch F Dtrue));
  Let b1 = M[008056];
  Let b2 = M[008057];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 048617 (Je [Var (Global 73),Con 121] (Branch F Dtrue));
    Let b3 = M[008054];
    Let b4 = M[008055];
    if (Equal(MakeHiLo(b3,b4),121)) {
      TraceOperation 048621 New_line;
      GamePrint "\n";
      TraceOperation 048622 (Print_ret "Something stinks around here, and I'm not just talking about your puzzle-solving ability!");
      GamePrint "Something stinks around here, and I'm not just talking about your puzzle-solving ability!\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  }
--------------------------------------------------
LocRoutine 048670:
  MakeRoutineFrame 0;
  Jump: 048671
LocOp 048671:
  TraceOperation 048671 New_line;
  GamePrint "\n";
  TraceOperation 048672 New_line;
  GamePrint "\n";
  TraceOperation 048673 (Put_prop (Con 31) (Con 29) (Con 22672));
  Let b1 = M[001037];
  Let b2 = M[001038];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let loop_var4 = DeAddress(Offset(Address(MakeHiLo(b1,b2)),Add(Mul(2,Widen(b3)),1)));
  Label 5: {
    Let b6 = M[Address(loop_var4)];
    if (IsZeroByte(b6)) {
      Error: ("putProp",29)
    } else {
      if (Equal(29,Widen(BwAnd(b6,31)))) {
        if (Equal(Add(Widen(ShiftR(b6,5)),1),2)) {
          SetByte Offset(Address(loop_var4),1) 88;
          SetByte Offset(Offset(Address(loop_var4),1),1) 144;
        } else {
          SetByte Offset(Address(loop_var4),1) 144;
        }
      } else {
        Assign loop_var4 = DeAddress(Offset(Offset(Address(loop_var4),1),Add(Widen(ShiftR(b6,5)),1)));
        Goto: Label 5
      }
    }
  }
  TraceOperation 048679 (Store (Con 90) (Con 0));
  SetByte 008056 0;
  SetByte 008057 0;
  TraceOperation 048682 (Store (Con 86) (Con 0));
  SetByte 008048 0;
  SetByte 008049 0;
  TraceOperation 048685 (Store (Con 223) (Con 0));
  SetByte 008322 0;
  SetByte 008323 0;
  TraceOperation 048688 (Call (Floc 043644) [Con 24,Con 31] Sp);
  PushFrame;
  PushReturnAddress 048688;
  SetLocal 1 24;
  SetLocal 2 31;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 043653
LocReturn 048688:
  PushStack call_result;
  TraceOperation 048695 (Call (Floc 043644) [Con 97,Con 31] Sp);
  PushFrame;
  PushReturnAddress 048695;
  SetLocal 1 97;
  SetLocal 2 31;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 043653
LocReturn 048695:
  PushStack call_result;
  TraceOperation 048702 (Insert_obj (Con 23) (Con 219));
  Let b1 = M[000962];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),23)) {
      Let b3 = M[000963];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),23)) {
          Let b7 = M[000963];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 000962 219;
  Let b8 = M[002728];
  SetByte 000963 LoByte(Widen(b8));
  SetByte 002728 23;
  TraceOperation 048705 (Insert_obj (Con 21) (Con 219));
  Let b9 = M[000944];
  if (IsZero(Widen(b9))) {} else {
    Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
    if (Equal(Widen(b10),21)) {
      Let b11 = M[000945];
      SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
    } else {
      Let loop_var12 = Widen(b10);
      Label 13: {
        Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
        if (Equal(Widen(b14),21)) {
          Let b15 = M[000945];
          SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
        } else {
          Assign loop_var12 = Widen(b14);
          Goto: Label 13
        }
      }
    }
  }
  SetByte 000944 219;
  Let b16 = M[002728];
  SetByte 000945 LoByte(Widen(b16));
  SetByte 002728 21;
  TraceOperation 048708 (Insert_obj (Con 22) (Con 219));
  Let b17 = M[000953];
  if (IsZero(Widen(b17))) {} else {
    Let b18 = M[Offset(Offset(000751,Mul(Widen(b17),9)),6)];
    if (Equal(Widen(b18),22)) {
      Let b19 = M[000954];
      SetByte Offset(Offset(000751,Mul(Widen(b17),9)),6) LoByte(Widen(b19));
    } else {
      Let loop_var20 = Widen(b18);
      Label 21: {
        Let b22 = M[Offset(Offset(000751,Mul(loop_var20,9)),5)];
        if (Equal(Widen(b22),22)) {
          Let b23 = M[000954];
          SetByte Offset(Offset(000751,Mul(loop_var20,9)),5) LoByte(Widen(b23));
        } else {
          Assign loop_var20 = Widen(b22);
          Goto: Label 21
        }
      }
    }
  }
  SetByte 000953 219;
  Let b24 = M[002728];
  SetByte 000954 LoByte(Widen(b24));
  SetByte 002728 22;
  TraceOperation 048711 (Insert_obj (Con 20) (Con 219));
  Let b25 = M[000935];
  if (IsZero(Widen(b25))) {} else {
    Let b26 = M[Offset(Offset(000751,Mul(Widen(b25),9)),6)];
    if (Equal(Widen(b26),20)) {
      Let b27 = M[000936];
      SetByte Offset(Offset(000751,Mul(Widen(b25),9)),6) LoByte(Widen(b27));
    } else {
      Let loop_var28 = Widen(b26);
      Label 29: {
        Let b30 = M[Offset(Offset(000751,Mul(loop_var28,9)),5)];
        if (Equal(Widen(b30),20)) {
          Let b31 = M[000936];
          SetByte Offset(Offset(000751,Mul(loop_var28,9)),5) LoByte(Widen(b31));
        } else {
          Assign loop_var28 = Widen(b30);
          Goto: Label 29
        }
      }
    }
  }
  SetByte 000935 219;
  Let b32 = M[002728];
  SetByte 000936 LoByte(Widen(b32));
  SetByte 002728 20;
  TraceOperation 048714 (Jz (Var (Global 133)) (Branch T (Dloc 048723)));
  Let b33 = M[008174];
  Let b34 = M[008175];
  if (IsZero(MakeHiLo(b33,b34))) {
    Jump: 048723
  } else {
    TraceOperation 048717 (Insert_obj (Con 140) (Con 158));
    Let b35 = M[002015];
    if (IsZero(Widen(b35))) {} else {
      Let b36 = M[Offset(Offset(000751,Mul(Widen(b35),9)),6)];
      if (Equal(Widen(b36),140)) {
        Let b37 = M[002016];
        SetByte Offset(Offset(000751,Mul(Widen(b35),9)),6) LoByte(Widen(b37));
      } else {
        Let loop_var38 = Widen(b36);
        Label 39: {
          Let b40 = M[Offset(Offset(000751,Mul(loop_var38,9)),5)];
          if (Equal(Widen(b40),140)) {
            Let b41 = M[002016];
            SetByte Offset(Offset(000751,Mul(loop_var38,9)),5) LoByte(Widen(b41));
          } else {
            Assign loop_var38 = Widen(b40);
            Goto: Label 39
          }
        }
      }
    }
    SetByte 002015 158;
    Let b42 = M[002179];
    SetByte 002016 LoByte(Widen(b42));
    SetByte 002179 140;
    TraceOperation 048720 (Store (Con 149) (Con 0));
    SetByte 008174 0;
    SetByte 008175 0;
    Jump: 048723
  }
LocOp 048723:
  TraceOperation 048723 (Je [Var (Global 73),Con 86] (Branch F (Dloc 048923)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),86)) {
    TraceOperation 048728 (Test_attr (Con 86) (Con 4) (Branch F (Dloc 048923)));
    Let b3 = M[001525];
    if (TestBit(b3,3)) {
      TraceOperation 048733 (Call (Floc 022320) [Con 24767,Con 6] Sp);
      PushFrame;
      PushReturnAddress 048733;
      SetLocal 1 24767;
      SetLocal 2 6;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 022327
    } else {
      Jump: 048923
    }
  } else {
    Jump: 048923
  }
LocReturn 048733:
  PushStack call_result;
  TraceOperation 048741 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 048746 (Call (Floc 043406) [Con 186] (Global 0));
  PushFrame;
  PushReturnAddress 048746;
  SetLocal 1 186;
  MakeRoutineFrame 1;
  Jump: 043409
LocReturn 048746:
  SetByte 007908 HiByte(call_result);
  SetByte 007909 LoByte(call_result);
  TraceOperation 048752 (Insert_obj (Con 31) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001034];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),31)) {
      Let b5 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),31)) {
          Let b9 = M[001035];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 001034 b2;
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  SetByte 001035 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 31;
  TraceOperation 048755 (Insert_obj (Con 94) (Var (Global 0)));
  Let b11 = M[007908];
  Let b12 = M[007909];
  Let b13 = M[001601];
  if (IsZero(Widen(b13))) {} else {
    Let b14 = M[Offset(Offset(000751,Mul(Widen(b13),9)),6)];
    if (Equal(Widen(b14),94)) {
      Let b15 = M[001602];
      SetByte Offset(Offset(000751,Mul(Widen(b13),9)),6) LoByte(Widen(b15));
    } else {
      Let loop_var16 = Widen(b14);
      Label 17: {
        Let b18 = M[Offset(Offset(000751,Mul(loop_var16,9)),5)];
        if (Equal(Widen(b18),94)) {
          Let b19 = M[001602];
          SetByte Offset(Offset(000751,Mul(loop_var16,9)),5) LoByte(Widen(b19));
        } else {
          Assign loop_var16 = Widen(b18);
          Goto: Label 17
        }
      }
    }
  }
  SetByte 001601 b12;
  Let b20 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6)];
  SetByte 001602 LoByte(Widen(b20));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6) 94;
  TraceOperation 048758 (Store (Con 85) (Var (Global 0)));
  Let b21 = M[007908];
  Let b22 = M[007909];
  SetByte 008046 b21;
  SetByte 008047 b22;
  TraceOperation 048761 (Print "There is a violent explosion around you, leaving you standing in");
  GamePrint "There is a violent explosion around you, leaving you standing in";
  TraceOperation 048796 (Call (Floc 043738) [Var (Global 0),Con 1] Sp);
  Let b23 = M[007908];
  Let b24 = M[007909];
  PushFrame;
  PushReturnAddress 048796;
  SetLocal 1 MakeHiLo(b23,b24);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 048796:
  PushStack call_result;
  TraceOperation 048803 (Print ". ");
  GamePrint ". ";
  TraceOperation 048806 (Call (Floc 022042) [Con 61,Con 42] Sp);
  PushFrame;
  PushReturnAddress 048806;
  SetLocal 1 61;
  SetLocal 2 42;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 048806:
  PushStack call_result;
  TraceOperation 048813 New_line;
  GamePrint "\n";
  TraceOperation 048814 (Print "Apparently, you just materialised inside your own brain. This is very very very nasty. You have two choices: quit now, or experience this materialisation from the other end, in about five turns.");
  GamePrint "Apparently, you just materialised inside your own brain. This is very very very nasty. You have two choices: quit now, or experience this materialisation from the other end, in about five turns.";
  TraceOperation 048919 New_line;
  GamePrint "\n";
  TraceOperation 048920 (Jump 048953);
  Jump: 048953
LocOp 048923:
  TraceOperation 048923 (Je [Var (Global 73),Con 66] (Branch F (Dloc 048940)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 048927 (Test_attr (Con 66) (Con 4) (Branch F (Dloc 048940)));
    Let b3 = M[001345];
    if (TestBit(b3,3)) {
      TraceOperation 048931 (Call (Floc 042574) [Con 54] Sp);
      PushFrame;
      PushReturnAddress 048931;
      SetLocal 1 54;
      MakeRoutineFrame 2;
      SetLocal 2 1;
      Jump: 042579
    } else {
      Jump: 048940
    }
  } else {
    Jump: 048940
  }
LocReturn 048931:
  PushStack call_result;
  TraceOperation 048937 (Jump 048953);
  Jump: 048953
LocOp 048940:
  TraceOperation 048940 (Je [Var (Global 73),Con 190] (Branch T (Dloc 048947)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),190)) {
    Jump: 048947
  } else {
    TraceOperation 048944 (Insert_obj (Con 187) (Con 219));
    Let b3 = M[002438];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),187)) {
        Let b5 = M[002439];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),187)) {
            Let b9 = M[002439];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002438 219;
    Let b10 = M[002728];
    SetByte 002439 LoByte(Widen(b10));
    SetByte 002728 187;
    Jump: 048947
  }
LocOp 048947:
  TraceOperation 048947 (Call (Floc 042574) [Var (Global 73)] Sp);
  Let b1 = M[008054];
  Let b2 = M[008055];
  PushFrame;
  PushReturnAddress 048947;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 1;
  Jump: 042579
LocReturn 048947:
  PushStack call_result;
  Jump: 048953
LocOp 048953:
  TraceOperation 048953 (Store (Con 89) (Con 0));
  SetByte 008054 0;
  SetByte 008055 0;
  TraceOperation 048956 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 048958:
  MakeRoutineFrame 0;
  Jump: 048959
LocOp 048959:
  TraceOperation 048959 (Jz (Var (Global 207)) (Branch F Dtrue));
  Let b1 = M[008322];
  Let b2 = M[008323];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 048962 (Jg (Var (Global 74)) (Con 3) (Branch F Dfalse));
    Let b3 = M[008056];
    Let b4 = M[008057];
    if (GreaterThan(MakeHiLo(b3,b4),3)) {
      TraceOperation 048966 Rtrue;
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  }
--------------------------------------------------
LocRoutine 048968:
  MakeRoutineFrame 0;
  Jump: 048969
LocOp 048969:
  TraceOperation 048969 (Print "You can ");
  GamePrint "You can ";
  TraceOperation 048974 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 048974;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 048974:
  PushStack call_result;
  TraceOperation 048979 (Jz (Var Sp) (Branch T (Dloc 048988)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 048988
  } else {
    TraceOperation 048982 (Je [Var (Global 73),Con 86,Con 190] (Branch T (Dloc 048999)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),86),Equal(MakeHiLo(b2,b3),190))) {
      Jump: 048999
    } else {
      Jump: 048988
    }
  }
LocOp 048988:
  TraceOperation 048988 (Print "hear nothing, ");
  GamePrint "hear nothing, ";
  Jump: 048999
LocOp 048999:
  TraceOperation 048999 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 048999;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 048999:
  PushStack call_result;
  TraceOperation 049004 (Jz (Var Sp) (Branch T (Dloc 049013)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049013
  } else {
    TraceOperation 049007 (Je [Var (Global 73),Con 121,Con 99] (Branch T (Dloc 049024)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),121),Equal(MakeHiLo(b2,b3),99))) {
      Jump: 049024
    } else {
      Jump: 049013
    }
  }
LocOp 049013:
  TraceOperation 049013 (Print "smell nothing, ");
  GamePrint "smell nothing, ";
  Jump: 049024
LocOp 049024:
  TraceOperation 049024 (Print "taste nothing, ");
  GamePrint "taste nothing, ";
  TraceOperation 049035 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049035;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049035:
  PushStack call_result;
  TraceOperation 049040 (Jz (Var Sp) (Branch T (Dloc 049049)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049049
  } else {
    TraceOperation 049043 (Je [Var (Global 73),Con 137,Con 66] (Branch T (Dloc 049058)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),137),Equal(MakeHiLo(b2,b3),66))) {
      Jump: 049058
    } else {
      Jump: 049049
    }
  }
LocOp 049049:
  TraceOperation 049049 (Print "see nothing, ");
  GamePrint "see nothing, ";
  Jump: 049058
LocOp 049058:
  TraceOperation 049058 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049058;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049058:
  PushStack call_result;
  TraceOperation 049063 (Jz (Var Sp) (Branch T (Dloc 049072)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049072
  } else {
    TraceOperation 049066 (Je [Var (Global 73),Con 76,Con 213] (Branch T (Dloc 049083)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),76),Equal(MakeHiLo(b2,b3),213))) {
      Jump: 049083
    } else {
      Jump: 049072
    }
  }
LocOp 049072:
  TraceOperation 049072 (Print "feel nothing, ");
  GamePrint "feel nothing, ";
  Jump: 049083
LocOp 049083:
  TraceOperation 049083 (Print_ret "and are not even certain who you are.");
  GamePrint "and are not even certain who you are.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049102:
  MakeRoutineFrame 0;
  Jump: 049103
LocOp 049103:
  TraceOperation 049103 (Print "You can ");
  GamePrint "You can ";
  TraceOperation 049108 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049108;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049108:
  PushStack call_result;
  TraceOperation 049113 (Jz (Var Sp) (Branch T (Dloc 049122)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049122
  } else {
    TraceOperation 049116 (Je [Var (Global 73),Con 137,Con 66] (Branch T (Dloc 049131)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),137),Equal(MakeHiLo(b2,b3),66))) {
      Jump: 049131
    } else {
      Jump: 049122
    }
  }
LocOp 049122:
  TraceOperation 049122 (Print "see nothing, ");
  GamePrint "see nothing, ";
  Jump: 049131
LocOp 049131:
  TraceOperation 049131 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049131;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049131:
  PushStack call_result;
  TraceOperation 049136 (Jz (Var Sp) (Branch T (Dloc 049145)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049145
  } else {
    TraceOperation 049139 (Je [Var (Global 73),Con 76,Con 213] (Branch T (Dloc 049156)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),76),Equal(MakeHiLo(b2,b3),213))) {
      Jump: 049156
    } else {
      Jump: 049145
    }
  }
LocOp 049145:
  TraceOperation 049145 (Print "feel nothing, ");
  GamePrint "feel nothing, ";
  Jump: 049156
LocOp 049156:
  TraceOperation 049156 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049156;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049156:
  PushStack call_result;
  TraceOperation 049161 (Jz (Var Sp) (Branch T (Dloc 049170)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049170
  } else {
    TraceOperation 049164 (Je [Var (Global 73),Con 86,Con 190] (Branch T (Dloc 049181)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),86),Equal(MakeHiLo(b2,b3),190))) {
      Jump: 049181
    } else {
      Jump: 049170
    }
  }
LocOp 049170:
  TraceOperation 049170 (Print "hear nothing, ");
  GamePrint "hear nothing, ";
  Jump: 049181
LocOp 049181:
  TraceOperation 049181 (Print "taste nothing, ");
  GamePrint "taste nothing, ";
  TraceOperation 049192 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049192;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049192:
  PushStack call_result;
  TraceOperation 049197 (Jz (Var Sp) (Branch T (Dloc 049206)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049206
  } else {
    TraceOperation 049200 (Je [Var (Global 73),Con 121,Con 99] (Branch T (Dloc 049217)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),121),Equal(MakeHiLo(b2,b3),99))) {
      Jump: 049217
    } else {
      Jump: 049206
    }
  }
LocOp 049206:
  TraceOperation 049206 (Print "smell nothing, ");
  GamePrint "smell nothing, ";
  Jump: 049217
LocOp 049217:
  TraceOperation 049217 (Print_ret "and are not entirely certain who you are.");
  GamePrint "and are not entirely certain who you are.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049240:
  MakeRoutineFrame 0;
  Jump: 049241
LocOp 049241:
  TraceOperation 049241 (Print "You can't ");
  GamePrint "You can't ";
  TraceOperation 049246 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049246;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049246:
  PushStack call_result;
  TraceOperation 049251 (Jz (Var Sp) (Branch T (Dloc 049260)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049260
  } else {
    TraceOperation 049254 (Je [Var (Global 73),Con 86,Con 190] (Branch T (Dloc 049267)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),86),Equal(MakeHiLo(b2,b3),190))) {
      Jump: 049267
    } else {
      Jump: 049260
    }
  }
LocOp 049260:
  TraceOperation 049260 (Print "hear anything, ");
  GamePrint "hear anything, ";
  Jump: 049267
LocOp 049267:
  TraceOperation 049267 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049267;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049267:
  PushStack call_result;
  TraceOperation 049272 (Jz (Var Sp) (Branch T (Dloc 049281)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049281
  } else {
    TraceOperation 049275 (Je [Var (Global 73),Con 137,Con 66] (Branch T (Dloc 049286)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),137),Equal(MakeHiLo(b2,b3),66))) {
      Jump: 049286
    } else {
      Jump: 049281
    }
  }
LocOp 049281:
  TraceOperation 049281 (Print "see anything, ");
  GamePrint "see anything, ";
  Jump: 049286
LocOp 049286:
  TraceOperation 049286 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049286;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049286:
  PushStack call_result;
  TraceOperation 049291 (Jz (Var Sp) (Branch T (Dloc 049300)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049300
  } else {
    TraceOperation 049294 (Je [Var (Global 73),Con 121,Con 99] (Branch T (Dloc 049309)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),121),Equal(MakeHiLo(b2,b3),99))) {
      Jump: 049309
    } else {
      Jump: 049300
    }
  }
LocOp 049300:
  TraceOperation 049300 (Print "smell anything, ");
  GamePrint "smell anything, ";
  Jump: 049309
LocOp 049309:
  TraceOperation 049309 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049309;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049309:
  PushStack call_result;
  TraceOperation 049314 (Jz (Var Sp) (Branch T (Dloc 049323)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049323
  } else {
    TraceOperation 049317 (Je [Var (Global 73),Con 76,Con 213] (Branch T (Dloc 049330)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),76),Equal(MakeHiLo(b2,b3),213))) {
      Jump: 049330
    } else {
      Jump: 049323
    }
  }
LocOp 049323:
  TraceOperation 049323 (Print "feel anything, ");
  GamePrint "feel anything, ";
  Jump: 049330
LocOp 049330:
  TraceOperation 049330 (Print_ret "or taste anything, and do not even know where you are or who you are or how you got there.");
  GamePrint "or taste anything, and do not even know where you are or who you are or how you got there.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049376:
  MakeRoutineFrame 0;
  Jump: 049377
LocOp 049377:
  TraceOperation 049377 (Print "There's nothing you can taste, ");
  GamePrint "There's nothing you can taste, ";
  TraceOperation 049388 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049388;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049388:
  PushStack call_result;
  TraceOperation 049393 (Jz (Var Sp) (Branch T (Dloc 049402)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049402
  } else {
    TraceOperation 049396 (Je [Var (Global 73),Con 137,Con 66] (Branch T (Dloc 049411)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),137),Equal(MakeHiLo(b2,b3),66))) {
      Jump: 049411
    } else {
      Jump: 049402
    }
  }
LocOp 049402:
  TraceOperation 049402 (Print "nothing you can see, ");
  GamePrint "nothing you can see, ";
  Jump: 049411
LocOp 049411:
  TraceOperation 049411 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049411;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049411:
  PushStack call_result;
  TraceOperation 049416 (Jz (Var Sp) (Branch T (Dloc 049425)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049425
  } else {
    TraceOperation 049419 (Je [Var (Global 73),Con 86,Con 190] (Branch T (Dloc 049434)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),86),Equal(MakeHiLo(b2,b3),190))) {
      Jump: 049434
    } else {
      Jump: 049425
    }
  }
LocOp 049425:
  TraceOperation 049425 (Print "nothing you can hear, ");
  GamePrint "nothing you can hear, ";
  Jump: 049434
LocOp 049434:
  TraceOperation 049434 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049434;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049434:
  PushStack call_result;
  TraceOperation 049439 (Jz (Var Sp) (Branch T (Dloc 049448)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049448
  } else {
    TraceOperation 049442 (Je [Var (Global 73),Con 76,Con 213] (Branch T (Dloc 049457)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),76),Equal(MakeHiLo(b2,b3),213))) {
      Jump: 049457
    } else {
      Jump: 049448
    }
  }
LocOp 049448:
  TraceOperation 049448 (Print "nothing you can feel, ");
  GamePrint "nothing you can feel, ";
  Jump: 049457
LocOp 049457:
  TraceOperation 049457 (Call (Floc 048958) [] Sp);
  PushFrame;
  PushReturnAddress 049457;
  MakeRoutineFrame 0;
  Jump: 048959
LocReturn 049457:
  PushStack call_result;
  TraceOperation 049462 (Jz (Var Sp) (Branch T (Dloc 049471)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 049471
  } else {
    TraceOperation 049465 (Je [Var (Global 73),Con 121,Con 99] (Branch T (Dloc 049482)));
    Let b2 = M[008054];
    Let b3 = M[008055];
    if (LogOr(Equal(MakeHiLo(b2,b3),121),Equal(MakeHiLo(b2,b3),99))) {
      Jump: 049482
    } else {
      Jump: 049471
    }
  }
LocOp 049471:
  TraceOperation 049471 (Print "nothing you can smell, ");
  GamePrint "nothing you can smell, ";
  Jump: 049482
LocOp 049482:
  TraceOperation 049482 (Print_ret "you do not even know who you are.");
  GamePrint "you do not even know who you are.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049502:
  MakeRoutineFrame 0;
  Jump: 049503
LocOp 049503:
  TraceOperation 049503 (Je [Var (Global 73),Con 99] (Branch F (Dloc 049521)));
  Let b1 = M[008054];
  Let b2 = M[008055];
  if (Equal(MakeHiLo(b1,b2),99)) {
    TraceOperation 049507 (Print "Bugblatter Beast");
    GamePrint "Bugblatter Beast";
    TraceOperation 049520 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 049521
  }
LocOp 049521:
  TraceOperation 049521 (Test_attr (Con 121) (Con 4) (Branch F (Dloc 049531)));
  Let b1 = M[001840];
  if (TestBit(b1,3)) {
    TraceOperation 049525 (Print "guard");
    GamePrint "guard";
    TraceOperation 049530 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 049531
  }
LocOp 049531:
  TraceOperation 049531 (Print_obj (Con 142));
  Let b1 = M[002036];
  Let b2 = M[002037];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 049533 Rtrue;
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 049534:
  MakeRoutineFrame 0;
  Jump: 049535
LocOp 049535:
  TraceOperation 049535 (Print "The ");
  GamePrint "The ";
  TraceOperation 049538 (Print_obj (Con 123));
  Let b1 = M[001865];
  Let b2 = M[001866];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 049540 (Call (Floc 042734) [Con -9961] Sp);
  PushFrame;
  PushReturnAddress 049540;
  SetLocal 1 -9961;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 049540:
  PushStack call_result;
  TraceOperation 049547 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049548:
  MakeRoutineFrame 0;
  Jump: 049549
LocOp 049549:
  TraceOperation 049549 (Je [Var (Global 203),Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 049553 (Test_attr (Con 19) (Con 5) (Branch T Dfalse));
    Let b3 = M[000922];
    if (TestBit(b3,2)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 049557 (Insert_obj (Con 19) (Con 31));
      Let b5 = M[000926];
      if (IsZero(Widen(b5))) {} else {
        Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b6),19)) {
          Let b7 = M[000927];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
        } else {
          Let loop_var8 = Widen(b6);
          Label 9: {
            Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
            if (Equal(Widen(b10),19)) {
              Let b11 = M[000927];
              SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
            } else {
              Assign loop_var8 = Widen(b10);
              Goto: Label 9
            }
          }
        }
      }
      SetByte 000926 31;
      Let b12 = M[001036];
      SetByte 000927 LoByte(Widen(b12));
      SetByte 001036 19;
      TraceOperation 049560 (Set_attr (Con 19) (Con 5));
      Let b13 = M[000922];
      SetByte 000922 SetBit(b13,2);
      TraceOperation 049563 (Clear_attr (Con 19) (Con 21));
      Let b14 = M[000924];
      SetByte 000924 ClearBit(b14,2);
      TraceOperation 049566 (Print "As you pick up the ");
      GamePrint "As you pick up the ";
      TraceOperation 049579 (Print_obj (Con 19));
      Let b15 = M[000929];
      Let b16 = M[000930];
      Let b17 = M[Address(MakeHiLo(b15,b16))];
      Let ite_res18 = Ite((IsZeroByte(b17),"",GetText(Offset(Address(MakeHiLo(b15,b16)),1))));
      GamePrint ite_res18;
      TraceOperation 049581 (Print " a tree outside the window collapses. There is no causal relationship between these two events.");
      GamePrint " a tree outside the window collapses. There is no causal relationship between these two events.";
      TraceOperation 049638 (Test_attr (Con 162) (Con 5) (Branch F (Dloc 049647)));
      Let b19 = M[002209];
      if (TestBit(b19,2)) {
        TraceOperation 049642 (Call (Floc 059962) [] Sp);
        PushFrame;
        PushReturnAddress 049642;
        MakeRoutineFrame 0;
        Jump: 059963
      } else {
        Jump: 049647
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_20;
    SetResult 0;
    JumpIndirect: (return) return_address_20
  }
LocReturn 049642:
  PushStack call_result;
  Jump: 049647
LocOp 049647:
  TraceOperation 049647 New_line;
  GamePrint "\n";
  TraceOperation 049648 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049650:
  MakeRoutineFrame 0;
  Jump: 049651
LocOp 049651:
  TraceOperation 049651 (Je [Var (Global 202),Con 212,Con 214] (Branch F (Dloc 049666)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),212),Equal(MakeHiLo(b1,b2),214))) {
    TraceOperation 049657 (Call (Floc 022042) [Con 171,Var (Global 202),Var (Global 201)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    Let b5 = M[008310];
    Let b6 = M[008311];
    PushFrame;
    PushReturnAddress 049657;
    SetLocal 1 171;
    SetLocal 2 MakeHiLo(b3,b4);
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 022057
  } else {
    Jump: 049666
  }
LocReturn 049657:
  PushStack call_result;
  TraceOperation 049665 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 049666:
  TraceOperation 049666 (Insert_obj (Var (Global 201)) (Con 219));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),MakeHiLo(b1,b2))) {
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),MakeHiLo(b1,b2))) {
          Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 219;
  Let b10 = M[002728];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b10));
  SetByte 002728 b2;
  TraceOperation 049669 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 049679)));
  Let b11 = M[008310];
  Let b12 = M[008311];
  Let b13 = M[008324];
  Let b14 = M[008325];
  if (Equal(MakeHiLo(b11,b12),MakeHiLo(b13,b14))) {
    TraceOperation 049673 (Store (Con 224) (Con 0));
    SetByte 008324 0;
    SetByte 008325 0;
    TraceOperation 049676 (Jump 049686);
    Jump: 049686
  } else {
    Jump: 049679
  }
LocOp 049679:
  TraceOperation 049679 (Je [Var (Global 201),Var (Global 116)] (Branch F (Dloc 049686)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[008140];
  Let b4 = M[008141];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 049683 (Store (Con 132) (Con 0));
    SetByte 008140 0;
    SetByte 008141 0;
    Jump: 049686
  } else {
    Jump: 049686
  }
LocOp 049686:
  TraceOperation 049686 (Print "It spills all over and then evaporates.");
  GamePrint "It spills all over and then evaporates.";
  TraceOperation 049711 (Je [Var (Global 201),Con 122] (Branch F (Dloc 049725)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),122)) {
    TraceOperation 049715 (Call (Floc 049734) [Con -9893] Sp);
    PushFrame;
    PushReturnAddress 049715;
    SetLocal 1 -9893;
    MakeRoutineFrame 1;
    Jump: 049737
  } else {
    Jump: 049725
  }
LocReturn 049715:
  PushStack call_result;
  TraceOperation 049722 (Jump 049732);
  Jump: 049732
LocOp 049725:
  TraceOperation 049725 (Call (Floc 049734) [Con -12342] Sp);
  PushFrame;
  PushReturnAddress 049725;
  SetLocal 1 -12342;
  MakeRoutineFrame 1;
  Jump: 049737
LocReturn 049725:
  PushStack call_result;
  Jump: 049732
LocOp 049732:
  TraceOperation 049732 New_line;
  GamePrint "\n";
  TraceOperation 049733 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 049734:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 049737
LocOp 049737:
  TraceOperation 049737 (Print " The ");
  GamePrint " The ";
  TraceOperation 049740 (Print_paddr (Var (Local 1)));
  GetLocal 1 local1_1;
  GamePrint GetText(PackedAddress Z3(local1_1));
  TraceOperation 049742 (Print " itself vaporises, part of the Galactic Anti-Litter Program.");
  GamePrint " itself vaporises, part of the Galactic Anti-Litter Program.";
  TraceOperation 049785 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 049786:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 049789
LocOp 049789:
  TraceOperation 049789 (Call (Floc 049796) [Con 9] Sp);
  PushFrame;
  PushReturnAddress 049789;
  SetLocal 1 9;
  MakeRoutineFrame 1;
  Jump: 049799
LocReturn 049789:
  PushStack call_result;
  TraceOperation 049795 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 049796:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 049799
LocOp 049799:
  TraceOperation 049799 (Print "There is a nice, hot cup of ");
  GamePrint "There is a nice, hot cup of ";
  TraceOperation 049816 (Print_obj (Var (Local 1)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),7)];
  Let b3 = M[Offset(Offset(Offset(000751,Mul(local1_1,9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 049818 (Print_ret " here.");
  GamePrint " here.\n";
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 049824:
  MakeRoutineFrame 0;
  Jump: 049825
LocOp 049825:
  TraceOperation 049825 (Je [Var (Global 203),Con 124] (Branch F (Dloc 049854)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 049829 (Je [Var (Global 201),Con 9] (Branch F (Dloc 049854)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),9)) {
      TraceOperation 049833 (Insert_obj (Con 9) (Con 31));
      Let b5 = M[000836];
      if (IsZero(Widen(b5))) {} else {
        Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b6),9)) {
          Let b7 = M[000837];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
        } else {
          Let loop_var8 = Widen(b6);
          Label 9: {
            Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
            if (Equal(Widen(b10),9)) {
              Let b11 = M[000837];
              SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
            } else {
              Assign loop_var8 = Widen(b10);
              Goto: Label 9
            }
          }
        }
      }
      SetByte 000836 31;
      Let b12 = M[001036];
      SetByte 000837 LoByte(Widen(b12));
      SetByte 001036 9;
      TraceOperation 049836 (Store (Con 82) (Con 0));
      SetByte 008040 0;
      SetByte 008041 0;
      TraceOperation 049839 (Print_ret "no tea: Dropped.");
      GamePrint "no tea: Dropped.\n";
      PopFrame;
      PopReturnAddress return_address_13;
      SetResult 1;
      JumpIndirect: (return) return_address_13
    } else {
      Jump: 049854
    }
  } else {
    Jump: 049854
  }
LocOp 049854:
  TraceOperation 049854 (Je [Var (Global 203),Con 53] (Branch F (Dloc 049902)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 049858 (Insert_obj (Con 9) (Var (Global 0)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[000836];
    if (IsZero(Widen(b5))) {} else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b6),9)) {
        Let b7 = M[000837];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
      } else {
        Let loop_var8 = Widen(b6);
        Label 9: {
          Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
          if (Equal(Widen(b10),9)) {
            Let b11 = M[000837];
            SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
          } else {
            Assign loop_var8 = Widen(b10);
            Goto: Label 9
          }
        }
      }
    }
    SetByte 000836 b4;
    Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte 000837 LoByte(Widen(b12));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 9;
    TraceOperation 049861 (Je [Var (Global 0),Con 175] (Branch F (Dloc 049874)));
    Let b13 = M[007908];
    Let b14 = M[007909];
    if (Equal(MakeHiLo(b13,b14),175)) {
      TraceOperation 049865 (Store (Con 82) (Con 1));
      SetByte 008040 0;
      SetByte 008041 1;
      TraceOperation 049868 (Call (Floc 031550) [] Sp);
      PushFrame;
      PushReturnAddress 049868;
      MakeRoutineFrame 0;
      Jump: 031551
    } else {
      Jump: 049874
    }
  } else {
    Jump: 049902
  }
LocReturn 049868:
  PushStack call_result;
  TraceOperation 049873 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 049874:
  TraceOperation 049874 (Jz (Var (Global 66)) (Branch T (Dloc 049886)));
  Let b1 = M[008040];
  Let b2 = M[008041];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 049886
  } else {
    TraceOperation 049877 (Print_ret "Dropped.");
    GamePrint "Dropped.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 049886:
  TraceOperation 049886 (Store (Con 82) (Con 1));
  SetByte 008040 0;
  SetByte 008041 1;
  TraceOperation 049889 (Print_ret "no tea: Taken.");
  GamePrint "no tea: Taken.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 049902:
  TraceOperation 049902 (Je [Var (Global 203),Con 52,Con 57,Con 51] (Branch F (Dloc 050057)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),52),Equal(MakeHiLo(b1,b2),57)),Equal(MakeHiLo(b1,b2),51))) {
    TraceOperation 049910 (Call (Floc 043468) [Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 049910;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    Jump: 050057
  }
LocReturn 049910:
  PushStack call_result;
  TraceOperation 049916 (Jz (Var Sp) (Branch F (Dloc 049928)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 049919 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 049921 (Print_ret " the cup!");
    GamePrint " the cup!\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 049928
  }
LocOp 049928:
  TraceOperation 049928 (Add (Var (Global 1)) (Con 100) (Global 1));
  Let b1 = M[007910];
  Let b2 = M[007911];
  SetByte 007910 HiByte(Add(MakeHiLo(b1,b2),100));
  SetByte 007911 LoByte(Add(MakeHiLo(b1,b2),100));
  TraceOperation 049932 (Insert_obj (Con 9) (Con 219));
  Let b3 = M[000836];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),9)) {
      Let b5 = M[000837];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),9)) {
          Let b9 = M[000837];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 000836 219;
  Let b10 = M[002728];
  SetByte 000837 LoByte(Widen(b10));
  SetByte 002728 9;
  TraceOperation 049935 (Store (Con 82) (Con 1));
  SetByte 008040 0;
  SetByte 008041 1;
  TraceOperation 049938 (Je [Con 9,Var (Global 208)] (Branch F (Dloc 049945)));
  Let b11 = M[008324];
  Let b12 = M[008325];
  if (Equal(9,MakeHiLo(b11,b12))) {
    TraceOperation 049942 (Store (Con 224) (Con 0));
    SetByte 008324 0;
    SetByte 008325 0;
    Jump: 049945
  } else {
    Jump: 049945
  }
LocOp 049945:
  TraceOperation 049945 (Print "It is the finest tea you have ever tasted. It has almost made this entire misadventure seem worthwhile. You experience several moments of complete happiness and relaxation.");
  GamePrint "It is the finest tea you have ever tasted. It has almost made this entire misadventure seem worthwhile. You experience several moments of complete happiness and relaxation.";
  TraceOperation 050048 (Call (Floc 049734) [Con -12342] Sp);
  PushFrame;
  PushReturnAddress 050048;
  SetLocal 1 -12342;
  MakeRoutineFrame 1;
  Jump: 049737
LocReturn 050048:
  PushStack call_result;
  TraceOperation 050055 New_line;
  GamePrint "\n";
  TraceOperation 050056 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 050057:
  TraceOperation 050057 (Je [Var (Global 203),Con 154,Con 112] (Branch F (Dloc 050069)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),112))) {
    TraceOperation 050063 (Call (Floc 049650) [] Sp);
    PushFrame;
    PushReturnAddress 050063;
    MakeRoutineFrame 0;
    Jump: 049651
  } else {
    Jump: 050069
  }
LocReturn 050063:
  PushStack call_result;
  TraceOperation 050068 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 050069:
  TraceOperation 050069 (Je [Var (Global 203),Con 63,Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 050075 (Print_paddr (Var (Global 46)));
    Let b3 = M[008000];
    Let b4 = M[008001];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 050077 (Print " it has even more");
    GamePrint " it has even more";
    TraceOperation 050086 (Print_paddr (Var (Global 34)));
    Let b5 = M[007976];
    Let b6 = M[007977];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 050088 (Print " than ");
    GamePrint " than ";
    TraceOperation 050093 (Print_obj (Con 204));
    Let b7 = M[002594];
    Let b8 = M[002595];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
    GamePrint ite_res10;
    TraceOperation 050095 (Print "!");
    GamePrint "!";
    TraceOperation 050098 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 050113)));
    Let b11 = M[008310];
    Let b12 = M[008311];
    Let b13 = M[008324];
    Let b14 = M[008325];
    if (Equal(MakeHiLo(b11,b12),MakeHiLo(b13,b14))) {
      TraceOperation 050102 (Print " ");
      GamePrint " ";
      TraceOperation 050105 (Call (Floc 022042) [Con 61,Con 179] Sp);
      PushFrame;
      PushReturnAddress 050105;
      SetLocal 1 61;
      SetLocal 2 179;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 050113
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_15;
    SetResult 0;
    JumpIndirect: (return) return_address_15
  }
LocReturn 050105:
  PushStack call_result;
  TraceOperation 050112 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 050113:
  TraceOperation 050113 New_line;
  GamePrint "\n";
  TraceOperation 050114 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 050116:
  MakeRoutineFrame 0;
  Jump: 050117
LocOp 050117:
  TraceOperation 050117 (Je [Var (Global 203),Con 53,Con 124] (Branch F (Dloc 050160)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),53),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 050123 (Je [Var (Global 201),Con 8] (Branch F (Dloc 050160)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),8)) {
      TraceOperation 050127 (Test_attr (Con 78) (Con 3) (Branch T (Dloc 050160)));
      Let b5 = M[001453];
      if (TestBit(b5,4)) {
        Jump: 050160
      } else {
        TraceOperation 050131 (Print_ret "Your common sense tells you that you can't do that.");
        GamePrint "Your common sense tells you that you can't do that.\n";
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      }
    } else {
      Jump: 050160
    }
  } else {
    Jump: 050160
  }
LocOp 050160:
  TraceOperation 050160 (Je [Var (Global 203),Con 124] (Branch F (Dloc 050187)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 050164 (Je [Var (Global 201),Con 8] (Branch F (Dloc 050187)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),8)) {
      TraceOperation 050168 (Jz (Var (Global 66)) (Branch F (Dloc 050187)));
      Let b5 = M[008040];
      Let b6 = M[008041];
      if (IsZero(MakeHiLo(b5,b6))) {
        TraceOperation 050171 (Store (Con 82) (Con 1));
        SetByte 008040 0;
        SetByte 008041 1;
        TraceOperation 050174 (Print_ret "no tea: Taken.");
        GamePrint "no tea: Taken.\n";
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      } else {
        Jump: 050187
      }
    } else {
      Jump: 050187
    }
  } else {
    Jump: 050187
  }
LocOp 050187:
  TraceOperation 050187 (Je [Var (Global 203),Con 66,Con 134] (Branch F (Dloc 050197)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),66),Equal(MakeHiLo(b1,b2),134))) {
    TraceOperation 050193 (Je [Var (Global 202),Con 216] (Branch T Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),216)) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 050197
    }
  } else {
    Jump: 050197
  }
LocOp 050197:
  TraceOperation 050197 (Je [Var (Global 203),Con 22] (Branch F (Dloc 050205)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 050201 (Je [Var (Global 201),Con 1] (Branch T Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),1)) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 050205
    }
  } else {
    Jump: 050205
  }
LocOp 050205:
  TraceOperation 050205 (Je [Var (Global 203),Con 23] (Branch F (Dloc 050221)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 050209 (Je [Var (Global 201),Con 209] (Branch F (Dloc 050221)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),209)) {
      TraceOperation 050213 (Call (Floc 022042) [Con 159,Con 208] Sp);
      PushFrame;
      PushReturnAddress 050213;
      SetLocal 1 159;
      SetLocal 2 208;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 050221
    }
  } else {
    Jump: 050221
  }
LocReturn 050213:
  PushStack call_result;
  TraceOperation 050220 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 050221:
  TraceOperation 050221 (Print_ret "You're talking complete nonsense; pull yourself together.");
  GamePrint "You're talking complete nonsense; pull yourself together.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 050260:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 050263
LocOp 050263:
  TraceOperation 050263 (Je [Var (Local 1),Con 9,Con 8] (Branch F Dtrue));
  GetLocal 1 local1_1;
  if (LogOr(Equal(local1_1,9),Equal(local1_1,8))) {
    TraceOperation 050269 (Je [Var (Global 203),Con 134] (Branch T Dtrue));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (Equal(MakeHiLo(b2,b3),134)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 050273 (Je [Var (Local 1),Con 9] (Branch F (Dloc 050308)));
      GetLocal 1 local1_5;
      if (Equal(local1_5,9)) {
        TraceOperation 050277 (Je [Var (Global 203),Con 124] (Branch F (Dloc 050301)));
        Let b6 = M[008314];
        Let b7 = M[008315];
        if (Equal(MakeHiLo(b6,b7),124)) {
          TraceOperation 050281 (Call (Floc 043468) [Con 9] Sp);
          PushFrame;
          PushReturnAddress 050281;
          SetLocal 1 9;
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 043473
        } else {
          Jump: 050301
        }
      } else {
        Jump: 050308
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 1;
    JumpIndirect: (return) return_address_8
  }
LocReturn 050281:
  PushStack call_result;
  TraceOperation 050287 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 050290 (Jz (Var (Global 202)) (Branch T Dfalse));
    Let b2 = M[008312];
    Let b3 = M[008313];
    if (IsZero(MakeHiLo(b2,b3))) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 050293 (Get_parent (Var (Global 201)) Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      PushStack Widen(b7);
      TraceOperation 050296 (Je [Var (Global 202),Var Sp] (Branch T Dfalse));
      Let b8 = M[008312];
      Let b9 = M[008313];
      PopStack popped10;
      if (Equal(MakeHiLo(b8,b9),popped10)) {
        PopFrame;
        PopReturnAddress return_address_11;
        SetResult 0;
        JumpIndirect: (return) return_address_11
      } else {
        TraceOperation 050300 Rtrue;
        PopFrame;
        PopReturnAddress return_address_12;
        SetResult 1;
        JumpIndirect: (return) return_address_12
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_13;
    SetResult 1;
    JumpIndirect: (return) return_address_13
  }
LocOp 050301:
  TraceOperation 050301 (Je [Var (Global 203),Con 53] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 050305 (Jz (Var (Global 66)) (Branch T Dfalse));
    Let b3 = M[008040];
    Let b4 = M[008041];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 050308
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocOp 050308:
  TraceOperation 050308 (Je [Var (Local 1),Con 8] (Branch F Dtrue));
  GetLocal 1 local1_1;
  if (Equal(local1_1,8)) {
    TraceOperation 050312 (Je [Var (Global 203),Con 124] (Branch F Dtrue));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (Equal(MakeHiLo(b2,b3),124)) {
      TraceOperation 050316 (Jz (Var (Global 66)) (Branch F Dtrue));
      Let b4 = M[008040];
      Let b5 = M[008041];
      if (IsZero(MakeHiLo(b4,b5))) {
        TraceOperation 050319 Rfalse;
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 0;
        JumpIndirect: (return) return_address_6
      } else {
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 1;
      JumpIndirect: (return) return_address_8
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  }
--------------------------------------------------
LocRoutine 050320:
  MakeRoutineFrame 0;
  Jump: 050321
LocOp 050321:
  TraceOperation 050321 (Je [Var (Global 203),Con 61] (Branch F (Dloc 050547)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 050326 (Print "The ");
    GamePrint "The ";
    TraceOperation 050329 (Print_obj (Con 7));
    Let b3 = M[000821];
    Let b4 = M[000822];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 050331 (Print " is shaped like a small fist with an extended thumb. Various lights along its \"knuckles\" are currently ");
    GamePrint " is shaped like a small fist with an extended thumb. Various lights along its \"knuckles\" are currently ";
    TraceOperation 050390 (Jin (Con 124) (Var (Global 0)) (Branch T (Dloc 050400)));
    Let b7 = M[007908];
    Let b8 = M[007909];
    Let b9 = M[001871];
    if (Equal(MakeHiLo(b7,b8),Widen(b9))) {
      Jump: 050400
    } else {
      TraceOperation 050394 (Je [Var (Global 0),Con 101,Con 213] (Branch F (Dloc 050440)));
      Let b10 = M[007908];
      Let b11 = M[007909];
      if (LogOr(Equal(MakeHiLo(b10,b11),101),Equal(MakeHiLo(b10,b11),213))) {
        Jump: 050400
      } else {
        Jump: 050440
      }
    }
  } else {
    Jump: 050547
  }
LocOp 050400:
  TraceOperation 050400 (Print "blinking wildly, indicating a spaceship in the vicinity");
  GamePrint "blinking wildly, indicating a spaceship in the vicinity";
  TraceOperation 050437 (Jump 050445);
  Jump: 050445
LocOp 050440:
  TraceOperation 050440 (Print "dark");
  GamePrint "dark";
  Jump: 050445
LocOp 050445:
  TraceOperation 050445 (Print ". It has two small buttons, a red one labelled \"Call Engineer\" and a green one labelled \"Hitchhike.\"");
  GamePrint ". It has two small buttons, a red one labelled \"Call Engineer\" and a green one labelled \"Hitchhike.\"";
  TraceOperation 050512 (Call (Floc 057998) [] Sp);
  PushFrame;
  PushReturnAddress 050512;
  MakeRoutineFrame 0;
  Jump: 057999
LocReturn 050512:
  PushStack call_result;
  TraceOperation 050517 (Print " Affixed to the Thumb is a lifetime ");
  GamePrint " Affixed to the Thumb is a lifetime ";
  TraceOperation 050542 (Print_obj (Con 4));
  Let b1 = M[000794];
  Let b2 = M[000795];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 050544 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 050547:
  TraceOperation 050547 (Je [Var (Global 203),Con 124] (Branch F (Dloc 050567)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 050551 (Je [Var (Global 120),Con 142] (Branch F (Dloc 050567)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),142)) {
      TraceOperation 050555 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 050567)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[001871];
      if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
        TraceOperation 050559 (Jin (Con 7) (Con 141) (Branch T (Dloc 050567)));
        Let b8 = M[000818];
        if (Equal(141,Widen(b8))) {
          Jump: 050567
        } else {
          TraceOperation 050563 (Print_paddr (Var (Global 32)));
          Let b9 = M[007972];
          Let b10 = M[007973];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
          TraceOperation 050565 New_line;
          GamePrint "\n";
          TraceOperation 050566 Rtrue;
          PopFrame;
          PopReturnAddress return_address_11;
          SetResult 1;
          JumpIndirect: (return) return_address_11
        }
      } else {
        Jump: 050567
      }
    } else {
      Jump: 050567
    }
  } else {
    Jump: 050567
  }
LocOp 050567:
  TraceOperation 050567 (Je [Var (Global 203),Con 63,Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),39)),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 050574 (Print_ret "Impossible.");
    GamePrint "Impossible.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 050586:
  MakeRoutineFrame 0;
  Jump: 050587
LocOp 050587:
  TraceOperation 050587 (Je [Var (Global 203),Con 114] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),114)) {
    TraceOperation 050591 (Call (Floc 043468) [Con 7] Sp);
    PushFrame;
    PushReturnAddress 050591;
    SetLocal 1 7;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 050591:
  PushStack call_result;
  TraceOperation 050597 (Jz (Var Sp) (Branch F (Dloc 050608)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 050600 (Call (Floc 022042) [Con 114,Con 5] Sp);
    PushFrame;
    PushReturnAddress 050600;
    SetLocal 1 114;
    SetLocal 2 5;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 050608
  }
LocReturn 050600:
  PushStack call_result;
  TraceOperation 050607 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 050608:
  TraceOperation 050608 (Jin (Con 3) (Var (Global 0)) (Branch F (Dloc 050660)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[000782];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 050612 (Print "Another ");
    GamePrint "Another ";
    TraceOperation 050619 (Print_obj (Con 3));
    Let b4 = M[000785];
    Let b5 = M[000786];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 050621 (Print_ret " zips up, spots the first one, looks confused, and leaves again.");
    GamePrint " zips up, spots the first one, looks confused, and leaves again.\n";
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 1;
    JumpIndirect: (return) return_address_8
  } else {
    Jump: 050660
  }
LocOp 050660:
  TraceOperation 050660 (Insert_obj (Con 3) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[000782];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),3)) {
      Let b5 = M[000783];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),3)) {
          Let b9 = M[000783];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 000782 b2;
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  SetByte 000783 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 3;
  TraceOperation 050663 (Insert_obj (Con 2) (Var (Global 0)));
  Let b11 = M[007908];
  Let b12 = M[007909];
  Let b13 = M[000773];
  if (IsZero(Widen(b13))) {} else {
    Let b14 = M[Offset(Offset(000751,Mul(Widen(b13),9)),6)];
    if (Equal(Widen(b14),2)) {
      Let b15 = M[000774];
      SetByte Offset(Offset(000751,Mul(Widen(b13),9)),6) LoByte(Widen(b15));
    } else {
      Let loop_var16 = Widen(b14);
      Label 17: {
        Let b18 = M[Offset(Offset(000751,Mul(loop_var16,9)),5)];
        if (Equal(Widen(b18),2)) {
          Let b19 = M[000774];
          SetByte Offset(Offset(000751,Mul(loop_var16,9)),5) LoByte(Widen(b19));
        } else {
          Assign loop_var16 = Widen(b18);
          Goto: Label 17
        }
      }
    }
  }
  SetByte 000773 b12;
  Let b20 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6)];
  SetByte 000774 LoByte(Widen(b20));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6) 2;
  TraceOperation 050666 (Call (Floc 022320) [Con 26048,Con 2] Sp);
  PushFrame;
  PushReturnAddress 050666;
  SetLocal 1 26048;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 050666:
  PushStack call_result;
  TraceOperation 050674 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 050679 (Print "With a screech of ion brakes a ");
  GamePrint "With a screech of ion brakes a ";
  TraceOperation 050700 (Print_paddr (Var (Global 43)));
  Let b2 = M[007994];
  Let b3 = M[007995];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 050702 (Print_ret " Repair Robot pulls up on a bike from out of the Sub-Etha.");
  GamePrint " Repair Robot pulls up on a bike from out of the Sub-Etha.\n";
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult 1;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 050742:
  MakeRoutineFrame 0;
  Jump: 050743
LocOp 050743:
  TraceOperation 050743 (Je [Var (Global 203),Con 114] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),114)) {
    TraceOperation 050747 (Call (Floc 043468) [Con 7] Sp);
    PushFrame;
    PushReturnAddress 050747;
    SetLocal 1 7;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 050747:
  PushStack call_result;
  TraceOperation 050753 (Jz (Var Sp) (Branch F (Dloc 050772)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 050756 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 050758 (Print " the ");
    GamePrint " the ";
    TraceOperation 050761 (Print_obj (Con 7));
    Let b4 = M[000821];
    Let b5 = M[000822];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 050763 (Print ".");
    GamePrint ".";
    TraceOperation 050766 New_line;
    GamePrint "\n";
    TraceOperation 050767 (Store (Con 207) (Con 7));
    SetByte 008290 0;
    SetByte 008291 7;
    TraceOperation 050770 (Ret (Var (Global 191)));
    Let b8 = M[008290];
    Let b9 = M[008291];
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult MakeHiLo(b8,b9);
    JumpIndirect: (return) return_address_10
  } else {
    Jump: 050772
  }
LocOp 050772:
  TraceOperation 050772 (Je [Var (Global 120),Con 142] (Branch F (Dloc 050787)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 050776 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 050787)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001871];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 050780 (Insert_obj (Con 7) (Var (Global 0)));
      Let b6 = M[007908];
      Let b7 = M[007909];
      Let b8 = M[000818];
      if (IsZero(Widen(b8))) {} else {
        Let b9 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
        if (Equal(Widen(b9),7)) {
          Let b10 = M[000819];
          SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b10));
        } else {
          Let loop_var11 = Widen(b9);
          Label 12: {
            Let b13 = M[Offset(Offset(000751,Mul(loop_var11,9)),5)];
            if (Equal(Widen(b13),7)) {
              Let b14 = M[000819];
              SetByte Offset(Offset(000751,Mul(loop_var11,9)),5) LoByte(Widen(b14));
            } else {
              Assign loop_var11 = Widen(b13);
              Goto: Label 12
            }
          }
        }
      }
      SetByte 000818 b7;
      Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
      SetByte 000819 LoByte(Widen(b15));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 7;
      TraceOperation 050783 (Print_paddr (Var (Global 4)));
      Let b16 = M[007916];
      Let b17 = M[007917];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b16,b17)));
      TraceOperation 050785 New_line;
      GamePrint "\n";
      TraceOperation 050786 Rtrue;
      PopFrame;
      PopReturnAddress return_address_18;
      SetResult 1;
      JumpIndirect: (return) return_address_18
    } else {
      Jump: 050787
    }
  } else {
    Jump: 050787
  }
LocOp 050787:
  TraceOperation 050787 (Test_attr (Con 7) (Con 3) (Branch F (Dloc 050800)));
  Let b1 = M[000814];
  if (TestBit(b1,4)) {
    TraceOperation 050791 (Print "The");
    GamePrint "The";
    TraceOperation 050796 (Print_paddr (Var (Global 35)));
    Let b2 = M[007978];
    Let b3 = M[007979];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 050798 New_line;
    GamePrint "\n";
    TraceOperation 050799 Rtrue;
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 050800
  }
LocOp 050800:
  TraceOperation 050800 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 050944)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001871];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 050805 (Je [Var (Global 130),Con 3] (Branch F (Dloc 050931)));
    Let b4 = M[008168];
    Let b5 = M[008169];
    if (Equal(MakeHiLo(b4,b5),3)) {
      TraceOperation 050810 (Print "Lights whirl sickeningly around your head, the ground arches away beneath your feet, and every atom of your being is scrambled, an experience you're probably going to have to get used to. You are in...");
      GamePrint "Lights whirl sickeningly around your head, the ground arches away beneath your feet, and every atom of your being is scrambled, an experience you're probably going to have to get used to. You are in...";
      TraceOperation 050917 New_line;
      GamePrint "\n";
      TraceOperation 050918 New_line;
      GamePrint "\n";
      TraceOperation 050919 (Call (Floc 075134) [] Sp);
      PushFrame;
      PushReturnAddress 050919;
      MakeRoutineFrame 0;
      Jump: 075135
    } else {
      Jump: 050931
    }
  } else {
    Jump: 050944
  }
LocReturn 050919:
  PushStack call_result;
  TraceOperation 050924 (Call (Floc 042574) [Con 25] Sp);
  PushFrame;
  PushReturnAddress 050924;
  SetLocal 1 25;
  MakeRoutineFrame 2;
  SetLocal 2 1;
  Jump: 042579
LocReturn 050924:
  PushStack call_result;
  TraceOperation 050930 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 050931:
  TraceOperation 050931 (Print "A");
  GamePrint "A";
  TraceOperation 050934 (Print_paddr (Var (Global 42)));
  Let b1 = M[007992];
  Let b2 = M[007993];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 050936 (Call (Floc 042734) [Con -9891] Sp);
  PushFrame;
  PushReturnAddress 050936;
  SetLocal 1 -9891;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 050936:
  PushStack call_result;
  TraceOperation 050943 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 050944:
  TraceOperation 050944 (Je [Var (Global 0),Con 101,Con 213] (Branch F (Dloc 051080)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(Equal(MakeHiLo(b1,b2),101),Equal(MakeHiLo(b1,b2),213))) {
    TraceOperation 050951 (Print "Every molecule in your body gets pulled away from every other molecule. Then suddenly they snap back together again like elastic, and you find, with a dizzy head and very sore molecules, that you are in...");
    GamePrint "Every molecule in your body gets pulled away from every other molecule. Then suddenly they snap back together again like elastic, and you find, with a dizzy head and very sore molecules, that you are in...";
    TraceOperation 051068 New_line;
    GamePrint "\n";
    TraceOperation 051069 New_line;
    GamePrint "\n";
    TraceOperation 051070 (Store (Con 98) (Con 100));
    SetByte 008072 0;
    SetByte 008073 100;
    TraceOperation 051073 (Call (Floc 042574) [Con 25] Sp);
    PushFrame;
    PushReturnAddress 051073;
    SetLocal 1 25;
    MakeRoutineFrame 2;
    SetLocal 2 1;
    Jump: 042579
  } else {
    Jump: 051080
  }
LocReturn 051073:
  PushStack call_result;
  TraceOperation 051079 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 051080:
  TraceOperation 051080 (Set_attr (Con 7) (Con 3));
  Let b1 = M[000814];
  SetByte 000814 SetBit(b1,4);
  TraceOperation 051083 (Print_ret "The Thumb winks and flashes for a second. Nothing further happens.");
  GamePrint "The Thumb winks and flashes for a second. Nothing further happens.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 051126:
  MakeRoutineFrame 0;
  Jump: 051127
LocOp 051127:
  TraceOperation 051127 (Je [Var (Global 203),Con 61,Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),61),Equal(MakeHiLo(b1,b2),120))) {
    TraceOperation 051133 (Print "The lifetime ");
    GamePrint "The lifetime ";
    TraceOperation 051142 (Print_obj (Con 4));
    Let b3 = M[000794];
    Let b4 = M[000795];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 051144 (Print " states that the Thumb will be repaired on site by trained ");
    GamePrint " states that the Thumb will be repaired on site by trained ";
    TraceOperation 051179 (Print_paddr (Var (Global 43)));
    Let b7 = M[007994];
    Let b8 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 051181 (Print_ret " Field Engineers.");
    GamePrint " Field Engineers.\n";
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
--------------------------------------------------
LocRoutine 051196:
  MakeRoutineFrame 0;
  Jump: 051197
LocOp 051197:
  TraceOperation 051197 (Je [Con 3,Var (Global 195)] (Branch F (Dloc 051407)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(3,MakeHiLo(b1,b2))) {
    TraceOperation 051202 (Call (Floc 022320) [Con 26048,Con 2] Sp);
    PushFrame;
    PushReturnAddress 051202;
    SetLocal 1 26048;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 051407
  }
LocReturn 051202:
  PushStack call_result;
  TraceOperation 051210 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 051215 (Je [Var (Global 203),Con 150] (Branch F (Dloc 051238)));
  Let b2 = M[008314];
  Let b3 = M[008315];
  if (Equal(MakeHiLo(b2,b3),150)) {
    TraceOperation 051219 (Je [Var (Global 201),Con 30] (Branch F (Dloc 051238)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (Equal(MakeHiLo(b4,b5),30)) {
      TraceOperation 051223 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 051226 (Call (Floc 022042) [Con 22,Con 3,Var (Global 202)] Sp);
      Let b6 = M[008312];
      Let b7 = M[008313];
      PushFrame;
      PushReturnAddress 051226;
      SetLocal 1 22;
      SetLocal 2 3;
      SetLocal 3 MakeHiLo(b6,b7);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 051238
    }
  } else {
    Jump: 051238
  }
LocReturn 051226:
  PushStack call_result;
  TraceOperation 051234 (Store (Con 211) (Con 3));
  SetByte 008298 0;
  SetByte 008299 3;
  TraceOperation 051237 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 051238:
  TraceOperation 051238 (Je [Var (Global 203),Con 75] (Branch F (Dloc 051256)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 051242 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 051245 (Call (Floc 022042) [Con 75,Con 3] Sp);
    PushFrame;
    PushReturnAddress 051245;
    SetLocal 1 75;
    SetLocal 2 3;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 051256
  }
LocReturn 051245:
  PushStack call_result;
  TraceOperation 051252 (Store (Con 211) (Con 3));
  SetByte 008298 0;
  SetByte 008299 3;
  TraceOperation 051255 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 051256:
  TraceOperation 051256 (Je [Var (Global 203),Con 125] (Branch F (Dloc 051305)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),125)) {
    TraceOperation 051260 (Je [Var (Global 201),Con 7] (Branch F (Dloc 051305)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),7)) {
      TraceOperation 051264 (Jin (Con 7) (Con 3) (Branch F (Dloc 051287)));
      Let b5 = M[000818];
      if (Equal(3,Widen(b5))) {
        TraceOperation 051268 (Print_ret "\"I'm doing my best...\"");
        GamePrint "\"I'm doing my best...\"\n";
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      } else {
        Jump: 051287
      }
    } else {
      Jump: 051305
    }
  } else {
    Jump: 051305
  }
LocOp 051287:
  TraceOperation 051287 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 051290 (Insert_obj (Con 7) (Con 31));
  Let b1 = M[000818];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),7)) {
      Let b3 = M[000819];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),7)) {
          Let b7 = M[000819];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 000818 31;
  Let b8 = M[001036];
  SetByte 000819 LoByte(Widen(b8));
  SetByte 001036 7;
  TraceOperation 051293 (Call (Floc 022042) [Con 66,Con 7,Con 3] Sp);
  PushFrame;
  PushReturnAddress 051293;
  SetLocal 1 66;
  SetLocal 2 7;
  SetLocal 3 3;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 051293:
  PushStack call_result;
  TraceOperation 051301 (Store (Con 211) (Con 3));
  SetByte 008298 0;
  SetByte 008299 3;
  TraceOperation 051304 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 051305:
  TraceOperation 051305 (Je [Var (Global 203),Con 125] (Branch F (Dloc 051329)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),125)) {
    TraceOperation 051309 (Print "\"I repair only ");
    GamePrint "\"I repair only ";
    TraceOperation 051322 (Print_obj (Con 7));
    Let b3 = M[000821];
    Let b4 = M[000822];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 051324 (Print_ret "s!\"");
    GamePrint "s!\"\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 051329
  }
LocOp 051329:
  TraceOperation 051329 (Je [Var (Global 203),Con 181] (Branch F (Dloc 051343)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),181)) {
    TraceOperation 051333 (Je [Var (Global 213),Con 12] (Branch F (Dloc 051343)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),12)) {
      TraceOperation 051337 (Call (Floc 040748) [] Sp);
      PushFrame;
      PushReturnAddress 051337;
      MakeRoutineFrame 0;
      Jump: 040749
    } else {
      Jump: 051343
    }
  } else {
    Jump: 051343
  }
LocReturn 051337:
  PushStack call_result;
  TraceOperation 051342 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 051343:
  TraceOperation 051343 (Je [Var (Global 203),Con 102] (Branch F (Dloc 051357)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),102)) {
    TraceOperation 051347 (Je [Var (Global 213),Con 12] (Branch F (Dloc 051357)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),12)) {
      TraceOperation 051351 (Call (Floc 035052) [] Sp);
      PushFrame;
      PushReturnAddress 051351;
      MakeRoutineFrame 0;
      Jump: 035053
    } else {
      Jump: 051357
    }
  } else {
    Jump: 051357
  }
LocReturn 051351:
  PushStack call_result;
  TraceOperation 051356 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 051357:
  TraceOperation 051357 (Print "\"Can't chat, pal, I'm attending to an important repair call.\"");
  GamePrint "\"Can't chat, pal, I'm attending to an important repair call.\"";
  TraceOperation 051400 New_line;
  GamePrint "\n";
  TraceOperation 051401 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 051401;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 051401:
  PushStack call_result;
  TraceOperation 051406 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 051407:
  TraceOperation 051407 (Je [Var (Global 203),Con 134,Con 66] (Branch F (Dloc 051723)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),134),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 051414 (Je [Var (Global 201),Con 7] (Branch F (Dloc 051723)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),7)) {
      TraceOperation 051419 (Test_attr (Con 7) (Con 3) (Branch F (Dloc 051626)));
      Let b5 = M[000814];
      if (TestBit(b5,4)) {
        TraceOperation 051424 (Call (Floc 022320) [Con 26048,Con 2] Sp);
        PushFrame;
        PushReturnAddress 051424;
        SetLocal 1 26048;
        SetLocal 2 2;
        MakeRoutineFrame 3;
        SetLocal 3 0;
        Jump: 022327
      } else {
        Jump: 051626
      }
    } else {
      Jump: 051723
    }
  } else {
    Jump: 051723
  }
LocReturn 051424:
  PushStack call_result;
  TraceOperation 051432 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 051437 (Store (Con 80) (Con 1));
  SetByte 008036 0;
  SetByte 008037 1;
  TraceOperation 051440 (Insert_obj (Con 7) (Con 3));
  Let b2 = M[000818];
  if (IsZero(Widen(b2))) {} else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b3),7)) {
      Let b4 = M[000819];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
    } else {
      Let loop_var5 = Widen(b3);
      Label 6: {
        Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
        if (Equal(Widen(b7),7)) {
          Let b8 = M[000819];
          SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
        } else {
          Assign loop_var5 = Widen(b7);
          Goto: Label 6
        }
      }
    }
  }
  SetByte 000818 3;
  Let b9 = M[000784];
  SetByte 000819 LoByte(Widen(b9));
  SetByte 000784 7;
  TraceOperation 051443 (Print "The ");
  GamePrint "The ";
  TraceOperation 051446 (Print_obj (Con 3));
  Let b10 = M[000785];
  Let b11 = M[000786];
  Let b12 = M[Address(MakeHiLo(b10,b11))];
  Let ite_res13 = Ite((IsZeroByte(b12),"",GetText(Offset(Address(MakeHiLo(b10,b11)),1))));
  GamePrint ite_res13;
  TraceOperation 051448 (Print " takes it, looks at it with horror, shakes his head, sighs, and says \"Who sold you this then?\"");
  GamePrint " takes it, looks at it with horror, shakes his head, sighs, and says \"Who sold you this then?\"";
  TraceOperation 051501 New_line;
  GamePrint "\n";
  TraceOperation 051502 New_line;
  GamePrint "\n";
  TraceOperation 051503 (Print ">");
  GamePrint ">";
  TraceOperation 051508 (Sread (Var (Global 193)) (Var (Global 194)));
  Let b14 = M[007908];
  Let b15 = M[007909];
  Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),7)];
  Let b17 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),7),1)];
  Let b18 = M[Address(MakeHiLo(b16,b17))];
  Let ite_res19 = Ite((IsZeroByte(b18),"",GetText(Offset(Address(MakeHiLo(b16,b17)),1))));
  Let b20 = M[007910];
  Let b21 = M[007911];
  Let b22 = M[007912];
  Let b23 = M[007913];
  ReadInputFromUser (Just (StatusInfo {room = ite_res19, score = MakeHiLo(b20,b21), turns = MakeHiLo(b22,b23)})) user_command_line_24;
  Let b25 = M[008294];
  Let b26 = M[008295];
  Let b27 = M[008296];
  Let b28 = M[008297];
  Tokenize user_command_line_24 (num_tokens_29,positions30,words31);
  StringBytes user_command_line_24 string_bytes_32;
  Let loop_var33 = 0;
  Label 34: {
    if (Equal(loop_var33,Widen(StringLength(user_command_line_24)))) {
      SetByte Offset(Address(MakeHiLo(b27,b28)),1) num_tokens_29;
      Let loop_var35 = 0;
      Label 36: {
        if (Equal(loop_var35,Widen(num_tokens_29))) {
          TraceOperation 051512 (Print "The ");
          GamePrint "The ";
          TraceOperation 051515 (Print_obj (Con 3));
          Let b37 = M[000785];
          Let b38 = M[000786];
          Let b39 = M[Address(MakeHiLo(b37,b38))];
          Let ite_res40 = Ite((IsZeroByte(b39),"",GetText(Offset(Address(MakeHiLo(b37,b38)),1))));
          GamePrint ite_res40;
          TraceOperation 051517 (Print_ret " ignores your reply and shakes the Thumb despondently. \"This is a model 13X,\" he says. \"Not meant for this sort of job. Anyway, it's discontinued. Can't get the parts.\"");
          GamePrint " ignores your reply and shakes the Thumb despondently. \"This is a model 13X,\" he says. \"Not meant for this sort of job. Anyway, it's discontinued. Can't get the parts.\"\n";
          PopFrame;
          PopReturnAddress return_address_41;
          SetResult 1;
          JumpIndirect: (return) return_address_41
        } else {
          Let lookee42 = LookupInDict(IndexList(words31,loop_var35));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b27,b28)),2),Mul(4,loop_var35)),0) HiByte(DeAddress(lookee42));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b27,b28)),2),Mul(4,loop_var35)),1) LoByte(DeAddress(lookee42));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b27,b28)),2),Mul(4,loop_var35)),2) StringLength(IndexList(words31,loop_var35));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b27,b28)),2),Mul(4,loop_var35)),3) IndexList(positions30,loop_var35);
          Assign loop_var35 = Add(loop_var35,1);
          Goto: Label 36
        }
      }
    } else {
      SetByte Offset(Offset(Address(MakeHiLo(b25,b26)),1),loop_var33) IndexList(string_bytes_32,loop_var33);
      Assign loop_var33 = Add(loop_var33,1);
      Goto: Label 34
    }
  }
LocOp 051626:
  TraceOperation 051626 (Insert_obj (Con 7) (Con 31));
  Let b1 = M[000818];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),7)) {
      Let b3 = M[000819];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),7)) {
          Let b7 = M[000819];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 000818 31;
  Let b8 = M[001036];
  SetByte 000819 LoByte(Widen(b8));
  SetByte 001036 7;
  TraceOperation 051629 (Call (Floc 052048) [] Sp);
  PushFrame;
  PushReturnAddress 051629;
  MakeRoutineFrame 0;
  Jump: 052049
LocReturn 051629:
  PushStack call_result;
  TraceOperation 051634 (Print "The ");
  GamePrint "The ";
  TraceOperation 051637 (Print_obj (Con 3));
  Let b1 = M[000785];
  Let b2 = M[000786];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 051639 (Print " takes the Thumb, shakes it, looks it up and down. \"Seems to be working OK to me. Unusual for a 13X.\" He hands it back and");
  GamePrint " takes the Thumb, shakes it, looks it up and down. \"Seems to be working OK to me. Unusual for a 13X.\" He hands it back and";
  TraceOperation 051718 (Print_paddr (Var (Global 59)));
  Let b5 = M[008026];
  Let b6 = M[008027];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
  TraceOperation 051720 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 051723:
  TraceOperation 051723 (Je [Var (Global 203),Con 134,Con 66] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),134),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 051729 (Je [Var (Global 201),Con 4] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),4)) {
      TraceOperation 051733 (Test_attr (Con 7) (Con 3) (Branch T (Dloc 051746)));
      Let b5 = M[000814];
      if (TestBit(b5,4)) {
        Jump: 051746
      } else {
        TraceOperation 051737 (Call (Floc 022042) [Con 66,Con 7,Con 3] Sp);
        PushFrame;
        PushReturnAddress 051737;
        SetLocal 1 66;
        SetLocal 2 7;
        SetLocal 3 3;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 022057
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocReturn 051737:
  PushStack call_result;
  TraceOperation 051745 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 051746:
  TraceOperation 051746 (Clear_attr (Con 7) (Con 3));
  Let b1 = M[000814];
  SetByte 000814 ClearBit(b1,4);
  TraceOperation 051749 (Call (Floc 052048) [] Sp);
  PushFrame;
  PushReturnAddress 051749;
  MakeRoutineFrame 0;
  Jump: 052049
LocReturn 051749:
  PushStack call_result;
  TraceOperation 051754 (Insert_obj (Con 7) (Con 31));
  Let b1 = M[000818];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),7)) {
      Let b3 = M[000819];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),7)) {
          Let b7 = M[000819];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 000818 31;
  Let b8 = M[001036];
  SetByte 000819 LoByte(Widen(b8));
  SetByte 001036 7;
  TraceOperation 051757 (Jz (Var (Global 64)) (Branch F (Dloc 051838)));
  Let b9 = M[008036];
  Let b10 = M[008037];
  if (IsZero(MakeHiLo(b9,b10))) {
    TraceOperation 051761 (Print "The ");
    GamePrint "The ";
    TraceOperation 051764 (Print_obj (Con 3));
    Let b11 = M[000785];
    Let b12 = M[000786];
    Let b13 = M[Address(MakeHiLo(b11,b12))];
    Let ite_res14 = Ite((IsZeroByte(b13),"",GetText(Offset(Address(MakeHiLo(b11,b12)),1))));
    GamePrint ite_res14;
    TraceOperation 051766 (Print " looks quizzically at the ");
    GamePrint " looks quizzically at the ";
    TraceOperation 051781 (Print_obj (Con 4));
    Let b15 = M[000794];
    Let b16 = M[000795];
    Let b17 = M[Address(MakeHiLo(b15,b16))];
    Let ite_res18 = Ite((IsZeroByte(b17),"",GetText(Offset(Address(MakeHiLo(b15,b16)),1))));
    GamePrint ite_res18;
    TraceOperation 051783 (Print " and says it's expired but he'll see what he can do. ");
    GamePrint " and says it's expired but he'll see what he can do. ";
    TraceOperation 051810 (Print_paddr (Var (Global 58)));
    Let b19 = M[008024];
    Let b20 = M[008025];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b19,b20)));
    TraceOperation 051812 (Print "\"Can't promise anything.\" He");
    GamePrint "\"Can't promise anything.\" He";
    TraceOperation 051833 (Print_paddr (Var (Global 59)));
    Let b21 = M[008026];
    Let b22 = M[008027];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b21,b22)));
    TraceOperation 051835 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_23;
    SetResult 1;
    JumpIndirect: (return) return_address_23
  } else {
    Jump: 051838
  }
LocOp 051838:
  TraceOperation 051838 (Store (Con 80) (Con 0));
  SetByte 008036 0;
  SetByte 008037 0;
  TraceOperation 051841 (Print "The ");
  GamePrint "The ";
  TraceOperation 051844 (Print_obj (Con 3));
  Let b1 = M[000785];
  Let b2 = M[000786];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 051846 (Print " looks at it sceptically. \"Guaranteed to work normally for life,\" he mutters. \"Well, it's perfectly normal for a 13X to break down. And this one's reached the end of its life anyway. But I'll see what I can do.\"");
  GamePrint " looks at it sceptically. \"Guaranteed to work normally for life,\" he mutters. \"Well, it's perfectly normal for a 13X to break down. And this one's reached the end of its life anyway. But I'll see what I can do.\"";
  TraceOperation 051981 New_line;
  GamePrint "\n";
  TraceOperation 051982 New_line;
  GamePrint "\n";
  TraceOperation 051983 (Print_paddr (Var (Global 58)));
  Let b5 = M[008024];
  Let b6 = M[008025];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
  TraceOperation 051985 (Print "\"Best I can do for a 13X on an expired ");
  GamePrint "\"Best I can do for a 13X on an expired ";
  TraceOperation 052012 (Print_obj (Con 4));
  Let b7 = M[000794];
  Let b8 = M[000795];
  Let b9 = M[Address(MakeHiLo(b7,b8))];
  Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
  GamePrint ite_res10;
  TraceOperation 052014 (Print ",\" he says. \"Can't promise anything.\" He");
  GamePrint ",\" he says. \"Can't promise anything.\" He";
  TraceOperation 052043 (Print_paddr (Var (Global 59)));
  Let b11 = M[008026];
  Let b12 = M[008027];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
  TraceOperation 052045 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 1;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 052048:
  MakeRoutineFrame 0;
  Jump: 052049
LocOp 052049:
  TraceOperation 052049 (Jin (Con 7) (Con 3) (Branch F (Dloc 052069)));
  Let b1 = M[000818];
  if (Equal(3,Widen(b1))) {
    TraceOperation 052053 (Jin (Con 3) (Var (Global 0)) (Branch F (Dloc 052063)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[000782];
    if (Equal(MakeHiLo(b2,b3),Widen(b4))) {
      TraceOperation 052057 (Insert_obj (Con 7) (Con 31));
      Let b5 = M[000818];
      if (IsZero(Widen(b5))) {} else {
        Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b6),7)) {
          Let b7 = M[000819];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
        } else {
          Let loop_var8 = Widen(b6);
          Label 9: {
            Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
            if (Equal(Widen(b10),7)) {
              Let b11 = M[000819];
              SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
            } else {
              Assign loop_var8 = Widen(b10);
              Goto: Label 9
            }
          }
        }
      }
      SetByte 000818 31;
      Let b12 = M[001036];
      SetByte 000819 LoByte(Widen(b12));
      SetByte 001036 7;
      TraceOperation 052060 (Jump 052069);
      Jump: 052069
    } else {
      Jump: 052063
    }
  } else {
    Jump: 052069
  }
LocOp 052063:
  TraceOperation 052063 (Get_parent (Con 3) Sp);
  Let b1 = M[000782];
  PushStack Widen(b1);
  TraceOperation 052066 (Insert_obj (Con 7) (Var Sp));
  PopStack popped2;
  Let b3 = M[000818];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),7)) {
      Let b5 = M[000819];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),7)) {
          Let b9 = M[000819];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 000818 LoByte(popped2);
  Let b10 = M[Offset(Offset(000751,Mul(popped2,9)),6)];
  SetByte 000819 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(popped2,9)),6) 7;
  Jump: 052069
LocOp 052069:
  TraceOperation 052069 (Insert_obj (Con 3) (Con 219));
  Let b1 = M[000782];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),3)) {
      Let b3 = M[000783];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),3)) {
          Let b7 = M[000783];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 000782 219;
  Let b8 = M[002728];
  SetByte 000783 LoByte(Widen(b8));
  SetByte 002728 3;
  TraceOperation 052072 (Insert_obj (Con 2) (Con 219));
  Let b9 = M[000773];
  if (IsZero(Widen(b9))) {} else {
    Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
    if (Equal(Widen(b10),2)) {
      Let b11 = M[000774];
      SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
    } else {
      Let loop_var12 = Widen(b10);
      Label 13: {
        Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
        if (Equal(Widen(b14),2)) {
          Let b15 = M[000774];
          SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
        } else {
          Assign loop_var12 = Widen(b14);
          Goto: Label 13
        }
      }
    }
  }
  SetByte 000773 219;
  Let b16 = M[002728];
  SetByte 000774 LoByte(Widen(b16));
  SetByte 002728 2;
  TraceOperation 052075 (Call (Floc 022340) [Con 26048] Sp);
  PushFrame;
  PushReturnAddress 052075;
  SetLocal 1 26048;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 052075:
  PushStack call_result;
  TraceOperation 052082 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 052087 (Store (Con 80) (Con 0));
  SetByte 008036 0;
  SetByte 008037 0;
  TraceOperation 052090 (Store (Con 81) (Con 0));
  SetByte 008038 0;
  SetByte 008039 0;
  TraceOperation 052093 (Ret (Var (Global 65)));
  Let b2 = M[008038];
  Let b3 = M[008039];
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult MakeHiLo(b2,b3);
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 052096:
  MakeRoutineFrame 0;
  Jump: 052097
LocOp 052097:
  TraceOperation 052097 (Call (Floc 022320) [Con 26048,Con -1] Sp);
  PushFrame;
  PushReturnAddress 052097;
  SetLocal 1 26048;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 052097:
  PushStack call_result;
  TraceOperation 052106 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 052111 (Inc (Con 81));
  Let b2 = M[008038];
  Let b3 = M[008039];
  SetByte 008038 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008039 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 052113 (Jin (Con 3) (Var (Global 0)) (Branch T (Dloc 052123)));
  Let b4 = M[007908];
  Let b5 = M[007909];
  Let b6 = M[000782];
  if (Equal(MakeHiLo(b4,b5),Widen(b6))) {
    Jump: 052123
  } else {
    TraceOperation 052117 (Call (Floc 052048) [] Sp);
    PushFrame;
    PushReturnAddress 052117;
    MakeRoutineFrame 0;
    Jump: 052049
  }
LocReturn 052117:
  PushStack call_result;
  TraceOperation 052122 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 052123:
  TraceOperation 052123 New_line;
  GamePrint "\n";
  TraceOperation 052124 (Je [Var (Global 64),Con 1] (Branch F (Dloc 052214)));
  Let b1 = M[008036];
  Let b2 = M[008037];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 052129 (Store (Con 80) (Con 2));
    SetByte 008036 0;
    SetByte 008037 2;
    TraceOperation 052132 (Print "The ");
    GamePrint "The ";
    TraceOperation 052135 (Print_obj (Con 3));
    Let b3 = M[000785];
    Let b4 = M[000786];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 052137 (Print_ret " ignores you completely. \"See, this is the model with the 5kz booster,\" he says. \"Hopeless.\" He shakes his head grimly.");
    GamePrint " ignores you completely. \"See, this is the model with the 5kz booster,\" he says. \"Hopeless.\" He shakes his head grimly.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 052214
  }
LocOp 052214:
  TraceOperation 052214 (Je [Var (Global 64),Con 2] (Branch F (Dloc 052344)));
  Let b1 = M[008036];
  Let b2 = M[008037];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 052219 (Print "The ");
    GamePrint "The ";
    TraceOperation 052222 (Print_obj (Con 3));
    Let b3 = M[000785];
    Let b4 = M[000786];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 052224 (Print " ignores you. \"What you want, you see, is one of the new Mk7's. Only you can't get them. Out of stock till Zarkmas. Sorry.\" He");
    GamePrint " ignores you. \"What you want, you see, is one of the new Mk7's. Only you can't get them. Out of stock till Zarkmas. Sorry.\" He";
    TraceOperation 052307 (Jin (Con 7) (Con 3) (Branch F (Dloc 052334)));
    Let b7 = M[000818];
    if (Equal(3,Widen(b7))) {
      TraceOperation 052311 (Print " gives the defunct Thumb back and");
      GamePrint " gives the defunct Thumb back and";
      Jump: 052334
    } else {
      Jump: 052334
    }
  } else {
    Jump: 052344
  }
LocOp 052334:
  TraceOperation 052334 (Call (Floc 052048) [] Sp);
  PushFrame;
  PushReturnAddress 052334;
  MakeRoutineFrame 0;
  Jump: 052049
LocReturn 052334:
  PushStack call_result;
  TraceOperation 052339 (Print_paddr (Var (Global 59)));
  Let b1 = M[008026];
  Let b2 = M[008027];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 052341 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 052344:
  TraceOperation 052344 (Je [Var (Global 65),Con 1] (Branch F (Dloc 052402)));
  Let b1 = M[008038];
  Let b2 = M[008039];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 052348 (Store (Con 229) (Con 12));
    SetByte 008334 0;
    SetByte 008335 12;
    TraceOperation 052351 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame;
    PushReturnAddress 052351;
    SetLocal 1 -14349;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 052402
  }
LocReturn 052351:
  PushStack call_result;
  TraceOperation 052359 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 052364 (Print "The ");
  GamePrint "The ";
  TraceOperation 052367 (Print_obj (Con 3));
  Let b2 = M[000785];
  Let b3 = M[000786];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 052369 (Print_ret " looks around. \"Somebody call the repair service?\"");
  GamePrint " looks around. \"Somebody call the repair service?\"\n";
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
LocOp 052402:
  TraceOperation 052402 (Je [Var (Global 65),Con 2] (Branch F (Dloc 052440)));
  Let b1 = M[008038];
  Let b2 = M[008039];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 052406 (Print "The ");
    GamePrint "The ";
    TraceOperation 052409 (Print_obj (Con 3));
    Let b3 = M[000785];
    Let b4 = M[000786];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 052411 (Print_ret " looks impatient and guns the throttle of his cycle.");
    GamePrint " looks impatient and guns the throttle of his cycle.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 052440
  }
LocOp 052440:
  TraceOperation 052440 (Call (Floc 052048) [] Sp);
  PushFrame;
  PushReturnAddress 052440;
  MakeRoutineFrame 0;
  Jump: 052049
LocReturn 052440:
  PushStack call_result;
  TraceOperation 052445 (Print "\"Probably a kid playing around with someone else's Thumb,\" grumbles the ");
  GamePrint "\"Probably a kid playing around with someone else's Thumb,\" grumbles the ";
  TraceOperation 052492 (Print_obj (Con 3));
  Let b1 = M[000785];
  Let b2 = M[000786];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 052494 (Print " and");
  GamePrint " and";
  TraceOperation 052499 (Print_paddr (Var (Global 59)));
  Let b5 = M[008026];
  Let b6 = M[008027];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
  TraceOperation 052501 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
--------------------------------------------------
LocRoutine 052504:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 052507
LocOp 052507:
  TraceOperation 052507 (Print "There is a copy of ");
  GamePrint "There is a copy of ";
  TraceOperation 052518 (Print_paddr (Var (Global 37)));
  Let b1 = M[007982];
  Let b2 = M[007983];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 052520 (Print_ret " here.");
  GamePrint " here.\n";
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 052526:
  MakeRoutineFrame 0;
  Jump: 052527
LocOp 052527:
  TraceOperation 052527 (Je [Var (Global 203),Con 61] (Branch F (Dloc 052731)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 052532 (Print_ret "The Guide is a Mark II model. Its only resemblance to the Mark IV pictured in the brochure in your game package is the large, friendly \"Don't Panic!\" on its cover.\n\nThe Guide is a Sub-Etha Relay. You can use it to tap information from a huge and distant data bank by consulting the Guide about some item or subject.");
    GamePrint "The Guide is a Mark II model. Its only resemblance to the Mark IV pictured in the brochure in your game package is the large, friendly \"Don't Panic!\" on its cover.\n\nThe Guide is a Sub-Etha Relay. You can use it to tap information from a huge and distant data bank by consulting the Guide about some item or subject.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 052731
  }
LocOp 052731:
  TraceOperation 052731 (Je [Var (Global 203),Con 22] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 052735 (Je [Var (Global 201),Con 1] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),1)) {
      TraceOperation 052739 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 052747)));
      Let b5 = M[002003];
      if (TestBit(b5,6)) {
        TraceOperation 052743 (Print_paddr (Var (Global 49)));
        Let b6 = M[008006];
        Let b7 = M[008007];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
        TraceOperation 052745 New_line;
        GamePrint "\n";
        TraceOperation 052746 Rtrue;
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 1;
        JumpIndirect: (return) return_address_8
      } else {
        Jump: 052747
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
LocOp 052747:
  TraceOperation 052747 (Je [Var (Global 202),Con 175] (Branch F (Dloc 052875)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),175)) {
    TraceOperation 052752 (Print "Suddenly, agents of the ");
    GamePrint "Suddenly, agents of the ";
    TraceOperation 052769 (Print_paddr (Var (Global 18)));
    Let b3 = M[007944];
    Let b4 = M[007945];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 052771 (Print " pop in using Sub-Etha belts, rough you up a bit, tell you there's no such thing as the ");
    GamePrint " pop in using Sub-Etha belts, rough you up a bit, tell you there's no such thing as the ";
    TraceOperation 052828 (Print_paddr (Var (Global 18)));
    Let b5 = M[007944];
    Let b6 = M[007945];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 052830 (Print " and never to consult ");
    GamePrint " and never to consult ";
    TraceOperation 052845 (Print_obj (Con 1));
    Let b7 = M[000767];
    Let b8 = M[000768];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
    GamePrint ite_res10;
    TraceOperation 052847 (Print " about the ");
    GamePrint " about the ";
    TraceOperation 052852 (Print_paddr (Var (Global 18)));
    Let b11 = M[007944];
    Let b12 = M[007945];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
    TraceOperation 052854 (Print_ret " again; then they leave.");
    GamePrint " again; then they leave.\n";
    PopFrame;
    PopReturnAddress return_address_13;
    SetResult 1;
    JumpIndirect: (return) return_address_13
  } else {
    Jump: 052875
  }
LocOp 052875:
  TraceOperation 052875 (Print "The Guide checks through its Sub-Etha-Net database and eventually comes up with the following entry:");
  GamePrint "The Guide checks through its Sub-Etha-Net database and eventually comes up with the following entry:";
  TraceOperation 052938 New_line;
  GamePrint "\n";
  TraceOperation 052939 New_line;
  GamePrint "\n";
  TraceOperation 052940 (Je [Var (Global 202),Con 1] (Branch F (Dloc 052973)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 052944 (Print_obj (Con 1));
    Let b3 = M[000767];
    Let b4 = M[000768];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 052946 (Print " is a wholly remarkable product.");
    GamePrint " is a wholly remarkable product.";
    TraceOperation 052969 (Print_paddr (Var (Global 36)));
    Let b7 = M[007980];
    Let b8 = M[007981];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 052971 New_line;
    GamePrint "\n";
    TraceOperation 052972 Rtrue;
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 052973
  }
LocOp 052973:
  TraceOperation 052973 (Je [Var (Global 202),Con 185,Con 180,Con 179] (Branch T (Dloc 052987)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),185),Equal(MakeHiLo(b1,b2),180)),Equal(MakeHiLo(b1,b2),179))) {
    Jump: 052987
  } else {
    TraceOperation 052980 (Je [Var (Global 202),Con 6,Con 5,Con 184] (Branch F (Dloc 053023)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),6),Equal(MakeHiLo(b3,b4),5)),Equal(MakeHiLo(b3,b4),184))) {
      Jump: 052987
    } else {
      Jump: 053023
    }
  }
LocOp 052987:
  TraceOperation 052987 (Print "Part of");
  GamePrint "Part of";
  TraceOperation 052994 (Je [Var (Global 202),Con 185] (Branch F (Dloc 053011)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),185)) {
    TraceOperation 052998 (Jin (Con 185) (Con 186) (Branch T (Dloc 053011)));
    Let b3 = M[002420];
    if (Equal(186,Widen(b3))) {
      Jump: 053011
    } else {
      TraceOperation 053002 (Call (Floc 043738) [Con 186] Sp);
      PushFrame;
      PushReturnAddress 053002;
      SetLocal 1 186;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043743
    }
  } else {
    Jump: 053011
  }
LocReturn 053002:
  PushStack call_result;
  TraceOperation 053008 (Jump 053020);
  Jump: 053020
LocOp 053011:
  TraceOperation 053011 (Get_parent (Var (Global 202)) Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 053014 (Call (Floc 043738) [Var Sp] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 053014;
  SetLocal 1 popped4;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 053014:
  PushStack call_result;
  Jump: 053020
LocOp 053020:
  TraceOperation 053020 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 053023:
  TraceOperation 053023 (Je [Var (Global 202),Con 86] (Branch F (Dloc 053084)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),86)) {
    TraceOperation 053027 (Print_ret "If you have to consult the Guide about that, you're probably in serious shape. Consult a medic instead.");
    GamePrint "If you have to consult the Guide about that, you're probably in serious shape. Consult a medic instead.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 053084
  }
LocOp 053084:
  TraceOperation 053084 (Je [Var (Global 202),Con 67] (Branch F (Dloc 053167)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),67)) {
    TraceOperation 053089 (Print_obj (Con 67));
    Let b3 = M[001361];
    Let b4 = M[001362];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 053091 (Print " is a planet whose surface is mostly water. It is a favourite spot for Presidential dedication ceremonies");
    GamePrint " is a planet whose surface is mostly water. It is a favourite spot for Presidential dedication ceremonies";
    TraceOperation 053158 (Print_paddr (Var (Global 28)));
    Let b7 = M[007964];
    Let b8 = M[007965];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 053160 (Print_ret "France.");
    GamePrint "France.\n";
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 053167
  }
LocOp 053167:
  TraceOperation 053167 (Je [Var (Global 202),Con 55] (Branch F (Dloc 053205)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 053171 (Print "France is the largest landmass on the planet ");
    GamePrint "France is the largest landmass on the planet ";
    TraceOperation 053200 (Print_obj (Con 67));
    Let b3 = M[001361];
    Let b4 = M[001362];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 053202 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 053205
  }
LocOp 053205:
  TraceOperation 053205 (Je [Var (Global 202),Con 220] (Branch F (Dloc 053286)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),220)) {
    TraceOperation 053210 (Print "There is absolutely no such spaceship as ");
    GamePrint "There is absolutely no such spaceship as ";
    TraceOperation 053235 (Print_obj (Con 220));
    Let b3 = M[002738];
    Let b4 = M[002739];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 053237 (Print " and anything you've ever read in this spot to the contrary was just a prank.\n   -- ");
    GamePrint " and anything you've ever read in this spot to the contrary was just a prank.\n   -- ";
    TraceOperation 053282 (Print_paddr (Var (Global 18)));
    Let b7 = M[007944];
    Let b8 = M[007945];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 053284 New_line;
    GamePrint "\n";
    TraceOperation 053285 Rtrue;
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 053286
  }
LocOp 053286:
  TraceOperation 053286 (Je [Var (Global 202),Con 105] (Branch F (Dloc 053403)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),105)) {
    TraceOperation 053291 (Print_obj (Con 105));
    Let b3 = M[001703];
    Let b4 = M[001704];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 053293 (Print " is so awful that even the Sarkopsi of Burphon XII, whose religion strictly forbids the taking of one's life, consider suicide a preferable alternative to a ");
    GamePrint " is so awful that even the Sarkopsi of Burphon XII, whose religion strictly forbids the taking of one's life, consider suicide a preferable alternative to a ";
    TraceOperation 053392 (Print_obj (Con 105));
    Let b7 = M[001703];
    Let b8 = M[001704];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
    GamePrint ite_res10;
    TraceOperation 053394 (Print_ret " reading.");
    GamePrint " reading.\n";
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 1;
    JumpIndirect: (return) return_address_11
  } else {
    Jump: 053403
  }
LocOp 053403:
  TraceOperation 053403 (Je [Var (Global 202),Con 124,Con 106] (Branch F (Dloc 053565)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),124),Equal(MakeHiLo(b1,b2),106))) {
    TraceOperation 053410 (Print "Vogons, whose specialties are bureaucracy and planet-smashing, are the most unpleasant race in the Galaxy. They wouldn't think twice about throwing someone into space, and wouldn't lift a finger to save their own grandmother from the ");
    GamePrint "Vogons, whose specialties are bureaucracy and planet-smashing, are the most unpleasant race in the Galaxy. They wouldn't think twice about throwing someone into space, and wouldn't lift a finger to save their own grandmother from the ";
    TraceOperation 053549 (Print_obj (Con 95));
    Let b3 = M[001613];
    Let b4 = M[001614];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 053551 (Print_paddr (Var (Global 28)));
    Let b7 = M[007964];
    Let b8 = M[007965];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 053553 (Print_obj (Con 105));
    Let b9 = M[001703];
    Let b10 = M[001704];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
    GamePrint ite_res12;
    TraceOperation 053555 (Print " and the ");
    GamePrint " and the ";
    TraceOperation 053560 (Print_obj (Con 95));
    Let b13 = M[001613];
    Let b14 = M[001614];
    Let b15 = M[Address(MakeHiLo(b13,b14))];
    Let ite_res16 = Ite((IsZeroByte(b15),"",GetText(Offset(Address(MakeHiLo(b13,b14)),1))));
    GamePrint ite_res16;
    TraceOperation 053562 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_17;
    SetResult 1;
    JumpIndirect: (return) return_address_17
  } else {
    Jump: 053565
  }
LocOp 053565:
  TraceOperation 053565 (Je [Var (Global 202),Con 134,Con 127] (Branch F (Dloc 053634)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),134),Equal(MakeHiLo(b1,b2),127))) {
    TraceOperation 053572 (Print "Alcohol, in addition to its familiar enjoyable effects, also helps cushion the shock of");
    GamePrint "Alcohol, in addition to its familiar enjoyable effects, also helps cushion the shock of";
    TraceOperation 053629 (Print_paddr (Var (Global 42)));
    Let b3 = M[007992];
    Let b4 = M[007993];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 053631 (Print_ret "s.");
    GamePrint "s.\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 053634
  }
LocOp 053634:
  TraceOperation 053634 (Je [Var (Global 202),Con 201] (Branch F (Dloc 053694)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),201)) {
    TraceOperation 053638 (Print "The best randomness generator is simple");
    GamePrint "The best randomness generator is simple";
    TraceOperation 053663 (Print_paddr (Var (Global 34)));
    Let b3 = M[007976];
    Let b4 = M[007977];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 053665 (Print_ret ". Any hot gas or liquid is a good source.");
    GamePrint ". Any hot gas or liquid is a good source.\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 053694
  }
LocOp 053694:
  TraceOperation 053694 (Je [Var (Global 202),Con 210] (Branch F (Dloc 053905)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),210)) {
    TraceOperation 053699 (Print "The ");
    GamePrint "The ";
    TraceOperation 053702 (Print_paddr (Var (Global 43)));
    Let b3 = M[007994];
    Let b4 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 053704 (Print_ret " incompetently produces a wide range of inefficient and unreliable high-tech machinery. However, thanks to SCC's ruthless marketing division, this junk accounts for over 95% of the high-tech machinery sold in the Galaxy. (SCC's marketing division will be the first against the wall when the revolution comes.)");
    GamePrint " incompetently produces a wide range of inefficient and unreliable high-tech machinery. However, thanks to SCC's ruthless marketing division, this junk accounts for over 95% of the high-tech machinery sold in the Galaxy. (SCC's marketing division will be the first against the wall when the revolution comes.)\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 053905
  }
LocOp 053905:
  TraceOperation 053905 (Je [Var (Global 202),Con 218] (Branch F (Dloc 054202)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),218)) {
    TraceOperation 053910 (Print "Thirty million generations of philosophers have debated the definition of intelligence. The most popular definition appears in the ");
    GamePrint "Thirty million generations of philosophers have debated the definition of intelligence. The most popular definition appears in the ";
    TraceOperation 053989 (Print_paddr (Var (Global 43)));
    Let b3 = M[007994];
    Let b4 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 053991 (Print_ret " android manuals: \"Intelligence is the ability to reconcile totally contradictory situations without going completely bonkers -- for example, having a stomach ache and not having a stomach ache at the same time, holding a hole without the doughnut, having good luck and bad luck simultaneously, or seeing a real estate agent waive his fee.\"");
    GamePrint " android manuals: \"Intelligence is the ability to reconcile totally contradictory situations without going completely bonkers -- for example, having a stomach ache and not having a stomach ache at the same time, holding a hole without the doughnut, having good luck and bad luck simultaneously, or seeing a real estate agent waive his fee.\"\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 054202
  }
LocOp 054202:
  TraceOperation 054202 (Je [Var (Global 202),Con 216] (Branch F (Dloc 054305)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),216)) {
    TraceOperation 054207 (Print "These ");
    GamePrint "These ";
    TraceOperation 054214 (Print_paddr (Var (Global 43)));
    Let b3 = M[007994];
    Let b4 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 054216 (Print " doors screen visitors for such qualities as intelligence and ability to time travel");
    GamePrint " doors screen visitors for such qualities as intelligence and ability to time travel";
    TraceOperation 054271 (Print_paddr (Var (Global 28)));
    Let b5 = M[007964];
    Let b6 = M[007965];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 054273 (Print_paddr (Var (Global 43)));
    Let b7 = M[007994];
    Let b8 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 054275 (Print ", ");
    GamePrint ", ";
    TraceOperation 054278 (Print_paddr (Var (Global 29)));
    Let b9 = M[007966];
    Let b10 = M[007967];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
    TraceOperation 054280 (Print_ret ", Intelligence, and Time Travel.");
    GamePrint ", Intelligence, and Time Travel.\n";
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 1;
    JumpIndirect: (return) return_address_11
  } else {
    Jump: 054305
  }
LocOp 054305:
  TraceOperation 054305 (Je [Var (Global 202),Con 198,Con 215,Con 178] (Branch F (Dloc 054427)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),198),Equal(MakeHiLo(b1,b2),215)),Equal(MakeHiLo(b1,b2),178))) {
    TraceOperation 054313 (Print_paddr (Var (Global 29)));
    Let b3 = M[007966];
    Let b4 = M[007967];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 054315 (Print " are a misguided attempt by the ");
    GamePrint " are a misguided attempt by the ";
    TraceOperation 054336 (Print_paddr (Var (Global 43)));
    Let b5 = M[007994];
    Let b6 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 054338 (Print_ret " to make their machines behave more like people. Among the more miserable failures: paranoid-depressive robots and over-protective computers.");
    GamePrint " to make their machines behave more like people. Among the more miserable failures: paranoid-depressive robots and over-protective computers.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 054427
  }
LocOp 054427:
  TraceOperation 054427 (Je [Var (Global 202),Con 25] (Branch F (Dloc 054547)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),25)) {
    TraceOperation 054432 (Print_ret "A must for the serious hitchhiker, peril-sensitive sunglasses darken at the first hint of danger, thus shielding the wearer from seeing anything alarming. Recommended brand: Joo Janta.");
    GamePrint "A must for the serious hitchhiker, peril-sensitive sunglasses darken at the first hint of danger, thus shielding the wearer from seeing anything alarming. Recommended brand: Joo Janta.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 054547
  }
LocOp 054547:
  TraceOperation 054547 (Je [Var (Global 202),Con 174] (Branch F (Dloc 054682)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 054552 (Print "According to legend, Magrathea was a planet that amassed incredible wealth by manufacturing ");
    GamePrint "According to legend, Magrathea was a planet that amassed incredible wealth by manufacturing ";
    TraceOperation 054613 (Print_obj (Con 82));
    Let b3 = M[001496];
    Let b4 = M[001497];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 054615 (Print_ret ". The legends also mention it as the setting of the very eagerly awaited second Infocom Hitchhiker's game.");
    GamePrint ". The legends also mention it as the setting of the very eagerly awaited second Infocom Hitchhiker's game.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 054682
  }
LocOp 054682:
  TraceOperation 054682 (Je [Var (Global 202),Con 186,Con 187,Con 188] (Branch F (Dloc 054908)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),186),Equal(MakeHiLo(b1,b2),187)),Equal(MakeHiLo(b1,b2),188))) {
    TraceOperation 054690 (Print "Scientists have long known how to produce FINITE amounts of improbability, using a ");
    GamePrint "Scientists have long known how to produce FINITE amounts of improbability, using a ";
    TraceOperation 054749 (Print_paddr (Var (Global 10)));
    Let b3 = M[007928];
    Let b4 = M[007929];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 054751 (Print ", an ");
    GamePrint ", an ";
    TraceOperation 054756 (Print_obj (Con 182));
    Let b5 = M[002396];
    Let b6 = M[002397];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 054758 (Print " and a good source of");
    GamePrint " and a good source of";
    TraceOperation 054773 (Print_paddr (Var (Global 34)));
    Let b9 = M[007976];
    Let b10 = M[007977];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
    TraceOperation 054775 (Print ". Recently, however, they have learned to generate INFINITE amounts, thanks to the invention of the In");
    GamePrint ". Recently, however, they have learned to generate INFINITE amounts, thanks to the invention of the In";
    TraceOperation 054844 (Print_paddr (Var (Global 10)));
    Let b11 = M[007928];
    Let b12 = M[007929];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
    TraceOperation 054846 (Print ". It is rumored that an");
    GamePrint ". It is rumored that an";
    TraceOperation 054859 (Print_paddr (Var (Global 11)));
    Let b13 = M[007930];
    Let b14 = M[007931];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b13,b14)));
    TraceOperation 054861 (Print ", based on this new generator, is currently under development");
    GamePrint ", based on this new generator, is currently under development";
    TraceOperation 054894 (Print_paddr (Var (Global 28)));
    Let b15 = M[007964];
    Let b16 = M[007965];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b15,b16)));
    TraceOperation 054896 (Print_obj (Con 182));
    Let b17 = M[002396];
    Let b18 = M[002397];
    Let b19 = M[Address(MakeHiLo(b17,b18))];
    Let ite_res20 = Ite((IsZeroByte(b19),"",GetText(Offset(Address(MakeHiLo(b17,b18)),1))));
    GamePrint ite_res20;
    TraceOperation 054898 (Print " and");
    GamePrint " and";
    TraceOperation 054903 (Print_paddr (Var (Global 34)));
    Let b21 = M[007976];
    Let b22 = M[007977];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b21,b22)));
    TraceOperation 054905 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_23;
    SetResult 1;
    JumpIndirect: (return) return_address_23
  } else {
    Jump: 054908
  }
LocOp 054908:
  TraceOperation 054908 (Je [Var (Global 202),Con 182] (Branch F (Dloc 054954)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),182)) {
    TraceOperation 054912 (Print "The ");
    GamePrint "The ";
    TraceOperation 054915 (Print_obj (Con 182));
    Let b3 = M[002396];
    Let b4 = M[002397];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 054917 (Print_ret " is one of the primary application devices of Improbability Physics.");
    GamePrint " is one of the primary application devices of Improbability Physics.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 054954
  }
LocOp 054954:
  TraceOperation 054954 (Je [Var (Global 202),Con 121,Con 126] (Branch F (Dloc 055069)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),121),Equal(MakeHiLo(b1,b2),126))) {
    TraceOperation 054961 (Print "Sources of protein, such as the common peanut, are carried by all serious hitchhikers. Protein loss occurs in");
    GamePrint "Sources of protein, such as the common peanut, are carried by all serious hitchhikers. Protein loss occurs in";
    TraceOperation 055030 (Print_paddr (Var (Global 42)));
    Let b3 = M[007992];
    Let b4 = M[007993];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 055032 (Print_ret "s and you will become groggy unless you replace it immediately.");
    GamePrint "s and you will become groggy unless you replace it immediately.\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 055069
  }
LocOp 055069:
  TraceOperation 055069 (Je [Var (Global 202),Con 88,Con 209] (Branch F (Dloc 055223)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),88),Equal(MakeHiLo(b1,b2),209))) {
    TraceOperation 055076 (Print "A typically unreliable ");
    GamePrint "A typically unreliable ";
    TraceOperation 055093 (Print_paddr (Var (Global 43)));
    Let b3 = M[007994];
    Let b4 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 055095 (Print " product, the ");
    GamePrint " product, the ";
    TraceOperation 055104 (Print_obj (Con 209));
    Let b5 = M[002639];
    Let b6 = M[002640];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 055106 (Print_ret " analyses the user's neural paths to provide the (supposedly) ideal offering. Its computing power is frankly abysmal, so the optional computer interface is a good thing to go for.");
    GamePrint " analyses the user's neural paths to provide the (supposedly) ideal offering. Its computing power is frankly abysmal, so the optional computer interface is a good thing to go for.\n";
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 055223
  }
LocOp 055223:
  TraceOperation 055223 (Je [Var (Global 202),Con 140,Con 69,Con 155] (Branch T (Dloc 055235)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),140),Equal(MakeHiLo(b1,b2),69)),Equal(MakeHiLo(b1,b2),155))) {
    Jump: 055235
  } else {
    TraceOperation 055230 (Je [Var (Global 202),Con 61] (Branch F (Dloc 055598)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),61)) {
      Jump: 055235
    } else {
      Jump: 055598
    }
  }
LocOp 055235:
  TraceOperation 055235 (Print_ret "Fluff is interesting stuff: a deadly poison on Bodega Minor, the diet staple of Frazelon V, the unit of currency on the moons of the Blurfoid system, and the major crop of the laundry supplies planet, Blastus III.\nOne ancient legend claims that four pieces of fluff lie scattered around the Galaxy; each forming one-quarter of the seedling of a tree with amazing properties, the sole survivor of the tropical planet Fuzzbol (Footnote 8).\nThe ultimate source of fluff is still a mystery, with the scientific community torn between the Big Lint Bang theory and the White Lint Hole theory.");
  GamePrint "Fluff is interesting stuff: a deadly poison on Bodega Minor, the diet staple of Frazelon V, the unit of currency on the moons of the Blurfoid system, and the major crop of the laundry supplies planet, Blastus III.\nOne ancient legend claims that four pieces of fluff lie scattered around the Galaxy; each forming one-quarter of the seedling of a tree with amazing properties, the sole survivor of the tropical planet Fuzzbol (Footnote 8).\nThe ultimate source of fluff is still a mystery, with the scientific community torn between the Big Lint Bang theory and the White Lint Hole theory.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 055598:
  TraceOperation 055598 (Je [Var (Global 202),Con 195] (Branch T (Dloc 055610)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),195)) {
    Jump: 055610
  } else {
    TraceOperation 055602 (Je [Var (Global 202),Con 30] (Branch F (Dloc 055626)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 055606 (Je [Var (Global 120),Con 195] (Branch F (Dloc 055626)));
      Let b5 = M[008148];
      Let b6 = M[008149];
      if (Equal(MakeHiLo(b5,b6),195)) {
        Jump: 055610
      } else {
        Jump: 055626
      }
    } else {
      Jump: 055626
    }
  }
LocOp 055610:
  TraceOperation 055610 (Print_obj (Con 195));
  Let b1 = M[002513];
  Let b2 = M[002514];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 055612 (Print " is the current");
  GamePrint " is the current";
  TraceOperation 055621 (Print_paddr (Var (Global 44)));
  Let b5 = M[007996];
  Let b6 = M[007997];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
  TraceOperation 055623 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 055626:
  TraceOperation 055626 (Je [Var (Global 202),Con 111] (Branch F (Dloc 055709)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),111)) {
    TraceOperation 055631 (Print "A mind-bogglingly improbable creature. A ");
    GamePrint "A mind-bogglingly improbable creature. A ";
    TraceOperation 055662 (Print_obj (Con 111));
    Let b3 = M[001757];
    Let b4 = M[001758];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 055664 (Print_ret ", when placed in one's ear, allows one to understand any language.");
    GamePrint ", when placed in one's ear, allows one to understand any language.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 055709
  }
LocOp 055709:
  TraceOperation 055709 (Je [Var (Global 202),Con 139] (Branch F (Dloc 056027)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 055714 (Print_ret "A towel is the most useful thing (besides the Guide) a Galactic hitchhiker can have. Its uses include travel, combat, communications, protection from the elements, hand-drying and reassurance. Towels have great symbolic value, with many associated points of honour. Never mock the towel of another, even if it has little pink and blue flowers on it. Never do something to somebody else's towel that you would not want them to do to yours. And, if you borrow the towel of another, you MUST return it before leaving their world.");
    GamePrint "A towel is the most useful thing (besides the Guide) a Galactic hitchhiker can have. Its uses include travel, combat, communications, protection from the elements, hand-drying and reassurance. Towels have great symbolic value, with many associated points of honour. Never mock the towel of another, even if it has little pink and blue flowers on it. Never do something to somebody else's towel that you would not want them to do to yours. And, if you borrow the towel of another, you MUST return it before leaving their world.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 056027
  }
LocOp 056027:
  TraceOperation 056027 (Je [Var (Global 202),Con 4,Con 7] (Branch F (Dloc 056239)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),4),Equal(MakeHiLo(b1,b2),7))) {
    TraceOperation 056034 (Print "The Electronic Sub-Etha Auto Hitching Thumb is a wonderful thing, but should not be mistreated. If used while a ship is near, you will be transported there. If no ship is in the vicinity, you will place a heavy strain on the Thumb's logic circuits, which could lead to malfunction. The Thumb carries the usual ");
    GamePrint "The Electronic Sub-Etha Auto Hitching Thumb is a wonderful thing, but should not be mistreated. If used while a ship is near, you will be transported there. If no ship is in the vicinity, you will place a heavy strain on the Thumb's logic circuits, which could lead to malfunction. The Thumb carries the usual ";
    TraceOperation 056223 (Print_paddr (Var (Global 43)));
    Let b3 = M[007994];
    Let b4 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 056225 (Print " lifetime ");
    GamePrint " lifetime ";
    TraceOperation 056234 (Print_obj (Con 4));
    Let b5 = M[000794];
    Let b6 = M[000795];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 056236 (Print_ret "s.");
    GamePrint "s.\n";
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 056239
  }
LocOp 056239:
  TraceOperation 056239 (Je [Var (Global 202),Con 122] (Branch F (Dloc 056415)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),122)) {
    TraceOperation 056244 (Print_ret "A strong body of opinion holds that this is not water at all, despite the claims on the label about how pure the spring is, and all that tosh about sparkling babbling brooks and so on. There is something highly suspect about the water on Santraginus Five, as anyone who's ever met any of their fish will tell you.");
    GamePrint "A strong body of opinion holds that this is not water at all, despite the claims on the label about how pure the spring is, and all that tosh about sparkling babbling brooks and so on. There is something highly suspect about the water on Santraginus Five, as anyone who's ever met any of their fish will tell you.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 056415
  }
LocOp 056415:
  TraceOperation 056415 (Je [Var (Global 202),Con 95] (Branch F (Dloc 056674)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),95)) {
    TraceOperation 056420 (Print "The ");
    GamePrint "The ";
    TraceOperation 056423 (Print_obj (Con 95));
    Let b3 = M[001613];
    Let b4 = M[001614];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 056425 (Print_ret " is a mind-bogglingly stupid animal. It has almost no capacity for learning from experience and is therefore surprised by virtually everything that happens to it. Here is an example of how stupid it is: it thinks that if you can't see it, it can't see you.\nIts behaviour would be quite endearing if it wasn't spoilt by this one thing: it is the most violently carnivorous creature in the Galaxy. Avoid, avoid, avoid.");
    GamePrint " is a mind-bogglingly stupid animal. It has almost no capacity for learning from experience and is therefore surprised by virtually everything that happens to it. Here is an example of how stupid it is: it thinks that if you can't see it, it can't see you.\nIts behaviour would be quite endearing if it wasn't spoilt by this one thing: it is the most violently carnivorous creature in the Galaxy. Avoid, avoid, avoid.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 056674
  }
LocOp 056674:
  TraceOperation 056674 (Je [Var (Global 202),Con 151] (Branch F (Dloc 056935)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),151)) {
    TraceOperation 056679 (Print "A thoroughly unpleasant means of travelling which involves tearing you apart in one place and slamming you back together in another. (Of course, it's better than the older method, where disassembled people would be transmitted down phone lines and arrive in a garbled and sometimes completely disconnected state.) You should have a drink or two or three before going through one");
    GamePrint "A thoroughly unpleasant means of travelling which involves tearing you apart in one place and slamming you back together in another. (Of course, it's better than the older method, where disassembled people would be transmitted down phone lines and arrive in a garbled and sometimes completely disconnected state.) You should have a drink or two or three before going through one";
    TraceOperation 056904 (Print_paddr (Var (Global 28)));
    Let b3 = M[007964];
    Let b4 = M[007965];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 056906 (Print_ret "Galaxia Woonbeam, Alcohol, and Protein.");
    GamePrint "Galaxia Woonbeam, Alcohol, and Protein.\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 056935
  }
LocOp 056935:
  TraceOperation 056935 (Je [Var (Global 202),Con 149] (Branch F (Dloc 057085)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),149)) {
    TraceOperation 056940 (Print_ret "Galaxia Woonbeam is the author of \"Slimmer's Guide to Weightloss During Matter Disassembly Transition.\" This text is currently the subject of the biggest suit for criminal negligence damages in history and is unavailable at this time.");
    GamePrint "Galaxia Woonbeam is the author of \"Slimmer's Guide to Weightloss During Matter Disassembly Transition.\" This text is currently the subject of the biggest suit for criminal negligence damages in history and is unavailable at this time.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 057085
  }
LocOp 057085:
  TraceOperation 057085 (Je [Var (Global 202),Con 190] (Branch F (Dloc 057163)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),190)) {
    TraceOperation 057090 (Print_ret "The best drink in existence; somewhat like having your brains smashed out by a slice of lemon wrapped around a large gold brick.");
    GamePrint "The best drink in existence; somewhat like having your brains smashed out by a slice of lemon wrapped around a large gold brick.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 057163
  }
LocOp 057163:
  TraceOperation 057163 (Je [Var (Global 202),Con 81,Con 163] (Branch F (Dloc 057182)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(Equal(MakeHiLo(b1,b2),81),Equal(MakeHiLo(b1,b2),163))) {
    TraceOperation 057169 (Print_ret "Mostly harmless.");
    GamePrint "Mostly harmless.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 057182
  }
LocOp 057182:
  TraceOperation 057182 (Je [Var (Global 202),Con 137] (Branch F (Dloc 057190)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),137)) {
    TraceOperation 057186 (Print_paddr (Var (Global 63)));
    Let b3 = M[008034];
    Let b4 = M[008035];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 057188 New_line;
    GamePrint "\n";
    TraceOperation 057189 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 057190
  }
LocOp 057190:
  TraceOperation 057190 (Test_attr (Var (Global 202)) (Con 2) (Branch F (Dloc 057358)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),0)];
  if (TestBit(b3,5)) {
    TraceOperation 057195 (Print_ret "The editor responsible for entries under this heading has been out to lunch for a couple of years but is expected back soon, at which point there will be rapid updates. Until then, don't panic, unless your situation is really a life or death one, in which case, sure, go ahead, panic.");
    GamePrint "The editor responsible for entries under this heading has been out to lunch for a couple of years but is expected back soon, at which point there will be rapid updates. Until then, don't panic, unless your situation is really a life or death one, in which case, sure, go ahead, panic.\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 057358
  }
LocOp 057358:
  TraceOperation 057358 (Je [Var (Global 202),Con 52,Con 51,Con 168] (Branch T (Dloc 057384)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),52),Equal(MakeHiLo(b1,b2),51)),Equal(MakeHiLo(b1,b2),168))) {
    Jump: 057384
  } else {
    TraceOperation 057365 (Je [Var (Global 202),Con 202,Con 8,Con 9] (Branch T (Dloc 057384)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),202),Equal(MakeHiLo(b3,b4),8)),Equal(MakeHiLo(b3,b4),9))) {
      Jump: 057384
    } else {
      TraceOperation 057372 (Je [Var (Global 202),Con 101,Con 191,Con 204] (Branch T (Dloc 057384)));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),101),Equal(MakeHiLo(b5,b6),191)),Equal(MakeHiLo(b5,b6),204))) {
        Jump: 057384
      } else {
        TraceOperation 057379 (Je [Var (Global 202),Con 213] (Branch F (Dloc 057537)));
        Let b7 = M[008312];
        Let b8 = M[008313];
        if (Equal(MakeHiLo(b7,b8),213)) {
          Jump: 057384
        } else {
          Jump: 057537
        }
      }
    }
  }
LocOp 057384:
  TraceOperation 057384 (Print_ret "Sorry, that portion of our Sub-Etha database was accidentally deleted last night during a wild office party. The lost data will be restored as soon as we find someone who knows where the back-up tapes are kept, if indeed any are kept at all.");
  GamePrint "Sorry, that portion of our Sub-Etha database was accidentally deleted last night during a wild office party. The lost data will be restored as soon as we find someone who knows where the back-up tapes are kept, if indeed any are kept at all.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 057537:
  TraceOperation 057537 (Print_ret "That is one of the Great Unanswered Questions. For a list of the others, consult the Guide.");
  GamePrint "That is one of the Great Unanswered Questions. For a list of the others, consult the Guide.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057596:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057599
LocOp 057599:
  TraceOperation 057599 (Print "You can't see");
  GamePrint "You can't see";
  TraceOperation 057606 (Call (Floc 025716) [Var (Local 1)] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 057606;
  SetLocal 1 local1_1;
  MakeRoutineFrame 1;
  Jump: 025719
LocReturn 057606:
  PushStack call_result;
  TraceOperation 057612 (Jz (Var Sp) (Branch F (Dloc 057620)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 057615 (Print " any");
    GamePrint " any";
    Jump: 057620
  } else {
    Jump: 057620
  }
LocOp 057620:
  TraceOperation 057620 (Je [Var (Local 1),Var (Global 201)] (Branch F (Dloc 057632)));
  GetLocal 1 local1_1;
  Let b2 = M[008310];
  Let b3 = M[008311];
  if (Equal(local1_1,MakeHiLo(b2,b3))) {
    TraceOperation 057624 (Call (Floc 028416) [] Sp);
    PushFrame;
    PushReturnAddress 057624;
    MakeRoutineFrame 1;
    SetLocal 1 0;
    Jump: 028419
  } else {
    Jump: 057632
  }
LocReturn 057624:
  PushStack call_result;
  TraceOperation 057629 (Jump 057637);
  Jump: 057637
LocOp 057632:
  TraceOperation 057632 (Call (Floc 028456) [] Sp);
  PushFrame;
  PushReturnAddress 057632;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 028459
LocReturn 057632:
  PushStack call_result;
  Jump: 057637
LocOp 057637:
  TraceOperation 057637 (Print " here.");
  GamePrint " here.";
  TraceOperation 057642 New_line;
  GamePrint "\n";
  TraceOperation 057643 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 057643;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 057643:
  PushStack call_result;
  TraceOperation 057648 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 057650:
  MakeRoutineFrame 0;
  Jump: 057651
LocOp 057651:
  TraceOperation 057651 (Print "You must tell me how to do that to");
  GamePrint "You must tell me how to do that to";
  TraceOperation 057672 (Call (Floc 043738) [Var (Global 201)] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 057672;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 057672:
  PushStack call_result;
  TraceOperation 057678 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057682:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057685
LocOp 057685:
  TraceOperation 057685 (Print "You'll have to get out of the ");
  GamePrint "You'll have to get out of the ";
  TraceOperation 057702 (Print_obj (Var (Local 1)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),7)];
  Let b3 = M[Offset(Offset(Offset(000751,Mul(local1_1,9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 057704 (Print_ret " first.");
  GamePrint " first.\n";
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 057712:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057715
LocOp 057715:
  TraceOperation 057715 (Print "You can't. It's not yours. It's ");
  GamePrint "You can't. It's not yours. It's ";
  TraceOperation 057732 (Print_paddr (Var (Local 1)));
  GetLocal 1 local1_1;
  GamePrint GetText(PackedAddress Z3(local1_1));
  TraceOperation 057734 (Print_ret "'s and it's private.");
  GamePrint "'s and it's private.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 057748:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057751
LocOp 057751:
  TraceOperation 057751 (Print "It's not a very good ");
  GamePrint "It's not a very good ";
  TraceOperation 057762 (Print_paddr (Var (Local 1)));
  GetLocal 1 local1_1;
  GamePrint GetText(PackedAddress Z3(local1_1));
  TraceOperation 057764 (Print_ret ", is it?");
  GamePrint ", is it?\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 057772:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057775
LocOp 057775:
  TraceOperation 057775 (Print " at an improbability factor of 2 to the ");
  GamePrint " at an improbability factor of 2 to the ";
  TraceOperation 057800 (Print_paddr (Var (Local 1)));
  GetLocal 1 local1_1;
  GamePrint GetText(PackedAddress Z3(local1_1));
  TraceOperation 057802 (Print "th power to 1 against.");
  GamePrint "th power to 1 against.";
  TraceOperation 057819 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 057820:
  MakeRoutineFrame 0;
  Jump: 057821
LocOp 057821:
  TraceOperation 057821 (Print "(removing the ");
  GamePrint "(removing the ";
  TraceOperation 057832 (Print_obj (Con 179));
  Let b1 = M[002369];
  Let b2 = M[002370];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 057834 (Print_ret " first)");
  GamePrint " first)\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 057842:
  MakeRoutineFrame 0;
  Jump: 057843
LocOp 057843:
  TraceOperation 057843 (Print "You can't --");
  GamePrint "You can't --";
  TraceOperation 057850 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 057850;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 057850:
  PushStack call_result;
  TraceOperation 057857 (Print " is an integral part of");
  GamePrint " is an integral part of";
  TraceOperation 057874 (Get_parent (Var (Global 201)) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  PushStack Widen(b3);
  TraceOperation 057877 (Call (Floc 043738) [Var Sp,Con 1] Sp);
  PopStack popped4;
  PushFrame;
  PushReturnAddress 057877;
  SetLocal 1 popped4;
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 057877:
  PushStack call_result;
  TraceOperation 057884 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057888:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 057891
LocOp 057891:
  TraceOperation 057891 (Print "Pointing toward Prosser, ");
  GamePrint "Pointing toward Prosser, ";
  TraceOperation 057908 (Print_paddr (Var (Local 1)));
  GetLocal 1 local1_1;
  GamePrint GetText(PackedAddress Z3(local1_1));
  TraceOperation 057910 (Print " \"But that man ");
  GamePrint " \"But that man ";
  TraceOperation 057921 (Jz (Var (Global 145)) (Branch T (Dloc 057934)));
  Let b2 = M[008198];
  Let b3 = M[008199];
  if (IsZero(MakeHiLo(b2,b3))) {
    Jump: 057934
  } else {
    TraceOperation 057924 (Print "just knocked");
    GamePrint "just knocked";
    TraceOperation 057931 (Jump 057945);
    Jump: 057945
  }
LocOp 057934:
  TraceOperation 057934 (Print "wants to knock");
  GamePrint "wants to knock";
  Jump: 057945
LocOp 057945:
  TraceOperation 057945 (Print " my house down!\"");
  GamePrint " my house down!\"";
  TraceOperation 057958 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 057960:
  MakeRoutineFrame 0;
  Jump: 057961
LocOp 057961:
  TraceOperation 057961 (Print " cushion your system against the coming shock of the");
  GamePrint " cushion your system against the coming shock of the";
  TraceOperation 057992 (Print_paddr (Var (Global 42)));
  Let b1 = M[007992];
  Let b2 = M[007993];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 057994 (Print ".");
  GamePrint ".";
  TraceOperation 057997 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 057998:
  MakeRoutineFrame 0;
  Jump: 057999
LocOp 057999:
  TraceOperation 057999 (Print " It bears a small label which reads \"Another fine product of the ");
  GamePrint " It bears a small label which reads \"Another fine product of the ";
  TraceOperation 058038 (Print_paddr (Var (Global 43)));
  Let b1 = M[007994];
  Let b2 = M[007995];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 058040 (Print ".\"");
  GamePrint ".\"";
  TraceOperation 058045 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 058046:
  MakeRoutineFrame 0;
  Jump: 058047
LocOp 058047:
  TraceOperation 058047 (Print " a ");
  GamePrint " a ";
  TraceOperation 058050 (Print_obj (Con 124));
  Let b1 = M[001874];
  Let b2 = M[001875];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 058052 (Print_ret " unexpectedly arrives and demolishes the Earth to make way for a new hyperspace bypass.");
  GamePrint " unexpectedly arrives and demolishes the Earth to make way for a new hyperspace bypass.\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 058110:
  MakeRoutineFrame 0;
  Jump: 058111
LocOp 058111:
  TraceOperation 058111 (Print_ret "You are now on your feet.");
  GamePrint "You are now on your feet.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058124:
  MakeRoutineFrame 0;
  Jump: 058125
LocOp 058125:
  TraceOperation 058125 (Jz (Var (Global 145)) (Branch T (Dloc 058264)));
  Let b1 = M[008198];
  Let b2 = M[008199];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 058264
  } else {
    TraceOperation 058129 (Je [Var (Global 203),Con 57] (Branch F (Dloc 058264)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),57)) {
      TraceOperation 058134 (Print_paddr (Var (Global 48)));
      Let b5 = M[008004];
      Let b6 = M[008005];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 058136 (Print " You can't enjoy a ");
      GamePrint " You can't enjoy a ";
      TraceOperation 058147 (Print_obj (Con 171));
      Let b7 = M[002297];
      Let b8 = M[002298];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
      GamePrint ite_res10;
      TraceOperation 058149 (Print_ret " properly till it's at least a hundred years old. Also, you are haunted by the tragic vision of your favourite teapot lying shattered among the dust.\nThere is also the matter of all your clothes.");
      GamePrint " properly till it's at least a hundred years old. Also, you are haunted by the tragic vision of your favourite teapot lying shattered among the dust.\nThere is also the matter of all your clothes.\n";
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 1;
      JumpIndirect: (return) return_address_11
    } else {
      Jump: 058264
    }
  }
LocOp 058264:
  TraceOperation 058264 (Je [Var (Global 203),Con 28,Con 21,Con 38] (Branch F (Dloc 058298)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),28),Equal(MakeHiLo(b1,b2),21)),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 058271 (Je [Var (Global 0),Con 149,Con 151] (Branch F (Dloc 058284)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (LogOr(Equal(MakeHiLo(b3,b4),149),Equal(MakeHiLo(b3,b4),151))) {
      TraceOperation 058277 (Call (Floc 043620) [Con 17] Sp);
      PushFrame;
      PushReturnAddress 058277;
      SetLocal 1 17;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 058284
    }
  } else {
    Jump: 058298
  }
LocReturn 058277:
  PushStack call_result;
  TraceOperation 058283 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 058284:
  TraceOperation 058284 (Je [Var (Global 0),Con 168] (Branch F (Dloc 058292)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 058288 (Print_paddr (Var (Global 57)));
    Let b3 = M[008022];
    Let b4 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 058290 New_line;
    GamePrint "\n";
    TraceOperation 058291 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 058292
  }
LocOp 058292:
  TraceOperation 058292 (Call (Floc 040326) [] Sp);
  PushFrame;
  PushReturnAddress 058292;
  MakeRoutineFrame 0;
  Jump: 040327
LocReturn 058292:
  PushStack call_result;
  TraceOperation 058297 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 058298:
  TraceOperation 058298 (Je [Var (Global 203),Con 48,Con 59,Con 86] (Branch F (Dloc 058330)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),59)),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 058305 (Je [Var (Global 0),Con 151] (Branch F (Dloc 058316)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),151)) {
      TraceOperation 058309 (Call (Floc 043620) [Con 16] Sp);
      PushFrame;
      PushReturnAddress 058309;
      SetLocal 1 16;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 058316
    }
  } else {
    Jump: 058330
  }
LocReturn 058309:
  PushStack call_result;
  TraceOperation 058315 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 058316:
  TraceOperation 058316 (Je [Var (Global 0),Con 168] (Branch F (Dloc 058326)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 058320 (Call (Floc 040326) [] Sp);
    PushFrame;
    PushReturnAddress 058320;
    MakeRoutineFrame 0;
    Jump: 040327
  } else {
    Jump: 058326
  }
LocReturn 058320:
  PushStack call_result;
  TraceOperation 058325 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 058326:
  TraceOperation 058326 (Print_paddr (Var (Global 57)));
  Let b1 = M[008022];
  Let b2 = M[008023];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 058328 New_line;
  GamePrint "\n";
  TraceOperation 058329 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 058330:
  TraceOperation 058330 (Je [Var (Global 203),Con 87] (Branch F (Dloc 058349)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 058334 (Je [Var (Global 0),Con 149] (Branch F (Dloc 058349)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),149)) {
      TraceOperation 058338 (Jz (Var (Global 204)) (Branch T (Dloc 058349)));
      Let b5 = M[008316];
      Let b6 = M[008317];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 058349
      } else {
        TraceOperation 058341 (Call (Floc 022042) [Con 87,Con 42] Sp);
        PushFrame;
        PushReturnAddress 058341;
        SetLocal 1 87;
        SetLocal 2 42;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      }
    } else {
      Jump: 058349
    }
  } else {
    Jump: 058349
  }
LocReturn 058341:
  PushStack call_result;
  TraceOperation 058348 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058349:
  TraceOperation 058349 (Je [Var (Global 203),Con 61] (Branch F (Dloc 058370)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 058353 (Jz (Var (Global 145)) (Branch T (Dloc 058370)));
    Let b3 = M[008198];
    Let b4 = M[008199];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 058370
    } else {
      TraceOperation 058356 (Print "It is now a ");
      GamePrint "It is now a ";
      TraceOperation 058365 (Print_obj (Con 171));
      Let b5 = M[002297];
      Let b6 = M[002298];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 058367 (Print_ret ".");
      GamePrint ".\n";
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    }
  } else {
    Jump: 058370
  }
LocOp 058370:
  TraceOperation 058370 (Je [Var (Global 120),Con 142] (Branch F Dfalse));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 058374 (Call (Floc 046716) [] Sp);
    PushFrame;
    PushReturnAddress 058374;
    MakeRoutineFrame 0;
    Jump: 046717
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 058374:
  PushStack call_result;
  TraceOperation 058379 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 058380:
  MakeRoutineFrame 0;
  Jump: 058381
LocOp 058381:
  TraceOperation 058381 (Je [Var (Global 201),Con 172] (Branch F (Dloc 058394)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),172)) {
    TraceOperation 058385 (Call (Floc 022042) [Var (Global 203),Con 173,Var (Global 202)] Sp);
    Let b3 = M[008314];
    Let b4 = M[008315];
    Let b5 = M[008312];
    Let b6 = M[008313];
    PushFrame;
    PushReturnAddress 058385;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 173;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 022057
  } else {
    Jump: 058394
  }
LocReturn 058385:
  PushStack call_result;
  TraceOperation 058393 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058394:
  TraceOperation 058394 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 173] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 058394;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 173;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 058394:
  PushStack call_result;
  TraceOperation 058402 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058404:
  MakeRoutineFrame 0;
  Jump: 058405
LocOp 058405:
  TraceOperation 058405 (Je [Var (Global 0),Con 168,Con 151] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(Equal(MakeHiLo(b1,b2),168),Equal(MakeHiLo(b1,b2),151))) {
    TraceOperation 058411 New_line;
    GamePrint "\n";
    TraceOperation 058412 (Print "Astoundingly, a ");
    GamePrint "Astoundingly, a ";
    TraceOperation 058425 (Print_obj (Con 166));
    Let b3 = M[002252];
    Let b4 = M[002253];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 058427 (Print " pokes through your wall. However, you have no time for surprise because the ceiling is collapsing on you as");
    GamePrint " pokes through your wall. However, you have no time for surprise because the ceiling is collapsing on you as";
    TraceOperation 058482 (Call (Floc 058488) [] Sp);
    PushFrame;
    PushReturnAddress 058482;
    MakeRoutineFrame 0;
    Jump: 058489
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocReturn 058482:
  PushStack call_result;
  TraceOperation 058487 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 058488:
  MakeRoutineFrame 0;
  Jump: 058489
LocOp 058489:
  TraceOperation 058489 (Print " your home is unexpectedly demolished to make way for a new bypass. You are seriously injured in the process, but on your way to the hospital");
  GamePrint " your home is unexpectedly demolished to make way for a new bypass. You are seriously injured in the process, but on your way to the hospital";
  TraceOperation 058570 (Call (Floc 058046) [] Sp);
  PushFrame;
  PushReturnAddress 058570;
  MakeRoutineFrame 0;
  Jump: 058047
LocReturn 058570:
  PushStack call_result;
  TraceOperation 058575 New_line;
  GamePrint "\n";
  TraceOperation 058576 (Test_attr (Con 168) (Con 29) (Branch T (Dloc 058609)));
  Let b1 = M[002266];
  if (TestBit(b1,2)) {
    Jump: 058609
  } else {
    TraceOperation 058580 (Print "Next time, try turning on the light.");
    GamePrint "Next time, try turning on the light.";
    TraceOperation 058605 New_line;
    GamePrint "\n";
    TraceOperation 058606 (Jump 058671);
    Jump: 058671
  }
LocOp 058609:
  TraceOperation 058609 (Test_attr (Con 158) (Con 23) (Branch T (Dloc 058653)));
  Let b1 = M[002175];
  if (TestBit(b1,0)) {
    Jump: 058653
  } else {
    TraceOperation 058613 (Jz (Var (Global 144)) (Branch T (Dloc 058653)));
    Let b2 = M[008196];
    Let b3 = M[008197];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 058653
    } else {
      TraceOperation 058616 (Print "Too bad you never found an aspirin for your hangover.");
      GamePrint "Too bad you never found an aspirin for your hangover.";
      TraceOperation 058649 New_line;
      GamePrint "\n";
      TraceOperation 058650 (Jump 058671);
      Jump: 058671
    }
  }
LocOp 058653:
  TraceOperation 058653 (Print "Better luck next life.");
  GamePrint "Better luck next life.";
  TraceOperation 058670 New_line;
  GamePrint "\n";
  Jump: 058671
LocOp 058671:
  TraceOperation 058671 (Call (Floc 028948) [] Sp);
  PushFrame;
  PushReturnAddress 058671;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 028951
LocReturn 058671:
  PushStack call_result;
  TraceOperation 058676 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 058678:
  MakeRoutineFrame 0;
  Jump: 058679
LocOp 058679:
  TraceOperation 058679 (Je [Var (Global 203),Con 22] (Branch F (Dloc 058687)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 058683 (Je [Var (Global 202),Con 170] (Branch T Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),170)) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 058687
    }
  } else {
    Jump: 058687
  }
LocOp 058687:
  TraceOperation 058687 (Jz (Var (Global 144)) (Branch F (Dloc 058725)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 058690 (Je [Var (Global 120),Con 195] (Branch T (Dloc 058725)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),195)) {
      Jump: 058725
    } else {
      TraceOperation 058694 (Print "You can't feel any");
      GamePrint "You can't feel any";
      TraceOperation 058703 (Je [Con 170,Var (Global 201)] (Branch F (Dloc 058715)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(170,MakeHiLo(b5,b6))) {
        TraceOperation 058707 (Call (Floc 028416) [] Sp);
        PushFrame;
        PushReturnAddress 058707;
        MakeRoutineFrame 1;
        SetLocal 1 0;
        Jump: 028419
      } else {
        Jump: 058715
      }
    }
  } else {
    Jump: 058725
  }
LocReturn 058707:
  PushStack call_result;
  TraceOperation 058712 (Jump 058720);
  Jump: 058720
LocOp 058715:
  TraceOperation 058715 (Call (Floc 028456) [] Sp);
  PushFrame;
  PushReturnAddress 058715;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 028459
LocReturn 058715:
  PushStack call_result;
  Jump: 058720
LocOp 058720:
  TraceOperation 058720 (Print_ret " here.");
  GamePrint " here.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 058725:
  TraceOperation 058725 (Je [Var (Global 203),Con 61] (Branch F (Dloc 058735)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 058729 (Call (Floc 028648) [] Sp);
    PushFrame;
    PushReturnAddress 058729;
    MakeRoutineFrame 0;
    Jump: 028649
  } else {
    Jump: 058735
  }
LocReturn 058729:
  PushStack call_result;
  TraceOperation 058734 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 058735:
  TraceOperation 058735 (Je [Var (Global 203),Con 53,Con 154,Con 66] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),53),Equal(MakeHiLo(b1,b2),154)),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 058742 (Call (Floc 031360) [] Sp);
    PushFrame;
    PushReturnAddress 058742;
    MakeRoutineFrame 0;
    Jump: 031361
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 058742:
  PushStack call_result;
  TraceOperation 058747 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 058748:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 058751
LocOp 058751:
  TraceOperation 058751 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 058755 (Print "The bedroom is a mess.\nIt is a small bedroom with a faded carpet and old wallpaper. There is a washbasin, a chair");
    GamePrint "The bedroom is a mess.\nIt is a small bedroom with a faded carpet and old wallpaper. There is a washbasin, a chair";
    TraceOperation 058820 (Test_attr (Con 158) (Con 27) (Branch F (Dloc 058851)));
    Let b2 = M[002176];
    if (TestBit(b2,4)) {
      TraceOperation 058824 (Print " with a tatty dressing gown slung over it");
      GamePrint " with a tatty dressing gown slung over it";
      Jump: 058851
    } else {
      Jump: 058851
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocOp 058851:
  TraceOperation 058851 (Print_ret ", and a window with the curtains drawn. Near the exit leading south is a phone.");
  GamePrint ", and a window with the curtains drawn. Near the exit leading south is a phone.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 058900:
  MakeRoutineFrame 0;
  Jump: 058901
LocOp 058901:
  TraceOperation 058901 (Test_attr (Con 164) (Con 23) (Branch T (Dloc 058921)));
  Let b1 = M[002229];
  if (TestBit(b1,0)) {
    Jump: 058921
  } else {
    TraceOperation 058905 (Print "The door is closed.");
    GamePrint "The door is closed.";
    TraceOperation 058916 New_line;
    GamePrint "\n";
    TraceOperation 058917 (Store (Con 207) (Con 164));
    SetByte 008290 0;
    SetByte 008291 164;
    TraceOperation 058920 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocOp 058921:
  TraceOperation 058921 (Jz (Var (Global 144)) (Branch T (Dloc 058977)));
  Let b1 = M[008196];
  Let b2 = M[008197];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 058977
  } else {
    TraceOperation 058924 (Print "You miss the doorway by a good eighteen inches. The wall jostles you rather rudely.");
    GamePrint "You miss the doorway by a good eighteen inches. The wall jostles you rather rudely.";
    TraceOperation 058975 New_line;
    GamePrint "\n";
    TraceOperation 058976 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocOp 058977:
  TraceOperation 058977 (Test_attr (Con 166) (Con 6) (Branch F (Dloc 059007)));
  Let b1 = M[002245];
  if (TestBit(b1,1)) {
    TraceOperation 058981 (Print "You make your way down to the front porch.");
    GamePrint "You make your way down to the front porch.";
    TraceOperation 059002 New_line;
    GamePrint "\n";
    TraceOperation 059003 New_line;
    GamePrint "\n";
    TraceOperation 059004 (Jump 059028);
    Jump: 059028
  } else {
    Jump: 059007
  }
LocOp 059007:
  TraceOperation 059007 (Print "You rush down the stairs in panic.");
  GamePrint "You rush down the stairs in panic.";
  TraceOperation 059026 New_line;
  GamePrint "\n";
  TraceOperation 059027 New_line;
  GamePrint "\n";
  Jump: 059028
LocOp 059028:
  TraceOperation 059028 (Clear_attr (Con 45) (Con 19));
  Let b1 = M[001158];
  SetByte 001158 ClearBit(b1,4);
  TraceOperation 059031 (Ret (Con 151));
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 151;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 059034:
  MakeRoutineFrame 0;
  Jump: 059035
LocOp 059035:
  TraceOperation 059035 (Je [Var (Global 203),Con 124] (Branch F (Dloc 059084)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 059039 (Test_attr (Con 162) (Con 5) (Branch F (Dloc 059051)));
    Let b3 = M[002209];
    if (TestBit(b3,2)) {
      TraceOperation 059043 (Call (Floc 022042) [Con 105,Con 54] Sp);
      PushFrame;
      PushReturnAddress 059043;
      SetLocal 1 105;
      SetLocal 2 54;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 059051
    }
  } else {
    Jump: 059084
  }
LocReturn 059043:
  PushStack call_result;
  TraceOperation 059050 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059051:
  TraceOperation 059051 (Set_attr (Con 162) (Con 5));
  Let b1 = M[002209];
  SetByte 002209 SetBit(b1,2);
  TraceOperation 059054 (Print "You pick up the receiver.");
  GamePrint "You pick up the receiver.";
  TraceOperation 059071 (Print_paddr (Var (Global 22)));
  Let b2 = M[007952];
  Let b3 = M[007953];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 059073 (Test_attr (Con 19) (Con 5) (Branch F (Dloc 059082)));
  Let b4 = M[000922];
  if (TestBit(b4,2)) {
    TraceOperation 059077 (Call (Floc 059962) [] Sp);
    PushFrame;
    PushReturnAddress 059077;
    MakeRoutineFrame 0;
    Jump: 059963
  } else {
    Jump: 059082
  }
LocReturn 059077:
  PushStack call_result;
  Jump: 059082
LocOp 059082:
  TraceOperation 059082 New_line;
  GamePrint "\n";
  TraceOperation 059083 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059084:
  TraceOperation 059084 (Je [Var (Global 203),Con 18] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),18)) {
    TraceOperation 059088 (Print_ret "It isn't ringing.");
    GamePrint "It isn't ringing.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 059100:
  MakeRoutineFrame 0;
  Jump: 059101
LocOp 059101:
  TraceOperation 059101 (Je [Con 167,Var (Global 201)] (Branch F (Dloc 059114)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(167,MakeHiLo(b1,b2))) {
    TraceOperation 059105 (Call (Floc 022042) [Var (Global 203),Con 161,Var (Global 202)] Sp);
    Let b3 = M[008314];
    Let b4 = M[008315];
    Let b5 = M[008312];
    Let b6 = M[008313];
    PushFrame;
    PushReturnAddress 059105;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 161;
    SetLocal 3 MakeHiLo(b5,b6);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 022057
  } else {
    Jump: 059114
  }
LocReturn 059105:
  PushStack call_result;
  TraceOperation 059113 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059114:
  TraceOperation 059114 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 161] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 059114;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 161;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 059114:
  PushStack call_result;
  TraceOperation 059122 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059124:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 059127
LocOp 059127:
  TraceOperation 059127 (Je [Var (Local 1),Con 1] (Branch F (Dloc 059245)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,1)) {
    TraceOperation 059132 (Je [Var (Global 203),Con 124] (Branch F (Dloc 059192)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (Equal(MakeHiLo(b2,b3),124)) {
      TraceOperation 059136 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 059192)));
      Let b4 = M[008310];
      Let b5 = M[008311];
      Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
      if (TestBit(b6,6)) {
        TraceOperation 059140 (Jin (Var (Global 201)) (Con 161) (Branch T (Dloc 059192)));
        Let b7 = M[008310];
        Let b8 = M[008311];
        Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),4)];
        if (Equal(161,Widen(b9))) {
          Jump: 059192
        } else {
          TraceOperation 059144 (Call (Floc 043468) [Var (Global 201)] Sp);
          Let b10 = M[008310];
          Let b11 = M[008311];
          PushFrame;
          PushReturnAddress 059144;
          SetLocal 1 MakeHiLo(b10,b11);
          MakeRoutineFrame 2;
          SetLocal 2 0;
          Jump: 043473
        }
      } else {
        Jump: 059192
      }
    } else {
      Jump: 059192
    }
  } else {
    Jump: 059245
  }
LocReturn 059144:
  PushStack call_result;
  TraceOperation 059150 (Jz (Var Sp) (Branch F (Dloc 059192)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 059153 (Print "You can't reach it from the bed.");
    GamePrint "You can't reach it from the bed.";
    TraceOperation 059168 (Jz (Var (Global 144)) (Branch T (Dloc 059190)));
    Let b2 = M[008196];
    Let b3 = M[008197];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 059190
    } else {
      TraceOperation 059171 (Print " The effort almost kills you.");
      GamePrint " The effort almost kills you.";
      Jump: 059190
    }
  } else {
    Jump: 059192
  }
LocOp 059190:
  TraceOperation 059190 New_line;
  GamePrint "\n";
  TraceOperation 059191 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059192:
  TraceOperation 059192 (Je [Var (Global 203),Con 63,Con 103] (Branch F (Dloc 059213)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 059198 (Je [Var (Global 201),Con 159] (Branch F (Dloc 059213)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),159)) {
      TraceOperation 059202 (Call (Floc 022042) [Con 124,Con 162] Sp);
      PushFrame;
      PushReturnAddress 059202;
      SetLocal 1 124;
      SetLocal 2 162;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 059213
    }
  } else {
    Jump: 059213
  }
LocReturn 059202:
  PushStack call_result;
  TraceOperation 059209 (Store (Con 207) (Con 159));
  SetByte 008290 0;
  SetByte 008291 159;
  TraceOperation 059212 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059213:
  TraceOperation 059213 (Je [Var (Global 203),Con 39,Con 103] (Branch F (Dloc 059234)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 059219 (Je [Var (Global 201),Con 164] (Branch F (Dloc 059234)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),164)) {
      TraceOperation 059223 (Call (Floc 022042) [Con 124,Con 162] Sp);
      PushFrame;
      PushReturnAddress 059223;
      SetLocal 1 124;
      SetLocal 2 162;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 059234
    }
  } else {
    Jump: 059234
  }
LocReturn 059223:
  PushStack call_result;
  TraceOperation 059230 (Store (Con 207) (Con 164));
  SetByte 008290 0;
  SetByte 008291 164;
  TraceOperation 059233 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059234:
  TraceOperation 059234 (Je [Var (Global 203),Con 169] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),169)) {
    TraceOperation 059238 (Call (Floc 057682) [Con 161] Sp);
    PushFrame;
    PushReturnAddress 059238;
    SetLocal 1 161;
    MakeRoutineFrame 1;
    Jump: 057685
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 059238:
  PushStack call_result;
  TraceOperation 059244 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 059245:
  TraceOperation 059245 (Jz (Var (Local 1)) (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    TraceOperation 059248 (Je [Var (Global 203),Con 48] (Branch F (Dloc 059328)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (Equal(MakeHiLo(b2,b3),48)) {
      TraceOperation 059253 (Jz (Var (Global 144)) (Branch T (Dloc 059328)));
      Let b4 = M[008196];
      Let b5 = M[008197];
      if (IsZero(MakeHiLo(b4,b5))) {
        Jump: 059328
      } else {
        TraceOperation 059257 (Get_parent (Con 31) Sp);
        Let b6 = M[001034];
        PushStack Widen(b6);
        TraceOperation 059260 (Je [Var Sp,Con 161] (Branch F (Dloc 059328)));
        PopStack popped7;
        if (Equal(popped7,161)) {
          TraceOperation 059265 (Insert_obj (Con 31) (Var (Global 0)));
          Let b8 = M[007908];
          Let b9 = M[007909];
          Let b10 = M[001034];
          if (IsZero(Widen(b10))) {} else {
            Let b11 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
            if (Equal(Widen(b11),31)) {
              Let b12 = M[001035];
              SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b12));
            } else {
              Let loop_var13 = Widen(b11);
              Label 14: {
                Let b15 = M[Offset(Offset(000751,Mul(loop_var13,9)),5)];
                if (Equal(Widen(b15),31)) {
                  Let b16 = M[001035];
                  SetByte Offset(Offset(000751,Mul(loop_var13,9)),5) LoByte(Widen(b16));
                } else {
                  Assign loop_var13 = Widen(b15);
                  Goto: Label 14
                }
              }
            }
          }
          SetByte 001034 b9;
          Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6)];
          SetByte 001035 LoByte(Widen(b17));
          SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6) 31;
          TraceOperation 059268 (Store (Con 102) (Con 0));
          SetByte 008080 0;
          SetByte 008081 0;
          TraceOperation 059271 (Print_ret "Very difficult, but you manage it. The room is still spinning. It dips and sways a little.");
          GamePrint "Very difficult, but you manage it. The room is still spinning. It dips and sways a little.\n";
          PopFrame;
          PopReturnAddress return_address_18;
          SetResult 1;
          JumpIndirect: (return) return_address_18
        } else {
          Jump: 059328
        }
      }
    } else {
      Jump: 059328
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_19;
    SetResult 0;
    JumpIndirect: (return) return_address_19
  }
LocOp 059328:
  TraceOperation 059328 (Je [Var (Global 203),Con 93] (Branch F (Dloc 059457)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 059333 (Insert_obj (Con 160) (Var (Global 0)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[002195];
    if (IsZero(Widen(b5))) {} else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b6),160)) {
        Let b7 = M[002196];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
      } else {
        Let loop_var8 = Widen(b6);
        Label 9: {
          Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
          if (Equal(Widen(b10),160)) {
            Let b11 = M[002196];
            SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
          } else {
            Assign loop_var8 = Widen(b10);
            Goto: Label 9
          }
        }
      }
    }
    SetByte 002195 b4;
    Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte 002196 LoByte(Widen(b12));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 160;
    TraceOperation 059336 (Print_ret "There's nothing there. Well, there are a few soiled handkerchiefs, a book you thought you'd lost, a couple of foreign coins, and something else which can't be fully described in a family game, but nothing you'd actually want.");
    GamePrint "There's nothing there. Well, there are a few soiled handkerchiefs, a book you thought you'd lost, a couple of foreign coins, and something else which can't be fully described in a family game, but nothing you'd actually want.\n";
    PopFrame;
    PopReturnAddress return_address_13;
    SetResult 1;
    JumpIndirect: (return) return_address_13
  } else {
    Jump: 059457
  }
LocOp 059457:
  TraceOperation 059457 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 059463 (Je [Var (Global 201),Con 161] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),161)) {
      TraceOperation 059467 (Call (Floc 057650) [] Sp);
      PushFrame;
      PushReturnAddress 059467;
      MakeRoutineFrame 0;
      Jump: 057651
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 059467:
  PushStack call_result;
  TraceOperation 059472 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 059474:
  MakeRoutineFrame 0;
  Jump: 059475
LocOp 059475:
  TraceOperation 059475 (Je [Var (Global 203),Con 63,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 059481 (Clear_attr (Con 166) (Con 6));
    Let b3 = M[002245];
    SetByte 002245 ClearBit(b3,1);
    TraceOperation 059484 (Print "As you part ");
    GamePrint "As you part ";
    TraceOperation 059493 (Print_obj (Con 159));
    Let b4 = M[002189];
    Let b5 = M[002190];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 059495 (Print " you see that i");
    GamePrint " you see that i";
    TraceOperation 059502 (Print_paddr (Var (Global 6)));
    Let b8 = M[007920];
    Let b9 = M[007921];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b8,b9)));
    TraceOperation 059504 (Print ", and a large yellow ");
    GamePrint ", and a large yellow ";
    TraceOperation 059515 (Print_obj (Con 166));
    Let b10 = M[002252];
    Let b11 = M[002253];
    Let b12 = M[Address(MakeHiLo(b10,b11))];
    Let ite_res13 = Ite((IsZeroByte(b12),"",GetText(Offset(Address(MakeHiLo(b10,b11)),1))));
    GamePrint ite_res13;
    TraceOperation 059517 (Print " is advancing on ");
    GamePrint " is advancing on ";
    TraceOperation 059528 (Print_obj (Con 173));
    Let b14 = M[002315];
    Let b15 = M[002316];
    Let b16 = M[Address(MakeHiLo(b14,b15))];
    Let ite_res17 = Ite((IsZeroByte(b16),"",GetText(Offset(Address(MakeHiLo(b14,b15)),1))));
    GamePrint ite_res17;
    TraceOperation 059530 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_18;
    SetResult 1;
    JumpIndirect: (return) return_address_18
  } else {
    PopFrame;
    PopReturnAddress return_address_19;
    SetResult 0;
    JumpIndirect: (return) return_address_19
  }
--------------------------------------------------
LocRoutine 059534:
  MakeRoutineFrame 0;
  Jump: 059535
LocOp 059535:
  TraceOperation 059535 (Je [Var (Global 203),Con 39,Con 103] (Branch F (Dloc 059584)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 059541 (Test_attr (Con 158) (Con 9) (Branch T (Dloc 059584)));
    Let b3 = M[002174];
    if (TestBit(b3,6)) {
      Jump: 059584
    } else {
      TraceOperation 059545 (Print_ret "It's hard to open or close the pocket unless you're wearing the gown.");
      GamePrint "It's hard to open or close the pocket unless you're wearing the gown.\n";
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    }
  } else {
    Jump: 059584
  }
LocOp 059584:
  TraceOperation 059584 (Je [Var (Global 203),Con 61] (Branch F (Dloc 059744)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 059589 (Print "The dressing gown is faded and battered, and is clearly a garment which has seen better decades. It has a pocket which is ");
    GamePrint "The dressing gown is faded and battered, and is clearly a garment which has seen better decades. It has a pocket which is ";
    TraceOperation 059658 (Test_attr (Con 158) (Con 23) (Branch F (Dloc 059670)));
    Let b3 = M[002175];
    if (TestBit(b3,0)) {
      TraceOperation 059662 (Print "open");
      GamePrint "open";
      TraceOperation 059667 (Jump 059673);
      Jump: 059673
    } else {
      Jump: 059670
    }
  } else {
    Jump: 059744
  }
LocOp 059670:
  TraceOperation 059670 (Print "closed");
  GamePrint "closed";
  Jump: 059673
LocOp 059673:
  TraceOperation 059673 (Jz (Var (Global 117)) (Branch T (Dloc 059697)));
  Let b1 = M[008142];
  Let b2 = M[008143];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 059697
  } else {
    TraceOperation 059676 (Print ". It is hanging from a ");
    GamePrint ". It is hanging from a ";
    TraceOperation 059689 (Print_obj (Con 114));
    Let b3 = M[001784];
    Let b4 = M[001785];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 059691 (Print ".");
    GamePrint ".";
    TraceOperation 059694 (Jump 059722);
    Jump: 059722
  }
LocOp 059697:
  TraceOperation 059697 (Print ", and a small loop at the back of the collar.");
  GamePrint ", and a small loop at the back of the collar.";
  Jump: 059722
LocOp 059722:
  TraceOperation 059722 (Jz (Var (Global 143)) (Branch T (Dloc 059742)));
  Let b1 = M[008194];
  Let b2 = M[008195];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 059742
  } else {
    TraceOperation 059725 (Print " The sleeves are tied closed.");
    GamePrint " The sleeves are tied closed.";
    Jump: 059742
  }
LocOp 059742:
  TraceOperation 059742 New_line;
  GamePrint "\n";
  TraceOperation 059743 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059744:
  TraceOperation 059744 (Je [Var (Global 203),Con 124] (Branch F (Dloc 059810)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 059749 (Je [Con 158,Var (Global 201)] (Branch F (Dloc 059810)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(158,MakeHiLo(b3,b4))) {
      TraceOperation 059753 (Jz (Var (Global 144)) (Branch T (Dloc 059810)));
      Let b5 = M[008196];
      Let b6 = M[008197];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 059810
      } else {
        TraceOperation 059756 (Clear_attr (Con 158) (Con 21));
        Let b7 = M[002175];
        SetByte 002175 ClearBit(b7,2);
        TraceOperation 059759 (Clear_attr (Con 158) (Con 27));
        Let b8 = M[002176];
        SetByte 002176 ClearBit(b8,4);
        TraceOperation 059762 (Insert_obj (Con 158) (Con 31));
        Let b9 = M[002177];
        if (IsZero(Widen(b9))) {} else {
          Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
          if (Equal(Widen(b10),158)) {
            Let b11 = M[002178];
            SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
          } else {
            Let loop_var12 = Widen(b10);
            Label 13: {
              Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
              if (Equal(Widen(b14),158)) {
                Let b15 = M[002178];
                SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
              } else {
                Assign loop_var12 = Widen(b14);
                Goto: Label 13
              }
            }
          }
        }
        SetByte 002177 31;
        Let b16 = M[001036];
        SetByte 002178 LoByte(Widen(b16));
        SetByte 001036 158;
        TraceOperation 059765 (Print_ret "Luckily, this is large enough for you to get hold of. You notice something in the pocket.");
        GamePrint "Luckily, this is large enough for you to get hold of. You notice something in the pocket.\n";
        PopFrame;
        PopReturnAddress return_address_17;
        SetResult 1;
        JumpIndirect: (return) return_address_17
      }
    } else {
      Jump: 059810
    }
  } else {
    Jump: 059810
  }
LocOp 059810:
  TraceOperation 059810 (Je [Var (Global 203),Con 116] (Branch F (Dloc 059842)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),116)) {
    TraceOperation 059814 (Jz (Var (Global 143)) (Branch T (Dloc 059842)));
    Let b3 = M[008194];
    Let b4 = M[008195];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 059842
    } else {
      TraceOperation 059817 (Print_ret "You'll have to untie the sleeve first.");
      GamePrint "You'll have to untie the sleeve first.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 059842
  }
LocOp 059842:
  TraceOperation 059842 (Je [Var (Global 203),Con 164,Con 157] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),164),Equal(MakeHiLo(b1,b2),157))) {
    TraceOperation 059848 (Call (Floc 022042) [Var (Global 203),Con 157] Sp);
    Let b3 = M[008314];
    Let b4 = M[008315];
    PushFrame;
    PushReturnAddress 059848;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 157;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 059848:
  PushStack call_result;
  TraceOperation 059855 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059856:
  MakeRoutineFrame 0;
  Jump: 059857
LocOp 059857:
  TraceOperation 059857 (Call (Floc 043370) [Con 158] Sp);
  PushFrame;
  PushReturnAddress 059857;
  SetLocal 1 158;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043375
LocReturn 059857:
  PushStack call_result;
  TraceOperation 059863 (Jz (Var Sp) (Branch F (Dloc 059873)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 059866 (Call (Floc 057596) [Con 157] Sp);
    PushFrame;
    PushReturnAddress 059866;
    SetLocal 1 157;
    MakeRoutineFrame 1;
    Jump: 057599
  } else {
    Jump: 059873
  }
LocReturn 059866:
  PushStack call_result;
  TraceOperation 059872 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 059873:
  TraceOperation 059873 (Je [Var (Global 203),Con 124,Con 116] (Branch F (Dloc 059887)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),124),Equal(MakeHiLo(b1,b2),116))) {
    TraceOperation 059879 (Call (Floc 022042) [Var (Global 203),Con 158] Sp);
    Let b3 = M[008314];
    Let b4 = M[008315];
    PushFrame;
    PushReturnAddress 059879;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 158;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 059887
  }
LocReturn 059879:
  PushStack call_result;
  TraceOperation 059886 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059887:
  TraceOperation 059887 (Je [Var (Global 203),Con 39,Con 157] (Branch F (Dloc 059934)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),157))) {
    TraceOperation 059893 (Store (Con 217) (Con 158));
    SetByte 008310 0;
    SetByte 008311 158;
    TraceOperation 059896 (Call (Floc 041208) [] Sp);
    PushFrame;
    PushReturnAddress 059896;
    MakeRoutineFrame 0;
    Jump: 041209
  } else {
    Jump: 059934
  }
LocReturn 059896:
  PushStack call_result;
  TraceOperation 059901 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 059904 (Jz (Var (Global 143)) (Branch T (Dloc 059912)));
    Let b2 = M[008194];
    Let b3 = M[008195];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 059912
    } else {
      TraceOperation 059907 (Print_ret "It is.");
      GamePrint "It is.\n";
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  }
LocOp 059912:
  TraceOperation 059912 (Store (Con 159) (Con 1));
  SetByte 008194 0;
  SetByte 008195 1;
  TraceOperation 059915 (Print_ret "The sleeves are now tied closed.");
  GamePrint "The sleeves are now tied closed.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 059934:
  TraceOperation 059934 (Je [Var (Global 203),Con 103,Con 164] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),103),Equal(MakeHiLo(b1,b2),164))) {
    TraceOperation 059940 (Jz (Var (Global 143)) (Branch T (Dloc 059953)));
    Let b3 = M[008194];
    Let b4 = M[008195];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 059953
    } else {
      TraceOperation 059943 (Store (Con 159) (Con 0));
      SetByte 008194 0;
      SetByte 008195 0;
      TraceOperation 059946 (Print_ret "Untied.");
      GamePrint "Untied.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocOp 059953:
  TraceOperation 059953 (Print_ret "It isn't tied!");
  GamePrint "It isn't tied!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 059962:
  MakeRoutineFrame 0;
  Jump: 059963
LocOp 059963:
  TraceOperation 059963 (Store (Con 229) (Con 9));
  SetByte 008334 0;
  SetByte 008335 9;
  TraceOperation 059966 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame;
  PushReturnAddress 059966;
  SetLocal 1 -14349;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 059966:
  PushStack call_result;
  TraceOperation 059974 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 059979 (Print " Shouldn't you be taking more interest in events in the world around you? While you've got it...?");
  GamePrint " Shouldn't you be taking more interest in events in the world around you? While you've got it...?";
  TraceOperation 060038 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 060040:
  MakeRoutineFrame 0;
  Jump: 060041
LocOp 060041:
  TraceOperation 060041 (Je [Var (Global 203),Con 61] (Branch F (Dloc 060181)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 060046 (Print "Apart from a label on the bottom saying \"Made in Ibiza\" it furnishes you with no clue as to its purpose, if indeed it has one. You are surprised to see it because you thought you'd thrown it away. Like most gifts from your aunt,");
    GamePrint "Apart from a label on the bottom saying \"Made in Ibiza\" it furnishes you with no clue as to its purpose, if indeed it has one. You are surprised to see it because you thought you'd thrown it away. Like most gifts from your aunt,";
    TraceOperation 060177 (Print_paddr (Var (Global 5)));
    Let b3 = M[007918];
    Let b4 = M[007919];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 060179 New_line;
    GamePrint "\n";
    TraceOperation 060180 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 060181
  }
LocOp 060181:
  TraceOperation 060181 (Je [Var (Global 203),Con 53] (Branch F (Dloc 060237)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 060185 (Je [Var (Global 0),Con 81,Con 175] (Branch T (Dloc 060237)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (LogOr(Equal(MakeHiLo(b3,b4),81),Equal(MakeHiLo(b3,b4),175))) {
      Jump: 060237
    } else {
      TraceOperation 060191 (Insert_obj (Con 156) (Var (Global 0)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[002159];
      if (IsZero(Widen(b7))) {} else {
        Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
        if (Equal(Widen(b8),156)) {
          Let b9 = M[002160];
          SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
        } else {
          Let loop_var10 = Widen(b8);
          Label 11: {
            Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
            if (Equal(Widen(b12),156)) {
              Let b13 = M[002160];
              SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
            } else {
              Assign loop_var10 = Widen(b12);
              Goto: Label 11
            }
          }
        }
      }
      SetByte 002159 b6;
      Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte 002160 LoByte(Widen(b14));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 156;
      TraceOperation 060194 (Print_ret "It falls to the ground with a light \"thunk.\" It doesn't do anything else at all.");
      GamePrint "It falls to the ground with a light \"thunk.\" It doesn't do anything else at all.\n";
      PopFrame;
      PopReturnAddress return_address_15;
      SetResult 1;
      JumpIndirect: (return) return_address_15
    }
  } else {
    Jump: 060237
  }
LocOp 060237:
  TraceOperation 060237 (Je [Var (Global 203),Con 39] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),39)) {
    TraceOperation 060241 (Print_ret "Come to think of it, you vaguely remember an instruction booklet with directions for that. You never read it and lost it months ago.");
    GamePrint "Come to think of it, you vaguely remember an instruction booklet with directions for that. You never read it and lost it months ago.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 060318:
  MakeRoutineFrame 0;
  Jump: 060319
LocOp 060319:
  TraceOperation 060319 (Random (Con 4) Sp);
  LetRandom random1 4;
  PushStack random1;
  TraceOperation 060323 (Add (Con 4) (Var Sp) Sp);
  PopStack popped2;
  PushStack Add(4,popped2);
  TraceOperation 060327 (Call (Floc 022320) [Con 30159,Var Sp] Sp);
  PopStack popped3;
  PushFrame;
  PushReturnAddress 060327;
  SetLocal 1 30159;
  SetLocal 2 popped3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 060327:
  PushStack call_result;
  TraceOperation 060335 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 060340 (Je [Var (Global 120),Con 123] (Branch F Dfalse));
  Let b2 = M[008148];
  Let b3 = M[008149];
  if (Equal(MakeHiLo(b2,b3),123)) {
    TraceOperation 060344 (Je [Var (Global 0),Con 188] (Branch F (Dloc 060352)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    if (Equal(MakeHiLo(b4,b5),188)) {
      TraceOperation 060348 (Jl (Var (Global 211)) (Con 3) (Branch T Dfalse));
      Let b6 = M[008330];
      Let b7 = M[008331];
      if (LessThan(MakeHiLo(b6,b7),3)) {
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 0;
        JumpIndirect: (return) return_address_8
      } else {
        Jump: 060352
      }
    } else {
      Jump: 060352
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
LocOp 060352:
  TraceOperation 060352 (Je [Var (Global 0),Con 25,Con 175,Con 81] (Branch T Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),25),Equal(MakeHiLo(b1,b2),175)),Equal(MakeHiLo(b1,b2),81))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 060359 (Call (Floc 043370) [Con 156] Sp);
    PushFrame;
    PushReturnAddress 060359;
    SetLocal 1 156;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043375
  }
LocReturn 060359:
  PushStack call_result;
  TraceOperation 060365 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060368 (Call (Floc 043468) [Con 156,Con 31] Sp);
    PushFrame;
    PushReturnAddress 060368;
    SetLocal 1 156;
    SetLocal 2 31;
    MakeRoutineFrame 2;
    Jump: 043473
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocReturn 060368:
  PushStack call_result;
  TraceOperation 060375 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 060378 (Jin (Con 124) (Var (Global 0)) (Branch T Dfalse));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[001871];
    if (Equal(MakeHiLo(b2,b3),Widen(b4))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 060382 (Random (Con 100) Sp);
      LetRandom random6 100;
      PushStack random6;
      TraceOperation 060386 (Jl (Con 40) (Var Sp) (Branch T (Dloc 060394)));
      PopStack popped7;
      if (LessThan(40,popped7)) {
        Jump: 060394
      } else {
        TraceOperation 060390 (Insert_obj (Con 156) (Var (Global 0)));
        Let b8 = M[007908];
        Let b9 = M[007909];
        Let b10 = M[002159];
        if (IsZero(Widen(b10))) {} else {
          Let b11 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
          if (Equal(Widen(b11),156)) {
            Let b12 = M[002160];
            SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b12));
          } else {
            Let loop_var13 = Widen(b11);
            Label 14: {
              Let b15 = M[Offset(Offset(000751,Mul(loop_var13,9)),5)];
              if (Equal(Widen(b15),156)) {
                Let b16 = M[002160];
                SetByte Offset(Offset(000751,Mul(loop_var13,9)),5) LoByte(Widen(b16));
              } else {
                Assign loop_var13 = Widen(b15);
                Goto: Label 14
              }
            }
          }
        }
        SetByte 002159 b9;
        Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6)];
        SetByte 002160 LoByte(Widen(b17));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6) 156;
        TraceOperation 060393 Rfalse;
        PopFrame;
        PopReturnAddress return_address_18;
        SetResult 0;
        JumpIndirect: (return) return_address_18
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_19;
    SetResult 0;
    JumpIndirect: (return) return_address_19
  }
LocOp 060394:
  TraceOperation 060394 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 060414)));
  Let b1 = M[002174];
  if (TestBit(b1,6)) {
    TraceOperation 060398 (Test_attr (Con 158) (Con 23) (Branch F (Dloc 060414)));
    Let b2 = M[002175];
    if (TestBit(b2,0)) {
      TraceOperation 060402 (Random (Con 100) Sp);
      LetRandom random3 100;
      PushStack random3;
      TraceOperation 060406 (Jl (Con 65) (Var Sp) (Branch T (Dloc 060414)));
      PopStack popped4;
      if (LessThan(65,popped4)) {
        Jump: 060414
      } else {
        TraceOperation 060410 (Insert_obj (Con 156) (Con 158));
        Let b5 = M[002159];
        if (IsZero(Widen(b5))) {} else {
          Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
          if (Equal(Widen(b6),156)) {
            Let b7 = M[002160];
            SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
          } else {
            Let loop_var8 = Widen(b6);
            Label 9: {
              Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
              if (Equal(Widen(b10),156)) {
                Let b11 = M[002160];
                SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
              } else {
                Assign loop_var8 = Widen(b10);
                Goto: Label 9
              }
            }
          }
        }
        SetByte 002159 158;
        Let b12 = M[002179];
        SetByte 002160 LoByte(Widen(b12));
        SetByte 002179 156;
        TraceOperation 060413 Rfalse;
        PopFrame;
        PopReturnAddress return_address_13;
        SetResult 0;
        JumpIndirect: (return) return_address_13
      }
    } else {
      Jump: 060414
    }
  } else {
    Jump: 060414
  }
LocOp 060414:
  TraceOperation 060414 (Insert_obj (Con 156) (Con 31));
  Let b1 = M[002159];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),156)) {
      Let b3 = M[002160];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),156)) {
          Let b7 = M[002160];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002159 31;
  Let b8 = M[001036];
  SetByte 002160 LoByte(Widen(b8));
  SetByte 001036 156;
  TraceOperation 060417 Rfalse;
  PopFrame;
  PopReturnAddress return_address_9;
  SetResult 0;
  JumpIndirect: (return) return_address_9
--------------------------------------------------
LocRoutine 060418:
  MakeRoutineFrame 0;
  Jump: 060419
LocOp 060419:
  TraceOperation 060419 (Je [Var (Global 203),Con 51,Con 124,Con 56] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),51),Equal(MakeHiLo(b1,b2),124)),Equal(MakeHiLo(b1,b2),56))) {
    TraceOperation 060426 (Insert_obj (Con 154) (Con 219));
    Let b3 = M[002141];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),154)) {
        Let b5 = M[002142];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),154)) {
            Let b9 = M[002142];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002141 219;
    Let b10 = M[002728];
    SetByte 002142 LoByte(Widen(b10));
    SetByte 002728 154;
    TraceOperation 060429 (Clear_attr (Con 18) (Con 21));
    Let b11 = M[000915];
    SetByte 000915 ClearBit(b11,2);
    TraceOperation 060432 (Clear_attr (Con 19) (Con 21));
    Let b12 = M[000924];
    SetByte 000924 ClearBit(b12,2);
    TraceOperation 060435 (Store (Con 160) (Con 0));
    SetByte 008196 0;
    SetByte 008197 0;
    TraceOperation 060438 (Add (Var (Global 1)) (Con 10) (Global 1));
    Let b13 = M[007910];
    Let b14 = M[007911];
    SetByte 007910 HiByte(Add(MakeHiLo(b13,b14),10));
    SetByte 007911 LoByte(Add(MakeHiLo(b13,b14),10));
    TraceOperation 060442 (Print_ret "You swallow the tablet. After a few seconds the room begins to calm down and behave in an orderly manner. Your terrible headache goes.");
    GamePrint "You swallow the tablet. After a few seconds the room begins to calm down and behave in an orderly manner. Your terrible headache goes.\n";
    PopFrame;
    PopReturnAddress return_address_15;
    SetResult 1;
    JumpIndirect: (return) return_address_15
  } else {
    PopFrame;
    PopReturnAddress return_address_16;
    SetResult 0;
    JumpIndirect: (return) return_address_16
  }
--------------------------------------------------
LocRoutine 060526:
  MakeRoutineFrame 0;
  Jump: 060527
LocOp 060527:
  TraceOperation 060527 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 060533)));
  Let b1 = M[002174];
  if (TestBit(b1,6)) {
    TraceOperation 060531 (Ret (Con 149));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 149;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 060533
  }
LocOp 060533:
  TraceOperation 060533 (Store (Con 229) (Con 10));
  SetByte 008334 0;
  SetByte 008335 10;
  TraceOperation 060536 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame;
  PushReturnAddress 060536;
  SetLocal 1 -14349;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 060536:
  PushStack call_result;
  TraceOperation 060544 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 060549 (Print_paddr (Var (Global 19)));
  Let b2 = M[007946];
  Let b3 = M[007947];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 060551 New_line;
  GamePrint "\n";
  TraceOperation 060552 Rfalse;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult 0;
  JumpIndirect: (return) return_address_4
--------------------------------------------------
LocRoutine 060554:
  MakeRoutineFrame 0;
  Jump: 060555
LocOp 060555:
  TraceOperation 060555 (Je [Var (Global 203),Con 124] (Branch F (Dloc 060591)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 060559 (Test_attr (Con 150) (Con 5) (Branch T (Dloc 060591)));
    Let b3 = M[002101];
    if (TestBit(b3,2)) {
      Jump: 060591
    } else {
      TraceOperation 060563 (Set_attr (Con 150) (Con 5));
      Let b4 = M[002101];
      SetByte 002101 SetBit(b4,2);
      TraceOperation 060566 (Clear_attr (Con 150) (Con 21));
      Let b5 = M[002103];
      SetByte 002103 ClearBit(b5,2);
      TraceOperation 060569 (Insert_obj (Con 150) (Con 31));
      Let b6 = M[002105];
      if (IsZero(Widen(b6))) {} else {
        Let b7 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
        if (Equal(Widen(b7),150)) {
          Let b8 = M[002106];
          SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b8));
        } else {
          Let loop_var9 = Widen(b7);
          Label 10: {
            Let b11 = M[Offset(Offset(000751,Mul(loop_var9,9)),5)];
            if (Equal(Widen(b11),150)) {
              Let b12 = M[002106];
              SetByte Offset(Offset(000751,Mul(loop_var9,9)),5) LoByte(Widen(b12));
            } else {
              Assign loop_var9 = Widen(b11);
              Goto: Label 10
            }
          }
        }
      }
      SetByte 002105 31;
      Let b13 = M[001036];
      SetByte 002106 LoByte(Widen(b13));
      SetByte 001036 150;
      TraceOperation 060572 (Print_ret "You gather up the pile of mail.");
      GamePrint "You gather up the pile of mail.\n";
      PopFrame;
      PopReturnAddress return_address_14;
      SetResult 1;
      JumpIndirect: (return) return_address_14
    }
  } else {
    Jump: 060591
  }
LocOp 060591:
  TraceOperation 060591 (Je [Var (Global 203),Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 060595 (Call (Floc 022042) [Con 120,Con 150] Sp);
    PushFrame;
    PushReturnAddress 060595;
    SetLocal 1 120;
    SetLocal 2 150;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 060595:
  PushStack call_result;
  TraceOperation 060602 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 060604:
  MakeRoutineFrame 0;
  Jump: 060605
LocOp 060605:
  TraceOperation 060605 (Jz (Var (Global 145)) (Branch T (Dloc 060624)));
  Let b1 = M[008198];
  Let b2 = M[008199];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 060624
  } else {
    TraceOperation 060608 (Print "You can't enter a ");
    GamePrint "You can't enter a ";
    TraceOperation 060617 (Print_obj (Con 171));
    Let b3 = M[002297];
    Let b4 = M[002298];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 060619 (Print ".");
    GamePrint ".";
    TraceOperation 060622 New_line;
    GamePrint "\n";
    TraceOperation 060623 Rfalse;
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocOp 060624:
  TraceOperation 060624 (Je [Var (Global 120),Con 142] (Branch F (Dloc 060653)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 060628 (Je [Var (Global 203),Con 38] (Branch T (Dloc 060645)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),38)) {
      Jump: 060645
    } else {
      TraceOperation 060632 (Print "Enter the house? ");
      GamePrint "Enter the house? ";
      Jump: 060645
    }
  } else {
    Jump: 060653
  }
LocOp 060645:
  TraceOperation 060645 (Call (Floc 057712) [Con -11268] Sp);
  PushFrame;
  PushReturnAddress 060645;
  SetLocal 1 -11268;
  MakeRoutineFrame 1;
  Jump: 057715
LocReturn 060645:
  PushStack call_result;
  TraceOperation 060652 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 060653:
  TraceOperation 060653 (Jz (Var (Global 139)) (Branch F (Dloc 060669)));
  Let b1 = M[008186];
  Let b2 = M[008187];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 060656 (Print "The ");
    GamePrint "The ";
    TraceOperation 060659 (Print_obj (Con 166));
    Let b3 = M[002252];
    Let b4 = M[002253];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 060661 (Call (Floc 042734) [Con -11267] Sp);
    PushFrame;
    PushReturnAddress 060661;
    SetLocal 1 -11267;
    MakeRoutineFrame 1;
    Jump: 042737
  } else {
    Jump: 060669
  }
LocReturn 060661:
  PushStack call_result;
  TraceOperation 060668 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 060669:
  TraceOperation 060669 (Call (Floc 022320) [Con 29202,Con 5] Sp);
  PushFrame;
  PushReturnAddress 060669;
  SetLocal 1 29202;
  SetLocal 2 5;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 060669:
  PushStack call_result;
  TraceOperation 060677 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 060682 (Ret (Con 151));
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 151;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 060684:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 060687
LocOp 060687:
  TraceOperation 060687 (Je [Var (Local 1),Con 2] (Branch F (Dloc 060875)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 060692 (Clear_attr (Con 166) (Con 6));
    Let b2 = M[002245];
    SetByte 002245 ClearBit(b2,1);
    TraceOperation 060695 (Jin (Con 135) (Con 137) (Branch F (Dloc 060853)));
    Let b3 = M[001970];
    if (Equal(137,Widen(b3))) {
      TraceOperation 060700 (Jz (Var (Global 128)) (Branch F (Dloc 060708)));
      Let b4 = M[008164];
      Let b5 = M[008165];
      if (IsZero(MakeHiLo(b4,b5))) {
        TraceOperation 060703 (Call (Floc 069352) [] Sp);
        PushFrame;
        PushReturnAddress 060703;
        MakeRoutineFrame 0;
        Jump: 069353
      } else {
        Jump: 060708
      }
    } else {
      Jump: 060853
    }
  } else {
    Jump: 060875
  }
LocReturn 060703:
  PushStack call_result;
  Jump: 060708
LocOp 060708:
  TraceOperation 060708 (Call (Floc 022320) [Con -28826,Con 3] Sp);
  PushFrame;
  PushReturnAddress 060708;
  SetLocal 1 -28826;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 060708:
  PushStack call_result;
  TraceOperation 060716 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 060721 (Print "You reach the site of what was ");
  GamePrint "You reach the site of what was ";
  TraceOperation 060738 (Je [Var (Global 120),Con 142] (Branch F (Dloc 060750)));
  Let b2 = M[008148];
  Let b3 = M[008149];
  if (Equal(MakeHiLo(b2,b3),142)) {
    TraceOperation 060742 (Print "Arthur's");
    GamePrint "Arthur's";
    TraceOperation 060747 (Jump 060753);
    Jump: 060753
  } else {
    Jump: 060750
  }
LocOp 060750:
  TraceOperation 060750 (Print "your");
  GamePrint "your";
  Jump: 060753
LocOp 060753:
  TraceOperation 060753 (Print " home. It is now a ");
  GamePrint " home. It is now a ";
  TraceOperation 060766 (Print_obj (Con 171));
  Let b1 = M[002297];
  Let b2 = M[002298];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 060768 (Print ". ");
  GamePrint ". ";
  TraceOperation 060771 (Print_obj (Con 145));
  Let b5 = M[002063];
  Let b6 = M[002064];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
  GamePrint ite_res8;
  TraceOperation 060773 (Print " looks sheepishly triumphant, a trick few people can do, as it requires a lot of technically complex deltoid muscle work.");
  GamePrint " looks sheepishly triumphant, a trick few people can do, as it requires a lot of technically complex deltoid muscle work.";
  TraceOperation 060850 New_line;
  GamePrint "\n";
  TraceOperation 060851 New_line;
  GamePrint "\n";
  TraceOperation 060852 Rtrue;
  PopFrame;
  PopReturnAddress return_address_9;
  SetResult 1;
  JumpIndirect: (return) return_address_9
LocOp 060853:
  TraceOperation 060853 (Je [Var (Global 120),Con 142] (Branch T Dfalse));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 060857 (Jz (Var (Global 139)) (Branch F Dfalse));
    Let b4 = M[008186];
    Let b5 = M[008187];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 060860 (Call (Floc 022320) [Con 30621,Con -1] Sp);
      PushFrame;
      PushReturnAddress 060860;
      SetLocal 1 30621;
      SetLocal 2 -1;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 022327
    } else {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    }
  }
LocReturn 060860:
  PushStack call_result;
  TraceOperation 060869 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 060874 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 060875:
  TraceOperation 060875 (Je [Var (Local 1),Con 3] (Branch F (Dloc 061226)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 060880 (Je [Var (Global 120),Con 142] (Branch F (Dloc 061044)));
    Let b2 = M[008148];
    Let b3 = M[008149];
    if (Equal(MakeHiLo(b2,b3),142)) {
      TraceOperation 060885 (Test_attr (Con 149) (Con 27) (Branch T (Dloc 061044)));
      Let b4 = M[002095];
      if (TestBit(b4,4)) {
        Jump: 061044
      } else {
        TraceOperation 060890 (Set_attr (Con 127) (Con 27));
        Let b5 = M[001897];
        SetByte 001897 SetBit(b5,4);
        TraceOperation 060893 (Store (Con 146) (Con 0));
        SetByte 008168 0;
        SetByte 008169 0;
        TraceOperation 060896 (Set_attr (Con 123) (Con 27));
        Let b6 = M[001861];
        SetByte 001861 SetBit(b6,4);
        TraceOperation 060899 (Set_attr (Con 149) (Con 27));
        Let b7 = M[002095];
        SetByte 002095 SetBit(b7,4);
        TraceOperation 060902 (Print "Before you is the house of your friend, ");
        GamePrint "Before you is the house of your friend, ";
        TraceOperation 060925 (Print_obj (Con 123));
        Let b8 = M[001865];
        Let b9 = M[001866];
        Let b10 = M[Address(MakeHiLo(b8,b9))];
        Let ite_res11 = Ite((IsZeroByte(b10),"",GetText(Offset(Address(MakeHiLo(b8,b9)),1))));
        GamePrint ite_res11;
        TraceOperation 060927 (Print ", who is lying in front of a ");
        GamePrint ", who is lying in front of a ";
        TraceOperation 060944 (Print_obj (Con 166));
        Let b12 = M[002252];
        Let b13 = M[002253];
        Let b14 = M[Address(MakeHiLo(b12,b13))];
        Let ite_res15 = Ite((IsZeroByte(b14),"",GetText(Offset(Address(MakeHiLo(b12,b13)),1))));
        GamePrint ite_res15;
        TraceOperation 060946 (Print "; you have no idea why. You have no idea about most things about Arthur, even why you regard him as a friend, but you do, and must therefore return his towel before you leave.");
        GamePrint "; you have no idea why. You have no idea about most things about Arthur, even why you regard him as a friend, but you do, and must therefore return his towel before you leave.";
        TraceOperation 061041 (Jump 061157);
        Jump: 061157
      }
    } else {
      Jump: 061044
    }
  } else {
    Jump: 061226
  }
LocOp 061044:
  TraceOperation 061044 (Jz (Var (Global 145)) (Branch T (Dloc 061061)));
  Let b1 = M[008198];
  Let b2 = M[008199];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 061061
  } else {
    TraceOperation 061047 (Print "There is a huge ");
    GamePrint "There is a huge ";
    TraceOperation 061056 (Print_obj (Con 171));
    Let b3 = M[002297];
    Let b4 = M[002298];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 061058 (Jump 061092);
    Jump: 061092
  }
LocOp 061061:
  TraceOperation 061061 (Je [Var (Global 120),Con 142] (Branch F (Dloc 061079)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 061065 (Print "Arthur's house is");
    GamePrint "Arthur's house is";
    TraceOperation 061076 (Jump 061092);
    Jump: 061092
  } else {
    Jump: 061079
  }
LocOp 061079:
  TraceOperation 061079 (Print "You can enter your home");
  GamePrint "You can enter your home";
  Jump: 061092
LocOp 061092:
  TraceOperation 061092 (Print " to the north. A path leads around it to the northeast and northwest, and a country lane is visible to the south.");
  GamePrint " to the north. A path leads around it to the northeast and northwest, and a country lane is visible to the south.";
  Jump: 061157
LocOp 061157:
  TraceOperation 061157 (Test_attr (Con 149) (Con 27) (Branch T (Dloc 061223)));
  Let b1 = M[002095];
  if (TestBit(b1,4)) {
    Jump: 061223
  } else {
    TraceOperation 061162 (Je [Var (Global 120),Con 123] (Branch F (Dloc 061223)));
    Let b2 = M[008148];
    Let b3 = M[008149];
    if (Equal(MakeHiLo(b2,b3),123)) {
      TraceOperation 061166 (Set_attr (Con 149) (Con 27));
      Let b4 = M[002095];
      SetByte 002095 SetBit(b4,4);
      TraceOperation 061169 (Print " All that lies between your home and the huge yellow ");
      GamePrint " All that lies between your home and the huge yellow ";
      TraceOperation 061196 (Print_obj (Con 166));
      Let b5 = M[002252];
      Let b6 = M[002253];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 061198 (Print " bearing down on it is a few yards of mud.");
      GamePrint " bearing down on it is a few yards of mud.";
      Jump: 061223
    } else {
      Jump: 061223
    }
  }
LocOp 061223:
  TraceOperation 061223 New_line;
  GamePrint "\n";
  TraceOperation 061224 New_line;
  GamePrint "\n";
  TraceOperation 061225 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 061226:
  TraceOperation 061226 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 061230 (Je [Var (Global 120),Con 142] (Branch F Dfalse));
    Let b2 = M[008148];
    Let b3 = M[008149];
    if (Equal(MakeHiLo(b2,b3),142)) {
      TraceOperation 061234 (Test_attr (Con 123) (Con 27) (Branch F Dfalse));
      Let b4 = M[001861];
      if (TestBit(b4,4)) {
        TraceOperation 061238 (Clear_attr (Con 123) (Con 27));
        Let b5 = M[001861];
        SetByte 001861 ClearBit(b5,4);
        TraceOperation 061241 Rfalse;
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 0;
        JumpIndirect: (return) return_address_6
      } else {
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 0;
        JumpIndirect: (return) return_address_7
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 0;
      JumpIndirect: (return) return_address_8
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
--------------------------------------------------
LocRoutine 061242:
  MakeRoutineFrame 0;
  Jump: 061243
LocOp 061243:
  TraceOperation 061243 (Jz (Var (Global 86)) (Branch F (Dloc 061249)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 061246 (Jz (Var (Global 145)) (Branch T (Dloc 061262)));
    Let b3 = M[008198];
    Let b4 = M[008199];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 061262
    } else {
      Jump: 061249
    }
  } else {
    Jump: 061249
  }
LocOp 061249:
  TraceOperation 061249 (Call (Floc 022340) [Con 30621] Sp);
  PushFrame;
  PushReturnAddress 061249;
  SetLocal 1 30621;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 061249:
  PushStack call_result;
  TraceOperation 061256 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 061261 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 061262:
  TraceOperation 061262 (Set_attr (Con 145) (Con 5));
  Let b1 = M[002056];
  SetByte 002056 SetBit(b1,2);
  TraceOperation 061265 (Inc (Con 158));
  Let b2 = M[008192];
  Let b3 = M[008193];
  SetByte 008192 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008193 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 061267 (Jg (Var (Global 142)) (Con 4) (Branch F (Dloc 061292)));
  Let b4 = M[008192];
  Let b5 = M[008193];
  if (GreaterThan(MakeHiLo(b4,b5),4)) {
    TraceOperation 061271 (Call (Floc 022340) [Con 30621] Sp);
    PushFrame;
    PushReturnAddress 061271;
    SetLocal 1 30621;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    Jump: 061292
  }
LocReturn 061271:
  PushStack call_result;
  TraceOperation 061278 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 061283 (Print_paddr (Var (Global 47)));
  Let b2 = M[008002];
  Let b3 = M[008003];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 061285 New_line;
  GamePrint "\n";
  TraceOperation 061286 (Call (Floc 061320) [] Sp);
  PushFrame;
  PushReturnAddress 061286;
  MakeRoutineFrame 0;
  Jump: 061321
LocReturn 061286:
  PushStack call_result;
  TraceOperation 061291 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 061292:
  TraceOperation 061292 (Je [Var (Global 0),Con 149] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),149)) {
    TraceOperation 061296 (Print "The ");
    GamePrint "The ";
    TraceOperation 061299 (Print_obj (Con 166));
    Let b3 = M[002252];
    Let b4 = M[002253];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 061301 (Print_ret " rumbles slowly toward your home.");
    GamePrint " rumbles slowly toward your home.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
--------------------------------------------------
LocRoutine 061320:
  MakeRoutineFrame 0;
  Jump: 061321
LocOp 061321:
  TraceOperation 061321 New_line;
  GamePrint "\n";
  TraceOperation 061322 (Print "Your home collapses in a cloud of dust, and a stray flying brick hits you squarely on the back of the head. You try to think of some suitable last words, but what with the confusion of the moment and the spinning of your head, you are unable to compose anything pithy and expire in silence.");
  GamePrint "Your home collapses in a cloud of dust, and a stray flying brick hits you squarely on the back of the head. You try to think of some suitable last words, but what with the confusion of the moment and the spinning of your head, you are unable to compose anything pithy and expire in silence.";
  Jump: 061479
LocOp 061479:
  TraceOperation 061479 New_line;
  GamePrint "\n";
  TraceOperation 061480 New_line;
  GamePrint "\n";
  TraceOperation 061481 (Print ">");
  GamePrint ">";
  TraceOperation 061486 (Sread (Var (Global 193)) (Var (Global 194)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  Let b7 = M[007910];
  Let b8 = M[007911];
  Let b9 = M[007912];
  Let b10 = M[007913];
  ReadInputFromUser (Just (StatusInfo {room = ite_res6, score = MakeHiLo(b7,b8), turns = MakeHiLo(b9,b10)})) user_command_line_11;
  Let b12 = M[008294];
  Let b13 = M[008295];
  Let b14 = M[008296];
  Let b15 = M[008297];
  Tokenize user_command_line_11 (num_tokens_16,positions17,words18);
  StringBytes user_command_line_11 string_bytes_19;
  Let loop_var20 = 0;
  Label 21: {
    if (Equal(loop_var20,Widen(StringLength(user_command_line_11)))) {
      SetByte Offset(Address(MakeHiLo(b14,b15)),1) num_tokens_16;
      Let loop_var22 = 0;
      Label 23: {
        if (Equal(loop_var22,Widen(num_tokens_16))) {
          TraceOperation 061490 (Inc (Con 157));
          Let b24 = M[008190];
          Let b25 = M[008191];
          SetByte 008190 HiByte(Add(MakeHiLo(b24,b25),1));
          SetByte 008191 LoByte(Add(MakeHiLo(b24,b25),1));
          TraceOperation 061492 (Je [Var (Global 141),Con 1,Con 2] (Branch F (Dloc 061616)));
          Let b26 = M[008190];
          Let b27 = M[008191];
          if (LogOr(Equal(MakeHiLo(b26,b27),1),Equal(MakeHiLo(b26,b27),2))) {
            TraceOperation 061499 (Print "You keep out of this, you're dead");
            GamePrint "You keep out of this, you're dead";
            TraceOperation 061516 (Je [Var (Global 141),Con 1] (Branch F (Dloc 061542)));
            Let b28 = M[008190];
            Let b29 = M[008191];
            if (Equal(MakeHiLo(b28,b29),1)) {
              TraceOperation 061520 (Print ". An ambulance arrives.");
              GamePrint ". An ambulance arrives.";
              TraceOperation 061539 (Jump 061479);
              Jump: 061479
            } else {
              Jump: 061542
            }
          } else {
            Jump: 061616
          }
        } else {
          Let lookee30 = LookupInDict(IndexList(words18,loop_var22));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),0) HiByte(DeAddress(lookee30));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),1) LoByte(DeAddress(lookee30));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),2) StringLength(IndexList(words18,loop_var22));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),3) IndexList(positions17,loop_var22);
          Assign loop_var22 = Add(loop_var22,1);
          Goto: Label 23
        }
      }
    } else {
      SetByte Offset(Offset(Address(MakeHiLo(b12,b13)),1),loop_var20) IndexList(string_bytes_19,loop_var20);
      Assign loop_var20 = Add(loop_var20,1);
      Goto: Label 21
    }
  }
LocOp 061542:
  TraceOperation 061542 (Print " and should be concentrating on developing a good firm rigor mortis. You are put in the ambulance, which drives away.");
  GamePrint " and should be concentrating on developing a good firm rigor mortis. You are put in the ambulance, which drives away.";
  TraceOperation 061613 (Jump 061479);
  Jump: 061479
LocOp 061616:
  TraceOperation 061616 (Je [Var (Global 141),Con 3] (Branch F (Dloc 061479)));
  Let b1 = M[008190];
  Let b2 = M[008191];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 061621 (Print "For a dead person you are talking too much. As the ambulance reaches the mortuary");
    GamePrint "For a dead person you are talking too much. As the ambulance reaches the mortuary";
    TraceOperation 061672 (Call (Floc 058046) [] Sp);
    PushFrame;
    PushReturnAddress 061672;
    MakeRoutineFrame 0;
    Jump: 058047
  } else {
    Jump: 061479
  }
LocReturn 061672:
  PushStack call_result;
  TraceOperation 061677 (Call (Floc 028948) [] Sp);
  PushFrame;
  PushReturnAddress 061677;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 028951
LocReturn 061677:
  PushStack call_result;
  TraceOperation 061682 (Jump 061479);
  Jump: 061479
--------------------------------------------------
LocRoutine 061686:
  MakeRoutineFrame 0;
  Jump: 061687
LocOp 061687:
  TraceOperation 061687 (Je [Var (Global 203),Con 75,Con 15] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),75),Equal(MakeHiLo(b1,b2),15))) {
    TraceOperation 061693 (Print "The ");
    GamePrint "The ";
    TraceOperation 061696 (Print_obj (Con 146));
    Let b3 = M[002072];
    Let b4 = M[002073];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 061698 (Print ", perusing a booklet of union rules, ignores you.");
    GamePrint ", perusing a booklet of union rules, ignores you.";
    TraceOperation 061731 New_line;
    GamePrint "\n";
    TraceOperation 061732 (Call (Floc 043634) [] Sp);
    PushFrame;
    PushReturnAddress 061732;
    MakeRoutineFrame 0;
    Jump: 043635
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocReturn 061732:
  PushStack call_result;
  TraceOperation 061737 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 061738:
  MakeRoutineFrame 0;
  Jump: 061739
LocOp 061739:
  TraceOperation 061739 (Je [Var (Global 203),Con 61] (Branch F (Dloc 061800)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 061743 (Print "It's one of those really big ");
    GamePrint "It's one of those really big ";
    TraceOperation 061762 (Print_obj (Con 166));
    Let b3 = M[002252];
    Let b4 = M[002253];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 061764 (Print "s that can actually crush other ");
    GamePrint "s that can actually crush other ";
    TraceOperation 061783 (Print_obj (Con 166));
    Let b7 = M[002252];
    Let b8 = M[002253];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
    GamePrint ite_res10;
    TraceOperation 061785 (Print_ret "s, let alone houses.");
    GamePrint "s, let alone houses.\n";
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 1;
    JumpIndirect: (return) return_address_11
  } else {
    Jump: 061800
  }
LocOp 061800:
  TraceOperation 061800 (Je [Var (Global 0),Con 149] (Branch T (Dloc 061834)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),149)) {
    Jump: 061834
  } else {
    TraceOperation 061804 (Je [Var (Global 203),Con 98,Con 114,Con 159] (Branch T (Dloc 061822)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),98),Equal(MakeHiLo(b3,b4),114)),Equal(MakeHiLo(b3,b4),159))) {
      Jump: 061822
    } else {
      TraceOperation 061811 (Je [Var (Global 203),Con 26,Con 82,Con 124] (Branch T (Dloc 061822)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),26),Equal(MakeHiLo(b5,b6),82)),Equal(MakeHiLo(b5,b6),124))) {
        Jump: 061822
      } else {
        TraceOperation 061818 (Je [Var (Global 203),Con 168] (Branch F (Dloc 061834)));
        Let b7 = M[008314];
        Let b8 = M[008315];
        if (Equal(MakeHiLo(b7,b8),168)) {
          Jump: 061822
        } else {
          Jump: 061834
        }
      }
    }
  }
LocOp 061822:
  TraceOperation 061822 (Print "The ");
  GamePrint "The ";
  TraceOperation 061825 (Print_obj (Con 166));
  Let b1 = M[002252];
  Let b2 = M[002253];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 061827 (Print_ret " isn't here.");
  GamePrint " isn't here.\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 061834:
  TraceOperation 061834 (Je [Var (Global 203),Con 87] (Branch F (Dloc 061846)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 061838 (Call (Floc 022042) [Con 26,Con 166] Sp);
    PushFrame;
    PushReturnAddress 061838;
    SetLocal 1 26;
    SetLocal 2 166;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 061846
  }
LocReturn 061838:
  PushStack call_result;
  TraceOperation 061845 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 061846:
  TraceOperation 061846 (Je [Var (Global 203),Con 26] (Branch F (Dloc 061971)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 061851 (Je [Var (Global 120),Con 123] (Branch F (Dloc 061971)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 061856 (Jz (Var (Global 145)) (Branch T (Dloc 061870)));
      Let b5 = M[008198];
      Let b6 = M[008199];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 061870
      } else {
        TraceOperation 061859 (Print_ret "Too late now.");
        GamePrint "Too late now.\n";
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      }
    } else {
      Jump: 061971
    }
  } else {
    Jump: 061971
  }
LocOp 061870:
  TraceOperation 061870 (Jz (Var (Global 86)) (Branch T (Dloc 061881)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 061881
  } else {
    TraceOperation 061873 (Call (Floc 022042) [Con 87,Con 42] Sp);
    PushFrame;
    PushReturnAddress 061873;
    SetLocal 1 87;
    SetLocal 2 42;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 061873:
  PushStack call_result;
  TraceOperation 061880 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 061881:
  TraceOperation 061881 (Jz (Var (Global 139)) (Branch T (Dloc 061903)));
  Let b1 = M[008186];
  Let b2 = M[008187];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 061903
  } else {
    TraceOperation 061884 (Print_ret "Prosser's doing that for you.");
    GamePrint "Prosser's doing that for you.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 061903:
  TraceOperation 061903 (Store (Con 102) (Con 1));
  SetByte 008080 0;
  SetByte 008081 1;
  TraceOperation 061906 (Call (Floc 022320) [Con 31225,Con 2] Sp);
  PushFrame;
  PushReturnAddress 061906;
  SetLocal 1 31225;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 061906:
  PushStack call_result;
  TraceOperation 061914 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 061919 (Print "You lie down in the path of the advancing ");
  GamePrint "You lie down in the path of the advancing ";
  TraceOperation 061942 (Print_obj (Con 166));
  Let b2 = M[002252];
  Let b3 = M[002253];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 061944 (Print_ret ". Prosser yells at you to for crissake move!!!");
  GamePrint ". Prosser yells at you to for crissake move!!!\n";
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
LocOp 061971:
  TraceOperation 061971 (Je [Var (Global 203),Con 168] (Branch F (Dloc 062415)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),168)) {
    TraceOperation 061976 (Je [Var (Global 120),Con 123] (Branch F (Dloc 061986)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 061980 (Call (Floc 031422) [] Sp);
      PushFrame;
      PushReturnAddress 061980;
      MakeRoutineFrame 0;
      Jump: 031423
    } else {
      Jump: 061986
    }
  } else {
    Jump: 062415
  }
LocReturn 061980:
  PushStack call_result;
  TraceOperation 061985 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 061986:
  TraceOperation 061986 (Jz (Var (Global 131)) (Branch F (Dloc 062028)));
  Let b1 = M[008170];
  Let b2 = M[008171];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 061989 (Print_ret "Didn't you come here for a purpose? Something about a towel?");
    GamePrint "Didn't you come here for a purpose? Something about a towel?\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 062028
  }
LocOp 062028:
  TraceOperation 062028 (Jz (Var (Global 138)) (Branch T (Dloc 062054)));
  Let b1 = M[008184];
  Let b2 = M[008185];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 062054
  } else {
    TraceOperation 062031 (Print_ret "You already did. It's not a merry-go-round.");
    GamePrint "You already did. It's not a merry-go-round.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 062054:
  TraceOperation 062054 (Store (Con 154) (Con 1));
  SetByte 008184 0;
  SetByte 008185 1;
  TraceOperation 062057 (Print "You walk around the ");
  GamePrint "You walk around the ";
  TraceOperation 062066 (Print_obj (Con 166));
  Let b1 = M[002252];
  Let b2 = M[002253];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 062068 (Print_ret ". Prosser is standing here, looking cross and frustrated. Realising that you are a friend of Arthur's he starts to talk at you. He says that this sort of protest is all very well, but what Mr. Dent must realise is that he's had plenty of time to make a formal protest at the proper time and place, and that spending months going through the appropriate official channels, filling in the appropriate official forms, and going to the appropriate official public hearings is the right way of going about it, and lying around whimsically in the mud is not. He says that he personally hates mud and despises the sort of people who lie in it.");
  GamePrint ". Prosser is standing here, looking cross and frustrated. Realising that you are a friend of Arthur's he starts to talk at you. He says that this sort of protest is all very well, but what Mr. Dent must realise is that he's had plenty of time to make a formal protest at the proper time and place, and that spending months going through the appropriate official channels, filling in the appropriate official forms, and going to the appropriate official public hearings is the right way of going about it, and lying around whimsically in the mud is not. He says that he personally hates mud and despises the sort of people who lie in it.\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 062415:
  TraceOperation 062415 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 062419 (Call (Floc 020662) [Con 31225] Sp);
    PushFrame;
    PushReturnAddress 062419;
    SetLocal 1 31225;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 020671
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 062419:
  PushStack call_result;
  TraceOperation 062426 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 062429 (Print_ret "\"Rumble...rumble...\"");
    GamePrint "\"Rumble...rumble...\"\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 062450:
  MakeRoutineFrame 0;
  Jump: 062451
LocOp 062451:
  TraceOperation 062451 (Jz (Var (Global 86)) (Branch F (Dloc 062472)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 062454 (Call (Floc 022340) [Con 31225] Sp);
    PushFrame;
    PushReturnAddress 062454;
    SetLocal 1 31225;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    Jump: 062472
  }
LocReturn 062454:
  PushStack call_result;
  TraceOperation 062461 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 062466 (Call (Floc 061242) [] Sp);
  PushFrame;
  PushReturnAddress 062466;
  MakeRoutineFrame 0;
  Jump: 061243
LocReturn 062466:
  PushStack call_result;
  TraceOperation 062471 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 062472:
  TraceOperation 062472 (Call (Floc 022320) [Con 31225,Con -1] Sp);
  PushFrame;
  PushReturnAddress 062472;
  SetLocal 1 31225;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 062472:
  PushStack call_result;
  TraceOperation 062481 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 062486 (Inc (Con 156));
  Let b2 = M[008188];
  Let b3 = M[008189];
  SetByte 008188 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008189 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 062488 New_line;
  GamePrint "\n";
  TraceOperation 062489 (Je [Var (Global 140),Con 1] (Branch F (Dloc 062541)));
  Let b4 = M[008188];
  Let b5 = M[008189];
  if (Equal(MakeHiLo(b4,b5),1)) {
    TraceOperation 062493 (Print "The ");
    GamePrint "The ";
    TraceOperation 062496 (Print_obj (Con 166));
    Let b6 = M[002252];
    Let b7 = M[002253];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
    GamePrint ite_res9;
    TraceOperation 062498 (Print_ret " thunders toward you. The ground is shaking beneath you as you lie in the mud.");
    GamePrint " thunders toward you. The ground is shaking beneath you as you lie in the mud.\n";
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 1;
    JumpIndirect: (return) return_address_10
  } else {
    Jump: 062541
  }
LocOp 062541:
  TraceOperation 062541 (Je [Var (Global 140),Con 2] (Branch F (Dloc 062652)));
  Let b1 = M[008188];
  Let b2 = M[008189];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 062546 (Print "The noise of the giant ");
    GamePrint "The noise of the giant ";
    TraceOperation 062559 (Print_obj (Con 166));
    Let b3 = M[002252];
    Let b4 = M[002253];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 062561 (Print_ret " is now so violently loud that you can't even hear Prosser yelling to warn you that you will be killed if you don't get the hell out of the way. You just see him gesticulating wildly.");
    GamePrint " is now so violently loud that you can't even hear Prosser yelling to warn you that you will be killed if you don't get the hell out of the way. You just see him gesticulating wildly.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 062652
  }
LocOp 062652:
  TraceOperation 062652 (Je [Var (Global 140),Con 3] (Branch F Dfalse));
  Let b1 = M[008188];
  Let b2 = M[008189];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 062656 (Call (Floc 022340) [Con 31225] Sp);
    PushFrame;
    PushReturnAddress 062656;
    SetLocal 1 31225;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 062656:
  PushStack call_result;
  TraceOperation 062663 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 062668 (Call (Floc 022320) [Con -32630,Con -1] Sp);
  PushFrame;
  PushReturnAddress 062668;
  SetLocal 1 -32630;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 062668:
  PushStack call_result;
  TraceOperation 062677 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 062682 (Insert_obj (Con 142) (Var (Global 0)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[002033];
  if (IsZero(Widen(b4))) {} else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
    if (Equal(Widen(b5),142)) {
      Let b6 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
    } else {
      Let loop_var7 = Widen(b5);
      Label 8: {
        Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
        if (Equal(Widen(b9),142)) {
          Let b10 = M[002034];
          SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
        } else {
          Assign loop_var7 = Widen(b9);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 002033 b3;
  Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
  SetByte 002034 LoByte(Widen(b11));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 142;
  TraceOperation 062685 (Store (Con 207) (Con 139));
  SetByte 008290 0;
  SetByte 008291 139;
  TraceOperation 062688 (Print "With a terrible grinding of gears the ");
  GamePrint "With a terrible grinding of gears the ";
  TraceOperation 062713 (Print_obj (Con 166));
  Let b12 = M[002252];
  Let b13 = M[002253];
  Let b14 = M[Address(MakeHiLo(b12,b13))];
  Let ite_res15 = Ite((IsZeroByte(b14),"",GetText(Offset(Address(MakeHiLo(b12,b13)),1))));
  GamePrint ite_res15;
  TraceOperation 062715 (Print " comes to an abrupt halt just in front of you. It shakes, shudders, and emits noxious substances all over your rose bed. Prosser is incoherent with rage.\n\nMoments later, your friend ");
  GamePrint " comes to an abrupt halt just in front of you. It shakes, shudders, and emits noxious substances all over your rose bed. Prosser is incoherent with rage.\n\nMoments later, your friend ";
  TraceOperation 062818 (Print_obj (Con 142));
  Let b16 = M[002036];
  Let b17 = M[002037];
  Let b18 = M[Address(MakeHiLo(b16,b17))];
  Let ite_res19 = Ite((IsZeroByte(b18),"",GetText(Offset(Address(MakeHiLo(b16,b17)),1))));
  GamePrint ite_res19;
  TraceOperation 062820 (Print_ret " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.");
  GamePrint " arrives. He hardly seems to notice your predicament, but keeps glancing nervously at the sky. He says \"Hello, Arthur,\" takes a towel from his battered leather satchel, and offers it to you.\n";
  PopFrame;
  PopReturnAddress return_address_20;
  SetResult 1;
  JumpIndirect: (return) return_address_20
--------------------------------------------------
LocRoutine 062932:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 062935
LocOp 062935:
  TraceOperation 062935 (Je [Var (Global 120),Con 142] (Branch F (Dloc 062992)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 062939 (Test_attr (Con 145) (Con 5) (Branch T (Dloc 062992)));
    Let b3 = M[002056];
    if (TestBit(b3,2)) {
      Jump: 062992
    } else {
      TraceOperation 062943 (Set_attr (Con 145) (Con 5));
      Let b4 = M[002056];
      SetByte 002056 SetBit(b4,2);
      TraceOperation 062946 (Print "Nearby stands an impatient man. There seems to be a bit of an atmosphere.");
      GamePrint "Nearby stands an impatient man. There seems to be a bit of an atmosphere.";
      TraceOperation 062989 (Jump 063122);
      Jump: 063122
    }
  } else {
    Jump: 062992
  }
LocOp 062992:
  TraceOperation 062992 (Print_obj (Con 145));
  Let b1 = M[002063];
  Let b2 = M[002064];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 062994 (Print ", from the local council, is ");
  GamePrint ", from the local council, is ";
  TraceOperation 063011 (Jz (Var (Global 139)) (Branch T (Dloc 063028)));
  Let b5 = M[008186];
  Let b6 = M[008187];
  if (IsZero(MakeHiLo(b5,b6))) {
    Jump: 063028
  } else {
    TraceOperation 063014 (Print "lying in front");
    GamePrint "lying in front";
    TraceOperation 063025 (Jump 063049);
    Jump: 063049
  }
LocOp 063028:
  TraceOperation 063028 (Jz (Var (Global 138)) (Branch T (Dloc 063047)));
  Let b1 = M[008184];
  Let b2 = M[008185];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 063047
  } else {
    TraceOperation 063031 (Print "standing at the side");
    GamePrint "standing at the side";
    TraceOperation 063044 (Jump 063049);
    Jump: 063049
  }
LocOp 063047:
  TraceOperation 063047 (Print_paddr (Var (Global 8)));
  Let b1 = M[007924];
  Let b2 = M[007925];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  Jump: 063049
LocOp 063049:
  TraceOperation 063049 (Print " of the ");
  GamePrint " of the ";
  TraceOperation 063054 (Print_obj (Con 166));
  Let b1 = M[002252];
  Let b2 = M[002253];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 063056 (Print ". He seems to be wearing a ");
  GamePrint ". He seems to be wearing a ";
  TraceOperation 063071 (Print_obj (Con 144));
  Let b5 = M[002054];
  Let b6 = M[002055];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
  GamePrint ite_res8;
  TraceOperation 063073 (Print ".");
  GamePrint ".";
  TraceOperation 063076 (Test_attr (Con 145) (Con 5) (Branch T (Dloc 063122)));
  Let b9 = M[002056];
  if (TestBit(b9,2)) {
    Jump: 063122
  } else {
    TraceOperation 063080 (Set_attr (Con 145) (Con 5));
    Let b10 = M[002056];
    SetByte 002056 SetBit(b10,2);
    TraceOperation 063083 (Print " He looks startled to see you emerge, and yells at you to get out of the way.");
    GamePrint " He looks startled to see you emerge, and yells at you to get out of the way.";
    Jump: 063122
  }
LocOp 063122:
  TraceOperation 063122 New_line;
  GamePrint "\n";
  TraceOperation 063123 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 063124:
  MakeRoutineFrame 0;
  Jump: 063125
LocOp 063125:
  TraceOperation 063125 (Je [Con 145,Var (Global 195)] (Branch F (Dloc 063883)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(145,MakeHiLo(b1,b2))) {
    TraceOperation 063130 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 063239)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001871];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 063135 (Print "Prosser is too preoccupied with recent events to give your remarks much consideration. He is running off and saying a number of things about his mother in a high voice.");
      GamePrint "Prosser is too preoccupied with recent events to give your remarks much consideration. He is running off and saying a number of things about his mother in a high voice.";
      TraceOperation 063232 New_line;
      GamePrint "\n";
      TraceOperation 063233 (Call (Floc 043634) [] Sp);
      PushFrame;
      PushReturnAddress 063233;
      MakeRoutineFrame 0;
      Jump: 043635
    } else {
      Jump: 063239
    }
  } else {
    Jump: 063883
  }
LocReturn 063233:
  PushStack call_result;
  TraceOperation 063238 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063239:
  TraceOperation 063239 (Je [Var (Global 203),Con 150] (Branch F (Dloc 063262)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),150)) {
    TraceOperation 063243 (Je [Var (Global 201),Con 30] (Branch F (Dloc 063262)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 063247 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 063250 (Call (Floc 022042) [Con 22,Con 145,Var (Global 202)] Sp);
      Let b5 = M[008312];
      Let b6 = M[008313];
      PushFrame;
      PushReturnAddress 063250;
      SetLocal 1 22;
      SetLocal 2 145;
      SetLocal 3 MakeHiLo(b5,b6);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 063262
    }
  } else {
    Jump: 063262
  }
LocReturn 063250:
  PushStack call_result;
  TraceOperation 063258 (Store (Con 211) (Con 145));
  SetByte 008298 0;
  SetByte 008299 145;
  TraceOperation 063261 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 063262:
  TraceOperation 063262 (Je [Var (Global 203),Con 75] (Branch F (Dloc 063280)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 063266 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 063269 (Call (Floc 022042) [Con 75,Con 145] Sp);
    PushFrame;
    PushReturnAddress 063269;
    SetLocal 1 75;
    SetLocal 2 145;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 063280
  }
LocReturn 063269:
  PushStack call_result;
  TraceOperation 063276 (Store (Con 211) (Con 145));
  SetByte 008298 0;
  SetByte 008299 145;
  TraceOperation 063279 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 063280:
  TraceOperation 063280 (Je [Var (Global 203),Con 174] (Branch F (Dloc 063303)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 063284 (Je [Var (Global 201),Con 28] (Branch F (Dloc 063303)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 063288 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 063291 (Call (Floc 022042) [Con 22,Con 145,Con 28] Sp);
      PushFrame;
      PushReturnAddress 063291;
      SetLocal 1 22;
      SetLocal 2 145;
      SetLocal 3 28;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 063303
    }
  } else {
    Jump: 063303
  }
LocReturn 063291:
  PushStack call_result;
  TraceOperation 063299 (Store (Con 211) (Con 145));
  SetByte 008298 0;
  SetByte 008299 145;
  TraceOperation 063302 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 063303:
  TraceOperation 063303 (Je [Var (Global 203),Con 174] (Branch F (Dloc 063311)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 063307 (Je [Var (Global 201),Con 143] (Branch T (Dloc 063331)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),143)) {
      Jump: 063331
    } else {
      Jump: 063311
    }
  } else {
    Jump: 063311
  }
LocOp 063311:
  TraceOperation 063311 (Je [Var (Global 203),Con 151] (Branch F (Dloc 063323)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),151)) {
    TraceOperation 063315 (Je [Var (Global 201),Con 30] (Branch F (Dloc 063323)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 063319 (Je [Var (Global 202),Con 143] (Branch T (Dloc 063331)));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (Equal(MakeHiLo(b5,b6),143)) {
        Jump: 063331
      } else {
        Jump: 063323
      }
    } else {
      Jump: 063323
    }
  } else {
    Jump: 063323
  }
LocOp 063323:
  TraceOperation 063323 (Je [Var (Global 203),Con 176] (Branch F (Dloc 063346)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),176)) {
    TraceOperation 063327 (Je [Var (Global 201),Con 143] (Branch F (Dloc 063346)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),143)) {
      Jump: 063331
    } else {
      Jump: 063346
    }
  } else {
    Jump: 063346
  }
LocOp 063331:
  TraceOperation 063331 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 063334 (Call (Floc 022042) [Con 23,Con 145,Con 143] Sp);
  PushFrame;
  PushReturnAddress 063334;
  SetLocal 1 23;
  SetLocal 2 145;
  SetLocal 3 143;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 063334:
  PushStack call_result;
  TraceOperation 063342 (Store (Con 211) (Con 145));
  SetByte 008298 0;
  SetByte 008299 145;
  TraceOperation 063345 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 063346:
  TraceOperation 063346 (Je [Var (Global 203),Con 174] (Branch F (Dloc 063369)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 063350 (Je [Var (Global 201),Con 28] (Branch F (Dloc 063369)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 063354 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 063357 (Call (Floc 022042) [Con 22,Con 145,Var (Global 201)] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame;
      PushReturnAddress 063357;
      SetLocal 1 22;
      SetLocal 2 145;
      SetLocal 3 MakeHiLo(b5,b6);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 063369
    }
  } else {
    Jump: 063369
  }
LocReturn 063357:
  PushStack call_result;
  TraceOperation 063365 (Store (Con 211) (Con 145));
  SetByte 008298 0;
  SetByte 008299 145;
  TraceOperation 063368 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 063369:
  TraceOperation 063369 (Je [Var (Global 120),Con 142] (Branch F (Dloc 063755)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 063374 (Je [Var (Global 203),Con 87] (Branch F (Dloc 063385)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),87)) {
      TraceOperation 063378 (Je [Var (Global 201),Con 166] (Branch F (Dloc 063385)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),166)) {
        TraceOperation 063382 (Jz (Var (Global 204)) (Branch F (Dloc 063412)));
        Let b7 = M[008316];
        Let b8 = M[008317];
        if (IsZero(MakeHiLo(b7,b8))) {
          Jump: 063385
        } else {
          Jump: 063412
        }
      } else {
        Jump: 063385
      }
    } else {
      Jump: 063385
    }
  } else {
    Jump: 063755
  }
LocOp 063385:
  TraceOperation 063385 (Je [Var (Global 203),Con 87] (Branch F (Dloc 063398)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 063389 (Je [Var (Global 201),Con 217,Con 42] (Branch F (Dloc 063398)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),217),Equal(MakeHiLo(b3,b4),42))) {
      TraceOperation 063395 (Jz (Var (Global 145)) (Branch T (Dloc 063412)));
      Let b5 = M[008198];
      Let b6 = M[008199];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 063412
      } else {
        Jump: 063398
      }
    } else {
      Jump: 063398
    }
  } else {
    Jump: 063398
  }
LocOp 063398:
  TraceOperation 063398 (Je [Var (Global 203),Con 126] (Branch F (Dloc 063744)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),126)) {
    TraceOperation 063403 (Je [Var (Global 201),Con 123] (Branch F (Dloc 063744)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 063408 (Jz (Var (Global 145)) (Branch F (Dloc 063744)));
      Let b5 = M[008198];
      Let b6 = M[008199];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 063412
      } else {
        Jump: 063744
      }
    } else {
      Jump: 063744
    }
  } else {
    Jump: 063744
  }
LocOp 063412:
  TraceOperation 063412 (Jz (Var (Global 139)) (Branch T (Dloc 063430)));
  Let b1 = M[008186];
  Let b2 = M[008187];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 063430
  } else {
    TraceOperation 063415 (Print_ret "He's already lying there!");
    GamePrint "He's already lying there!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 063430:
  TraceOperation 063430 (Store (Con 155) (Con 1));
  SetByte 008186 0;
  SetByte 008187 1;
  TraceOperation 063433 (Call (Floc 022320) [Con -27122,Con -1] Sp);
  PushFrame;
  PushReturnAddress 063433;
  SetLocal 1 -27122;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 063433:
  PushStack call_result;
  TraceOperation 063442 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 063447 (Print_ret "Prosser blinks in astonishment. \"You mean, go and lie in the mud in his place...?\" You explain that Arthur will only move if someone else takes over for him. Prosser shakes his head in such a manner as to suggest that he is very weary of the world, and you tactfully forebear from mentioning that it won't be troubling him much longer. Reluctantly, he follows you back toward Arthur.\n\nYou rapidly conclude the business. Prosser lies in the mud. Arthur, bewildered, nevertheless stands up and appears ready to follow you to the Pub.");
  GamePrint "Prosser blinks in astonishment. \"You mean, go and lie in the mud in his place...?\" You explain that Arthur will only move if someone else takes over for him. Prosser shakes his head in such a manner as to suggest that he is very weary of the world, and you tactfully forebear from mentioning that it won't be troubling him much longer. Reluctantly, he follows you back toward Arthur.\n\nYou rapidly conclude the business. Prosser lies in the mud. Arthur, bewildered, nevertheless stands up and appears ready to follow you to the Pub.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 063744:
  TraceOperation 063744 (Call (Floc 064540) [] Sp);
  PushFrame;
  PushReturnAddress 063744;
  MakeRoutineFrame 0;
  Jump: 064541
LocReturn 063744:
  PushStack call_result;
  TraceOperation 063749 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 063749;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 063749:
  PushStack call_result;
  TraceOperation 063754 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063755:
  TraceOperation 063755 (Je [Var (Global 203),Con 175] (Branch F (Dloc 063848)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),175)) {
    TraceOperation 063760 (Je [Var (Global 201),Con 173,Con 172] (Branch F (Dloc 063848)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),173),Equal(MakeHiLo(b3,b4),172))) {
      TraceOperation 063767 (Jz (Var (Global 145)) (Branch T (Dloc 063848)));
      Let b5 = M[008198];
      Let b6 = M[008199];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 063848
      } else {
        TraceOperation 063771 (Print_ret "Prosser explains the local planning regulations and says, by way of reassurance, that you will probably be rehoused within a couple of years.");
        GamePrint "Prosser explains the local planning regulations and says, by way of reassurance, that you will probably be rehoused within a couple of years.\n";
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      }
    } else {
      Jump: 063848
    }
  } else {
    Jump: 063848
  }
LocOp 063848:
  TraceOperation 063848 (Je [Var (Global 203),Con 26] (Branch F (Dloc 063872)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 063852 (Je [Var (Global 201),Con 166] (Branch F (Dloc 063872)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),166)) {
      TraceOperation 063856 (Call (Floc 020662) [Con 30621] Sp);
      PushFrame;
      PushReturnAddress 063856;
      SetLocal 1 30621;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 020671
    } else {
      Jump: 063872
    }
  } else {
    Jump: 063872
  }
LocReturn 063856:
  PushStack call_result;
  TraceOperation 063863 (Jz (Var Sp) (Branch T (Dloc 063872)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 063872
  } else {
    TraceOperation 063866 (Call (Floc 035588) [] Sp);
    PushFrame;
    PushReturnAddress 063866;
    MakeRoutineFrame 0;
    Jump: 035589
  }
LocReturn 063866:
  PushStack call_result;
  TraceOperation 063871 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063872:
  TraceOperation 063872 (Call (Floc 064540) [] Sp);
  PushFrame;
  PushReturnAddress 063872;
  MakeRoutineFrame 0;
  Jump: 064541
LocReturn 063872:
  PushStack call_result;
  TraceOperation 063877 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 063877;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 063877:
  PushStack call_result;
  TraceOperation 063882 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063883:
  TraceOperation 063883 (Jz (Var (Global 138)) (Branch F (Dloc 063931)));
  Let b1 = M[008184];
  Let b2 = M[008185];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 063886 (Je [Var (Global 120),Con 142] (Branch F (Dloc 063931)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),142)) {
      TraceOperation 063890 (Je [Var (Global 203),Con 23,Con 75,Con 15] (Branch T (Dloc 063903)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),23),Equal(MakeHiLo(b5,b6),75)),Equal(MakeHiLo(b5,b6),15))) {
        Jump: 063903
      } else {
        TraceOperation 063897 (Je [Var (Global 203),Con 150,Con 22] (Branch F (Dloc 063931)));
        Let b7 = M[008314];
        Let b8 = M[008315];
        if (LogOr(Equal(MakeHiLo(b7,b8),150),Equal(MakeHiLo(b7,b8),22))) {
          Jump: 063903
        } else {
          Jump: 063931
        }
      }
    } else {
      Jump: 063931
    }
  } else {
    Jump: 063931
  }
LocOp 063903:
  TraceOperation 063903 (Je [Var (Global 201),Con 145] (Branch F (Dloc 063931)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),145)) {
    TraceOperation 063907 (Jin (Con 124) (Var (Global 0)) (Branch T (Dloc 063931)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001871];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      Jump: 063931
    } else {
      TraceOperation 063911 (Print "Prosser can't hear you from here.");
      GamePrint "Prosser can't hear you from here.";
      TraceOperation 063924 New_line;
      GamePrint "\n";
      TraceOperation 063925 (Call (Floc 043634) [] Sp);
      PushFrame;
      PushReturnAddress 063925;
      MakeRoutineFrame 0;
      Jump: 043635
    }
  } else {
    Jump: 063931
  }
LocReturn 063925:
  PushStack call_result;
  TraceOperation 063930 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 063931:
  TraceOperation 063931 (Je [Var (Global 203),Con 134,Con 66] (Branch F (Dloc 064134)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),134),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 063938 (Je [Var (Global 201),Con 156] (Branch F (Dloc 063983)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),156)) {
      TraceOperation 063942 (Print_ret "He is much impressed and says, \"You must have the same aunt I have.\"");
      GamePrint "He is much impressed and says, \"You must have the same aunt I have.\"\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 063983
    }
  } else {
    Jump: 064134
  }
LocOp 063983:
  TraceOperation 063983 (Je [Var (Global 201),Con 139] (Branch F (Dloc 064027)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 063987 (Store (Con 148) (Con 1));
    SetByte 008172 0;
    SetByte 008173 1;
    TraceOperation 063990 (Print_ret "Prosser thanks you, wipes the mud off his boots, and hands it back.");
    GamePrint "Prosser thanks you, wipes the mud off his boots, and hands it back.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 064027
  }
LocOp 064027:
  TraceOperation 064027 (Je [Var (Global 201),Con 1] (Branch F (Dloc 064083)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 064031 (Print "Prosser takes a quick look at ");
    GamePrint "Prosser takes a quick look at ";
    TraceOperation 064048 (Print_obj (Con 1));
    Let b3 = M[000767];
    Let b4 = M[000768];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 064050 (Print_ret ", says he doesn't read that kind of rubbish, and hands it back.");
    GamePrint ", says he doesn't read that kind of rubbish, and hands it back.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 064083
  }
LocOp 064083:
  TraceOperation 064083 (Je [Var (Global 201),Con 141] (Branch F Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),141)) {
    TraceOperation 064087 (Print_ret "Prosser says he wouldn't be seen dead with that kind of thing slung over his shoulder.");
    GamePrint "Prosser says he wouldn't be seen dead with that kind of thing slung over his shoulder.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 064134:
  TraceOperation 064134 (Je [Var (Global 203),Con 21] (Branch F (Dloc 064192)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),21)) {
    TraceOperation 064138 (Je [Var (Global 0),Con 149] (Branch F (Dloc 064192)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),149)) {
      TraceOperation 064142 (Je [Var (Global 120),Con 142] (Branch F (Dloc 064157)));
      Let b5 = M[008148];
      Let b6 = M[008149];
      if (Equal(MakeHiLo(b5,b6),142)) {
        TraceOperation 064146 (Jz (Var (Global 138)) (Branch F (Dloc 064157)));
        Let b7 = M[008184];
        Let b8 = M[008185];
        if (IsZero(MakeHiLo(b7,b8))) {
          TraceOperation 064149 (Call (Floc 022042) [Con 168,Con 166] Sp);
          PushFrame;
          PushReturnAddress 064149;
          SetLocal 1 168;
          SetLocal 2 166;
          MakeRoutineFrame 7;
          SetLocal 7 0;
          SetLocal 6 0;
          SetLocal 5 0;
          SetLocal 4 0;
          SetLocal 3 0;
          Jump: 022057
        } else {
          Jump: 064157
        }
      } else {
        Jump: 064157
      }
    } else {
      Jump: 064192
    }
  } else {
    Jump: 064192
  }
LocReturn 064149:
  PushStack call_result;
  TraceOperation 064156 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 064157:
  TraceOperation 064157 (Print_ret "You're already as close as any reasonable person would want to get.");
  GamePrint "You're already as close as any reasonable person would want to get.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 064192:
  TraceOperation 064192 (Je [Var (Global 203),Con 82,Con 24] (Branch F (Dloc 064205)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),82),Equal(MakeHiLo(b1,b2),24))) {
    TraceOperation 064198 (Jz (Var (Global 86)) (Branch T (Dloc 064205)));
    Let b3 = M[008080];
    Let b4 = M[008081];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 064205
    } else {
      TraceOperation 064201 (Print_paddr (Var (Global 50)));
      Let b5 = M[008008];
      Let b6 = M[008009];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 064203 New_line;
      GamePrint "\n";
      TraceOperation 064204 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    }
  } else {
    Jump: 064205
  }
LocOp 064205:
  TraceOperation 064205 (Je [Var (Global 203),Con 24] (Branch F (Dloc 064280)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),24)) {
    TraceOperation 064210 (Je [Var (Global 201),Con 145] (Branch F (Dloc 064280)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),145)) {
      TraceOperation 064215 (Jz (Var (Global 145)) (Branch T (Dloc 064280)));
      Let b5 = M[008198];
      Let b6 = M[008199];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 064280
      } else {
        TraceOperation 064219 (Print_ret "You muck up all his fancy facial work. This is the last moment of satisfaction you will experience for some time.");
        GamePrint "You muck up all his fancy facial work. This is the last moment of satisfaction you will experience for some time.\n";
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      }
    } else {
      Jump: 064280
    }
  } else {
    Jump: 064280
  }
LocOp 064280:
  TraceOperation 064280 (Je [Var (Global 203),Con 82,Con 24] (Branch F (Dloc 064323)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),82),Equal(MakeHiLo(b1,b2),24))) {
    TraceOperation 064286 (Je [Var (Global 201),Con 145] (Branch F (Dloc 064323)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),145)) {
      TraceOperation 064290 (Print_ret "He dodges, insisting that this is incorrect procedure.");
      GamePrint "He dodges, insisting that this is incorrect procedure.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 064323
    }
  } else {
    Jump: 064323
  }
LocOp 064323:
  TraceOperation 064323 (Je [Var (Global 203),Con 154] (Branch F (Dloc 064342)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),154)) {
    TraceOperation 064327 (Je [Var (Global 202),Con 145] (Branch F (Dloc 064342)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),145)) {
      TraceOperation 064331 (Insert_obj (Var (Global 201)) (Var (Global 0)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[007908];
      Let b8 = M[007909];
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      if (IsZero(Widen(b9))) {} else {
        Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
        if (Equal(Widen(b10),MakeHiLo(b5,b6))) {
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
        } else {
          Let loop_var12 = Widen(b10);
          Label 13: {
            Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
            if (Equal(Widen(b14),MakeHiLo(b5,b6))) {
              Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
              SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
            } else {
              Assign loop_var12 = Widen(b14);
              Goto: Label 13
            }
          }
        }
      }
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) b8;
      Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b16));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) b6;
      TraceOperation 064334 (Call (Floc 022042) [Con 24,Con 145] Sp);
      PushFrame;
      PushReturnAddress 064334;
      SetLocal 1 24;
      SetLocal 2 145;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 064342
    }
  } else {
    Jump: 064342
  }
LocReturn 064334:
  PushStack call_result;
  TraceOperation 064341 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 064342:
  TraceOperation 064342 (Je [Var (Global 203),Con 61] (Branch F (Dloc 064352)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 064346 (Call (Floc 062932) [] Sp);
    PushFrame;
    PushReturnAddress 064346;
    MakeRoutineFrame 1;
    SetLocal 1 0;
    Jump: 062935
  } else {
    Jump: 064352
  }
LocReturn 064346:
  PushStack call_result;
  TraceOperation 064351 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064352:
  TraceOperation 064352 (Je [Var (Global 203),Con 74] (Branch F (Dloc 064368)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 064356 (Test_attr (Con 148) (Con 6) (Branch T (Dloc 064368)));
    Let b3 = M[002083];
    if (TestBit(b3,1)) {
      Jump: 064368
    } else {
      TraceOperation 064360 (Call (Floc 022042) [Con 74,Con 148] Sp);
      PushFrame;
      PushReturnAddress 064360;
      SetLocal 1 74;
      SetLocal 2 148;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    }
  } else {
    Jump: 064368
  }
LocReturn 064360:
  PushStack call_result;
  TraceOperation 064367 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 064368:
  TraceOperation 064368 (Je [Var (Global 203),Con 22] (Branch F (Dloc 064449)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 064373 (Je [Var (Global 202),Con 28] (Branch F (Dloc 064449)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 064378 (Print_ret "Prosser pulls a booklet out of his back pocket. \"My game manual says that the goal is getting this here house knocked down.\"");
      GamePrint "Prosser pulls a booklet out of his back pocket. \"My game manual says that the goal is getting this here house knocked down.\"\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 064449
    }
  } else {
    Jump: 064449
  }
LocOp 064449:
  TraceOperation 064449 (Je [Var (Global 203),Con 22] (Branch F (Dloc 064466)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 064453 (Je [Var (Global 202),Con 144] (Branch F (Dloc 064466)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),144)) {
      TraceOperation 064457 (Call (Floc 022042) [Con 23,Con 145,Con 143] Sp);
      PushFrame;
      PushReturnAddress 064457;
      SetLocal 1 23;
      SetLocal 2 145;
      SetLocal 3 143;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 064466
    }
  } else {
    Jump: 064466
  }
LocReturn 064457:
  PushStack call_result;
  TraceOperation 064465 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 064466:
  TraceOperation 064466 (Je [Var (Global 203),Con 23] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 064470 (Je [Var (Global 202),Con 143] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),143)) {
      TraceOperation 064474 (Print "Prosser shakes the ");
      GamePrint "Prosser shakes the ";
      TraceOperation 064483 (Print_obj (Con 144));
      Let b5 = M[002054];
      Let b6 = M[002055];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 064485 (Print ". \"Hasn't worked for months. I keep wearing it only because I think ");
      GamePrint ". \"Hasn't worked for months. I keep wearing it only because I think ";
      TraceOperation 064526 (Print_obj (Con 144));
      Let b9 = M[002054];
      Let b10 = M[002055];
      Let b11 = M[Address(MakeHiLo(b9,b10))];
      Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
      GamePrint ite_res12;
      TraceOperation 064528 (Print_ret "es are neat.\"");
      GamePrint "es are neat.\"\n";
      PopFrame;
      PopReturnAddress return_address_13;
      SetResult 1;
      JumpIndirect: (return) return_address_13
    } else {
      PopFrame;
      PopReturnAddress return_address_14;
      SetResult 0;
      JumpIndirect: (return) return_address_14
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_15;
    SetResult 0;
    JumpIndirect: (return) return_address_15
  }
--------------------------------------------------
LocRoutine 064540:
  MakeRoutineFrame 0;
  Jump: 064541
LocOp 064541:
  TraceOperation 064541 (Jz (Var (Global 139)) (Branch T (Dloc 064575)));
  Let b1 = M[008186];
  Let b2 = M[008187];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 064575
  } else {
    TraceOperation 064544 (Print_ret "\"Leave me alone,\" Prosser whimpers miserably.");
    GamePrint "\"Leave me alone,\" Prosser whimpers miserably.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 064575:
  TraceOperation 064575 (Print "\"Please step aside as I need to be able to ");
  GamePrint "\"Please step aside as I need to be able to ";
  TraceOperation 064604 (Jz (Var (Global 145)) (Branch T (Dloc 064623)));
  Let b1 = M[008198];
  Let b2 = M[008199];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 064623
  } else {
    TraceOperation 064607 (Print "clear this ");
    GamePrint "clear this ";
    TraceOperation 064614 (Print_obj (Con 171));
    Let b3 = M[002297];
    Let b4 = M[002298];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 064616 (Print_ret " away.\"");
    GamePrint " away.\"\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  }
LocOp 064623:
  TraceOperation 064623 (Print "knock ");
  GamePrint "knock ";
  TraceOperation 064628 (Je [Var (Global 120),Con 123] (Branch F (Dloc 064638)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),123)) {
    TraceOperation 064632 (Print "your");
    GamePrint "your";
    TraceOperation 064635 (Jump 064643);
    Jump: 064643
  } else {
    Jump: 064638
  }
LocOp 064638:
  TraceOperation 064638 (Print "that");
  GamePrint "that";
  Jump: 064643
LocOp 064643:
  TraceOperation 064643 (Print_ret " house down.\"");
  GamePrint " house down.\"\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 064654:
  MakeRoutineFrame 0;
  Jump: 064655
LocOp 064655:
  TraceOperation 064655 (Je [Var (Global 203),Con 120,Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),120),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 064661 (Call (Floc 057712) [Con -11247] Sp);
    PushFrame;
    PushReturnAddress 064661;
    SetLocal 1 -11247;
    MakeRoutineFrame 1;
    Jump: 057715
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 064661:
  PushStack call_result;
  TraceOperation 064668 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 064670:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 064673
LocOp 064673:
  TraceOperation 064673 (Jz (Var (Global 136)) (Branch T (Dloc 064699)));
  Let b1 = M[008180];
  Let b2 = M[008181];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 064699
  } else {
    TraceOperation 064676 (Print_ret "Ford is in the corner, snoring loudly.");
    GamePrint "Ford is in the corner, snoring loudly.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 064699:
  TraceOperation 064699 (Print_obj (Con 142));
  Let b1 = M[002036];
  Let b2 = M[002037];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 064701 (Print_ret " is here.");
  GamePrint " is here.\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 064708:
  MakeRoutineFrame 0;
  Jump: 064709
LocOp 064709:
  TraceOperation 064709 (Je [Var (Global 120),Con 142] (Branch F (Dloc 064735)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 064713 (Je [Con 142,Var (Global 201)] (Branch F (Dloc 064726)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(142,MakeHiLo(b3,b4))) {
      TraceOperation 064717 (Call (Floc 022042) [Var (Global 203),Con 30,Var (Global 202)] Sp);
      Let b5 = M[008314];
      Let b6 = M[008315];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame;
      PushReturnAddress 064717;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 30;
      SetLocal 3 MakeHiLo(b7,b8);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 064726
    }
  } else {
    Jump: 064735
  }
LocReturn 064717:
  PushStack call_result;
  TraceOperation 064725 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 064726:
  TraceOperation 064726 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 30] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 064726;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 30;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 064726:
  PushStack call_result;
  TraceOperation 064734 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 064735:
  TraceOperation 064735 (Je [Con 142,Var (Global 195)] (Branch F (Dloc 065057)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(142,MakeHiLo(b1,b2))) {
    TraceOperation 064740 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 064753)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001871];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 064744 (Print_paddr (Var (Global 40)));
      Let b6 = M[007988];
      Let b7 = M[007989];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 064746 New_line;
      GamePrint "\n";
      TraceOperation 064747 (Call (Floc 043634) [] Sp);
      PushFrame;
      PushReturnAddress 064747;
      MakeRoutineFrame 0;
      Jump: 043635
    } else {
      Jump: 064753
    }
  } else {
    Jump: 065057
  }
LocReturn 064747:
  PushStack call_result;
  TraceOperation 064752 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064753:
  TraceOperation 064753 (Je [Var (Global 202),Con 172] (Branch T (Dloc 064761)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),172)) {
    Jump: 064761
  } else {
    TraceOperation 064757 (Je [Var (Global 201),Con 172] (Branch F (Dloc 064793)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),172)) {
      Jump: 064761
    } else {
      Jump: 064793
    }
  }
LocOp 064761:
  TraceOperation 064761 (Print "\"It's not a house, it's a home.\" (Footnote 2)");
  GamePrint "\"It's not a house, it's a home.\" (Footnote 2)";
  TraceOperation 064786 New_line;
  GamePrint "\n";
  TraceOperation 064787 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 064787;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 064787:
  PushStack call_result;
  TraceOperation 064792 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064793:
  TraceOperation 064793 (Je [Var (Global 203),Con 150] (Branch F (Dloc 064816)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),150)) {
    TraceOperation 064797 (Je [Var (Global 201),Con 30] (Branch F (Dloc 064816)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 064801 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 064804 (Call (Floc 022042) [Con 22,Con 142,Var (Global 202)] Sp);
      Let b5 = M[008312];
      Let b6 = M[008313];
      PushFrame;
      PushReturnAddress 064804;
      SetLocal 1 22;
      SetLocal 2 142;
      SetLocal 3 MakeHiLo(b5,b6);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 064816
    }
  } else {
    Jump: 064816
  }
LocReturn 064804:
  PushStack call_result;
  TraceOperation 064812 (Store (Con 211) (Con 142));
  SetByte 008298 0;
  SetByte 008299 142;
  TraceOperation 064815 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 064816:
  TraceOperation 064816 (Je [Var (Global 203),Con 75] (Branch F (Dloc 064834)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 064820 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 064823 (Call (Floc 022042) [Con 75,Con 142] Sp);
    PushFrame;
    PushReturnAddress 064823;
    SetLocal 1 75;
    SetLocal 2 142;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 064834
  }
LocReturn 064823:
  PushStack call_result;
  TraceOperation 064830 (Store (Con 211) (Con 142));
  SetByte 008298 0;
  SetByte 008299 142;
  TraceOperation 064833 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 064834:
  TraceOperation 064834 (Je [Var (Global 203),Con 174] (Branch F (Dloc 064846)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 064838 (Je [Var (Global 201),Con 28] (Branch F (Dloc 064846)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 064842 (Print_paddr (Var (Global 33)));
      Let b5 = M[007974];
      Let b6 = M[007975];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 064844 New_line;
      GamePrint "\n";
      TraceOperation 064845 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 064846
    }
  } else {
    Jump: 064846
  }
LocOp 064846:
  TraceOperation 064846 (Je [Var (Global 203),Con 175] (Branch F (Dloc 064871)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),175)) {
    TraceOperation 064850 (Jl (Var (Global 137)) (Con 2) (Branch F (Dloc 064871)));
    Let b3 = M[008182];
    Let b4 = M[008183];
    if (LessThan(MakeHiLo(b3,b4),2)) {
      TraceOperation 064854 (Je [Var (Global 0),Con 149] (Branch F (Dloc 064871)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      if (Equal(MakeHiLo(b5,b6),149)) {
        TraceOperation 064858 (Je [Var (Global 201),Con 173] (Branch F (Dloc 064871)));
        Let b7 = M[008310];
        Let b8 = M[008311];
        if (Equal(MakeHiLo(b7,b8),173)) {
          TraceOperation 064862 (Print "Ford");
          GamePrint "Ford";
          TraceOperation 064865 (Call (Floc 065476) [] Sp);
          PushFrame;
          PushReturnAddress 064865;
          MakeRoutineFrame 0;
          Jump: 065477
        } else {
          Jump: 064871
        }
      } else {
        Jump: 064871
      }
    } else {
      Jump: 064871
    }
  } else {
    Jump: 064871
  }
LocReturn 064865:
  PushStack call_result;
  TraceOperation 064870 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 064871:
  TraceOperation 064871 (Je [Var (Global 203),Con 175] (Branch F (Dloc 064899)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),175)) {
    TraceOperation 064875 (Je [Var (Global 201),Con 163,Con 173] (Branch F (Dloc 064899)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),163),Equal(MakeHiLo(b3,b4),173))) {
      TraceOperation 064881 (Jz (Var (Global 122)) (Branch T (Dloc 064899)));
      Let b5 = M[008152];
      Let b6 = M[008153];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 064899
      } else {
        TraceOperation 064884 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 064887 (Call (Floc 022042) [Con 22,Con 142,Con 163] Sp);
        PushFrame;
        PushReturnAddress 064887;
        SetLocal 1 22;
        SetLocal 2 142;
        SetLocal 3 163;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 022057
      }
    } else {
      Jump: 064899
    }
  } else {
    Jump: 064899
  }
LocReturn 064887:
  PushStack call_result;
  TraceOperation 064895 (Store (Con 211) (Con 142));
  SetByte 008298 0;
  SetByte 008299 142;
  TraceOperation 064898 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 064899:
  TraceOperation 064899 (Jz (Var (Global 122)) (Branch F (Dloc 065035)));
  Let b1 = M[008152];
  Let b2 = M[008153];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 064903 (Jl (Var (Global 130)) (Con 3) (Branch F (Dloc 064946)));
    Let b3 = M[008168];
    Let b4 = M[008169];
    if (LessThan(MakeHiLo(b3,b4),3)) {
      TraceOperation 064907 (Je [Var (Global 0),Con 134] (Branch F (Dloc 064946)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      if (Equal(MakeHiLo(b5,b6),134)) {
        TraceOperation 064911 (Print "\"Shut up and drink your beer. You're going to need it.\"");
        GamePrint "\"Shut up and drink your beer. You're going to need it.\"";
        TraceOperation 064942 New_line;
        GamePrint "\n";
        TraceOperation 064943 (Jump 065021);
        Jump: 065021
      } else {
        Jump: 064946
      }
    } else {
      Jump: 064946
    }
  } else {
    Jump: 065035
  }
LocOp 064946:
  TraceOperation 064946 (Print "Ford, busy ");
  GamePrint "Ford, busy ";
  TraceOperation 064953 (Je [Var (Global 137),Con 2] (Branch F (Dloc 064973)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 064957 (Print "talking to Prosser");
    GamePrint "talking to Prosser";
    TraceOperation 064970 (Jump 064984);
    Jump: 064984
  } else {
    Jump: 064973
  }
LocOp 064973:
  TraceOperation 064973 (Print "scanning the sky ");
  GamePrint "scanning the sky ";
  Jump: 064984
LocOp 064984:
  TraceOperation 064984 (Je [Var (Global 0),Con 134] (Branch F (Dloc 065000)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),134)) {
    TraceOperation 064988 (Print "through the window");
    GamePrint "through the window";
    TraceOperation 064997 (Jump 065009);
    Jump: 065009
  } else {
    Jump: 065000
  }
LocOp 065000:
  TraceOperation 065000 (Je [Var (Global 137),Con 2] (Branch T (Dloc 065009)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (Equal(MakeHiLo(b1,b2),2)) {
    Jump: 065009
  } else {
    TraceOperation 065004 (Print "for something");
    GamePrint "for something";
    Jump: 065009
  }
LocOp 065009:
  TraceOperation 065009 (Print ", ignores you.");
  GamePrint ", ignores you.";
  TraceOperation 065020 New_line;
  GamePrint "\n";
  Jump: 065021
LocOp 065021:
  TraceOperation 065021 (Call (Floc 022320) [Con -32630,Con 2] Sp);
  PushFrame;
  PushReturnAddress 065021;
  SetLocal 1 -32630;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 065021:
  PushStack call_result;
  TraceOperation 065029 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 065034 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 065035:
  TraceOperation 065035 (Print "Ford seems deep in thought.");
  GamePrint "Ford seems deep in thought.";
  TraceOperation 065050 New_line;
  GamePrint "\n";
  TraceOperation 065051 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 065051;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 065051:
  PushStack call_result;
  TraceOperation 065056 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065057:
  TraceOperation 065057 (Je [Var (Global 203),Con 75,Con 150,Con 15] (Branch T (Dloc 065070)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),75),Equal(MakeHiLo(b1,b2),150)),Equal(MakeHiLo(b1,b2),15))) {
    Jump: 065070
  } else {
    TraceOperation 065064 (Je [Var (Global 203),Con 22,Con 23] (Branch F (Dloc 065095)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),22),Equal(MakeHiLo(b3,b4),23))) {
      Jump: 065070
    } else {
      Jump: 065095
    }
  }
LocOp 065070:
  TraceOperation 065070 (Je [Var (Global 201),Con 142] (Branch F (Dloc 065095)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 065074 (Jz (Var (Global 136)) (Branch T (Dloc 065095)));
    Let b3 = M[008180];
    Let b4 = M[008181];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065095
    } else {
      TraceOperation 065077 (Print "Ford is sleeping!");
      GamePrint "Ford is sleeping!";
      TraceOperation 065088 New_line;
      GamePrint "\n";
      TraceOperation 065089 (Call (Floc 043634) [] Sp);
      PushFrame;
      PushReturnAddress 065089;
      MakeRoutineFrame 0;
      Jump: 043635
    }
  } else {
    Jump: 065095
  }
LocReturn 065089:
  PushStack call_result;
  TraceOperation 065094 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065095:
  TraceOperation 065095 (Je [Var (Global 203),Con 66] (Branch F (Dloc 065114)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 065099 (Je [Var (Global 202),Con 142] (Branch F (Dloc 065114)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),142)) {
      TraceOperation 065103 (Jz (Var (Global 136)) (Branch T (Dloc 065114)));
      Let b5 = M[008180];
      Let b6 = M[008181];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 065114
      } else {
        TraceOperation 065106 (Call (Floc 022042) [Con 75,Con 142] Sp);
        PushFrame;
        PushReturnAddress 065106;
        SetLocal 1 75;
        SetLocal 2 142;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      }
    } else {
      Jump: 065114
    }
  } else {
    Jump: 065114
  }
LocReturn 065106:
  PushStack call_result;
  TraceOperation 065113 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 065114:
  TraceOperation 065114 (Je [Var (Global 151),Con 1] (Branch F (Dloc 065180)));
  Let b1 = M[008210];
  Let b2 = M[008211];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 065119 (Jin (Con 142) (Var (Global 0)) (Branch T (Dloc 065180)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[002033];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      Jump: 065180
    } else {
      TraceOperation 065123 (Je [Var (Global 203),Con 69] (Branch F (Dloc 065180)));
      Let b6 = M[008314];
      Let b7 = M[008315];
      if (Equal(MakeHiLo(b6,b7),69)) {
        TraceOperation 065127 (Print "In a state of anxiety and confusion you follow Ford down the lane...");
        GamePrint "In a state of anxiety and confusion you follow Ford down the lane...";
        TraceOperation 065168 New_line;
        GamePrint "\n";
        TraceOperation 065169 New_line;
        GamePrint "\n";
        TraceOperation 065170 (Get_parent (Con 142) Sp);
        Let b8 = M[002033];
        PushStack Widen(b8);
        TraceOperation 065173 (Call (Floc 042574) [Var Sp] Sp);
        PopStack popped9;
        PushFrame;
        PushReturnAddress 065173;
        SetLocal 1 popped9;
        MakeRoutineFrame 2;
        SetLocal 2 1;
        Jump: 042579
      } else {
        Jump: 065180
      }
    }
  } else {
    Jump: 065180
  }
LocReturn 065173:
  PushStack call_result;
  TraceOperation 065179 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065180:
  TraceOperation 065180 (Je [Var (Global 151),Con 3] (Branch F (Dloc 065195)));
  Let b1 = M[008210];
  Let b2 = M[008211];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 065184 (Je [Var (Global 203),Con 69] (Branch F (Dloc 065195)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),69)) {
      TraceOperation 065188 (Call (Floc 043620) [Con 19] Sp);
      PushFrame;
      PushReturnAddress 065188;
      SetLocal 1 19;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 065195
    }
  } else {
    Jump: 065195
  }
LocReturn 065188:
  PushStack call_result;
  TraceOperation 065194 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065195:
  TraceOperation 065195 (Je [Var (Global 203),Con 69] (Branch F (Dloc 065210)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 065199 (Je [Var (Global 151),Con 5] (Branch F (Dloc 065210)));
    Let b3 = M[008210];
    Let b4 = M[008211];
    if (Equal(MakeHiLo(b3,b4),5)) {
      TraceOperation 065203 (Call (Floc 043620) [Con 16] Sp);
      PushFrame;
      PushReturnAddress 065203;
      SetLocal 1 16;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 065210
    }
  } else {
    Jump: 065210
  }
LocReturn 065203:
  PushStack call_result;
  TraceOperation 065209 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 065210:
  TraceOperation 065210 (Je [Var (Global 203),Con 130,Con 167] (Branch F (Dloc 065242)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),130),Equal(MakeHiLo(b1,b2),167))) {
    TraceOperation 065216 (Jz (Var (Global 136)) (Branch T (Dloc 065242)));
    Let b3 = M[008180];
    Let b4 = M[008181];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065242
    } else {
      TraceOperation 065219 (Print_ret "Rather like trying to wake the dead.");
      GamePrint "Rather like trying to wake the dead.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 065242
  }
LocOp 065242:
  TraceOperation 065242 (Je [Var (Global 203),Con 22] (Branch F (Dloc 065254)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 065246 (Je [Var (Global 202),Con 28] (Branch F (Dloc 065254)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 065250 (Print_paddr (Var (Global 33)));
      Let b5 = M[007974];
      Let b6 = M[007975];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 065252 New_line;
      GamePrint "\n";
      TraceOperation 065253 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 065254
    }
  } else {
    Jump: 065254
  }
LocOp 065254:
  TraceOperation 065254 (Je [Var (Global 203),Con 22] (Branch F (Dloc 065373)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 065259 (Je [Var (Global 202),Con 163] (Branch F (Dloc 065373)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),163)) {
      TraceOperation 065264 (Print_ret "Ford explains that the Earth has been demolished. To cheer you up, he points out that there are an awful lot of little planets like that around, and the Earth wasn't even a particularly nice one.");
      GamePrint "Ford explains that the Earth has been demolished. To cheer you up, he points out that there are an awful lot of little planets like that around, and the Earth wasn't even a particularly nice one.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 065373
    }
  } else {
    Jump: 065373
  }
LocOp 065373:
  TraceOperation 065373 (Je [Var (Global 203),Con 66] (Branch F (Dloc 065402)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 065377 (Je [Var (Global 201),Con 7] (Branch F (Dloc 065402)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),7)) {
      TraceOperation 065381 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 065402)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[001871];
      if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
        TraceOperation 065385 (Print_ret "You can't reach him in this wind.");
        GamePrint "You can't reach him in this wind.\n";
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 1;
        JumpIndirect: (return) return_address_8
      } else {
        Jump: 065402
      }
    } else {
      Jump: 065402
    }
  } else {
    Jump: 065402
  }
LocOp 065402:
  TraceOperation 065402 (Je [Var (Global 203),Con 74] (Branch F (Dloc 065434)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 065406 (Test_attr (Con 148) (Con 6) (Branch T (Dloc 065418)));
    Let b3 = M[002083];
    if (TestBit(b3,1)) {
      Jump: 065418
    } else {
      TraceOperation 065410 (Call (Floc 022042) [Con 74,Con 148] Sp);
      PushFrame;
      PushReturnAddress 065410;
      SetLocal 1 74;
      SetLocal 2 148;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    }
  } else {
    Jump: 065434
  }
LocReturn 065410:
  PushStack call_result;
  TraceOperation 065417 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 065418:
  TraceOperation 065418 (Jz (Var (Global 136)) (Branch T Dfalse));
  Let b1 = M[008180];
  Let b2 = M[008181];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 065421 (Print_ret "\"Zzzzzzz...\"");
    GamePrint "\"Zzzzzzz...\"\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  }
LocOp 065434:
  TraceOperation 065434 (Je [Var (Global 203),Con 61] (Branch F (Dloc 065454)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 065438 (Jz (Var (Global 136)) (Branch T (Dloc 065454)));
    Let b3 = M[008180];
    Let b4 = M[008181];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 065454
    } else {
      TraceOperation 065441 (Print_ret "He's sleeping.");
      GamePrint "He's sleeping.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 065454
  }
LocOp 065454:
  TraceOperation 065454 (Je [Var (Global 203),Con 23] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 065458 (Je [Var (Global 202),Con 139] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),139)) {
      TraceOperation 065462 (Je [Var (Global 137),Con 0,Con 1] (Branch F Dfalse));
      Let b5 = M[008182];
      Let b6 = M[008183];
      if (LogOr(Equal(MakeHiLo(b5,b6),0),Equal(MakeHiLo(b5,b6),1))) {
        TraceOperation 065468 (Call (Floc 022042) [Con 124,Con 139] Sp);
        PushFrame;
        PushReturnAddress 065468;
        SetLocal 1 124;
        SetLocal 2 139;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      } else {
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 0;
        JumpIndirect: (return) return_address_7
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 0;
      JumpIndirect: (return) return_address_8
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
LocReturn 065468:
  PushStack call_result;
  TraceOperation 065475 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 065476:
  MakeRoutineFrame 0;
  Jump: 065477
LocOp 065477:
  TraceOperation 065477 (Clear_attr (Con 148) (Con 6));
  Let b1 = M[002083];
  SetByte 002083 ClearBit(b1,1);
  TraceOperation 065480 (Call (Floc 022320) [Con -32630,Con 2] Sp);
  PushFrame;
  PushReturnAddress 065480;
  SetLocal 1 -32630;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 065480:
  PushStack call_result;
  TraceOperation 065488 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 065493 (Store (Con 153) (Con 2));
  SetByte 008182 0;
  SetByte 008183 2;
  TraceOperation 065496 (Print " looks startled, then guilty. He starts to say something and stops. He starts to say something else and stops. Suddenly he seems to see the ");
  GamePrint " looks startled, then guilty. He starts to say something and stops. He starts to say something else and stops. Suddenly he seems to see the ";
  TraceOperation 065567 (Print_obj (Con 166));
  Let b2 = M[002252];
  Let b3 = M[002253];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 065569 (Print " for the first time, stops starting to say things and starts.\n\nHe seems to come to a momentous decision, says he has something of Earth-shattering importance to tell you, and stresses the importance of a quick drink at the Horse 'n Groom.\n\n");
  GamePrint " for the first time, stops starting to say things and starts.\n\nHe seems to come to a momentous decision, says he has something of Earth-shattering importance to tell you, and stresses the importance of a quick drink at the Horse 'n Groom.\n\n";
  TraceOperation 065712 (Call (Floc 057888) [Con -11244] Sp);
  PushFrame;
  PushReturnAddress 065712;
  SetLocal 1 -11244;
  MakeRoutineFrame 1;
  Jump: 057891
LocReturn 065712:
  PushStack call_result;
  TraceOperation 065719 (Print " Ford goes off for a quiet word with Prosser. From where you're lying, you cannot hear what's happening, although they seem deeply engrossed in ");
  GamePrint " Ford goes off for a quiet word with Prosser. From where you're lying, you cannot hear what's happening, although they seem deeply engrossed in ";
  TraceOperation 065806 (Print_obj (Con 148));
  Let b1 = M[002090];
  Let b2 = M[002091];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 065808 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 065812:
  MakeRoutineFrame 0;
  Jump: 065813
LocOp 065813:
  TraceOperation 065813 (Call (Floc 022320) [Con -32630,Con -1] Sp);
  PushFrame;
  PushReturnAddress 065813;
  SetLocal 1 -32630;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 065813:
  PushStack call_result;
  TraceOperation 065822 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 065827 (Call (Floc 092774) [Con 31] Sp);
  PushFrame;
  PushReturnAddress 065827;
  SetLocal 1 31;
  MakeRoutineFrame 1;
  Jump: 092777
LocReturn 065827:
  PushStack call_result;
  TraceOperation 065833 (Jz (Var Sp) (Branch T (Dloc 066486)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 066486
  } else {
    TraceOperation 065837 (Inc (Con 150));
    Let b2 = M[008176];
    Let b3 = M[008177];
    SetByte 008176 HiByte(Add(MakeHiLo(b2,b3),1));
    SetByte 008177 LoByte(Add(MakeHiLo(b2,b3),1));
    TraceOperation 065839 (Je [Var (Global 134),Con 1] (Branch F (Dloc 065942)));
    Let b4 = M[008176];
    Let b5 = M[008177];
    if (Equal(MakeHiLo(b4,b5),1)) {
      TraceOperation 065844 (Insert_obj (Con 142) (Var (Global 0)));
      Let b6 = M[007908];
      Let b7 = M[007909];
      Let b8 = M[002033];
      if (IsZero(Widen(b8))) {} else {
        Let b9 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
        if (Equal(Widen(b9),142)) {
          Let b10 = M[002034];
          SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b10));
        } else {
          Let loop_var11 = Widen(b9);
          Label 12: {
            Let b13 = M[Offset(Offset(000751,Mul(loop_var11,9)),5)];
            if (Equal(Widen(b13),142)) {
              Let b14 = M[002034];
              SetByte Offset(Offset(000751,Mul(loop_var11,9)),5) LoByte(Widen(b14));
            } else {
              Assign loop_var11 = Widen(b13);
              Goto: Label 12
            }
          }
        }
      }
      SetByte 002033 b7;
      Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
      SetByte 002034 LoByte(Widen(b15));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 142;
      TraceOperation 065847 New_line;
      GamePrint "\n";
      TraceOperation 065848 (Print "\"This looks like that incredible new");
      GamePrint "\"This looks like that incredible new";
      TraceOperation 065865 (Print_paddr (Var (Global 11)));
      Let b16 = M[007930];
      Let b17 = M[007931];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b16,b17)));
      TraceOperation 065867 (Print " spaceship, ");
      GamePrint " spaceship, ";
      TraceOperation 065876 (Print_obj (Con 220));
      Let b18 = M[002738];
      Let b19 = M[002739];
      Let b20 = M[Address(MakeHiLo(b18,b19))];
      Let ite_res21 = Ite((IsZeroByte(b20),"",GetText(Offset(Address(MakeHiLo(b18,b19)),1))));
      GamePrint ite_res21;
      TraceOperation 065878 (Print "!\" says Ford, with growing excitement.");
      GamePrint "!\" says Ford, with growing excitement.";
      TraceOperation 065901 New_line;
      GamePrint "\n";
      TraceOperation 065902 New_line;
      GamePrint "\n";
      TraceOperation 065903 (Print_paddr (Var (Global 21)));
      Let b22 = M[007950];
      Let b23 = M[007951];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b22,b23)));
      TraceOperation 065905 (Print_obj (Con 198));
      Let b24 = M[002540];
      Let b25 = M[002541];
      Let b26 = M[Address(MakeHiLo(b24,b25))];
      Let ite_res27 = Ite((IsZeroByte(b26),"",GetText(Offset(Address(MakeHiLo(b24,b25)),1))));
      GamePrint ite_res27;
      TraceOperation 065907 (Print ". We have just picked up two hitchhikers");
      GamePrint ". We have just picked up two hitchhikers";
      TraceOperation 065932 (Call (Floc 057772) [Con -11241] Sp);
      PushFrame;
      PushReturnAddress 065932;
      SetLocal 1 -11241;
      MakeRoutineFrame 1;
      Jump: 057775
    } else {
      Jump: 065942
    }
  }
LocReturn 065932:
  PushStack call_result;
  TraceOperation 065939 (Print_ret "\"");
  GamePrint "\"\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 065942:
  TraceOperation 065942 (Je [Var (Global 134),Con 2] (Branch F (Dloc 066017)));
  Let b1 = M[008176];
  Let b2 = M[008177];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 065947 New_line;
    GamePrint "\n";
    TraceOperation 065948 (Print "\"Come on, let's look for the Bridge.\" You follow Ford, and eventually come to the...");
    GamePrint "\"Come on, let's look for the Bridge.\" You follow Ford, and eventually come to the...";
    TraceOperation 066005 New_line;
    GamePrint "\n";
    TraceOperation 066006 New_line;
    GamePrint "\n";
    TraceOperation 066007 (Call (Floc 042574) [Con 201] Sp);
    PushFrame;
    PushReturnAddress 066007;
    SetLocal 1 201;
    MakeRoutineFrame 2;
    SetLocal 2 1;
    Jump: 042579
  } else {
    Jump: 066017
  }
LocReturn 066007:
  PushStack call_result;
  TraceOperation 066013 (Insert_obj (Con 142) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002033];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),142)) {
      Let b5 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),142)) {
          Let b9 = M[002034];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 002033 b2;
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  SetByte 002034 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 142;
  TraceOperation 066016 Rtrue;
  PopFrame;
  PopReturnAddress return_address_11;
  SetResult 1;
  JumpIndirect: (return) return_address_11
LocOp 066017:
  TraceOperation 066017 (Je [Var (Global 134),Con 3] (Branch F (Dloc 066243)));
  Let b1 = M[008176];
  Let b2 = M[008177];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 066022 (Je [Var (Global 0),Con 201] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),201)) {
      TraceOperation 066026 New_line;
      GamePrint "\n";
      TraceOperation 066027 (Print "\"Hey, Zaphod, how ya doing?\" says Ford. He's cool. \"Not bad, Ford. Great to see you,\" replies Zaphod. He's cooler. You suddenly realise that the woman is Tricia MacMillan (\"Call me ");
      GamePrint "\"Hey, Zaphod, how ya doing?\" says Ford. He's cool. \"Not bad, Ford. Great to see you,\" replies Zaphod. He's cooler. You suddenly realise that the woman is Tricia MacMillan (\"Call me ";
      TraceOperation 066148 (Print_obj (Con 194));
      Let b5 = M[002504];
      Let b6 = M[002505];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 066150 (Print_ret "\"), whom you were trying to pick up at a party in Islington just a few weeks ago, and that Zaphod is the guy she eventually left the party with! Odd.");
      GamePrint "\"), whom you were trying to pick up at a party in Islington just a few weeks ago, and that Zaphod is the guy she eventually left the party with! Odd.\n";
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    } else {
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 0;
      JumpIndirect: (return) return_address_10
    }
  } else {
    Jump: 066243
  }
LocOp 066243:
  TraceOperation 066243 (Je [Var (Global 134),Con 4] (Branch F Dfalse));
  Let b1 = M[008176];
  Let b2 = M[008177];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 066247 (Insert_obj (Con 142) (Con 219));
    Let b3 = M[002033];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),142)) {
        Let b5 = M[002034];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),142)) {
            Let b9 = M[002034];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002033 219;
    Let b10 = M[002728];
    SetByte 002034 LoByte(Widen(b10));
    SetByte 002728 142;
    TraceOperation 066250 (Insert_obj (Con 195) (Con 219));
    Let b11 = M[002510];
    if (IsZero(Widen(b11))) {} else {
      Let b12 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
      if (Equal(Widen(b12),195)) {
        Let b13 = M[002511];
        SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b13));
      } else {
        Let loop_var14 = Widen(b12);
        Label 15: {
          Let b16 = M[Offset(Offset(000751,Mul(loop_var14,9)),5)];
          if (Equal(Widen(b16),195)) {
            Let b17 = M[002511];
            SetByte Offset(Offset(000751,Mul(loop_var14,9)),5) LoByte(Widen(b17));
          } else {
            Assign loop_var14 = Widen(b16);
            Goto: Label 15
          }
        }
      }
    }
    SetByte 002510 219;
    Let b18 = M[002728];
    SetByte 002511 LoByte(Widen(b18));
    SetByte 002728 195;
    TraceOperation 066253 (Insert_obj (Con 194) (Con 219));
    Let b19 = M[002501];
    if (IsZero(Widen(b19))) {} else {
      Let b20 = M[Offset(Offset(000751,Mul(Widen(b19),9)),6)];
      if (Equal(Widen(b20),194)) {
        Let b21 = M[002502];
        SetByte Offset(Offset(000751,Mul(Widen(b19),9)),6) LoByte(Widen(b21));
      } else {
        Let loop_var22 = Widen(b20);
        Label 23: {
          Let b24 = M[Offset(Offset(000751,Mul(loop_var22,9)),5)];
          if (Equal(Widen(b24),194)) {
            Let b25 = M[002502];
            SetByte Offset(Offset(000751,Mul(loop_var22,9)),5) LoByte(Widen(b25));
          } else {
            Assign loop_var22 = Widen(b24);
            Goto: Label 23
          }
        }
      }
    }
    SetByte 002501 219;
    Let b26 = M[002728];
    SetByte 002502 LoByte(Widen(b26));
    SetByte 002728 194;
    TraceOperation 066256 (Insert_obj (Con 193) (Con 201));
    Let b27 = M[002492];
    if (IsZero(Widen(b27))) {} else {
      Let b28 = M[Offset(Offset(000751,Mul(Widen(b27),9)),6)];
      if (Equal(Widen(b28),193)) {
        Let b29 = M[002493];
        SetByte Offset(Offset(000751,Mul(Widen(b27),9)),6) LoByte(Widen(b29));
      } else {
        Let loop_var30 = Widen(b28);
        Label 31: {
          Let b32 = M[Offset(Offset(000751,Mul(loop_var30,9)),5)];
          if (Equal(Widen(b32),193)) {
            Let b33 = M[002493];
            SetByte Offset(Offset(000751,Mul(loop_var30,9)),5) LoByte(Widen(b33));
          } else {
            Assign loop_var30 = Widen(b32);
            Goto: Label 31
          }
        }
      }
    }
    SetByte 002492 201;
    Let b34 = M[002566];
    SetByte 002493 LoByte(Widen(b34));
    SetByte 002566 193;
    TraceOperation 066259 (Insert_obj (Con 141) (Con 201));
    Let b35 = M[002024];
    if (IsZero(Widen(b35))) {} else {
      Let b36 = M[Offset(Offset(000751,Mul(Widen(b35),9)),6)];
      if (Equal(Widen(b36),141)) {
        Let b37 = M[002025];
        SetByte Offset(Offset(000751,Mul(Widen(b35),9)),6) LoByte(Widen(b37));
      } else {
        Let loop_var38 = Widen(b36);
        Label 39: {
          Let b40 = M[Offset(Offset(000751,Mul(loop_var38,9)),5)];
          if (Equal(Widen(b40),141)) {
            Let b41 = M[002025];
            SetByte Offset(Offset(000751,Mul(loop_var38,9)),5) LoByte(Widen(b41));
          } else {
            Assign loop_var38 = Widen(b40);
            Goto: Label 39
          }
        }
      }
    }
    SetByte 002024 201;
    Let b42 = M[002566];
    SetByte 002025 LoByte(Widen(b42));
    SetByte 002566 141;
    TraceOperation 066262 (Clear_attr (Con 193) (Con 27));
    Let b43 = M[002491];
    SetByte 002491 ClearBit(b43,4);
    TraceOperation 066265 (Clear_attr (Con 193) (Con 21));
    Let b44 = M[002490];
    SetByte 002490 ClearBit(b44,2);
    TraceOperation 066268 (Call (Floc 022340) [Con -32630] Sp);
    PushFrame;
    PushReturnAddress 066268;
    SetLocal 1 -32630;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    PopFrame;
    PopReturnAddress return_address_45;
    SetResult 0;
    JumpIndirect: (return) return_address_45
  }
LocReturn 066268:
  PushStack call_result;
  TraceOperation 066275 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 066280 (Call (Floc 022320) [Con -17989,Con -1] Sp);
  PushFrame;
  PushReturnAddress 066280;
  SetLocal 1 -17989;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 066280:
  PushStack call_result;
  TraceOperation 066289 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 066294 (Je [Var (Global 0),Con 201] (Branch F Dfalse));
  Let b2 = M[007908];
  Let b3 = M[007909];
  if (Equal(MakeHiLo(b2,b3),201)) {
    TraceOperation 066298 (Store (Con 167) (Con 3));
    SetByte 008210 0;
    SetByte 008211 3;
    TraceOperation 066301 (Call (Floc 022320) [Con 16277,Con 2] Sp);
    PushFrame;
    PushReturnAddress 066301;
    SetLocal 1 16277;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocReturn 066301:
  PushStack call_result;
  TraceOperation 066309 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 066314 New_line;
  GamePrint "\n";
  TraceOperation 066315 (Print "\"Like my spaceship, Ford?\" Zaphod asks. \"YOUR spaceship?\" says Ford, losing his cool for a second. \"Yeah, I stole it,\" Zaphod admits. \"I'm gonna use it to find");
  GamePrint "\"Like my spaceship, Ford?\" Zaphod asks. \"YOUR spaceship?\" says Ford, losing his cool for a second. \"Yeah, I stole it,\" Zaphod admits. \"I'm gonna use it to find";
  TraceOperation 066424 (Print_paddr (Var (Global 17)));
  Let b2 = M[007942];
  Let b3 = M[007943];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 066426 (Print ". Let's go sit in the sauna while I explain.\" Zaphod, Ford, and ");
  GamePrint ". Let's go sit in the sauna while I explain.\" Zaphod, Ford, and ";
  TraceOperation 066469 (Print_obj (Con 194));
  Let b4 = M[002504];
  Let b5 = M[002505];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
  GamePrint ite_res7;
  TraceOperation 066471 (Print_ret " all head off to port.");
  GamePrint " all head off to port.\n";
  PopFrame;
  PopReturnAddress return_address_8;
  SetResult 1;
  JumpIndirect: (return) return_address_8
LocOp 066486:
  TraceOperation 066486 (Je [Var (Global 0),Con 121] (Branch F (Dloc 067143)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 066491 (Test_attr (Con 108) (Con 5) (Branch F (Dloc 066863)));
    Let b3 = M[001723];
    if (TestBit(b3,2)) {
      TraceOperation 066496 (Inc (Con 151));
      Let b4 = M[008178];
      Let b5 = M[008179];
      SetByte 008178 HiByte(Add(MakeHiLo(b4,b5),1));
      SetByte 008179 LoByte(Add(MakeHiLo(b4,b5),1));
      TraceOperation 066498 (Je [Var (Global 135),Con 1] (Branch F (Dloc 066641)));
      Let b6 = M[008178];
      Let b7 = M[008179];
      if (Equal(MakeHiLo(b6,b7),1)) {
        TraceOperation 066503 New_line;
        GamePrint "\n";
        TraceOperation 066504 (Print_ret "The guard releases you and Ford and begins cycling the air in the airlock. \"Hey, guard!\" shouts Ford, \"do you really enjoy this sort of thing? Shouting, stomping around, shooting people, is it really a fulfilling career?\"");
        GamePrint "The guard releases you and Ford and begins cycling the air in the airlock. \"Hey, guard!\" shouts Ford, \"do you really enjoy this sort of thing? Shouting, stomping around, shooting people, is it really a fulfilling career?\"\n";
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 1;
        JumpIndirect: (return) return_address_8
      } else {
        Jump: 066641
      }
    } else {
      Jump: 066863
    }
  } else {
    Jump: 067143
  }
LocOp 066641:
  TraceOperation 066641 (Je [Var (Global 135),Con 6] (Branch F (Dloc 066821)));
  Let b1 = M[008178];
  Let b2 = M[008179];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 066646 (Call (Floc 022340) [Con -32630] Sp);
    PushFrame;
    PushReturnAddress 066646;
    SetLocal 1 -32630;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    Jump: 066821
  }
LocReturn 066646:
  PushStack call_result;
  TraceOperation 066653 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 066658 (Insert_obj (Con 141) (Con 142));
  Let b2 = M[002024];
  if (IsZero(Widen(b2))) {} else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b3),141)) {
      Let b4 = M[002025];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
    } else {
      Let loop_var5 = Widen(b3);
      Label 6: {
        Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
        if (Equal(Widen(b7),141)) {
          Let b8 = M[002025];
          SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
        } else {
          Assign loop_var5 = Widen(b7);
          Goto: Label 6
        }
      }
    }
  }
  SetByte 002024 142;
  Let b9 = M[002035];
  SetByte 002025 LoByte(Widen(b9));
  SetByte 002035 141;
  TraceOperation 066661 (Clear_attr (Con 141) (Con 27));
  Let b10 = M[002023];
  SetByte 002023 ClearBit(b10,4);
  TraceOperation 066664 (Store (Con 132) (Con 0));
  SetByte 008140 0;
  SetByte 008141 0;
  TraceOperation 066667 (Set_attr (Con 121) (Con 4));
  Let b11 = M[001840];
  SetByte 001840 SetBit(b11,3);
  TraceOperation 066670 New_line;
  GamePrint "\n";
  TraceOperation 066671 (Print "The guard says, \"");
  GamePrint "The guard says, \"";
  TraceOperation 066684 (Call (Floc 043468) [Con 111,Con 31] Sp);
  PushFrame;
  PushReturnAddress 066684;
  SetLocal 1 111;
  SetLocal 2 31;
  MakeRoutineFrame 2;
  Jump: 043473
LocReturn 066684:
  PushStack call_result;
  TraceOperation 066691 (Jz (Var Sp) (Branch T (Dloc 066769)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 066769
  } else {
    TraceOperation 066695 (Print "Well, all things considered, I guess I like being a guard. Especially the shouting. Resistance is useless!\"");
    GamePrint "Well, all things considered, I guess I like being a guard. Especially the shouting. Resistance is useless!\"";
    TraceOperation 066766 (Jump 066778);
    Jump: 066778
  }
LocOp 066769:
  TraceOperation 066769 (Print "I");
  GamePrint "I";
  TraceOperation 066772 (Call (Floc 080570) [Con 3] Sp);
  PushFrame;
  PushReturnAddress 066772;
  SetLocal 1 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 080577
LocReturn 066772:
  PushStack call_result;
  Jump: 066778
LocOp 066778:
  TraceOperation 066778 (Print " He throws you and Ford into the airlock and closes the door.");
  GamePrint " He throws you and Ford into the airlock and closes the door.";
  TraceOperation 066809 New_line;
  GamePrint "\n";
  TraceOperation 066810 New_line;
  GamePrint "\n";
  TraceOperation 066811 (Call (Floc 042574) [Con 101] Sp);
  PushFrame;
  PushReturnAddress 066811;
  SetLocal 1 101;
  MakeRoutineFrame 2;
  SetLocal 2 1;
  Jump: 042579
LocReturn 066811:
  PushStack call_result;
  TraceOperation 066817 (Insert_obj (Con 142) (Con 101));
  Let b1 = M[002033];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),142)) {
      Let b3 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),142)) {
          Let b7 = M[002034];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002033 101;
  Let b8 = M[001666];
  SetByte 002034 LoByte(Widen(b8));
  SetByte 001666 142;
  TraceOperation 066820 Rtrue;
  PopFrame;
  PopReturnAddress return_address_9;
  SetResult 1;
  JumpIndirect: (return) return_address_9
LocOp 066821:
  TraceOperation 066821 New_line;
  GamePrint "\n";
  TraceOperation 066822 (Print_ret "Ford continues trying to talk the guard into a sudden career change.");
  GamePrint "Ford continues trying to talk the guard into a sudden career change.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 066863:
  TraceOperation 066863 (Insert_obj (Con 1) (Con 31));
  Let b1 = M[000764];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),1)) {
      Let b3 = M[000765];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),1)) {
          Let b7 = M[000765];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 000764 31;
  Let b8 = M[001036];
  SetByte 000765 LoByte(Widen(b8));
  SetByte 001036 1;
  TraceOperation 066866 (Call (Floc 022340) [Con -32630] Sp);
  PushFrame;
  PushReturnAddress 066866;
  SetLocal 1 -32630;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 066866:
  PushStack call_result;
  TraceOperation 066873 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 066878 (Store (Con 152) (Con 1));
  SetByte 008180 0;
  SetByte 008181 1;
  TraceOperation 066881 (Jin (Con 122) (Con 142) (Branch F (Dloc 066888)));
  Let b2 = M[001853];
  if (Equal(142,Widen(b2))) {
    TraceOperation 066885 (Insert_obj (Con 122) (Con 141));
    Let b3 = M[001853];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),122)) {
        Let b5 = M[001854];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),122)) {
            Let b9 = M[001854];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 001853 141;
    Let b10 = M[002026];
    SetByte 001854 LoByte(Widen(b10));
    SetByte 002026 122;
    Jump: 066888
  } else {
    Jump: 066888
  }
LocOp 066888:
  TraceOperation 066888 (Jin (Con 139) (Con 142) (Branch F (Dloc 066895)));
  Let b1 = M[002006];
  if (Equal(142,Widen(b1))) {
    TraceOperation 066892 (Insert_obj (Con 139) (Var (Global 0)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[002006];
    if (IsZero(Widen(b4))) {} else {
      Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
      if (Equal(Widen(b5),139)) {
        Let b6 = M[002007];
        SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
      } else {
        Let loop_var7 = Widen(b5);
        Label 8: {
          Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
          if (Equal(Widen(b9),139)) {
            Let b10 = M[002007];
            SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
          } else {
            Assign loop_var7 = Widen(b9);
            Goto: Label 8
          }
        }
      }
    }
    SetByte 002006 b3;
    Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
    SetByte 002007 LoByte(Widen(b11));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 139;
    Jump: 066895
  } else {
    Jump: 066895
  }
LocOp 066895:
  TraceOperation 066895 (Insert_obj (Con 141) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002024];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),141)) {
      Let b5 = M[002025];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),141)) {
          Let b9 = M[002025];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 002024 b2;
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  SetByte 002025 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 141;
  TraceOperation 066898 (Clear_attr (Con 141) (Con 21));
  Let b11 = M[002022];
  SetByte 002022 ClearBit(b11,2);
  TraceOperation 066901 New_line;
  GamePrint "\n";
  TraceOperation 066902 (Print "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ");
  GamePrint "Ford yawns. \"Matter transference always tires me out. I'm going to take a nap.\" He places something on top of his satchel. \"If you have any questions, here's ";
  TraceOperation 066993 (Print_paddr (Var (Global 37)));
  Let b12 = M[007982];
  Let b13 = M[007983];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b12,b13)));
  TraceOperation 066995 (Print "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ");
  GamePrint "\" (Footnote 14). Ford lowers his voice to a whisper. \"I'm not supposed to tell you this, but you'll never be able to finish the game without consulting the Guide about lots of stuff.\" As he curls up in a corner and begins snoring, you pick up ";
  TraceOperation 067138 (Print_obj (Con 1));
  Let b14 = M[000767];
  Let b15 = M[000768];
  Let b16 = M[Address(MakeHiLo(b14,b15))];
  Let ite_res17 = Ite((IsZeroByte(b16),"",GetText(Offset(Address(MakeHiLo(b14,b15)),1))));
  GamePrint ite_res17;
  TraceOperation 067140 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_18;
  SetResult 1;
  JumpIndirect: (return) return_address_18
LocOp 067143:
  TraceOperation 067143 (Jz (Var (Global 137)) (Branch F (Dloc 067191)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 067146 (Store (Con 153) (Con 1));
    SetByte 008182 0;
    SetByte 008183 1;
    TraceOperation 067149 New_line;
    GamePrint "\n";
    TraceOperation 067150 (Print_ret "Ford glances uncomfortably at the sky. He offers you the towel again.");
    GamePrint "Ford glances uncomfortably at the sky. He offers you the towel again.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 067191
  }
LocOp 067191:
  TraceOperation 067191 (Je [Var (Global 137),Con 1] (Branch F (Dloc 067245)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 067195 New_line;
    GamePrint "\n";
    TraceOperation 067196 (Print "Ford seems oblivious to your trouble, so you ask \"Ford, what about my home?\" He");
    GamePrint "Ford seems oblivious to your trouble, so you ask \"Ford, what about my home?\" He";
    TraceOperation 067239 (Call (Floc 065476) [] Sp);
    PushFrame;
    PushReturnAddress 067239;
    MakeRoutineFrame 0;
    Jump: 065477
  } else {
    Jump: 067245
  }
LocReturn 067239:
  PushStack call_result;
  TraceOperation 067244 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 067245:
  TraceOperation 067245 (Je [Var (Global 137),Con 2] (Branch F (Dloc 067388)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 067250 (Store (Con 153) (Con 3));
    SetByte 008182 0;
    SetByte 008183 3;
    TraceOperation 067253 (Store (Con 102) (Con 0));
    SetByte 008080 0;
    SetByte 008081 0;
    TraceOperation 067256 (Store (Con 155) (Con 1));
    SetByte 008186 0;
    SetByte 008187 1;
    TraceOperation 067259 (Call (Floc 022320) [Con -32630,Con 2] Sp);
    PushFrame;
    PushReturnAddress 067259;
    SetLocal 1 -32630;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 067388
  }
LocReturn 067259:
  PushStack call_result;
  TraceOperation 067267 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 067272 (Set_attr (Con 148) (Con 6));
  Let b2 = M[002083];
  SetByte 002083 SetBit(b2,1);
  TraceOperation 067275 New_line;
  GamePrint "\n";
  TraceOperation 067276 (Print "Ford and Prosser stop talking and approach you. Ford says that Prosser has agreed to lie in your place so that the two of you can go off to the Pub. Reluctantly, Prosser steps forward and lies down in front of the ");
  GamePrint "Ford and Prosser stop talking and approach you. Ford says that Prosser has agreed to lie in your place so that the two of you can go off to the Pub. Reluctantly, Prosser steps forward and lies down in front of the ";
  TraceOperation 067377 (Print_obj (Con 166));
  Let b3 = M[002252];
  Let b4 = M[002253];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 067379 (Print_ret ". You stand up.");
  GamePrint ". You stand up.\n";
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 067388:
  TraceOperation 067388 (Je [Var (Global 137),Con 3] (Branch F (Dloc 067473)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 067393 (Insert_obj (Con 142) (Con 137));
    Let b3 = M[002033];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),142)) {
        Let b5 = M[002034];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),142)) {
            Let b9 = M[002034];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002033 137;
    Let b10 = M[001990];
    SetByte 002034 LoByte(Widen(b10));
    SetByte 001990 142;
    TraceOperation 067396 (Store (Con 153) (Con 4));
    SetByte 008182 0;
    SetByte 008183 4;
    TraceOperation 067399 (Je [Var (Global 0),Con 149] (Branch F (Dloc 067454)));
    Let b11 = M[007908];
    Let b12 = M[007909];
    if (Equal(MakeHiLo(b11,b12),149)) {
      TraceOperation 067403 (Store (Con 167) (Con 1));
      SetByte 008210 0;
      SetByte 008211 1;
      TraceOperation 067406 (Call (Floc 022320) [Con 16277,Con 2] Sp);
      PushFrame;
      PushReturnAddress 067406;
      SetLocal 1 16277;
      SetLocal 2 2;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 022327
    } else {
      Jump: 067454
    }
  } else {
    Jump: 067473
  }
LocReturn 067406:
  PushStack call_result;
  TraceOperation 067414 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 067419 (Print_ret "Ford, urging you to follow, hurries toward the country lane.");
  GamePrint "Ford, urging you to follow, hurries toward the country lane.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 067454:
  TraceOperation 067454 (Je [Var (Global 0),Con 137] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),137)) {
    TraceOperation 067458 (Print_ret "Ford enters from the north.");
    GamePrint "Ford enters from the north.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 067473:
  TraceOperation 067473 (Je [Var (Global 137),Con 4] (Branch F (Dloc 067550)));
  Let b1 = M[008182];
  Let b2 = M[008183];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 067478 (Je [Var (Global 0),Con 137] (Branch F (Dloc 067550)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),137)) {
      TraceOperation 067483 (Test_attr (Con 134) (Con 5) (Branch T (Dloc 067550)));
      Let b5 = M[001957];
      if (TestBit(b5,2)) {
        Jump: 067550
      } else {
        TraceOperation 067488 (Store (Con 153) (Con 5));
        SetByte 008182 0;
        SetByte 008183 5;
        TraceOperation 067491 (Store (Con 167) (Con 1));
        SetByte 008210 0;
        SetByte 008211 1;
        TraceOperation 067494 (Call (Floc 022320) [Con 16277,Con 2] Sp);
        PushFrame;
        PushReturnAddress 067494;
        SetLocal 1 16277;
        SetLocal 2 2;
        MakeRoutineFrame 3;
        SetLocal 3 0;
        Jump: 022327
      }
    } else {
      Jump: 067550
    }
  } else {
    Jump: 067550
  }
LocReturn 067494:
  PushStack call_result;
  TraceOperation 067502 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 067507 (Insert_obj (Con 142) (Con 134));
  Let b2 = M[002033];
  if (IsZero(Widen(b2))) {} else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b3),142)) {
      Let b4 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
    } else {
      Let loop_var5 = Widen(b3);
      Label 6: {
        Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
        if (Equal(Widen(b7),142)) {
          Let b8 = M[002034];
          SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
        } else {
          Assign loop_var5 = Widen(b7);
          Goto: Label 6
        }
      }
    }
  }
  SetByte 002033 134;
  Let b9 = M[001963];
  SetByte 002034 LoByte(Widen(b9));
  SetByte 001963 142;
  TraceOperation 067510 New_line;
  GamePrint "\n";
  TraceOperation 067511 (Print_ret "\"Come along, Arthur,\" says Ford impatiently, and enters the Pub.");
  GamePrint "\"Come along, Arthur,\" says Ford impatiently, and enters the Pub.\n";
  PopFrame;
  PopReturnAddress return_address_10;
  SetResult 1;
  JumpIndirect: (return) return_address_10
LocOp 067550:
  TraceOperation 067550 (Jin (Con 142) (Var (Global 0)) (Branch T (Dloc 067577)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002033];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 067577
  } else {
    TraceOperation 067554 (Test_attr (Con 134) (Con 5) (Branch F (Dloc 067577)));
    Let b4 = M[001957];
    if (TestBit(b4,2)) {
      TraceOperation 067558 (Insert_obj (Con 142) (Var (Global 0)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[002033];
      if (IsZero(Widen(b7))) {} else {
        Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
        if (Equal(Widen(b8),142)) {
          Let b9 = M[002034];
          SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
        } else {
          Let loop_var10 = Widen(b8);
          Label 11: {
            Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
            if (Equal(Widen(b12),142)) {
              Let b13 = M[002034];
              SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
            } else {
              Assign loop_var10 = Widen(b12);
              Goto: Label 11
            }
          }
        }
      }
      SetByte 002033 b6;
      Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte 002034 LoByte(Widen(b14));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 142;
      TraceOperation 067561 New_line;
      GamePrint "\n";
      TraceOperation 067562 (Print_ret "Ford hurries after you.");
      GamePrint "Ford hurries after you.\n";
      PopFrame;
      PopReturnAddress return_address_15;
      SetResult 1;
      JumpIndirect: (return) return_address_15
    } else {
      Jump: 067577
    }
  }
LocOp 067577:
  TraceOperation 067577 (Jl (Var (Global 130)) (Con 3) (Branch F Dfalse));
  Let b1 = M[008168];
  Let b2 = M[008169];
  if (LessThan(MakeHiLo(b1,b2),3)) {
    TraceOperation 067581 (Je [Var (Global 201),Con 127] (Branch F (Dloc 067591)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),127)) {
      TraceOperation 067585 (Je [Var (Global 203),Con 57,Con 51] (Branch T Dfalse));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (LogOr(Equal(MakeHiLo(b5,b6),57),Equal(MakeHiLo(b5,b6),51))) {
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 0;
        JumpIndirect: (return) return_address_7
      } else {
        Jump: 067591
      }
    } else {
      Jump: 067591
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
LocOp 067591:
  TraceOperation 067591 (Je [Var (Global 231),Con 127] (Branch F (Dloc 067605)));
  Let b1 = M[008370];
  Let b2 = M[008371];
  if (Equal(MakeHiLo(b1,b2),127)) {
    TraceOperation 067595 (Je [Var (Global 203),Con 16] (Branch F (Dloc 067605)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),16)) {
      TraceOperation 067599 (Je [Var (Global 232),Con 51,Con 57] (Branch T Dfalse));
      Let b5 = M[008372];
      Let b6 = M[008373];
      if (LogOr(Equal(MakeHiLo(b5,b6),51),Equal(MakeHiLo(b5,b6),57))) {
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 0;
        JumpIndirect: (return) return_address_7
      } else {
        Jump: 067605
      }
    } else {
      Jump: 067605
    }
  } else {
    Jump: 067605
  }
LocOp 067605:
  TraceOperation 067605 (Je [Var (Global 0),Con 134] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),134)) {
    TraceOperation 067609 (Test_attr (Con 127) (Con 27) (Branch T Dfalse));
    Let b3 = M[001897];
    if (TestBit(b3,4)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 067613 New_line;
      GamePrint "\n";
      TraceOperation 067614 (Print "\"Drink the beer,\" urges Ford. \"It will help");
      GamePrint "\"Drink the beer,\" urges Ford. \"It will help";
      TraceOperation 067643 (Call (Floc 057960) [] Sp);
      PushFrame;
      PushReturnAddress 067643;
      MakeRoutineFrame 0;
      Jump: 057961
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 067643:
  PushStack call_result;
  TraceOperation 067648 (Print_ret "\"");
  GamePrint "\"\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067652:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 067655
LocOp 067655:
  TraceOperation 067655 (Print "There is a satchel here");
  GamePrint "There is a satchel here";
  TraceOperation 067668 (Je [Var (Global 116),Con 141] (Branch F (Dloc 067687)));
  Let b1 = M[008140];
  Let b2 = M[008141];
  if (Equal(MakeHiLo(b1,b2),141)) {
    TraceOperation 067672 (Print ", resting in front of the ");
    GamePrint ", resting in front of the ";
    TraceOperation 067685 (Print_obj (Con 112));
    Let b3 = M[001766];
    Let b4 = M[001767];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    Jump: 067687
  } else {
    Jump: 067687
  }
LocOp 067687:
  TraceOperation 067687 (Print ".");
  GamePrint ".";
  TraceOperation 067690 (Call (Floc 067698) [] Sp);
  PushFrame;
  PushReturnAddress 067690;
  MakeRoutineFrame 0;
  Jump: 067699
LocReturn 067690:
  PushStack call_result;
  TraceOperation 067695 New_line;
  GamePrint "\n";
  TraceOperation 067696 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067698:
  MakeRoutineFrame 0;
  Jump: 067699
LocOp 067699:
  TraceOperation 067699 (Jz (Var (Global 115)) (Branch T Dfalse));
  Let b1 = M[008138];
  Let b2 = M[008139];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 067702 (Print " Sitting on top of it is");
    GamePrint " Sitting on top of it is";
    TraceOperation 067719 (Call (Floc 043738) [Var (Global 115)] Sp);
    Let b4 = M[008138];
    Let b5 = M[008139];
    PushFrame;
    PushReturnAddress 067719;
    SetLocal 1 MakeHiLo(b4,b5);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043743
  }
LocReturn 067719:
  PushStack call_result;
  TraceOperation 067725 (Print ".");
  GamePrint ".";
  TraceOperation 067728 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 067730:
  MakeRoutineFrame 0;
  Jump: 067731
LocOp 067731:
  TraceOperation 067731 (Je [Var (Global 203),Con 103] (Branch F (Dloc 067747)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 067735 (Je [Var (Global 120),Con 142] (Branch T (Dloc 067747)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),142)) {
      Jump: 067747
    } else {
      TraceOperation 067739 (Call (Floc 057712) [Con -11237] Sp);
      PushFrame;
      PushReturnAddress 067739;
      SetLocal 1 -11237;
      MakeRoutineFrame 1;
      Jump: 057715
    }
  } else {
    Jump: 067747
  }
LocReturn 067739:
  PushStack call_result;
  TraceOperation 067746 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 067747:
  TraceOperation 067747 (Je [Var (Global 203),Con 55] (Branch F (Dloc 067858)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 067752 (Je [Con 141,Var (Global 202)] (Branch F (Dloc 067858)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(141,MakeHiLo(b3,b4))) {
      TraceOperation 067757 (Call (Floc 043468) [Con 141] Sp);
      PushFrame;
      PushReturnAddress 067757;
      SetLocal 1 141;
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043473
    } else {
      Jump: 067858
    }
  } else {
    Jump: 067858
  }
LocReturn 067757:
  PushStack call_result;
  TraceOperation 067763 (Jz (Var Sp) (Branch T (Dloc 067783)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 067783
  } else {
    TraceOperation 067766 (Print_ret "Put down the satchel first.");
    GamePrint "Put down the satchel first.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 067783:
  TraceOperation 067783 (Jz (Var (Global 115)) (Branch T (Dloc 067811)));
  Let b1 = M[008138];
  Let b2 = M[008139];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 067811
  } else {
    TraceOperation 067786 (Print "But");
    GamePrint "But";
    TraceOperation 067791 (Call (Floc 043738) [Var (Global 115),Con 1] Sp);
    Let b3 = M[008138];
    Let b4 = M[008139];
    PushFrame;
    PushReturnAddress 067791;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  }
LocReturn 067791:
  PushStack call_result;
  TraceOperation 067798 (Print_ret " is already on the satchel.");
  GamePrint " is already on the satchel.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 067811:
  TraceOperation 067811 (Store (Con 131) (Var (Global 201)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  SetByte 008138 b1;
  SetByte 008139 b2;
  TraceOperation 067814 (Insert_obj (Var (Global 201)) (Var (Global 0)));
  Let b3 = M[008310];
  Let b4 = M[008311];
  Let b5 = M[007908];
  Let b6 = M[007909];
  Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
  if (IsZero(Widen(b7))) {} else {
    Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
    if (Equal(Widen(b8),MakeHiLo(b3,b4))) {
      Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
    } else {
      Let loop_var10 = Widen(b8);
      Label 11: {
        Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
        if (Equal(Widen(b12),MakeHiLo(b3,b4))) {
          Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
        } else {
          Assign loop_var10 = Widen(b12);
          Goto: Label 11
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) b6;
  Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b14));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) b4;
  TraceOperation 067817 (Set_attr (Var (Global 201)) (Con 27));
  Let b15 = M[008310];
  Let b16 = M[008311];
  Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),3)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),3) SetBit(b17,4);
  TraceOperation 067820 (Set_attr (Var (Global 201)) (Con 21));
  Let b18 = M[008310];
  Let b19 = M[008311];
  Let b20 = M[Offset(Offset(000751,Mul(MakeHiLo(b18,b19),9)),2)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b18,b19),9)),2) SetBit(b20,2);
  TraceOperation 067823 (Print "Okay,");
  GamePrint "Okay,";
  TraceOperation 067830 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b21 = M[008310];
  Let b22 = M[008311];
  PushFrame;
  PushReturnAddress 067830;
  SetLocal 1 MakeHiLo(b21,b22);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 067830:
  PushStack call_result;
  TraceOperation 067837 (Print_ret " is now sitting on the satchel.");
  GamePrint " is now sitting on the satchel.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 067858:
  TraceOperation 067858 (Je [Var (Global 203),Con 61] (Branch F (Dloc 067908)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 067862 (Print "The satchel, which is ");
    GamePrint "The satchel, which is ";
    TraceOperation 067873 (Test_attr (Con 141) (Con 23) (Branch F (Dloc 067885)));
    Let b3 = M[002022];
    if (TestBit(b3,0)) {
      TraceOperation 067877 (Print "open");
      GamePrint "open";
      TraceOperation 067882 (Jump 067888);
      Jump: 067888
    } else {
      Jump: 067885
    }
  } else {
    Jump: 067908
  }
LocOp 067885:
  TraceOperation 067885 (Print "closed");
  GamePrint "closed";
  Jump: 067888
LocOp 067888:
  TraceOperation 067888 (Print ", is fairly bulky.");
  GamePrint ", is fairly bulky.";
  TraceOperation 067901 (Call (Floc 067698) [] Sp);
  PushFrame;
  PushReturnAddress 067901;
  MakeRoutineFrame 0;
  Jump: 067699
LocReturn 067901:
  PushStack call_result;
  TraceOperation 067906 New_line;
  GamePrint "\n";
  TraceOperation 067907 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 067908:
  TraceOperation 067908 (Je [Var (Global 203),Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 067912 (Jin (Con 141) (Con 142) (Branch F Dfalse));
    Let b3 = M[002024];
    if (Equal(142,Widen(b3))) {
      TraceOperation 067916 (Print "Ford says, \"Hey, Arthur, keep ");
      GamePrint "Ford says, \"Hey, Arthur, keep ";
      TraceOperation 067935 (Print_obj (Con 36));
      Let b4 = M[001082];
      Let b5 = M[001083];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
      GamePrint ite_res7;
      TraceOperation 067937 (Print_ret "s off my satchel!\"");
      GamePrint "s off my satchel!\"\n";
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 1;
      JumpIndirect: (return) return_address_8
    } else {
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
--------------------------------------------------
LocRoutine 067952:
  MakeRoutineFrame 0;
  Jump: 067953
LocOp 067953:
  TraceOperation 067953 (Je [Var (Global 203),Con 124] (Branch F (Dloc 068112)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 067958 (Test_attr (Con 139) (Con 21) (Branch F (Dloc 068112)));
    Let b3 = M[002004];
    if (TestBit(b3,2)) {
      TraceOperation 067963 (Je [Var (Global 0),Con 149] (Branch F (Dloc 068112)));
      Let b4 = M[007908];
      Let b5 = M[007909];
      if (Equal(MakeHiLo(b4,b5),149)) {
        TraceOperation 067968 (Jz (Var (Global 86)) (Branch T (Dloc 068112)));
        Let b6 = M[008080];
        Let b7 = M[008081];
        if (IsZero(MakeHiLo(b6,b7))) {
          Jump: 068112
        } else {
          TraceOperation 067972 (Clear_attr (Con 139) (Con 21));
          Let b8 = M[002004];
          SetByte 002004 ClearBit(b8,2);
          TraceOperation 067975 (Insert_obj (Con 139) (Con 31));
          Let b9 = M[002006];
          if (IsZero(Widen(b9))) {} else {
            Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
            if (Equal(Widen(b10),139)) {
              Let b11 = M[002007];
              SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
            } else {
              Let loop_var12 = Widen(b10);
              Label 13: {
                Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
                if (Equal(Widen(b14),139)) {
                  Let b15 = M[002007];
                  SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
                } else {
                  Assign loop_var12 = Widen(b14);
                  Goto: Label 13
                }
              }
            }
          }
          SetByte 002006 31;
          Let b16 = M[001036];
          SetByte 002007 LoByte(Widen(b16));
          SetByte 001036 139;
          TraceOperation 067978 (Insert_obj (Con 142) (Con 219));
          Let b17 = M[002033];
          if (IsZero(Widen(b17))) {} else {
            Let b18 = M[Offset(Offset(000751,Mul(Widen(b17),9)),6)];
            if (Equal(Widen(b18),142)) {
              Let b19 = M[002034];
              SetByte Offset(Offset(000751,Mul(Widen(b17),9)),6) LoByte(Widen(b19));
            } else {
              Let loop_var20 = Widen(b18);
              Label 21: {
                Let b22 = M[Offset(Offset(000751,Mul(loop_var20,9)),5)];
                if (Equal(Widen(b22),142)) {
                  Let b23 = M[002034];
                  SetByte Offset(Offset(000751,Mul(loop_var20,9)),5) LoByte(Widen(b23));
                } else {
                  Assign loop_var20 = Widen(b22);
                  Goto: Label 21
                }
              }
            }
          }
          SetByte 002033 219;
          Let b24 = M[002728];
          SetByte 002034 LoByte(Widen(b24));
          SetByte 002728 142;
          TraceOperation 067981 (Store (Con 140) (Con 1));
          SetByte 008156 0;
          SetByte 008157 1;
          TraceOperation 067984 (Store (Con 167) (Con 5));
          SetByte 008210 0;
          SetByte 008211 5;
          TraceOperation 067987 (Call (Floc 022320) [Con 16277,Con 2] Sp);
          PushFrame;
          PushReturnAddress 067987;
          SetLocal 1 16277;
          SetLocal 2 2;
          MakeRoutineFrame 3;
          SetLocal 3 0;
          Jump: 022327
        }
      } else {
        Jump: 068112
      }
    } else {
      Jump: 068112
    }
  } else {
    Jump: 068112
  }
LocReturn 067987:
  PushStack call_result;
  TraceOperation 067995 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068000 (Call (Floc 022340) [Con -32630] Sp);
  PushFrame;
  PushReturnAddress 068000;
  SetLocal 1 -32630;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 068000:
  PushStack call_result;
  TraceOperation 068007 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 068012 (Print "As you take it, Ford says \"Er, look, thanks for lending me the towel... been nice knowing you... got to go now...\" He smiles oddly and walks down the ");
  GamePrint "As you take it, Ford says \"Er, look, thanks for lending me the towel... been nice knowing you... got to go now...\" He smiles oddly and walks down the ";
  TraceOperation 068107 (Print_obj (Con 137));
  Let b2 = M[001991];
  Let b3 = M[001992];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 068109 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
LocOp 068112:
  TraceOperation 068112 (Je [Var (Global 203),Con 98,Con 124] (Branch F (Dloc 068180)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),98),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 068119 (Je [Var (Global 201),Con 139] (Branch F (Dloc 068180)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),139)) {
      TraceOperation 068123 (Test_attr (Con 139) (Con 8) (Branch F (Dloc 068180)));
      Let b5 = M[002003];
      if (TestBit(b5,7)) {
        TraceOperation 068127 (Clear_attr (Con 139) (Con 21));
        Let b6 = M[002004];
        SetByte 002004 ClearBit(b6,2);
        TraceOperation 068130 (Clear_attr (Con 139) (Con 8));
        Let b7 = M[002003];
        SetByte 002003 ClearBit(b7,7);
        TraceOperation 068133 (Call (Floc 043644) [Con 139,Var (Global 0)] Sp);
        Let b8 = M[007908];
        Let b9 = M[007909];
        PushFrame;
        PushReturnAddress 068133;
        SetLocal 1 139;
        SetLocal 2 MakeHiLo(b8,b9);
        MakeRoutineFrame 4;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 043653
      } else {
        Jump: 068180
      }
    } else {
      Jump: 068180
    }
  } else {
    Jump: 068180
  }
LocReturn 068133:
  PushStack call_result;
  TraceOperation 068140 (Clear_attr (Con 139) (Con 24));
  Let b1 = M[002005];
  SetByte 002005 ClearBit(b1,7);
  TraceOperation 068143 (Clear_attr (Con 139) (Con 23));
  Let b2 = M[002004];
  SetByte 002004 ClearBit(b2,0);
  TraceOperation 068146 (Clear_attr (Con 139) (Con 27));
  Let b3 = M[002005];
  SetByte 002005 ClearBit(b3,4);
  TraceOperation 068149 (Je [Var (Global 203),Con 98] (Branch F Dfalse));
  Let b4 = M[008314];
  Let b5 = M[008315];
  if (Equal(MakeHiLo(b4,b5),98)) {
    TraceOperation 068153 (Print_ret "Okay, it's no longer covering the drain.");
    GamePrint "Okay, it's no longer covering the drain.\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocOp 068180:
  TraceOperation 068180 (Je [Var (Global 203),Con 157,Con 55] (Branch F (Dloc 068221)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),157),Equal(MakeHiLo(b1,b2),55))) {
    TraceOperation 068186 (Je [Var (Global 202),Con 95] (Branch F (Dloc 068221)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),95)) {
      TraceOperation 068190 (Print_ret "The effect is decorative rather than helpful.");
      GamePrint "The effect is decorative rather than helpful.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 068221
    }
  } else {
    Jump: 068221
  }
LocOp 068221:
  TraceOperation 068221 (Je [Var (Global 203),Con 157,Con 55] (Branch F (Dloc 068394)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),157),Equal(MakeHiLo(b1,b2),55))) {
    TraceOperation 068228 (Je [Var (Global 202),Con 33,Con 34] (Branch F (Dloc 068394)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),33),Equal(MakeHiLo(b3,b4),34))) {
      TraceOperation 068235 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 068246)));
      Let b5 = M[002003];
      if (TestBit(b5,6)) {
        TraceOperation 068239 (Print_ret "It already is.");
        GamePrint "It already is.\n";
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      } else {
        Jump: 068246
      }
    } else {
      Jump: 068394
    }
  } else {
    Jump: 068394
  }
LocOp 068246:
  TraceOperation 068246 (Jin (Con 95) (Var (Global 0)) (Branch F (Dloc 068356)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 068251 (Set_attr (Con 139) (Con 9));
    Let b4 = M[002003];
    SetByte 002003 SetBit(b4,6);
    TraceOperation 068254 (Insert_obj (Con 139) (Con 31));
    Let b5 = M[002006];
    if (IsZero(Widen(b5))) {} else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b6),139)) {
        Let b7 = M[002007];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
      } else {
        Let loop_var8 = Widen(b6);
        Label 9: {
          Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
          if (Equal(Widen(b10),139)) {
            Let b11 = M[002007];
            SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
          } else {
            Assign loop_var8 = Widen(b10);
            Goto: Label 9
          }
        }
      }
    }
    SetByte 002006 31;
    Let b12 = M[001036];
    SetByte 002007 LoByte(Widen(b12));
    SetByte 001036 139;
    TraceOperation 068257 (Call (Floc 022320) [Con -22735,Con 11] Sp);
    PushFrame;
    PushReturnAddress 068257;
    SetLocal 1 -22735;
    SetLocal 2 11;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 068356
  }
LocReturn 068257:
  PushStack call_result;
  TraceOperation 068265 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068270 (Print "The ");
  GamePrint "The ";
  TraceOperation 068273 (Print_obj (Con 95));
  Let b2 = M[001613];
  Let b3 = M[001614];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 068275 (Print_ret " is completely bewildered. It is so dim it thinks that if you can't see it, it can't see you. You have a few seconds before it realises its mistake.");
  GamePrint " is completely bewildered. It is so dim it thinks that if you can't see it, it can't see you. You have a few seconds before it realises its mistake.\n";
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
LocOp 068356:
  TraceOperation 068356 (Print "There's no need for that. It's not like there's a ");
  GamePrint "There's no need for that. It's not like there's a ";
  TraceOperation 068379 (Print_obj (Con 95));
  Let b1 = M[001613];
  Let b2 = M[001614];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 068381 (Print_ret " around, or something.");
  GamePrint " around, or something.\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 068394:
  TraceOperation 068394 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 068558)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 068399 (Je [Var (Global 203),Con 164,Con 123,Con 148] (Branch F (Dloc 068558)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b2,b3),164),Equal(MakeHiLo(b2,b3),123)),Equal(MakeHiLo(b2,b3),148))) {
      TraceOperation 068407 (Clear_attr (Con 139) (Con 9));
      Let b4 = M[002003];
      SetByte 002003 ClearBit(b4,6);
      TraceOperation 068410 (Print "You unwrap the towel from your head.");
      GamePrint "You unwrap the towel from your head.";
      TraceOperation 068429 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 068441)));
      Let b5 = M[001606];
      if (TestBit(b5,4)) {
        TraceOperation 068433 New_line;
        GamePrint "\n";
        TraceOperation 068434 New_line;
        GamePrint "\n";
        TraceOperation 068435 (Call (Floc 034400) [] Sp);
        PushFrame;
        PushReturnAddress 068435;
        MakeRoutineFrame 0;
        Jump: 034401
      } else {
        Jump: 068441
      }
    } else {
      Jump: 068558
    }
  } else {
    Jump: 068558
  }
LocReturn 068435:
  PushStack call_result;
  TraceOperation 068440 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 068441:
  TraceOperation 068441 (Jz (Var (Global 102)) (Branch T (Dloc 068491)));
  Let b1 = M[008112];
  Let b2 = M[008113];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 068491
  } else {
    TraceOperation 068444 (Print " You see that you have wandered in circles");
    GamePrint " You see that you have wandered in circles";
    TraceOperation 068465 (Je [Var (Global 0),Con 98] (Branch F (Dloc 068488)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),98)) {
      TraceOperation 068469 (Print " and ended right beside the ");
      GamePrint " and ended right beside the ";
      TraceOperation 068486 (Print_obj (Con 97));
      Let b5 = M[001631];
      Let b6 = M[001632];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      Jump: 068488
    } else {
      Jump: 068488
    }
  }
LocOp 068488:
  TraceOperation 068488 (Print ".");
  GamePrint ".";
  Jump: 068491
LocOp 068491:
  TraceOperation 068491 (Print " Unfortunately, the Beast has also caught sight of you again. All this fooling around has made it doubly angry and hungry. ");
  GamePrint " Unfortunately, the Beast has also caught sight of you again. All this fooling around has made it doubly angry and hungry. ";
  TraceOperation 068552 (Call (Floc 085896) [] Sp);
  PushFrame;
  PushReturnAddress 068552;
  MakeRoutineFrame 0;
  Jump: 085897
LocReturn 068552:
  PushStack call_result;
  TraceOperation 068557 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 068558:
  TraceOperation 068558 (Je [Var (Global 203),Con 61] (Branch F (Dloc 068619)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 068562 (Test_attr (Con 139) (Con 8) (Branch F (Dloc 068578)));
    Let b3 = M[002003];
    if (TestBit(b3,7)) {
      TraceOperation 068566 (Call (Floc 022042) [Con 61,Con 113] Sp);
      PushFrame;
      PushReturnAddress 068566;
      SetLocal 1 61;
      SetLocal 2 113;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 068578
    }
  } else {
    Jump: 068619
  }
LocReturn 068566:
  PushStack call_result;
  TraceOperation 068573 (Get_child (Con 139) Sp (Branch F Dtrue));
  Let b1 = M[002008];
  PushStack Widen(b1);
  if (IsZero(Widen(b1))) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 068577 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocOp 068578:
  TraceOperation 068578 (Jz (Var (Global 132)) (Branch T (Dloc 068594)));
  Let b1 = M[008172];
  Let b2 = M[008173];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 068594
  } else {
    TraceOperation 068581 (Print_ret "It is caked with mud.");
    GamePrint "It is caked with mud.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 068594:
  TraceOperation 068594 (Print_ret "It's covered with little pink and blue flowers.");
  GamePrint "It's covered with little pink and blue flowers.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 068619:
  TraceOperation 068619 (Je [Var (Global 203),Con 87] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 068623 (Test_attr (Con 139) (Con 8) (Branch F Dfalse));
    Let b3 = M[002003];
    if (TestBit(b3,7)) {
      TraceOperation 068627 (Call (Floc 022042) [Con 144,Con 114] Sp);
      PushFrame;
      PushReturnAddress 068627;
      SetLocal 1 144;
      SetLocal 2 114;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 068627:
  PushStack call_result;
  TraceOperation 068634 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 068636:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 068639
LocOp 068639:
  TraceOperation 068639 (Je [Var (Local 1),Con 6] (Branch F (Dloc 068675)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 068643 (Call (Floc 020662) [Con -28826] Sp);
    PushFrame;
    PushReturnAddress 068643;
    SetLocal 1 -28826;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 020671
  } else {
    Jump: 068675
  }
LocReturn 068643:
  PushStack call_result;
  TraceOperation 068650 (Jz (Var Sp) (Branch F (Dloc 068675)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 068653 (Jz (Var (Global 145)) (Branch T (Dloc 068675)));
    Let b2 = M[008198];
    Let b3 = M[008199];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 068675
    } else {
      TraceOperation 068656 (Call (Floc 073420) [] Sp);
      PushFrame;
      PushReturnAddress 068656;
      MakeRoutineFrame 0;
      Jump: 073421
    }
  } else {
    Jump: 068675
  }
LocReturn 068656:
  PushStack call_result;
  TraceOperation 068661 (Call (Floc 022320) [Con -28826,Con 2] Sp);
  PushFrame;
  PushReturnAddress 068661;
  SetLocal 1 -28826;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 068661:
  PushStack call_result;
  TraceOperation 068669 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068674 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 068675:
  TraceOperation 068675 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 068679 (Print "The rear garden is a pleasant place. I");
    GamePrint "The rear garden is a pleasant place. I";
    TraceOperation 068704 (Print_paddr (Var (Global 6)));
    Let b2 = M[007920];
    Let b3 = M[007921];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 068706 (Print_ret ", and it's a lovely day for a walk. A path leads around the house to the southeast and southwest.");
    GamePrint ", and it's a lovely day for a walk. A path leads around the house to the southeast and southwest.\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
--------------------------------------------------
LocRoutine 068762:
  MakeRoutineFrame 0;
  Jump: 068763
LocOp 068763:
  TraceOperation 068763 (Je [Var (Global 203),Con 33,Con 35] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),33),Equal(MakeHiLo(b1,b2),35))) {
    TraceOperation 068769 (Print_ret "You were never very good at that.");
    GamePrint "You were never very good at that.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 068790:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 068793
LocOp 068793:
  TraceOperation 068793 (Je [Var (Local 1),Con 2] (Branch F (Dloc 069211)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 068798 (Jz (Var (Global 139)) (Branch F (Dloc 068817)));
    Let b2 = M[008186];
    Let b3 = M[008187];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 068801 (Jz (Var (Global 145)) (Branch F (Dloc 068817)));
      Let b4 = M[008198];
      Let b5 = M[008199];
      if (IsZero(MakeHiLo(b4,b5))) {
        TraceOperation 068804 (Test_attr (Con 121) (Con 5) (Branch T (Dloc 068817)));
        Let b6 = M[001840];
        if (TestBit(b6,2)) {
          Jump: 068817
        } else {
          TraceOperation 068808 (Store (Con 158) (Con 3));
          SetByte 008192 0;
          SetByte 008193 3;
          TraceOperation 068811 (Call (Floc 061242) [] Sp);
          PushFrame;
          PushReturnAddress 068811;
          MakeRoutineFrame 0;
          Jump: 061243
        }
      } else {
        Jump: 068817
      }
    } else {
      Jump: 068817
    }
  } else {
    Jump: 069211
  }
LocReturn 068811:
  PushStack call_result;
  TraceOperation 068816 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 068817:
  TraceOperation 068817 (Je [Var (Global 120),Con 142] (Branch F (Dloc 068838)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 068821 (Jz (Var (Global 145)) (Branch T (Dloc 068838)));
    Let b3 = M[008198];
    Let b4 = M[008199];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 068838
    } else {
      TraceOperation 068824 (Call (Floc 022320) [Con -30860,Con 1] Sp);
      PushFrame;
      PushReturnAddress 068824;
      SetLocal 1 -30860;
      SetLocal 2 1;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 022327
    }
  } else {
    Jump: 068838
  }
LocReturn 068824:
  PushStack call_result;
  TraceOperation 068832 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068837 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 068838:
  TraceOperation 068838 (Je [Var (Global 130),Con 3] (Branch F (Dloc 068860)));
  Let b1 = M[008168];
  Let b2 = M[008169];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 068842 (Je [Var (Global 120),Con 123] (Branch F (Dloc 068860)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 068846 (Call (Floc 022320) [Con -30860,Con 1] Sp);
      PushFrame;
      PushReturnAddress 068846;
      SetLocal 1 -30860;
      SetLocal 2 1;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 022327
    } else {
      Jump: 068860
    }
  } else {
    Jump: 068860
  }
LocReturn 068846:
  PushStack call_result;
  TraceOperation 068854 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068859 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 068860:
  TraceOperation 068860 (Test_attr (Con 121) (Con 5) (Branch F Dfalse));
  Let b1 = M[001840];
  if (TestBit(b1,2)) {
    TraceOperation 068864 (Test_attr (Con 137) (Con 27) (Branch T Dfalse));
    Let b2 = M[001987];
    if (TestBit(b2,4)) {
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    } else {
      TraceOperation 068868 (Get_parent (Con 141) Sp);
      Let b4 = M[002024];
      PushStack Widen(b4);
      TraceOperation 068871 (Storew (Var (Global 123)) (Con 0) (Var Sp));
      Let b5 = M[008154];
      Let b6 = M[008155];
      PopStack popped7;
      SetByte Offset(Address(MakeHiLo(b5,b6)),0) HiByte(popped7);
      SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),0),1) LoByte(popped7);
      TraceOperation 068876 (Get_parent (Con 7) Sp);
      Let b8 = M[000818];
      PushStack Widen(b8);
      TraceOperation 068879 (Storew (Var (Global 123)) (Con 1) (Var Sp));
      Let b9 = M[008154];
      Let b10 = M[008155];
      PopStack popped11;
      SetByte Offset(Address(MakeHiLo(b9,b10)),2) HiByte(popped11);
      SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),2),1) LoByte(popped11);
      TraceOperation 068884 (Get_parent (Con 1) Sp);
      Let b12 = M[000764];
      PushStack Widen(b12);
      TraceOperation 068887 (Storew (Var (Global 123)) (Con 2) (Var Sp));
      Let b13 = M[008154];
      Let b14 = M[008155];
      PopStack popped15;
      SetByte Offset(Address(MakeHiLo(b13,b14)),4) HiByte(popped15);
      SetByte Offset(Offset(Address(MakeHiLo(b13,b14)),4),1) LoByte(popped15);
      TraceOperation 068892 (Get_parent (Con 139) Sp);
      Let b16 = M[002006];
      PushStack Widen(b16);
      TraceOperation 068895 (Storew (Var (Global 123)) (Con 3) (Var Sp));
      Let b17 = M[008154];
      Let b18 = M[008155];
      PopStack popped19;
      SetByte Offset(Address(MakeHiLo(b17,b18)),6) HiByte(popped19);
      SetByte Offset(Offset(Address(MakeHiLo(b17,b18)),6),1) LoByte(popped19);
      TraceOperation 068900 (Get_parent (Con 122) Sp);
      Let b20 = M[001853];
      PushStack Widen(b20);
      TraceOperation 068903 (Storew (Var (Global 123)) (Con 5) (Var Sp));
      Let b21 = M[008154];
      Let b22 = M[008155];
      PopStack popped23;
      SetByte Offset(Address(MakeHiLo(b21,b22)),10) HiByte(popped23);
      SetByte Offset(Offset(Address(MakeHiLo(b21,b22)),10),1) LoByte(popped23);
      TraceOperation 068908 (Test_attr (Con 7) (Con 3) (Branch F (Dloc 068920)));
      Let b24 = M[000814];
      if (TestBit(b24,4)) {
        TraceOperation 068912 (Storew (Var (Global 123)) (Con 4) (Con 1));
        Let b25 = M[008154];
        Let b26 = M[008155];
        SetByte Offset(Address(MakeHiLo(b25,b26)),8) 0;
        SetByte Offset(Offset(Address(MakeHiLo(b25,b26)),8),1) 1;
        TraceOperation 068917 (Clear_attr (Con 7) (Con 3));
        Let b27 = M[000814];
        SetByte 000814 ClearBit(b27,4);
        Jump: 068920
      } else {
        Jump: 068920
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_28;
    SetResult 0;
    JumpIndirect: (return) return_address_28
  }
LocOp 068920:
  TraceOperation 068920 (Set_attr (Con 137) (Con 27));
  Let b1 = M[001987];
  SetByte 001987 SetBit(b1,4);
  TraceOperation 068923 (Call (Floc 043644) [Con 31,Con 97] Sp);
  PushFrame;
  PushReturnAddress 068923;
  SetLocal 1 31;
  SetLocal 2 97;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 043653
LocReturn 068923:
  PushStack call_result;
  TraceOperation 068930 (Insert_obj (Con 141) (Con 31));
  Let b1 = M[002024];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),141)) {
      Let b3 = M[002025];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),141)) {
          Let b7 = M[002025];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002024 31;
  Let b8 = M[001036];
  SetByte 002025 LoByte(Widen(b8));
  SetByte 001036 141;
  TraceOperation 068933 (Insert_obj (Con 7) (Con 141));
  Let b9 = M[000818];
  if (IsZero(Widen(b9))) {} else {
    Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
    if (Equal(Widen(b10),7)) {
      Let b11 = M[000819];
      SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
    } else {
      Let loop_var12 = Widen(b10);
      Label 13: {
        Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
        if (Equal(Widen(b14),7)) {
          Let b15 = M[000819];
          SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
        } else {
          Assign loop_var12 = Widen(b14);
          Goto: Label 13
        }
      }
    }
  }
  SetByte 000818 141;
  Let b16 = M[002026];
  SetByte 000819 LoByte(Widen(b16));
  SetByte 002026 7;
  TraceOperation 068936 (Insert_obj (Con 1) (Con 141));
  Let b17 = M[000764];
  if (IsZero(Widen(b17))) {} else {
    Let b18 = M[Offset(Offset(000751,Mul(Widen(b17),9)),6)];
    if (Equal(Widen(b18),1)) {
      Let b19 = M[000765];
      SetByte Offset(Offset(000751,Mul(Widen(b17),9)),6) LoByte(Widen(b19));
    } else {
      Let loop_var20 = Widen(b18);
      Label 21: {
        Let b22 = M[Offset(Offset(000751,Mul(loop_var20,9)),5)];
        if (Equal(Widen(b22),1)) {
          Let b23 = M[000765];
          SetByte Offset(Offset(000751,Mul(loop_var20,9)),5) LoByte(Widen(b23));
        } else {
          Assign loop_var20 = Widen(b22);
          Goto: Label 21
        }
      }
    }
  }
  SetByte 000764 141;
  Let b24 = M[002026];
  SetByte 000765 LoByte(Widen(b24));
  SetByte 002026 1;
  TraceOperation 068939 (Insert_obj (Con 139) (Con 141));
  Let b25 = M[002006];
  if (IsZero(Widen(b25))) {} else {
    Let b26 = M[Offset(Offset(000751,Mul(Widen(b25),9)),6)];
    if (Equal(Widen(b26),139)) {
      Let b27 = M[002007];
      SetByte Offset(Offset(000751,Mul(Widen(b25),9)),6) LoByte(Widen(b27));
    } else {
      Let loop_var28 = Widen(b26);
      Label 29: {
        Let b30 = M[Offset(Offset(000751,Mul(loop_var28,9)),5)];
        if (Equal(Widen(b30),139)) {
          Let b31 = M[002007];
          SetByte Offset(Offset(000751,Mul(loop_var28,9)),5) LoByte(Widen(b31));
        } else {
          Assign loop_var28 = Widen(b30);
          Goto: Label 29
        }
      }
    }
  }
  SetByte 002006 141;
  Let b32 = M[002026];
  SetByte 002007 LoByte(Widen(b32));
  SetByte 002026 139;
  TraceOperation 068942 (Insert_obj (Con 122) (Con 141));
  Let b33 = M[001853];
  if (IsZero(Widen(b33))) {} else {
    Let b34 = M[Offset(Offset(000751,Mul(Widen(b33),9)),6)];
    if (Equal(Widen(b34),122)) {
      Let b35 = M[001854];
      SetByte Offset(Offset(000751,Mul(Widen(b33),9)),6) LoByte(Widen(b35));
    } else {
      Let loop_var36 = Widen(b34);
      Label 37: {
        Let b38 = M[Offset(Offset(000751,Mul(loop_var36,9)),5)];
        if (Equal(Widen(b38),122)) {
          Let b39 = M[001854];
          SetByte Offset(Offset(000751,Mul(loop_var36,9)),5) LoByte(Widen(b39));
        } else {
          Assign loop_var36 = Widen(b38);
          Goto: Label 37
        }
      }
    }
  }
  SetByte 001853 141;
  Let b40 = M[002026];
  SetByte 001854 LoByte(Widen(b40));
  SetByte 002026 122;
  TraceOperation 068945 (Insert_obj (Con 123) (Con 149));
  Let b41 = M[001862];
  if (IsZero(Widen(b41))) {} else {
    Let b42 = M[Offset(Offset(000751,Mul(Widen(b41),9)),6)];
    if (Equal(Widen(b42),123)) {
      Let b43 = M[001863];
      SetByte Offset(Offset(000751,Mul(Widen(b41),9)),6) LoByte(Widen(b43));
    } else {
      Let loop_var44 = Widen(b42);
      Label 45: {
        Let b46 = M[Offset(Offset(000751,Mul(loop_var44,9)),5)];
        if (Equal(Widen(b46),123)) {
          Let b47 = M[001863];
          SetByte Offset(Offset(000751,Mul(loop_var44,9)),5) LoByte(Widen(b47));
        } else {
          Assign loop_var44 = Widen(b46);
          Goto: Label 45
        }
      }
    }
  }
  SetByte 001862 149;
  Let b48 = M[002098];
  SetByte 001863 LoByte(Widen(b48));
  SetByte 002098 123;
  TraceOperation 068948 (Store (Con 136) (Con 142));
  SetByte 008148 0;
  SetByte 008149 142;
  TraceOperation 068951 (Insert_obj (Con 142) (Con 169));
  Let b49 = M[002033];
  if (IsZero(Widen(b49))) {} else {
    Let b50 = M[Offset(Offset(000751,Mul(Widen(b49),9)),6)];
    if (Equal(Widen(b50),142)) {
      Let b51 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b49),9)),6) LoByte(Widen(b51));
    } else {
      Let loop_var52 = Widen(b50);
      Label 53: {
        Let b54 = M[Offset(Offset(000751,Mul(loop_var52,9)),5)];
        if (Equal(Widen(b54),142)) {
          Let b55 = M[002034];
          SetByte Offset(Offset(000751,Mul(loop_var52,9)),5) LoByte(Widen(b55));
        } else {
          Assign loop_var52 = Widen(b54);
          Goto: Label 53
        }
      }
    }
  }
  SetByte 002033 169;
  Let b56 = M[002278];
  SetByte 002034 LoByte(Widen(b56));
  SetByte 002278 142;
  TraceOperation 068954 (Insert_obj (Con 126) (Con 134));
  Let b57 = M[001889];
  if (IsZero(Widen(b57))) {} else {
    Let b58 = M[Offset(Offset(000751,Mul(Widen(b57),9)),6)];
    if (Equal(Widen(b58),126)) {
      Let b59 = M[001890];
      SetByte Offset(Offset(000751,Mul(Widen(b57),9)),6) LoByte(Widen(b59));
    } else {
      Let loop_var60 = Widen(b58);
      Label 61: {
        Let b62 = M[Offset(Offset(000751,Mul(loop_var60,9)),5)];
        if (Equal(Widen(b62),126)) {
          Let b63 = M[001890];
          SetByte Offset(Offset(000751,Mul(loop_var60,9)),5) LoByte(Widen(b63));
        } else {
          Assign loop_var60 = Widen(b62);
          Goto: Label 61
        }
      }
    }
  }
  SetByte 001889 134;
  Let b64 = M[001963];
  SetByte 001890 LoByte(Widen(b64));
  SetByte 001963 126;
  TraceOperation 068957 (Set_attr (Con 126) (Con 21));
  Let b65 = M[001887];
  SetByte 001887 SetBit(b65,2);
  TraceOperation 068960 (Set_attr (Con 126) (Con 27));
  Let b66 = M[001888];
  SetByte 001888 SetBit(b66,4);
  TraceOperation 068963 (Store (Con 143) (Con 0));
  SetByte 008162 0;
  SetByte 008163 0;
  TraceOperation 068966 (Store (Con 91) (Con 1));
  SetByte 008058 0;
  SetByte 008059 1;
  TraceOperation 068969 (Call (Floc 022320) [Con -28826,Con 38] Sp);
  PushFrame;
  PushReturnAddress 068969;
  SetLocal 1 -28826;
  SetLocal 2 38;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 068969:
  PushStack call_result;
  TraceOperation 068977 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 068982 (Print "You are hurrying up a country lane. The sky is light and clear, but you keep glancing at it with apprehension because you know that it will shortly be torn apart by Vogon ships, and that the hills and trees around you will just burn up and blow away, and you hope there's time for a quick drink beforehand.\n\nYou want to hitch a ride aboard the Vogon fleet, but are anxious because it's so long since you were through a");
  GamePrint "You are hurrying up a country lane. The sky is light and clear, but you keep glancing at it with apprehension because you know that it will shortly be torn apart by Vogon ships, and that the hills and trees around you will just burn up and blow away, and you hope there's time for a quick drink beforehand.\n\nYou want to hitch a ride aboard the Vogon fleet, but are anxious because it's so long since you were through a";
  TraceOperation 069203 (Print_paddr (Var (Global 42)));
  Let b2 = M[007992];
  Let b3 = M[007993];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 069205 (Print ".");
  GamePrint ".";
  TraceOperation 069208 New_line;
  GamePrint "\n";
  TraceOperation 069209 New_line;
  GamePrint "\n";
  TraceOperation 069210 Rtrue;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult 1;
  JumpIndirect: (return) return_address_4
LocOp 069211:
  TraceOperation 069211 (Je [Var (Local 1),Con 6] (Branch F (Dloc 069288)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 069216 (Test_attr (Con 137) (Con 4) (Branch F (Dloc 069288)));
    Let b2 = M[001984];
    if (TestBit(b2,3)) {
      TraceOperation 069221 (Store (Con 91) (Con 1));
      SetByte 008058 0;
      SetByte 008059 1;
      TraceOperation 069224 (Print "Suddenly a shadow passes in front of the sun. You look up. The shadow is a ");
      GamePrint "Suddenly a shadow passes in front of the sun. You look up. The shadow is a ";
      TraceOperation 069267 (Print_obj (Con 124));
      Let b3 = M[001874];
      Let b4 = M[001875];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
      GamePrint ite_res6;
      TraceOperation 069269 (Print ". You fumble for ");
      GamePrint ". You fumble for ";
      TraceOperation 069280 (Call (Floc 042734) [Con -11236] Sp);
      PushFrame;
      PushReturnAddress 069280;
      SetLocal 1 -11236;
      MakeRoutineFrame 1;
      Jump: 042737
    } else {
      Jump: 069288
    }
  } else {
    Jump: 069288
  }
LocReturn 069280:
  PushStack call_result;
  TraceOperation 069287 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 069288:
  TraceOperation 069288 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 069292 (Print "The road runs from ");
    GamePrint "The road runs from ";
    TraceOperation 069303 (Je [Var (Global 120),Con 123] (Branch F (Dloc 069313)));
    Let b2 = M[008148];
    Let b3 = M[008149];
    if (Equal(MakeHiLo(b2,b3),123)) {
      TraceOperation 069307 (Print "your");
      GamePrint "your";
      TraceOperation 069310 (Jump 069318);
      Jump: 069318
    } else {
      Jump: 069313
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 069313:
  TraceOperation 069313 (Print "Arthur's");
  GamePrint "Arthur's";
  Jump: 069318
LocOp 069318:
  TraceOperation 069318 (Print_ret " home, to the north, toward the village Pub, to the west.");
  GamePrint " home, to the north, toward the village Pub, to the west.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 069352:
  MakeRoutineFrame 0;
  Jump: 069353
LocOp 069353:
  TraceOperation 069353 (Je [Var (Global 0),Con 86] (Branch F (Dloc 069935)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),86)) {
    TraceOperation 069358 (Inc (Con 115));
    Let b3 = M[008106];
    Let b4 = M[008107];
    SetByte 008106 HiByte(Add(MakeHiLo(b3,b4),1));
    SetByte 008107 LoByte(Add(MakeHiLo(b3,b4),1));
    TraceOperation 069360 (Jl (Var (Global 99)) (Con 13) (Branch F (Dloc 069368)));
    Let b5 = M[008106];
    Let b6 = M[008107];
    if (LessThan(MakeHiLo(b5,b6),13)) {
      TraceOperation 069364 (Je [Var (Global 203),Con 165] (Branch T Dfalse));
      Let b7 = M[008314];
      Let b8 = M[008315];
      if (Equal(MakeHiLo(b7,b8),165)) {
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 0;
        JumpIndirect: (return) return_address_9
      } else {
        Jump: 069368
      }
    } else {
      Jump: 069368
    }
  } else {
    Jump: 069935
  }
LocOp 069368:
  TraceOperation 069368 New_line;
  GamePrint "\n";
  TraceOperation 069369 (Jl (Var (Global 99)) (Con 13) (Branch F (Dloc 069400)));
  Let b1 = M[008106];
  Let b2 = M[008107];
  if (LessThan(MakeHiLo(b1,b2),13)) {
    TraceOperation 069373 (Print_ret "The fleet continues to hurtle sunwards.");
    GamePrint "The fleet continues to hurtle sunwards.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 069400
  }
LocOp 069400:
  TraceOperation 069400 (Jz (Var (Global 128)) (Branch T (Dloc 069925)));
  Let b1 = M[008164];
  Let b2 = M[008165];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 069925
  } else {
    TraceOperation 069404 (Store (Con 102) (Con 0));
    SetByte 008080 0;
    SetByte 008081 0;
    TraceOperation 069407 (Print "Your simple act of kindness at a moment of great personal anxiety (you fed the dog, remember?) now brings rich rewards. ");
    GamePrint "Your simple act of kindness at a moment of great personal anxiety (you fed the dog, remember?) now brings rich rewards. ";
    TraceOperation 069486 (Print_paddr (Var (Global 41)));
    Let b3 = M[007990];
    Let b4 = M[007991];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 069488 (Print " spots the dog (which appears to them as a gigantic monster) cheerfully tucking into a ");
    GamePrint " spots the dog (which appears to them as a gigantic monster) cheerfully tucking into a ";
    TraceOperation 069543 (Print_obj (Con 125));
    Let b5 = M[001883];
    Let b6 = M[001884];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 069545 (Print ".\n\nThe Vl'Hurgs and the G'Gugvunts are moved by this simple picture of happiness, compared with the furious savagery of their own lives. They think back to a day when they used to relax over an odd ");
    GamePrint ".\n\nThe Vl'Hurgs and the G'Gugvunts are moved by this simple picture of happiness, compared with the furious savagery of their own lives. They think back to a day when they used to relax over an odd ";
    TraceOperation 069666 (Print_obj (Con 125));
    Let b9 = M[001883];
    Let b10 = M[001884];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
    GamePrint ite_res12;
    TraceOperation 069668 (Print " themselves, often at sunset after a hearty day working in the fields back in Vl'Hurgon and G'Gugvia, and decide to return and rebuild their homes in a new spirit of harmony and cooperation.\n\nGrateful, they offer to drop you at ");
    GamePrint " themselves, often at sunset after a hearty day working in the fields back in Vl'Hurgon and G'Gugvia, and decide to return and rebuild their homes in a new spirit of harmony and cooperation.\n\nGrateful, they offer to drop you at ";
    TraceOperation 069811 (Print_obj (Con 220));
    Let b13 = M[002738];
    Let b14 = M[002739];
    Let b15 = M[Address(MakeHiLo(b13,b14))];
    Let ite_res16 = Ite((IsZeroByte(b15),"",GetText(Offset(Address(MakeHiLo(b13,b14)),1))));
    GamePrint ite_res16;
    TraceOperation 069813 (Print " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...");
    GamePrint " on the way home. After a brief 900 parsec trip, you are escorted into the Transporter Chamber of the warship. The transporter glows, and your surroundings change...";
    TraceOperation 069916 New_line;
    GamePrint "\n";
    TraceOperation 069917 New_line;
    GamePrint "\n";
    TraceOperation 069918 (Call (Floc 042574) [Con 81] Sp);
    PushFrame;
    PushReturnAddress 069918;
    SetLocal 1 81;
    MakeRoutineFrame 2;
    SetLocal 2 1;
    Jump: 042579
  }
LocReturn 069918:
  PushStack call_result;
  TraceOperation 069924 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 069925:
  TraceOperation 069925 (Print_paddr (Var (Global 41)));
  Let b1 = M[007990];
  Let b2 = M[007991];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 069927 (Call (Floc 042734) [Con -11216] Sp);
  PushFrame;
  PushReturnAddress 069927;
  SetLocal 1 -11216;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 069927:
  PushStack call_result;
  TraceOperation 069934 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 069935:
  TraceOperation 069935 (Je [Var (Global 120),Con 142] (Branch F (Dloc 070043)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 069940 (Insert_obj (Con 135) (Var (Global 0)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001970];
    if (IsZero(Widen(b5))) {} else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b6),135)) {
        Let b7 = M[001971];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
      } else {
        Let loop_var8 = Widen(b6);
        Label 9: {
          Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
          if (Equal(Widen(b10),135)) {
            Let b11 = M[001971];
            SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
          } else {
            Assign loop_var8 = Widen(b10);
            Goto: Label 9
          }
        }
      }
    }
    SetByte 001970 b4;
    Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte 001971 LoByte(Widen(b12));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 135;
    TraceOperation 069943 (Call (Floc 022340) [Con -30860] Sp);
    PushFrame;
    PushReturnAddress 069943;
    SetLocal 1 -30860;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    Jump: 070043
  }
LocReturn 069943:
  PushStack call_result;
  TraceOperation 069950 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 069955 (Print "You run up the lane after Arthur. You pass a");
  GamePrint "You run up the lane after Arthur. You pass a";
  TraceOperation 069980 (Jz (Var (Global 128)) (Branch T (Dloc 070020)));
  Let b2 = M[008164];
  Let b3 = M[008165];
  if (IsZero(MakeHiLo(b2,b3))) {
    Jump: 070020
  } else {
    TraceOperation 069983 (Print_ret " serene dog. Fate cannot harm him, he has dined today.");
    GamePrint " serene dog. Fate cannot harm him, he has dined today.\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  }
LocOp 070020:
  TraceOperation 070020 (Print_ret "n irritable dog who yaps at you.");
  GamePrint "n irritable dog who yaps at you.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 070043:
  TraceOperation 070043 (Jin (Con 135) (Var (Global 0)) (Branch T (Dloc 070169)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001970];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 070169
  } else {
    TraceOperation 070048 (Jin (Con 124) (Var (Global 0)) (Branch T (Dloc 070169)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[001871];
    if (Equal(MakeHiLo(b4,b5),Widen(b6))) {
      Jump: 070169
    } else {
      TraceOperation 070053 (Je [Var (Global 0),Con 137] (Branch F (Dloc 070169)));
      Let b7 = M[007908];
      Let b8 = M[007909];
      if (Equal(MakeHiLo(b7,b8),137)) {
        TraceOperation 070058 (Insert_obj (Con 135) (Var (Global 0)));
        Let b9 = M[007908];
        Let b10 = M[007909];
        Let b11 = M[001970];
        if (IsZero(Widen(b11))) {} else {
          Let b12 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
          if (Equal(Widen(b12),135)) {
            Let b13 = M[001971];
            SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b13));
          } else {
            Let loop_var14 = Widen(b12);
            Label 15: {
              Let b16 = M[Offset(Offset(000751,Mul(loop_var14,9)),5)];
              if (Equal(Widen(b16),135)) {
                Let b17 = M[001971];
                SetByte Offset(Offset(000751,Mul(loop_var14,9)),5) LoByte(Widen(b17));
              } else {
                Assign loop_var14 = Widen(b16);
                Goto: Label 15
              }
            }
          }
        }
        SetByte 001970 b10;
        Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6)];
        SetByte 001971 LoByte(Widen(b18));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6) 135;
        TraceOperation 070061 (Call (Floc 022320) [Con -30860,Con 2] Sp);
        PushFrame;
        PushReturnAddress 070061;
        SetLocal 1 -30860;
        SetLocal 2 2;
        MakeRoutineFrame 3;
        SetLocal 3 0;
        Jump: 022327
      } else {
        Jump: 070169
      }
    }
  }
LocReturn 070061:
  PushStack call_result;
  TraceOperation 070069 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 070074 (Print "You see the huge ");
  GamePrint "You see the huge ";
  TraceOperation 070083 (Print_obj (Con 166));
  Let b2 = M[002252];
  Let b3 = M[002253];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 070085 (Print " heaving itself among the cloud of brick dust which is all that remains of ");
  GamePrint " heaving itself among the cloud of brick dust which is all that remains of ";
  TraceOperation 070128 (Print_obj (Con 173));
  Let b6 = M[002315];
  Let b7 = M[002316];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
  GamePrint ite_res9;
  TraceOperation 070130 (Print_ret ". As you start up the lane, a small dog runs up to you, yapping.");
  GamePrint ". As you start up the lane, a small dog runs up to you, yapping.\n";
  PopFrame;
  PopReturnAddress return_address_10;
  SetResult 1;
  JumpIndirect: (return) return_address_10
LocOp 070169:
  TraceOperation 070169 (Jz (Var (Global 128)) (Branch F Dfalse));
  Let b1 = M[008164];
  Let b2 = M[008165];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 070172 (Jin (Con 135) (Var (Global 0)) (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001970];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 070176 (Test_attr (Con 135) (Con 5) (Branch T Dfalse));
      Let b6 = M[001966];
      if (TestBit(b6,2)) {
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 0;
        JumpIndirect: (return) return_address_7
      } else {
        TraceOperation 070180 (Set_attr (Con 135) (Con 5));
        Let b8 = M[001966];
        SetByte 001966 SetBit(b8,2);
        TraceOperation 070183 (Print_ret "The dog carries on yapping for a moment and then gulps uncomfortably.");
        GamePrint "The dog carries on yapping for a moment and then gulps uncomfortably.\n";
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 1;
        JumpIndirect: (return) return_address_9
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 0;
      JumpIndirect: (return) return_address_10
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 0;
    JumpIndirect: (return) return_address_11
  }
--------------------------------------------------
LocRoutine 070226:
  MakeRoutineFrame 0;
  Jump: 070227
LocOp 070227:
  TraceOperation 070227 (Je [Var (Global 203),Con 154,Con 66] (Branch F (Dloc 070573)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),66))) {
    TraceOperation 070234 (Je [Var (Global 201),Con 125] (Branch F (Dloc 070550)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),125)) {
      TraceOperation 070239 (Je [Var (Global 120),Con 142] (Branch F (Dloc 070303)));
      Let b5 = M[008148];
      Let b6 = M[008149];
      if (Equal(MakeHiLo(b5,b6),142)) {
        TraceOperation 070243 (Insert_obj (Con 125) (Var (Global 0)));
        Let b7 = M[007908];
        Let b8 = M[007909];
        Let b9 = M[001880];
        if (IsZero(Widen(b9))) {} else {
          Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
          if (Equal(Widen(b10),125)) {
            Let b11 = M[001881];
            SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
          } else {
            Let loop_var12 = Widen(b10);
            Label 13: {
              Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
              if (Equal(Widen(b14),125)) {
                Let b15 = M[001881];
                SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
              } else {
                Assign loop_var12 = Widen(b14);
                Goto: Label 13
              }
            }
          }
        }
        SetByte 001880 b8;
        Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
        SetByte 001881 LoByte(Widen(b16));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 125;
        TraceOperation 070246 (Print "The dog is in a bad mood and tries to bite ");
        GamePrint "The dog is in a bad mood and tries to bite ";
        TraceOperation 070271 (Print_obj (Con 36));
        Let b17 = M[001082];
        Let b18 = M[001083];
        Let b19 = M[Address(MakeHiLo(b17,b18))];
        Let ite_res20 = Ite((IsZeroByte(b19),"",GetText(Offset(Address(MakeHiLo(b17,b18)),1))));
        GamePrint ite_res20;
        TraceOperation 070273 (Print ". The ");
        GamePrint ". The ";
        TraceOperation 070278 (Print_obj (Con 125));
        Let b21 = M[001883];
        Let b22 = M[001884];
        Let b23 = M[Address(MakeHiLo(b21,b22))];
        Let ite_res24 = Ite((IsZeroByte(b23),"",GetText(Offset(Address(MakeHiLo(b21,b22)),1))));
        GamePrint ite_res24;
        TraceOperation 070280 (Print_ret " lies ignored in the roadside dust.");
        GamePrint " lies ignored in the roadside dust.\n";
        PopFrame;
        PopReturnAddress return_address_25;
        SetResult 1;
        JumpIndirect: (return) return_address_25
      } else {
        Jump: 070303
      }
    } else {
      Jump: 070550
    }
  } else {
    Jump: 070573
  }
LocOp 070303:
  TraceOperation 070303 (Test_attr (Con 135) (Con 5) (Branch F (Dloc 070349)));
  Let b1 = M[001966];
  if (TestBit(b1,2)) {
    TraceOperation 070307 (Print "The dog, which seems to have a slight case of indigestion, ignores the ");
    GamePrint "The dog, which seems to have a slight case of indigestion, ignores the ";
    TraceOperation 070344 (Print_obj (Con 125));
    Let b2 = M[001883];
    Let b3 = M[001884];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 070346 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 070349
  }
LocOp 070349:
  TraceOperation 070349 (Insert_obj (Con 125) (Con 219));
  Let b1 = M[001880];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),125)) {
      Let b3 = M[001881];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),125)) {
          Let b7 = M[001881];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 001880 219;
  Let b8 = M[002728];
  SetByte 001881 LoByte(Widen(b8));
  SetByte 002728 125;
  TraceOperation 070352 (Store (Con 144) (Con 1));
  SetByte 008164 0;
  SetByte 008165 1;
  TraceOperation 070355 (Print "The dog is deeply moved. With powerful sweeps of its tail it indicates that it regards this ");
  GamePrint "The dog is deeply moved. With powerful sweeps of its tail it indicates that it regards this ";
  TraceOperation 070410 (Print_obj (Con 125));
  Let b9 = M[001883];
  Let b10 = M[001884];
  Let b11 = M[Address(MakeHiLo(b9,b10))];
  Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
  GamePrint ite_res12;
  TraceOperation 070412 (Print " as one of the great ");
  GamePrint " as one of the great ";
  TraceOperation 070425 (Print_obj (Con 125));
  Let b13 = M[001883];
  Let b14 = M[001884];
  Let b15 = M[Address(MakeHiLo(b13,b14))];
  Let ite_res16 = Ite((IsZeroByte(b15),"",GetText(Offset(Address(MakeHiLo(b13,b14)),1))));
  GamePrint ite_res16;
  TraceOperation 070427 (Print "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats");
  GamePrint "es. Nine out of ten pet owners could happen by at this point expressing any preference they pleased, but this dog would spurn both them and all their tins. This is a dog which has met its main sandwich. It eats";
  TraceOperation 070546 (Print_paddr (Var (Global 23)));
  Let b17 = M[007954];
  Let b18 = M[007955];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b17,b18)));
  TraceOperation 070548 New_line;
  GamePrint "\n";
  TraceOperation 070549 Rtrue;
  PopFrame;
  PopReturnAddress return_address_19;
  SetResult 1;
  JumpIndirect: (return) return_address_19
LocOp 070550:
  TraceOperation 070550 (Je [Var (Global 201),Con 126] (Branch F Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),126)) {
    TraceOperation 070554 (Print_ret "This is a dog, not an elephant.");
    GamePrint "This is a dog, not an elephant.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 070573:
  TraceOperation 070573 (Je [Var (Global 203),Con 61] (Branch F (Dloc 070595)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 070577 (Jz (Var (Global 128)) (Branch F (Dloc 070595)));
    Let b3 = M[008164];
    Let b4 = M[008165];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 070580 (Print_ret "The mongrel looks hungry.");
      GamePrint "The mongrel looks hungry.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 070595
    }
  } else {
    Jump: 070595
  }
LocOp 070595:
  TraceOperation 070595 (Je [Var (Global 203),Con 114,Con 82,Con 159] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),114),Equal(MakeHiLo(b1,b2),82)),Equal(MakeHiLo(b1,b2),159))) {
    TraceOperation 070602 (Print "The dog tries to bite your ");
    GamePrint "The dog tries to bite your ";
    TraceOperation 070617 (Je [Var (Global 203),Con 82] (Branch F (Dloc 070629)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),82)) {
      TraceOperation 070621 (Print "foot");
      GamePrint "foot";
      TraceOperation 070626 (Jump 070634);
      Jump: 070634
    } else {
      Jump: 070629
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocOp 070629:
  TraceOperation 070629 (Print "hand");
  GamePrint "hand";
  Jump: 070634
LocOp 070634:
  TraceOperation 070634 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070638:
  MakeRoutineFrame 0;
  Jump: 070639
LocOp 070639:
  TraceOperation 070639 (Je [Var (Global 203),Con 38,Con 21] (Branch F (Dloc 070670)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),21))) {
    TraceOperation 070645 (Je [Var (Global 0),Con 134] (Branch F (Dloc 070653)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),134)) {
      TraceOperation 070649 (Print_paddr (Var (Global 57)));
      Let b5 = M[008022];
      Let b6 = M[008023];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 070651 New_line;
      GamePrint "\n";
      TraceOperation 070652 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 070653
    }
  } else {
    Jump: 070670
  }
LocOp 070653:
  TraceOperation 070653 (Je [Var (Global 0),Con 137] (Branch F (Dloc 070664)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),137)) {
    TraceOperation 070657 (Call (Floc 043620) [Con 19] Sp);
    PushFrame;
    PushReturnAddress 070657;
    SetLocal 1 19;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    Jump: 070664
  }
LocReturn 070657:
  PushStack call_result;
  TraceOperation 070663 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070664:
  TraceOperation 070664 (Call (Floc 040326) [] Sp);
  PushFrame;
  PushReturnAddress 070664;
  MakeRoutineFrame 0;
  Jump: 040327
LocReturn 070664:
  PushStack call_result;
  TraceOperation 070669 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070670:
  TraceOperation 070670 (Je [Var (Global 203),Con 48,Con 86,Con 59] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),86)),Equal(MakeHiLo(b1,b2),59))) {
    TraceOperation 070677 (Je [Var (Global 0),Con 134] (Branch F (Dloc 070688)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),134)) {
      TraceOperation 070681 (Call (Floc 043620) [Con 27] Sp);
      PushFrame;
      PushReturnAddress 070681;
      SetLocal 1 27;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 070688
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 070681:
  PushStack call_result;
  TraceOperation 070687 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 070688:
  TraceOperation 070688 (Print_paddr (Var (Global 57)));
  Let b1 = M[008022];
  Let b2 = M[008023];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 070690 New_line;
  GamePrint "\n";
  TraceOperation 070691 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 070692:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 070695
LocOp 070695:
  TraceOperation 070695 (Je [Var (Local 1),Con 2] (Branch F (Dloc 070721)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 070699 (Jz (Var (Global 131)) (Branch F (Dloc 070721)));
    Let b2 = M[008170];
    Let b3 = M[008171];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 070702 (Je [Var (Global 120),Con 142] (Branch F (Dloc 070721)));
      Let b4 = M[008148];
      Let b5 = M[008149];
      if (Equal(MakeHiLo(b4,b5),142)) {
        TraceOperation 070706 (Call (Floc 022320) [Con -27242,Con -1] Sp);
        PushFrame;
        PushReturnAddress 070706;
        SetLocal 1 -27242;
        SetLocal 2 -1;
        MakeRoutineFrame 3;
        SetLocal 3 0;
        Jump: 022327
      } else {
        Jump: 070721
      }
    } else {
      Jump: 070721
    }
  } else {
    Jump: 070721
  }
LocReturn 070706:
  PushStack call_result;
  TraceOperation 070715 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 070720 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 070721:
  TraceOperation 070721 (Je [Var (Local 1),Con 3] (Branch F (Dloc 070863)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 070726 (Print_ret "The Pub is pleasant and cheerful and full of pleasant and cheerful people who don't know they've got about twelve minutes to live and are therefore having a spot of lunch. Some music is playing on an old jukebox. The exit is east.");
    GamePrint "The Pub is pleasant and cheerful and full of pleasant and cheerful people who don't know they've got about twelve minutes to live and are therefore having a spot of lunch. Some music is playing on an old jukebox. The exit is east.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 070863
  }
LocOp 070863:
  TraceOperation 070863 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 070867 (Test_attr (Con 127) (Con 27) (Branch F Dfalse));
    Let b2 = M[001897];
    if (TestBit(b2,4)) {
      TraceOperation 070871 (Jin (Con 142) (Var (Global 0)) (Branch F Dfalse));
      Let b3 = M[007908];
      Let b4 = M[007909];
      Let b5 = M[002033];
      if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
        TraceOperation 070875 (Je [Var (Global 120),Con 142] (Branch T Dfalse));
        Let b6 = M[008148];
        Let b7 = M[008149];
        if (Equal(MakeHiLo(b6,b7),142)) {
          PopFrame;
          PopReturnAddress return_address_8;
          SetResult 0;
          JumpIndirect: (return) return_address_8
        } else {
          TraceOperation 070879 (Clear_attr (Con 127) (Con 27));
          Let b9 = M[001897];
          SetByte 001897 ClearBit(b9,4);
          TraceOperation 070882 (Call (Floc 022320) [Con -32630,Con 2] Sp);
          PushFrame;
          PushReturnAddress 070882;
          SetLocal 1 -32630;
          SetLocal 2 2;
          MakeRoutineFrame 3;
          SetLocal 3 0;
          Jump: 022327
        }
      } else {
        PopFrame;
        PopReturnAddress return_address_10;
        SetResult 0;
        JumpIndirect: (return) return_address_10
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 0;
      JumpIndirect: (return) return_address_11
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_12;
    SetResult 0;
    JumpIndirect: (return) return_address_12
  }
LocReturn 070882:
  PushStack call_result;
  TraceOperation 070890 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 070895 (Store (Con 153) (Con 5));
  SetByte 008182 0;
  SetByte 008183 5;
  TraceOperation 070898 New_line;
  GamePrint "\n";
  TraceOperation 070899 (Print "Ford buys ");
  GamePrint "Ford buys ";
  TraceOperation 070906 (Print_obj (Con 127));
  Let b2 = M[001901];
  Let b3 = M[001902];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 070908 (Print_ret " and offers half to you. \"Muscle relaxant...\" he says, impenetrably.");
  GamePrint " and offers half to you. \"Muscle relaxant...\" he says, impenetrably.\n";
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 070958:
  MakeRoutineFrame 0;
  Jump: 070959
LocOp 070959:
  TraceOperation 070959 (Je [Var (Global 203),Con 94] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),94)) {
    TraceOperation 070963 (Call (Floc 022042) [Con 61,Con 131] Sp);
    PushFrame;
    PushReturnAddress 070963;
    SetLocal 1 61;
    SetLocal 2 131;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 070963:
  PushStack call_result;
  TraceOperation 070970 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 070972:
  MakeRoutineFrame 0;
  Jump: 070973
LocOp 070973:
  TraceOperation 070973 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 070977 (Set_attr (Con 131) (Con 27));
    Let b3 = M[001933];
    SetByte 001933 SetBit(b3,4);
    TraceOperation 070980 (Print "On the shelf behind the bar is the usual array of bottles, glasses and soggy beermats");
    GamePrint "On the shelf behind the bar is the usual array of bottles, glasses and soggy beermats";
    TraceOperation 071033 (Jz (Var (Global 127)) (Branch F (Dloc 071071)));
    Let b4 = M[008162];
    Let b5 = M[008163];
    if (IsZero(MakeHiLo(b4,b5))) {
      TraceOperation 071036 (Set_attr (Con 126) (Con 25));
      Let b6 = M[001888];
      SetByte 001888 SetBit(b6,6);
      TraceOperation 071039 (Set_attr (Con 126) (Con 21));
      Let b7 = M[001887];
      SetByte 001887 SetBit(b7,2);
      TraceOperation 071042 (Jz (Var (Global 126)) (Branch T (Dloc 071053)));
      Let b8 = M[008160];
      Let b9 = M[008161];
      if (IsZero(MakeHiLo(b8,b9))) {
        Jump: 071053
      } else {
        TraceOperation 071045 (Print ", and");
        GamePrint ", and";
        TraceOperation 071050 (Jump 071056);
        Jump: 071056
      }
    } else {
      Jump: 071071
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
LocOp 071053:
  TraceOperation 071053 (Print ",");
  GamePrint ",";
  Jump: 071056
LocOp 071056:
  TraceOperation 071056 (Print " some packets of peanuts");
  GamePrint " some packets of peanuts";
  Jump: 071071
LocOp 071071:
  TraceOperation 071071 (Jz (Var (Global 126)) (Branch F (Dloc 071104)));
  Let b1 = M[008160];
  Let b2 = M[008161];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 071074 (Set_attr (Con 125) (Con 25));
    Let b3 = M[001879];
    SetByte 001879 SetBit(b3,6);
    TraceOperation 071077 (Set_attr (Con 125) (Con 21));
    Let b4 = M[001878];
    SetByte 001878 SetBit(b4,2);
    TraceOperation 071080 (Print ", and a plate of uninviting ");
    GamePrint ", and a plate of uninviting ";
    TraceOperation 071099 (Print_obj (Con 125));
    Let b5 = M[001883];
    Let b6 = M[001884];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 071101 (Print "es");
    GamePrint "es";
    Jump: 071104
  } else {
    Jump: 071104
  }
LocOp 071104:
  TraceOperation 071104 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071108:
  MakeRoutineFrame 0;
  Jump: 071109
LocOp 071109:
  TraceOperation 071109 (Je [Var (Global 203),Con 57,Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),74))) {
    TraceOperation 071115 (Call (Floc 022042) [Con 74,Con 129] Sp);
    PushFrame;
    PushReturnAddress 071115;
    SetLocal 1 74;
    SetLocal 2 129;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 071115:
  PushStack call_result;
  TraceOperation 071122 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071124:
  MakeRoutineFrame 0;
  Jump: 071125
LocOp 071125:
  TraceOperation 071125 (Je [Var (Global 203),Con 74] (Branch F (Dloc 071381)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 071130 (Print "The song is ");
    GamePrint "The song is ";
    TraceOperation 071137 (Random (Con 100) Sp);
    LetRandom random3 100;
    PushStack random3;
    TraceOperation 071141 (Jl (Con 25) (Var Sp) (Branch T (Dloc 071194)));
    PopStack popped4;
    if (LessThan(25,popped4)) {
      Jump: 071194
    } else {
      TraceOperation 071145 (Print_ret "a Walker Brothers single, \"The Sun Ain't Gonna Shine Anymore.\"");
      GamePrint "a Walker Brothers single, \"The Sun Ain't Gonna Shine Anymore.\"\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 071381
  }
LocOp 071194:
  TraceOperation 071194 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 071198 (Jl (Con 33) (Var Sp) (Branch T (Dloc 071223)));
  PopStack popped2;
  if (LessThan(33,popped2)) {
    Jump: 071223
  } else {
    TraceOperation 071202 (Print_ret "\"Get Back\" by the Beatles.");
    GamePrint "\"Get Back\" by the Beatles.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 071223:
  TraceOperation 071223 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 071227 (Jl (Con 50) (Var Sp) (Branch T (Dloc 071307)));
  PopStack popped2;
  if (LessThan(50,popped2)) {
    Jump: 071307
  } else {
    TraceOperation 071232 (Print_ret "\"Hey Jude\" by the Beatles (Footnote 4). It's a particular favourite, and listening to it calms you down, and cheers you up.");
    GamePrint "\"Hey Jude\" by the Beatles (Footnote 4). It's a particular favourite, and listening to it calms you down, and cheers you up.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 071307:
  TraceOperation 071307 (Print "\"Tie a Yellow Ribbon.\"");
  GamePrint "\"Tie a Yellow Ribbon.\"";
  TraceOperation 071328 (Je [Var (Global 120),Con 142] (Branch F (Dloc 071379)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 071332 (Print " You can't stand it, and are pleased to think that this is probably the last time it will ever be heard.");
    GamePrint " You can't stand it, and are pleased to think that this is probably the last time it will ever be heard.";
    Jump: 071379
  } else {
    Jump: 071379
  }
LocOp 071379:
  TraceOperation 071379 New_line;
  GamePrint "\n";
  TraceOperation 071380 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 071381:
  TraceOperation 071381 (Je [Var (Global 203),Con 40] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),40)) {
    TraceOperation 071385 (Call (Floc 057712) [Con -11164] Sp);
    PushFrame;
    PushReturnAddress 071385;
    SetLocal 1 -11164;
    MakeRoutineFrame 1;
    Jump: 057715
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 071385:
  PushStack call_result;
  TraceOperation 071392 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 071394:
  MakeRoutineFrame 0;
  Jump: 071395
LocOp 071395:
  TraceOperation 071395 (Je [Con 128,Var (Global 195)] (Branch F (Dloc 071505)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(128,MakeHiLo(b1,b2))) {
    TraceOperation 071400 (Je [Var (Global 203),Con 150] (Branch F (Dloc 071423)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 071404 (Je [Var (Global 201),Con 30] (Branch F (Dloc 071423)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 071408 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 071411 (Call (Floc 022042) [Con 22,Con 128,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame;
        PushReturnAddress 071411;
        SetLocal 1 22;
        SetLocal 2 128;
        SetLocal 3 MakeHiLo(b7,b8);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 022057
      } else {
        Jump: 071423
      }
    } else {
      Jump: 071423
    }
  } else {
    Jump: 071505
  }
LocReturn 071411:
  PushStack call_result;
  TraceOperation 071419 (Store (Con 211) (Con 128));
  SetByte 008298 0;
  SetByte 008299 128;
  TraceOperation 071422 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 071423:
  TraceOperation 071423 (Je [Var (Global 203),Con 75] (Branch F (Dloc 071441)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 071427 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 071430 (Call (Floc 022042) [Con 75,Con 128] Sp);
    PushFrame;
    PushReturnAddress 071430;
    SetLocal 1 75;
    SetLocal 2 128;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 071441
  }
LocReturn 071430:
  PushStack call_result;
  TraceOperation 071437 (Store (Con 211) (Con 128));
  SetByte 008298 0;
  SetByte 008299 128;
  TraceOperation 071440 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 071441:
  TraceOperation 071441 (Je [Var (Global 203),Con 66] (Branch F (Dloc 071464)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 071445 (Je [Var (Global 201),Con 30] (Branch F (Dloc 071464)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 071449 (Je [Var (Global 202),Con 126,Con 127,Con 125] (Branch F (Dloc 071464)));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),126),Equal(MakeHiLo(b5,b6),127)),Equal(MakeHiLo(b5,b6),125))) {
        TraceOperation 071456 (Call (Floc 022042) [Con 30,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame;
        PushReturnAddress 071456;
        SetLocal 1 30;
        SetLocal 2 MakeHiLo(b7,b8);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      } else {
        Jump: 071464
      }
    } else {
      Jump: 071464
    }
  } else {
    Jump: 071464
  }
LocReturn 071456:
  PushStack call_result;
  TraceOperation 071463 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 071464:
  TraceOperation 071464 (Print_ret "The barman ignores you and keeps polishing the other end of the bar.");
  GamePrint "The barman ignores you and keeps polishing the other end of the bar.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 071505:
  TraceOperation 071505 (Je [Var (Global 203),Con 23] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 071509 (Je [Var (Global 202),Con 126,Con 127,Con 125] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),126),Equal(MakeHiLo(b3,b4),127)),Equal(MakeHiLo(b3,b4),125))) {
      TraceOperation 071516 (Call (Floc 022042) [Con 30,Var (Global 202)] Sp);
      Let b5 = M[008312];
      Let b6 = M[008313];
      PushFrame;
      PushReturnAddress 071516;
      SetLocal 1 30;
      SetLocal 2 MakeHiLo(b5,b6);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
LocReturn 071516:
  PushStack call_result;
  TraceOperation 071523 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 071524:
  MakeRoutineFrame 0;
  Jump: 071525
LocOp 071525:
  TraceOperation 071525 (Je [Var (Global 203),Con 43,Con 57,Con 51] (Branch T (Dloc 071539)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),43),Equal(MakeHiLo(b1,b2),57)),Equal(MakeHiLo(b1,b2),51))) {
    Jump: 071539
  } else {
    TraceOperation 071532 (Je [Var (Global 203),Con 124,Con 159,Con 139] (Branch F (Dloc 071564)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),124),Equal(MakeHiLo(b3,b4),159)),Equal(MakeHiLo(b3,b4),139))) {
      Jump: 071539
    } else {
      Jump: 071564
    }
  }
LocOp 071539:
  TraceOperation 071539 (Test_attr (Con 127) (Con 27) (Branch F (Dloc 071564)));
  Let b1 = M[001897];
  if (TestBit(b1,4)) {
    TraceOperation 071543 (Print_ret "You'd better buy some first.");
    GamePrint "You'd better buy some first.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 071564
  }
LocOp 071564:
  TraceOperation 071564 (Je [Var (Global 203),Con 43] (Branch F (Dloc 071575)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 071568 (Print_ret "Lots.");
    GamePrint "Lots.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 071575
  }
LocOp 071575:
  TraceOperation 071575 (Je [Var (Global 203),Con 124] (Branch F (Dloc 071592)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 071579 (Print_ret "Just drink it!");
    GamePrint "Just drink it!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 071592
  }
LocOp 071592:
  TraceOperation 071592 (Je [Var (Global 120),Con 142] (Branch F (Dloc 072053)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 071597 (Je [Var (Global 203),Con 30] (Branch F (Dloc 071859)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 071602 (Test_attr (Con 127) (Con 27) (Branch T (Dloc 071613)));
      Let b5 = M[001897];
      if (TestBit(b5,4)) {
        Jump: 071613
      } else {
        TraceOperation 071606 (Print_ret "You already did!");
        GamePrint "You already did!\n";
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      }
    } else {
      Jump: 071859
    }
  } else {
    Jump: 072053
  }
LocOp 071613:
  TraceOperation 071613 (Clear_attr (Con 127) (Con 27));
  Let b1 = M[001897];
  SetByte 001897 ClearBit(b1,4);
  TraceOperation 071616 (Jin (Con 123) (Var (Global 0)) (Branch F (Dloc 071793)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[001862];
  if (Equal(MakeHiLo(b2,b3),Widen(b4))) {
    TraceOperation 071621 (Print "You order six pints of bitter -- three for you, three for Arthur. According to ");
    GamePrint "You order six pints of bitter -- three for you, three for Arthur. According to ";
    TraceOperation 071668 (Print_obj (Con 1));
    Let b5 = M[000767];
    Let b6 = M[000768];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 071670 (Print " this should");
    GamePrint " this should";
    TraceOperation 071677 (Call (Floc 057960) [] Sp);
    PushFrame;
    PushReturnAddress 071677;
    MakeRoutineFrame 0;
    Jump: 057961
  } else {
    Jump: 071793
  }
LocReturn 071677:
  PushStack call_result;
  TraceOperation 071682 New_line;
  GamePrint "\n";
  TraceOperation 071683 New_line;
  GamePrint "\n";
  TraceOperation 071684 (Print_ret "As you drink the first pint, you mention to Arthur that you are from a different planet, but it makes little impression. This surprises you, because you thought it was the sort of thing that would interest people.");
  GamePrint "As you drink the first pint, you mention to Arthur that you are from a different planet, but it makes little impression. This surprises you, because you thought it was the sort of thing that would interest people.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 071793:
  TraceOperation 071793 (Print "You buy yourself three pints, which you calculate you will need to");
  GamePrint "You buy yourself three pints, which you calculate you will need to";
  TraceOperation 071830 (Call (Floc 057960) [] Sp);
  PushFrame;
  PushReturnAddress 071830;
  MakeRoutineFrame 0;
  Jump: 057961
LocReturn 071830:
  PushStack call_result;
  TraceOperation 071835 (Print " This is a tip you picked up from ");
  GamePrint " This is a tip you picked up from ";
  TraceOperation 071854 (Print_obj (Con 1));
  Let b1 = M[000767];
  Let b2 = M[000768];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 071856 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 071859:
  TraceOperation 071859 (Je [Var (Global 203),Con 57,Con 51] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),51))) {
    TraceOperation 071865 (Inc (Con 146));
    Let b3 = M[008168];
    Let b4 = M[008169];
    SetByte 008168 HiByte(Add(MakeHiLo(b3,b4),1));
    SetByte 008169 LoByte(Add(MakeHiLo(b3,b4),1));
    TraceOperation 071867 (Jin (Con 123) (Var (Global 0)) (Branch T (Dloc 071875)));
    Let b5 = M[007908];
    Let b6 = M[007909];
    Let b7 = M[001862];
    if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
      Jump: 071875
    } else {
      TraceOperation 071871 (Print_paddr (Var (Global 62)));
      Let b8 = M[008032];
      Let b9 = M[008033];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b8,b9)));
      TraceOperation 071873 New_line;
      GamePrint "\n";
      TraceOperation 071874 Rtrue;
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 1;
      JumpIndirect: (return) return_address_10
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 0;
    JumpIndirect: (return) return_address_11
  }
LocOp 071875:
  TraceOperation 071875 (Je [Var (Global 130),Con 1] (Branch F (Dloc 072026)));
  Let b1 = M[008168];
  Let b2 = M[008169];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 071880 (Add (Var (Global 1)) (Var (Global 129)) (Global 1));
    Let b3 = M[007910];
    Let b4 = M[007911];
    Let b5 = M[008166];
    Let b6 = M[008167];
    SetByte 007910 HiByte(Add(MakeHiLo(b3,b4),MakeHiLo(b5,b6)));
    SetByte 007911 LoByte(Add(MakeHiLo(b3,b4),MakeHiLo(b5,b6)));
    TraceOperation 071884 (Store (Con 145) (Con 0));
    SetByte 008166 0;
    SetByte 008167 0;
    TraceOperation 071887 (Print_paddr (Var (Global 62)));
    Let b7 = M[008032];
    Let b8 = M[008033];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 071889 (Print_ret " At least they managed to get something right on this benighted planet. You decide it's time to tell Arthur that the world is about to end. You tell him. Arthur is completely unperturbed. Curious. You wonder what sort of news it would take to disturb him.");
    GamePrint " At least they managed to get something right on this benighted planet. You decide it's time to tell Arthur that the world is about to end. You tell him. Arthur is completely unperturbed. Curious. You wonder what sort of news it would take to disturb him.\n";
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 072026
  }
LocOp 072026:
  TraceOperation 072026 (Je [Var (Global 130),Con 2] (Branch F (Dloc 072038)));
  Let b1 = M[008168];
  Let b2 = M[008169];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 072030 (Print_paddr (Var (Global 62)));
    Let b3 = M[008032];
    Let b4 = M[008033];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 072032 (Call (Floc 077040) [] Sp);
    PushFrame;
    PushReturnAddress 072032;
    MakeRoutineFrame 0;
    Jump: 077041
  } else {
    Jump: 072038
  }
LocReturn 072032:
  PushStack call_result;
  TraceOperation 072037 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 072038:
  TraceOperation 072038 (Print_ret "You've had enough.");
  GamePrint "You've had enough.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 072053:
  TraceOperation 072053 (Je [Var (Global 203),Con 57,Con 51] (Branch F (Dloc 072651)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),51))) {
    TraceOperation 072060 (Add (Var (Global 1)) (Con 5) (Global 1));
    Let b3 = M[007910];
    Let b4 = M[007911];
    SetByte 007910 HiByte(Add(MakeHiLo(b3,b4),5));
    SetByte 007911 LoByte(Add(MakeHiLo(b3,b4),5));
    TraceOperation 072064 (Inc (Con 146));
    Let b5 = M[008168];
    Let b6 = M[008169];
    SetByte 008168 HiByte(Add(MakeHiLo(b5,b6),1));
    SetByte 008169 LoByte(Add(MakeHiLo(b5,b6),1));
    TraceOperation 072066 (Je [Var (Global 130),Con 4] (Branch F (Dloc 072142)));
    Let b7 = M[008168];
    Let b8 = M[008169];
    if (Equal(MakeHiLo(b7,b8),4)) {
      TraceOperation 072071 (Print "You can hear the muffled noise of your home being demolished, and the taste of the beer sours in your mouth.");
      GamePrint "You can hear the muffled noise of your home being demolished, and the taste of the beer sours in your mouth.";
      TraceOperation 072132 New_line;
      GamePrint "\n";
      TraceOperation 072133 New_line;
      GamePrint "\n";
      TraceOperation 072134 (Call (Floc 022042) [Con 147,Con 217] Sp);
      PushFrame;
      PushReturnAddress 072134;
      SetLocal 1 147;
      SetLocal 2 217;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 072142
    }
  } else {
    Jump: 072651
  }
LocReturn 072134:
  PushStack call_result;
  TraceOperation 072141 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 072142:
  TraceOperation 072142 (Je [Var (Global 130),Con 3] (Branch F (Dloc 072224)));
  Let b1 = M[008168];
  Let b2 = M[008169];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 072147 (Call (Floc 022320) [Con -32630,Con -1] Sp);
    PushFrame;
    PushReturnAddress 072147;
    SetLocal 1 -32630;
    SetLocal 2 -1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 072224
  }
LocReturn 072147:
  PushStack call_result;
  TraceOperation 072156 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 072161 (Store (Con 161) (Con 1));
  SetByte 008198 0;
  SetByte 008199 1;
  TraceOperation 072164 (Store (Con 155) (Con 0));
  SetByte 008186 0;
  SetByte 008187 0;
  TraceOperation 072167 (Print_ret "There is a distant crash which Ford explains is nothing to worry about, probably just your house being knocked down.");
  GamePrint "There is a distant crash which Ford explains is nothing to worry about, probably just your house being knocked down.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 072224:
  TraceOperation 072224 (Je [Var (Global 130),Con 2] (Branch F (Dloc 072398)));
  Let b1 = M[008168];
  Let b2 = M[008169];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 072229 (Print_ret "It is really very pleasant stuff, with a very good dry, nutty flavour, some light froth on top, and a deep colour. It is at exactly room temperature. You reflect that the world cannot be all bad when there are such pleasures in it.\n\nFord mentions that the world is going to end in about twelve minutes.");
    GamePrint "It is really very pleasant stuff, with a very good dry, nutty flavour, some light froth on top, and a deep colour. It is at exactly room temperature. You reflect that the world cannot be all bad when there are such pleasures in it.\n\nFord mentions that the world is going to end in about twelve minutes.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 072398
  }
LocOp 072398:
  TraceOperation 072398 (Je [Var (Global 130),Con 1] (Branch F Dfalse));
  Let b1 = M[008168];
  Let b2 = M[008169];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 072402 (Print_ret "It's very good beer, brewed by a small local company. You particularly like its flavour, which is why you woke up feeling so wretched this morning. You were at somebody's birthday party here in the Pub last night.\n\nYou begin to relax and enjoy yourself, so when Ford mentions that he's from a small planet in the vicinity of Betelgeuse, not from Guildford as he usually claims, you take it in your stride, and say \"Oh yes, which part?\"");
    GamePrint "It's very good beer, brewed by a small local company. You particularly like its flavour, which is why you woke up feeling so wretched this morning. You were at somebody's birthday party here in the Pub last night.\n\nYou begin to relax and enjoy yourself, so when Ford mentions that he's from a small planet in the vicinity of Betelgeuse, not from Guildford as he usually claims, you take it in your stride, and say \"Oh yes, which part?\"\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 072651:
  TraceOperation 072651 (Je [Var (Global 203),Con 30] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 072655 (Test_attr (Con 127) (Con 27) (Branch F (Dloc 072667)));
    Let b3 = M[001897];
    if (TestBit(b3,4)) {
      TraceOperation 072659 (Call (Floc 022042) [Con 30,Con 126] Sp);
      PushFrame;
      PushReturnAddress 072659;
      SetLocal 1 30;
      SetLocal 2 126;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 072667
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocReturn 072659:
  PushStack call_result;
  TraceOperation 072666 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 072667:
  TraceOperation 072667 (Print_obj (Con 142));
  Let b1 = M[002036];
  Let b2 = M[002037];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 072669 (Print_ret " has already bought an enormous quantity for you!");
  GamePrint " has already bought an enormous quantity for you!\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 072696:
  MakeRoutineFrame 0;
  Jump: 072697
LocOp 072697:
  TraceOperation 072697 (Je [Var (Global 120),Con 142] (Branch F (Dloc 072794)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 072702 (Je [Var (Global 203),Con 30] (Branch F (Dloc 072794)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 072707 (Jz (Var (Global 127)) (Branch T (Dloc 072717)));
      Let b5 = M[008162];
      Let b6 = M[008163];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 072717
      } else {
        TraceOperation 072710 (Print_ret "You did!");
        GamePrint "You did!\n";
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      }
    } else {
      Jump: 072794
    }
  } else {
    Jump: 072794
  }
LocOp 072717:
  TraceOperation 072717 (Store (Con 143) (Con 1));
  SetByte 008162 0;
  SetByte 008163 1;
  TraceOperation 072720 (Insert_obj (Con 126) (Con 31));
  Let b1 = M[001889];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),126)) {
      Let b3 = M[001890];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),126)) {
          Let b7 = M[001890];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 001889 31;
  Let b8 = M[001036];
  SetByte 001890 LoByte(Widen(b8));
  SetByte 001036 126;
  TraceOperation 072723 (Clear_attr (Con 126) (Con 21));
  Let b9 = M[001887];
  SetByte 001887 ClearBit(b9,2);
  TraceOperation 072726 (Clear_attr (Con 126) (Con 27));
  Let b10 = M[001888];
  SetByte 001888 ClearBit(b10,4);
  TraceOperation 072729 (Print "You buy some peanuts, which you'll need to replace protein loss from the");
  GamePrint "You buy some peanuts, which you'll need to replace protein loss from the";
  TraceOperation 072770 (Print_paddr (Var (Global 42)));
  Let b11 = M[007992];
  Let b12 = M[007993];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b11,b12)));
  TraceOperation 072772 (Print ", a tip you picked up from ");
  GamePrint ", a tip you picked up from ";
  TraceOperation 072789 (Print_obj (Con 1));
  Let b13 = M[000767];
  Let b14 = M[000768];
  Let b15 = M[Address(MakeHiLo(b13,b14))];
  Let ite_res16 = Ite((IsZeroByte(b15),"",GetText(Offset(Address(MakeHiLo(b13,b14)),1))));
  GamePrint ite_res16;
  TraceOperation 072791 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_17;
  SetResult 1;
  JumpIndirect: (return) return_address_17
LocOp 072794:
  TraceOperation 072794 (Je [Var (Global 203),Con 103] (Branch F (Dloc 072809)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 072798 (Print_ret "Just eat 'em.");
    GamePrint "Just eat 'em.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 072809
  }
LocOp 072809:
  TraceOperation 072809 (Je [Var (Global 203),Con 57,Con 56] (Branch F (Dloc 072883)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),56))) {
    TraceOperation 072816 (Jz (Var (Global 122)) (Branch T (Dloc 072883)));
    Let b3 = M[008152];
    Let b4 = M[008153];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 072883
    } else {
      TraceOperation 072820 (Jz (Var (Global 71)) (Branch T (Dloc 072883)));
      Let b5 = M[008050];
      Let b6 = M[008051];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 072883
      } else {
        TraceOperation 072823 (Store (Con 87) (Con 0));
        SetByte 008050 0;
        SetByte 008051 0;
        TraceOperation 072826 (Insert_obj (Con 126) (Con 134));
        Let b7 = M[001889];
        if (IsZero(Widen(b7))) {} else {
          Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
          if (Equal(Widen(b8),126)) {
            Let b9 = M[001890];
            SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
          } else {
            Let loop_var10 = Widen(b8);
            Label 11: {
              Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
              if (Equal(Widen(b12),126)) {
                Let b13 = M[001890];
                SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
              } else {
                Assign loop_var10 = Widen(b12);
                Goto: Label 11
              }
            }
          }
        }
        SetByte 001889 134;
        Let b14 = M[001963];
        SetByte 001890 LoByte(Widen(b14));
        SetByte 001963 126;
        TraceOperation 072829 (Set_attr (Con 126) (Con 21));
        Let b15 = M[001887];
        SetByte 001887 SetBit(b15,2);
        TraceOperation 072832 (Set_attr (Con 126) (Con 27));
        Let b16 = M[001888];
        SetByte 001888 SetBit(b16,4);
        TraceOperation 072835 (Print "You feel stronger as the peanuts replace some of the protein you lost in the");
        GamePrint "You feel stronger as the peanuts replace some of the protein you lost in the";
        TraceOperation 072878 (Print_paddr (Var (Global 42)));
        Let b17 = M[007992];
        Let b18 = M[007993];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b17,b18)));
        TraceOperation 072880 (Print_ret ".");
        GamePrint ".\n";
        PopFrame;
        PopReturnAddress return_address_19;
        SetResult 1;
        JumpIndirect: (return) return_address_19
      }
    }
  } else {
    Jump: 072883
  }
LocOp 072883:
  TraceOperation 072883 (Je [Var (Global 203),Con 30] (Branch F (Dloc 072990)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 072888 (Je [Var (Global 0),Con 134] (Branch F (Dloc 072990)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),134)) {
      TraceOperation 072893 (Print_ret "However much you clear your throat, wave your forefinger, or wiggle your eyebrows, the barman pays no attention, but carries on wiping another part of the bar.");
      GamePrint "However much you clear your throat, wave your forefinger, or wiggle your eyebrows, the barman pays no attention, but carries on wiping another part of the bar.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 072990
    }
  } else {
    Jump: 072990
  }
LocOp 072990:
  TraceOperation 072990 (Je [Var (Global 203),Con 56,Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),56),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 072996 (Test_attr (Con 126) (Con 21) (Branch F Dfalse));
    Let b3 = M[001887];
    if (TestBit(b3,2)) {
      TraceOperation 073000 (Je [Var (Global 0),Con 134] (Branch F Dfalse));
      Let b4 = M[007908];
      Let b5 = M[007909];
      if (Equal(MakeHiLo(b4,b5),134)) {
        TraceOperation 073004 (Print_paddr (Var (Global 20)));
        Let b6 = M[007948];
        Let b7 = M[007949];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
        TraceOperation 073006 New_line;
        GamePrint "\n";
        TraceOperation 073007 Rtrue;
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 1;
        JumpIndirect: (return) return_address_8
      } else {
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 0;
        JumpIndirect: (return) return_address_9
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 0;
      JumpIndirect: (return) return_address_10
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 0;
    JumpIndirect: (return) return_address_11
  }
--------------------------------------------------
LocRoutine 073008:
  MakeRoutineFrame 0;
  Jump: 073009
LocOp 073009:
  TraceOperation 073009 (Je [Var (Global 203),Con 30] (Branch F (Dloc 073247)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 073014 (Jz (Var (Global 126)) (Branch F (Dloc 073247)));
    Let b3 = M[008160];
    Let b4 = M[008161];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 073018 (Insert_obj (Con 125) (Con 31));
      Let b5 = M[001880];
      if (IsZero(Widen(b5))) {} else {
        Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b6),125)) {
          Let b7 = M[001881];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
        } else {
          Let loop_var8 = Widen(b6);
          Label 9: {
            Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
            if (Equal(Widen(b10),125)) {
              Let b11 = M[001881];
              SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
            } else {
              Assign loop_var8 = Widen(b10);
              Goto: Label 9
            }
          }
        }
      }
      SetByte 001880 31;
      Let b12 = M[001036];
      SetByte 001881 LoByte(Widen(b12));
      SetByte 001036 125;
      TraceOperation 073021 (Set_attr (Con 125) (Con 25));
      Let b13 = M[001879];
      SetByte 001879 SetBit(b13,6);
      TraceOperation 073024 (Clear_attr (Con 125) (Con 21));
      Let b14 = M[001878];
      SetByte 001878 ClearBit(b14,2);
      TraceOperation 073027 (Clear_attr (Con 125) (Con 27));
      Let b15 = M[001879];
      SetByte 001879 ClearBit(b15,4);
      TraceOperation 073030 (Store (Con 142) (Con 1));
      SetByte 008160 0;
      SetByte 008161 1;
      TraceOperation 073033 (Print "The barman gives you a ");
      GamePrint "The barman gives you a ";
      TraceOperation 073048 (Print_obj (Con 125));
      Let b16 = M[001883];
      Let b17 = M[001884];
      Let b18 = M[Address(MakeHiLo(b16,b17))];
      Let ite_res19 = Ite((IsZeroByte(b18),"",GetText(Offset(Address(MakeHiLo(b16,b17)),1))));
      GamePrint ite_res19;
      TraceOperation 073050 (Print_ret ". The bread is like the stuff that stereos come packed in, the cheese would be great for rubbing out spelling mistakes, and margarine and pickle have performed an unedifying chemical reaction to produce something that shouldn't be, but is, turquoise. Since it is clearly unfit for human consumption you are grateful to be charged only a pound for it.");
      GamePrint ". The bread is like the stuff that stereos come packed in, the cheese would be great for rubbing out spelling mistakes, and margarine and pickle have performed an unedifying chemical reaction to produce something that shouldn't be, but is, turquoise. Since it is clearly unfit for human consumption you are grateful to be charged only a pound for it.\n";
      PopFrame;
      PopReturnAddress return_address_20;
      SetResult 1;
      JumpIndirect: (return) return_address_20
    } else {
      Jump: 073247
    }
  } else {
    Jump: 073247
  }
LocOp 073247:
  TraceOperation 073247 (Je [Var (Global 203),Con 30] (Branch F (Dloc 073258)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),30)) {
    TraceOperation 073251 (Print_ret "You already did.");
    GamePrint "You already did.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 073258
  }
LocOp 073258:
  TraceOperation 073258 (Je [Var (Global 203),Con 57,Con 56,Con 124] (Branch F (Dloc 073277)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),56)),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 073265 (Test_attr (Con 125) (Con 21) (Branch F (Dloc 073277)));
    Let b3 = M[001878];
    if (TestBit(b3,2)) {
      TraceOperation 073269 (Je [Var (Global 0),Con 134] (Branch F (Dloc 073277)));
      Let b4 = M[007908];
      Let b5 = M[007909];
      if (Equal(MakeHiLo(b4,b5),134)) {
        TraceOperation 073273 (Print_paddr (Var (Global 20)));
        Let b6 = M[007948];
        Let b7 = M[007949];
        GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
        TraceOperation 073275 New_line;
        GamePrint "\n";
        TraceOperation 073276 Rtrue;
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 1;
        JumpIndirect: (return) return_address_8
      } else {
        Jump: 073277
      }
    } else {
      Jump: 073277
    }
  } else {
    Jump: 073277
  }
LocOp 073277:
  TraceOperation 073277 (Je [Var (Global 203),Con 57,Con 56] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),56))) {
    TraceOperation 073283 (Insert_obj (Con 125) (Con 219));
    Let b3 = M[001880];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),125)) {
        Let b5 = M[001881];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),125)) {
            Let b9 = M[001881];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 001880 219;
    Let b10 = M[002728];
    SetByte 001881 LoByte(Widen(b10));
    SetByte 002728 125;
    TraceOperation 073286 (Sub (Var (Global 1)) (Con 30) (Global 1));
    Let b11 = M[007910];
    Let b12 = M[007911];
    SetByte 007910 HiByte(Sub(MakeHiLo(b11,b12),30));
    SetByte 007911 LoByte(Sub(MakeHiLo(b11,b12),30));
    TraceOperation 073290 (Je [Var (Global 120),Con 142] (Branch F (Dloc 073379)));
    Let b13 = M[008148];
    Let b14 = M[008149];
    if (Equal(MakeHiLo(b13,b14),142)) {
      TraceOperation 073295 (Print "You swallow with revulsion, astonished that life forms which have spent 4.6 billion years evolving cannot produce a better ");
      GamePrint "You swallow with revulsion, astonished that life forms which have spent 4.6 billion years evolving cannot produce a better ";
      TraceOperation 073368 (Print_obj (Con 125));
      Let b15 = M[001883];
      Let b16 = M[001884];
      Let b17 = M[Address(MakeHiLo(b15,b16))];
      Let ite_res18 = Ite((IsZeroByte(b17),"",GetText(Offset(Address(MakeHiLo(b15,b16)),1))));
      GamePrint ite_res18;
      TraceOperation 073370 (Print_ret " than this.");
      GamePrint " than this.\n";
      PopFrame;
      PopReturnAddress return_address_19;
      SetResult 1;
      JumpIndirect: (return) return_address_19
    } else {
      Jump: 073379
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_20;
    SetResult 0;
    JumpIndirect: (return) return_address_20
  }
LocOp 073379:
  TraceOperation 073379 (Print_ret "It is one of the least rewarding taste experiences you can recall.");
  GamePrint "It is one of the least rewarding taste experiences you can recall.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 073420:
  MakeRoutineFrame 0;
  Jump: 073421
LocOp 073421:
  TraceOperation 073421 (Call (Floc 022320) [Con -28826,Con -1] Sp);
  PushFrame;
  PushReturnAddress 073421;
  SetLocal 1 -28826;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 073421:
  PushStack call_result;
  TraceOperation 073430 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 073435 (Inc (Con 141));
  Let b2 = M[008158];
  Let b3 = M[008159];
  SetByte 008158 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008159 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 073437 (Je [Var (Global 125),Con 1] (Branch F (Dloc 073960)));
  Let b4 = M[008158];
  Let b5 = M[008159];
  if (Equal(MakeHiLo(b4,b5),1)) {
    TraceOperation 073442 (Je [Var (Global 0),Con 134] (Branch F (Dloc 073451)));
    Let b6 = M[007908];
    Let b7 = M[007909];
    if (Equal(MakeHiLo(b6,b7),134)) {
      TraceOperation 073446 (Call (Floc 074788) [] Sp);
      PushFrame;
      PushReturnAddress 073446;
      MakeRoutineFrame 0;
      Jump: 074789
    } else {
      Jump: 073451
    }
  } else {
    Jump: 073960
  }
LocReturn 073446:
  PushStack call_result;
  Jump: 073451
LocOp 073451:
  TraceOperation 073451 (Insert_obj (Con 124) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001871];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),124)) {
      Let b5 = M[001872];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),124)) {
          Let b9 = M[001872];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 001871 b2;
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  SetByte 001872 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 124;
  TraceOperation 073454 New_line;
  GamePrint "\n";
  TraceOperation 073455 (Je [Var (Global 120),Con 142] (Branch F (Dloc 073641)));
  Let b11 = M[008148];
  Let b12 = M[008149];
  if (Equal(MakeHiLo(b11,b12),142)) {
    TraceOperation 073460 (Insert_obj (Con 123) (Var (Global 0)));
    Let b13 = M[007908];
    Let b14 = M[007909];
    Let b15 = M[001862];
    if (IsZero(Widen(b15))) {} else {
      Let b16 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
      if (Equal(Widen(b16),123)) {
        Let b17 = M[001863];
        SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b17));
      } else {
        Let loop_var18 = Widen(b16);
        Label 19: {
          Let b20 = M[Offset(Offset(000751,Mul(loop_var18,9)),5)];
          if (Equal(Widen(b20),123)) {
            Let b21 = M[001863];
            SetByte Offset(Offset(000751,Mul(loop_var18,9)),5) LoByte(Widen(b21));
          } else {
            Assign loop_var18 = Widen(b20);
            Goto: Label 19
          }
        }
      }
    }
    SetByte 001862 b14;
    Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6)];
    SetByte 001863 LoByte(Widen(b22));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6) 123;
    TraceOperation 073463 (Print "Right on schedule (according to the news you picked up last night on your Sub-Etha Sens-O-Matic), a huge ");
    GamePrint "Right on schedule (according to the news you picked up last night on your Sub-Etha Sens-O-Matic), a huge ";
    TraceOperation 073536 (Print_obj (Con 124));
    Let b23 = M[001874];
    Let b24 = M[001875];
    Let b25 = M[Address(MakeHiLo(b23,b24))];
    Let ite_res26 = Ite((IsZeroByte(b25),"",GetText(Offset(Address(MakeHiLo(b23,b24)),1))));
    GamePrint ite_res26;
    TraceOperation 073538 (Print_ret " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.");
    GamePrint " hurtles noisily through the sky. Time is very, very short. Storms break in the wake of the ships, the wind whips at you and makes it difficult to stand. You grab hold of a tree.\n";
    PopFrame;
    PopReturnAddress return_address_27;
    SetResult 1;
    JumpIndirect: (return) return_address_27
  } else {
    Jump: 073641
  }
LocOp 073641:
  TraceOperation 073641 (Print "With a noise like a cross between Led Zeppelin's farewell concert and the eruption of Krakatoa, a huge ");
  GamePrint "With a noise like a cross between Led Zeppelin's farewell concert and the eruption of Krakatoa, a huge ";
  TraceOperation 073704 (Print_obj (Con 124));
  Let b1 = M[001874];
  Let b2 = M[001875];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 073706 (Print " flies overhead and announces that the Earth will be demolished to make way for a new hyperspace bypass in \"two of your Earth minutes.\"");
  GamePrint " flies overhead and announces that the Earth will be demolished to make way for a new hyperspace bypass in \"two of your Earth minutes.\"";
  TraceOperation 073789 New_line;
  GamePrint "\n";
  TraceOperation 073790 (Jin (Con 142) (Var (Global 0)) (Branch F (Dloc 073846)));
  Let b5 = M[007908];
  Let b6 = M[007909];
  Let b7 = M[002033];
  if (Equal(MakeHiLo(b5,b6),Widen(b7))) {
    TraceOperation 073794 (Jz (Var (Global 137)) (Branch F (Dloc 073846)));
    Let b8 = M[008182];
    Let b9 = M[008183];
    if (IsZero(MakeHiLo(b8,b9))) {
      TraceOperation 073797 (Insert_obj (Con 142) (Con 219));
      Let b10 = M[002033];
      if (IsZero(Widen(b10))) {} else {
        Let b11 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
        if (Equal(Widen(b11),142)) {
          Let b12 = M[002034];
          SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b12));
        } else {
          Let loop_var13 = Widen(b11);
          Label 14: {
            Let b15 = M[Offset(Offset(000751,Mul(loop_var13,9)),5)];
            if (Equal(Widen(b15),142)) {
              Let b16 = M[002034];
              SetByte Offset(Offset(000751,Mul(loop_var13,9)),5) LoByte(Widen(b16));
            } else {
              Assign loop_var13 = Widen(b15);
              Goto: Label 14
            }
          }
        }
      }
      SetByte 002033 219;
      Let b17 = M[002728];
      SetByte 002034 LoByte(Widen(b17));
      SetByte 002728 142;
      TraceOperation 073800 (Call (Floc 022340) [Con -32630] Sp);
      PushFrame;
      PushReturnAddress 073800;
      SetLocal 1 -32630;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 022349
    } else {
      Jump: 073846
    }
  } else {
    Jump: 073846
  }
LocReturn 073800:
  PushStack call_result;
  TraceOperation 073807 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 073812 (Store (Con 140) (Con 1));
  SetByte 008156 0;
  SetByte 008157 1;
  TraceOperation 073815 (Insert_obj (Con 139) (Var (Global 0)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[002006];
  if (IsZero(Widen(b4))) {} else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
    if (Equal(Widen(b5),139)) {
      Let b6 = M[002007];
      SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
    } else {
      Let loop_var7 = Widen(b5);
      Label 8: {
        Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
        if (Equal(Widen(b9),139)) {
          Let b10 = M[002007];
          SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
        } else {
          Assign loop_var7 = Widen(b9);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 002006 b3;
  Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
  SetByte 002007 LoByte(Widen(b11));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 139;
  TraceOperation 073818 (Clear_attr (Con 139) (Con 21));
  Let b12 = M[002004];
  SetByte 002004 ClearBit(b12,2);
  TraceOperation 073821 New_line;
  GamePrint "\n";
  TraceOperation 073822 (Print "Ford drops the towel and dashes away.");
  GamePrint "Ford drops the towel and dashes away.";
  TraceOperation 073845 New_line;
  GamePrint "\n";
  Jump: 073846
LocOp 073846:
  TraceOperation 073846 (Call (Floc 043468) [Con 156] Sp);
  PushFrame;
  PushReturnAddress 073846;
  SetLocal 1 156;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 073846:
  PushStack call_result;
  TraceOperation 073852 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 073855 (Insert_obj (Con 156) (Con 219));
    Let b3 = M[002159];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),156)) {
        Let b5 = M[002160];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),156)) {
            Let b9 = M[002160];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002159 219;
    Let b10 = M[002728];
    SetByte 002160 LoByte(Widen(b10));
    SetByte 002728 156;
    TraceOperation 073858 New_line;
    GamePrint "\n";
    TraceOperation 073859 (Print "In all the turmoil, ");
    GamePrint "In all the turmoil, ";
    TraceOperation 073872 (Jin (Con 156) (Con 158) (Branch F (Dloc 073909)));
    Let b11 = M[002159];
    if (Equal(158,Widen(b11))) {
      TraceOperation 073876 (Print "the ");
      GamePrint "the ";
      TraceOperation 073879 (Print_obj (Con 156));
      Let b12 = M[002162];
      Let b13 = M[002163];
      Let b14 = M[Address(MakeHiLo(b12,b13))];
      Let ite_res15 = Ite((IsZeroByte(b14),"",GetText(Offset(Address(MakeHiLo(b12,b13)),1))));
      GamePrint ite_res15;
      TraceOperation 073881 (Print " drops out of your pocket and rolls away.");
      GamePrint " drops out of your pocket and rolls away.";
      TraceOperation 073906 (Jump 073931);
      Jump: 073931
    } else {
      Jump: 073909
    }
  }
LocOp 073909:
  TraceOperation 073909 (Print "you drop the ");
  GamePrint "you drop the ";
  TraceOperation 073916 (Print_obj (Con 156));
  Let b1 = M[002162];
  Let b2 = M[002163];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 073918 (Print " and it rolls away.");
  GamePrint " and it rolls away.";
  Jump: 073931
LocOp 073931:
  TraceOperation 073931 (Print " It is the least of your worries. Anyway,");
  GamePrint " It is the least of your worries. Anyway,";
  TraceOperation 073956 (Print_paddr (Var (Global 5)));
  Let b1 = M[007918];
  Let b2 = M[007919];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 073958 New_line;
  GamePrint "\n";
  TraceOperation 073959 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 073960:
  TraceOperation 073960 (Je [Var (Global 125),Con 2] (Branch F (Dloc 074421)));
  Let b1 = M[008158];
  Let b2 = M[008159];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 073965 New_line;
    GamePrint "\n";
    TraceOperation 073966 (Print "The vast yellow ships thunder across the sky, spreading waves of terror and panic in their wake. The voice of the ");
    GamePrint "The vast yellow ships thunder across the sky, spreading waves of terror and panic in their wake. The voice of the ";
    TraceOperation 074029 (Print_obj (Con 106));
    Let b3 = M[001712];
    Let b4 = M[001713];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 074031 (Print " slams across the country, insisting that the planning charts and demolition orders have been available at the local planning office in Alpha Centauri for fifty years and it's too late to start making a fuss about it now.");
    GamePrint " slams across the country, insisting that the planning charts and demolition orders have been available at the local planning office in Alpha Centauri for fifty years and it's too late to start making a fuss about it now.";
    TraceOperation 074158 New_line;
    GamePrint "\n";
    TraceOperation 074159 (Jz (Var (Global 124)) (Branch F Dtrue));
    Let b7 = M[008156];
    Let b8 = M[008157];
    if (IsZero(MakeHiLo(b7,b8))) {
      TraceOperation 074162 New_line;
      GamePrint "\n";
      TraceOperation 074163 (Je [Var (Global 120),Con 142] (Branch F (Dloc 074340)));
      Let b9 = M[008148];
      Let b10 = M[008149];
      if (Equal(MakeHiLo(b9,b10),142)) {
        TraceOperation 074168 (Call (Floc 043468) [Con 7,Con 31] Sp);
        PushFrame;
        PushReturnAddress 074168;
        SetLocal 1 7;
        SetLocal 2 31;
        MakeRoutineFrame 2;
        Jump: 043473
      } else {
        Jump: 074340
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 1;
      JumpIndirect: (return) return_address_11
    }
  } else {
    Jump: 074421
  }
LocReturn 074168:
  PushStack call_result;
  TraceOperation 074175 (Jz (Var Sp) (Branch T (Dloc 074265)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 074265
  } else {
    TraceOperation 074179 (Jin (Con 7) (Con 31) (Branch F (Dloc 074209)));
    Let b2 = M[000818];
    if (Equal(31,Widen(b2))) {
      TraceOperation 074183 (Print "The ");
      GamePrint "The ";
      TraceOperation 074186 (Print_obj (Con 7));
      Let b3 = M[000821];
      Let b4 = M[000822];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
      GamePrint ite_res6;
      TraceOperation 074188 (Print " in ");
      GamePrint " in ";
      TraceOperation 074191 (Print_obj (Con 36));
      Let b7 = M[001082];
      Let b8 = M[001083];
      Let b9 = M[Address(MakeHiLo(b7,b8))];
      Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
      GamePrint ite_res10;
      TraceOperation 074193 (Print " begins to whine.");
      GamePrint " begins to whine.";
      TraceOperation 074206 (Jump 074231);
      Jump: 074231
    } else {
      Jump: 074209
    }
  }
LocOp 074209:
  TraceOperation 074209 (Print "You remove the ");
  GamePrint "You remove the ";
  TraceOperation 074218 (Print_obj (Con 7));
  Let b1 = M[000821];
  Let b2 = M[000822];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 074220 (Print " from your satchel.");
  GamePrint " from your satchel.";
  Jump: 074231
LocOp 074231:
  TraceOperation 074231 (Print " Lights pulsate across its surface. ");
  GamePrint " Lights pulsate across its surface. ";
  TraceOperation 074254 (Print_paddr (Var (Global 4)));
  Let b1 = M[007916];
  Let b2 = M[007917];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 074256 (Insert_obj (Con 7) (Var (Global 0)));
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[000818];
  if (IsZero(Widen(b5))) {} else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b6),7)) {
      Let b7 = M[000819];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
    } else {
      Let loop_var8 = Widen(b6);
      Label 9: {
        Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
        if (Equal(Widen(b10),7)) {
          Let b11 = M[000819];
          SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
        } else {
          Assign loop_var8 = Widen(b10);
          Goto: Label 9
        }
      }
    }
  }
  SetByte 000818 b4;
  Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
  SetByte 000819 LoByte(Widen(b12));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 7;
  TraceOperation 074259 (Store (Con 207) (Con 7));
  SetByte 008290 0;
  SetByte 008291 7;
  TraceOperation 074262 (Jump 074283);
  Jump: 074283
LocOp 074265:
  TraceOperation 074265 (Print "You wish you were holding your ");
  GamePrint "You wish you were holding your ";
  TraceOperation 074278 (Print_obj (Con 7));
  Let b1 = M[000821];
  Let b2 = M[000822];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 074280 (Print ".");
  GamePrint ".";
  Jump: 074283
LocOp 074283:
  TraceOperation 074283 (Print_ret " Arthur is struggling desperately towards you. The end of this planet is now only seconds away.");
  GamePrint " Arthur is struggling desperately towards you. The end of this planet is now only seconds away.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 074340:
  TraceOperation 074340 (Insert_obj (Con 7) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[000818];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),7)) {
      Let b5 = M[000819];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),7)) {
          Let b9 = M[000819];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 000818 b2;
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  SetByte 000819 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 7;
  TraceOperation 074343 (Store (Con 207) (Con 7));
  SetByte 008290 0;
  SetByte 008291 7;
  TraceOperation 074346 (Print_ret "Throughout the noise, Ford is shouting at you. He removes a small black device from his satchel, but accidentally drops it at your feet.");
  GamePrint "Throughout the noise, Ford is shouting at you. He removes a small black device from his satchel, but accidentally drops it at your feet.\n";
  PopFrame;
  PopReturnAddress return_address_11;
  SetResult 1;
  JumpIndirect: (return) return_address_11
LocOp 074421:
  TraceOperation 074421 (Je [Var (Global 125),Con 3] (Branch F (Dloc 074748)));
  Let b1 = M[008158];
  Let b2 = M[008159];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 074426 New_line;
    GamePrint "\n";
    TraceOperation 074427 (Print "Fierce gales whip across the land, and thunder bangs continuously through the air in the wake of the giant ships. ");
    GamePrint "Fierce gales whip across the land, and thunder bangs continuously through the air in the wake of the giant ships. ";
    TraceOperation 074490 (Je [Var (Global 120),Con 123] (Branch F (Dloc 074631)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 074495 (Jz (Var (Global 124)) (Branch F (Dloc 074631)));
      Let b5 = M[008156];
      Let b6 = M[008157];
      if (IsZero(MakeHiLo(b5,b6))) {
        TraceOperation 074499 (Print "Ford fights to reach you, but the wind is too fierce. Further announcements from the ");
        GamePrint "Ford fights to reach you, but the wind is too fierce. Further announcements from the ";
        TraceOperation 074548 (Print_obj (Con 106));
        Let b7 = M[001712];
        Let b8 = M[001713];
        Let b9 = M[Address(MakeHiLo(b7,b8))];
        Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
        GamePrint ite_res10;
        TraceOperation 074550 (Print_ret " make it clear that demolition will begin in just a few seconds.\n\nThrough the blinding rain, you see lights flickering on the small device.");
        GamePrint " make it clear that demolition will begin in just a few seconds.\n\nThrough the blinding rain, you see lights flickering on the small device.\n";
        PopFrame;
        PopReturnAddress return_address_11;
        SetResult 1;
        JumpIndirect: (return) return_address_11
      } else {
        Jump: 074631
      }
    } else {
      Jump: 074631
    }
  } else {
    Jump: 074748
  }
LocOp 074631:
  TraceOperation 074631 (Je [Var (Global 120),Con 142] (Branch F (Dloc 074746)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 074636 (Jin (Con 7) (Var (Global 0)) (Branch F (Dloc 074746)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[000818];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 074641 (Jz (Var (Global 133)) (Branch T (Dloc 074647)));
      Let b6 = M[008174];
      Let b7 = M[008175];
      if (IsZero(MakeHiLo(b6,b7))) {
        Jump: 074647
      } else {
        TraceOperation 074644 (Set_attr (Con 137) (Con 4));
        Let b8 = M[001984];
        SetByte 001984 SetBit(b8,3);
        Jump: 074647
      }
    } else {
      Jump: 074746
    }
  } else {
    Jump: 074746
  }
LocOp 074647:
  TraceOperation 074647 (Print_paddr (Var (Global 32)));
  Let b1 = M[007972];
  Let b2 = M[007973];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 074649 (Print " Fortunately, at this point, Arthur picks up the Thumb, and somehow manages to push the right button");
  GamePrint " Fortunately, at this point, Arthur picks up the Thumb, and somehow manages to push the right button";
  TraceOperation 074708 (Test_attr (Con 7) (Con 3) (Branch F (Dloc 074733)));
  Let b3 = M[000814];
  if (TestBit(b3,4)) {
    TraceOperation 074712 (Print ". Unfortunately, the");
    GamePrint ". Unfortunately, the";
    TraceOperation 074719 (Print_paddr (Var (Global 35)));
    Let b4 = M[007978];
    Let b5 = M[007979];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 074721 (Store (Con 141) (Con 4));
    SetByte 008158 0;
    SetByte 008159 4;
    TraceOperation 074724 (Print " ");
    GamePrint " ";
    TraceOperation 074727 (Call (Floc 073420) [] Sp);
    PushFrame;
    PushReturnAddress 074727;
    MakeRoutineFrame 0;
    Jump: 073421
  } else {
    Jump: 074733
  }
LocReturn 074727:
  PushStack call_result;
  TraceOperation 074732 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 074733:
  TraceOperation 074733 (Print ".");
  GamePrint ".";
  TraceOperation 074736 New_line;
  GamePrint "\n";
  TraceOperation 074737 New_line;
  GamePrint "\n";
  TraceOperation 074738 (Call (Floc 042734) [Con -11152] Sp);
  PushFrame;
  PushReturnAddress 074738;
  SetLocal 1 -11152;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 074738:
  PushStack call_result;
  TraceOperation 074745 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 074746:
  TraceOperation 074746 New_line;
  GamePrint "\n";
  TraceOperation 074747 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 074748:
  TraceOperation 074748 (Je [Var (Global 125),Con 5] (Branch F Dfalse));
  Let b1 = M[008158];
  Let b2 = M[008159];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 074752 (Print "The Earth is destroyed by the ");
    GamePrint "The Earth is destroyed by the ";
    TraceOperation 074771 (Print_obj (Con 124));
    Let b3 = M[001874];
    Let b4 = M[001875];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 074773 (Jz (Var (Global 133)) (Branch T (Dloc 074779)));
    Let b7 = M[008174];
    Let b8 = M[008175];
    if (IsZero(MakeHiLo(b7,b8))) {
      Jump: 074779
    } else {
      TraceOperation 074776 (Set_attr (Con 137) (Con 4));
      Let b9 = M[001984];
      SetByte 001984 SetBit(b9,3);
      Jump: 074779
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
LocOp 074779:
  TraceOperation 074779 (Call (Floc 042734) [Con -11702] Sp);
  PushFrame;
  PushReturnAddress 074779;
  SetLocal 1 -11702;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 074779:
  PushStack call_result;
  TraceOperation 074786 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 074788:
  MakeRoutineFrame 0;
  Jump: 074789
LocOp 074789:
  TraceOperation 074789 (Store (Con 102) (Con 0));
  SetByte 008080 0;
  SetByte 008081 0;
  TraceOperation 074792 New_line;
  GamePrint "\n";
  TraceOperation 074793 (Print "You hear sounds of panic from the street. You ");
  GamePrint "You hear sounds of panic from the street. You ";
  TraceOperation 074818 (Je [Var (Global 120),Con 142] (Branch F (Dloc 074852)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 074822 (Jin (Con 123) (Var (Global 0)) (Branch T (Dloc 074852)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001862];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      Jump: 074852
    } else {
      TraceOperation 074826 (Print "leave the Pub and run into Arthur...");
      GamePrint "leave the Pub and run into Arthur...";
      TraceOperation 074847 New_line;
      GamePrint "\n";
      TraceOperation 074848 New_line;
      GamePrint "\n";
      TraceOperation 074849 (Jump 074886);
      Jump: 074886
    }
  } else {
    Jump: 074852
  }
LocOp 074852:
  TraceOperation 074852 (Je [Var (Global 120),Con 142] (Branch F (Dloc 074864)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 074856 (Print "and Arthur");
    GamePrint "and Arthur";
    TraceOperation 074861 (Jump 074869);
    Jump: 074869
  } else {
    Jump: 074864
  }
LocOp 074864:
  TraceOperation 074864 (Print "and Ford");
  GamePrint "and Ford";
  Jump: 074869
LocOp 074869:
  TraceOperation 074869 (Print " rush outside...");
  GamePrint " rush outside...";
  TraceOperation 074884 New_line;
  GamePrint "\n";
  TraceOperation 074885 New_line;
  GamePrint "\n";
  Jump: 074886
LocOp 074886:
  TraceOperation 074886 (Call (Floc 042574) [Con 137] Sp);
  PushFrame;
  PushReturnAddress 074886;
  SetLocal 1 137;
  MakeRoutineFrame 2;
  SetLocal 2 1;
  Jump: 042579
LocReturn 074886:
  PushStack call_result;
  TraceOperation 074892 (Je [Var (Global 120),Con 142] (Branch F (Dloc 074900)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),142)) {
    TraceOperation 074896 (Insert_obj (Con 123) (Con 137));
    Let b3 = M[001862];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),123)) {
        Let b5 = M[001863];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),123)) {
            Let b9 = M[001863];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 001862 137;
    Let b10 = M[001990];
    SetByte 001863 LoByte(Widen(b10));
    SetByte 001990 123;
    TraceOperation 074899 Rtrue;
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 1;
    JumpIndirect: (return) return_address_11
  } else {
    Jump: 074900
  }
LocOp 074900:
  TraceOperation 074900 (Insert_obj (Con 142) (Con 137));
  Let b1 = M[002033];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),142)) {
      Let b3 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),142)) {
          Let b7 = M[002034];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002033 137;
  Let b8 = M[001990];
  SetByte 002034 LoByte(Widen(b8));
  SetByte 001990 142;
  TraceOperation 074903 Rtrue;
  PopFrame;
  PopReturnAddress return_address_9;
  SetResult 1;
  JumpIndirect: (return) return_address_9
--------------------------------------------------
LocRoutine 074904:
  MakeRoutineFrame 0;
  Jump: 074905
LocOp 074905:
  TraceOperation 074905 (Je [Var (Global 203),Con 57] (Branch F (Dloc 074913)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 074909 (Print_paddr (Var (Global 48)));
    Let b3 = M[008004];
    Let b4 = M[008005];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 074911 New_line;
    GamePrint "\n";
    TraceOperation 074912 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 074913
  }
LocOp 074913:
  TraceOperation 074913 (Je [Var (Global 203),Con 38,Con 21] (Branch F (Dloc 074944)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),21))) {
    TraceOperation 074919 (Store (Con 229) (Con 11));
    SetByte 008334 0;
    SetByte 008335 11;
    TraceOperation 074922 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame;
    PushReturnAddress 074922;
    SetLocal 1 -14349;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 074944
  }
LocReturn 074922:
  PushStack call_result;
  TraceOperation 074930 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 074935 (Print_ret "From here?");
  GamePrint "From here?\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 074944:
  TraceOperation 074944 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 074948 (Je [Var (Global 0),Con 121,Con 101,Con 108] (Branch T Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),121),Equal(MakeHiLo(b3,b4),101)),Equal(MakeHiLo(b3,b4),108))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 074955 (Print_ret "The fleet consists of terrifying numbers of huge, ugly, yellow ships, all scarred with the results of many such past demolition jobs. Chicago's John Hancock tower, knocked about a bit and painted yellow, is what they each look like. That is, knocked about a bit, painted yellow, and flying.");
      GamePrint "The fleet consists of terrifying numbers of huge, ugly, yellow ships, all scarred with the results of many such past demolition jobs. Chicago's John Hancock tower, knocked about a bit and painted yellow, is what they each look like. That is, knocked about a bit, painted yellow, and flying.\n";
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
--------------------------------------------------
LocRoutine 075134:
  MakeRoutineFrame 0;
  Jump: 075135
LocOp 075135:
  TraceOperation 075135 (Call (Floc 022340) [Con 29202] Sp);
  PushFrame;
  PushReturnAddress 075135;
  SetLocal 1 29202;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 075135:
  PushStack call_result;
  TraceOperation 075142 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 075147 (Call (Floc 022340) [Con 30621] Sp);
  PushFrame;
  PushReturnAddress 075147;
  SetLocal 1 30621;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 075147:
  PushStack call_result;
  TraceOperation 075154 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 075159 (Call (Floc 022340) [Con 31225] Sp);
  PushFrame;
  PushReturnAddress 075159;
  SetLocal 1 31225;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 075159:
  PushStack call_result;
  TraceOperation 075166 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 075171 (Call (Floc 022340) [Con -32630] Sp);
  PushFrame;
  PushReturnAddress 075171;
  SetLocal 1 -32630;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 075171:
  PushStack call_result;
  TraceOperation 075178 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 075183 (Call (Floc 022340) [Con -28826] Sp);
  PushFrame;
  PushReturnAddress 075183;
  SetLocal 1 -28826;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 075183:
  PushStack call_result;
  TraceOperation 075190 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 075195 (Store (Con 160) (Con 0));
  SetByte 008196 0;
  SetByte 008197 0;
  TraceOperation 075198 (Store (Con 158) (Con 0));
  SetByte 008192 0;
  SetByte 008193 0;
  TraceOperation 075201 (Store (Con 156) (Con 0));
  SetByte 008188 0;
  SetByte 008189 0;
  TraceOperation 075204 (Store (Con 155) (Con 0));
  SetByte 008186 0;
  SetByte 008187 0;
  TraceOperation 075207 (Store (Con 153) (Con 0));
  SetByte 008182 0;
  SetByte 008183 0;
  TraceOperation 075210 (Store (Con 146) (Con 0));
  SetByte 008168 0;
  SetByte 008169 0;
  TraceOperation 075213 (Store (Con 161) (Con 0));
  SetByte 008198 0;
  SetByte 008199 0;
  TraceOperation 075216 (Store (Con 141) (Con 0));
  SetByte 008158 0;
  SetByte 008159 0;
  TraceOperation 075219 (Store (Con 138) (Con 1));
  SetByte 008152 0;
  SetByte 008153 1;
  TraceOperation 075222 (Store (Con 136) (Con 123));
  SetByte 008148 0;
  SetByte 008149 123;
  TraceOperation 075225 (Insert_obj (Con 123) (Con 169));
  Let b2 = M[001862];
  if (IsZero(Widen(b2))) {} else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b3),123)) {
      Let b4 = M[001863];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
    } else {
      Let loop_var5 = Widen(b3);
      Label 6: {
        Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
        if (Equal(Widen(b7),123)) {
          Let b8 = M[001863];
          SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
        } else {
          Assign loop_var5 = Widen(b7);
          Goto: Label 6
        }
      }
    }
  }
  SetByte 001862 169;
  Let b9 = M[002278];
  SetByte 001863 LoByte(Widen(b9));
  SetByte 002278 123;
  TraceOperation 075228 (Insert_obj (Con 135) (Con 219));
  Let b10 = M[001970];
  if (IsZero(Widen(b10))) {} else {
    Let b11 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
    if (Equal(Widen(b11),135)) {
      Let b12 = M[001971];
      SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b12));
    } else {
      Let loop_var13 = Widen(b11);
      Label 14: {
        Let b15 = M[Offset(Offset(000751,Mul(loop_var13,9)),5)];
        if (Equal(Widen(b15),135)) {
          Let b16 = M[001971];
          SetByte Offset(Offset(000751,Mul(loop_var13,9)),5) LoByte(Widen(b16));
        } else {
          Assign loop_var13 = Widen(b15);
          Goto: Label 14
        }
      }
    }
  }
  SetByte 001970 219;
  Let b17 = M[002728];
  SetByte 001971 LoByte(Widen(b17));
  SetByte 002728 135;
  TraceOperation 075231 (Insert_obj (Con 124) (Con 219));
  Let b18 = M[001871];
  if (IsZero(Widen(b18))) {} else {
    Let b19 = M[Offset(Offset(000751,Mul(Widen(b18),9)),6)];
    if (Equal(Widen(b19),124)) {
      Let b20 = M[001872];
      SetByte Offset(Offset(000751,Mul(Widen(b18),9)),6) LoByte(Widen(b20));
    } else {
      Let loop_var21 = Widen(b19);
      Label 22: {
        Let b23 = M[Offset(Offset(000751,Mul(loop_var21,9)),5)];
        if (Equal(Widen(b23),124)) {
          Let b24 = M[001872];
          SetByte Offset(Offset(000751,Mul(loop_var21,9)),5) LoByte(Widen(b24));
        } else {
          Assign loop_var21 = Widen(b23);
          Goto: Label 22
        }
      }
    }
  }
  SetByte 001871 219;
  Let b25 = M[002728];
  SetByte 001872 LoByte(Widen(b25));
  SetByte 002728 124;
  TraceOperation 075234 (Insert_obj (Con 142) (Con 219));
  Let b26 = M[002033];
  if (IsZero(Widen(b26))) {} else {
    Let b27 = M[Offset(Offset(000751,Mul(Widen(b26),9)),6)];
    if (Equal(Widen(b27),142)) {
      Let b28 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b26),9)),6) LoByte(Widen(b28));
    } else {
      Let loop_var29 = Widen(b27);
      Label 30: {
        Let b31 = M[Offset(Offset(000751,Mul(loop_var29,9)),5)];
        if (Equal(Widen(b31),142)) {
          Let b32 = M[002034];
          SetByte Offset(Offset(000751,Mul(loop_var29,9)),5) LoByte(Widen(b32));
        } else {
          Assign loop_var29 = Widen(b31);
          Goto: Label 30
        }
      }
    }
  }
  SetByte 002033 219;
  Let b33 = M[002728];
  SetByte 002034 LoByte(Widen(b33));
  SetByte 002728 142;
  TraceOperation 075237 (Call (Floc 043468) [Con 125] Sp);
  PushFrame;
  PushReturnAddress 075237;
  SetLocal 1 125;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 075237:
  PushStack call_result;
  TraceOperation 075243 (Jz (Var Sp) (Branch F (Dloc 075252)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 075246 (Jz (Var (Global 126)) (Branch T (Dloc 075252)));
    Let b2 = M[008160];
    Let b3 = M[008161];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 075252
    } else {
      TraceOperation 075249 (Insert_obj (Con 125) (Con 219));
      Let b4 = M[001880];
      if (IsZero(Widen(b4))) {} else {
        Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
        if (Equal(Widen(b5),125)) {
          Let b6 = M[001881];
          SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
        } else {
          Let loop_var7 = Widen(b5);
          Label 8: {
            Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
            if (Equal(Widen(b9),125)) {
              Let b10 = M[001881];
              SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
            } else {
              Assign loop_var7 = Widen(b9);
              Goto: Label 8
            }
          }
        }
      }
      SetByte 001880 219;
      Let b11 = M[002728];
      SetByte 001881 LoByte(Widen(b11));
      SetByte 002728 125;
      Jump: 075252
    }
  } else {
    Jump: 075252
  }
LocOp 075252:
  TraceOperation 075252 (Set_attr (Con 127) (Con 27));
  Let b1 = M[001897];
  SetByte 001897 SetBit(b1,4);
  TraceOperation 075255 (Clear_attr (Con 145) (Con 5));
  Let b2 = M[002056];
  SetByte 002056 ClearBit(b2,2);
  TraceOperation 075258 (Clear_attr (Con 149) (Con 27));
  Let b3 = M[002095];
  SetByte 002095 ClearBit(b3,4);
  TraceOperation 075261 (Clear_attr (Con 149) (Con 5));
  Let b4 = M[002092];
  SetByte 002092 ClearBit(b4,2);
  TraceOperation 075264 (Clear_attr (Con 137) (Con 5));
  Let b5 = M[001984];
  SetByte 001984 ClearBit(b5,2);
  TraceOperation 075267 Rtrue;
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 075268:
  MakeRoutineFrame 0;
  Jump: 075269
LocOp 075269:
  TraceOperation 075269 (Je [Var (Global 120),Con 123] (Branch F (Dloc 075295)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),123)) {
    TraceOperation 075273 (Je [Con 123,Var (Global 201)] (Branch F (Dloc 075286)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(123,MakeHiLo(b3,b4))) {
      TraceOperation 075277 (Call (Floc 022042) [Var (Global 203),Con 30,Var (Global 202)] Sp);
      Let b5 = M[008314];
      Let b6 = M[008315];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame;
      PushReturnAddress 075277;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 30;
      SetLocal 3 MakeHiLo(b7,b8);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 075286
    }
  } else {
    Jump: 075295
  }
LocReturn 075277:
  PushStack call_result;
  TraceOperation 075285 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 075286:
  TraceOperation 075286 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 30] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 075286;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 30;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 075286:
  PushStack call_result;
  TraceOperation 075294 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 075295:
  TraceOperation 075295 (Je [Con 123,Var (Global 195)] (Branch F (Dloc 075436)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(123,MakeHiLo(b1,b2))) {
    TraceOperation 075300 (Jin (Con 124) (Var (Global 0)) (Branch F (Dloc 075310)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[001871];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      TraceOperation 075304 (Print_paddr (Var (Global 40)));
      Let b6 = M[007988];
      Let b7 = M[007989];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 075306 New_line;
      GamePrint "\n";
      TraceOperation 075307 (Jump 075430);
      Jump: 075430
    } else {
      Jump: 075310
    }
  } else {
    Jump: 075436
  }
LocOp 075310:
  TraceOperation 075310 (Je [Var (Global 203),Con 69] (Branch F (Dloc 075355)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 075314 (Je [Var (Global 0),Con 149] (Branch F (Dloc 075355)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),149)) {
      TraceOperation 075318 (Je [Var (Global 201),Con 30] (Branch F (Dloc 075355)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 075322 (Jz (Var (Global 139)) (Branch T (Dloc 075344)));
        Let b7 = M[008186];
        Let b8 = M[008187];
        if (IsZero(MakeHiLo(b7,b8))) {
          Jump: 075344
        } else {
          TraceOperation 075325 (Print "Arthur seems willing to do so.");
          GamePrint "Arthur seems willing to do so.";
          TraceOperation 075340 New_line;
          GamePrint "\n";
          TraceOperation 075341 (Jump 075430);
          Jump: 075430
        }
      } else {
        Jump: 075355
      }
    } else {
      Jump: 075355
    }
  } else {
    Jump: 075355
  }
LocOp 075344:
  TraceOperation 075344 (Call (Floc 057888) [Con -11107] Sp);
  PushFrame;
  PushReturnAddress 075344;
  SetLocal 1 -11107;
  MakeRoutineFrame 1;
  Jump: 057891
LocReturn 075344:
  PushStack call_result;
  TraceOperation 075351 New_line;
  GamePrint "\n";
  TraceOperation 075352 (Jump 075430);
  Jump: 075430
LocOp 075355:
  TraceOperation 075355 (Je [Var (Global 203),Con 51] (Branch F (Dloc 075408)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),51)) {
    TraceOperation 075359 (Je [Var (Global 201),Con 127] (Branch F (Dloc 075408)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),127)) {
      TraceOperation 075363 (Test_attr (Con 127) (Con 27) (Branch F (Dloc 075381)));
      Let b5 = M[001897];
      if (TestBit(b5,4)) {
        TraceOperation 075367 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 075370 (Call (Floc 022042) [Con 51,Con 127] Sp);
        PushFrame;
        PushReturnAddress 075370;
        SetLocal 1 51;
        SetLocal 2 127;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      } else {
        Jump: 075381
      }
    } else {
      Jump: 075408
    }
  } else {
    Jump: 075408
  }
LocReturn 075370:
  PushStack call_result;
  TraceOperation 075377 (Store (Con 211) (Con 123));
  SetByte 008298 0;
  SetByte 008299 123;
  TraceOperation 075380 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 075381:
  TraceOperation 075381 (Print "Arthur seems to be waiting to follow your lead.");
  GamePrint "Arthur seems to be waiting to follow your lead.";
  TraceOperation 075404 New_line;
  GamePrint "\n";
  TraceOperation 075405 (Jump 075430);
  Jump: 075430
LocOp 075408:
  TraceOperation 075408 (Print "Arthur looks too confused to respond.");
  GamePrint "Arthur looks too confused to respond.";
  TraceOperation 075429 New_line;
  GamePrint "\n";
  Jump: 075430
LocOp 075430:
  TraceOperation 075430 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 075430;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 075430:
  PushStack call_result;
  TraceOperation 075435 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075436:
  TraceOperation 075436 (Je [Var (Global 203),Con 23,Con 15,Con 75] (Branch T (Dloc 075450)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),23),Equal(MakeHiLo(b1,b2),15)),Equal(MakeHiLo(b1,b2),75))) {
    Jump: 075450
  } else {
    TraceOperation 075443 (Je [Var (Global 203),Con 150,Con 22] (Branch F (Dloc 075556)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),150),Equal(MakeHiLo(b3,b4),22))) {
      Jump: 075450
    } else {
      Jump: 075556
    }
  }
LocOp 075450:
  TraceOperation 075450 (Je [Var (Global 120),Con 194] (Branch F (Dloc 075556)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),194)) {
    TraceOperation 075455 (Je [Var (Global 201),Con 123] (Branch F (Dloc 075556)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 075460 (Jz (Var (Global 95)) (Branch T (Dloc 075471)));
      Let b5 = M[008098];
      Let b6 = M[008099];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 075471
      } else {
        TraceOperation 075463 (Call (Floc 076828) [] Sp);
        PushFrame;
        PushReturnAddress 075463;
        MakeRoutineFrame 0;
        Jump: 076829
      }
    } else {
      Jump: 075556
    }
  } else {
    Jump: 075556
  }
LocReturn 075463:
  PushStack call_result;
  TraceOperation 075468 (Jump 075537);
  Jump: 075537
LocOp 075471:
  TraceOperation 075471 (Print "You approach Arthur. He seems to find your tone a little cool, smiles unhappily, and wanders to the other end of the room.");
  GamePrint "You approach Arthur. He seems to find your tone a little cool, smiles unhappily, and wanders to the other end of the room.";
  TraceOperation 075536 New_line;
  GamePrint "\n";
  Jump: 075537
LocOp 075537:
  TraceOperation 075537 (Call (Floc 022320) [Con -27122,Con 2] Sp);
  PushFrame;
  PushReturnAddress 075537;
  SetLocal 1 -27122;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 075537:
  PushStack call_result;
  TraceOperation 075545 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 075550 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 075550;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 075550:
  PushStack call_result;
  TraceOperation 075555 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 075556:
  TraceOperation 075556 (Je [Var (Global 203),Con 23,Con 22,Con 150] (Branch F (Dloc 075579)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),23),Equal(MakeHiLo(b1,b2),22)),Equal(MakeHiLo(b1,b2),150))) {
    TraceOperation 075563 (Je [Var (Global 201),Con 123] (Branch F (Dloc 075579)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),123)) {
      TraceOperation 075567 (Je [Var (Global 120),Con 194] (Branch F (Dloc 075579)));
      Let b5 = M[008148];
      Let b6 = M[008149];
      if (Equal(MakeHiLo(b5,b6),194)) {
        TraceOperation 075571 (Call (Floc 022042) [Con 75,Con 123] Sp);
        PushFrame;
        PushReturnAddress 075571;
        SetLocal 1 75;
        SetLocal 2 123;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      } else {
        Jump: 075579
      }
    } else {
      Jump: 075579
    }
  } else {
    Jump: 075579
  }
LocReturn 075571:
  PushStack call_result;
  TraceOperation 075578 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 075579:
  TraceOperation 075579 (Je [Var (Global 203),Con 31] (Branch F (Dloc 075596)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),31)) {
    TraceOperation 075583 (Je [Var (Global 202),Con 97] (Branch F (Dloc 075596)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),97)) {
      TraceOperation 075587 (Call (Floc 022042) [Con 31,Con 92,Con 97] Sp);
      PushFrame;
      PushReturnAddress 075587;
      SetLocal 1 31;
      SetLocal 2 92;
      SetLocal 3 97;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 075596
    }
  } else {
    Jump: 075596
  }
LocReturn 075587:
  PushStack call_result;
  TraceOperation 075595 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 075596:
  TraceOperation 075596 (Je [Var (Global 203),Con 66] (Branch F (Dloc 076155)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 075601 (Je [Var (Global 201),Con 139] (Branch F (Dloc 076155)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),139)) {
      TraceOperation 075606 (Je [Var (Global 0),Con 149] (Branch F (Dloc 076155)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      if (Equal(MakeHiLo(b5,b6),149)) {
        TraceOperation 075611 (Jz (Var (Global 131)) (Branch F (Dloc 076155)));
        Let b7 = M[008170];
        Let b8 = M[008171];
        if (IsZero(MakeHiLo(b7,b8))) {
          TraceOperation 075615 (Store (Con 147) (Con 1));
          SetByte 008170 0;
          SetByte 008171 1;
          TraceOperation 075618 (Print "Inexplicably, Arthur takes no notice of the towel which, magnificently, you are trying to return to him. Instead, he says, \"Ford, what about my home?\"\n\nYou start guiltily. Does he actually KNOW that the Earth is about to be destroyed? You start to ask him, then stop. If he knows, what the Zark is he doing lying here in the mud in front of...\n\nYou look around. You notice the ");
          GamePrint "Inexplicably, Arthur takes no notice of the towel which, magnificently, you are trying to return to him. Instead, he says, \"Ford, what about my home?\"\n\nYou start guiltily. Does he actually KNOW that the Earth is about to be destroyed? You start to ask him, then stop. If he knows, what the Zark is he doing lying here in the mud in front of...\n\nYou look around. You notice the ";
          TraceOperation 075843 (Print_obj (Con 166));
          Let b9 = M[002252];
          Let b10 = M[002253];
          Let b11 = M[Address(MakeHiLo(b9,b10))];
          Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
          GamePrint ite_res12;
          TraceOperation 075845 (Print " properly for the first time. You notice Arthur's house. You notice the workmen. The penny drops. His HOUSE is about to be demolished. You feel like a complete...what's the word?");
          GamePrint " properly for the first time. You notice Arthur's house. You notice the workmen. The penny drops. His HOUSE is about to be demolished. You feel like a complete...what's the word?";
          TraceOperation 075952 (Call (Floc 076564) [] Sp);
          PushFrame;
          PushReturnAddress 075952;
          MakeRoutineFrame 0;
          Jump: 076565
        } else {
          Jump: 076155
        }
      } else {
        Jump: 076155
      }
    } else {
      Jump: 076155
    }
  } else {
    Jump: 076155
  }
LocReturn 075952:
  PushStack call_result;
  TraceOperation 075957 (Jz (Var Sp) (Branch T (Dloc 075996)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 075996
  } else {
    TraceOperation 075960 (Print "Thank you. An idiot is exactly what you feel like.");
    GamePrint "Thank you. An idiot is exactly what you feel like.";
    TraceOperation 075993 (Jump 076035);
    Jump: 076035
  }
LocOp 075996:
  TraceOperation 075996 (Print "No, actually, \"idiot\" was the word I was looking for.");
  GamePrint "No, actually, \"idiot\" was the word I was looking for.";
  Jump: 076035
LocOp 076035:
  TraceOperation 076035 New_line;
  GamePrint "\n";
  TraceOperation 076036 New_line;
  GamePrint "\n";
  TraceOperation 076037 (Print "In a reckless moment you go completely mad and decide that you ought to take Arthur with you. You try to tell Arthur about the importance of getting a drink, but he's rambling on about a man called Prosser.");
  GamePrint "In a reckless moment you go completely mad and decide that you ought to take Arthur with you. You try to tell Arthur about the importance of getting a drink, but he's rambling on about a man called Prosser.";
  TraceOperation 076152 New_line;
  GamePrint "\n";
  TraceOperation 076153 (Ret (Con 2));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 2;
  JumpIndirect: (return) return_address_1
LocOp 076155:
  TraceOperation 076155 (Je [Var (Global 201),Con 125] (Branch F (Dloc 076231)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),125)) {
    TraceOperation 076160 (Je [Var (Global 203),Con 66] (Branch F (Dloc 076231)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),66)) {
      TraceOperation 076165 (Insert_obj (Con 125) (Con 123));
      Let b5 = M[001880];
      if (IsZero(Widen(b5))) {} else {
        Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b6),125)) {
          Let b7 = M[001881];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
        } else {
          Let loop_var8 = Widen(b6);
          Label 9: {
            Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
            if (Equal(Widen(b10),125)) {
              Let b11 = M[001881];
              SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
            } else {
              Assign loop_var8 = Widen(b10);
              Goto: Label 9
            }
          }
        }
      }
      SetByte 001880 123;
      Let b12 = M[001864];
      SetByte 001881 LoByte(Widen(b12));
      SetByte 001864 125;
      TraceOperation 076168 (Print_ret "Arthur takes it, sniffs it suspiciously, and wisely decides that it's safer in his pocket than in his stomach.");
      GamePrint "Arthur takes it, sniffs it suspiciously, and wisely decides that it's safer in his pocket than in his stomach.\n";
      PopFrame;
      PopReturnAddress return_address_13;
      SetResult 1;
      JumpIndirect: (return) return_address_13
    } else {
      Jump: 076231
    }
  } else {
    Jump: 076231
  }
LocOp 076231:
  TraceOperation 076231 (Je [Var (Global 203),Con 66] (Branch F (Dloc 076344)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 076236 (Je [Var (Global 201),Con 140] (Branch F (Dloc 076344)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),140)) {
      TraceOperation 076241 (Jz (Var (Global 145)) (Branch T (Dloc 076285)));
      Let b5 = M[008198];
      Let b6 = M[008199];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 076285
      } else {
        TraceOperation 076244 (Insert_obj (Con 140) (Con 219));
        Let b7 = M[002015];
        if (IsZero(Widen(b7))) {} else {
          Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
          if (Equal(Widen(b8),140)) {
            Let b9 = M[002016];
            SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
          } else {
            Let loop_var10 = Widen(b8);
            Label 11: {
              Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
              if (Equal(Widen(b12),140)) {
                Let b13 = M[002016];
                SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
              } else {
                Assign loop_var10 = Widen(b12);
                Goto: Label 11
              }
            }
          }
        }
        SetByte 002015 219;
        Let b14 = M[002728];
        SetByte 002016 LoByte(Widen(b14));
        SetByte 002728 140;
        TraceOperation 076247 (Store (Con 149) (Con 1));
        SetByte 008174 0;
        SetByte 008175 1;
        TraceOperation 076250 (Print_ret "Arthur hiccups, takes the fluff, and sticks it in his pocket.");
        GamePrint "Arthur hiccups, takes the fluff, and sticks it in his pocket.\n";
        PopFrame;
        PopReturnAddress return_address_15;
        SetResult 1;
        JumpIndirect: (return) return_address_15
      }
    } else {
      Jump: 076344
    }
  } else {
    Jump: 076344
  }
LocOp 076285:
  TraceOperation 076285 (Print_ret "Arthur blinks several times, but doesn't take the fluff. Perhaps if he had a few drinks in him...");
  GamePrint "Arthur blinks several times, but doesn't take the fluff. Perhaps if he had a few drinks in him...\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 076344:
  TraceOperation 076344 (Je [Var (Global 203),Con 61] (Branch F (Dloc 076502)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 076349 (Je [Var (Global 120),Con 194] (Branch F (Dloc 076502)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),194)) {
      TraceOperation 076354 (Print "Arthur seems nice and well meaning, but also terribly shy.");
      GamePrint "Arthur seems nice and well meaning, but also terribly shy.";
      TraceOperation 076387 (Jz (Var (Global 95)) (Branch F (Dloc 076500)));
      Let b5 = M[008098];
      Let b6 = M[008099];
      if (IsZero(MakeHiLo(b5,b6))) {
        TraceOperation 076391 (Insert_obj (Con 69) (Var (Global 0)));
        Let b7 = M[007908];
        Let b8 = M[007909];
        Let b9 = M[001376];
        if (IsZero(Widen(b9))) {} else {
          Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
          if (Equal(Widen(b10),69)) {
            Let b11 = M[001377];
            SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
          } else {
            Let loop_var12 = Widen(b10);
            Label 13: {
              Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
              if (Equal(Widen(b14),69)) {
                Let b15 = M[001377];
                SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
              } else {
                Assign loop_var12 = Widen(b14);
                Goto: Label 13
              }
            }
          }
        }
        SetByte 001376 b8;
        Let b16 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6)];
        SetByte 001377 LoByte(Widen(b16));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),6) 69;
        TraceOperation 076394 (Call (Floc 022320) [Con -27122,Con -1] Sp);
        PushFrame;
        PushReturnAddress 076394;
        SetLocal 1 -27122;
        SetLocal 2 -1;
        MakeRoutineFrame 3;
        SetLocal 3 0;
        Jump: 022327
      } else {
        Jump: 076500
      }
    } else {
      Jump: 076502
    }
  } else {
    Jump: 076502
  }
LocReturn 076394:
  PushStack call_result;
  TraceOperation 076403 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 076408 (Print " He has tried to start a ");
  GamePrint " He has tried to start a ";
  TraceOperation 076423 (Print_obj (Con 148));
  Let b2 = M[002090];
  Let b3 = M[002091];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 076425 (Print " with you several times, but still hasn't gotten past \"Hello.\" He has an enormous, unsightly ball of fluff on his jacket.");
  GamePrint " with you several times, but still hasn't gotten past \"Hello.\" He has an enormous, unsightly ball of fluff on his jacket.";
  Jump: 076500
LocOp 076500:
  TraceOperation 076500 New_line;
  GamePrint "\n";
  TraceOperation 076501 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 076502:
  TraceOperation 076502 (Je [Var (Global 203),Con 69] (Branch F (Dloc 076517)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 076506 (Je [Var (Global 151),Con 4] (Branch F (Dloc 076517)));
    Let b3 = M[008210];
    Let b4 = M[008211];
    if (Equal(MakeHiLo(b3,b4),4)) {
      TraceOperation 076510 (Call (Floc 043620) [Con 27] Sp);
      PushFrame;
      PushReturnAddress 076510;
      SetLocal 1 27;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 076517
    }
  } else {
    Jump: 076517
  }
LocReturn 076510:
  PushStack call_result;
  TraceOperation 076516 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 076517:
  TraceOperation 076517 (Je [Var (Global 203),Con 108] (Branch F (Dloc 076533)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 076521 (Je [Var (Global 120),Con 194] (Branch F (Dloc 076533)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),194)) {
      TraceOperation 076525 (Call (Floc 022042) [Con 108,Con 195] Sp);
      PushFrame;
      PushReturnAddress 076525;
      SetLocal 1 108;
      SetLocal 2 195;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 076533
    }
  } else {
    Jump: 076533
  }
LocReturn 076525:
  PushStack call_result;
  TraceOperation 076532 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 076533:
  TraceOperation 076533 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 076537 (Je [Var (Global 120),Con 194] (Branch F Dfalse));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),194)) {
      TraceOperation 076541 (Jz (Var (Global 95)) (Branch T Dfalse));
      Let b5 = M[008098];
      Let b6 = M[008099];
      if (IsZero(MakeHiLo(b5,b6))) {
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 0;
        JumpIndirect: (return) return_address_7
      } else {
        TraceOperation 076544 (Print_ret "Unfortunately, you seem to have no choice.");
        GamePrint "Unfortunately, you seem to have no choice.\n";
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 1;
        JumpIndirect: (return) return_address_8
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
--------------------------------------------------
LocRoutine 076564:
  MakeRoutineFrame 0;
  Jump: 076565
LocOp 076565:
  TraceOperation 076565 New_line;
  GamePrint "\n";
  TraceOperation 076566 New_line;
  GamePrint "\n";
  TraceOperation 076567 (Print ">");
  GamePrint ">";
  TraceOperation 076572 (Sread (Var (Global 193)) (Var (Global 194)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  Let b7 = M[007910];
  Let b8 = M[007911];
  Let b9 = M[007912];
  Let b10 = M[007913];
  ReadInputFromUser (Just (StatusInfo {room = ite_res6, score = MakeHiLo(b7,b8), turns = MakeHiLo(b9,b10)})) user_command_line_11;
  Let b12 = M[008294];
  Let b13 = M[008295];
  Let b14 = M[008296];
  Let b15 = M[008297];
  Tokenize user_command_line_11 (num_tokens_16,positions17,words18);
  StringBytes user_command_line_11 string_bytes_19;
  Let loop_var20 = 0;
  Label 21: {
    if (Equal(loop_var20,Widen(StringLength(user_command_line_11)))) {
      SetByte Offset(Address(MakeHiLo(b14,b15)),1) num_tokens_16;
      Let loop_var22 = 0;
      Label 23: {
        if (Equal(loop_var22,Widen(num_tokens_16))) {
          TraceOperation 076576 (Loadw (Var (Global 194)) (Con 1) Sp);
          Let b24 = M[008296];
          Let b25 = M[008297];
          Let b26 = M[Offset(Address(MakeHiLo(b24,b25)),2)];
          Let b27 = M[Offset(Offset(Address(MakeHiLo(b24,b25)),2),1)];
          PushStack MakeHiLo(b26,b27);
          TraceOperation 076580 (Je [Var Sp,Con 16444] (Branch F Dfalse));
          PopStack popped28;
          if (Equal(popped28,16444)) {
            TraceOperation 076586 Rtrue;
            PopFrame;
            PopReturnAddress return_address_29;
            SetResult 1;
            JumpIndirect: (return) return_address_29
          } else {
            PopFrame;
            PopReturnAddress return_address_30;
            SetResult 0;
            JumpIndirect: (return) return_address_30
          }
        } else {
          Let lookee31 = LookupInDict(IndexList(words18,loop_var22));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),0) HiByte(DeAddress(lookee31));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),1) LoByte(DeAddress(lookee31));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),2) StringLength(IndexList(words18,loop_var22));
          SetByte Offset(Offset(Offset(Address(MakeHiLo(b14,b15)),2),Mul(4,loop_var22)),3) IndexList(positions17,loop_var22);
          Assign loop_var22 = Add(loop_var22,1);
          Goto: Label 23
        }
      }
    } else {
      SetByte Offset(Offset(Address(MakeHiLo(b12,b13)),1),loop_var20) IndexList(string_bytes_19,loop_var20);
      Assign loop_var20 = Add(loop_var20,1);
      Goto: Label 21
    }
  }
--------------------------------------------------
LocRoutine 076588:
  MakeRoutineFrame 0;
  Jump: 076589
LocOp 076589:
  TraceOperation 076589 (Inc (Con 137));
  Let b1 = M[008150];
  Let b2 = M[008151];
  SetByte 008150 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008151 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 076591 (Je [Var (Global 0),Con 134] (Branch T (Dloc 076608)));
  Let b3 = M[007908];
  Let b4 = M[007909];
  if (Equal(MakeHiLo(b3,b4),134)) {
    Jump: 076608
  } else {
    TraceOperation 076595 (Call (Floc 022340) [Con -27242] Sp);
    PushFrame;
    PushReturnAddress 076595;
    SetLocal 1 -27242;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  }
LocReturn 076595:
  PushStack call_result;
  TraceOperation 076602 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 076607 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 076608:
  TraceOperation 076608 New_line;
  GamePrint "\n";
  TraceOperation 076609 (Je [Var (Global 121),Con 1] (Branch F (Dloc 076628)));
  Let b1 = M[008150];
  Let b2 = M[008151];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 076613 (Print_ret "You feel uneasy about something.");
    GamePrint "You feel uneasy about something.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 076628
  }
LocOp 076628:
  TraceOperation 076628 (Je [Var (Global 121),Con 2,Con 3,Con 4] (Branch F (Dloc 076650)));
  Let b1 = M[008150];
  Let b2 = M[008151];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),2),Equal(MakeHiLo(b1,b2),3)),Equal(MakeHiLo(b1,b2),4))) {
    TraceOperation 076635 (Print_ret "You still feel uneasy.");
    GamePrint "You still feel uneasy.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 076650
  }
LocOp 076650:
  TraceOperation 076650 (Print "The sense of uneasiness you've been so busy ignoring now utterly engulfs you, as you realise that you've broken the fundamental rule of time travel: \"Do as you would have done by.\" The rational foundation of the Universe crashes and within a few seconds the whole of creation ceases ever to have exis");
  GamePrint "The sense of uneasiness you've been so busy ignoring now utterly engulfs you, as you realise that you've broken the fundamental rule of time travel: \"Do as you would have done by.\" The rational foundation of the Universe crashes and within a few seconds the whole of creation ceases ever to have exis";
  TraceOperation 076823 New_line;
  GamePrint "\n";
  TraceOperation 076824 New_line;
  GamePrint "\n";
  TraceOperation 076825 New_line;
  GamePrint "\n";
  TraceOperation 076826 Quit;
  Quit
--------------------------------------------------
LocRoutine 076828:
  MakeRoutineFrame 0;
  Jump: 076829
LocOp 076829:
  TraceOperation 076829 (Call (Floc 022320) [Con -27122,Con -1] Sp);
  PushFrame;
  PushReturnAddress 076829;
  SetLocal 1 -27122;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 076829:
  PushStack call_result;
  TraceOperation 076838 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 076843 (Je [Var (Global 120),Con 194] (Branch F (Dloc 077022)));
  Let b2 = M[008148];
  Let b3 = M[008149];
  if (Equal(MakeHiLo(b2,b3),194)) {
    TraceOperation 076848 (Jz (Var (Global 95)) (Branch T (Dloc 076926)));
    Let b4 = M[008098];
    Let b5 = M[008099];
    if (IsZero(MakeHiLo(b4,b5))) {
      Jump: 076926
    } else {
      TraceOperation 076852 New_line;
      GamePrint "\n";
      TraceOperation 076853 (Jin (Con 123) (Var (Global 0)) (Branch T (Dloc 076881)));
      Let b6 = M[007908];
      Let b7 = M[007909];
      Let b8 = M[001862];
      if (Equal(MakeHiLo(b6,b7),Widen(b8))) {
        Jump: 076881
      } else {
        TraceOperation 076857 (Insert_obj (Con 123) (Var (Global 0)));
        Let b9 = M[007908];
        Let b10 = M[007909];
        Let b11 = M[001862];
        if (IsZero(Widen(b11))) {} else {
          Let b12 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
          if (Equal(Widen(b12),123)) {
            Let b13 = M[001863];
            SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b13));
          } else {
            Let loop_var14 = Widen(b12);
            Label 15: {
              Let b16 = M[Offset(Offset(000751,Mul(loop_var14,9)),5)];
              if (Equal(Widen(b16),123)) {
                Let b17 = M[001863];
                SetByte Offset(Offset(000751,Mul(loop_var14,9)),5) LoByte(Widen(b17));
              } else {
                Assign loop_var14 = Widen(b16);
                Goto: Label 15
              }
            }
          }
        }
        SetByte 001862 b10;
        Let b18 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6)];
        SetByte 001863 LoByte(Widen(b18));
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),6) 123;
        TraceOperation 076860 (Print_ret "Arthur follows you like an eager puppy.");
        GamePrint "Arthur follows you like an eager puppy.\n";
        PopFrame;
        PopReturnAddress return_address_19;
        SetResult 1;
        JumpIndirect: (return) return_address_19
      }
    }
  } else {
    Jump: 077022
  }
LocOp 076881:
  TraceOperation 076881 (Print "Arthur tries, unsuccessfully, to interest you by talking about ");
  GamePrint "Arthur tries, unsuccessfully, to interest you by talking about ";
  TraceOperation 076916 (Call (Floc 020718) [Var (Global 119)] Sp);
  Let b1 = M[008146];
  Let b2 = M[008147];
  PushFrame;
  PushReturnAddress 076916;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 020721
LocReturn 076916:
  PushStack call_result;
  TraceOperation 076922 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 076924 New_line;
  GamePrint "\n";
  TraceOperation 076925 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 076926:
  TraceOperation 076926 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 076930 (Jl (Con 20) (Var Sp) (Branch T Dfalse));
  PopStack popped2;
  if (LessThan(20,popped2)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 076934 (Insert_obj (Con 123) (Var (Global 0)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[001862];
    if (IsZero(Widen(b6))) {} else {
      Let b7 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
      if (Equal(Widen(b7),123)) {
        Let b8 = M[001863];
        SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b8));
      } else {
        Let loop_var9 = Widen(b7);
        Label 10: {
          Let b11 = M[Offset(Offset(000751,Mul(loop_var9,9)),5)];
          if (Equal(Widen(b11),123)) {
            Let b12 = M[001863];
            SetByte Offset(Offset(000751,Mul(loop_var9,9)),5) LoByte(Widen(b12));
          } else {
            Assign loop_var9 = Widen(b11);
            Goto: Label 10
          }
        }
      }
    }
    SetByte 001862 b5;
    Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
    SetByte 001863 LoByte(Widen(b13));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6) 123;
    TraceOperation 076937 (Insert_obj (Con 69) (Var (Global 0)));
    Let b14 = M[007908];
    Let b15 = M[007909];
    Let b16 = M[001376];
    if (IsZero(Widen(b16))) {} else {
      Let b17 = M[Offset(Offset(000751,Mul(Widen(b16),9)),6)];
      if (Equal(Widen(b17),69)) {
        Let b18 = M[001377];
        SetByte Offset(Offset(000751,Mul(Widen(b16),9)),6) LoByte(Widen(b18));
      } else {
        Let loop_var19 = Widen(b17);
        Label 20: {
          Let b21 = M[Offset(Offset(000751,Mul(loop_var19,9)),5)];
          if (Equal(Widen(b21),69)) {
            Let b22 = M[001377];
            SetByte Offset(Offset(000751,Mul(loop_var19,9)),5) LoByte(Widen(b22));
          } else {
            Assign loop_var19 = Widen(b21);
            Goto: Label 20
          }
        }
      }
    }
    SetByte 001376 b15;
    Let b23 = M[Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),6)];
    SetByte 001377 LoByte(Widen(b23));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),6) 69;
    TraceOperation 076940 New_line;
    GamePrint "\n";
    TraceOperation 076941 (Print_ret "Arthur walks up and says \"Hello, again.\" He looks shy, embarrassed and stuck for anything else to say, and quickly walks to the other end of the room.");
    GamePrint "Arthur walks up and says \"Hello, again.\" He looks shy, embarrassed and stuck for anything else to say, and quickly walks to the other end of the room.\n";
    PopFrame;
    PopReturnAddress return_address_24;
    SetResult 1;
    JumpIndirect: (return) return_address_24
  }
LocOp 077022:
  TraceOperation 077022 (Jin (Con 123) (Var (Global 0)) (Branch T Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001862];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  } else {
    TraceOperation 077026 (Insert_obj (Con 123) (Var (Global 0)));
    Let b5 = M[007908];
    Let b6 = M[007909];
    Let b7 = M[001862];
    if (IsZero(Widen(b7))) {} else {
      Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b8),123)) {
        Let b9 = M[001863];
        SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
      } else {
        Let loop_var10 = Widen(b8);
        Label 11: {
          Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
          if (Equal(Widen(b12),123)) {
            Let b13 = M[001863];
            SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
          } else {
            Assign loop_var10 = Widen(b12);
            Goto: Label 11
          }
        }
      }
    }
    SetByte 001862 b6;
    Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
    SetByte 001863 LoByte(Widen(b14));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 123;
    TraceOperation 077029 (Print_ret "Arthur follows you.");
    GamePrint "Arthur follows you.\n";
    PopFrame;
    PopReturnAddress return_address_15;
    SetResult 1;
    JumpIndirect: (return) return_address_15
  }
--------------------------------------------------
LocRoutine 077040:
  MakeRoutineFrame 0;
  Jump: 077041
LocOp 077041:
  TraceOperation 077041 (Insert_obj (Con 123) (Con 149));
  Let b1 = M[001862];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),123)) {
      Let b3 = M[001863];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),123)) {
          Let b7 = M[001863];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 001862 149;
  Let b8 = M[002098];
  SetByte 001863 LoByte(Widen(b8));
  SetByte 002098 123;
  TraceOperation 077044 (Call (Floc 022340) [Con -27122] Sp);
  PushFrame;
  PushReturnAddress 077044;
  SetLocal 1 -27122;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 077044:
  PushStack call_result;
  TraceOperation 077051 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 077056 (Store (Con 161) (Con 1));
  SetByte 008198 0;
  SetByte 008199 1;
  TraceOperation 077059 (Store (Con 155) (Con 0));
  SetByte 008186 0;
  SetByte 008187 0;
  TraceOperation 077062 (Store (Con 167) (Con 4));
  SetByte 008210 0;
  SetByte 008211 4;
  TraceOperation 077065 (Call (Floc 022320) [Con 16277,Con 2] Sp);
  PushFrame;
  PushReturnAddress 077065;
  SetLocal 1 16277;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 077065:
  PushStack call_result;
  TraceOperation 077073 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077078 (Print " You hear a muffled crash. It's probably Arthur's little house getting knocked down, which you tell him. This DOES upset him, and he tears out the door.\n\nThrough the window, you see him running up the lane. A small dog chases after him, yapping, ");
  GamePrint " You hear a muffled crash. It's probably Arthur's little house getting knocked down, which you tell him. This DOES upset him, and he tears out the door.\n\nThrough the window, you see him running up the lane. A small dog chases after him, yapping, ";
  TraceOperation 077219 (Jz (Var (Global 128)) (Branch F (Dloc 077226)));
  Let b2 = M[008164];
  Let b3 = M[008165];
  if (IsZero(MakeHiLo(b2,b3))) {
    TraceOperation 077222 (Jin (Con 125) (Con 123) (Branch F (Dloc 077267)));
    Let b4 = M[001880];
    if (Equal(123,Widen(b4))) {
      Jump: 077226
    } else {
      Jump: 077267
    }
  } else {
    Jump: 077226
  }
LocOp 077226:
  TraceOperation 077226 (Store (Con 144) (Con 1));
  SetByte 008164 0;
  SetByte 008165 1;
  TraceOperation 077229 (Print "and he throws it a ");
  GamePrint "and he throws it a ";
  TraceOperation 077242 (Print_obj (Con 125));
  Let b1 = M[001883];
  Let b2 = M[001884];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 077244 (Print ". The dog devours the sandwich");
  GamePrint ". The dog devours the sandwich";
  TraceOperation 077263 (Print_paddr (Var (Global 23)));
  Let b5 = M[007954];
  Let b6 = M[007955];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
  TraceOperation 077265 New_line;
  GamePrint "\n";
  TraceOperation 077266 Rtrue;
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 077267:
  TraceOperation 077267 (Print_ret "but he ignores it. The dog gulps uncomfortably.");
  GamePrint "but he ignores it. The dog gulps uncomfortably.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 077298:
  MakeRoutineFrame 0;
  Jump: 077299
LocOp 077299:
  TraceOperation 077299 (Je [Var (Global 203),Con 52,Con 51] (Branch F (Dloc 077391)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),52),Equal(MakeHiLo(b1,b2),51))) {
    TraceOperation 077306 (Print_ret "Bad idea. Even Santraginus Five seawater is illegal on most planets. (You can imagine what kind of beach communities they have.)");
    GamePrint "Bad idea. Even Santraginus Five seawater is illegal on most planets. (You can imagine what kind of beach communities they have.)\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 077391
  }
LocOp 077391:
  TraceOperation 077391 (Je [Var (Global 203),Con 63] (Branch F (Dloc 077403)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 077395 (Call (Floc 022042) [Con 61,Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 077395;
    SetLocal 1 61;
    SetLocal 2 MakeHiLo(b3,b4);
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 077403
  }
LocReturn 077395:
  PushStack call_result;
  TraceOperation 077402 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 077403:
  TraceOperation 077403 (Je [Var (Global 203),Con 39,Con 103] (Branch F (Dloc 077450)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 077409 (Print_ret "This is one of those clever new always-open always-closed bottles.");
    GamePrint "This is one of those clever new always-open always-closed bottles.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 077450
  }
LocOp 077450:
  TraceOperation 077450 (Je [Var (Global 203),Con 154,Con 112] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),112))) {
    TraceOperation 077456 (Call (Floc 049650) [] Sp);
    PushFrame;
    PushReturnAddress 077456;
    MakeRoutineFrame 0;
    Jump: 049651
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 077456:
  PushStack call_result;
  TraceOperation 077461 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 077462:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 077465
LocOp 077465:
  TraceOperation 077465 (Je [Var (Local 1),Con 6] (Branch F (Dloc 077651)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 077470 (Test_attr (Con 121) (Con 27) (Branch T (Dloc 077651)));
    Let b2 = M[001843];
    if (TestBit(b2,4)) {
      Jump: 077651
    } else {
      TraceOperation 077475 (Set_attr (Con 121) (Con 27));
      Let b3 = M[001843];
      SetByte 001843 SetBit(b3,4);
      TraceOperation 077478 (Set_attr (Con 126) (Con 25));
      Let b4 = M[001888];
      SetByte 001888 SetBit(b4,6);
      TraceOperation 077481 (Clear_attr (Con 126) (Con 27));
      Let b5 = M[001888];
      SetByte 001888 ClearBit(b5,4);
      TraceOperation 077484 (Clear_attr (Con 126) (Con 21));
      Let b6 = M[001887];
      SetByte 001887 ClearBit(b6,2);
      TraceOperation 077487 (Insert_obj (Con 126) (Con 31));
      Let b7 = M[001889];
      if (IsZero(Widen(b7))) {} else {
        Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
        if (Equal(Widen(b8),126)) {
          Let b9 = M[001890];
          SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
        } else {
          Let loop_var10 = Widen(b8);
          Label 11: {
            Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
            if (Equal(Widen(b12),126)) {
              Let b13 = M[001890];
              SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
            } else {
              Assign loop_var10 = Widen(b12);
              Goto: Label 11
            }
          }
        }
      }
      SetByte 001889 31;
      Let b14 = M[001036];
      SetByte 001890 LoByte(Widen(b14));
      SetByte 001036 126;
      TraceOperation 077490 (Insert_obj (Con 142) (Var (Global 0)));
      Let b15 = M[007908];
      Let b16 = M[007909];
      Let b17 = M[002033];
      if (IsZero(Widen(b17))) {} else {
        Let b18 = M[Offset(Offset(000751,Mul(Widen(b17),9)),6)];
        if (Equal(Widen(b18),142)) {
          Let b19 = M[002034];
          SetByte Offset(Offset(000751,Mul(Widen(b17),9)),6) LoByte(Widen(b19));
        } else {
          Let loop_var20 = Widen(b18);
          Label 21: {
            Let b22 = M[Offset(Offset(000751,Mul(loop_var20,9)),5)];
            if (Equal(Widen(b22),142)) {
              Let b23 = M[002034];
              SetByte Offset(Offset(000751,Mul(loop_var20,9)),5) LoByte(Widen(b23));
            } else {
              Assign loop_var20 = Widen(b22);
              Goto: Label 21
            }
          }
        }
      }
      SetByte 002033 b16;
      Let b24 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6)];
      SetByte 002034 LoByte(Widen(b24));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6) 142;
      TraceOperation 077493 (Insert_obj (Con 122) (Con 142));
      Let b25 = M[001853];
      if (IsZero(Widen(b25))) {} else {
        Let b26 = M[Offset(Offset(000751,Mul(Widen(b25),9)),6)];
        if (Equal(Widen(b26),122)) {
          Let b27 = M[001854];
          SetByte Offset(Offset(000751,Mul(Widen(b25),9)),6) LoByte(Widen(b27));
        } else {
          Let loop_var28 = Widen(b26);
          Label 29: {
            Let b30 = M[Offset(Offset(000751,Mul(loop_var28,9)),5)];
            if (Equal(Widen(b30),122)) {
              Let b31 = M[001854];
              SetByte Offset(Offset(000751,Mul(loop_var28,9)),5) LoByte(Widen(b31));
            } else {
              Assign loop_var28 = Widen(b30);
              Goto: Label 29
            }
          }
        }
      }
      SetByte 001853 142;
      Let b32 = M[002035];
      SetByte 001854 LoByte(Widen(b32));
      SetByte 002035 122;
      TraceOperation 077496 (Store (Con 87) (Con 1));
      SetByte 008050 0;
      SetByte 008051 1;
      TraceOperation 077499 (Call (Floc 022320) [Con -26581,Con 3] Sp);
      PushFrame;
      PushReturnAddress 077499;
      SetLocal 1 -26581;
      SetLocal 2 3;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 022327
    }
  } else {
    Jump: 077651
  }
LocReturn 077499:
  PushStack call_result;
  TraceOperation 077507 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077512 (Call (Floc 022320) [Con -32630,Con 6] Sp);
  PushFrame;
  PushReturnAddress 077512;
  SetLocal 1 -32630;
  SetLocal 2 6;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 077512:
  PushStack call_result;
  TraceOperation 077520 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077525 (Call (Floc 022320) [Con -25227,Con 18] Sp);
  PushFrame;
  PushReturnAddress 077525;
  SetLocal 1 -25227;
  SetLocal 2 18;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 077525:
  PushStack call_result;
  TraceOperation 077533 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077538 (Call (Floc 022320) [Con -25112,Con 36] Sp);
  PushFrame;
  PushReturnAddress 077538;
  SetLocal 1 -25112;
  SetLocal 2 36;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 077538:
  PushStack call_result;
  TraceOperation 077546 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077551 (Random (Con 6) (Global 107));
  LetRandom random2 6;
  SetByte 008122 HiByte(random2);
  SetByte 008123 LoByte(random2);
  TraceOperation 077555 (Random (Con 3) (Global 106));
  LetRandom random3 3;
  SetByte 008120 HiByte(random3);
  SetByte 008121 LoByte(random3);
  TraceOperation 077559 (Add (Var (Global 1)) (Con 8) (Global 1));
  Let b4 = M[007910];
  Let b5 = M[007911];
  SetByte 007910 HiByte(Add(MakeHiLo(b4,b5),8));
  SetByte 007911 LoByte(Add(MakeHiLo(b4,b5),8));
  TraceOperation 077563 (Store (Con 207) (Con 126));
  SetByte 008290 0;
  SetByte 008291 126;
  TraceOperation 077566 New_line;
  GamePrint "\n";
  TraceOperation 077567 (Print "Ford removes the bottle of ");
  GamePrint "Ford removes the bottle of ";
  TraceOperation 077582 (Print_obj (Con 122));
  Let b6 = M[001856];
  Let b7 = M[001857];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
  GamePrint ite_res9;
  TraceOperation 077584 (Print_ret " which he's been waving under your nose. He tells you that you are aboard a Vogon spaceship, and gives you some peanuts.");
  GamePrint " which he's been waving under your nose. He tells you that you are aboard a Vogon spaceship, and gives you some peanuts.\n";
  PopFrame;
  PopReturnAddress return_address_10;
  SetResult 1;
  JumpIndirect: (return) return_address_10
LocOp 077651:
  TraceOperation 077651 (Je [Var (Local 1),Con 6] (Branch F (Dloc 077670)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 077655 (Test_attr (Con 121) (Con 4) (Branch F (Dloc 077670)));
    Let b2 = M[001840];
    if (TestBit(b2,3)) {
      TraceOperation 077659 (Store (Con 91) (Con 1));
      SetByte 008058 0;
      SetByte 008059 1;
      TraceOperation 077662 (Call (Floc 042734) [Con -11018] Sp);
      PushFrame;
      PushReturnAddress 077662;
      SetLocal 1 -11018;
      MakeRoutineFrame 1;
      Jump: 042737
    } else {
      Jump: 077670
    }
  } else {
    Jump: 077670
  }
LocReturn 077662:
  PushStack call_result;
  TraceOperation 077669 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 077670:
  TraceOperation 077670 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 077674 (Print "This is a squalid room filled with grubby mattresses, unwashed cups, and unidentifiable bits of smelly alien underwear. A door lies to port, and an airlock lies to starboard.");
    GamePrint "This is a squalid room filled with grubby mattresses, unwashed cups, and unidentifiable bits of smelly alien underwear. A door lies to port, and an airlock lies to starboard.";
    TraceOperation 077783 (Jz (Var (Global 117)) (Branch T (Dloc 077814)));
    Let b2 = M[008142];
    Let b3 = M[008143];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 077814
    } else {
      TraceOperation 077786 (Print " Your gown is hanging from a hook");
      GamePrint " Your gown is hanging from a hook";
      TraceOperation 077807 (Test_attr (Con 139) (Con 8) (Branch T (Dloc 077814)));
      Let b4 = M[002003];
      if (TestBit(b4,7)) {
        Jump: 077814
      } else {
        TraceOperation 077811 (Print ".");
        GamePrint ".";
        Jump: 077814
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocOp 077814:
  TraceOperation 077814 (Test_attr (Con 139) (Con 8) (Branch F (Dloc 077861)));
  Let b1 = M[002003];
  if (TestBit(b1,7)) {
    TraceOperation 077818 (Jz (Var (Global 117)) (Branch T (Dloc 077829)));
    Let b2 = M[008142];
    Let b3 = M[008143];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 077829
    } else {
      TraceOperation 077821 (Print " and a ");
      GamePrint " and a ";
      TraceOperation 077826 (Jump 077834);
      Jump: 077834
    }
  } else {
    Jump: 077861
  }
LocOp 077829:
  TraceOperation 077829 (Print " A ");
  GamePrint " A ";
  Jump: 077834
LocOp 077834:
  TraceOperation 077834 (Print "towel is draped over a drain on the floor.");
  GamePrint "towel is draped over a drain on the floor.";
  Jump: 077861
LocOp 077861:
  TraceOperation 077861 (Jz (Var (Global 116)) (Branch T (Dloc 077907)));
  Let b1 = M[008140];
  Let b2 = M[008141];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 077907
  } else {
    TraceOperation 077864 (Je [Var (Global 116),Con 141] (Branch T (Dloc 077907)));
    Let b3 = M[008140];
    Let b4 = M[008141];
    if (Equal(MakeHiLo(b3,b4),141)) {
      Jump: 077907
    } else {
      TraceOperation 077868 (Print " Resting in front of a ");
      GamePrint " Resting in front of a ";
      TraceOperation 077881 (Print_obj (Con 112));
      Let b5 = M[001766];
      Let b6 = M[001767];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 077883 (Print " at the base of one wall is");
      GamePrint " at the base of one wall is";
      TraceOperation 077898 (Call (Floc 043738) [Var (Global 116)] Sp);
      Let b9 = M[008140];
      Let b10 = M[008141];
      PushFrame;
      PushReturnAddress 077898;
      SetLocal 1 MakeHiLo(b9,b10);
      MakeRoutineFrame 2;
      SetLocal 2 0;
      Jump: 043743
    }
  }
LocReturn 077898:
  PushStack call_result;
  TraceOperation 077904 (Print ".");
  GamePrint ".";
  Jump: 077907
LocOp 077907:
  TraceOperation 077907 New_line;
  GamePrint "\n";
  TraceOperation 077908 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 077910:
  MakeRoutineFrame 0;
  Jump: 077911
LocOp 077911:
  TraceOperation 077911 (Call (Floc 022320) [Con -26581,Con -1] Sp);
  PushFrame;
  PushReturnAddress 077911;
  SetLocal 1 -26581;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 077911:
  PushStack call_result;
  TraceOperation 077920 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 077925 (Inc (Con 134));
  Let b2 = M[008144];
  Let b3 = M[008145];
  SetByte 008144 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008145 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 077927 (Jz (Var (Global 71)) (Branch F (Dloc 077946)));
  Let b4 = M[008050];
  Let b5 = M[008051];
  if (IsZero(MakeHiLo(b4,b5))) {
    TraceOperation 077930 (Call (Floc 022340) [Con -26581] Sp);
    PushFrame;
    PushReturnAddress 077930;
    SetLocal 1 -26581;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    Jump: 077946
  }
LocReturn 077930:
  PushStack call_result;
  TraceOperation 077937 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 077942 (Store (Con 134) (Con 0));
  SetByte 008144 0;
  SetByte 008145 0;
  TraceOperation 077945 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 077946:
  TraceOperation 077946 New_line;
  GamePrint "\n";
  TraceOperation 077947 (Je [Var (Global 118),Con 1,Con 2] (Branch F (Dloc 077986)));
  Let b1 = M[008144];
  Let b2 = M[008145];
  if (LogOr(Equal(MakeHiLo(b1,b2),1),Equal(MakeHiLo(b1,b2),2))) {
    TraceOperation 077953 (Print "You begin to feel ");
    GamePrint "You begin to feel ";
    TraceOperation 077964 (Je [Var (Global 118),Con 2] (Branch F (Dloc 077971)));
    Let b3 = M[008144];
    Let b4 = M[008145];
    if (Equal(MakeHiLo(b3,b4),2)) {
      TraceOperation 077968 (Print "in");
      GamePrint "in";
      Jump: 077971
    } else {
      Jump: 077971
    }
  } else {
    Jump: 077986
  }
LocOp 077971:
  TraceOperation 077971 (Print_ret "distinctly groggy.");
  GamePrint "distinctly groggy.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 077986:
  TraceOperation 077986 (Je [Var (Global 118),Con 3] (Branch F (Dloc 078011)));
  Let b1 = M[008144];
  Let b2 = M[008145];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 077990 (Print_ret "You begin to feel very indistinct.");
    GamePrint "You begin to feel very indistinct.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 078011
  }
LocOp 078011:
  TraceOperation 078011 (Print "Your serious allergic reaction to protein loss from");
  GamePrint "Your serious allergic reaction to protein loss from";
  TraceOperation 078046 (Print_paddr (Var (Global 42)));
  Let b1 = M[007992];
  Let b2 = M[007993];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 078048 (Print "s becomes a cause celebre amongst various holistic pressure groups in the Galaxy and leads to a total ban on dematerialisation. Within fifty years, space travel is replaced by a keen interest in old furniture restoration and market gardening. In this new, quieter Galaxy, the art of telepathy flourishes as never before, creating a new universal harmony which brings all life together, converts all matter into thought and brings about the rebirth of the entire Universe on a higher and better plane of existence.\n\nHowever, none of this affects you, because you are dead.");
  GamePrint "s becomes a cause celebre amongst various holistic pressure groups in the Galaxy and leads to a total ban on dematerialisation. Within fifty years, space travel is replaced by a keen interest in old furniture restoration and market gardening. In this new, quieter Galaxy, the art of telepathy flourishes as never before, creating a new universal harmony which brings all life together, converts all matter into thought and brings about the rebirth of the entire Universe on a higher and better plane of existence.\n\nHowever, none of this affects you, because you are dead.";
  TraceOperation 078397 New_line;
  GamePrint "\n";
  TraceOperation 078398 (Call (Floc 028948) [] Sp);
  PushFrame;
  PushReturnAddress 078398;
  MakeRoutineFrame 1;
  SetLocal 1 0;
  Jump: 028951
LocReturn 078398:
  PushStack call_result;
  TraceOperation 078403 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 078404:
  MakeRoutineFrame 0;
  Jump: 078405
LocOp 078405:
  TraceOperation 078405 (Je [Var (Global 203),Con 61] (Branch F (Dloc 078508)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 078410 (Print "The dispenser is tall, has a button at around eye-level, and says \"Babel Fish\" in large letters. Anything dispensed would probably come out the slot at around knee-level.");
    GamePrint "The dispenser is tall, has a button at around eye-level, and says \"Babel Fish\" in large letters. Anything dispensed would probably come out the slot at around knee-level.";
    TraceOperation 078501 (Call (Floc 057998) [] Sp);
    PushFrame;
    PushReturnAddress 078501;
    MakeRoutineFrame 0;
    Jump: 057999
  } else {
    Jump: 078508
  }
LocReturn 078501:
  PushStack call_result;
  TraceOperation 078506 New_line;
  GamePrint "\n";
  TraceOperation 078507 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 078508:
  TraceOperation 078508 (Je [Var (Global 203),Con 54] (Branch F (Dloc 078553)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 078512 (Je [Var (Global 201),Con 32,Con 34] (Branch F (Dloc 078553)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),32),Equal(MakeHiLo(b3,b4),34))) {
      TraceOperation 078518 (Store (Con 102) (Con 1));
      SetByte 008080 0;
      SetByte 008081 1;
      TraceOperation 078521 (Print "You are now lying down with your ear near the ");
      GamePrint "You are now lying down with your ear near the ";
      TraceOperation 078544 (Print_obj (Con 117));
      Let b5 = M[001811];
      Let b6 = M[001812];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 078546 (Print_ret " slot.");
      GamePrint " slot.\n";
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    } else {
      Jump: 078553
    }
  } else {
    Jump: 078553
  }
LocOp 078553:
  TraceOperation 078553 (Je [Var (Global 203),Con 87] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 078557 (Jz (Var (Global 204)) (Branch T Dfalse));
    Let b3 = M[008316];
    Let b4 = M[008317];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 078560 (Call (Floc 022042) [Con 54,Con 34,Con 117] Sp);
      PushFrame;
      PushReturnAddress 078560;
      SetLocal 1 54;
      SetLocal 2 34;
      SetLocal 3 117;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 078560:
  PushStack call_result;
  TraceOperation 078568 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 078570:
  MakeRoutineFrame 0;
  Jump: 078571
LocOp 078571:
  TraceOperation 078571 (Je [Var (Global 203),Con 114] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),114)) {
    TraceOperation 078575 (Jz (Var (Global 86)) (Branch T (Dloc 078593)));
    Let b3 = M[008080];
    Let b4 = M[008081];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 078593
    } else {
      TraceOperation 078578 (Print_ret "You can't reach it from down here.");
      GamePrint "You can't reach it from down here.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocOp 078593:
  TraceOperation 078593 (Jz (Var (Global 114)) (Branch F (Dloc 078603)));
  Let b1 = M[008136];
  Let b2 = M[008137];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 078596 (Print_ret "Click.");
    GamePrint "Click.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 078603
  }
LocOp 078603:
  TraceOperation 078603 (Dec (Con 130));
  Let b1 = M[008136];
  Let b2 = M[008137];
  SetByte 008136 HiByte(Sub(MakeHiLo(b1,b2),1));
  SetByte 008137 LoByte(Sub(MakeHiLo(b1,b2),1));
  TraceOperation 078605 (Print "A single ");
  GamePrint "A single ";
  TraceOperation 078614 (Print_obj (Con 111));
  Let b3 = M[001757];
  Let b4 = M[001758];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 078616 (Print " shoots out of the slot. It sails across the room and ");
  GamePrint " shoots out of the slot. It sails across the room and ";
  TraceOperation 078643 (Jz (Var (Global 117)) (Branch F (Dloc 078673)));
  Let b7 = M[008142];
  Let b8 = M[008143];
  if (IsZero(MakeHiLo(b7,b8))) {
    TraceOperation 078646 (Print "through a ");
    GamePrint "through a ";
    TraceOperation 078651 (Print_obj (Con 115));
    Let b9 = M[001793];
    Let b10 = M[001794];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
    GamePrint ite_res12;
    TraceOperation 078653 (Print " in the wall, just under a ");
    GamePrint " in the wall, just under a ";
    TraceOperation 078668 (Print_obj (Con 114));
    Let b13 = M[001784];
    Let b14 = M[001785];
    Let b15 = M[Address(MakeHiLo(b13,b14))];
    Let ite_res16 = Ite((IsZeroByte(b15),"",GetText(Offset(Address(MakeHiLo(b13,b14)),1))));
    GamePrint ite_res16;
    TraceOperation 078670 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_17;
    SetResult 1;
    JumpIndirect: (return) return_address_17
  } else {
    Jump: 078673
  }
LocOp 078673:
  TraceOperation 078673 (Print "hits the dressing gown. The fish slides down the ");
  GamePrint "hits the dressing gown. The fish slides down the ";
  TraceOperation 078702 (Jz (Var (Global 143)) (Branch T (Dloc 078727)));
  Let b1 = M[008194];
  Let b2 = M[008195];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 078727
  } else {
    TraceOperation 078705 (Print "inside (nice try, though)");
    GamePrint "inside (nice try, though)";
    TraceOperation 078724 (Jump 078732);
    Jump: 078732
  }
LocOp 078727:
  TraceOperation 078727 (Print "sleeve");
  GamePrint "sleeve";
  Jump: 078732
LocOp 078732:
  TraceOperation 078732 (Print " of the gown and falls to the floor, ");
  GamePrint " of the gown and falls to the floor, ";
  TraceOperation 078753 (Test_attr (Con 139) (Con 8) (Branch T (Dloc 078792)));
  Let b1 = M[002003];
  if (TestBit(b1,7)) {
    Jump: 078792
  } else {
    TraceOperation 078757 (Print_ret "vanishing through the grating of a hitherto unnoticed drain.");
    GamePrint "vanishing through the grating of a hitherto unnoticed drain.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 078792:
  TraceOperation 078792 (Print "landing on the towel. A split-second later, a tiny cleaning robot whizzes across the floor, grabs the fish, and continues its breakneck pace toward a ");
  GamePrint "landing on the towel. A split-second later, a tiny cleaning robot whizzes across the floor, grabs the fish, and continues its breakneck pace toward a ";
  TraceOperation 078883 (Print_obj (Con 112));
  Let b1 = M[001766];
  Let b2 = M[001767];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 078885 (Print " at the base of the wall. ");
  GamePrint " at the base of the wall. ";
  TraceOperation 078900 (Jz (Var (Global 116)) (Branch F (Dloc 078928)));
  Let b5 = M[008140];
  Let b6 = M[008141];
  if (IsZero(MakeHiLo(b5,b6))) {
    TraceOperation 078903 (Print_ret "The robot zips through the panel, and is gone.");
    GamePrint "The robot zips through the panel, and is gone.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 078928
  }
LocOp 078928:
  TraceOperation 078928 (Je [Var (Global 116),Con 141] (Branch T (Dloc 078970)));
  Let b1 = M[008140];
  Let b2 = M[008141];
  if (Equal(MakeHiLo(b1,b2),141)) {
    Jump: 078970
  } else {
    TraceOperation 078932 (Print "The robot zips around");
    GamePrint "The robot zips around";
    TraceOperation 078947 (Call (Floc 043738) [Var (Global 116)] Sp);
    Let b3 = M[008140];
    Let b4 = M[008141];
    PushFrame;
    PushReturnAddress 078947;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043743
  }
LocReturn 078947:
  PushStack call_result;
  TraceOperation 078953 (Print_ret ", through the panel, and is gone.");
  GamePrint ", through the panel, and is gone.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 078970:
  TraceOperation 078970 (Print "The robot plows into the satchel, sending the ");
  GamePrint "The robot plows into the satchel, sending the ";
  TraceOperation 078997 (Print_obj (Con 111));
  Let b1 = M[001757];
  Let b2 = M[001758];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 078999 (Je [Var (Global 115),Con 150] (Branch T (Dloc 079018)));
  Let b5 = M[008138];
  Let b6 = M[008139];
  if (Equal(MakeHiLo(b5,b6),150)) {
    Jump: 079018
  } else {
    TraceOperation 079003 (Jz (Var (Global 115)) (Branch T (Dloc 079018)));
    Let b7 = M[008138];
    Let b8 = M[008139];
    if (IsZero(MakeHiLo(b7,b8))) {
      Jump: 079018
    } else {
      TraceOperation 079006 (Print " and");
      GamePrint " and";
      TraceOperation 079011 (Call (Floc 043738) [Var (Global 115),Con 1] Sp);
      Let b9 = M[008138];
      Let b10 = M[008139];
      PushFrame;
      PushReturnAddress 079011;
      SetLocal 1 MakeHiLo(b9,b10);
      SetLocal 2 1;
      MakeRoutineFrame 2;
      Jump: 043743
    }
  }
LocReturn 079011:
  PushStack call_result;
  Jump: 079018
LocOp 079018:
  TraceOperation 079018 (Print " flying through the air in a graceful arc");
  GamePrint " flying through the air in a graceful arc";
  TraceOperation 079041 (Je [Var (Global 115),Con 150] (Branch T (Dloc 079133)));
  Let b1 = M[008138];
  Let b2 = M[008139];
  if (Equal(MakeHiLo(b1,b2),150)) {
    Jump: 079133
  } else {
    TraceOperation 079046 (Print ". ");
    GamePrint ". ";
    TraceOperation 079049 (Print_paddr (Var (Global 9)));
    Let b3 = M[007926];
    Let b4 = M[007927];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 079051 (Print "catches the ");
    GamePrint "catches the ";
    TraceOperation 079060 (Print_obj (Con 111));
    Let b5 = M[001757];
    Let b6 = M[001758];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 079062 (Print " ");
    GamePrint " ";
    TraceOperation 079065 (Jz (Var (Global 115)) (Branch T (Dloc 079101)));
    Let b9 = M[008138];
    Let b10 = M[008139];
    if (IsZero(MakeHiLo(b9,b10))) {
      Jump: 079101
    } else {
      TraceOperation 079068 (Insert_obj (Var (Global 115)) (Con 219));
      Let b11 = M[008138];
      Let b12 = M[008139];
      Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),4)];
      if (IsZero(Widen(b13))) {} else {
        Let b14 = M[Offset(Offset(000751,Mul(Widen(b13),9)),6)];
        if (Equal(Widen(b14),MakeHiLo(b11,b12))) {
          Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b13),9)),6) LoByte(Widen(b15));
        } else {
          Let loop_var16 = Widen(b14);
          Label 17: {
            Let b18 = M[Offset(Offset(000751,Mul(loop_var16,9)),5)];
            if (Equal(Widen(b18),MakeHiLo(b11,b12))) {
              Let b19 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),5)];
              SetByte Offset(Offset(000751,Mul(loop_var16,9)),5) LoByte(Widen(b19));
            } else {
              Assign loop_var16 = Widen(b18);
              Goto: Label 17
            }
          }
        }
      }
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),4) 219;
      Let b20 = M[002728];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),5) LoByte(Widen(b20));
      SetByte 002728 b12;
      TraceOperation 079071 (Print "and also manages to catch");
      GamePrint "and also manages to catch";
      TraceOperation 079088 (Call (Floc 043738) [Var (Global 115),Con 1] Sp);
      Let b21 = M[008138];
      Let b22 = M[008139];
      PushFrame;
      PushReturnAddress 079088;
      SetLocal 1 MakeHiLo(b21,b22);
      SetLocal 2 1;
      MakeRoutineFrame 2;
      Jump: 043743
    }
  }
LocReturn 079088:
  PushStack call_result;
  TraceOperation 079095 (Store (Con 131) (Con 0));
  SetByte 008138 0;
  SetByte 008139 0;
  TraceOperation 079098 (Jump 079124);
  Jump: 079124
LocOp 079101:
  TraceOperation 079101 (Print "(which is all the flying junk it can find)");
  GamePrint "(which is all the flying junk it can find)";
  Jump: 079124
LocOp 079124:
  TraceOperation 079124 (Print_ret ", and exits.");
  GamePrint ", and exits.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079133:
  TraceOperation 079133 (Je [Var (Global 115),Con 150] (Branch F Dfalse));
  Let b1 = M[008138];
  Let b2 = M[008139];
  if (Equal(MakeHiLo(b1,b2),150)) {
    TraceOperation 079137 (Insert_obj (Con 150) (Con 219));
    Let b3 = M[002105];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),150)) {
        Let b5 = M[002106];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),150)) {
            Let b9 = M[002106];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002105 219;
    Let b10 = M[002728];
    SetByte 002106 LoByte(Widen(b10));
    SetByte 002728 150;
    TraceOperation 079140 (Add (Var (Global 1)) (Con 12) (Global 1));
    Let b11 = M[007910];
    Let b12 = M[007911];
    SetByte 007910 HiByte(Add(MakeHiLo(b11,b12),12));
    SetByte 007911 LoByte(Add(MakeHiLo(b11,b12),12));
    TraceOperation 079144 (Insert_obj (Con 111) (Con 31));
    Let b13 = M[001754];
    if (IsZero(Widen(b13))) {} else {
      Let b14 = M[Offset(Offset(000751,Mul(Widen(b13),9)),6)];
      if (Equal(Widen(b14),111)) {
        Let b15 = M[001755];
        SetByte Offset(Offset(000751,Mul(Widen(b13),9)),6) LoByte(Widen(b15));
      } else {
        Let loop_var16 = Widen(b14);
        Label 17: {
          Let b18 = M[Offset(Offset(000751,Mul(loop_var16,9)),5)];
          if (Equal(Widen(b18),111)) {
            Let b19 = M[001755];
            SetByte Offset(Offset(000751,Mul(loop_var16,9)),5) LoByte(Widen(b19));
          } else {
            Assign loop_var16 = Widen(b18);
            Goto: Label 17
          }
        }
      }
    }
    SetByte 001754 31;
    Let b20 = M[001036];
    SetByte 001755 LoByte(Widen(b20));
    SetByte 001036 111;
    TraceOperation 079147 (Call (Floc 020662) [Con -25227] Sp);
    PushFrame;
    PushReturnAddress 079147;
    SetLocal 1 -25227;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 020671
  } else {
    PopFrame;
    PopReturnAddress return_address_21;
    SetResult 0;
    JumpIndirect: (return) return_address_21
  }
LocReturn 079147:
  PushStack call_result;
  TraceOperation 079154 (Jz (Var Sp) (Branch T (Dloc 079173)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 079173
  } else {
    TraceOperation 079157 (Call (Floc 022320) [Con -25112,Con 4] Sp);
    PushFrame;
    PushReturnAddress 079157;
    SetLocal 1 -25112;
    SetLocal 2 4;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  }
LocReturn 079157:
  PushStack call_result;
  TraceOperation 079165 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 079170 (Jump 079199);
  Jump: 079199
LocOp 079173:
  TraceOperation 079173 (Call (Floc 022320) [Con -25227,Con 4] Sp);
  PushFrame;
  PushReturnAddress 079173;
  SetLocal 1 -25227;
  SetLocal 2 4;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 079173:
  PushStack call_result;
  TraceOperation 079181 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 079186 (Call (Floc 022320) [Con -25112,Con 7] Sp);
  PushFrame;
  PushReturnAddress 079186;
  SetLocal 1 -25112;
  SetLocal 2 7;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 079186:
  PushStack call_result;
  TraceOperation 079194 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  Jump: 079199
LocOp 079199:
  TraceOperation 079199 (Store (Con 130) (Con 0));
  SetByte 008136 0;
  SetByte 008137 0;
  TraceOperation 079202 (Store (Con 131) (Con 0));
  SetByte 008138 0;
  SetByte 008139 0;
  TraceOperation 079205 (Print " surrounded by a cloud of junk mail. Another robot flies in and begins madly collecting the cluttered plume of mail. The ");
  GamePrint " surrounded by a cloud of junk mail. Another robot flies in and begins madly collecting the cluttered plume of mail. The ";
  TraceOperation 079282 (Print_obj (Con 111));
  Let b1 = M[001757];
  Let b2 = M[001758];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 079284 (Print_ret " continues its flight, landing with a loud \"squish\" in your ear.");
  GamePrint " continues its flight, landing with a loud \"squish\" in your ear.\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 079326:
  MakeRoutineFrame 0;
  Jump: 079327
LocOp 079327:
  TraceOperation 079327 (Je [Var (Global 203),Con 63] (Branch F (Dloc 079343)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 079331 (Print "You see only ");
    GamePrint "You see only ";
    TraceOperation 079338 (Print_obj (Con 24));
    Let b3 = M[000974];
    Let b4 = M[000975];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 079340 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 079343
  }
LocOp 079343:
  TraceOperation 079343 (Je [Var (Global 203),Con 46] (Branch F (Dloc 079407)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 079348 (Je [Var (Global 202),Con 115] (Branch F (Dloc 079407)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),115)) {
      TraceOperation 079352 (Test_attr (Var (Global 201)) (Con 22) (Branch F (Dloc 079362)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),2)];
      if (TestBit(b7,1)) {
        TraceOperation 079356 (Call (Floc 057842) [] Sp);
        PushFrame;
        PushReturnAddress 079356;
        MakeRoutineFrame 0;
        Jump: 057843
      } else {
        Jump: 079362
      }
    } else {
      Jump: 079407
    }
  } else {
    Jump: 079407
  }
LocReturn 079356:
  PushStack call_result;
  TraceOperation 079361 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 079362:
  TraceOperation 079362 (Get_prop (Var (Global 201)) (Con 22) Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
  Label 7: {
    Let b8 = M[Address(loop_var6)];
    if (IsZeroByte(b8)) {
      Let b9 = M[000740];
      Let b10 = M[000741];
      PushStack MakeHiLo(b9,b10);
    } else {
      if (Equal(22,Widen(BwAnd(b8,31)))) {
        if (Equal(Add(Widen(ShiftR(b8,5)),1),2)) {
          Let b11 = M[Offset(Address(loop_var6),1)];
          Let b12 = M[Offset(Offset(Address(loop_var6),1),1)];
          PushStack MakeHiLo(b11,b12);
        } else {
          Let b13 = M[Offset(Address(loop_var6),1)];
          PushStack Widen(b13);
        }
      } else {
        Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
        Goto: Label 7
      }
    }
  }
  TraceOperation 079366 (Jl (Var Sp) (Con 5) (Branch F (Dloc 079394)));
  PopStack popped14;
  if (LessThan(popped14,5)) {
    TraceOperation 079370 (Insert_obj (Var (Global 201)) (Con 219));
    Let b15 = M[008310];
    Let b16 = M[008311];
    Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),4)];
    if (IsZero(Widen(b17))) {} else {
      Let b18 = M[Offset(Offset(000751,Mul(Widen(b17),9)),6)];
      if (Equal(Widen(b18),MakeHiLo(b15,b16))) {
        Let b19 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b17),9)),6) LoByte(Widen(b19));
      } else {
        Let loop_var20 = Widen(b18);
        Label 21: {
          Let b22 = M[Offset(Offset(000751,Mul(loop_var20,9)),5)];
          if (Equal(Widen(b22),MakeHiLo(b15,b16))) {
            Let b23 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),5)];
            SetByte Offset(Offset(000751,Mul(loop_var20,9)),5) LoByte(Widen(b23));
          } else {
            Assign loop_var20 = Widen(b22);
            Goto: Label 21
          }
        }
      }
    }
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),4) 219;
    Let b24 = M[002728];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),5) LoByte(Widen(b24));
    SetByte 002728 b16;
    TraceOperation 079373 (Print_ret "It falls through the hole and vanishes.");
    GamePrint "It falls through the hole and vanishes.\n";
    PopFrame;
    PopReturnAddress return_address_25;
    SetResult 1;
    JumpIndirect: (return) return_address_25
  } else {
    Jump: 079394
  }
LocOp 079394:
  TraceOperation 079394 (Print_ret "It doesn't fit through the hole.");
  GamePrint "It doesn't fit through the hole.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079407:
  TraceOperation 079407 (Je [Var (Global 203),Con 54,Con 55] (Branch F (Dloc 079445)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),54),Equal(MakeHiLo(b1,b2),55))) {
    TraceOperation 079413 (Je [Var (Global 202),Con 115] (Branch F (Dloc 079445)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),115)) {
      TraceOperation 079417 (Je [Var (Global 201),Con 30,Con 32,Con 36] (Branch T (Dloc 079428)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),30),Equal(MakeHiLo(b5,b6),32)),Equal(MakeHiLo(b5,b6),36))) {
        Jump: 079428
      } else {
        TraceOperation 079424 (Je [Var (Global 201),Con 34] (Branch F (Dloc 079436)));
        Let b7 = M[008310];
        Let b8 = M[008311];
        if (Equal(MakeHiLo(b7,b8),34)) {
          Jump: 079428
        } else {
          Jump: 079436
        }
      }
    } else {
      Jump: 079445
    }
  } else {
    Jump: 079445
  }
LocOp 079428:
  TraceOperation 079428 (Call (Floc 022042) [Con 144,Con 115] Sp);
  PushFrame;
  PushReturnAddress 079428;
  SetLocal 1 144;
  SetLocal 2 115;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 079428:
  PushStack call_result;
  TraceOperation 079435 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079436:
  TraceOperation 079436 (Call (Floc 022042) [Con 73,Var (Global 201),Con 114] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 079436;
  SetLocal 1 73;
  SetLocal 2 MakeHiLo(b1,b2);
  SetLocal 3 114;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 079436:
  PushStack call_result;
  TraceOperation 079444 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079445:
  TraceOperation 079445 (Je [Var (Global 203),Con 42,Con 27] (Branch F (Dloc 079464)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),42),Equal(MakeHiLo(b1,b2),27))) {
    TraceOperation 079451 (Je [Var (Global 201),Con 115] (Branch F (Dloc 079464)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),115)) {
      TraceOperation 079455 (Call (Floc 022042) [Con 73,Var (Global 202),Con 114] Sp);
      Let b5 = M[008312];
      Let b6 = M[008313];
      PushFrame;
      PushReturnAddress 079455;
      SetLocal 1 73;
      SetLocal 2 MakeHiLo(b5,b6);
      SetLocal 3 114;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 079464
    }
  } else {
    Jump: 079464
  }
LocReturn 079455:
  PushStack call_result;
  TraceOperation 079463 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079464:
  TraceOperation 079464 (Je [Var (Global 203),Con 26] (Branch F (Dloc 079476)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 079468 (Call (Floc 022042) [Con 144,Con 115] Sp);
    PushFrame;
    PushReturnAddress 079468;
    SetLocal 1 144;
    SetLocal 2 115;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 079476
  }
LocReturn 079468:
  PushStack call_result;
  TraceOperation 079475 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079476:
  TraceOperation 079476 (Je [Var (Global 203),Con 87] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 079480 (Jz (Var (Global 204)) (Branch T Dfalse));
    Let b3 = M[008316];
    Let b4 = M[008317];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 079483 (Call (Floc 022042) [Con 144,Con 115] Sp);
      PushFrame;
      PushReturnAddress 079483;
      SetLocal 1 144;
      SetLocal 2 115;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 079483:
  PushStack call_result;
  TraceOperation 079490 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 079492:
  MakeRoutineFrame 0;
  Jump: 079493
LocOp 079493:
  TraceOperation 079493 (Je [Var (Global 203),Con 61] (Branch F (Dloc 079556)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 079497 (Jz (Var (Global 117)) (Branch T (Dloc 079519)));
    Let b3 = M[008142];
    Let b4 = M[008143];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 079519
    } else {
      TraceOperation 079500 (Print_ret "Your gown is hanging from it.");
      GamePrint "Your gown is hanging from it.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 079556
  }
LocOp 079519:
  TraceOperation 079519 (Print_ret "The hook is attached to the wall, inches above a tiny hole.");
  GamePrint "The hook is attached to the wall, inches above a tiny hole.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079556:
  TraceOperation 079556 (Je [Var (Global 203),Con 55,Con 73] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),55),Equal(MakeHiLo(b1,b2),73))) {
    TraceOperation 079562 (Jz (Var (Global 86)) (Branch T (Dloc 079569)));
    Let b3 = M[008080];
    Let b4 = M[008081];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 079569
    } else {
      TraceOperation 079565 (Print_paddr (Var (Global 50)));
      Let b5 = M[008008];
      Let b6 = M[008009];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 079567 New_line;
      GamePrint "\n";
      TraceOperation 079568 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
LocOp 079569:
  TraceOperation 079569 (Je [Var (Global 201),Con 158] (Branch F (Dloc 079636)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),158)) {
    TraceOperation 079574 (Test_attr (Con 158) (Con 9) (Branch F (Dloc 079584)));
    Let b3 = M[002174];
    if (TestBit(b3,6)) {
      TraceOperation 079578 (Call (Floc 041208) [] Sp);
      PushFrame;
      PushReturnAddress 079578;
      MakeRoutineFrame 0;
      Jump: 041209
    } else {
      Jump: 079584
    }
  } else {
    Jump: 079636
  }
LocReturn 079578:
  PushStack call_result;
  TraceOperation 079583 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079584:
  TraceOperation 079584 (Store (Con 133) (Con 1));
  SetByte 008142 0;
  SetByte 008143 1;
  TraceOperation 079587 (Insert_obj (Con 158) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002177];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),158)) {
      Let b5 = M[002178];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),158)) {
          Let b9 = M[002178];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 002177 b2;
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  SetByte 002178 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 158;
  TraceOperation 079590 (Set_attr (Con 158) (Con 27));
  Let b11 = M[002176];
  SetByte 002176 SetBit(b11,4);
  TraceOperation 079593 (Set_attr (Con 158) (Con 21));
  Let b12 = M[002175];
  SetByte 002175 SetBit(b12,2);
  TraceOperation 079596 (Clear_attr (Con 158) (Con 23));
  Let b13 = M[002175];
  SetByte 002175 ClearBit(b13,0);
  TraceOperation 079599 (Print_ret "The gown is now hanging from the hook, covering a tiny hole.");
  GamePrint "The gown is now hanging from the hook, covering a tiny hole.\n";
  PopFrame;
  PopReturnAddress return_address_14;
  SetResult 1;
  JumpIndirect: (return) return_address_14
LocOp 079636:
  TraceOperation 079636 (Je [Var (Global 201),Con 34,Con 32,Con 36] (Branch F (Dloc 079651)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),34),Equal(MakeHiLo(b1,b2),32)),Equal(MakeHiLo(b1,b2),36))) {
    TraceOperation 079643 (Call (Floc 022042) [Con 144,Con 114] Sp);
    PushFrame;
    PushReturnAddress 079643;
    SetLocal 1 144;
    SetLocal 2 114;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 079651
  }
LocReturn 079643:
  PushStack call_result;
  TraceOperation 079650 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079651:
  TraceOperation 079651 (Test_attr (Var (Global 201)) (Con 25) (Branch F (Dloc 079689)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,6)) {
    TraceOperation 079655 (Test_attr (Var (Global 201)) (Con 21) (Branch F (Dloc 079671)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),2)];
    if (TestBit(b6,2)) {
      TraceOperation 079659 (Print_paddr (Var (Global 24)));
      Let b7 = M[007956];
      Let b8 = M[007957];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
      TraceOperation 079661 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
      Let b9 = M[008310];
      Let b10 = M[008311];
      PushFrame;
      PushReturnAddress 079661;
      SetLocal 1 MakeHiLo(b9,b10);
      SetLocal 2 1;
      MakeRoutineFrame 2;
      Jump: 043743
    } else {
      Jump: 079671
    }
  } else {
    Jump: 079689
  }
LocReturn 079661:
  PushStack call_result;
  TraceOperation 079668 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079671:
  TraceOperation 079671 (Insert_obj (Var (Global 201)) (Var (Global 0)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {} else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
    } else {
      Let loop_var8 = Widen(b6);
      Label 9: {
        Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
        if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
        } else {
          Assign loop_var8 = Widen(b10);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
  Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
  TraceOperation 079674 (Print_ret "It slips off the hook.");
  GamePrint "It slips off the hook.\n";
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 1;
  JumpIndirect: (return) return_address_13
LocOp 079689:
  TraceOperation 079689 (Call (Floc 031360) [] Sp);
  PushFrame;
  PushReturnAddress 079689;
  MakeRoutineFrame 0;
  Jump: 031361
LocReturn 079689:
  PushStack call_result;
  TraceOperation 079694 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 079696:
  MakeRoutineFrame 0;
  Jump: 079697
LocOp 079697:
  TraceOperation 079697 (Je [Var (Global 203),Con 55] (Branch F (Dloc 079797)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),55)) {
    TraceOperation 079702 (Test_attr (Con 139) (Con 8) (Branch F (Dloc 079729)));
    Let b3 = M[002003];
    if (TestBit(b3,7)) {
      TraceOperation 079706 (Print_ret "The drain is already covered by the towel.");
      GamePrint "The drain is already covered by the towel.\n";
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      Jump: 079729
    }
  } else {
    Jump: 079797
  }
LocOp 079729:
  TraceOperation 079729 (Jz (Var (Global 86)) (Branch T (Dloc 079736)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 079736
  } else {
    TraceOperation 079732 (Print_paddr (Var (Global 50)));
    Let b3 = M[008008];
    Let b4 = M[008009];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 079734 New_line;
    GamePrint "\n";
    TraceOperation 079735 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  }
LocOp 079736:
  TraceOperation 079736 (Je [Var (Global 201),Con 139] (Branch F (Dloc 079766)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),139)) {
    TraceOperation 079740 (Set_attr (Con 139) (Con 24));
    Let b3 = M[002005];
    SetByte 002005 SetBit(b3,7);
    TraceOperation 079743 (Set_attr (Con 139) (Con 8));
    Let b4 = M[002003];
    SetByte 002003 SetBit(b4,7);
    TraceOperation 079746 (Set_attr (Con 139) (Con 23));
    Let b5 = M[002004];
    SetByte 002004 SetBit(b5,0);
    TraceOperation 079749 (Set_attr (Con 139) (Con 27));
    Let b6 = M[002005];
    SetByte 002005 SetBit(b6,4);
    TraceOperation 079752 (Set_attr (Con 139) (Con 21));
    Let b7 = M[002004];
    SetByte 002004 SetBit(b7,2);
    TraceOperation 079755 (Insert_obj (Con 139) (Var (Global 0)));
    Let b8 = M[007908];
    Let b9 = M[007909];
    Let b10 = M[002006];
    if (IsZero(Widen(b10))) {} else {
      Let b11 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
      if (Equal(Widen(b11),139)) {
        Let b12 = M[002007];
        SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b12));
      } else {
        Let loop_var13 = Widen(b11);
        Label 14: {
          Let b15 = M[Offset(Offset(000751,Mul(loop_var13,9)),5)];
          if (Equal(Widen(b15),139)) {
            Let b16 = M[002007];
            SetByte Offset(Offset(000751,Mul(loop_var13,9)),5) LoByte(Widen(b16));
          } else {
            Assign loop_var13 = Widen(b15);
            Goto: Label 14
          }
        }
      }
    }
    SetByte 002006 b9;
    Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6)];
    SetByte 002007 LoByte(Widen(b17));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b8,b9),9)),6) 139;
    TraceOperation 079758 (Call (Floc 022042) [Con 61,Con 113] Sp);
    PushFrame;
    PushReturnAddress 079758;
    SetLocal 1 61;
    SetLocal 2 113;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 079766
  }
LocReturn 079758:
  PushStack call_result;
  TraceOperation 079765 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079766:
  TraceOperation 079766 (Print "The drain is too large to be covered by");
  GamePrint "The drain is too large to be covered by";
  TraceOperation 079787 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 079787;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 079787:
  PushStack call_result;
  TraceOperation 079794 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079797:
  TraceOperation 079797 (Je [Var (Global 203),Con 63] (Branch F (Dloc 079809)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 079801 (Call (Floc 022042) [Con 63,Con 115] Sp);
    PushFrame;
    PushReturnAddress 079801;
    SetLocal 1 63;
    SetLocal 2 115;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 079809
  }
LocReturn 079801:
  PushStack call_result;
  TraceOperation 079808 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079809:
  TraceOperation 079809 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 079813 (Test_attr (Con 139) (Con 8) (Branch F Dfalse));
    Let b3 = M[002003];
    if (TestBit(b3,7)) {
      TraceOperation 079817 (Print_ret "The towel completely covers the drain.");
      GamePrint "The towel completely covers the drain.\n";
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 079842:
  MakeRoutineFrame 0;
  Jump: 079843
LocOp 079843:
  TraceOperation 079843 (Je [Var (Global 203),Con 39,Con 61] (Branch F (Dloc 079878)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 079849 (Print_ret "The panel, only a few inches high, is currently closed.");
    GamePrint "The panel, only a few inches high, is currently closed.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 079878
  }
LocOp 079878:
  TraceOperation 079878 (Je [Var (Global 203),Con 103] (Branch F (Dloc 079886)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 079882 (Print_paddr (Var (Global 26)));
    Let b3 = M[007960];
    Let b4 = M[007961];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 079884 New_line;
    GamePrint "\n";
    TraceOperation 079885 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 079886
  }
LocOp 079886:
  TraceOperation 079886 (Je [Var (Global 203),Con 26] (Branch F (Dloc 079930)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),26)) {
    TraceOperation 079890 (Store (Con 229) (Con 6));
    SetByte 008334 0;
    SetByte 008335 6;
    TraceOperation 079893 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame;
    PushReturnAddress 079893;
    SetLocal 1 -14349;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 079930
  }
LocReturn 079893:
  PushStack call_result;
  TraceOperation 079901 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 079906 (Print "With ");
  GamePrint "With ";
  TraceOperation 079911 (Print_obj (Con 36));
  Let b2 = M[001082];
  Let b3 = M[001083];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 079913 (Print_ret "s? By force of will?");
  GamePrint "s? By force of will?\n";
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
LocOp 079930:
  TraceOperation 079930 (Je [Var (Global 203),Con 87] (Branch F (Dloc 079945)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),87)) {
    TraceOperation 079934 (Jz (Var (Global 204)) (Branch T (Dloc 079945)));
    Let b3 = M[008316];
    Let b4 = M[008317];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 079945
    } else {
      TraceOperation 079937 (Call (Floc 022042) [Con 144,Con 112] Sp);
      PushFrame;
      PushReturnAddress 079937;
      SetLocal 1 144;
      SetLocal 2 112;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    }
  } else {
    Jump: 079945
  }
LocReturn 079937:
  PushStack call_result;
  TraceOperation 079944 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079945:
  TraceOperation 079945 (Je [Var (Global 203),Con 55,Con 54,Con 54] (Branch F (Dloc 079965)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),55),Equal(MakeHiLo(b1,b2),54)),Equal(MakeHiLo(b1,b2),54))) {
    TraceOperation 079952 (Je [Var (Global 202),Con 112] (Branch F (Dloc 079965)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),112)) {
      TraceOperation 079956 (Call (Floc 022042) [Con 27,Con 112,Var (Global 201)] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame;
      PushReturnAddress 079956;
      SetLocal 1 27;
      SetLocal 2 112;
      SetLocal 3 MakeHiLo(b5,b6);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 079965
    }
  } else {
    Jump: 079965
  }
LocReturn 079956:
  PushStack call_result;
  TraceOperation 079964 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 079965:
  TraceOperation 079965 (Je [Var (Global 203),Con 42,Con 27] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),42),Equal(MakeHiLo(b1,b2),27))) {
    TraceOperation 079971 (Je [Var (Global 201),Con 112] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),112)) {
      TraceOperation 079975 (Je [Var (Global 202),Con 32,Con 36,Con 34] (Branch T (Dloc 079986)));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),32),Equal(MakeHiLo(b5,b6),36)),Equal(MakeHiLo(b5,b6),34))) {
        Jump: 079986
      } else {
        TraceOperation 079982 (Je [Var (Global 202),Con 33] (Branch F (Dloc 079992)));
        Let b7 = M[008312];
        Let b8 = M[008313];
        if (Equal(MakeHiLo(b7,b8),33)) {
          Jump: 079986
        } else {
          Jump: 079992
        }
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
LocOp 079986:
  TraceOperation 079986 (Call (Floc 031360) [] Sp);
  PushFrame;
  PushReturnAddress 079986;
  MakeRoutineFrame 0;
  Jump: 031361
LocReturn 079986:
  PushStack call_result;
  TraceOperation 079991 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 079992:
  TraceOperation 079992 (Call (Floc 043468) [Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 079992;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 079992:
  PushStack call_result;
  TraceOperation 079998 (Jz (Var Sp) (Branch F (Dloc 080013)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 080001 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 080003 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
    Let b4 = M[008312];
    Let b5 = M[008313];
    PushFrame;
    PushReturnAddress 080003;
    SetLocal 1 MakeHiLo(b4,b5);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  } else {
    Jump: 080013
  }
LocReturn 080003:
  PushStack call_result;
  TraceOperation 080010 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 080013:
  TraceOperation 080013 (Jz (Var (Global 116)) (Branch T (Dloc 080044)));
  Let b1 = M[008140];
  Let b2 = M[008141];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 080044
  } else {
    TraceOperation 080016 (Print "But");
    GamePrint "But";
    TraceOperation 080021 (Call (Floc 043738) [Var (Global 116),Con 1] Sp);
    Let b3 = M[008140];
    Let b4 = M[008141];
    PushFrame;
    PushReturnAddress 080021;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  }
LocReturn 080021:
  PushStack call_result;
  TraceOperation 080028 (Print " is already in front of the ");
  GamePrint " is already in front of the ";
  TraceOperation 080039 (Print_obj (Con 112));
  Let b1 = M[001766];
  Let b2 = M[001767];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 080041 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 080044:
  TraceOperation 080044 (Jz (Var (Global 86)) (Branch T (Dloc 080051)));
  Let b1 = M[008080];
  Let b2 = M[008081];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 080051
  } else {
    TraceOperation 080047 (Print_paddr (Var (Global 50)));
    Let b3 = M[008008];
    Let b4 = M[008009];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 080049 New_line;
    GamePrint "\n";
    TraceOperation 080050 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  }
LocOp 080051:
  TraceOperation 080051 (Insert_obj (Var (Global 202)) (Var (Global 0)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {} else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
    } else {
      Let loop_var8 = Widen(b6);
      Label 9: {
        Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
        if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
        } else {
          Assign loop_var8 = Widen(b10);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
  Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
  TraceOperation 080054 (Store (Con 132) (Var (Global 202)));
  Let b13 = M[008312];
  Let b14 = M[008313];
  SetByte 008140 b13;
  SetByte 008141 b14;
  TraceOperation 080057 (Set_attr (Var (Global 202)) (Con 21));
  Let b15 = M[008312];
  Let b16 = M[008313];
  Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),2)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),2) SetBit(b17,2);
  TraceOperation 080060 (Print "Okay,");
  GamePrint "Okay,";
  TraceOperation 080067 (Je [Var (Global 202),Con 141] (Branch F (Dloc 080095)));
  Let b18 = M[008312];
  Let b19 = M[008313];
  if (Equal(MakeHiLo(b18,b19),141)) {
    TraceOperation 080071 (Print " the satchel is lying on its side");
    GamePrint " the satchel is lying on its side";
    TraceOperation 080092 (Jump 080114);
    Jump: 080114
  } else {
    Jump: 080095
  }
LocOp 080095:
  TraceOperation 080095 (Set_attr (Var (Global 202)) (Con 27));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3) SetBit(b3,4);
  TraceOperation 080098 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
  Let b4 = M[008312];
  Let b5 = M[008313];
  PushFrame;
  PushReturnAddress 080098;
  SetLocal 1 MakeHiLo(b4,b5);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 080098:
  PushStack call_result;
  TraceOperation 080105 (Print " is sitting");
  GamePrint " is sitting";
  Jump: 080114
LocOp 080114:
  TraceOperation 080114 (Print " in front of the ");
  GamePrint " in front of the ";
  TraceOperation 080121 (Print_obj (Con 112));
  Let b1 = M[001766];
  Let b2 = M[001767];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 080123 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 080126:
  MakeRoutineFrame 0;
  Jump: 080127
LocOp 080127:
  TraceOperation 080127 (Je [Var (Global 203),Con 123,Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),123),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 080133 (Print "That would be foolish. Having a ");
    GamePrint "That would be foolish. Having a ";
    TraceOperation 080154 (Print_obj (Con 111));
    Let b3 = M[001757];
    Let b4 = M[001758];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 080156 (Print_ret " in your ear is terribly useful.");
    GamePrint " in your ear is terribly useful.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
--------------------------------------------------
LocRoutine 080178:
  MakeRoutineFrame 0;
  Jump: 080179
LocOp 080179:
  TraceOperation 080179 (Je [Var (Global 203),Con 61] (Branch F (Dloc 080234)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 080183 (Print "The ");
    GamePrint "The ";
    TraceOperation 080186 (Print_obj (Con 181));
    Let b3 = M[002387];
    Let b4 = M[002388];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 080188 (Print " is ");
    GamePrint " is ";
    TraceOperation 080191 (Test_attr (Con 181) (Con 23) (Branch F (Dloc 080203)));
    Let b7 = M[002382];
    if (TestBit(b7,0)) {
      TraceOperation 080195 (Print "open");
      GamePrint "open";
      TraceOperation 080200 (Jump 080206);
      Jump: 080206
    } else {
      Jump: 080203
    }
  } else {
    Jump: 080234
  }
LocOp 080203:
  TraceOperation 080203 (Print "closed");
  GamePrint "closed";
  Jump: 080206
LocOp 080206:
  TraceOperation 080206 (Print ". Attached to it are a ");
  GamePrint ". Attached to it are a ";
  TraceOperation 080221 (Print_obj (Con 110));
  Let b1 = M[001748];
  Let b2 = M[001749];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 080223 (Print_ret " and a switch.");
  GamePrint " and a switch.\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 080234:
  TraceOperation 080234 (Je [Var (Global 203),Con 103] (Branch F (Dloc 080246)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 080238 (Test_attr (Con 181) (Con 23) (Branch T (Dloc 080246)));
    Let b3 = M[002382];
    if (TestBit(b3,0)) {
      Jump: 080246
    } else {
      TraceOperation 080242 (Print_paddr (Var (Global 26)));
      Let b4 = M[007960];
      Let b5 = M[007961];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 080244 New_line;
      GamePrint "\n";
      TraceOperation 080245 Rtrue;
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  } else {
    Jump: 080246
  }
LocOp 080246:
  TraceOperation 080246 (Je [Var (Global 203),Con 45] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),45)) {
    TraceOperation 080250 (Print "The hold of the Vogon ship is virtually undamaged by the explosion of the ");
    GamePrint "The hold of the Vogon ship is virtually undamaged by the explosion of the ";
    TraceOperation 080293 (Print_obj (Con 181));
    Let b3 = M[002387];
    Let b4 = M[002388];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 080295 (Call (Floc 042734) [Con -10946] Sp);
    PushFrame;
    PushReturnAddress 080295;
    SetLocal 1 -10946;
    MakeRoutineFrame 1;
    Jump: 042737
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocReturn 080295:
  PushStack call_result;
  TraceOperation 080302 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080304:
  MakeRoutineFrame 0;
  Jump: 080305
LocOp 080305:
  TraceOperation 080305 (Test_attr (Con 181) (Con 23) (Branch F (Dloc 080329)));
  Let b1 = M[002382];
  if (TestBit(b1,0)) {
    TraceOperation 080309 (Print "Nothing happens.");
    GamePrint "Nothing happens.";
    TraceOperation 080322 New_line;
    GamePrint "\n";
    TraceOperation 080323 (Call (Floc 043634) [] Sp);
    PushFrame;
    PushReturnAddress 080323;
    MakeRoutineFrame 0;
    Jump: 043635
  } else {
    Jump: 080329
  }
LocReturn 080323:
  PushStack call_result;
  TraceOperation 080328 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 080329:
  TraceOperation 080329 (Set_attr (Con 181) (Con 23));
  Let b1 = M[002382];
  SetByte 002382 SetBit(b1,0);
  TraceOperation 080332 (Print "The ");
  GamePrint "The ";
  TraceOperation 080335 (Print_obj (Con 181));
  Let b2 = M[002387];
  Let b3 = M[002388];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 080337 (Print " opens.");
  GamePrint " opens.";
  TraceOperation 080344 New_line;
  GamePrint "\n";
  TraceOperation 080345 (Clear_attr (Con 182) (Con 21));
  Let b6 = M[002391];
  SetByte 002391 ClearBit(b6,2);
  TraceOperation 080348 (Jz (Var (Global 113)) (Branch F (Dloc 080358)));
  Let b7 = M[008134];
  Let b8 = M[008135];
  if (IsZero(MakeHiLo(b7,b8))) {
    TraceOperation 080351 (Store (Con 129) (Con 1));
    SetByte 008134 0;
    SetByte 008135 1;
    TraceOperation 080354 (Add (Var (Global 1)) (Con 25) (Global 1));
    Let b9 = M[007910];
    Let b10 = M[007911];
    SetByte 007910 HiByte(Add(MakeHiLo(b9,b10),25));
    SetByte 007911 LoByte(Add(MakeHiLo(b9,b10),25));
    Jump: 080358
  } else {
    Jump: 080358
  }
LocOp 080358:
  TraceOperation 080358 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 080358;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 080358:
  PushStack call_result;
  TraceOperation 080363 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 080364:
  MakeRoutineFrame 0;
  Jump: 080365
LocOp 080365:
  TraceOperation 080365 (Je [Var (Global 203),Con 114,Con 145,Con 88] (Branch T (Dloc 080378)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),114),Equal(MakeHiLo(b1,b2),145)),Equal(MakeHiLo(b1,b2),88))) {
    Jump: 080378
  } else {
    TraceOperation 080372 (Je [Var (Global 203),Con 154,Con 98] (Branch F Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),154),Equal(MakeHiLo(b3,b4),98))) {
      Jump: 080378
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  }
LocOp 080378:
  TraceOperation 080378 (Call (Floc 043468) [Con 111] Sp);
  PushFrame;
  PushReturnAddress 080378;
  SetLocal 1 111;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 080378:
  PushStack call_result;
  TraceOperation 080384 (Jz (Var Sp) (Branch T (Dloc 080543)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 080543
  } else {
    TraceOperation 080388 (Print "A recording plays: \"To open the case, type in the ");
    GamePrint "A recording plays: \"To open the case, type in the ";
    TraceOperation 080423 (Je [Var (Global 106),Con 1] (Branch F (Dloc 080435)));
    Let b2 = M[008120];
    Let b3 = M[008121];
    if (Equal(MakeHiLo(b2,b3),1)) {
      TraceOperation 080427 (Print "first");
      GamePrint "first";
      TraceOperation 080432 (Jump 080456);
      Jump: 080456
    } else {
      Jump: 080435
    }
  }
LocOp 080435:
  TraceOperation 080435 (Je [Var (Global 106),Con 2] (Branch F (Dloc 080447)));
  Let b1 = M[008120];
  Let b2 = M[008121];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 080439 (Print "second");
    GamePrint "second";
    TraceOperation 080444 (Jump 080456);
    Jump: 080456
  } else {
    Jump: 080447
  }
LocOp 080447:
  TraceOperation 080447 (Je [Var (Global 106),Con 3] (Branch F (Dloc 080456)));
  Let b1 = M[008120];
  Let b2 = M[008121];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 080451 (Print "third");
    GamePrint "third";
    Jump: 080456
  } else {
    Jump: 080456
  }
LocOp 080456:
  TraceOperation 080456 (Print_ret " word from the second verse of the Captain's current favourite poem. WARNING: An incorrect input will cause the case to explode.\"");
  GamePrint " word from the second verse of the Captain's current favourite poem. WARNING: An incorrect input will cause the case to explode.\"\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 080543:
  TraceOperation 080543 (Print "A recording plays: \"A");
  GamePrint "A recording plays: \"A";
  TraceOperation 080562 (Call (Floc 080570) [Con 5] Sp);
  PushFrame;
  PushReturnAddress 080562;
  SetLocal 1 5;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 080577
LocReturn 080562:
  PushStack call_result;
  TraceOperation 080568 New_line;
  GamePrint "\n";
  TraceOperation 080569 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080570:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 080577
LocOp 080577:
  TraceOperation 080577 (Store (Con 3) (Con 0));
  SetLocal 3 0;
  Jump: 080580
LocOp 080580:
  TraceOperation 080580 (Inc (Con 3));
  GetLocal 3 local3_1;
  SetLocal 3 Add(local3_1,1);
  TraceOperation 080582 (Store (Con 2) (Con 0));
  SetLocal 2 0;
  Jump: 080585
LocOp 080585:
  TraceOperation 080585 (Inc (Con 2));
  GetLocal 2 local2_1;
  SetLocal 2 Add(local2_1,1);
  TraceOperation 080587 (Call (Floc 020718) [Var (Global 112)] Sp);
  Let b2 = M[008132];
  Let b3 = M[008133];
  PushFrame;
  PushReturnAddress 080587;
  SetLocal 1 MakeHiLo(b2,b3);
  MakeRoutineFrame 1;
  Jump: 020721
LocReturn 080587:
  PushStack call_result;
  TraceOperation 080593 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 080595 (Je [Var (Local 2),Con 10] (Branch F (Dloc 080585)));
  GetLocal 2 local2_2;
  if (Equal(local2_2,10)) {
    TraceOperation 080600 (Je [Var (Local 3),Var (Local 1)] (Branch T (Dloc 080607)));
    GetLocal 3 local3_3;
    GetLocal 1 local1_4;
    if (Equal(local3_3,local1_4)) {
      Jump: 080607
    } else {
      TraceOperation 080604 (Print " o");
      GamePrint " o";
      Jump: 080607
    }
  } else {
    Jump: 080585
  }
LocOp 080607:
  TraceOperation 080607 (Je [Var (Local 3),Var (Local 1)] (Branch F (Dloc 080580)));
  GetLocal 3 local3_1;
  GetLocal 1 local1_2;
  if (Equal(local3_1,local1_2)) {
    TraceOperation 080612 (Print ".\"");
    GamePrint ".\"";
    TraceOperation 080617 Rtrue;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 080580
  }
--------------------------------------------------
LocRoutine 080618:
  MakeRoutineFrame 0;
  Jump: 080619
LocOp 080619:
  TraceOperation 080619 (Call (Floc 022320) [Con -25227,Con -1] Sp);
  PushFrame;
  PushReturnAddress 080619;
  SetLocal 1 -25227;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 080619:
  PushStack call_result;
  TraceOperation 080628 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 080633 New_line;
  GamePrint "\n";
  TraceOperation 080634 (Print "An announcement is coming over the ship's intercom. \"");
  GamePrint "An announcement is coming over the ship's intercom. \"";
  TraceOperation 080671 (Call (Floc 043468) [Con 111,Con 31] Sp);
  PushFrame;
  PushReturnAddress 080671;
  SetLocal 1 111;
  SetLocal 2 31;
  MakeRoutineFrame 2;
  Jump: 043473
LocReturn 080671:
  PushStack call_result;
  TraceOperation 080678 (Jz (Var Sp) (Branch T (Dloc 080837)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 080837
  } else {
    TraceOperation 080682 (Print_ret "This is the Captain. My instruments show that we've picked up a couple of hitchhikers. I hate freeloaders, and when my guards find you I'll have you thrown into space. On second thought, maybe I'll read you some of my poetry first. Repeating...\"");
    GamePrint "This is the Captain. My instruments show that we've picked up a couple of hitchhikers. I hate freeloaders, and when my guards find you I'll have you thrown into space. On second thought, maybe I'll read you some of my poetry first. Repeating...\"\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 080837:
  TraceOperation 080837 (Print "E");
  GamePrint "E";
  TraceOperation 080840 (Call (Floc 080570) [Con 10] Sp);
  PushFrame;
  PushReturnAddress 080840;
  SetLocal 1 10;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 080577
LocReturn 080840:
  PushStack call_result;
  TraceOperation 080846 New_line;
  GamePrint "\n";
  TraceOperation 080847 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 080848:
  MakeRoutineFrame 0;
  Jump: 080849
LocOp 080849:
  TraceOperation 080849 (Je [Var (Global 0),Con 121] (Branch F (Dloc 081007)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 080854 (Call (Floc 022340) [Con -25227] Sp);
    PushFrame;
    PushReturnAddress 080854;
    SetLocal 1 -25227;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    Jump: 081007
  }
LocReturn 080854:
  PushStack call_result;
  TraceOperation 080861 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 080866 New_line;
  GamePrint "\n";
  TraceOperation 080867 (Print "Guards burst in and grab you and Ford, who comes slowly awake. They drag you down the corridor to a large cabin, where they strap you into large, menacing chairs...");
  GamePrint "Guards burst in and grab you and Ford, who comes slowly awake. They drag you down the corridor to a large cabin, where they strap you into large, menacing chairs...";
  TraceOperation 080962 New_line;
  GamePrint "\n";
  TraceOperation 080963 New_line;
  GamePrint "\n";
  TraceOperation 080964 (Store (Con 16) (Con 108));
  SetByte 007908 0;
  SetByte 007909 108;
  TraceOperation 080967 (Insert_obj (Con 94) (Var (Global 0)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[001601];
  if (IsZero(Widen(b4))) {} else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
    if (Equal(Widen(b5),94)) {
      Let b6 = M[001602];
      SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
    } else {
      Let loop_var7 = Widen(b5);
      Label 8: {
        Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
        if (Equal(Widen(b9),94)) {
          Let b10 = M[001602];
          SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
        } else {
          Assign loop_var7 = Widen(b9);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 001601 b3;
  Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
  SetByte 001602 LoByte(Widen(b11));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 94;
  TraceOperation 080970 (Store (Con 102) (Con 0));
  SetByte 008080 0;
  SetByte 008081 0;
  TraceOperation 080973 (Call (Floc 022320) [Con -24890,Con 2] Sp);
  PushFrame;
  PushReturnAddress 080973;
  SetLocal 1 -24890;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 080973:
  PushStack call_result;
  TraceOperation 080981 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 080986 (Store (Con 152) (Con 0));
  SetByte 008180 0;
  SetByte 008181 0;
  TraceOperation 080989 (Set_attr (Con 142) (Con 27));
  Let b2 = M[002032];
  SetByte 002032 SetBit(b2,4);
  TraceOperation 080992 (Insert_obj (Con 31) (Con 107));
  Let b3 = M[001034];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),31)) {
      Let b5 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),31)) {
          Let b9 = M[001035];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 001034 107;
  Let b10 = M[001720];
  SetByte 001035 LoByte(Widen(b10));
  SetByte 001720 31;
  TraceOperation 080995 (Call (Floc 034400) [] Sp);
  PushFrame;
  PushReturnAddress 080995;
  MakeRoutineFrame 0;
  Jump: 034401
LocReturn 080995:
  PushStack call_result;
  TraceOperation 081000 (Insert_obj (Con 142) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002033];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),142)) {
      Let b5 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),142)) {
          Let b9 = M[002034];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 002033 b2;
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  SetByte 002034 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 142;
  TraceOperation 081003 (Insert_obj (Con 27) (Var (Global 0)));
  Let b11 = M[007908];
  Let b12 = M[007909];
  Let b13 = M[000998];
  if (IsZero(Widen(b13))) {} else {
    Let b14 = M[Offset(Offset(000751,Mul(Widen(b13),9)),6)];
    if (Equal(Widen(b14),27)) {
      Let b15 = M[000999];
      SetByte Offset(Offset(000751,Mul(Widen(b13),9)),6) LoByte(Widen(b15));
    } else {
      Let loop_var16 = Widen(b14);
      Label 17: {
        Let b18 = M[Offset(Offset(000751,Mul(loop_var16,9)),5)];
        if (Equal(Widen(b18),27)) {
          Let b19 = M[000999];
          SetByte Offset(Offset(000751,Mul(loop_var16,9)),5) LoByte(Widen(b19));
        } else {
          Assign loop_var16 = Widen(b18);
          Goto: Label 17
        }
      }
    }
  }
  SetByte 000998 b12;
  Let b20 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6)];
  SetByte 000999 LoByte(Widen(b20));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),6) 27;
  TraceOperation 081006 Rtrue;
  PopFrame;
  PopReturnAddress return_address_21;
  SetResult 1;
  JumpIndirect: (return) return_address_21
LocOp 081007:
  TraceOperation 081007 (Jin (Con 51) (Con 219) (Branch T Dfalse));
  Let b1 = M[001214];
  if (Equal(219,Widen(b1))) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 081011 New_line;
    GamePrint "\n";
    TraceOperation 081012 (Print_paddr (Var (Global 31)));
    Let b3 = M[007970];
    Let b4 = M[007971];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 081014 (Print "They");
    GamePrint "They";
    TraceOperation 081019 (Call (Floc 092666) [] Sp);
    PushFrame;
    PushReturnAddress 081019;
    MakeRoutineFrame 0;
    Jump: 092667
  }
LocReturn 081019:
  PushStack call_result;
  TraceOperation 081024 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 081026:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 081029
LocOp 081029:
  TraceOperation 081029 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 081033 (Print "This is the cabin of the ");
    GamePrint "This is the cabin of the ";
    TraceOperation 081044 (Print_obj (Con 106));
    Let b2 = M[001712];
    Let b3 = M[001713];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 081046 (Print ". You and Ford are strapped into ");
    GamePrint ". You and Ford are strapped into ";
    TraceOperation 081061 (Print_obj (Con 107));
    Let b6 = M[001721];
    Let b7 = M[001722];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
    GamePrint ite_res9;
    TraceOperation 081063 (Print_ret "s.");
    GamePrint "s.\n";
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 1;
    JumpIndirect: (return) return_address_10
  } else {
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 0;
    JumpIndirect: (return) return_address_11
  }
--------------------------------------------------
LocRoutine 081066:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 081069
LocOp 081069:
  TraceOperation 081069 (Jz (Var (Local 1)) (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    TraceOperation 081072 (Je [Var (Global 203),Con 81,Con 169,Con 48] (Branch T (Dloc 081083)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b2,b3),81),Equal(MakeHiLo(b2,b3),169)),Equal(MakeHiLo(b2,b3),48))) {
      Jump: 081083
    } else {
      TraceOperation 081079 (Je [Var (Global 203),Con 168] (Branch F (Dloc 081118)));
      Let b4 = M[008314];
      Let b5 = M[008315];
      if (Equal(MakeHiLo(b4,b5),168)) {
        Jump: 081083
      } else {
        Jump: 081118
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocOp 081083:
  TraceOperation 081083 (Store (Con 229) (Con 7));
  SetByte 008334 0;
  SetByte 008335 7;
  TraceOperation 081086 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame;
  PushReturnAddress 081086;
  SetLocal 1 -14349;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 081086:
  PushStack call_result;
  TraceOperation 081094 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 081099 (Print_ret "You're strapped in, remember?");
  GamePrint "You're strapped in, remember?\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 081118:
  TraceOperation 081118 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 081124 (Je [Var (Global 201),Con 107] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),107)) {
      TraceOperation 081128 (Call (Floc 057650) [] Sp);
      PushFrame;
      PushReturnAddress 081128;
      MakeRoutineFrame 0;
      Jump: 057651
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 081128:
  PushStack call_result;
  TraceOperation 081133 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 081134:
  MakeRoutineFrame 0;
  Jump: 081135
LocOp 081135:
  TraceOperation 081135 (Je [Var (Global 203),Con 153,Con 75,Con 15] (Branch T (Dloc 081154)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),153),Equal(MakeHiLo(b1,b2),75)),Equal(MakeHiLo(b1,b2),15))) {
    Jump: 081154
  } else {
    TraceOperation 081142 (Je [Var (Global 203),Con 23,Con 22] (Branch F (Dloc 081275)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),23),Equal(MakeHiLo(b3,b4),22))) {
      TraceOperation 081149 (Je [Con 106,Var (Global 201)] (Branch F (Dloc 081275)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(106,MakeHiLo(b5,b6))) {
        Jump: 081154
      } else {
        Jump: 081275
      }
    } else {
      Jump: 081275
    }
  }
LocOp 081154:
  TraceOperation 081154 (Print "One of the guards lightly bashes your skull with the butt of his weapon");
  GamePrint "One of the guards lightly bashes your skull with the butt of his weapon";
  TraceOperation 081195 (Call (Floc 043468) [Con 111] Sp);
  PushFrame;
  PushReturnAddress 081195;
  SetLocal 1 111;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 081195:
  PushStack call_result;
  TraceOperation 081201 (Jz (Var Sp) (Branch T (Dloc 081251)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 081251
  } else {
    TraceOperation 081204 (Print ". \"This is a poetry appreciation session, prisoner. No talking!\"");
    GamePrint ". \"This is a poetry appreciation session, prisoner. No talking!\"";
    TraceOperation 081247 New_line;
    GamePrint "\n";
    TraceOperation 081248 (Jump 081269);
    Jump: 081269
  }
LocOp 081251:
  TraceOperation 081251 (Print " and says, \"A");
  GamePrint " and says, \"A";
  TraceOperation 081262 (Call (Floc 080570) [Con 2] Sp);
  PushFrame;
  PushReturnAddress 081262;
  SetLocal 1 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 080577
LocReturn 081262:
  PushStack call_result;
  TraceOperation 081268 New_line;
  GamePrint "\n";
  Jump: 081269
LocOp 081269:
  TraceOperation 081269 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 081269;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 081269:
  PushStack call_result;
  TraceOperation 081274 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 081275:
  TraceOperation 081275 (Jin (Con 105) (Var (Global 0)) (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001700];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 081279 (Je [Var (Global 203),Con 26] (Branch F Dfalse));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),26)) {
      TraceOperation 081283 (Call (Floc 022042) [Con 74,Con 105] Sp);
      PushFrame;
      PushReturnAddress 081283;
      SetLocal 1 74;
      SetLocal 2 105;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocReturn 081283:
  PushStack call_result;
  TraceOperation 081290 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 081292:
  MakeRoutineFrame 0;
  Jump: 081293
LocOp 081293:
  TraceOperation 081293 (Call (Floc 022320) [Con -24890,Con -1] Sp);
  PushFrame;
  PushReturnAddress 081293;
  SetLocal 1 -24890;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 081293:
  PushStack call_result;
  TraceOperation 081302 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 081307 (Inc (Con 127));
  Let b2 = M[008130];
  Let b3 = M[008131];
  SetByte 008130 HiByte(Add(MakeHiLo(b2,b3),1));
  SetByte 008131 LoByte(Add(MakeHiLo(b2,b3),1));
  TraceOperation 081309 New_line;
  GamePrint "\n";
  TraceOperation 081310 (Je [Var (Global 111),Con 1] (Branch F (Dloc 081398)));
  Let b4 = M[008130];
  Let b5 = M[008131];
  if (Equal(MakeHiLo(b4,b5),1)) {
    TraceOperation 081315 (Print "\"If he's going to read us his poetry,\" mutters Ford, sweating profusely, \"just pray he softens us up with some cudgels first...\"");
    GamePrint "\"If he's going to read us his poetry,\" mutters Ford, sweating profusely, \"just pray he softens us up with some cudgels first...\"";
    TraceOperation 081396 New_line;
    GamePrint "\n";
    TraceOperation 081397 New_line;
    GamePrint "\n";
    Jump: 081398
  } else {
    Jump: 081398
  }
LocOp 081398:
  TraceOperation 081398 (Call (Floc 043468) [Con 111,Con 31] Sp);
  PushFrame;
  PushReturnAddress 081398;
  SetLocal 1 111;
  SetLocal 2 31;
  MakeRoutineFrame 2;
  Jump: 043473
LocReturn 081398:
  PushStack call_result;
  TraceOperation 081405 (Jz (Var Sp) (Branch F (Dloc 081440)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 081408 (Print "The ");
    GamePrint "The ";
    TraceOperation 081411 (Print_obj (Con 106));
    Let b2 = M[001712];
    Let b3 = M[001713];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 081413 (Print " says, \"O");
    GamePrint " says, \"O";
    TraceOperation 081422 (Call (Floc 080570) [Con 2] Sp);
    PushFrame;
    PushReturnAddress 081422;
    SetLocal 1 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 080577
  } else {
    Jump: 081440
  }
LocReturn 081422:
  PushStack call_result;
  TraceOperation 081428 (Je [Var (Global 111),Con 6] (Branch F (Dloc 081438)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 081432 (Call (Floc 082066) [] Sp);
    PushFrame;
    PushReturnAddress 081432;
    MakeRoutineFrame 0;
    Jump: 082067
  } else {
    Jump: 081438
  }
LocReturn 081432:
  PushStack call_result;
  TraceOperation 081437 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 081438:
  TraceOperation 081438 New_line;
  GamePrint "\n";
  TraceOperation 081439 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 081440:
  TraceOperation 081440 (Je [Var (Global 111),Con 1] (Branch F (Dloc 081507)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 081445 (Print "\"Hello, hitchhikers!\" begins the ");
    GamePrint "\"Hello, hitchhikers!\" begins the ";
    TraceOperation 081470 (Print_obj (Con 106));
    Let b3 = M[001712];
    Let b4 = M[001713];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 081472 (Print_ret ". \"I've decided to read you a verse of my poetry!\"");
    GamePrint ". \"I've decided to read you a verse of my poetry!\"\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 081507
  }
LocOp 081507:
  TraceOperation 081507 (Je [Var (Global 111),Con 2] (Branch F (Dloc 081550)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 081511 (Print_ret "\"Oh freddled gruntbuggly, thy nacturations are to me!\"");
    GamePrint "\"Oh freddled gruntbuggly, thy nacturations are to me!\"\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 081550
  }
LocOp 081550:
  TraceOperation 081550 (Je [Var (Global 111),Con 3] (Branch F (Dloc 081589)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 081554 (Print_ret "\"As plurdled gabbleblotchits on a lurgid bee.\"");
    GamePrint "\"As plurdled gabbleblotchits on a lurgid bee.\"\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 081589
  }
LocOp 081589:
  TraceOperation 081589 (Je [Var (Global 111),Con 4] (Branch F (Dloc 081630)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 081593 (Print_ret "\"Groop I implore thee, my foonting turlingdromes.\"");
    GamePrint "\"Groop I implore thee, my foonting turlingdromes.\"\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 081630
  }
LocOp 081630:
  TraceOperation 081630 (Je [Var (Global 111),Con 5] (Branch F (Dloc 081722)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 081635 (Print_ret "\"And hooptiously drangle me with crinkly bindlewurdles, or I will rend thee in the gobberwarts with my blurglecruncheon, see if I don't!\"");
    GamePrint "\"And hooptiously drangle me with crinkly bindlewurdles, or I will rend thee in the gobberwarts with my blurglecruncheon, see if I don't!\"\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 081722
  }
LocOp 081722:
  TraceOperation 081722 (Je [Var (Global 111),Con 6] (Branch F (Dloc 081851)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 081727 (Jz (Var (Global 105)) (Branch T (Dloc 081794)));
    Let b3 = M[008118];
    Let b4 = M[008119];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 081794
    } else {
      TraceOperation 081731 (Print_ret "\"You looked like you enjoyed my poem. I think...yes, I think I'll read the NEXT verse, also!\"");
      GamePrint "\"You looked like you enjoyed my poem. I think...yes, I think I'll read the NEXT verse, also!\"\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 081851
  }
LocOp 081794:
  TraceOperation 081794 (Print "\"You didn't seem to enjoy my poem at all! Guards, toss them out the airlock!\"");
  GamePrint "\"You didn't seem to enjoy my poem at all! Guards, toss them out the airlock!\"";
  TraceOperation 081845 (Call (Floc 082066) [] Sp);
  PushFrame;
  PushReturnAddress 081845;
  MakeRoutineFrame 0;
  Jump: 082067
LocReturn 081845:
  PushStack call_result;
  TraceOperation 081850 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 081851:
  TraceOperation 081851 (Je [Var (Global 111),Con 7] (Branch F (Dloc 081879)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 081855 (Je [Var (Global 107),Con 1,Con 2] (Branch F (Dloc 081865)));
    Let b3 = M[008122];
    Let b4 = M[008123];
    if (LogOr(Equal(MakeHiLo(b3,b4),1),Equal(MakeHiLo(b3,b4),2))) {
      TraceOperation 081861 (Print_paddr (Var (Global 110)));
      Let b5 = M[008128];
      Let b6 = M[008129];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 081863 New_line;
      GamePrint "\n";
      TraceOperation 081864 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 081865
    }
  } else {
    Jump: 081879
  }
LocOp 081865:
  TraceOperation 081865 (Je [Var (Global 107),Con 3,Con 4] (Branch F (Dloc 081875)));
  Let b1 = M[008122];
  Let b2 = M[008123];
  if (LogOr(Equal(MakeHiLo(b1,b2),3),Equal(MakeHiLo(b1,b2),4))) {
    TraceOperation 081871 (Print_paddr (Var (Global 109)));
    Let b3 = M[008126];
    Let b4 = M[008127];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 081873 New_line;
    GamePrint "\n";
    TraceOperation 081874 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 081875
  }
LocOp 081875:
  TraceOperation 081875 (Print_paddr (Var (Global 108)));
  Let b1 = M[008124];
  Let b2 = M[008125];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 081877 New_line;
  GamePrint "\n";
  TraceOperation 081878 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 081879:
  TraceOperation 081879 (Je [Var (Global 111),Con 8] (Branch F (Dloc 081907)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),8)) {
    TraceOperation 081883 (Je [Var (Global 107),Con 3,Con 5] (Branch F (Dloc 081893)));
    Let b3 = M[008122];
    Let b4 = M[008123];
    if (LogOr(Equal(MakeHiLo(b3,b4),3),Equal(MakeHiLo(b3,b4),5))) {
      TraceOperation 081889 (Print_paddr (Var (Global 110)));
      Let b5 = M[008128];
      Let b6 = M[008129];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 081891 New_line;
      GamePrint "\n";
      TraceOperation 081892 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 081893
    }
  } else {
    Jump: 081907
  }
LocOp 081893:
  TraceOperation 081893 (Je [Var (Global 107),Con 1,Con 6] (Branch F (Dloc 081903)));
  Let b1 = M[008122];
  Let b2 = M[008123];
  if (LogOr(Equal(MakeHiLo(b1,b2),1),Equal(MakeHiLo(b1,b2),6))) {
    TraceOperation 081899 (Print_paddr (Var (Global 109)));
    Let b3 = M[008126];
    Let b4 = M[008127];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 081901 New_line;
    GamePrint "\n";
    TraceOperation 081902 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 081903
  }
LocOp 081903:
  TraceOperation 081903 (Print_paddr (Var (Global 108)));
  Let b1 = M[008124];
  Let b2 = M[008125];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 081905 New_line;
  GamePrint "\n";
  TraceOperation 081906 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 081907:
  TraceOperation 081907 (Je [Var (Global 111),Con 9] (Branch F (Dloc 081935)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 081911 (Je [Var (Global 107),Con 4,Con 6] (Branch F (Dloc 081921)));
    Let b3 = M[008122];
    Let b4 = M[008123];
    if (LogOr(Equal(MakeHiLo(b3,b4),4),Equal(MakeHiLo(b3,b4),6))) {
      TraceOperation 081917 (Print_paddr (Var (Global 110)));
      Let b5 = M[008128];
      Let b6 = M[008129];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 081919 New_line;
      GamePrint "\n";
      TraceOperation 081920 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 081921
    }
  } else {
    Jump: 081935
  }
LocOp 081921:
  TraceOperation 081921 (Je [Var (Global 107),Con 2,Con 5] (Branch F (Dloc 081931)));
  Let b1 = M[008122];
  Let b2 = M[008123];
  if (LogOr(Equal(MakeHiLo(b1,b2),2),Equal(MakeHiLo(b1,b2),5))) {
    TraceOperation 081927 (Print_paddr (Var (Global 109)));
    Let b3 = M[008126];
    Let b4 = M[008127];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 081929 New_line;
    GamePrint "\n";
    TraceOperation 081930 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 081931
  }
LocOp 081931:
  TraceOperation 081931 (Print_paddr (Var (Global 108)));
  Let b1 = M[008124];
  Let b2 = M[008125];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 081933 New_line;
  GamePrint "\n";
  TraceOperation 081934 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 081935:
  TraceOperation 081935 (Je [Var (Global 111),Con 10] (Branch F (Dloc 081986)));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),10)) {
    TraceOperation 081939 (Print_ret "\"Gerond withoutitude form into formless bloit, why not then? Moose.\"");
    GamePrint "\"Gerond withoutitude form into formless bloit, why not then? Moose.\"\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 081986
  }
LocOp 081986:
  TraceOperation 081986 (Je [Var (Global 111),Con 11] (Branch F Dfalse));
  Let b1 = M[008130];
  Let b2 = M[008131];
  if (Equal(MakeHiLo(b1,b2),11)) {
    TraceOperation 081990 (Print "\"Since you have somehow managed to survive two verses of my poetry, I have no choice but to space you. Guards!\"");
    GamePrint "\"Since you have somehow managed to survive two verses of my poetry, I have no choice but to space you. Guards!\"";
    TraceOperation 082059 (Call (Floc 082066) [] Sp);
    PushFrame;
    PushReturnAddress 082059;
    MakeRoutineFrame 0;
    Jump: 082067
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 082059:
  PushStack call_result;
  TraceOperation 082064 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 082066:
  MakeRoutineFrame 0;
  Jump: 082067
LocOp 082067:
  TraceOperation 082067 (Call (Floc 022340) [Con -24890] Sp);
  PushFrame;
  PushReturnAddress 082067;
  SetLocal 1 -24890;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 082067:
  PushStack call_result;
  TraceOperation 082074 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 082079 (Print " A guard grabs you and Ford, and drags you toward the hold. Ford whispers, \"Don't worry, I'll think of something!\"");
  GamePrint " A guard grabs you and Ford, and drags you toward the hold. Ford whispers, \"Don't worry, I'll think of something!\"";
  TraceOperation 082140 New_line;
  GamePrint "\n";
  TraceOperation 082141 New_line;
  GamePrint "\n";
  TraceOperation 082142 (Clear_attr (Con 121) (Con 5));
  Let b2 = M[001840];
  SetByte 001840 ClearBit(b2,2);
  TraceOperation 082145 (Call (Floc 042574) [Con 121] Sp);
  PushFrame;
  PushReturnAddress 082145;
  SetLocal 1 121;
  MakeRoutineFrame 2;
  SetLocal 2 1;
  Jump: 042579
LocReturn 082145:
  PushStack call_result;
  TraceOperation 082151 (Clear_attr (Con 142) (Con 27));
  Let b1 = M[002032];
  SetByte 002032 ClearBit(b1,4);
  TraceOperation 082154 (Insert_obj (Con 27) (Var (Global 0)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  Let b4 = M[000998];
  if (IsZero(Widen(b4))) {} else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
    if (Equal(Widen(b5),27)) {
      Let b6 = M[000999];
      SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
    } else {
      Let loop_var7 = Widen(b5);
      Label 8: {
        Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
        if (Equal(Widen(b9),27)) {
          Let b10 = M[000999];
          SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
        } else {
          Assign loop_var7 = Widen(b9);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 000998 b3;
  Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6)];
  SetByte 000999 LoByte(Widen(b11));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),6) 27;
  TraceOperation 082157 (Insert_obj (Con 142) (Var (Global 0)));
  Let b12 = M[007908];
  Let b13 = M[007909];
  Let b14 = M[002033];
  if (IsZero(Widen(b14))) {} else {
    Let b15 = M[Offset(Offset(000751,Mul(Widen(b14),9)),6)];
    if (Equal(Widen(b15),142)) {
      Let b16 = M[002034];
      SetByte Offset(Offset(000751,Mul(Widen(b14),9)),6) LoByte(Widen(b16));
    } else {
      Let loop_var17 = Widen(b15);
      Label 18: {
        Let b19 = M[Offset(Offset(000751,Mul(loop_var17,9)),5)];
        if (Equal(Widen(b19),142)) {
          Let b20 = M[002034];
          SetByte Offset(Offset(000751,Mul(loop_var17,9)),5) LoByte(Widen(b20));
        } else {
          Assign loop_var17 = Widen(b19);
          Goto: Label 18
        }
      }
    }
  }
  SetByte 002033 b13;
  Let b21 = M[Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),6)];
  SetByte 002034 LoByte(Widen(b21));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b12,b13),9)),6) 142;
  TraceOperation 082160 (Call (Floc 022320) [Con -32630,Con 1] Sp);
  PushFrame;
  PushReturnAddress 082160;
  SetLocal 1 -32630;
  SetLocal 2 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 082160:
  PushStack call_result;
  TraceOperation 082168 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 082173 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 082174:
  MakeRoutineFrame 0;
  Jump: 082175
LocOp 082175:
  TraceOperation 082175 (Je [Var (Global 203),Con 74,Con 57] (Branch F (Dloc 082205)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),74),Equal(MakeHiLo(b1,b2),57))) {
    TraceOperation 082181 (Jl (Var (Global 111)) (Con 2) (Branch F (Dloc 082205)));
    Let b3 = M[008130];
    Let b4 = M[008131];
    if (LessThan(MakeHiLo(b3,b4),2)) {
      TraceOperation 082185 (Print "The ");
      GamePrint "The ";
      TraceOperation 082188 (Print_obj (Con 106));
      Let b5 = M[001712];
      Let b6 = M[001713];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 082190 (Print_ret " hasn't begun yet!");
      GamePrint " hasn't begun yet!\n";
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    } else {
      Jump: 082205
    }
  } else {
    Jump: 082205
  }
LocOp 082205:
  TraceOperation 082205 (Je [Var (Global 203),Con 57] (Branch F (Dloc 082429)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),57)) {
    TraceOperation 082210 (Call (Floc 043468) [Con 111] Sp);
    PushFrame;
    PushReturnAddress 082210;
    SetLocal 1 111;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    Jump: 082429
  }
LocReturn 082210:
  PushStack call_result;
  TraceOperation 082216 (Jz (Var Sp) (Branch F (Dloc 082246)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 082219 (Print_ret "You can't even understand it, let alone enjoy it!");
    GamePrint "You can't even understand it, let alone enjoy it!\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 082246
  }
LocOp 082246:
  TraceOperation 082246 (Jz (Var (Global 105)) (Branch T (Dloc 082288)));
  Let b1 = M[008118];
  Let b2 = M[008119];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 082288
  } else {
    TraceOperation 082249 (Store (Con 229) (Con 8));
    SetByte 008334 0;
    SetByte 008335 8;
    TraceOperation 082252 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame;
    PushReturnAddress 082252;
    SetLocal 1 -14349;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  }
LocReturn 082252:
  PushStack call_result;
  TraceOperation 082260 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 082265 (Print_ret "Hey, let's not overdo it, okay?");
  GamePrint "Hey, let's not overdo it, okay?\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 082288:
  TraceOperation 082288 (Store (Con 121) (Con 1));
  SetByte 008118 0;
  SetByte 008119 1;
  TraceOperation 082291 (Add (Var (Global 1)) (Con 15) (Global 1));
  Let b1 = M[007910];
  Let b2 = M[007911];
  SetByte 007910 HiByte(Add(MakeHiLo(b1,b2),15));
  SetByte 007911 LoByte(Add(MakeHiLo(b1,b2),15));
  TraceOperation 082295 (Print "You realise that, although the ");
  GamePrint "You realise that, although the ";
  TraceOperation 082314 (Print_obj (Con 105));
  Let b3 = M[001703];
  Let b4 = M[001704];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 082316 (Print_ret " is indeed astoundingly bad, worse things happen at sea, and in fact, at school. With an effort for which Hercules himself would have patted you on the back, you grit your teeth and enjoy the stuff.");
  GamePrint " is indeed astoundingly bad, worse things happen at sea, and in fact, at school. With an effort for which Hercules himself would have patted you on the back, you grit your teeth and enjoy the stuff.\n";
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 082429:
  TraceOperation 082429 (Je [Var (Global 203),Con 74] (Branch F (Dloc 082462)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 082433 (Print_ret "You have no choice. Why not relax and enjoy it?");
    GamePrint "You have no choice. Why not relax and enjoy it?\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 082462
  }
LocOp 082462:
  TraceOperation 082462 (Jin (Con 105) (Var (Global 0)) (Branch F (Dloc 082478)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001700];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 082466 (Je [Var (Global 203),Con 26] (Branch F (Dloc 082478)));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),26)) {
      TraceOperation 082470 (Call (Floc 022042) [Con 74,Con 105] Sp);
      PushFrame;
      PushReturnAddress 082470;
      SetLocal 1 74;
      SetLocal 2 105;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 082478
    }
  } else {
    Jump: 082478
  }
LocReturn 082470:
  PushStack call_result;
  TraceOperation 082477 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 082478:
  TraceOperation 082478 (Je [Var (Global 203),Con 61,Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),61),Equal(MakeHiLo(b1,b2),120))) {
    TraceOperation 082484 (Print_ret "You can't see it from here.");
    GamePrint "You can't see it from here.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 082496:
  MakeRoutineFrame 0;
  Jump: 082497
LocOp 082497:
  TraceOperation 082497 (Je [Var (Global 203),Con 38,Con 162,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),162)),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 082504 (Call (Floc 043620) [Con 19] Sp);
    PushFrame;
    PushReturnAddress 082504;
    SetLocal 1 19;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 082504:
  PushStack call_result;
  TraceOperation 082510 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 082512:
  MakeRoutineFrame 0;
  Jump: 082513
LocOp 082513:
  TraceOperation 082513 (Je [Var (Global 203),Con 38,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 082519 (Print_paddr (Var (Global 26)));
    Let b3 = M[007960];
    Let b4 = M[007961];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 082521 New_line;
    GamePrint "\n";
    TraceOperation 082522 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 082524:
  MakeRoutineFrame 0;
  Jump: 082525
LocOp 082525:
  TraceOperation 082525 (Je [Var (Global 203),Con 21,Con 38] (Branch F (Dloc 082550)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),21),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 082531 (Je [Var (Global 0),Con 101] (Branch F (Dloc 082539)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),101)) {
      TraceOperation 082535 (Print_paddr (Var (Global 57)));
      Let b5 = M[008022];
      Let b6 = M[008023];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 082537 New_line;
      GamePrint "\n";
      TraceOperation 082538 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 082539
    }
  } else {
    Jump: 082550
  }
LocOp 082539:
  TraceOperation 082539 (Je [Var (Global 0),Con 121] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),121)) {
    TraceOperation 082543 (Call (Floc 043620) [Con 19] Sp);
    PushFrame;
    PushReturnAddress 082543;
    SetLocal 1 19;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 082543:
  PushStack call_result;
  TraceOperation 082549 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 082550:
  TraceOperation 082550 (Je [Var (Global 203),Con 48,Con 59,Con 86] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),59)),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 082557 (Je [Var (Global 0),Con 101] (Branch F (Dloc 082568)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),101)) {
      TraceOperation 082561 (Call (Floc 043620) [Con 27] Sp);
      PushFrame;
      PushReturnAddress 082561;
      SetLocal 1 27;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 082568
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 082561:
  PushStack call_result;
  TraceOperation 082567 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 082568:
  TraceOperation 082568 (Print_paddr (Var (Global 57)));
  Let b1 = M[008022];
  Let b2 = M[008023];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 082570 New_line;
  GamePrint "\n";
  TraceOperation 082571 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 082572:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 082575
LocOp 082575:
  TraceOperation 082575 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 082579 (Inc (Con 120));
    Let b2 = M[008116];
    Let b3 = M[008117];
    SetByte 008116 HiByte(Add(MakeHiLo(b2,b3),1));
    SetByte 008117 LoByte(Add(MakeHiLo(b2,b3),1));
    TraceOperation 082581 New_line;
    GamePrint "\n";
    TraceOperation 082582 (Je [Var (Global 104),Con 1] (Branch F (Dloc 082669)));
    Let b4 = M[008116];
    Let b5 = M[008117];
    if (Equal(MakeHiLo(b4,b5),1)) {
      TraceOperation 082587 (Print "Ford points at the ");
      GamePrint "Ford points at the ";
      TraceOperation 082598 (Print_obj (Con 103));
      Let b6 = M[001685];
      Let b7 = M[001686];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
      GamePrint ite_res9;
      TraceOperation 082600 (Print_ret ". \"In about two minutes, it will open and we'll be ejected into the vacuum of space. But don't panic, I'll think of something.\"");
      GamePrint ". \"In about two minutes, it will open and we'll be ejected into the vacuum of space. But don't panic, I'll think of something.\"\n";
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 1;
      JumpIndirect: (return) return_address_10
    } else {
      Jump: 082669
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 0;
    JumpIndirect: (return) return_address_11
  }
LocOp 082669:
  TraceOperation 082669 (Je [Var (Global 104),Con 2] (Branch F (Dloc 082690)));
  Let b1 = M[008116];
  Let b2 = M[008117];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 082673 (Print_ret "Ford is mumbling to himself.");
    GamePrint "Ford is mumbling to himself.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 082690
  }
LocOp 082690:
  TraceOperation 082690 (Je [Var (Global 104),Con 3] (Branch F (Dloc 082735)));
  Let b1 = M[008116];
  Let b2 = M[008117];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 082694 (Print_ret "Ford produces a pencil and begins scribbling equations on the wall.");
    GamePrint "Ford produces a pencil and begins scribbling equations on the wall.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 082735
  }
LocOp 082735:
  TraceOperation 082735 (Je [Var (Global 104),Con 4] (Branch F Dfalse));
  Let b1 = M[008116];
  Let b2 = M[008117];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 082739 (Print "Ford's eyes light up. \"Do you still have the Electronic Sub-Etha Auto Hitching Thu...\" At that moment, the airlock door opens, and you and Ford are blown out into space.\n\n");
    GamePrint "Ford's eyes light up. \"Do you still have the Electronic Sub-Etha Auto Hitching Thu...\" At that moment, the airlock door opens, and you and Ford are blown out into space.\n\n";
    TraceOperation 082846 (Call (Floc 043468) [Con 1] Sp);
    PushFrame;
    PushReturnAddress 082846;
    SetLocal 1 1;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 082846:
  PushStack call_result;
  TraceOperation 082852 (Jz (Var Sp) (Branch T (Dloc 082949)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 082949
  } else {
    TraceOperation 082856 (Print "Your elbow must have struck some key on ");
    GamePrint "Your elbow must have struck some key on ";
    TraceOperation 082881 (Print_obj (Con 1));
    Let b2 = M[000767];
    Let b3 = M[000768];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 082883 (Print " because it begins droning out an entry, coincidentally enough the entry on SPACE. \"");
    GamePrint " because it begins droning out an entry, coincidentally enough the entry on SPACE. \"";
    TraceOperation 082936 (Print_paddr (Var (Global 63)));
    Let b6 = M[008034];
    Let b7 = M[008035];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
    TraceOperation 082938 (Print "\" (Footnote 9)");
    GamePrint "\" (Footnote 9)";
    TraceOperation 082947 New_line;
    GamePrint "\n";
    TraceOperation 082948 New_line;
    GamePrint "\n";
    Jump: 082949
  }
LocOp 082949:
  TraceOperation 082949 (Print "Precisely twenty-nine seconds later, you and Ford are scooped up by a passing ship. Gasping for air, you pass out...");
  GamePrint "Precisely twenty-nine seconds later, you and Ford are scooped up by a passing ship. Gasping for air, you pass out...";
  TraceOperation 083024 New_line;
  GamePrint "\n";
  TraceOperation 083025 New_line;
  GamePrint "\n";
  TraceOperation 083026 (Store (Con 98) (Con 100));
  SetByte 008072 0;
  SetByte 008073 100;
  TraceOperation 083029 (Call (Floc 042574) [Con 25] Sp);
  PushFrame;
  PushReturnAddress 083029;
  SetLocal 1 25;
  MakeRoutineFrame 2;
  SetLocal 2 1;
  Jump: 042579
LocReturn 083029:
  PushStack call_result;
  TraceOperation 083035 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 083036:
  MakeRoutineFrame 0;
  Jump: 083037
LocOp 083037:
  TraceOperation 083037 (Je [Var (Global 203),Con 48,Con 59,Con 86] (Branch T (Dloc 083051)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),59)),Equal(MakeHiLo(b1,b2),86))) {
    Jump: 083051
  } else {
    TraceOperation 083044 (Je [Var (Global 203),Con 21,Con 28,Con 38] (Branch F Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),21),Equal(MakeHiLo(b3,b4),28)),Equal(MakeHiLo(b3,b4),38))) {
      Jump: 083051
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  }
LocOp 083051:
  TraceOperation 083051 (Call (Floc 040326) [] Sp);
  PushFrame;
  PushReturnAddress 083051;
  MakeRoutineFrame 0;
  Jump: 040327
LocReturn 083051:
  PushStack call_result;
  TraceOperation 083056 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 083058:
  MakeRoutineFrame 0;
  Jump: 083059
LocOp 083059:
  TraceOperation 083059 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 083065)));
  Let b1 = M[001606];
  if (TestBit(b1,4)) {
    TraceOperation 083063 (Ret (Con 90));
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 90;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 083065
  }
LocOp 083065:
  TraceOperation 083065 (Print "The Beast blocks the exit.");
  GamePrint "The Beast blocks the exit.";
  TraceOperation 083080 New_line;
  GamePrint "\n";
  TraceOperation 083081 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 083082:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 083085
LocOp 083085:
  TraceOperation 083085 (Je [Var (Local 1),Con 3] (Branch F (Dloc 083123)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 083089 (Print "This is the lair of the ");
    GamePrint "This is the lair of the ";
    TraceOperation 083100 (Print_obj (Con 95));
    Let b2 = M[001613];
    Let b3 = M[001614];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 083102 (Print_ret ". There are exits east and southwest.");
    GamePrint ". There are exits east and southwest.\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 083123
  }
LocOp 083123:
  TraceOperation 083123 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 083127 (Test_attr (Con 99) (Con 27) (Branch T Dfalse));
    Let b2 = M[001645];
    if (TestBit(b2,4)) {
      PopFrame;
      PopReturnAddress return_address_3;
      SetResult 0;
      JumpIndirect: (return) return_address_3
    } else {
      TraceOperation 083131 (Store (Con 91) (Con 1));
      SetByte 008058 0;
      SetByte 008059 1;
      TraceOperation 083134 (Set_attr (Con 99) (Con 27));
      Let b4 = M[001645];
      SetByte 001645 SetBit(b4,4);
      TraceOperation 083137 (Clear_attr (Con 93) (Con 6));
      Let b5 = M[001588];
      SetByte 001588 ClearBit(b5,1);
      TraceOperation 083140 (Clear_attr (Con 91) (Con 6));
      Let b6 = M[001570];
      SetByte 001570 ClearBit(b6,1);
      TraceOperation 083143 (Call (Floc 022320) [Con -22735,Con 2] Sp);
      PushFrame;
      PushReturnAddress 083143;
      SetLocal 1 -22735;
      SetLocal 2 2;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 022327
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocReturn 083143:
  PushStack call_result;
  TraceOperation 083151 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 083156 New_line;
  GamePrint "\n";
  TraceOperation 083157 (Print "The Beast whips its evil-smelling tail away from your nose and bellows a brain-shattering roar. By suddenly popping out of nowhere you have disturbed its train of thought. However, ");
  GamePrint "The Beast whips its evil-smelling tail away from your nose and bellows a brain-shattering roar. By suddenly popping out of nowhere you have disturbed its train of thought. However, ";
  TraceOperation 083264 (Test_attr (Con 99) (Con 4) (Branch F (Dloc 083334)));
  Let b2 = M[001642];
  if (TestBit(b2,3)) {
    TraceOperation 083269 (Print "the Beast is beginning to get used to this sort of thing, shrugs it off, and sinks ten or so of");
    GamePrint "the Beast is beginning to get used to this sort of thing, shrugs it off, and sinks ten or so of";
    TraceOperation 083324 (Print_paddr (Var (Global 45)));
    Let b3 = M[007998];
    Let b4 = M[007999];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 083326 (Call (Floc 042734) [Con -10741] Sp);
    PushFrame;
    PushReturnAddress 083326;
    SetLocal 1 -10741;
    MakeRoutineFrame 1;
    Jump: 042737
  } else {
    Jump: 083334
  }
LocReturn 083326:
  PushStack call_result;
  TraceOperation 083333 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 083334:
  TraceOperation 083334 (Print "since its train of thought was the usual one, and in fact the only one it knows, which goes like this \"hungry ... hungry ... hungry ... hungry ... bad-tempered ... hungry ...\", it soon starts to chug along again.");
  GamePrint "since its train of thought was the usual one, and in fact the only one it knows, which goes like this \"hungry ... hungry ... hungry ... hungry ... bad-tempered ... hungry ...\", it soon starts to chug along again.";
  TraceOperation 083473 New_line;
  GamePrint "\n";
  TraceOperation 083474 New_line;
  GamePrint "\n";
  TraceOperation 083475 (Print_paddr (Var (Global 25)));
  Let b1 = M[007958];
  Let b2 = M[007959];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 083477 (Print_ret " It advances on you, and roars out a demand that you say your name.");
  GamePrint " It advances on you, and roars out a demand that you say your name.\n";
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 083512:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 083515
LocOp 083515:
  TraceOperation 083515 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 083519 (Print "This is a large walled courtyard. Strewn about are a profusion of gnawed bones bleaching in the sun. In case the significance of these fails to strike you, there is also a ");
    GamePrint "This is a large walled courtyard. Strewn about are a profusion of gnawed bones bleaching in the sun. In case the significance of these fails to strike you, there is also a ";
    TraceOperation 083618 (Print_obj (Con 97));
    Let b2 = M[001631];
    Let b3 = M[001632];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 083620 (Print " in the middle of the courtyard, on which the Beast has roughly carved the names of all its victims.");
    GamePrint " in the middle of the courtyard, on which the Beast has roughly carved the names of all its victims.";
    TraceOperation 083673 (Jin (Con 96) (Var (Global 0)) (Branch F (Dloc 083704)));
    Let b6 = M[007908];
    Let b7 = M[007909];
    Let b8 = M[001619];
    if (Equal(MakeHiLo(b6,b7),Widen(b8))) {
      TraceOperation 083677 New_line;
      GamePrint "\n";
      TraceOperation 083678 (Print "Some ");
      GamePrint "Some ";
      TraceOperation 083683 (Print_obj (Con 96));
      Let b9 = M[001622];
      Let b10 = M[001623];
      Let b11 = M[Address(MakeHiLo(b9,b10))];
      Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
      GamePrint ite_res12;
      TraceOperation 083685 (Print "s lie near the exit to the west.");
      GamePrint "s lie near the exit to the west.";
      Jump: 083704
    } else {
      Jump: 083704
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_13;
    SetResult 0;
    JumpIndirect: (return) return_address_13
  }
LocOp 083704:
  TraceOperation 083704 New_line;
  GamePrint "\n";
  TraceOperation 083705 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 083706:
  MakeRoutineFrame 0;
  Jump: 083707
LocOp 083707:
  TraceOperation 083707 (Je [Var (Global 203),Con 31] (Branch F (Dloc 084704)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),31)) {
    TraceOperation 083712 (Je [Con 97,Var (Global 202)] (Branch F (Dloc 084704)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(97,MakeHiLo(b3,b4))) {
      TraceOperation 083717 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 083727)));
      Let b5 = M[001606];
      if (TestBit(b5,4)) {
        TraceOperation 083721 (Call (Floc 031422) [] Sp);
        PushFrame;
        PushReturnAddress 083721;
        MakeRoutineFrame 0;
        Jump: 031423
      } else {
        Jump: 083727
      }
    } else {
      Jump: 084704
    }
  } else {
    Jump: 084704
  }
LocReturn 083721:
  PushStack call_result;
  TraceOperation 083726 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 083727:
  TraceOperation 083727 (Je [Var (Global 201),Con 94] (Branch F (Dloc 083898)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),94)) {
    TraceOperation 083732 (Print "Whose name? The ");
    GamePrint "Whose name? The ";
    TraceOperation 083745 (Print_obj (Con 91));
    Let b3 = M[001577];
    Let b4 = M[001578];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 083747 (Print_ret "? Your aunt's name? One of the Infinite Unknowable names of Buddha? How about the name of Fred who runs (or rather ran) your local chip shop? At least that's a short name -- you might have time to write it before the Beast eats you.");
    GamePrint "? Your aunt's name? One of the Infinite Unknowable names of Buddha? How about the name of Fred who runs (or rather ran) your local chip shop? At least that's a short name -- you might have time to write it before the Beast eats you.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 083898
  }
LocOp 083898:
  TraceOperation 083898 (Je [Var (Global 201),Con 93] (Branch F (Dloc 083959)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),93)) {
    TraceOperation 083902 (Print_ret "Concentrate. Learn to distinguish between genuinely helpful suggestions and mere sarcasm.");
    GamePrint "Concentrate. Learn to distinguish between genuinely helpful suggestions and mere sarcasm.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 083959
  }
LocOp 083959:
  TraceOperation 083959 (Test_attr (Con 139) (Con 9) (Branch T (Dloc 084040)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    Jump: 084040
  } else {
    TraceOperation 083964 (Call (Floc 022320) [Con -22735,Con 2] Sp);
    PushFrame;
    PushReturnAddress 083964;
    SetLocal 1 -22735;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  }
LocReturn 083964:
  PushStack call_result;
  TraceOperation 083972 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 083977 (Print "Before you even chip the first letter, the Beast sees you and hurls you spinning away with a bellow of rage.");
  GamePrint "Before you even chip the first letter, the Beast sees you and hurls you spinning away with a bellow of rage.";
  TraceOperation 084036 (Print_paddr (Var (Global 30)));
  Let b2 = M[007968];
  Let b3 = M[007969];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 084038 New_line;
  GamePrint "\n";
  TraceOperation 084039 Rtrue;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult 1;
  JumpIndirect: (return) return_address_4
LocOp 084040:
  TraceOperation 084040 (Jz (Var (Global 102)) (Branch T (Dloc 084127)));
  Let b1 = M[008112];
  Let b2 = M[008113];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 084127
  } else {
    TraceOperation 084044 (Print_ret "You cannot see and have lost your bearings. You stumble hopelessly and begin to arouse the Beast's suspicions. It's stupid but not THAT stupid.");
    GamePrint "You cannot see and have lost your bearings. You stumble hopelessly and begin to arouse the Beast's suspicions. It's stupid but not THAT stupid.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 084127:
  TraceOperation 084127 (Je [Var (Global 201),Con 30,Con 123,Con 92] (Branch F (Dloc 084579)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),30),Equal(MakeHiLo(b1,b2),123)),Equal(MakeHiLo(b1,b2),92))) {
    TraceOperation 084135 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 084150)));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      TraceOperation 084139 (Print_ret "You already did that!");
      GamePrint "You already did that!\n";
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      Jump: 084150
    }
  } else {
    Jump: 084579
  }
LocOp 084150:
  TraceOperation 084150 (Print "You chip away with the stone. It's not your best writing, what with your mounting sense of panic and a towel wrapped around your head. However, it suffices...");
  GamePrint "You chip away with the stone. It's not your best writing, what with your mounting sense of panic and a towel wrapped around your head. However, it suffices...";
  TraceOperation 084235 New_line;
  GamePrint "\n";
  TraceOperation 084236 New_line;
  GamePrint "\n";
  TraceOperation 084237 (Print_paddr (Var (Global 27)));
  Let b1 = M[007962];
  Let b2 = M[007963];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 084239 (Jz (Var (Global 103)) (Branch T (Dloc 084460)));
  Let b3 = M[008114];
  Let b4 = M[008115];
  if (IsZero(MakeHiLo(b3,b4))) {
    Jump: 084460
  } else {
    TraceOperation 084243 (Set_attr (Con 95) (Con 3));
    Let b5 = M[001606];
    SetByte 001606 SetBit(b5,4);
    TraceOperation 084246 (Call (Floc 022320) [Con -22735,Con 9] Sp);
    PushFrame;
    PushReturnAddress 084246;
    SetLocal 1 -22735;
    SetLocal 2 9;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  }
LocReturn 084246:
  PushStack call_result;
  TraceOperation 084254 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 084259 (Print_ret "suddenly sees your name freshly carved on its memorial of remembrance. Mystery solved. It realises it must have already eaten you in a fit of absent-mindedness. (Its mind is very very small and quite frequently absent.) It decides to give up the rest of its afternoon to the twin arts of digestion and contemplation. It settles down for a snooze.");
  GamePrint "suddenly sees your name freshly carved on its memorial of remembrance. Mystery solved. It realises it must have already eaten you in a fit of absent-mindedness. (Its mind is very very small and quite frequently absent.) It decides to give up the rest of its afternoon to the twin arts of digestion and contemplation. It settles down for a snooze.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 084460:
  TraceOperation 084460 (Print "sees \"");
  GamePrint "sees \"";
  TraceOperation 084467 (Print_obj (Con 123));
  Let b1 = M[001865];
  Let b2 = M[001866];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 084469 (Print "\" freshly carved on the ");
  GamePrint "\" freshly carved on the ";
  TraceOperation 084486 (Print_obj (Con 97));
  Let b5 = M[001631];
  Let b6 = M[001632];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
  GamePrint ite_res8;
  TraceOperation 084488 (Print_ret ". This doesn't ring any bells with the Beast. It roars with fury, and eyes the thing it can't see because it's got a towel on its head (i.e. you) with deepening suspicion.");
  GamePrint ". This doesn't ring any bells with the Beast. It roars with fury, and eyes the thing it can't see because it's got a towel on its head (i.e. you) with deepening suspicion.\n";
  PopFrame;
  PopReturnAddress return_address_9;
  SetResult 1;
  JumpIndirect: (return) return_address_9
LocOp 084579:
  TraceOperation 084579 (Print_paddr (Var (Global 27)));
  Let b1 = M[007962];
  Let b2 = M[007963];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 084581 (Print "suddenly sees ");
  GamePrint "suddenly sees ";
  TraceOperation 084592 (Je [Var (Global 201),Con 91,Con 95] (Branch F (Dloc 084610)));
  Let b3 = M[008310];
  Let b4 = M[008311];
  if (LogOr(Equal(MakeHiLo(b3,b4),91),Equal(MakeHiLo(b3,b4),95))) {
    TraceOperation 084598 (Print "its own name");
    GamePrint "its own name";
    TraceOperation 084607 (Jump 084618);
    Jump: 084618
  } else {
    Jump: 084610
  }
LocOp 084610:
  TraceOperation 084610 (Print "\"");
  GamePrint "\"";
  TraceOperation 084613 (Print_obj (Var (Global 201)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 084615 (Print "\"");
  GamePrint "\"";
  Jump: 084618
LocOp 084618:
  TraceOperation 084618 (Print " freshly carved on the ");
  GamePrint " freshly carved on the ";
  TraceOperation 084633 (Print_obj (Con 97));
  Let b1 = M[001631];
  Let b2 = M[001632];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 084635 (Print ". This disconcerts it, as it has no recollection of eating ");
  GamePrint ". This disconcerts it, as it has no recollection of eating ";
  TraceOperation 084670 (Je [Var (Global 201),Con 91,Con 95] (Branch F (Dloc 084684)));
  Let b5 = M[008310];
  Let b6 = M[008311];
  if (LogOr(Equal(MakeHiLo(b5,b6),91),Equal(MakeHiLo(b5,b6),95))) {
    TraceOperation 084676 (Print "itself");
    GamePrint "itself";
    TraceOperation 084681 (Jump 084697);
    Jump: 084697
  } else {
    Jump: 084684
  }
LocOp 084684:
  TraceOperation 084684 (Print "anyone by that name");
  GamePrint "anyone by that name";
  Jump: 084697
LocOp 084697:
  TraceOperation 084697 (Print ".");
  GamePrint ".";
  TraceOperation 084700 (Print_paddr (Var (Global 12)));
  Let b1 = M[007932];
  Let b2 = M[007933];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 084702 New_line;
  GamePrint "\n";
  TraceOperation 084703 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 084704:
  TraceOperation 084704 (Je [Var (Global 203),Con 120] (Branch F (Dloc 084804)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),120)) {
    TraceOperation 084709 (Print "Gleb Snardfitz, Bibs Trench, Zeke Fitzberry, Elmo Smith, ");
    GamePrint "Gleb Snardfitz, Bibs Trench, Zeke Fitzberry, Elmo Smith, ";
    TraceOperation 084754 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 084763)));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      TraceOperation 084758 (Print_obj (Con 123));
      Let b4 = M[001865];
      Let b5 = M[001866];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
      GamePrint ite_res7;
      TraceOperation 084760 (Print ", ");
      GamePrint ", ";
      Jump: 084763
    } else {
      Jump: 084763
    }
  } else {
    Jump: 084804
  }
LocOp 084763:
  TraceOperation 084763 (Print_ret "Brian \"Spike\" Berkowitz, Clybert Quackentotter...");
  GamePrint "Brian \"Spike\" Berkowitz, Clybert Quackentotter...\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 084804:
  TraceOperation 084804 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 084808 (Print "There are countless names carved on the ");
    GamePrint "There are countless names carved on the ";
    TraceOperation 084831 (Print_obj (Con 97));
    Let b3 = M[001631];
    Let b4 = M[001632];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 084833 (Print ":");
    GamePrint ":";
    TraceOperation 084836 New_line;
    GamePrint "\n";
    TraceOperation 084837 (Call (Floc 022042) [Con 120,Con 97] Sp);
    PushFrame;
    PushReturnAddress 084837;
    SetLocal 1 120;
    SetLocal 2 97;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocReturn 084837:
  PushStack call_result;
  TraceOperation 084844 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 084846:
  MakeRoutineFrame 0;
  Jump: 084847
LocOp 084847:
  TraceOperation 084847 (Je [Var (Global 203),Con 124] (Branch F (Dloc 084862)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 084851 (Test_attr (Con 96) (Con 21) (Branch F (Dloc 084862)));
    Let b3 = M[001617];
    if (TestBit(b3,2)) {
      TraceOperation 084855 (Clear_attr (Con 96) (Con 27));
      Let b4 = M[001618];
      SetByte 001618 ClearBit(b4,4);
      TraceOperation 084858 (Clear_attr (Con 96) (Con 21));
      Let b5 = M[001617];
      SetByte 001617 ClearBit(b5,2);
      TraceOperation 084861 Rfalse;
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    } else {
      Jump: 084862
    }
  } else {
    Jump: 084862
  }
LocOp 084862:
  TraceOperation 084862 (Je [Var (Global 203),Con 53] (Branch F (Dloc 084877)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 084866 (Je [Var (Global 0),Con 98] (Branch F (Dloc 084877)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),98)) {
      TraceOperation 084870 (Set_attr (Con 96) (Con 27));
      Let b5 = M[001618];
      SetByte 001618 SetBit(b5,4);
      TraceOperation 084873 (Set_attr (Con 96) (Con 21));
      Let b6 = M[001617];
      SetByte 001617 SetBit(b6,2);
      TraceOperation 084876 Rfalse;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 084877
    }
  } else {
    Jump: 084877
  }
LocOp 084877:
  TraceOperation 084877 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 084881 (Print_ret "It's hard as a rock.");
    GamePrint "It's hard as a rock.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 084894:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 084897
LocOp 084897:
  TraceOperation 084897 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 084934)));
  Let b1 = M[001606];
  if (TestBit(b1,4)) {
    TraceOperation 084901 (Print_ret "The Beast is in the corner, sleeping peacefully (Footnote 5).");
    GamePrint "The Beast is in the corner, sleeping peacefully (Footnote 5).\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 084934
  }
LocOp 084934:
  TraceOperation 084934 (Print "The ");
  GamePrint "The ";
  TraceOperation 084937 (Print_obj (Con 95));
  Let b1 = M[001613];
  Let b2 = M[001614];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 084939 (Print_ret " is here, looking particularly nasty and hungry.");
  GamePrint " is here, looking particularly nasty and hungry.\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 084970:
  MakeRoutineFrame 0;
  Jump: 084971
LocOp 084971:
  TraceOperation 084971 (Je [Con 95,Var (Global 195)] (Branch F (Dloc 085152)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(95,MakeHiLo(b1,b2))) {
    TraceOperation 084976 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 084986)));
    Let b3 = M[002003];
    if (TestBit(b3,6)) {
      TraceOperation 084980 (Call (Floc 036558) [] Sp);
      PushFrame;
      PushReturnAddress 084980;
      MakeRoutineFrame 1;
      SetLocal 1 0;
      Jump: 036561
    } else {
      Jump: 084986
    }
  } else {
    Jump: 085152
  }
LocReturn 084980:
  PushStack call_result;
  TraceOperation 084985 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 084986:
  TraceOperation 084986 (Je [Var (Global 203),Con 150] (Branch F (Dloc 085009)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),150)) {
    TraceOperation 084990 (Je [Var (Global 201),Con 30] (Branch F (Dloc 085009)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      TraceOperation 084994 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 084997 (Call (Floc 022042) [Con 22,Con 95,Var (Global 202)] Sp);
      Let b5 = M[008312];
      Let b6 = M[008313];
      PushFrame;
      PushReturnAddress 084997;
      SetLocal 1 22;
      SetLocal 2 95;
      SetLocal 3 MakeHiLo(b5,b6);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 085009
    }
  } else {
    Jump: 085009
  }
LocReturn 084997:
  PushStack call_result;
  TraceOperation 085005 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085008 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085009:
  TraceOperation 085009 (Je [Var (Global 203),Con 75] (Branch F (Dloc 085027)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 085013 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 085016 (Call (Floc 022042) [Con 75,Con 95] Sp);
    PushFrame;
    PushReturnAddress 085016;
    SetLocal 1 75;
    SetLocal 2 95;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 085027
  }
LocReturn 085016:
  PushStack call_result;
  TraceOperation 085023 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085026 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085027:
  TraceOperation 085027 (Je [Var (Global 203),Con 174] (Branch F (Dloc 085050)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 085031 (Je [Var (Global 201),Con 28] (Branch F (Dloc 085050)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 085035 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 085038 (Call (Floc 022042) [Con 22,Con 95,Con 28] Sp);
      PushFrame;
      PushReturnAddress 085038;
      SetLocal 1 22;
      SetLocal 2 95;
      SetLocal 3 28;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 085050
    }
  } else {
    Jump: 085050
  }
LocReturn 085038:
  PushStack call_result;
  TraceOperation 085046 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085049 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085050:
  TraceOperation 085050 (Jz (Var (Global 103)) (Branch F (Dloc 085093)));
  Let b1 = M[008114];
  Let b2 = M[008115];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 085053 (Je [Var (Global 203),Con 101] (Branch F (Dloc 085093)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),101)) {
      TraceOperation 085057 (Je [Var (Global 201),Con 94] (Branch F (Dloc 085093)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),94)) {
        TraceOperation 085061 (Je [Var (Global 202),Con 123] (Branch F (Dloc 085079)));
        Let b7 = M[008312];
        Let b8 = M[008313];
        if (Equal(MakeHiLo(b7,b8),123)) {
          TraceOperation 085065 (Store (Con 211) (Con 31));
          SetByte 008298 0;
          SetByte 008299 31;
          TraceOperation 085068 (Call (Floc 022042) [Con 127,Con 92] Sp);
          PushFrame;
          PushReturnAddress 085068;
          SetLocal 1 127;
          SetLocal 2 92;
          MakeRoutineFrame 7;
          SetLocal 7 0;
          SetLocal 6 0;
          SetLocal 5 0;
          SetLocal 4 0;
          SetLocal 3 0;
          Jump: 022057
        } else {
          Jump: 085079
        }
      } else {
        Jump: 085093
      }
    } else {
      Jump: 085093
    }
  } else {
    Jump: 085093
  }
LocReturn 085068:
  PushStack call_result;
  TraceOperation 085075 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085078 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085079:
  TraceOperation 085079 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 085082 (Call (Floc 022042) [Con 127,Con 91] Sp);
  PushFrame;
  PushReturnAddress 085082;
  SetLocal 1 127;
  SetLocal 2 91;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 085082:
  PushStack call_result;
  TraceOperation 085089 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085092 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085093:
  TraceOperation 085093 (Jz (Var (Global 103)) (Branch F (Dloc 085132)));
  Let b1 = M[008114];
  Let b2 = M[008115];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 085096 (Je [Var (Global 203),Con 5] (Branch F (Dloc 085132)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),5)) {
      TraceOperation 085100 (Je [Var (Global 201),Con 123] (Branch F (Dloc 085118)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),123)) {
        TraceOperation 085104 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 085107 (Call (Floc 022042) [Con 127,Con 92] Sp);
        PushFrame;
        PushReturnAddress 085107;
        SetLocal 1 127;
        SetLocal 2 92;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      } else {
        Jump: 085118
      }
    } else {
      Jump: 085132
    }
  } else {
    Jump: 085132
  }
LocReturn 085107:
  PushStack call_result;
  TraceOperation 085114 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085117 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085118:
  TraceOperation 085118 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 085121 (Call (Floc 022042) [Con 127,Con 91] Sp);
  PushFrame;
  PushReturnAddress 085121;
  SetLocal 1 127;
  SetLocal 2 91;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 085121:
  PushStack call_result;
  TraceOperation 085128 (Store (Con 211) (Con 95));
  SetByte 008298 0;
  SetByte 008299 95;
  TraceOperation 085131 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085132:
  TraceOperation 085132 (Print "The Beast just roars at you.");
  GamePrint "The Beast just roars at you.";
  TraceOperation 085145 New_line;
  GamePrint "\n";
  TraceOperation 085146 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 085146;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 085146:
  PushStack call_result;
  TraceOperation 085151 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 085152:
  TraceOperation 085152 (Je [Var (Global 203),Con 22,Con 75,Con 15] (Branch T (Dloc 085165)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),22),Equal(MakeHiLo(b1,b2),75)),Equal(MakeHiLo(b1,b2),15))) {
    Jump: 085165
  } else {
    TraceOperation 085159 (Je [Var (Global 203),Con 150,Con 23] (Branch F (Dloc 085208)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),150),Equal(MakeHiLo(b3,b4),23))) {
      Jump: 085165
    } else {
      Jump: 085208
    }
  }
LocOp 085165:
  TraceOperation 085165 (Je [Var (Global 201),Con 95] (Branch F (Dloc 085208)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),95)) {
    TraceOperation 085169 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 085193)));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      TraceOperation 085173 (Print "The Beast is sleeping!");
      GamePrint "The Beast is sleeping!";
      TraceOperation 085186 New_line;
      GamePrint "\n";
      TraceOperation 085187 (Call (Floc 043634) [] Sp);
      PushFrame;
      PushReturnAddress 085187;
      MakeRoutineFrame 0;
      Jump: 043635
    } else {
      Jump: 085193
    }
  } else {
    Jump: 085208
  }
LocReturn 085187:
  PushStack call_result;
  TraceOperation 085192 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 085193:
  TraceOperation 085193 (Test_attr (Con 139) (Con 9) (Branch F Dfalse));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 085197 (Call (Floc 036802) [] Sp);
    PushFrame;
    PushReturnAddress 085197;
    MakeRoutineFrame 0;
    Jump: 036803
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocReturn 085197:
  PushStack call_result;
  TraceOperation 085202 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 085202;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 085202:
  PushStack call_result;
  TraceOperation 085207 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 085208:
  TraceOperation 085208 (Je [Var (Global 203),Con 151] (Branch F (Dloc 085224)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),151)) {
    TraceOperation 085212 (Je [Var (Global 202),Con 92] (Branch F (Dloc 085224)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),92)) {
      TraceOperation 085216 (Call (Floc 022042) [Con 127,Con 92] Sp);
      PushFrame;
      PushReturnAddress 085216;
      SetLocal 1 127;
      SetLocal 2 92;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 085224
    }
  } else {
    Jump: 085224
  }
LocReturn 085216:
  PushStack call_result;
  TraceOperation 085223 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085224:
  TraceOperation 085224 (Je [Var (Global 203),Con 152] (Branch F (Dloc 085240)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),152)) {
    TraceOperation 085228 (Je [Var (Global 201),Con 92] (Branch F (Dloc 085240)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),92)) {
      TraceOperation 085232 (Call (Floc 022042) [Con 127,Con 92] Sp);
      PushFrame;
      PushReturnAddress 085232;
      SetLocal 1 127;
      SetLocal 2 92;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 085240
    }
  } else {
    Jump: 085240
  }
LocReturn 085232:
  PushStack call_result;
  TraceOperation 085239 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085240:
  TraceOperation 085240 (Je [Var (Global 203),Con 66,Con 134] (Branch F (Dloc 085376)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),66),Equal(MakeHiLo(b1,b2),134))) {
    TraceOperation 085247 (Je [Con 156,Var (Global 201)] (Branch F (Dloc 085376)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(156,MakeHiLo(b3,b4))) {
      TraceOperation 085252 (Call (Floc 022320) [Con -22735,Con 2] Sp);
      PushFrame;
      PushReturnAddress 085252;
      SetLocal 1 -22735;
      SetLocal 2 2;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 022327
    } else {
      Jump: 085376
    }
  } else {
    Jump: 085376
  }
LocReturn 085252:
  PushStack call_result;
  TraceOperation 085260 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 085265 (Print_ret "The Beast stops in its tracks, deeply impressed, and compliments you on the quality of your aunts, and complains that all its aunts are complete horrors. It then continues its dreadful attack.");
  GamePrint "The Beast stops in its tracks, deeply impressed, and compliments you on the quality of your aunts, and complains that all its aunts are complete horrors. It then continues its dreadful attack.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 085376:
  TraceOperation 085376 (Je [Var (Global 203),Con 154] (Branch F (Dloc 085403)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),154)) {
    TraceOperation 085380 (Je [Var (Global 202),Con 95] (Branch F (Dloc 085403)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),95)) {
      TraceOperation 085384 (Call (Floc 041208) [] Sp);
      PushFrame;
      PushReturnAddress 085384;
      MakeRoutineFrame 0;
      Jump: 041209
    } else {
      Jump: 085403
    }
  } else {
    Jump: 085403
  }
LocReturn 085384:
  PushStack call_result;
  TraceOperation 085389 (Jz (Var Sp) (Branch F (Dloc 085403)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 085392 (Insert_obj (Var (Global 201)) (Var (Global 0)));
    Let b2 = M[008310];
    Let b3 = M[008311];
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),4)];
    if (IsZero(Widen(b6))) {} else {
      Let b7 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
      if (Equal(Widen(b7),MakeHiLo(b2,b3))) {
        Let b8 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b8));
      } else {
        Let loop_var9 = Widen(b7);
        Label 10: {
          Let b11 = M[Offset(Offset(000751,Mul(loop_var9,9)),5)];
          if (Equal(Widen(b11),MakeHiLo(b2,b3))) {
            Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),5)];
            SetByte Offset(Offset(000751,Mul(loop_var9,9)),5) LoByte(Widen(b12));
          } else {
            Assign loop_var9 = Widen(b11);
            Goto: Label 10
          }
        }
      }
    }
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),4) b5;
    Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),5) LoByte(Widen(b13));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6) b3;
    TraceOperation 085395 (Call (Floc 022042) [Con 24,Con 95] Sp);
    PushFrame;
    PushReturnAddress 085395;
    SetLocal 1 24;
    SetLocal 2 95;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 085403
  }
LocReturn 085395:
  PushStack call_result;
  TraceOperation 085402 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085403:
  TraceOperation 085403 (Je [Var (Global 203),Con 24] (Branch F (Dloc 085487)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),24)) {
    TraceOperation 085408 (Je [Var (Global 201),Con 95] (Branch F (Dloc 085487)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),95)) {
      TraceOperation 085413 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 085425)));
      Let b5 = M[001606];
      if (TestBit(b5,4)) {
        TraceOperation 085417 (Call (Floc 022042) [Con 167,Con 95] Sp);
        PushFrame;
        PushReturnAddress 085417;
        SetLocal 1 167;
        SetLocal 2 95;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      } else {
        Jump: 085425
      }
    } else {
      Jump: 085487
    }
  } else {
    Jump: 085487
  }
LocReturn 085417:
  PushStack call_result;
  TraceOperation 085424 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085425:
  TraceOperation 085425 (Call (Floc 022320) [Con -22735,Con 2] Sp);
  PushFrame;
  PushReturnAddress 085425;
  SetLocal 1 -22735;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 085425:
  PushStack call_result;
  TraceOperation 085433 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 085438 (Print_ret "A footling effort. The shock waves of the Beast's laughter push you back.");
  GamePrint "A footling effort. The shock waves of the Beast's laughter push you back.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 085487:
  TraceOperation 085487 (Je [Var (Global 203),Con 167] (Branch F (Dloc 085530)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),167)) {
    TraceOperation 085491 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 085530)));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      TraceOperation 085495 (Print "The Beast casually brushes you away with one of");
      GamePrint "The Beast casually brushes you away with one of";
      TraceOperation 085520 (Print_paddr (Var (Global 45)));
      Let b4 = M[007998];
      Let b5 = M[007999];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 085522 (Call (Floc 042734) [Con -11702] Sp);
      PushFrame;
      PushReturnAddress 085522;
      SetLocal 1 -11702;
      MakeRoutineFrame 1;
      Jump: 042737
    } else {
      Jump: 085530
    }
  } else {
    Jump: 085530
  }
LocReturn 085522:
  PushStack call_result;
  TraceOperation 085529 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085530:
  TraceOperation 085530 (Je [Var (Global 203),Con 22] (Branch F (Dloc 085593)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 085534 (Je [Var (Global 202),Con 28] (Branch F (Dloc 085593)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 085538 (Print_ret "\"Eat. Carve name on memorial. Sleep. Eat more. Roar a lot. Stuff like that.\"");
      GamePrint "\"Eat. Carve name on memorial. Sleep. Eat more. Roar a lot. Stuff like that.\"\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 085593
    }
  } else {
    Jump: 085593
  }
LocOp 085593:
  TraceOperation 085593 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 085597 (Print_paddr (Var (Global 25)));
    Let b3 = M[007958];
    Let b4 = M[007959];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 085599 New_line;
    GamePrint "\n";
    TraceOperation 085600 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 085602:
  MakeRoutineFrame 0;
  Jump: 085603
LocOp 085603:
  TraceOperation 085603 (Call (Floc 022320) [Con -22735,Con -1] Sp);
  PushFrame;
  PushReturnAddress 085603;
  SetLocal 1 -22735;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 085603:
  PushStack call_result;
  TraceOperation 085612 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 085617 New_line;
  GamePrint "\n";
  TraceOperation 085618 (Test_attr (Con 95) (Con 3) (Branch F (Dloc 085639)));
  Let b2 = M[001606];
  if (TestBit(b2,4)) {
    TraceOperation 085622 (Insert_obj (Con 10) (Con 31));
    Let b3 = M[000845];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),10)) {
        Let b5 = M[000846];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),10)) {
            Let b9 = M[000846];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 000845 31;
    Let b10 = M[001036];
    SetByte 000846 LoByte(Widen(b10));
    SetByte 001036 10;
    TraceOperation 085625 (Clear_attr (Con 99) (Con 27));
    Let b11 = M[001645];
    SetByte 001645 ClearBit(b11,4);
    TraceOperation 085628 (Set_attr (Con 99) (Con 4));
    Let b12 = M[001642];
    SetByte 001642 SetBit(b12,3);
    TraceOperation 085631 (Call (Floc 042734) [Con -10738] Sp);
    PushFrame;
    PushReturnAddress 085631;
    SetLocal 1 -10738;
    MakeRoutineFrame 1;
    Jump: 042737
  } else {
    Jump: 085639
  }
LocReturn 085631:
  PushStack call_result;
  TraceOperation 085638 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085639:
  TraceOperation 085639 (Test_attr (Con 139) (Con 9) (Branch F (Dloc 085737)));
  Let b1 = M[002003];
  if (TestBit(b1,6)) {
    TraceOperation 085644 (Print "The Beast still thinks it can't see you, but it's so irritated at having an invisible object stumble around its lair that it swipes out angrily with one of");
    GamePrint "The Beast still thinks it can't see you, but it's so irritated at having an invisible object stumble around its lair that it swipes out angrily with one of";
    TraceOperation 085727 (Print_paddr (Var (Global 45)));
    Let b2 = M[007998];
    Let b3 = M[007999];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 085729 (Call (Floc 042734) [Con -10451] Sp);
    PushFrame;
    PushReturnAddress 085729;
    SetLocal 1 -10451;
    MakeRoutineFrame 1;
    Jump: 042737
  } else {
    Jump: 085737
  }
LocReturn 085729:
  PushStack call_result;
  TraceOperation 085736 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085737:
  TraceOperation 085737 (Jin (Con 95) (Var (Global 0)) (Branch T (Dloc 085779)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001610];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 085779
  } else {
    TraceOperation 085741 (Insert_obj (Con 95) (Var (Global 0)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[001610];
    if (IsZero(Widen(b6))) {} else {
      Let b7 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
      if (Equal(Widen(b7),95)) {
        Let b8 = M[001611];
        SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b8));
      } else {
        Let loop_var9 = Widen(b7);
        Label 10: {
          Let b11 = M[Offset(Offset(000751,Mul(loop_var9,9)),5)];
          if (Equal(Widen(b11),95)) {
            Let b12 = M[001611];
            SetByte Offset(Offset(000751,Mul(loop_var9,9)),5) LoByte(Widen(b12));
          } else {
            Assign loop_var9 = Widen(b11);
            Goto: Label 10
          }
        }
      }
    }
    SetByte 001610 b5;
    Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
    SetByte 001611 LoByte(Widen(b13));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6) 95;
    TraceOperation 085744 (Insert_obj (Con 94) (Var (Global 0)));
    Let b14 = M[007908];
    Let b15 = M[007909];
    Let b16 = M[001601];
    if (IsZero(Widen(b16))) {} else {
      Let b17 = M[Offset(Offset(000751,Mul(Widen(b16),9)),6)];
      if (Equal(Widen(b17),94)) {
        Let b18 = M[001602];
        SetByte Offset(Offset(000751,Mul(Widen(b16),9)),6) LoByte(Widen(b18));
      } else {
        Let loop_var19 = Widen(b17);
        Label 20: {
          Let b21 = M[Offset(Offset(000751,Mul(loop_var19,9)),5)];
          if (Equal(Widen(b21),94)) {
            Let b22 = M[001602];
            SetByte Offset(Offset(000751,Mul(loop_var19,9)),5) LoByte(Widen(b22));
          } else {
            Assign loop_var19 = Widen(b21);
            Goto: Label 20
          }
        }
      }
    }
    SetByte 001601 b15;
    Let b23 = M[Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),6)];
    SetByte 001602 LoByte(Widen(b23));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b14,b15),9)),6) 94;
    TraceOperation 085747 (Store (Con 117) (Con 0));
    SetByte 008110 0;
    SetByte 008111 0;
    TraceOperation 085750 (Print_ret "Bellowing with rage, the Beast charges after you.");
    GamePrint "Bellowing with rage, the Beast charges after you.\n";
    PopFrame;
    PopReturnAddress return_address_24;
    SetResult 1;
    JumpIndirect: (return) return_address_24
  }
LocOp 085779:
  TraceOperation 085779 (Inc (Con 117));
  Let b1 = M[008110];
  Let b2 = M[008111];
  SetByte 008110 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008111 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 085781 (Je [Var (Global 101),Con 1] (Branch F (Dloc 085823)));
  Let b3 = M[008110];
  Let b4 = M[008111];
  if (Equal(MakeHiLo(b3,b4),1)) {
    TraceOperation 085785 (Print "With a headsplitting roar, the ");
    GamePrint "With a headsplitting roar, the ";
    TraceOperation 085806 (Print_obj (Con 95));
    Let b5 = M[001613];
    Let b6 = M[001614];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 085808 (Print_ret " charges towards you.");
    GamePrint " charges towards you.\n";
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 085823
  }
LocOp 085823:
  TraceOperation 085823 (Je [Var (Global 101),Con 2] (Branch F (Dloc 085870)));
  Let b1 = M[008110];
  Let b2 = M[008111];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 085827 (Jz (Var (Global 103)) (Branch F (Dloc 085870)));
    Let b3 = M[008114];
    Let b4 = M[008115];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 085830 (Print "The Beast, sharpening");
      GamePrint "The Beast, sharpening";
      TraceOperation 085845 (Print_paddr (Var (Global 45)));
      Let b5 = M[007998];
      Let b6 = M[007999];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 085847 (Print_ret ", demands again that you say your name.");
      GamePrint ", demands again that you say your name.\n";
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 085870
    }
  } else {
    Jump: 085870
  }
LocOp 085870:
  TraceOperation 085870 (Jg (Var (Global 101)) (Con 4) (Branch F (Dloc 085880)));
  Let b1 = M[008110];
  Let b2 = M[008111];
  if (GreaterThan(MakeHiLo(b1,b2),4)) {
    TraceOperation 085874 (Call (Floc 085896) [] Sp);
    PushFrame;
    PushReturnAddress 085874;
    MakeRoutineFrame 0;
    Jump: 085897
  } else {
    Jump: 085880
  }
LocReturn 085874:
  PushStack call_result;
  TraceOperation 085879 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 085880:
  TraceOperation 085880 (Print_ret "The Beast is nearly upon you.");
  GamePrint "The Beast is nearly upon you.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 085896:
  MakeRoutineFrame 0;
  Jump: 085897
LocOp 085897:
  TraceOperation 085897 (Print "With a vast savage roar, the Beast tears you limb from limb with");
  GamePrint "With a vast savage roar, the Beast tears you limb from limb with";
  TraceOperation 085934 (Print_paddr (Var (Global 45)));
  Let b1 = M[007998];
  Let b2 = M[007999];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 085936 (Call (Floc 042734) [Con -10436] Sp);
  PushFrame;
  PushReturnAddress 085936;
  SetLocal 1 -10436;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 085936:
  PushStack call_result;
  TraceOperation 085943 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 085944:
  MakeRoutineFrame 0;
  Jump: 085945
LocOp 085945:
  TraceOperation 085945 (Je [Var (Global 203),Con 174] (Branch F (Dloc 085957)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 085949 (Call (Floc 022042) [Con 178,Con 30] Sp);
    PushFrame;
    PushReturnAddress 085949;
    SetLocal 1 178;
    SetLocal 2 30;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 085957
  }
LocReturn 085949:
  PushStack call_result;
  TraceOperation 085956 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 085957:
  TraceOperation 085957 (Je [Var (Global 0),Con 98] (Branch F (Dloc 085965)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),98)) {
    TraceOperation 085961 (Test_attr (Con 95) (Con 3) (Branch T Dfalse));
    Let b3 = M[001606];
    if (TestBit(b3,4)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    } else {
      Jump: 085965
    }
  } else {
    Jump: 085965
  }
LocOp 085965:
  TraceOperation 085965 (Je [Var (Global 203),Con 98,Con 159,Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),98),Equal(MakeHiLo(b1,b2),159)),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 085972 (Print_ret "Huh?");
    GamePrint "Huh?\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 085978:
  MakeRoutineFrame 0;
  Jump: 085979
LocOp 085979:
  TraceOperation 085979 (Je [Var (Global 203),Con 124] (Branch F (Dloc 086001)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 085983 (Test_attr (Con 88) (Con 21) (Branch F (Dloc 086001)));
    Let b3 = M[001545];
    if (TestBit(b3,2)) {
      TraceOperation 085987 (Clear_attr (Con 88) (Con 21));
      Let b4 = M[001545];
      SetByte 001545 ClearBit(b4,2);
      TraceOperation 085990 (Clear_attr (Con 88) (Con 27));
      Let b5 = M[001546];
      SetByte 001546 ClearBit(b5,4);
      TraceOperation 085993 (Set_attr (Con 89) (Con 5));
      Let b6 = M[001552];
      SetByte 001552 SetBit(b6,2);
      TraceOperation 085996 (Add (Var (Global 1)) (Con 25) (Global 1));
      Let b7 = M[007910];
      Let b8 = M[007911];
      SetByte 007910 HiByte(Add(MakeHiLo(b7,b8),25));
      SetByte 007911 LoByte(Add(MakeHiLo(b7,b8),25));
      TraceOperation 086000 Rfalse;
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    } else {
      Jump: 086001
    }
  } else {
    Jump: 086001
  }
LocOp 086001:
  TraceOperation 086001 (Je [Var (Global 203),Con 124] (Branch F (Dloc 086038)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 086005 (Call (Floc 020662) [Con -16129] Sp);
    PushFrame;
    PushReturnAddress 086005;
    SetLocal 1 -16129;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 020671
  } else {
    Jump: 086038
  }
LocReturn 086005:
  PushStack call_result;
  TraceOperation 086012 (Jz (Var Sp) (Branch T (Dloc 086038)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 086038
  } else {
    TraceOperation 086015 (Print_ret "You get a powerful electric shock.");
    GamePrint "You get a powerful electric shock.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 086038:
  TraceOperation 086038 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 086042 (Print "The ");
    GamePrint "The ";
    TraceOperation 086045 (Print_obj (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 086047 (Print " is square, about ten inches on each side.");
    GamePrint " is square, about ten inches on each side.";
    TraceOperation 086074 (Call (Floc 057998) [] Sp);
    PushFrame;
    PushReturnAddress 086074;
    MakeRoutineFrame 0;
    Jump: 057999
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
LocReturn 086074:
  PushStack call_result;
  TraceOperation 086079 New_line;
  GamePrint "\n";
  TraceOperation 086080 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 086082:
  MakeRoutineFrame 0;
  Jump: 086083
LocOp 086083:
  TraceOperation 086083 New_line;
  GamePrint "\n";
  TraceOperation 086084 (Store (Con 96) (Con 60));
  SetByte 008068 0;
  SetByte 008069 60;
  TraceOperation 086087 (Print "It is of course well known that careless talk costs lives, but the full scale of the problem is not always appreciated. For instance, at the exact moment you said \"");
  GamePrint "It is of course well known that careless talk costs lives, but the full scale of the problem is not always appreciated. For instance, at the exact moment you said \"";
  TraceOperation 086186 (Call (Floc 021902) [Var (Global 233)] Sp);
  Let b1 = M[008374];
  Let b2 = M[008375];
  PushFrame;
  PushReturnAddress 086186;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 021907
LocReturn 086186:
  PushStack call_result;
  TraceOperation 086192 (Print "\" a freak wormhole opened in the fabric of the space-time continuum and carried your words far far back in time across almost infinite reaches of space to a distant galaxy where strange and warlike beings were poised on the brink of frightful interstellar battle.\n\nThe two opposing leaders were meeting for the last time. A dreadful silence fell across the conference table as the commander of the Vl'Hurgs, resplendent in his");
  GamePrint "\" a freak wormhole opened in the fabric of the space-time continuum and carried your words far far back in time across almost infinite reaches of space to a distant galaxy where strange and warlike beings were poised on the brink of frightful interstellar battle.\n\nThe two opposing leaders were meeting for the last time. A dreadful silence fell across the conference table as the commander of the Vl'Hurgs, resplendent in his";
  TraceOperation 086451 (Print_paddr (Var (Global 39)));
  Let b1 = M[007986];
  Let b2 = M[007987];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 086453 (Print "gazed levelly at the ");
  GamePrint "gazed levelly at the ";
  TraceOperation 086466 (Print_obj (Con 83));
  Let b3 = M[001505];
  Let b4 = M[001506];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 086468 (Print " squatting opposite him");
  GamePrint " squatting opposite him";
  TraceOperation 086485 (Print_paddr (Var (Global 38)));
  Let b7 = M[007984];
  Let b8 = M[007985];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
  TraceOperation 086487 (Print "As a million sleek and horribly beweaponed star cruisers poised to unleash electric death at his single word of command, the Vl'Hurg challenged his vile enemy to take back what it had said about his mother.\n\nThe creature stirred in its sickly broiling vapour, and at that very moment the words \"");
  GamePrint "As a million sleek and horribly beweaponed star cruisers poised to unleash electric death at his single word of command, the Vl'Hurg challenged his vile enemy to take back what it had said about his mother.\n\nThe creature stirred in its sickly broiling vapour, and at that very moment the words \"";
  TraceOperation 086666 (Call (Floc 021902) [Var (Global 233)] Sp);
  Let b9 = M[008374];
  Let b10 = M[008375];
  PushFrame;
  PushReturnAddress 086666;
  SetLocal 1 MakeHiLo(b9,b10);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 021907
LocReturn 086666:
  PushStack call_result;
  TraceOperation 086672 (Print_ret "\" drifted across the conference table. Unfortunately, in the Vl'hurg tongue this was the most dreadful insult imaginable, and there was nothing for it but to wage terrible war for centuries. Eventually the error was detected, but over two hundred and fifty thousand worlds, their peoples and cultures perished in the holocaust.\n\nYou have destroyed most of a small galaxy. Please pick your words with greater care.");
  GamePrint "\" drifted across the conference table. Unfortunately, in the Vl'hurg tongue this was the most dreadful insult imaginable, and there was nothing for it but to wage terrible war for centuries. Eventually the error was detected, but over two hundred and fifty thousand worlds, their peoples and cultures perished in the holocaust.\n\nYou have destroyed most of a small galaxy. Please pick your words with greater care.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 086904:
  MakeRoutineFrame 0;
  Jump: 086905
LocOp 086905:
  TraceOperation 086905 (Je [Var (Global 203),Con 38] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 086909 (Print_paddr (Var (Global 57)));
    Let b3 = M[008022];
    Let b4 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 086911 New_line;
    GamePrint "\n";
    TraceOperation 086912 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 086914:
  MakeRoutineFrame 0;
  Jump: 086915
LocOp 086915:
  TraceOperation 086915 (Je [Var (Global 203),Con 63] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 086919 (Print "Through the ");
    GamePrint "Through the ";
    TraceOperation 086928 (Print_obj (Con 85));
    Let b3 = M[001523];
    Let b4 = M[001524];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 086930 (Print " of the ship you can see a vast ");
    GamePrint " of the ship you can see a vast ";
    TraceOperation 086947 (Print_obj (Con 87));
    Let b7 = M[001541];
    Let b8 = M[001542];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
    GamePrint ite_res10;
    TraceOperation 086949 (Print_ret " flying in formation behind you through the black, glittering emptiness of space. Ahead is a star system towards which you are hurtling at a terrifying speed.");
    GamePrint " flying in formation behind you through the black, glittering emptiness of space. Ahead is a star system towards which you are hurtling at a terrifying speed.\n";
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 1;
    JumpIndirect: (return) return_address_11
  } else {
    PopFrame;
    PopReturnAddress return_address_12;
    SetResult 0;
    JumpIndirect: (return) return_address_12
  }
--------------------------------------------------
LocRoutine 087042:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 087045
LocOp 087045:
  TraceOperation 087045 (Je [Var (Local 1),Con 2] (Branch F (Dloc 087073)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 087049 (Clear_attr (Con 148) (Con 6));
    Let b2 = M[002083];
    SetByte 002083 ClearBit(b2,1);
    TraceOperation 087052 (Insert_obj (Con 163) (Var (Global 0)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[002222];
    if (IsZero(Widen(b5))) {} else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b6),163)) {
        Let b7 = M[002223];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
      } else {
        Let loop_var8 = Widen(b6);
        Label 9: {
          Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
          if (Equal(Widen(b10),163)) {
            Let b11 = M[002223];
            SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
          } else {
            Assign loop_var8 = Widen(b10);
            Goto: Label 9
          }
        }
      }
    }
    SetByte 002222 b4;
    Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte 002223 LoByte(Widen(b12));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 163;
    TraceOperation 087055 (Store (Con 91) (Con 1));
    SetByte 008058 0;
    SetByte 008059 1;
    TraceOperation 087058 (Call (Floc 022320) [Con -30860,Con -1] Sp);
    PushFrame;
    PushReturnAddress 087058;
    SetLocal 1 -30860;
    SetLocal 2 -1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 087073
  }
LocReturn 087058:
  PushStack call_result;
  TraceOperation 087067 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 087072 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 087073:
  TraceOperation 087073 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 087077 (Print "Spread before you, astonishingly enough, is the ");
    GamePrint "Spread before you, astonishingly enough, is the ";
    TraceOperation 087108 (Print_obj (Con 86));
    Let b2 = M[001532];
    Let b3 = M[001533];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 087110 (Print " of a star battle cruiser. ");
    GamePrint " of a star battle cruiser. ";
    TraceOperation 087129 (Call (Floc 022042) [Con 63,Con 85] Sp);
    PushFrame;
    PushReturnAddress 087129;
    SetLocal 1 63;
    SetLocal 2 85;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 087129:
  PushStack call_result;
  TraceOperation 087136 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 087138:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 087141
LocOp 087141:
  TraceOperation 087141 New_line;
  GamePrint "\n";
  TraceOperation 087142 (Print "Standing near you are two creatures who are gazing at the star system with terrible hatred in their eyes. One is wearing");
  GamePrint "Standing near you are two creatures who are gazing at the star system with terrible hatred in their eyes. One is wearing";
  TraceOperation 087213 (Print_paddr (Var (Global 39)));
  Let b1 = M[007986];
  Let b2 = M[007987];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 087215 (Print "and the other is wreathed");
  GamePrint "and the other is wreathed";
  TraceOperation 087230 (Print_paddr (Var (Global 38)));
  Let b3 = M[007984];
  Let b4 = M[007985];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
  TraceOperation 087232 (Print "They are engaged in ");
  GamePrint "They are engaged in ";
  TraceOperation 087245 (Print_obj (Con 148));
  Let b5 = M[002090];
  Let b6 = M[002091];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
  GamePrint ite_res8;
  TraceOperation 087247 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_9;
  SetResult 1;
  JumpIndirect: (return) return_address_9
--------------------------------------------------
LocRoutine 087250:
  MakeRoutineFrame 0;
  Jump: 087251
LocOp 087251:
  TraceOperation 087251 (Je [Var (Global 203),Con 15] (Branch F (Dloc 087383)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 087256 (Print "You are clearly the worst diplomat that ever lived, and are about to become the worst one that ever died. That is an even worse insult in the G'Gugvunt tongue than \"");
    GamePrint "You are clearly the worst diplomat that ever lived, and are about to become the worst one that ever died. That is an even worse insult in the G'Gugvunt tongue than \"";
    TraceOperation 087349 (Call (Floc 021902) [Var (Global 233)] Sp);
    Let b3 = M[008374];
    Let b4 = M[008375];
    PushFrame;
    PushReturnAddress 087349;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 021907
  } else {
    Jump: 087383
  }
LocReturn 087349:
  PushStack call_result;
  TraceOperation 087355 (Print "\" is in the Vl'Hurg tongue.");
  GamePrint "\" is in the Vl'Hurg tongue.";
  TraceOperation 087376 New_line;
  GamePrint "\n";
  TraceOperation 087377 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 087377;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 087377:
  PushStack call_result;
  TraceOperation 087382 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 087383:
  TraceOperation 087383 (Je [Var (Global 203),Con 61] (Branch F (Dloc 087413)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 087387 (Print "The ");
    GamePrint "The ";
    TraceOperation 087390 (Print_obj (Con 84));
    Let b3 = M[001514];
    Let b4 = M[001515];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 087392 (Print_ret " looks typically Vl'Hurgish.");
    GamePrint " looks typically Vl'Hurgish.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 087413
  }
LocOp 087413:
  TraceOperation 087413 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 087417 (Test_attr (Con 84) (Con 3) (Branch F (Dloc 087456)));
    Let b3 = M[001507];
    if (TestBit(b3,4)) {
      TraceOperation 087421 (Print_ret "The creatures are speculating about who you are and what to do with you.");
      GamePrint "The creatures are speculating about who you are and what to do with you.\n";
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      Jump: 087456
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocOp 087456:
  TraceOperation 087456 (Set_attr (Con 84) (Con 3));
  Let b1 = M[001507];
  SetByte 001507 SetBit(b1,4);
  TraceOperation 087459 (Print "  \"Hated planet!\" snarls the Vl'Hurg.\n  \"Home of he that dared to say '");
  GamePrint "  \"Hated planet!\" snarls the Vl'Hurg.\n  \"Home of he that dared to say '";
  TraceOperation 087512 (Call (Floc 021902) [Var (Global 233)] Sp);
  Let b2 = M[008374];
  Let b3 = M[008375];
  PushFrame;
  PushReturnAddress 087512;
  SetLocal 1 MakeHiLo(b2,b3);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 021907
LocReturn 087512:
  PushStack call_result;
  TraceOperation 087518 (Print "'\" rasps the G'Gugvunt.\n  \"Detested words! Even now it sticks my soul to hear them uttered,\" barks the Vl'Hurg, \"even though ten thousand years have passed...\"\n  \"And as many senseless megadeaths! Worlds destroyed! My race and yours laid to waste! All because of he that dared shape the words '");
  GamePrint "'\" rasps the G'Gugvunt.\n  \"Detested words! Even now it sticks my soul to hear them uttered,\" barks the Vl'Hurg, \"even though ten thousand years have passed...\"\n  \"And as many senseless megadeaths! Worlds destroyed! My race and yours laid to waste! All because of he that dared shape the words '";
  TraceOperation 087717 (Call (Floc 021902) [Var (Global 233)] Sp);
  Let b1 = M[008374];
  Let b2 = M[008375];
  PushFrame;
  PushReturnAddress 087717;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 021907
LocReturn 087717:
  PushStack call_result;
  TraceOperation 087723 (Print "'.\"\n  \"Torture to my Vl'Hurgish warrior heart to hear it spoken! Yet, even now, the hot breath of our vengeance blows hard upon this little world...\"\n  \"Vengeance on him who said '");
  GamePrint "'.\"\n  \"Torture to my Vl'Hurgish warrior heart to hear it spoken! Yet, even now, the hot breath of our vengeance blows hard upon this little world...\"\n  \"Vengeance on him who said '";
  TraceOperation 087844 (Call (Floc 021902) [Var (Global 233)] Sp);
  Let b1 = M[008374];
  Let b2 = M[008375];
  PushFrame;
  PushReturnAddress 087844;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 021907
LocReturn 087844:
  PushStack call_result;
  TraceOperation 087850 (Print "'.\"\n  \"Yes, there's no need to keep repeating it,\" growls the Vl'Hurg.\n  \"One happy thought,\" adds the G'Gugvunt. \"After millenia of bloody and perpetual conflict, our races have been brought together by this Quest for the Source of the Offending Remark. Perhaps, after our vengeance has been exacted on him who said '");
  GamePrint "'.\"\n  \"Yes, there's no need to keep repeating it,\" growls the Vl'Hurg.\n  \"One happy thought,\" adds the G'Gugvunt. \"After millenia of bloody and perpetual conflict, our races have been brought together by this Quest for the Source of the Offending Remark. Perhaps, after our vengeance has been exacted on him who said '";
  TraceOperation 088065 (Call (Floc 021902) [Var (Global 233)] Sp);
  Let b1 = M[008374];
  Let b2 = M[008375];
  PushFrame;
  PushReturnAddress 088065;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 021907
LocReturn 088065:
  PushStack call_result;
  TraceOperation 088071 (Print_ret "'...\"\n  \"Will you stop saying it?\"\n  \"...perhaps we will continue to live in peace and harmony and...\"\n  \"We will talk about that AFTER we ... who's this?\"\n\nThe two creatures turn and stare at you.");
  GamePrint "'...\"\n  \"Will you stop saying it?\"\n  \"...perhaps we will continue to live in peace and harmony and...\"\n  \"We will talk about that AFTER we ... who's this?\"\n\nThe two creatures turn and stare at you.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088210:
  MakeRoutineFrame 0;
  Jump: 088211
LocOp 088211:
  TraceOperation 088211 (Je [Var (Global 203),Con 15] (Branch F (Dloc 088228)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),15)) {
    TraceOperation 088215 (Call (Floc 022042) [Con 15,Con 84] Sp);
    PushFrame;
    PushReturnAddress 088215;
    SetLocal 1 15;
    SetLocal 2 84;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 088228
  }
LocReturn 088215:
  PushStack call_result;
  TraceOperation 088222 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 088222;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 088222:
  PushStack call_result;
  TraceOperation 088227 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 088228:
  TraceOperation 088228 (Je [Var (Global 203),Con 61] (Branch F (Dloc 088264)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 088232 (Print "The ");
    GamePrint "The ";
    TraceOperation 088235 (Print_obj (Con 83));
    Let b3 = M[001505];
    Let b4 = M[001506];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 088237 (Print_ret " is looking typically G'Gugvuntish.");
    GamePrint " is looking typically G'Gugvuntish.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    Jump: 088264
  }
LocOp 088264:
  TraceOperation 088264 (Je [Var (Global 203),Con 74] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 088268 (Call (Floc 022042) [Con 74,Con 84] Sp);
    PushFrame;
    PushReturnAddress 088268;
    SetLocal 1 74;
    SetLocal 2 84;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 088268:
  PushStack call_result;
  TraceOperation 088275 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088276:
  MakeRoutineFrame 0;
  Jump: 088277
LocOp 088277:
  TraceOperation 088277 (Jz (Var (Global 122)) (Branch F (Dloc 088302)));
  Let b1 = M[008152];
  Let b2 = M[008153];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 088280 (Je [Var (Global 201),Con 163] (Branch F (Dloc 088293)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),163)) {
      TraceOperation 088284 (Call (Floc 022042) [Var (Global 203),Con 42,Var (Global 202)] Sp);
      Let b5 = M[008314];
      Let b6 = M[008315];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame;
      PushReturnAddress 088284;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 42;
      SetLocal 3 MakeHiLo(b7,b8);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 088293
    }
  } else {
    Jump: 088302
  }
LocReturn 088284:
  PushStack call_result;
  TraceOperation 088292 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 088293:
  TraceOperation 088293 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 42] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 088293;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 42;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 088293:
  PushStack call_result;
  TraceOperation 088301 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 088302:
  TraceOperation 088302 (Je [Var (Global 203),Con 48,Con 86] (Branch F (Dloc 088315)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 088308 (Print_ret "You did!");
    GamePrint "You did!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 088315
  }
LocOp 088315:
  TraceOperation 088315 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 088319 (Print "It is an utterly insignificant little blue-green planet, of the sort where they probably still wear ");
    GamePrint "It is an utterly insignificant little blue-green planet, of the sort where they probably still wear ";
    TraceOperation 088376 (Print_obj (Con 144));
    Let b3 = M[002054];
    Let b4 = M[002055];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 088378 (Print_ret "es.");
    GamePrint "es.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
--------------------------------------------------
LocRoutine 088384:
  MakeRoutineFrame 0;
  Jump: 088385
LocOp 088385:
  TraceOperation 088385 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 088389 (Jl (Con 40) (Var Sp) (Branch T (Dloc 088440)));
  PopStack popped2;
  if (LessThan(40,popped2)) {
    Jump: 088440
  } else {
    TraceOperation 088393 (Print "An electrical impulse across a synapse gap temporarily blocks your way.");
    GamePrint "An electrical impulse across a synapse gap temporarily blocks your way.";
    TraceOperation 088438 New_line;
    GamePrint "\n";
    TraceOperation 088439 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocOp 088440:
  TraceOperation 088440 (Inc (Con 114));
  Let b1 = M[008104];
  Let b2 = M[008105];
  SetByte 008104 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008105 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 088442 (Je [Var (Global 98),Con 3,Con 17,Con 36] (Branch F (Dloc 088455)));
  Let b3 = M[008104];
  Let b4 = M[008105];
  if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),3),Equal(MakeHiLo(b3,b4),17)),Equal(MakeHiLo(b3,b4),36))) {
    TraceOperation 088449 (Insert_obj (Con 78) (Var (Global 0)));
    Let b5 = M[007908];
    Let b6 = M[007909];
    Let b7 = M[001457];
    if (IsZero(Widen(b7))) {} else {
      Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
      if (Equal(Widen(b8),78)) {
        Let b9 = M[001458];
        SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
      } else {
        Let loop_var10 = Widen(b8);
        Label 11: {
          Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
          if (Equal(Widen(b12),78)) {
            Let b13 = M[001458];
            SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
          } else {
            Assign loop_var10 = Widen(b12);
            Goto: Label 11
          }
        }
      }
    }
    SetByte 001457 b6;
    Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
    SetByte 001458 LoByte(Widen(b14));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 78;
    TraceOperation 088452 (Jump 088458);
    Jump: 088458
  } else {
    Jump: 088455
  }
LocOp 088455:
  TraceOperation 088455 (Insert_obj (Con 78) (Con 219));
  Let b1 = M[001457];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),78)) {
      Let b3 = M[001458];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),78)) {
          Let b7 = M[001458];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 001457 219;
  Let b8 = M[002728];
  SetByte 001458 LoByte(Widen(b8));
  SetByte 002728 78;
  Jump: 088458
LocOp 088458:
  TraceOperation 088458 (Call (Floc 034400) [] Sp);
  PushFrame;
  PushReturnAddress 088458;
  MakeRoutineFrame 0;
  Jump: 034401
LocReturn 088458:
  PushStack call_result;
  TraceOperation 088463 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088464:
  MakeRoutineFrame 0;
  Jump: 088465
LocOp 088465:
  TraceOperation 088465 (Je [Var (Global 203),Con 98,Con 124] (Branch F (Dloc 088505)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),98),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 088471 (Insert_obj (Con 78) (Con 219));
    Let b3 = M[001457];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),78)) {
        Let b5 = M[001458];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),78)) {
            Let b9 = M[001458];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 001457 219;
    Let b10 = M[002728];
    SetByte 001458 LoByte(Widen(b10));
    SetByte 002728 78;
    TraceOperation 088474 (Set_attr (Con 78) (Con 3));
    Let b11 = M[001453];
    SetByte 001453 SetBit(b11,4);
    TraceOperation 088477 (Add (Var (Global 1)) (Con 25) (Global 1));
    Let b12 = M[007910];
    Let b13 = M[007911];
    SetByte 007910 HiByte(Add(MakeHiLo(b12,b13),25));
    SetByte 007911 LoByte(Add(MakeHiLo(b12,b13),25));
    TraceOperation 088481 (Set_attr (Con 86) (Con 4));
    Let b14 = M[001525];
    SetByte 001525 SetBit(b14,3);
    TraceOperation 088484 (Print "As you remove the ");
    GamePrint "As you remove the ";
    TraceOperation 088495 (Print_obj (Con 78));
    Let b15 = M[001460];
    Let b16 = M[001461];
    Let b17 = M[Address(MakeHiLo(b15,b16))];
    Let ite_res18 = Ite((IsZeroByte(b17),"",GetText(Offset(Address(MakeHiLo(b15,b16)),1))));
    GamePrint ite_res18;
    TraceOperation 088497 (Call (Floc 042734) [Con -10308] Sp);
    PushFrame;
    PushReturnAddress 088497;
    SetLocal 1 -10308;
    MakeRoutineFrame 1;
    Jump: 042737
  } else {
    Jump: 088505
  }
LocReturn 088497:
  PushStack call_result;
  TraceOperation 088504 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 088505:
  TraceOperation 088505 (Je [Var (Global 203),Con 120,Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),120),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 088511 (Print "As you look closer you see, inscribed in tiny letters on the ");
    GamePrint "As you look closer you see, inscribed in tiny letters on the ";
    TraceOperation 088548 (Print_obj (Con 78));
    Let b3 = M[001460];
    Let b4 = M[001461];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 088550 (Print_ret ":\n\n  Sense, Common for:\n     Dent, Arthur\n   (for replacement,\n  order part #31-541)");
    GamePrint ":\n\n  Sense, Common for:\n     Dent, Arthur\n   (for replacement,\n  order part #31-541)\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
--------------------------------------------------
LocRoutine 088618:
  MakeRoutineFrame 0;
  Jump: 088619
LocOp 088619:
  TraceOperation 088619 (Je [Var (Global 203),Con 59,Con 86] (Branch F (Dloc 088642)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),59),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 088625 (Je [Var (Global 0),Con 76] (Branch F (Dloc 088636)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),76)) {
      TraceOperation 088629 (Call (Floc 043620) [Con 16] Sp);
      PushFrame;
      PushReturnAddress 088629;
      SetLocal 1 16;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 088636
    }
  } else {
    Jump: 088642
  }
LocReturn 088629:
  PushStack call_result;
  TraceOperation 088635 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 088636:
  TraceOperation 088636 (Call (Floc 040326) [] Sp);
  PushFrame;
  PushReturnAddress 088636;
  MakeRoutineFrame 0;
  Jump: 040327
LocReturn 088636:
  PushStack call_result;
  TraceOperation 088641 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 088642:
  TraceOperation 088642 (Je [Var (Global 203),Con 38] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 088646 (Print_paddr (Var (Global 57)));
    Let b3 = M[008022];
    Let b4 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 088648 New_line;
    GamePrint "\n";
    TraceOperation 088649 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 088650:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 088653
LocOp 088653:
  TraceOperation 088653 (Print "You are in a large ");
  GamePrint "You are in a large ";
  TraceOperation 088662 (Print_obj (Var (Local 1)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),7)];
  Let b3 = M[Offset(Offset(Offset(000751,Mul(local1_1,9)),7),1)];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 088664 (Print ". There is a party going on. Other rooms lie to the ");
  GamePrint ". There is a party going on. Other rooms lie to the ";
  TraceOperation 088693 Rtrue;
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
--------------------------------------------------
LocRoutine 088694:
  MakeRoutineFrame 0;
  Jump: 088695
LocOp 088695:
  TraceOperation 088695 (Test_attr (Con 75) (Con 23) (Branch F (Dloc 088742)));
  Let b1 = M[001428];
  if (TestBit(b1,0)) {
    TraceOperation 088699 (Print "What! Leave a fun party like this?");
    GamePrint "What! Leave a fun party like this?";
    TraceOperation 088724 New_line;
    GamePrint "\n";
    TraceOperation 088725 (Store (Con 229) (Con 3));
    SetByte 008334 0;
    SetByte 008335 3;
    TraceOperation 088728 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame;
    PushReturnAddress 088728;
    SetLocal 1 -14349;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 088742
  }
LocReturn 088728:
  PushStack call_result;
  TraceOperation 088736 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 088741 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 088742:
  TraceOperation 088742 (Print "The door is closed.");
  GamePrint "The door is closed.";
  TraceOperation 088753 New_line;
  GamePrint "\n";
  TraceOperation 088754 (Store (Con 207) (Con 75));
  SetByte 008290 0;
  SetByte 008291 75;
  TraceOperation 088757 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 088758:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 088761
LocOp 088761:
  TraceOperation 088761 (Je [Var (Local 1),Con 2] (Branch F (Dloc 089029)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 088766 (Je [Var (Global 120),Con 194] (Branch T (Dloc 089029)));
    Let b2 = M[008148];
    Let b3 = M[008149];
    if (Equal(MakeHiLo(b2,b3),194)) {
      Jump: 089029
    } else {
      TraceOperation 088771 (Get_parent (Con 193) Sp);
      Let b4 = M[002492];
      PushStack Widen(b4);
      TraceOperation 088774 (Storew (Var (Global 94)) (Con 0) (Var Sp));
      Let b5 = M[008096];
      Let b6 = M[008097];
      PopStack popped7;
      SetByte Offset(Address(MakeHiLo(b5,b6)),0) HiByte(popped7);
      SetByte Offset(Offset(Address(MakeHiLo(b5,b6)),0),1) LoByte(popped7);
      TraceOperation 088779 (Get_parent (Con 13) Sp);
      Let b8 = M[000872];
      PushStack Widen(b8);
      TraceOperation 088782 (Storew (Var (Global 94)) (Con 1) (Var Sp));
      Let b9 = M[008096];
      Let b10 = M[008097];
      PopStack popped11;
      SetByte Offset(Address(MakeHiLo(b9,b10)),2) HiByte(popped11);
      SetByte Offset(Offset(Address(MakeHiLo(b9,b10)),2),1) LoByte(popped11);
      TraceOperation 088787 (Test_attr (Con 193) (Con 23) (Branch F (Dloc 088799)));
      Let b12 = M[002490];
      if (TestBit(b12,0)) {
        TraceOperation 088791 (Storew (Var (Global 94)) (Con 2) (Con 1));
        Let b13 = M[008096];
        Let b14 = M[008097];
        SetByte Offset(Address(MakeHiLo(b13,b14)),4) 0;
        SetByte Offset(Offset(Address(MakeHiLo(b13,b14)),4),1) 1;
        TraceOperation 088796 (Jump 088804);
        Jump: 088804
      } else {
        Jump: 088799
      }
    }
  } else {
    Jump: 089029
  }
LocOp 088799:
  TraceOperation 088799 (Storew (Var (Global 94)) (Con 2) (Con 0));
  Let b1 = M[008096];
  Let b2 = M[008097];
  SetByte Offset(Address(MakeHiLo(b1,b2)),4) 0;
  SetByte Offset(Offset(Address(MakeHiLo(b1,b2)),4),1) 0;
  Jump: 088804
LocOp 088804:
  TraceOperation 088804 (Store (Con 136) (Con 194));
  SetByte 008148 0;
  SetByte 008149 194;
  TraceOperation 088807 (Insert_obj (Con 194) (Con 169));
  Let b1 = M[002501];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),194)) {
      Let b3 = M[002502];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),194)) {
          Let b7 = M[002502];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002501 169;
  Let b8 = M[002278];
  SetByte 002502 LoByte(Widen(b8));
  SetByte 002278 194;
  TraceOperation 088810 (Store (Con 91) (Con 1));
  SetByte 008058 0;
  SetByte 008059 1;
  TraceOperation 088813 (Call (Floc 043644) [Con 31,Con 97] Sp);
  PushFrame;
  PushReturnAddress 088813;
  SetLocal 1 31;
  SetLocal 2 97;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 043653
LocReturn 088813:
  PushStack call_result;
  TraceOperation 088820 (Call (Floc 043644) [Con 193,Con 174] Sp);
  PushFrame;
  PushReturnAddress 088820;
  SetLocal 1 193;
  SetLocal 2 174;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 043653
LocReturn 088820:
  PushStack call_result;
  TraceOperation 088827 (Clear_attr (Con 193) (Con 23));
  Let b1 = M[002490];
  SetByte 002490 ClearBit(b1,0);
  TraceOperation 088830 (Insert_obj (Con 193) (Con 31));
  Let b2 = M[002492];
  if (IsZero(Widen(b2))) {} else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b3),193)) {
      Let b4 = M[002493];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
    } else {
      Let loop_var5 = Widen(b3);
      Label 6: {
        Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
        if (Equal(Widen(b7),193)) {
          Let b8 = M[002493];
          SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
        } else {
          Assign loop_var5 = Widen(b7);
          Goto: Label 6
        }
      }
    }
  }
  SetByte 002492 31;
  Let b9 = M[001036];
  SetByte 002493 LoByte(Widen(b9));
  SetByte 001036 193;
  TraceOperation 088833 (Insert_obj (Con 13) (Con 193));
  Let b10 = M[000872];
  if (IsZero(Widen(b10))) {} else {
    Let b11 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
    if (Equal(Widen(b11),13)) {
      Let b12 = M[000873];
      SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b12));
    } else {
      Let loop_var13 = Widen(b11);
      Label 14: {
        Let b15 = M[Offset(Offset(000751,Mul(loop_var13,9)),5)];
        if (Equal(Widen(b15),13)) {
          Let b16 = M[000873];
          SetByte Offset(Offset(000751,Mul(loop_var13,9)),5) LoByte(Widen(b16));
        } else {
          Assign loop_var13 = Widen(b15);
          Goto: Label 14
        }
      }
    }
  }
  SetByte 000872 193;
  Let b17 = M[002494];
  SetByte 000873 LoByte(Widen(b17));
  SetByte 002494 13;
  TraceOperation 088836 (Insert_obj (Con 72) (Con 31));
  Let b18 = M[001403];
  if (IsZero(Widen(b18))) {} else {
    Let b19 = M[Offset(Offset(000751,Mul(Widen(b18),9)),6)];
    if (Equal(Widen(b19),72)) {
      Let b20 = M[001404];
      SetByte Offset(Offset(000751,Mul(Widen(b18),9)),6) LoByte(Widen(b20));
    } else {
      Let loop_var21 = Widen(b19);
      Label 22: {
        Let b23 = M[Offset(Offset(000751,Mul(loop_var21,9)),5)];
        if (Equal(Widen(b23),72)) {
          Let b24 = M[001404];
          SetByte Offset(Offset(000751,Mul(loop_var21,9)),5) LoByte(Widen(b24));
        } else {
          Assign loop_var21 = Widen(b23);
          Goto: Label 22
        }
      }
    }
  }
  SetByte 001403 31;
  Let b25 = M[001036];
  SetByte 001404 LoByte(Widen(b25));
  SetByte 001036 72;
  TraceOperation 088839 (Insert_obj (Con 71) (Con 31));
  Let b26 = M[001394];
  if (IsZero(Widen(b26))) {} else {
    Let b27 = M[Offset(Offset(000751,Mul(Widen(b26),9)),6)];
    if (Equal(Widen(b27),71)) {
      Let b28 = M[001395];
      SetByte Offset(Offset(000751,Mul(Widen(b26),9)),6) LoByte(Widen(b28));
    } else {
      Let loop_var29 = Widen(b27);
      Label 30: {
        Let b31 = M[Offset(Offset(000751,Mul(loop_var29,9)),5)];
        if (Equal(Widen(b31),71)) {
          Let b32 = M[001395];
          SetByte Offset(Offset(000751,Mul(loop_var29,9)),5) LoByte(Widen(b32));
        } else {
          Assign loop_var29 = Widen(b31);
          Goto: Label 30
        }
      }
    }
  }
  SetByte 001394 31;
  Let b33 = M[001036];
  SetByte 001395 LoByte(Widen(b33));
  SetByte 001036 71;
  TraceOperation 088842 (Insert_obj (Con 123) (Var (Global 0)));
  Let b34 = M[007908];
  Let b35 = M[007909];
  Let b36 = M[001862];
  if (IsZero(Widen(b36))) {} else {
    Let b37 = M[Offset(Offset(000751,Mul(Widen(b36),9)),6)];
    if (Equal(Widen(b37),123)) {
      Let b38 = M[001863];
      SetByte Offset(Offset(000751,Mul(Widen(b36),9)),6) LoByte(Widen(b38));
    } else {
      Let loop_var39 = Widen(b37);
      Label 40: {
        Let b41 = M[Offset(Offset(000751,Mul(loop_var39,9)),5)];
        if (Equal(Widen(b41),123)) {
          Let b42 = M[001863];
          SetByte Offset(Offset(000751,Mul(loop_var39,9)),5) LoByte(Widen(b42));
        } else {
          Assign loop_var39 = Widen(b41);
          Goto: Label 40
        }
      }
    }
  }
  SetByte 001862 b35;
  Let b43 = M[Offset(Offset(000751,Mul(MakeHiLo(b34,b35),9)),6)];
  SetByte 001863 LoByte(Widen(b43));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b34,b35),9)),6) 123;
  TraceOperation 088845 (Insert_obj (Con 196) (Var (Global 0)));
  Let b44 = M[007908];
  Let b45 = M[007909];
  Let b46 = M[002519];
  if (IsZero(Widen(b46))) {} else {
    Let b47 = M[Offset(Offset(000751,Mul(Widen(b46),9)),6)];
    if (Equal(Widen(b47),196)) {
      Let b48 = M[002520];
      SetByte Offset(Offset(000751,Mul(Widen(b46),9)),6) LoByte(Widen(b48));
    } else {
      Let loop_var49 = Widen(b47);
      Label 50: {
        Let b51 = M[Offset(Offset(000751,Mul(loop_var49,9)),5)];
        if (Equal(Widen(b51),196)) {
          Let b52 = M[002520];
          SetByte Offset(Offset(000751,Mul(loop_var49,9)),5) LoByte(Widen(b52));
        } else {
          Assign loop_var49 = Widen(b51);
          Goto: Label 50
        }
      }
    }
  }
  SetByte 002519 b45;
  Let b53 = M[Offset(Offset(000751,Mul(MakeHiLo(b44,b45),9)),6)];
  SetByte 002520 LoByte(Widen(b53));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b44,b45),9)),6) 196;
  TraceOperation 088848 (Insert_obj (Con 68) (Var (Global 0)));
  Let b54 = M[007908];
  Let b55 = M[007909];
  Let b56 = M[001367];
  if (IsZero(Widen(b56))) {} else {
    Let b57 = M[Offset(Offset(000751,Mul(Widen(b56),9)),6)];
    if (Equal(Widen(b57),68)) {
      Let b58 = M[001368];
      SetByte Offset(Offset(000751,Mul(Widen(b56),9)),6) LoByte(Widen(b58));
    } else {
      Let loop_var59 = Widen(b57);
      Label 60: {
        Let b61 = M[Offset(Offset(000751,Mul(loop_var59,9)),5)];
        if (Equal(Widen(b61),68)) {
          Let b62 = M[001368];
          SetByte Offset(Offset(000751,Mul(loop_var59,9)),5) LoByte(Widen(b62));
        } else {
          Assign loop_var59 = Widen(b61);
          Goto: Label 60
        }
      }
    }
  }
  SetByte 001367 b55;
  Let b63 = M[Offset(Offset(000751,Mul(MakeHiLo(b54,b55),9)),6)];
  SetByte 001368 LoByte(Widen(b63));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b54,b55),9)),6) 68;
  TraceOperation 088851 (Print "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...");
  GamePrint "You're at a party being given by a distant and incredibly boring acquaintance. Among the people you've been introduced to are a shy, mousy fellow from the West Country named Arthur, and a flamboyant guy named Phil. You've had too many drinks already, and the room is beginning to buzz...";
  TraceOperation 089026 New_line;
  GamePrint "\n";
  TraceOperation 089027 New_line;
  GamePrint "\n";
  TraceOperation 089028 Rtrue;
  PopFrame;
  PopReturnAddress return_address_64;
  SetResult 1;
  JumpIndirect: (return) return_address_64
LocOp 089029:
  TraceOperation 089029 (Je [Var (Local 1),Con 6] (Branch F (Dloc 089046)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 089033 (Test_attr (Con 76) (Con 4) (Branch F (Dloc 089046)));
    Let b2 = M[001435];
    if (TestBit(b2,3)) {
      TraceOperation 089037 New_line;
      GamePrint "\n";
      TraceOperation 089038 (Call (Floc 042734) [Con -10272] Sp);
      PushFrame;
      PushReturnAddress 089038;
      SetLocal 1 -10272;
      MakeRoutineFrame 1;
      Jump: 042737
    } else {
      Jump: 089046
    }
  } else {
    Jump: 089046
  }
LocReturn 089038:
  PushStack call_result;
  TraceOperation 089045 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 089046:
  TraceOperation 089046 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 089050 (Call (Floc 088650) [Con 76] Sp);
    PushFrame;
    PushReturnAddress 089050;
    SetLocal 1 76;
    MakeRoutineFrame 1;
    Jump: 088653
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocReturn 089050:
  PushStack call_result;
  TraceOperation 089056 (Print "west and southwest, and the ");
  GamePrint "west and southwest, and the ";
  TraceOperation 089073 (Print_obj (Con 77));
  Let b1 = M[001451];
  Let b2 = M[001452];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 089075 (Print_ret "'s front door is south of here.");
  GamePrint "'s front door is south of here.\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
--------------------------------------------------
LocRoutine 089094:
  MakeRoutineFrame 0;
  Jump: 089095
LocOp 089095:
  TraceOperation 089095 (Je [Var (Global 203),Con 38] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 089099 (Call (Floc 043620) [Con 16] Sp);
    PushFrame;
    PushReturnAddress 089099;
    SetLocal 1 16;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 089099:
  PushStack call_result;
  TraceOperation 089105 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 089106:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089109
LocOp 089109:
  TraceOperation 089109 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 089113 (Call (Floc 088650) [Con 74] Sp);
    PushFrame;
    PushReturnAddress 089113;
    SetLocal 1 74;
    MakeRoutineFrame 1;
    Jump: 088653
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocReturn 089113:
  PushStack call_result;
  TraceOperation 089119 (Print_ret "south and east.");
  GamePrint "south and east.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089130:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089133
LocOp 089133:
  TraceOperation 089133 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 089137 (Call (Floc 088650) [Con 73] Sp);
    PushFrame;
    PushReturnAddress 089137;
    SetLocal 1 73;
    MakeRoutineFrame 1;
    Jump: 088653
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocReturn 089137:
  PushStack call_result;
  TraceOperation 089143 (Print_ret "north and northeast.");
  GamePrint "north and northeast.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089158:
  MakeRoutineFrame 0;
  Jump: 089159
LocOp 089159:
  TraceOperation 089159 (Je [Var (Global 203),Con 57,Con 51] (Branch F (Dloc 089194)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),51))) {
    TraceOperation 089165 (Print_ret "You take a sip, and the room spins a little faster.");
    GamePrint "You take a sip, and the room spins a little faster.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 089194
  }
LocOp 089194:
  TraceOperation 089194 (Je [Var (Global 203),Con 112,Con 154] (Branch F (Dloc 089206)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),112),Equal(MakeHiLo(b1,b2),154))) {
    TraceOperation 089200 (Call (Floc 089406) [] Sp);
    PushFrame;
    PushReturnAddress 089200;
    MakeRoutineFrame 0;
    Jump: 089407
  } else {
    Jump: 089206
  }
LocReturn 089200:
  PushStack call_result;
  TraceOperation 089205 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 089206:
  TraceOperation 089206 (Je [Var (Global 203),Con 53] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 089210 (Call (Floc 089360) [] Sp);
    PushFrame;
    PushReturnAddress 089210;
    MakeRoutineFrame 0;
    Jump: 089361
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 089210:
  PushStack call_result;
  TraceOperation 089215 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 089216:
  MakeRoutineFrame 0;
  Jump: 089217
LocOp 089217:
  TraceOperation 089217 (Je [Var (Global 203),Con 57,Con 56] (Branch F (Dloc 089294)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),56))) {
    TraceOperation 089224 (Print "You nibble at one of the hors d'oeuvres. It tastes ");
    GamePrint "You nibble at one of the hors d'oeuvres. It tastes ";
    TraceOperation 089255 (Random (Con 100) Sp);
    LetRandom random3 100;
    PushStack random3;
    TraceOperation 089259 (Jl (Con 40) (Var Sp) (Branch T (Dloc 089268)));
    PopStack popped4;
    if (LessThan(40,popped4)) {
      Jump: 089268
    } else {
      TraceOperation 089263 (Print_ret "okay.");
      GamePrint "okay.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 089294
  }
LocOp 089268:
  TraceOperation 089268 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 089272 (Jl (Con 50) (Var Sp) (Branch T (Dloc 089285)));
  PopStack popped2;
  if (LessThan(50,popped2)) {
    Jump: 089285
  } else {
    TraceOperation 089276 (Print_ret "delicious.");
    GamePrint "delicious.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 089285:
  TraceOperation 089285 (Print_ret "terrible.");
  GamePrint "terrible.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 089294:
  TraceOperation 089294 (Je [Var (Global 203),Con 154] (Branch F (Dloc 089304)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),154)) {
    TraceOperation 089298 (Call (Floc 089406) [] Sp);
    PushFrame;
    PushReturnAddress 089298;
    MakeRoutineFrame 0;
    Jump: 089407
  } else {
    Jump: 089304
  }
LocReturn 089298:
  PushStack call_result;
  TraceOperation 089303 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 089304:
  TraceOperation 089304 (Je [Var (Global 203),Con 43] (Branch F (Dloc 089349)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),43)) {
    TraceOperation 089308 (Print_ret "More than three, which is as high as you can count in your condition.");
    GamePrint "More than three, which is as high as you can count in your condition.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 089349
  }
LocOp 089349:
  TraceOperation 089349 (Je [Var (Global 203),Con 53] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),53)) {
    TraceOperation 089353 (Call (Floc 089360) [] Sp);
    PushFrame;
    PushReturnAddress 089353;
    MakeRoutineFrame 0;
    Jump: 089361
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 089353:
  PushStack call_result;
  TraceOperation 089358 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 089360:
  MakeRoutineFrame 0;
  Jump: 089361
LocOp 089361:
  TraceOperation 089361 (Jz (Var (Global 96)) (Branch F (Dloc 089383)));
  Let b1 = M[008100];
  Let b2 = M[008101];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 089364 (Store (Con 112) (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    SetByte 008100 b3;
    SetByte 008101 b4;
    TraceOperation 089367 (Set_attr (Con 70) (Con 27));
    Let b5 = M[001384];
    SetByte 001384 SetBit(b5,4);
    TraceOperation 089370 (Call (Floc 022320) [Con -20734,Con 3] Sp);
    PushFrame;
    PushReturnAddress 089370;
    SetLocal 1 -20734;
    SetLocal 2 3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 089383
  }
LocReturn 089370:
  PushStack call_result;
  TraceOperation 089378 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  Jump: 089383
LocOp 089383:
  TraceOperation 089383 (Insert_obj (Var (Global 201)) (Var (Global 0)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[007908];
  Let b4 = M[007909];
  Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b5))) {} else {
    Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
    if (Equal(Widen(b6),MakeHiLo(b1,b2))) {
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
    } else {
      Let loop_var8 = Widen(b6);
      Label 9: {
        Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
        if (Equal(Widen(b10),MakeHiLo(b1,b2))) {
          Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
        } else {
          Assign loop_var8 = Widen(b10);
          Goto: Label 9
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) b4;
  Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b12));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) b2;
  TraceOperation 089386 (Je [Var (Global 203),Con 53] (Branch F (Dloc 089399)));
  Let b13 = M[008314];
  Let b14 = M[008315];
  if (Equal(MakeHiLo(b13,b14),53)) {
    TraceOperation 089390 (Print_ret "Dropped.");
    GamePrint "Dropped.\n";
    PopFrame;
    PopReturnAddress return_address_15;
    SetResult 1;
    JumpIndirect: (return) return_address_15
  } else {
    Jump: 089399
  }
LocOp 089399:
  TraceOperation 089399 (Print_ret "Thrown.");
  GamePrint "Thrown.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089406:
  MakeRoutineFrame 0;
  Jump: 089407
LocOp 089407:
  TraceOperation 089407 (Print "The hostess lets out a blood-chilling shriek. \"My new carpet!\" ");
  GamePrint "The hostess lets out a blood-chilling shriek. \"My new carpet!\" ";
  TraceOperation 089452 (Je [Var (Global 203),Con 154] (Branch F (Dloc 089485)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),154)) {
    TraceOperation 089456 (Print "Grabbing a shard from your broken ");
    GamePrint "Grabbing a shard from your broken ";
    TraceOperation 089477 (Print_obj (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 089479 (Print ", s");
    GamePrint ", s";
    TraceOperation 089482 (Jump 089488);
    Jump: 089488
  } else {
    Jump: 089485
  }
LocOp 089485:
  TraceOperation 089485 (Print "S");
  GamePrint "S";
  Jump: 089488
LocOp 089488:
  TraceOperation 089488 (Call (Floc 042734) [Con -10247] Sp);
  PushFrame;
  PushReturnAddress 089488;
  SetLocal 1 -10247;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 089488:
  PushStack call_result;
  TraceOperation 089495 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089496:
  MakeRoutineFrame 0;
  Jump: 089497
LocOp 089497:
  TraceOperation 089497 (Je [Con 70,Var (Global 195)] (Branch F (Dloc 089560)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(70,MakeHiLo(b1,b2))) {
    TraceOperation 089502 (Je [Var (Global 203),Con 181] (Branch F (Dloc 089523)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),181)) {
      TraceOperation 089506 (Je [Var (Global 213),Con 4] (Branch F (Dloc 089523)));
      Let b5 = M[008334];
      Let b6 = M[008335];
      if (Equal(MakeHiLo(b5,b6),4)) {
        TraceOperation 089510 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 089513 (Call (Floc 040748) [] Sp);
        PushFrame;
        PushReturnAddress 089513;
        MakeRoutineFrame 0;
        Jump: 040749
      } else {
        Jump: 089523
      }
    } else {
      Jump: 089523
    }
  } else {
    Jump: 089560
  }
LocReturn 089513:
  PushStack call_result;
  TraceOperation 089518 (Store (Con 211) (Con 70));
  SetByte 008298 0;
  SetByte 008299 70;
  TraceOperation 089521 (Ret (Var (Global 195)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult MakeHiLo(b1,b2);
  JumpIndirect: (return) return_address_3
LocOp 089523:
  TraceOperation 089523 (Je [Var (Global 203),Con 102] (Branch F (Dloc 089544)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),102)) {
    TraceOperation 089527 (Je [Var (Global 213),Con 4] (Branch F (Dloc 089544)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),4)) {
      TraceOperation 089531 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 089534 (Call (Floc 035052) [] Sp);
      PushFrame;
      PushReturnAddress 089534;
      MakeRoutineFrame 0;
      Jump: 035053
    } else {
      Jump: 089544
    }
  } else {
    Jump: 089544
  }
LocReturn 089534:
  PushStack call_result;
  TraceOperation 089539 (Store (Con 211) (Con 70));
  SetByte 008298 0;
  SetByte 008299 70;
  TraceOperation 089542 (Ret (Var (Global 195)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult MakeHiLo(b1,b2);
  JumpIndirect: (return) return_address_3
LocOp 089544:
  TraceOperation 089544 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 089547 (Call (Floc 022042) [Con 75,Con 70] Sp);
  PushFrame;
  PushReturnAddress 089547;
  SetLocal 1 75;
  SetLocal 2 70;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 089547:
  PushStack call_result;
  TraceOperation 089554 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 089554;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 089554:
  PushStack call_result;
  TraceOperation 089559 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 089560:
  TraceOperation 089560 (Je [Var (Global 203),Con 150,Con 22,Con 75] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),150),Equal(MakeHiLo(b1,b2),22)),Equal(MakeHiLo(b1,b2),75))) {
    TraceOperation 089567 (Je [Var (Global 201),Con 70] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),70)) {
      TraceOperation 089571 (Print "The hostess is delighted to engage in ");
      GamePrint "The hostess is delighted to engage in ";
      TraceOperation 089594 (Print_obj (Con 148));
      Let b5 = M[002090];
      Let b6 = M[002091];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 089596 (Call (Floc 042734) [Con -10200] Sp);
      PushFrame;
      PushReturnAddress 089596;
      SetLocal 1 -10200;
      MakeRoutineFrame 1;
      Jump: 042737
    } else {
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
LocReturn 089596:
  PushStack call_result;
  TraceOperation 089603 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 089604:
  MakeRoutineFrame 0;
  Jump: 089605
LocOp 089605:
  TraceOperation 089605 (Call (Floc 022320) [Con -20734,Con -1] Sp);
  PushFrame;
  PushReturnAddress 089605;
  SetLocal 1 -20734;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 089605:
  PushStack call_result;
  TraceOperation 089614 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 089619 (Jz (Var (Global 96)) (Branch F (Dloc 089638)));
  Let b2 = M[008100];
  Let b3 = M[008101];
  if (IsZero(MakeHiLo(b2,b3))) {
    TraceOperation 089622 (Clear_attr (Con 70) (Con 5));
    Let b4 = M[001381];
    SetByte 001381 ClearBit(b4,2);
    TraceOperation 089625 (Call (Floc 022340) [Con -20734] Sp);
    PushFrame;
    PushReturnAddress 089625;
    SetLocal 1 -20734;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    Jump: 089638
  }
LocReturn 089625:
  PushStack call_result;
  TraceOperation 089632 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 089637 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 089638:
  TraceOperation 089638 (Insert_obj (Con 70) (Var (Global 0)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001385];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),70)) {
      Let b5 = M[001386];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),70)) {
          Let b9 = M[001386];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 001385 b2;
  Let b10 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6)];
  SetByte 001386 LoByte(Widen(b10));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),6) 70;
  TraceOperation 089641 (Insert_obj (Var (Global 96)) (Var (Global 0)));
  Let b11 = M[008100];
  Let b12 = M[008101];
  Let b13 = M[007908];
  Let b14 = M[007909];
  Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),4)];
  if (IsZero(Widen(b15))) {} else {
    Let b16 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
    if (Equal(Widen(b16),MakeHiLo(b11,b12))) {
      Let b17 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b17));
    } else {
      Let loop_var18 = Widen(b16);
      Label 19: {
        Let b20 = M[Offset(Offset(000751,Mul(loop_var18,9)),5)];
        if (Equal(Widen(b20),MakeHiLo(b11,b12))) {
          Let b21 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var18,9)),5) LoByte(Widen(b21));
        } else {
          Assign loop_var18 = Widen(b20);
          Goto: Label 19
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),4) b14;
  Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),5) LoByte(Widen(b22));
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6) b12;
  TraceOperation 089644 New_line;
  GamePrint "\n";
  TraceOperation 089645 (Test_attr (Con 70) (Con 5) (Branch F (Dloc 089712)));
  Let b23 = M[001381];
  if (TestBit(b23,2)) {
    TraceOperation 089650 (Store (Con 229) (Con 4));
    SetByte 008334 0;
    SetByte 008335 4;
    TraceOperation 089653 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame;
    PushReturnAddress 089653;
    SetLocal 1 -14349;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 089712
  }
LocReturn 089653:
  PushStack call_result;
  TraceOperation 089661 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 089666 (Print "\"Tricia dear,\" says the hostess insistently, \"don't you want your ");
  GamePrint "\"Tricia dear,\" says the hostess insistently, \"don't you want your ";
  TraceOperation 089705 (Print_obj (Var (Global 96)));
  Let b2 = M[008100];
  Let b3 = M[008101];
  Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7)];
  Let b5 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7),1)];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
  GamePrint ite_res7;
  TraceOperation 089707 (Print_ret "?\"");
  GamePrint "?\"\n";
  PopFrame;
  PopReturnAddress return_address_8;
  SetResult 1;
  JumpIndirect: (return) return_address_8
LocOp 089712:
  TraceOperation 089712 (Set_attr (Con 70) (Con 5));
  Let b1 = M[001381];
  SetByte 001381 SetBit(b1,2);
  TraceOperation 089715 (Store (Con 207) (Var (Global 96)));
  Let b2 = M[008100];
  Let b3 = M[008101];
  SetByte 008290 b2;
  SetByte 008291 b3;
  TraceOperation 089718 (Set_attr (Var (Global 96)) (Con 27));
  Let b4 = M[008100];
  Let b5 = M[008101];
  Let b6 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3)];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),3) SetBit(b6,4);
  TraceOperation 089721 (Print "The hostess, whom you've been avoiding all evening, scurries up with your ");
  GamePrint "The hostess, whom you've been avoiding all evening, scurries up with your ";
  TraceOperation 089762 (Print_obj (Var (Global 96)));
  Let b7 = M[008100];
  Let b8 = M[008101];
  Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),7)];
  Let b10 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),7),1)];
  Let b11 = M[Address(MakeHiLo(b9,b10))];
  Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
  GamePrint ite_res12;
  TraceOperation 089764 (Print_ret ". \"Oh, hello Tricia, how lovely to see you, I think you dropped this, dear.\"");
  GamePrint ". \"Oh, hello Tricia, how lovely to see you, I think you dropped this, dear.\"\n";
  PopFrame;
  PopReturnAddress return_address_13;
  SetResult 1;
  JumpIndirect: (return) return_address_13
--------------------------------------------------
LocRoutine 089814:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 089817
LocOp 089817:
  TraceOperation 089817 (Je [Var (Local 1),Con 2] (Branch F (Dloc 090013)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 089822 (Store (Con 91) (Con 1));
    SetByte 008058 0;
    SetByte 008059 1;
    TraceOperation 089825 (Store (Con 136) (Con 195));
    SetByte 008148 0;
    SetByte 008149 195;
    TraceOperation 089828 (Insert_obj (Con 195) (Con 169));
    Let b2 = M[002510];
    if (IsZero(Widen(b2))) {} else {
      Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b3),195)) {
        Let b4 = M[002511];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
      } else {
        Let loop_var5 = Widen(b3);
        Label 6: {
          Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
          if (Equal(Widen(b7),195)) {
            Let b8 = M[002511];
            SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
          } else {
            Assign loop_var5 = Widen(b7);
            Goto: Label 6
          }
        }
      }
    }
    SetByte 002510 169;
    Let b9 = M[002278];
    SetByte 002511 LoByte(Widen(b9));
    SetByte 002278 195;
    TraceOperation 089831 (Insert_obj (Con 17) (Con 60));
    Let b10 = M[000908];
    if (IsZero(Widen(b10))) {} else {
      Let b11 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
      if (Equal(Widen(b11),17)) {
        Let b12 = M[000909];
        SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b12));
      } else {
        Let loop_var13 = Widen(b11);
        Label 14: {
          Let b15 = M[Offset(Offset(000751,Mul(loop_var13,9)),5)];
          if (Equal(Widen(b15),17)) {
            Let b16 = M[000909];
            SetByte Offset(Offset(000751,Mul(loop_var13,9)),5) LoByte(Widen(b16));
          } else {
            Assign loop_var13 = Widen(b15);
            Goto: Label 14
          }
        }
      }
    }
    SetByte 000908 60;
    Let b17 = M[001297];
    SetByte 000909 LoByte(Widen(b17));
    SetByte 001297 17;
    TraceOperation 089834 (Insert_obj (Con 59) (Con 60));
    Let b18 = M[001286];
    if (IsZero(Widen(b18))) {} else {
      Let b19 = M[Offset(Offset(000751,Mul(Widen(b18),9)),6)];
      if (Equal(Widen(b19),59)) {
        Let b20 = M[001287];
        SetByte Offset(Offset(000751,Mul(Widen(b18),9)),6) LoByte(Widen(b20));
      } else {
        Let loop_var21 = Widen(b19);
        Label 22: {
          Let b23 = M[Offset(Offset(000751,Mul(loop_var21,9)),5)];
          if (Equal(Widen(b23),59)) {
            Let b24 = M[001287];
            SetByte Offset(Offset(000751,Mul(loop_var21,9)),5) LoByte(Widen(b24));
          } else {
            Assign loop_var21 = Widen(b23);
            Goto: Label 22
          }
        }
      }
    }
    SetByte 001286 60;
    Let b25 = M[001297];
    SetByte 001287 LoByte(Widen(b25));
    SetByte 001297 59;
    TraceOperation 089837 (Clear_attr (Con 60) (Con 23));
    Let b26 = M[001293];
    SetByte 001293 ClearBit(b26,0);
    TraceOperation 089840 (Call (Floc 043644) [Con 31,Con 97] Sp);
    PushFrame;
    PushReturnAddress 089840;
    SetLocal 1 31;
    SetLocal 2 97;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 043653
  } else {
    Jump: 090013
  }
LocReturn 089840:
  PushStack call_result;
  TraceOperation 089847 (Insert_obj (Con 31) (Con 63));
  Let b1 = M[001034];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),31)) {
      Let b3 = M[001035];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),31)) {
          Let b7 = M[001035];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 001034 63;
  Let b8 = M[001324];
  SetByte 001035 LoByte(Widen(b8));
  SetByte 001324 31;
  TraceOperation 089850 (Store (Con 107) (Con 57));
  SetByte 008090 0;
  SetByte 008091 57;
  TraceOperation 089853 (Call (Floc 022320) [Con -20422,Con 2] Sp);
  PushFrame;
  PushReturnAddress 089853;
  SetLocal 1 -20422;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 089853:
  PushStack call_result;
  TraceOperation 089861 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 089866 (Print "The pain at the back of your eyes is from partying until very late last night, and both your heads are suffering the worst hangover you've ever experienced. You remember formulating a plan to steal ");
  GamePrint "The pain at the back of your eyes is from partying until very late last night, and both your heads are suffering the worst hangover you've ever experienced. You remember formulating a plan to steal ";
  TraceOperation 089977 (Print_obj (Con 220));
  Let b2 = M[002738];
  Let b3 = M[002739];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 089979 (Print ", but you can't for the life of you remember any details.");
  GamePrint ", but you can't for the life of you remember any details.";
  TraceOperation 090010 New_line;
  GamePrint "\n";
  TraceOperation 090011 New_line;
  GamePrint "\n";
  TraceOperation 090012 Rtrue;
  PopFrame;
  PopReturnAddress return_address_6;
  SetResult 1;
  JumpIndirect: (return) return_address_6
LocOp 090013:
  TraceOperation 090013 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 090017 (Jz (Var (Global 90)) (Branch T (Dloc 090091)));
    Let b2 = M[008088];
    Let b3 = M[008089];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 090091
    } else {
      TraceOperation 090021 (Print "The boat is resting atop a plume of water. The dais for the dedication ceremonies for ");
      GamePrint "The boat is resting atop a plume of water. The dais for the dedication ceremonies for ";
      TraceOperation 090070 (Print_obj (Con 220));
      Let b4 = M[002738];
      Let b5 = M[002739];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
      GamePrint ite_res7;
      TraceOperation 090072 (Print_ret " lies immediately north.");
      GamePrint " lies immediately north.\n";
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 1;
      JumpIndirect: (return) return_address_8
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
LocOp 090091:
  TraceOperation 090091 (Print "You are piloting the ");
  GamePrint "You are piloting the ";
  TraceOperation 090102 (Print_obj (Con 64));
  Let b1 = M[001334];
  Let b2 = M[001335];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 090104 (Print ", which features very simple controls, toward the island of France (Footnote 3), where the dedication ceremonies for ");
  GamePrint ", which features very simple controls, toward the island of France (Footnote 3), where the dedication ceremonies for ";
  TraceOperation 090165 (Print_obj (Con 220));
  Let b5 = M[002738];
  Let b6 = M[002739];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
  GamePrint ite_res8;
  TraceOperation 090167 (Print " will occur. You are currently steering the boat toward");
  GamePrint " will occur. You are currently steering the boat toward";
  TraceOperation 090194 (Je [Var (Global 91),Con 57] (Branch F (Dloc 090218)));
  Let b9 = M[008090];
  Let b10 = M[008091];
  if (Equal(MakeHiLo(b9,b10),57)) {
    TraceOperation 090198 (Print " a ");
    GamePrint " a ";
    TraceOperation 090201 (Print_obj (Con 57));
    Let b11 = M[001271];
    Let b12 = M[001272];
    Let b13 = M[Address(MakeHiLo(b11,b12))];
    Let ite_res14 = Ite((IsZeroByte(b13),"",GetText(Offset(Address(MakeHiLo(b11,b12)),1))));
    GamePrint ite_res14;
    TraceOperation 090203 (Print " between ");
    GamePrint " between ";
    TraceOperation 090206 (Print_obj (Con 55));
    Let b15 = M[001253];
    Let b16 = M[001254];
    Let b17 = M[Address(MakeHiLo(b15,b16))];
    Let ite_res18 = Ite((IsZeroByte(b17),"",GetText(Offset(Address(MakeHiLo(b15,b16)),1))));
    GamePrint ite_res18;
    TraceOperation 090208 (Print " and a ");
    GamePrint " and a ";
    TraceOperation 090213 (Print_obj (Con 56));
    Let b19 = M[001262];
    Let b20 = M[001263];
    Let b21 = M[Address(MakeHiLo(b19,b20))];
    Let ite_res22 = Ite((IsZeroByte(b21),"",GetText(Offset(Address(MakeHiLo(b19,b20)),1))));
    GamePrint ite_res22;
    TraceOperation 090215 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_23;
    SetResult 1;
    JumpIndirect: (return) return_address_23
  } else {
    Jump: 090218
  }
LocOp 090218:
  TraceOperation 090218 (Call (Floc 043738) [Var (Global 91)] Sp);
  Let b1 = M[008090];
  Let b2 = M[008091];
  PushFrame;
  PushReturnAddress 090218;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 090218:
  PushStack call_result;
  TraceOperation 090224 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 090228:
  MakeRoutineFrame 0;
  Jump: 090229
LocOp 090229:
  TraceOperation 090229 (Inc (Con 108));
  Let b1 = M[008092];
  Let b2 = M[008093];
  SetByte 008092 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008093 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 090231 (Call (Floc 022320) [Con -20422,Con -1] Sp);
  PushFrame;
  PushReturnAddress 090231;
  SetLocal 1 -20422;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 090231:
  PushStack call_result;
  TraceOperation 090240 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 090245 (Je [Var (Global 91),Con 55,Con 56] (Branch F (Dloc 090489)));
  Let b2 = M[008090];
  Let b3 = M[008091];
  if (LogOr(Equal(MakeHiLo(b2,b3),55),Equal(MakeHiLo(b2,b3),56))) {
    TraceOperation 090252 (Inc (Con 109));
    Let b4 = M[008094];
    Let b5 = M[008095];
    SetByte 008094 HiByte(Add(MakeHiLo(b4,b5),1));
    SetByte 008095 LoByte(Add(MakeHiLo(b4,b5),1));
    TraceOperation 090254 (Je [Var (Global 93),Con 4] (Branch F (Dloc 090489)));
    Let b6 = M[008094];
    Let b7 = M[008095];
    if (Equal(MakeHiLo(b6,b7),4)) {
      TraceOperation 090259 (Store (Con 106) (Con 1));
      SetByte 008088 0;
      SetByte 008089 1;
      TraceOperation 090262 (Call (Floc 022340) [Con -20422] Sp);
      PushFrame;
      PushReturnAddress 090262;
      SetLocal 1 -20422;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 022349
    } else {
      Jump: 090489
    }
  } else {
    Jump: 090489
  }
LocReturn 090262:
  PushStack call_result;
  TraceOperation 090269 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 090274 New_line;
  GamePrint "\n";
  TraceOperation 090275 (Print "Suddenly, the autopilot leaps to life, steering the boat away from the ");
  GamePrint "Suddenly, the autopilot leaps to life, steering the boat away from the ";
  TraceOperation 090318 (Print_obj (Var (Global 91)));
  Let b2 = M[008090];
  Let b3 = M[008091];
  Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7)];
  Let b5 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b2,b3),9)),7),1)];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
  GamePrint ite_res7;
  TraceOperation 090320 (Print ". The crowd gathered for the dedication oohs and aahs as the boat swerves through the ");
  GamePrint ". The crowd gathered for the dedication oohs and aahs as the boat swerves through the ";
  TraceOperation 090365 (Print_obj (Con 57));
  Let b8 = M[001271];
  Let b9 = M[001272];
  Let b10 = M[Address(MakeHiLo(b8,b9))];
  Let ite_res11 = Ite((IsZeroByte(b10),"",GetText(Offset(Address(MakeHiLo(b8,b9)),1))));
  GamePrint ite_res11;
  TraceOperation 090367 (Print ". As it reaches the base of the ");
  GamePrint ". As it reaches the base of the ";
  TraceOperation 090386 (Print_obj (Con 55));
  Let b12 = M[001253];
  Let b13 = M[001254];
  Let b14 = M[Address(MakeHiLo(b12,b13))];
  Let ite_res15 = Ite((IsZeroByte(b14),"",GetText(Offset(Address(MakeHiLo(b12,b13)),1))));
  GamePrint ite_res15;
  TraceOperation 090388 (Print_ret " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.");
  GamePrint " a plume of water forms under it, sending it higher and higher. The crowd bursts into applause as the boat reaches the top of the cliff, just south of the ceremonial dais.\n";
  PopFrame;
  PopReturnAddress return_address_16;
  SetResult 1;
  JumpIndirect: (return) return_address_16
LocOp 090489:
  TraceOperation 090489 (Je [Var (Global 203),Con 110,Con 111] (Branch T Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),110),Equal(MakeHiLo(b1,b2),111))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 090495 (Je [Var (Global 203),Con 16] (Branch F (Dloc 090505)));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),16)) {
      TraceOperation 090499 (Je [Var (Global 232),Con 111,Con 110] (Branch T Dfalse));
      Let b6 = M[008372];
      Let b7 = M[008373];
      if (LogOr(Equal(MakeHiLo(b6,b7),111),Equal(MakeHiLo(b6,b7),110))) {
        PopFrame;
        PopReturnAddress return_address_8;
        SetResult 0;
        JumpIndirect: (return) return_address_8
      } else {
        Jump: 090505
      }
    } else {
      Jump: 090505
    }
  }
LocOp 090505:
  TraceOperation 090505 New_line;
  GamePrint "\n";
  TraceOperation 090506 (Jl (Var (Global 92)) (Con 7) (Branch F (Dloc 090532)));
  Let b1 = M[008092];
  Let b2 = M[008093];
  if (LessThan(MakeHiLo(b1,b2),7)) {
    TraceOperation 090510 (Print "You continue to steer toward the ");
    GamePrint "You continue to steer toward the ";
    TraceOperation 090527 (Print_obj (Var (Global 91)));
    Let b3 = M[008090];
    Let b4 = M[008091];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 090529 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 1;
    JumpIndirect: (return) return_address_9
  } else {
    Jump: 090532
  }
LocOp 090532:
  TraceOperation 090532 (Call (Floc 022340) [Con -20422] Sp);
  PushFrame;
  PushReturnAddress 090532;
  SetLocal 1 -20422;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 090532:
  PushStack call_result;
  TraceOperation 090539 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 090544 (Print "You almost make it through the ");
  GamePrint "You almost make it through the ";
  TraceOperation 090559 (Print_obj (Con 57));
  Let b2 = M[001271];
  Let b3 = M[001272];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 090561 (Print " but the turbulent waters push the boat toward the rocks. The ");
  GamePrint " but the turbulent waters push the boat toward the rocks. The ";
  TraceOperation 090594 (Print_obj (Con 58));
  Let b6 = M[001280];
  Let b7 = M[001281];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
  GamePrint ite_res9;
  TraceOperation 090596 (Print " lights up and an ");
  GamePrint " lights up and an ";
  TraceOperation 090609 (Print_paddr (Var (Global 13)));
  Let b10 = M[007934];
  Let b11 = M[007935];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
  TraceOperation 090611 (Call (Floc 042734) [Con -10177] Sp);
  PushFrame;
  PushReturnAddress 090611;
  SetLocal 1 -10177;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 090611:
  PushStack call_result;
  TraceOperation 090618 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 090620:
  MakeRoutineFrame 0;
  Jump: 090621
LocOp 090621:
  TraceOperation 090621 (Je [Var (Global 203),Con 111] (Branch F (Dloc 090761)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),111)) {
    TraceOperation 090626 (Je [Var (Global 201),Con 64] (Branch F (Dloc 090761)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),64)) {
      TraceOperation 090631 (Jz (Var (Global 90)) (Branch T (Dloc 090659)));
      Let b5 = M[008088];
      Let b6 = M[008089];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 090659
      } else {
        TraceOperation 090634 (Print_ret "You've already reached your destination!");
        GamePrint "You've already reached your destination!\n";
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      }
    } else {
      Jump: 090761
    }
  } else {
    Jump: 090761
  }
LocOp 090659:
  TraceOperation 090659 (Je [Var (Global 202),Var (Global 91)] (Branch F (Dloc 090689)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  Let b3 = M[008090];
  Let b4 = M[008091];
  if (Equal(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    TraceOperation 090663 (Print "You already ARE steering the boat toward the ");
    GamePrint "You already ARE steering the boat toward the ";
    TraceOperation 090684 (Print_obj (Var (Global 91)));
    Let b5 = M[008090];
    Let b6 = M[008091];
    Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7)];
    Let b8 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),7),1)];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
    GamePrint ite_res10;
    TraceOperation 090686 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 1;
    JumpIndirect: (return) return_address_11
  } else {
    Jump: 090689
  }
LocOp 090689:
  TraceOperation 090689 (Je [Var (Global 202),Con 57,Con 56,Con 55] (Branch T (Dloc 090723)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),57),Equal(MakeHiLo(b1,b2),56)),Equal(MakeHiLo(b1,b2),55))) {
    Jump: 090723
  } else {
    TraceOperation 090696 (Print "You can't steer the boat toward");
    GamePrint "You can't steer the boat toward";
    TraceOperation 090713 (Call (Floc 043738) [Var (Global 202),Con 1] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame;
    PushReturnAddress 090713;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 1;
    MakeRoutineFrame 2;
    Jump: 043743
  }
LocReturn 090713:
  PushStack call_result;
  TraceOperation 090720 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 090723:
  TraceOperation 090723 (Store (Con 107) (Var (Global 202)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  SetByte 008090 b1;
  SetByte 008091 b2;
  TraceOperation 090726 (Jg (Var (Global 92)) (Con 3) (Branch F (Dloc 090733)));
  Let b3 = M[008092];
  Let b4 = M[008093];
  if (GreaterThan(MakeHiLo(b3,b4),3)) {
    TraceOperation 090730 (Store (Con 108) (Con 3));
    SetByte 008092 0;
    SetByte 008093 3;
    Jump: 090733
  } else {
    Jump: 090733
  }
LocOp 090733:
  TraceOperation 090733 (Print "The boat is now heading straight at the ");
  GamePrint "The boat is now heading straight at the ";
  TraceOperation 090756 (Print_obj (Var (Global 91)));
  Let b1 = M[008090];
  Let b2 = M[008091];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7)];
  Let b4 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),7),1)];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 090758 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 090761:
  TraceOperation 090761 (Je [Var (Global 203),Con 48,Con 86,Con 59] (Branch T (Dloc 090772)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),86)),Equal(MakeHiLo(b1,b2),59))) {
    Jump: 090772
  } else {
    TraceOperation 090768 (Je [Var (Global 203),Con 38] (Branch F Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),38)) {
      Jump: 090772
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  }
LocOp 090772:
  TraceOperation 090772 (Jz (Var (Global 90)) (Branch T (Dloc 090782)));
  Let b1 = M[008088];
  Let b2 = M[008089];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 090782
  } else {
    TraceOperation 090775 (Call (Floc 043620) [Con 17] Sp);
    PushFrame;
    PushReturnAddress 090775;
    SetLocal 1 17;
    MakeRoutineFrame 1;
    Jump: 043623
  }
LocReturn 090775:
  PushStack call_result;
  TraceOperation 090781 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 090782:
  TraceOperation 090782 (Print_paddr (Var (Global 16)));
  Let b1 = M[007940];
  Let b2 = M[007941];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 090784 New_line;
  GamePrint "\n";
  TraceOperation 090785 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 090786:
  MakeRoutineFrame 0;
  Jump: 090787
LocOp 090787:
  TraceOperation 090787 (Je [Var (Global 203),Con 28,Con 38] (Branch F (Dloc 090797)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),28),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 090793 (Print_paddr (Var (Global 16)));
    Let b3 = M[007940];
    Let b4 = M[007941];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 090795 New_line;
    GamePrint "\n";
    TraceOperation 090796 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 090797
  }
LocOp 090797:
  TraceOperation 090797 (Je [Var (Global 203),Con 154,Con 46] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),46))) {
    TraceOperation 090803 (Je [Var (Global 202),Con 48] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),48)) {
      TraceOperation 090807 (Insert_obj (Var (Global 201)) (Con 219));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4)];
      if (IsZero(Widen(b7))) {} else {
        Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
        if (Equal(Widen(b8),MakeHiLo(b5,b6))) {
          Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
        } else {
          Let loop_var10 = Widen(b8);
          Label 11: {
            Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
            if (Equal(Widen(b12),MakeHiLo(b5,b6))) {
              Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5)];
              SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
            } else {
              Assign loop_var10 = Widen(b12);
              Goto: Label 11
            }
          }
        }
      }
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),4) 219;
      Let b14 = M[002728];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),5) LoByte(Widen(b14));
      SetByte 002728 b6;
      TraceOperation 090810 (Print_ret "Glub...");
      GamePrint "Glub...\n";
      PopFrame;
      PopReturnAddress return_address_15;
      SetResult 1;
      JumpIndirect: (return) return_address_15
    } else {
      PopFrame;
      PopReturnAddress return_address_16;
      SetResult 0;
      JumpIndirect: (return) return_address_16
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_17;
    SetResult 0;
    JumpIndirect: (return) return_address_17
  }
--------------------------------------------------
LocRoutine 090820:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 090823
LocOp 090823:
  TraceOperation 090823 (Je [Var (Local 1),Con 1] (Branch F (Dloc 090838)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,1)) {
    TraceOperation 090827 (Je [Var (Global 203),Con 169] (Branch F Dfalse));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (Equal(MakeHiLo(b2,b3),169)) {
      TraceOperation 090831 (Call (Floc 057682) [Con 63] Sp);
      PushFrame;
      PushReturnAddress 090831;
      SetLocal 1 63;
      MakeRoutineFrame 1;
      Jump: 057685
    } else {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    }
  } else {
    Jump: 090838
  }
LocReturn 090831:
  PushStack call_result;
  TraceOperation 090837 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 090838:
  TraceOperation 090838 (Jz (Var (Local 1)) (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (IsZero(local1_1)) {
    TraceOperation 090841 (Je [Var (Global 203),Con 129,Con 118,Con 93] (Branch T (Dloc 090852)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b2,b3),129),Equal(MakeHiLo(b2,b3),118)),Equal(MakeHiLo(b2,b3),93))) {
      Jump: 090852
    } else {
      TraceOperation 090848 (Je [Var (Global 203),Con 124] (Branch F (Dloc 090909)));
      Let b4 = M[008314];
      Let b5 = M[008315];
      if (Equal(MakeHiLo(b4,b5),124)) {
        Jump: 090852
      } else {
        Jump: 090909
      }
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocOp 090852:
  TraceOperation 090852 (Jin (Con 62) (Con 219) (Branch F (Dloc 090909)));
  Let b1 = M[001313];
  if (Equal(219,Widen(b1))) {
    TraceOperation 090856 (Insert_obj (Con 61) (Con 31));
    Let b2 = M[001304];
    if (IsZero(Widen(b2))) {} else {
      Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b3),61)) {
        Let b4 = M[001305];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
      } else {
        Let loop_var5 = Widen(b3);
        Label 6: {
          Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
          if (Equal(Widen(b7),61)) {
            Let b8 = M[001305];
            SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
          } else {
            Assign loop_var5 = Widen(b7);
            Goto: Label 6
          }
        }
      }
    }
    SetByte 001304 31;
    Let b9 = M[001036];
    SetByte 001305 LoByte(Widen(b9));
    SetByte 001036 61;
    TraceOperation 090859 (Insert_obj (Con 62) (Con 31));
    Let b10 = M[001313];
    if (IsZero(Widen(b10))) {} else {
      Let b11 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
      if (Equal(Widen(b11),62)) {
        Let b12 = M[001314];
        SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b12));
      } else {
        Let loop_var13 = Widen(b11);
        Label 14: {
          Let b15 = M[Offset(Offset(000751,Mul(loop_var13,9)),5)];
          if (Equal(Widen(b15),62)) {
            Let b16 = M[001314];
            SetByte Offset(Offset(000751,Mul(loop_var13,9)),5) LoByte(Widen(b16));
          } else {
            Assign loop_var13 = Widen(b15);
            Goto: Label 14
          }
        }
      }
    }
    SetByte 001313 31;
    Let b17 = M[001036];
    SetByte 001314 LoByte(Widen(b17));
    SetByte 001036 62;
    TraceOperation 090862 (Print_ret "You discover and pick up a small key and a piece of fluff under the seat cushion.");
    GamePrint "You discover and pick up a small key and a piece of fluff under the seat cushion.\n";
    PopFrame;
    PopReturnAddress return_address_18;
    SetResult 1;
    JumpIndirect: (return) return_address_18
  } else {
    Jump: 090909
  }
LocOp 090909:
  TraceOperation 090909 (Je [Var (Global 203),Con 61] (Branch F (Dloc 090948)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 090913 (Print_ret "The chair is very comfortable, with a thick plush cushion.");
    GamePrint "The chair is very comfortable, with a thick plush cushion.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 090948
  }
LocOp 090948:
  TraceOperation 090948 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 090954 (Je [Var (Global 201),Con 63] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),63)) {
      TraceOperation 090958 (Call (Floc 057650) [] Sp);
      PushFrame;
      PushReturnAddress 090958;
      MakeRoutineFrame 0;
      Jump: 057651
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 090958:
  PushStack call_result;
  TraceOperation 090963 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 090964:
  MakeRoutineFrame 0;
  Jump: 090965
LocOp 090965:
  TraceOperation 090965 (Je [Var (Global 203),Con 177] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),177)) {
    TraceOperation 090969 (Je [Var (Global 0),Con 66] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),66)) {
      TraceOperation 090973 (Jin (Con 62) (Con 219) (Branch F Dfalse));
      Let b5 = M[001313];
      if (Equal(219,Widen(b5))) {
        TraceOperation 090977 (Print_ret "It's probably around the boat somewhere.");
        GamePrint "It's probably around the boat somewhere.\n";
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      } else {
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 0;
        JumpIndirect: (return) return_address_7
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 0;
      JumpIndirect: (return) return_address_8
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
--------------------------------------------------
LocRoutine 090992:
  MakeRoutineFrame 0;
  Jump: 090993
LocOp 090993:
  TraceOperation 090993 (Je [Var (Global 203),Con 103] (Branch F (Dloc 091013)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),103)) {
    TraceOperation 090997 (Jz (Var (Global 202)) (Branch F (Dloc 091013)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 091000 (Test_attr (Con 60) (Con 23) (Branch T (Dloc 091013)));
      Let b5 = M[001293];
      if (TestBit(b5,0)) {
        Jump: 091013
      } else {
        TraceOperation 091004 (Print_ret "It's locked.");
        GamePrint "It's locked.\n";
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      }
    } else {
      Jump: 091013
    }
  } else {
    Jump: 091013
  }
LocOp 091013:
  TraceOperation 091013 (Je [Var (Global 203),Con 89] (Branch F (Dloc 091034)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),89)) {
    TraceOperation 091017 (Test_attr (Con 60) (Con 23) (Branch F (Dloc 091029)));
    Let b3 = M[001293];
    if (TestBit(b3,0)) {
      TraceOperation 091021 (Call (Floc 022042) [Con 39,Con 60] Sp);
      PushFrame;
      PushReturnAddress 091021;
      SetLocal 1 39;
      SetLocal 2 60;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 091029
    }
  } else {
    Jump: 091034
  }
LocReturn 091021:
  PushStack call_result;
  TraceOperation 091028 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 091029:
  TraceOperation 091029 (Print_ret "It is.");
  GamePrint "It is.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 091034:
  TraceOperation 091034 (Je [Var (Global 203),Con 162,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),162),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 091040 (Test_attr (Con 60) (Con 23) (Branch F (Dloc 091048)));
    Let b3 = M[001293];
    if (TestBit(b3,0)) {
      TraceOperation 091044 (Print_paddr (Var (Global 53)));
      Let b4 = M[008014];
      Let b5 = M[008015];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 091046 New_line;
      GamePrint "\n";
      TraceOperation 091047 Rtrue;
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    } else {
      Jump: 091048
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocOp 091048:
  TraceOperation 091048 (Jz (Var (Global 202)) (Branch F (Dloc 091073)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    TraceOperation 091051 (Call (Floc 043468) [Con 62] Sp);
    PushFrame;
    PushReturnAddress 091051;
    SetLocal 1 62;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    Jump: 091073
  }
LocReturn 091051:
  PushStack call_result;
  TraceOperation 091057 (Jz (Var Sp) (Branch T (Dloc 091073)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 091073
  } else {
    TraceOperation 091060 (Store (Con 218) (Con 62));
    SetByte 008312 0;
    SetByte 008313 62;
    TraceOperation 091063 (Print "(with the key)");
    GamePrint "(with the key)";
    TraceOperation 091072 New_line;
    GamePrint "\n";
    Jump: 091073
  }
LocOp 091073:
  TraceOperation 091073 (Je [Var (Global 202),Con 62] (Branch F (Dloc 091115)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),62)) {
    TraceOperation 091077 (Set_attr (Con 60) (Con 23));
    Let b3 = M[001293];
    SetByte 001293 SetBit(b3,0);
    TraceOperation 091080 (Print "The tool box opens");
    GamePrint "The tool box opens";
    TraceOperation 091093 (Get_child (Con 60) Sp (Branch F (Dloc 091112)));
    Let b4 = M[001297];
    PushStack Widen(b4);
    if (IsZero(Widen(b4))) {
      Jump: 091112
    } else {
      TraceOperation 091097 (Print " revealing");
      GamePrint " revealing";
      TraceOperation 091106 (Call (Floc 042360) [Con 60] Sp);
      PushFrame;
      PushReturnAddress 091106;
      SetLocal 1 60;
      MakeRoutineFrame 6;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 1;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 042373
    }
  } else {
    Jump: 091115
  }
LocReturn 091106:
  PushStack call_result;
  Jump: 091112
LocOp 091112:
  TraceOperation 091112 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 091115:
  TraceOperation 091115 (Print "You can't unlock it with");
  GamePrint "You can't unlock it with";
  TraceOperation 091128 (Jz (Var (Global 202)) (Branch T (Dloc 091140)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 091140
  } else {
    TraceOperation 091131 (Call (Floc 043738) [Var (Global 202)] Sp);
    Let b3 = M[008312];
    Let b4 = M[008313];
    PushFrame;
    PushReturnAddress 091131;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043743
  }
LocReturn 091131:
  PushStack call_result;
  TraceOperation 091137 (Jump 091145);
  Jump: 091145
LocOp 091140:
  TraceOperation 091140 (Print " ");
  GamePrint " ";
  TraceOperation 091143 (Print_obj (Con 36));
  Let b1 = M[001082];
  Let b2 = M[001083];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  Jump: 091145
LocOp 091145:
  TraceOperation 091145 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 091148:
  MakeRoutineFrame 0;
  Jump: 091149
LocOp 091149:
  TraceOperation 091149 (Je [Var (Global 203),Con 63] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 091153 (Print_ret "You see your environs upside-down and slightly distorted.");
    GamePrint "You see your environs upside-down and slightly distorted.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 091186:
  MakeRoutineFrame 0;
  Jump: 091187
LocOp 091187:
  TraceOperation 091187 (Je [Var (Global 203),Con 88,Con 114] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),88),Equal(MakeHiLo(b1,b2),114))) {
    TraceOperation 091193 (Inc (Con 105));
    Let b3 = M[008086];
    Let b4 = M[008087];
    SetByte 008086 HiByte(Add(MakeHiLo(b3,b4),1));
    SetByte 008087 LoByte(Add(MakeHiLo(b3,b4),1));
    TraceOperation 091195 (Print "The button glows. An ");
    GamePrint "The button glows. An ";
    TraceOperation 091210 (Print_paddr (Var (Global 13)));
    Let b5 = M[007934];
    Let b6 = M[007935];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
    TraceOperation 091212 (Print "looks around, and withdraws. The light fades.");
    GamePrint "looks around, and withdraws. The light fades.";
    TraceOperation 091239 (Je [Var (Global 89),Con 3] (Branch F (Dloc 091252)));
    Let b7 = M[008086];
    Let b8 = M[008087];
    if (Equal(MakeHiLo(b7,b8),3)) {
      TraceOperation 091243 (Print " (Footnote 13)");
      GamePrint " (Footnote 13)";
      Jump: 091252
    } else {
      Jump: 091252
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
LocOp 091252:
  TraceOperation 091252 New_line;
  GamePrint "\n";
  TraceOperation 091253 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 091254:
  MakeRoutineFrame 0;
  Jump: 091255
LocOp 091255:
  TraceOperation 091255 (Je [Var (Global 203),Con 21] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),21)) {
    TraceOperation 091259 (Jz (Var (Global 90)) (Branch F Dfalse));
    Let b3 = M[008088];
    Let b4 = M[008089];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 091262 (Call (Floc 022042) [Con 111,Con 64,Var (Global 201)] Sp);
      Let b5 = M[008310];
      Let b6 = M[008311];
      PushFrame;
      PushReturnAddress 091262;
      SetLocal 1 111;
      SetLocal 2 64;
      SetLocal 3 MakeHiLo(b5,b6);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
LocReturn 091262:
  PushStack call_result;
  TraceOperation 091270 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 091272:
  MakeRoutineFrame 0;
  Jump: 091273
LocOp 091273:
  TraceOperation 091273 (Jin (Con 27) (Var (Global 0)) (Branch T (Dloc 091330)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[000998];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 091330
  } else {
    TraceOperation 091277 (Store (Con 229) (Con 5));
    SetByte 008334 0;
    SetByte 008335 5;
    TraceOperation 091280 (Call (Floc 022320) [Con -14349,Con 2] Sp);
    PushFrame;
    PushReturnAddress 091280;
    SetLocal 1 -14349;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  }
LocReturn 091280:
  PushStack call_result;
  TraceOperation 091288 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 091293 (Print "Don't you think it would be a bad idea to leave the ceremonies?");
  GamePrint "Don't you think it would be a bad idea to leave the ceremonies?";
  TraceOperation 091328 New_line;
  GamePrint "\n";
  TraceOperation 091329 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 091330:
  TraceOperation 091330 (Jin (Con 51) (Var (Global 0)) (Branch T (Dloc 091338)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[001214];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 091338
  } else {
    TraceOperation 091334 (Jin (Con 51) (Con 27) (Branch F (Dloc 091384)));
    Let b4 = M[001214];
    if (Equal(27,Widen(b4))) {
      Jump: 091338
    } else {
      Jump: 091384
    }
  }
LocOp 091338:
  TraceOperation 091338 (Print "You and ");
  GamePrint "You and ";
  TraceOperation 091343 (Print_obj (Con 194));
  Let b1 = M[002504];
  Let b2 = M[002505];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 091345 (Print " break for ");
  GamePrint " break for ";
  TraceOperation 091352 (Print_obj (Con 220));
  Let b5 = M[002738];
  Let b6 = M[002739];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
  GamePrint ite_res8;
  TraceOperation 091354 (Print ". ");
  GamePrint ". ";
  TraceOperation 091357 (Test_attr (Con 52) (Con 21) (Branch F (Dloc 091371)));
  Let b9 = M[001221];
  if (TestBit(b9,2)) {
    TraceOperation 091361 (Print_paddr (Var (Global 31)));
    Let b10 = M[007970];
    Let b11 = M[007971];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
    TraceOperation 091363 (Print "They");
    GamePrint "They";
    TraceOperation 091368 (Jump 091378);
    Jump: 091378
  } else {
    Jump: 091371
  }
LocOp 091371:
  TraceOperation 091371 (Print "The guards");
  GamePrint "The guards";
  Jump: 091378
LocOp 091378:
  TraceOperation 091378 (Call (Floc 092666) [] Sp);
  PushFrame;
  PushReturnAddress 091378;
  MakeRoutineFrame 0;
  Jump: 092667
LocReturn 091378:
  PushStack call_result;
  TraceOperation 091383 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
LocOp 091384:
  TraceOperation 091384 (Add (Var (Global 1)) (Con 25) (Global 1));
  Let b1 = M[007910];
  Let b2 = M[007911];
  SetByte 007910 HiByte(Add(MakeHiLo(b1,b2),25));
  SetByte 007911 LoByte(Add(MakeHiLo(b1,b2),25));
  TraceOperation 091388 (Set_attr (Con 66) (Con 4));
  Let b3 = M[001345];
  SetByte 001345 SetBit(b3,3);
  TraceOperation 091391 (Insert_obj (Con 52) (Con 219));
  Let b4 = M[001223];
  if (IsZero(Widen(b4))) {} else {
    Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
    if (Equal(Widen(b5),52)) {
      Let b6 = M[001224];
      SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
    } else {
      Let loop_var7 = Widen(b5);
      Label 8: {
        Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
        if (Equal(Widen(b9),52)) {
          Let b10 = M[001224];
          SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
        } else {
          Assign loop_var7 = Widen(b9);
          Goto: Label 8
        }
      }
    }
  }
  SetByte 001223 219;
  Let b11 = M[002728];
  SetByte 001224 LoByte(Widen(b11));
  SetByte 002728 52;
  TraceOperation 091394 (Call (Floc 043644) [Con 31,Con 178] Sp);
  PushFrame;
  PushReturnAddress 091394;
  SetLocal 1 31;
  SetLocal 2 178;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 043653
LocReturn 091394:
  PushStack call_result;
  TraceOperation 091401 (Print "You and ");
  GamePrint "You and ";
  TraceOperation 091406 (Print_obj (Con 194));
  Let b1 = M[002504];
  Let b2 = M[002505];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 091408 (Print " enter ");
  GamePrint " enter ";
  TraceOperation 091415 (Print_obj (Con 220));
  Let b5 = M[002738];
  Let b6 = M[002739];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
  GamePrint ite_res8;
  TraceOperation 091417 (Print ", that beautiful bauble you've been coveting ever since your decision to run for");
  GamePrint ", that beautiful bauble you've been coveting ever since your decision to run for";
  TraceOperation 091464 (Print_paddr (Var (Global 44)));
  Let b9 = M[007996];
  Let b10 = M[007997];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
  TraceOperation 091466 (Call (Floc 042734) [Con -10155] Sp);
  PushFrame;
  PushReturnAddress 091466;
  SetLocal 1 -10155;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 091466:
  PushStack call_result;
  TraceOperation 091473 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 091474:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 091477
LocOp 091477:
  TraceOperation 091477 (Je [Var (Local 1),Con 6] (Branch F (Dloc 091496)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 091481 (Test_attr (Con 66) (Con 4) (Branch F (Dloc 091496)));
    Let b2 = M[001345];
    if (TestBit(b2,3)) {
      TraceOperation 091485 (Store (Con 91) (Con 1));
      SetByte 008058 0;
      SetByte 008059 1;
      TraceOperation 091488 (Call (Floc 042734) [Con -10129] Sp);
      PushFrame;
      PushReturnAddress 091488;
      SetLocal 1 -10129;
      MakeRoutineFrame 1;
      Jump: 042737
    } else {
      Jump: 091496
    }
  } else {
    Jump: 091496
  }
LocReturn 091488:
  PushStack call_result;
  TraceOperation 091495 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 091496:
  TraceOperation 091496 (Je [Var (Local 1),Con 2] (Branch F (Dloc 091598)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 091501 (Test_attr (Con 66) (Con 4) (Branch T (Dloc 091598)));
    Let b2 = M[001345];
    if (TestBit(b2,3)) {
      Jump: 091598
    } else {
      TraceOperation 091506 (Put_prop (Con 31) (Con 29) (Con -19638));
      Let b3 = M[001037];
      Let b4 = M[001038];
      Let b5 = M[Address(MakeHiLo(b3,b4))];
      Let loop_var6 = DeAddress(Offset(Address(MakeHiLo(b3,b4)),Add(Mul(2,Widen(b5)),1)));
      Label 7: {
        Let b8 = M[Address(loop_var6)];
        if (IsZeroByte(b8)) {
          Error: ("putProp",29)
        } else {
          if (Equal(29,Widen(BwAnd(b8,31)))) {
            if (Equal(Add(Widen(ShiftR(b8,5)),1),2)) {
              SetByte Offset(Address(loop_var6),1) 179;
              SetByte Offset(Offset(Address(loop_var6),1),1) 74;
            } else {
              SetByte Offset(Address(loop_var6),1) 74;
            }
          } else {
            Assign loop_var6 = DeAddress(Offset(Offset(Address(loop_var6),1),Add(Widen(ShiftR(b8,5)),1)));
            Goto: Label 7
          }
        }
      }
      TraceOperation 091512 (Print "As you step out of the boat, the plume of water lowers it away. The crowd, unaware of the autopilot, bursts into a round of admiring applause.");
      GamePrint "As you step out of the boat, the plume of water lowers it away. The crowd, unaware of the autopilot, bursts into a round of admiring applause.";
      TraceOperation 091595 New_line;
      GamePrint "\n";
      TraceOperation 091596 New_line;
      GamePrint "\n";
      TraceOperation 091597 Rtrue;
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 1;
      JumpIndirect: (return) return_address_9
    }
  } else {
    Jump: 091598
  }
LocOp 091598:
  TraceOperation 091598 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 091602 (Print "This is a platform surrounded by a crowd. ");
    GamePrint "This is a platform surrounded by a crowd. ";
    TraceOperation 091629 (Jin (Con 53) (Var (Global 0)) (Branch F (Dloc 091666)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    Let b4 = M[001232];
    if (Equal(MakeHiLo(b2,b3),Widen(b4))) {
      TraceOperation 091633 (Print "Several members of the crowd are holding a huge banner. ");
      GamePrint "Several members of the crowd are holding a huge banner. ";
      Jump: 091666
    } else {
      Jump: 091666
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocOp 091666:
  TraceOperation 091666 (Print "Just to the east is ");
  GamePrint "Just to the east is ";
  TraceOperation 091679 (Print_obj (Con 220));
  Let b1 = M[002738];
  Let b2 = M[002739];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 091681 (Jin (Con 51) (Con 27) (Branch F (Dloc 091724)));
  Let b5 = M[001214];
  if (Equal(27,Widen(b5))) {
    TraceOperation 091685 (Print ". A semi-circle of guards are aiming ");
    GamePrint ". A semi-circle of guards are aiming ";
    TraceOperation 091710 (Print_obj (Con 51));
    Let b6 = M[001217];
    Let b7 = M[001218];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
    GamePrint ite_res9;
    TraceOperation 091712 (Print "s at you and ");
    GamePrint "s at you and ";
    TraceOperation 091719 (Print_obj (Con 194));
    Let b10 = M[002504];
    Let b11 = M[002505];
    Let b12 = M[Address(MakeHiLo(b10,b11))];
    Let ite_res13 = Ite((IsZeroByte(b12),"",GetText(Offset(Address(MakeHiLo(b10,b11)),1))));
    GamePrint ite_res13;
    TraceOperation 091721 (Jump 091763);
    Jump: 091763
  } else {
    Jump: 091724
  }
LocOp 091724:
  TraceOperation 091724 (Jin (Con 27) (Var (Global 0)) (Branch F (Dloc 091763)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[000998];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 091728 (Print ". Many disarmed guards are nervously eyeing you and ");
    GamePrint ". Many disarmed guards are nervously eyeing you and ";
    TraceOperation 091761 (Print_obj (Con 194));
    Let b4 = M[002504];
    Let b5 = M[002505];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    Jump: 091763
  } else {
    Jump: 091763
  }
LocOp 091763:
  TraceOperation 091763 (Jin (Con 52) (Con 194) (Branch F (Dloc 091792)));
  Let b1 = M[001223];
  if (Equal(194,Widen(b1))) {
    TraceOperation 091767 (Print ", who is pointing a blaster at your head");
    GamePrint ", who is pointing a blaster at your head";
    Jump: 091792
  } else {
    Jump: 091792
  }
LocOp 091792:
  TraceOperation 091792 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 091796:
  MakeRoutineFrame 0;
  Jump: 091797
LocOp 091797:
  TraceOperation 091797 (Je [Var (Global 203),Con 8,Con 7,Con 6] (Branch T Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),7)),Equal(MakeHiLo(b1,b2),6))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 091804 (Je [Var (Global 203),Con 9,Con 13,Con 10] (Branch T Dfalse));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),9),Equal(MakeHiLo(b4,b5),13)),Equal(MakeHiLo(b4,b5),10))) {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    } else {
      TraceOperation 091811 (Je [Var (Global 203),Con 0,Con 169,Con 16] (Branch T Dfalse));
      Let b7 = M[008314];
      Let b8 = M[008315];
      if (LogOr(LogOr(Equal(MakeHiLo(b7,b8),0),Equal(MakeHiLo(b7,b8),169)),Equal(MakeHiLo(b7,b8),16))) {
        PopFrame;
        PopReturnAddress return_address_9;
        SetResult 0;
        JumpIndirect: (return) return_address_9
      } else {
        TraceOperation 091818 (Je [Var (Global 203),Con 11,Con 2,Con 1] (Branch T Dfalse));
        Let b10 = M[008314];
        Let b11 = M[008315];
        if (LogOr(LogOr(Equal(MakeHiLo(b10,b11),11),Equal(MakeHiLo(b10,b11),2)),Equal(MakeHiLo(b10,b11),1))) {
          PopFrame;
          PopReturnAddress return_address_12;
          SetResult 0;
          JumpIndirect: (return) return_address_12
        } else {
          TraceOperation 091825 (Je [Var (Global 203),Con 90,Con 70,Con 12] (Branch T Dfalse));
          Let b13 = M[008314];
          Let b14 = M[008315];
          if (LogOr(LogOr(Equal(MakeHiLo(b13,b14),90),Equal(MakeHiLo(b13,b14),70)),Equal(MakeHiLo(b13,b14),12))) {
            PopFrame;
            PopReturnAddress return_address_15;
            SetResult 0;
            JumpIndirect: (return) return_address_15
          } else {
            TraceOperation 091832 (Je [Var (Global 203),Con 178,Con 76,Con 4] (Branch T Dfalse));
            Let b16 = M[008314];
            Let b17 = M[008315];
            if (LogOr(LogOr(Equal(MakeHiLo(b16,b17),178),Equal(MakeHiLo(b16,b17),76)),Equal(MakeHiLo(b16,b17),4))) {
              PopFrame;
              PopReturnAddress return_address_18;
              SetResult 0;
              JumpIndirect: (return) return_address_18
            } else {
              TraceOperation 091839 (Je [Var (Global 203),Con 179,Con 177,Con 174] (Branch T Dfalse));
              Let b19 = M[008314];
              Let b20 = M[008315];
              if (LogOr(LogOr(Equal(MakeHiLo(b19,b20),179),Equal(MakeHiLo(b19,b20),177)),Equal(MakeHiLo(b19,b20),174))) {
                PopFrame;
                PopReturnAddress return_address_21;
                SetResult 0;
                JumpIndirect: (return) return_address_21
              } else {
                TraceOperation 091846 (Je [Var (Global 203),Con 38,Con 102,Con 181] (Branch T Dfalse));
                Let b22 = M[008314];
                Let b23 = M[008315];
                if (LogOr(LogOr(Equal(MakeHiLo(b22,b23),38),Equal(MakeHiLo(b22,b23),102)),Equal(MakeHiLo(b22,b23),181))) {
                  PopFrame;
                  PopReturnAddress return_address_24;
                  SetResult 0;
                  JumpIndirect: (return) return_address_24
                } else {
                  TraceOperation 091853 (Je [Var (Global 201),Con 48,Con 53] (Branch F (Dloc 091870)));
                  Let b25 = M[008310];
                  Let b26 = M[008311];
                  if (LogOr(Equal(MakeHiLo(b25,b26),48),Equal(MakeHiLo(b25,b26),53))) {
                    TraceOperation 091859 (Je [Var (Global 203),Con 38,Con 61,Con 43] (Branch T Dfalse));
                    Let b27 = M[008314];
                    Let b28 = M[008315];
                    if (LogOr(LogOr(Equal(MakeHiLo(b27,b28),38),Equal(MakeHiLo(b27,b28),61)),Equal(MakeHiLo(b27,b28),43))) {
                      PopFrame;
                      PopReturnAddress return_address_29;
                      SetResult 0;
                      JumpIndirect: (return) return_address_29
                    } else {
                      TraceOperation 091866 (Je [Var (Global 203),Con 120] (Branch T Dfalse));
                      Let b30 = M[008314];
                      Let b31 = M[008315];
                      if (Equal(MakeHiLo(b30,b31),120)) {
                        PopFrame;
                        PopReturnAddress return_address_32;
                        SetResult 0;
                        JumpIndirect: (return) return_address_32
                      } else {
                        Jump: 091870
                      }
                    }
                  } else {
                    Jump: 091870
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LocOp 091870:
  TraceOperation 091870 (Inc (Con 104));
  Let b1 = M[008084];
  Let b2 = M[008085];
  SetByte 008084 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008085 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 091872 (Print_paddr (Var (Global 15)));
  Let b3 = M[007938];
  Let b4 = M[007939];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
  TraceOperation 091874 (Je [Var (Global 88),Con 4] (Branch F (Dloc 092083)));
  Let b5 = M[008084];
  Let b6 = M[008085];
  if (Equal(MakeHiLo(b5,b6),4)) {
    TraceOperation 091879 (Put_prop (Con 31) (Con 29) (Con 22672));
    Let b7 = M[001037];
    Let b8 = M[001038];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Let loop_var10 = DeAddress(Offset(Address(MakeHiLo(b7,b8)),Add(Mul(2,Widen(b9)),1)));
    Label 11: {
      Let b12 = M[Address(loop_var10)];
      if (IsZeroByte(b12)) {
        Error: ("putProp",29)
      } else {
        if (Equal(29,Widen(BwAnd(b12,31)))) {
          if (Equal(Add(Widen(ShiftR(b12,5)),1),2)) {
            SetByte Offset(Address(loop_var10),1) 88;
            SetByte Offset(Offset(Address(loop_var10),1),1) 144;
          } else {
            SetByte Offset(Address(loop_var10),1) 144;
          }
        } else {
          Assign loop_var10 = DeAddress(Offset(Offset(Address(loop_var10),1),Add(Widen(ShiftR(b12,5)),1)));
          Goto: Label 11
        }
      }
    }
    TraceOperation 091885 (Insert_obj (Con 194) (Var (Global 0)));
    Let b13 = M[007908];
    Let b14 = M[007909];
    Let b15 = M[002501];
    if (IsZero(Widen(b15))) {} else {
      Let b16 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
      if (Equal(Widen(b16),194)) {
        Let b17 = M[002502];
        SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b17));
      } else {
        Let loop_var18 = Widen(b16);
        Label 19: {
          Let b20 = M[Offset(Offset(000751,Mul(loop_var18,9)),5)];
          if (Equal(Widen(b20),194)) {
            Let b21 = M[002502];
            SetByte Offset(Offset(000751,Mul(loop_var18,9)),5) LoByte(Widen(b21));
          } else {
            Assign loop_var18 = Widen(b20);
            Goto: Label 19
          }
        }
      }
    }
    SetByte 002501 b14;
    Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6)];
    SetByte 002502 LoByte(Widen(b22));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6) 194;
    TraceOperation 091888 (Insert_obj (Con 52) (Con 194));
    Let b23 = M[001223];
    if (IsZero(Widen(b23))) {} else {
      Let b24 = M[Offset(Offset(000751,Mul(Widen(b23),9)),6)];
      if (Equal(Widen(b24),52)) {
        Let b25 = M[001224];
        SetByte Offset(Offset(000751,Mul(Widen(b23),9)),6) LoByte(Widen(b25));
      } else {
        Let loop_var26 = Widen(b24);
        Label 27: {
          Let b28 = M[Offset(Offset(000751,Mul(loop_var26,9)),5)];
          if (Equal(Widen(b28),52)) {
            Let b29 = M[001224];
            SetByte Offset(Offset(000751,Mul(loop_var26,9)),5) LoByte(Widen(b29));
          } else {
            Assign loop_var26 = Widen(b28);
            Goto: Label 27
          }
        }
      }
    }
    SetByte 001223 194;
    Let b30 = M[002503];
    SetByte 001224 LoByte(Widen(b30));
    SetByte 002503 52;
    TraceOperation 091891 (Insert_obj (Con 27) (Var (Global 0)));
    Let b31 = M[007908];
    Let b32 = M[007909];
    Let b33 = M[000998];
    if (IsZero(Widen(b33))) {} else {
      Let b34 = M[Offset(Offset(000751,Mul(Widen(b33),9)),6)];
      if (Equal(Widen(b34),27)) {
        Let b35 = M[000999];
        SetByte Offset(Offset(000751,Mul(Widen(b33),9)),6) LoByte(Widen(b35));
      } else {
        Let loop_var36 = Widen(b34);
        Label 37: {
          Let b38 = M[Offset(Offset(000751,Mul(loop_var36,9)),5)];
          if (Equal(Widen(b38),27)) {
            Let b39 = M[000999];
            SetByte Offset(Offset(000751,Mul(loop_var36,9)),5) LoByte(Widen(b39));
          } else {
            Assign loop_var36 = Widen(b38);
            Goto: Label 37
          }
        }
      }
    }
    SetByte 000998 b32;
    Let b40 = M[Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),6)];
    SetByte 000999 LoByte(Widen(b40));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b31,b32),9)),6) 27;
    TraceOperation 091894 (Insert_obj (Con 51) (Con 27));
    Let b41 = M[001214];
    if (IsZero(Widen(b41))) {} else {
      Let b42 = M[Offset(Offset(000751,Mul(Widen(b41),9)),6)];
      if (Equal(Widen(b42),51)) {
        Let b43 = M[001215];
        SetByte Offset(Offset(000751,Mul(Widen(b41),9)),6) LoByte(Widen(b43));
      } else {
        Let loop_var44 = Widen(b42);
        Label 45: {
          Let b46 = M[Offset(Offset(000751,Mul(loop_var44,9)),5)];
          if (Equal(Widen(b46),51)) {
            Let b47 = M[001215];
            SetByte Offset(Offset(000751,Mul(loop_var44,9)),5) LoByte(Widen(b47));
          } else {
            Assign loop_var44 = Widen(b46);
            Goto: Label 45
          }
        }
      }
    }
    SetByte 001214 27;
    Let b48 = M[001000];
    SetByte 001215 LoByte(Widen(b48));
    SetByte 001000 51;
    TraceOperation 091897 (Call (Floc 022320) [Con -25112,Con 8] Sp);
    PushFrame;
    PushReturnAddress 091897;
    SetLocal 1 -25112;
    SetLocal 2 8;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 092083
  }
LocReturn 091897:
  PushStack call_result;
  TraceOperation 091905 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 091910 (Print " Suddenly, ");
  GamePrint " Suddenly, ";
  TraceOperation 091919 (Print_obj (Con 194));
  Let b2 = M[002504];
  Let b3 = M[002505];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 091921 (Print " leaps out of the crowd, grabs you by the necks, and points a blaster at your left head. Guards rush up, ");
  GamePrint " leaps out of the crowd, grabs you by the necks, and points a blaster at your left head. Guards rush up, ";
  TraceOperation 091984 (Print_obj (Con 51));
  Let b6 = M[001217];
  Let b7 = M[001218];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
  GamePrint ite_res9;
  TraceOperation 091986 (Print "s poised to shoot. \"Stay back!\" shouts ");
  GamePrint "s poised to shoot. \"Stay back!\" shouts ";
  TraceOperation 092015 (Print_obj (Con 194));
  Let b10 = M[002504];
  Let b11 = M[002505];
  Let b12 = M[Address(MakeHiLo(b10,b11))];
  Let ite_res13 = Ite((IsZeroByte(b12),"",GetText(Offset(Address(MakeHiLo(b10,b11)),1))));
  GamePrint ite_res13;
  TraceOperation 092017 (Print ". \"One more step and the");
  GamePrint ". \"One more step and the";
  TraceOperation 092034 (Print_paddr (Var (Global 44)));
  Let b14 = M[007996];
  Let b15 = M[007997];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b14,b15)));
  TraceOperation 092036 (Print " is fried meat!\" The guards seem unsure, and look at you for instructions.");
  GamePrint " is fried meat!\" The guards seem unsure, and look at you for instructions.";
  Jump: 092083
LocOp 092083:
  TraceOperation 092083 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 092083;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 092083:
  PushStack call_result;
  TraceOperation 092088 New_line;
  GamePrint "\n";
  TraceOperation 092089 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 092090:
  MakeRoutineFrame 0;
  Jump: 092091
LocOp 092091:
  TraceOperation 092091 (Je [Var (Global 203),Con 61,Con 43] (Branch F (Dloc 092104)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),61),Equal(MakeHiLo(b1,b2),43))) {
    TraceOperation 092097 (Print_ret "It's big.");
    GamePrint "It's big.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 092104
  }
LocOp 092104:
  TraceOperation 092104 (Je [Var (Global 203),Con 132] (Branch F (Dloc 092147)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 092108 (Call (Floc 092464) [] Sp);
    PushFrame;
    PushReturnAddress 092108;
    MakeRoutineFrame 0;
    Jump: 092465
  } else {
    Jump: 092147
  }
LocReturn 092108:
  PushStack call_result;
  TraceOperation 092113 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 092116 (Print_ret "You may be a scoundrel, but you're not a mass murderer.");
    GamePrint "You may be a scoundrel, but you're not a mass murderer.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocOp 092147:
  TraceOperation 092147 (Je [Var (Global 203),Con 38] (Branch F (Dloc 092184)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 092151 (Print_ret "You'd be crushed by the enthusiasm of your admirers.");
    GamePrint "You'd be crushed by the enthusiasm of your admirers.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 092184
  }
LocOp 092184:
  TraceOperation 092184 (Je [Var (Global 203),Con 173,Con 15] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),173),Equal(MakeHiLo(b1,b2),15))) {
    TraceOperation 092190 (Print_paddr (Var (Global 15)));
    Let b3 = M[007938];
    Let b4 = M[007939];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 092192 New_line;
    GamePrint "\n";
    TraceOperation 092193 (Call (Floc 043634) [] Sp);
    PushFrame;
    PushReturnAddress 092193;
    MakeRoutineFrame 0;
    Jump: 043635
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 092193:
  PushStack call_result;
  TraceOperation 092198 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 092200:
  MakeRoutineFrame 0;
  Jump: 092201
LocOp 092201:
  TraceOperation 092201 (Je [Var (Global 0),Con 66] (Branch F (Dloc 092215)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 092205 (Jz (Var (Global 90)) (Branch F (Dloc 092215)));
    Let b3 = M[008088];
    Let b4 = M[008089];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 092208 (Call (Floc 057596) [Con 65] Sp);
      PushFrame;
      PushReturnAddress 092208;
      SetLocal 1 65;
      MakeRoutineFrame 1;
      Jump: 057599
    } else {
      Jump: 092215
    }
  } else {
    Jump: 092215
  }
LocReturn 092208:
  PushStack call_result;
  TraceOperation 092214 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 092215:
  TraceOperation 092215 (Je [Var (Global 203),Con 21,Con 38] (Branch F (Dloc 092236)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),21),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 092221 (Je [Var (Global 0),Con 54] (Branch F (Dloc 092229)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),54)) {
      TraceOperation 092225 (Print_paddr (Var (Global 57)));
      Let b5 = M[008022];
      Let b6 = M[008023];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 092227 New_line;
      GamePrint "\n";
      TraceOperation 092228 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 092229
    }
  } else {
    Jump: 092236
  }
LocOp 092229:
  TraceOperation 092229 (Call (Floc 043620) [Con 17] Sp);
  PushFrame;
  PushReturnAddress 092229;
  SetLocal 1 17;
  MakeRoutineFrame 1;
  Jump: 043623
LocReturn 092229:
  PushStack call_result;
  TraceOperation 092235 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 092236:
  TraceOperation 092236 (Je [Var (Global 203),Con 48,Con 86] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 092242 (Je [Var (Global 0),Con 54] (Branch F (Dloc 092253)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),54)) {
      TraceOperation 092246 (Call (Floc 043620) [Con 27] Sp);
      PushFrame;
      PushReturnAddress 092246;
      SetLocal 1 27;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 092253
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 092246:
  PushStack call_result;
  TraceOperation 092252 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 092253:
  TraceOperation 092253 (Print_paddr (Var (Global 57)));
  Let b1 = M[008022];
  Let b2 = M[008023];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 092255 New_line;
  GamePrint "\n";
  TraceOperation 092256 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 092258:
  MakeRoutineFrame 0;
  Jump: 092259
LocOp 092259:
  TraceOperation 092259 (Je [Var (Global 203),Con 124] (Branch F (Dloc 092349)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 092264 (Test_attr (Con 52) (Con 21) (Branch F (Dloc 092349)));
    Let b3 = M[001221];
    if (TestBit(b3,2)) {
      TraceOperation 092269 (Print_paddr (Var (Global 31)));
      Let b4 = M[007970];
      Let b5 = M[007971];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 092271 (Print "They");
      GamePrint "They";
      TraceOperation 092276 (Jin (Con 51) (Con 27) (Branch F (Dloc 092286)));
      Let b6 = M[001214];
      if (Equal(27,Widen(b6))) {
        TraceOperation 092280 (Call (Floc 092666) [] Sp);
        PushFrame;
        PushReturnAddress 092280;
        MakeRoutineFrame 0;
        Jump: 092667
      } else {
        Jump: 092286
      }
    } else {
      Jump: 092349
    }
  } else {
    Jump: 092349
  }
LocReturn 092280:
  PushStack call_result;
  TraceOperation 092285 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 092286:
  TraceOperation 092286 (Clear_attr (Con 52) (Con 21));
  Let b1 = M[001221];
  SetByte 001221 ClearBit(b1,2);
  TraceOperation 092289 (Clear_attr (Con 52) (Con 27));
  Let b2 = M[001222];
  SetByte 001222 ClearBit(b2,4);
  TraceOperation 092292 (Insert_obj (Con 52) (Con 31));
  Let b3 = M[001223];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),52)) {
      Let b5 = M[001224];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),52)) {
          Let b9 = M[001224];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 001223 31;
  Let b10 = M[001036];
  SetByte 001224 LoByte(Widen(b10));
  SetByte 001036 52;
  TraceOperation 092295 (Call (Floc 022320) [Con -25112,Con 5] Sp);
  PushFrame;
  PushReturnAddress 092295;
  SetLocal 1 -25112;
  SetLocal 2 5;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 092295:
  PushStack call_result;
  TraceOperation 092303 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 092308 (Print_ret " are disarmed, though, and unable to do anything as you take the blaster.");
  GamePrint " are disarmed, though, and unable to do anything as you take the blaster.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 092349:
  TraceOperation 092349 (Je [Var (Global 203),Con 132] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 092353 (Je [Var (Global 202),Con 52] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),52)) {
      TraceOperation 092357 (Je [Var (Global 201),Con 52] (Branch F (Dloc 092367)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),52)) {
        TraceOperation 092361 (Call (Floc 031360) [] Sp);
        PushFrame;
        PushReturnAddress 092361;
        MakeRoutineFrame 0;
        Jump: 031361
      } else {
        Jump: 092367
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
LocReturn 092361:
  PushStack call_result;
  TraceOperation 092366 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 092367:
  TraceOperation 092367 (Je [Var (Global 201),Con 42] (Branch F (Dloc 092377)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),42)) {
    TraceOperation 092371 (Call (Floc 031422) [] Sp);
    PushFrame;
    PushReturnAddress 092371;
    MakeRoutineFrame 0;
    Jump: 031423
  } else {
    Jump: 092377
  }
LocReturn 092371:
  PushStack call_result;
  TraceOperation 092376 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 092377:
  TraceOperation 092377 (Test_attr (Var (Global 201)) (Con 25) (Branch T (Dloc 092386)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),3)];
  if (TestBit(b3,6)) {
    Jump: 092386
  } else {
    TraceOperation 092381 (Je [Var (Global 201),Con 53] (Branch F (Dloc 092451)));
    Let b4 = M[008310];
    Let b5 = M[008311];
    if (Equal(MakeHiLo(b4,b5),53)) {
      Jump: 092386
    } else {
      Jump: 092451
    }
  }
LocOp 092386:
  TraceOperation 092386 (Insert_obj (Var (Global 201)) (Con 219));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),MakeHiLo(b1,b2))) {
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),MakeHiLo(b1,b2))) {
          Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 219;
  Let b10 = M[002728];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b10));
  SetByte 002728 b2;
  TraceOperation 092389 (Print "With a cloud of sparks");
  GamePrint "With a cloud of sparks";
  TraceOperation 092406 (Je [Var (Global 201),Con 51] (Branch F (Dloc 092427)));
  Let b11 = M[008310];
  Let b12 = M[008311];
  if (Equal(MakeHiLo(b11,b12),51)) {
    TraceOperation 092410 (Print " the pile of ");
    GamePrint " the pile of ";
    TraceOperation 092419 (Print_obj (Con 51));
    Let b13 = M[001217];
    Let b14 = M[001218];
    Let b15 = M[Address(MakeHiLo(b13,b14))];
    Let ite_res16 = Ite((IsZeroByte(b15),"",GetText(Offset(Address(MakeHiLo(b13,b14)),1))));
    GamePrint ite_res16;
    TraceOperation 092421 (Print "s");
    GamePrint "s";
    TraceOperation 092424 (Jump 092434);
    Jump: 092434
  } else {
    Jump: 092427
  }
LocOp 092427:
  TraceOperation 092427 (Call (Floc 043738) [Var (Global 201),Con 1] Sp);
  Let b1 = M[008310];
  Let b2 = M[008311];
  PushFrame;
  PushReturnAddress 092427;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 092427:
  PushStack call_result;
  Jump: 092434
LocOp 092434:
  TraceOperation 092434 (Print " disintegrates. ");
  GamePrint " disintegrates. ";
  TraceOperation 092447 (Print_paddr (Var (Global 15)));
  Let b1 = M[007938];
  Let b2 = M[007939];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 092449 New_line;
  GamePrint "\n";
  TraceOperation 092450 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 092451:
  TraceOperation 092451 (Je [Var (Global 201),Con 220] (Branch F Dfalse));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),220)) {
    TraceOperation 092455 (Print_ret "You're too far.");
    GamePrint "You're too far.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 092464:
  MakeRoutineFrame 0;
  Jump: 092465
LocOp 092465:
  TraceOperation 092465 (Call (Floc 043468) [Con 52] Sp);
  PushFrame;
  PushReturnAddress 092465;
  SetLocal 1 52;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 092465:
  PushStack call_result;
  TraceOperation 092471 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 092474 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 092476 (Print " the ");
    GamePrint " the ";
    TraceOperation 092479 (Print_obj (Con 52));
    Let b4 = M[001226];
    Let b5 = M[001227];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 092481 (Print_ret ".");
    GamePrint ".\n";
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 1;
    JumpIndirect: (return) return_address_8
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
--------------------------------------------------
LocRoutine 092484:
  MakeRoutineFrame 0;
  Jump: 092485
LocOp 092485:
  TraceOperation 092485 (Je [Var (Global 203),Con 132] (Branch F (Dloc 092581)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 092490 (Call (Floc 092464) [] Sp);
    PushFrame;
    PushReturnAddress 092490;
    MakeRoutineFrame 0;
    Jump: 092465
  } else {
    Jump: 092581
  }
LocReturn 092490:
  PushStack call_result;
  TraceOperation 092495 (Jz (Var Sp) (Branch F Dtrue));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 092498 (Jin (Con 51) (Con 27) (Branch F (Dloc 092510)));
    Let b2 = M[001214];
    if (Equal(27,Widen(b2))) {
      TraceOperation 092502 (Call (Floc 022042) [Con 132,Con 27] Sp);
      PushFrame;
      PushReturnAddress 092502;
      SetLocal 1 132;
      SetLocal 2 27;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 092510
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  }
LocReturn 092502:
  PushStack call_result;
  TraceOperation 092509 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 092510:
  TraceOperation 092510 (Insert_obj (Con 51) (Con 219));
  Let b1 = M[001214];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),51)) {
      Let b3 = M[001215];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),51)) {
          Let b7 = M[001215];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 001214 219;
  Let b8 = M[002728];
  SetByte 001215 LoByte(Widen(b8));
  SetByte 002728 51;
  TraceOperation 092513 (Print "The rifles explode in a flashy display of sparks and shrapnel. ");
  GamePrint "The rifles explode in a flashy display of sparks and shrapnel. ";
  TraceOperation 092552 (Print_paddr (Var (Global 15)));
  Let b9 = M[007938];
  Let b10 = M[007939];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
  TraceOperation 092554 (Print_ret " The guards begin to look a bit concerned.");
  GamePrint " The guards begin to look a bit concerned.\n";
  PopFrame;
  PopReturnAddress return_address_11;
  SetResult 1;
  JumpIndirect: (return) return_address_11
LocOp 092581:
  TraceOperation 092581 (Je [Var (Global 203),Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 092585 (Test_attr (Con 51) (Con 21) (Branch F Dfalse));
    Let b3 = M[001212];
    if (TestBit(b3,2)) {
      TraceOperation 092589 (Print_paddr (Var (Global 31)));
      Let b4 = M[007970];
      Let b5 = M[007971];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
      TraceOperation 092591 (Print "As you begin taking the rifles, so do several of the guards. They may be dim, but they know what to do with a ");
      GamePrint "As you begin taking the rifles, so do several of the guards. They may be dim, but they know what to do with a ";
      TraceOperation 092656 (Print_obj (Con 51));
      Let b6 = M[001217];
      Let b7 = M[001218];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
      GamePrint ite_res9;
      TraceOperation 092658 (Call (Floc 042734) [Con -11702] Sp);
      PushFrame;
      PushReturnAddress 092658;
      SetLocal 1 -11702;
      MakeRoutineFrame 1;
      Jump: 042737
    } else {
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 0;
      JumpIndirect: (return) return_address_10
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 0;
    JumpIndirect: (return) return_address_11
  }
LocReturn 092658:
  PushStack call_result;
  TraceOperation 092665 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 092666:
  MakeRoutineFrame 0;
  Jump: 092667
LocOp 092667:
  TraceOperation 092667 (Call (Floc 043370) [Con 51] Sp);
  PushFrame;
  PushReturnAddress 092667;
  SetLocal 1 51;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043375
LocReturn 092667:
  PushStack call_result;
  TraceOperation 092673 (Jz (Var Sp) (Branch F (Dloc 092694)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 092676 (Print " grab the blaster and");
    GamePrint " grab the blaster and";
    TraceOperation 092691 (Jump 092713);
    Jump: 092713
  } else {
    Jump: 092694
  }
LocOp 092694:
  TraceOperation 092694 (Jin (Con 51) (Con 27) (Branch T (Dloc 092713)));
  Let b1 = M[001214];
  if (Equal(27,Widen(b1))) {
    Jump: 092713
  } else {
    TraceOperation 092698 (Print " pick up their rifles and");
    GamePrint " pick up their rifles and";
    Jump: 092713
  }
LocOp 092713:
  TraceOperation 092713 (Call (Floc 042734) [Con -10055] Sp);
  PushFrame;
  PushReturnAddress 092713;
  SetLocal 1 -10055;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 092713:
  PushStack call_result;
  TraceOperation 092720 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 092722:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 092725
LocOp 092725:
  TraceOperation 092725 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 092729 (Call (Floc 022320) [Con -19163,Con 11] Sp);
    PushFrame;
    PushReturnAddress 092729;
    SetLocal 1 -19163;
    SetLocal 2 11;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocReturn 092729:
  PushStack call_result;
  TraceOperation 092737 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 092742 (Store (Con 91) (Con 1));
  SetByte 008058 0;
  SetByte 008059 1;
  TraceOperation 092745 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 092746:
  MakeRoutineFrame 0;
  Jump: 092747
LocOp 092747:
  TraceOperation 092747 (Je [Var (Global 0),Con 213] (Branch F Dfalse));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),213)) {
    TraceOperation 092751 New_line;
    GamePrint "\n";
    TraceOperation 092752 (Call (Floc 042734) [Con -10018] Sp);
    PushFrame;
    PushReturnAddress 092752;
    SetLocal 1 -10018;
    MakeRoutineFrame 1;
    Jump: 042737
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 092752:
  PushStack call_result;
  TraceOperation 092759 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 092760:
  MakeRoutineFrame 0;
  Jump: 092761
LocOp 092761:
  TraceOperation 092761 (Je [Var (Global 203),Con 48,Con 86,Con 59] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),86)),Equal(MakeHiLo(b1,b2),59))) {
    TraceOperation 092768 (Call (Floc 040326) [] Sp);
    PushFrame;
    PushReturnAddress 092768;
    MakeRoutineFrame 0;
    Jump: 040327
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 092768:
  PushStack call_result;
  TraceOperation 092773 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 092774:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 092777
LocOp 092777:
  TraceOperation 092777 (Call (Floc 043406) [Var (Local 1)] Sp);
  GetLocal 1 local1_1;
  PushFrame;
  PushReturnAddress 092777;
  SetLocal 1 local1_1;
  MakeRoutineFrame 1;
  Jump: 043409
LocReturn 092777:
  PushStack call_result;
  TraceOperation 092783 (Je [Var Sp,Con 190,Con 192,Con 191] (Branch T Dtrue));
  PopStack popped1;
  if (LogOr(LogOr(Equal(popped1,190),Equal(popped1,192)),Equal(popped1,191))) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 092790 (Call (Floc 043406) [Var (Local 1)] Sp);
    GetLocal 1 local1_3;
    PushFrame;
    PushReturnAddress 092790;
    SetLocal 1 local1_3;
    MakeRoutineFrame 1;
    Jump: 043409
  }
LocReturn 092790:
  PushStack call_result;
  TraceOperation 092796 (Je [Var Sp,Con 210,Con 201,Con 188] (Branch T Dtrue));
  PopStack popped1;
  if (LogOr(LogOr(Equal(popped1,210),Equal(popped1,201)),Equal(popped1,188))) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 092803 (Call (Floc 043406) [Var (Local 1)] Sp);
    GetLocal 1 local1_3;
    PushFrame;
    PushReturnAddress 092803;
    SetLocal 1 local1_3;
    MakeRoutineFrame 1;
    Jump: 043409
  }
LocReturn 092803:
  PushStack call_result;
  TraceOperation 092809 (Je [Var Sp,Con 178,Con 218,Con 175] (Branch F Dfalse));
  PopStack popped1;
  if (LogOr(LogOr(Equal(popped1,178),Equal(popped1,218)),Equal(popped1,175))) {
    TraceOperation 092816 Rtrue;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
--------------------------------------------------
LocRoutine 092818:
  MakeRoutineFrame 0;
  Jump: 092819
LocOp 092819:
  TraceOperation 092819 (Je [Var (Global 203),Con 48,Con 59,Con 86] (Branch F (Dloc 092851)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),48),Equal(MakeHiLo(b1,b2),59)),Equal(MakeHiLo(b1,b2),86))) {
    TraceOperation 092826 (Je [Var (Global 0),Con 178] (Branch F (Dloc 092837)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),178)) {
      TraceOperation 092830 (Call (Floc 043620) [Con 20] Sp);
      PushFrame;
      PushReturnAddress 092830;
      SetLocal 1 20;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 092837
    }
  } else {
    Jump: 092851
  }
LocReturn 092830:
  PushStack call_result;
  TraceOperation 092836 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 092837:
  TraceOperation 092837 (Je [Var (Global 0),Con 54] (Branch F (Dloc 092845)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),54)) {
    TraceOperation 092841 (Print_paddr (Var (Global 57)));
    Let b3 = M[008022];
    Let b4 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 092843 New_line;
    GamePrint "\n";
    TraceOperation 092844 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 092845
  }
LocOp 092845:
  TraceOperation 092845 (Call (Floc 040326) [] Sp);
  PushFrame;
  PushReturnAddress 092845;
  MakeRoutineFrame 0;
  Jump: 040327
LocReturn 092845:
  PushStack call_result;
  TraceOperation 092850 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 092851:
  TraceOperation 092851 (Je [Var (Global 203),Con 28,Con 21,Con 38] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),28),Equal(MakeHiLo(b1,b2),21)),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 092858 (Je [Var (Global 0),Con 54] (Branch F (Dloc 092869)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),54)) {
      TraceOperation 092862 (Call (Floc 043620) [Con 27] Sp);
      PushFrame;
      PushReturnAddress 092862;
      SetLocal 1 27;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 092869
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 092862:
  PushStack call_result;
  TraceOperation 092868 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 092869:
  TraceOperation 092869 (Call (Floc 092774) [Con 31] Sp);
  PushFrame;
  PushReturnAddress 092869;
  SetLocal 1 31;
  MakeRoutineFrame 1;
  Jump: 092777
LocReturn 092869:
  PushStack call_result;
  TraceOperation 092875 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 092878 (Print_paddr (Var (Global 57)));
    Let b3 = M[008022];
    Let b4 = M[008023];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 092880 New_line;
    GamePrint "\n";
    TraceOperation 092881 Rtrue;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  }
--------------------------------------------------
LocRoutine 092882:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 092885
LocOp 092885:
  TraceOperation 092885 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 092889 (Jz (Var (Global 214)) (Branch F (Dloc 092907)));
    Let b2 = M[008336];
    Let b3 = M[008337];
    if (IsZero(MakeHiLo(b2,b3))) {
      TraceOperation 092892 (Insert_obj (Con 215) (Var (Global 0)));
      Let b4 = M[007908];
      Let b5 = M[007909];
      Let b6 = M[002690];
      if (IsZero(Widen(b6))) {} else {
        Let b7 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
        if (Equal(Widen(b7),215)) {
          Let b8 = M[002691];
          SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b8));
        } else {
          Let loop_var9 = Widen(b7);
          Label 10: {
            Let b11 = M[Offset(Offset(000751,Mul(loop_var9,9)),5)];
            if (Equal(Widen(b11),215)) {
              Let b12 = M[002691];
              SetByte Offset(Offset(000751,Mul(loop_var9,9)),5) LoByte(Widen(b12));
            } else {
              Assign loop_var9 = Widen(b11);
              Goto: Label 10
            }
          }
        }
      }
      SetByte 002690 b5;
      Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
      SetByte 002691 LoByte(Widen(b13));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6) 215;
      TraceOperation 092895 (Call (Floc 022340) [Con -17989] Sp);
      PushFrame;
      PushReturnAddress 092895;
      SetLocal 1 -17989;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 022349
    } else {
      Jump: 092907
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_14;
    SetResult 0;
    JumpIndirect: (return) return_address_14
  }
LocReturn 092895:
  PushStack call_result;
  TraceOperation 092902 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  Jump: 092907
LocOp 092907:
  TraceOperation 092907 (Test_attr (Con 216) (Con 3) (Branch F (Dloc 092989)));
  Let b1 = M[002695];
  if (TestBit(b1,4)) {
    TraceOperation 092912 (Print "As you pass the door, it slams against you, bruising your upper arm, and then opens again. \"Take that, door-kicker.\"");
    GamePrint "As you pass the door, it slams against you, bruising your upper arm, and then opens again. \"Take that, door-kicker.\"";
    TraceOperation 092987 New_line;
    GamePrint "\n";
    TraceOperation 092988 New_line;
    GamePrint "\n";
    Jump: 092989
  } else {
    Jump: 092989
  }
LocOp 092989:
  TraceOperation 092989 (Print "Upon entering the room, you are battered by tidal waves of depression. ");
  GamePrint "Upon entering the room, you are battered by tidal waves of depression. ";
  TraceOperation 093034 (Jl (Var (Global 1)) (Con 300) (Branch F (Dloc 093048)));
  Let b1 = M[007910];
  Let b2 = M[007911];
  if (LessThan(MakeHiLo(b1,b2),300)) {
    TraceOperation 093040 (Call (Floc 042734) [Con -12364] Sp);
    PushFrame;
    PushReturnAddress 093040;
    SetLocal 1 -12364;
    MakeRoutineFrame 1;
    Jump: 042737
  } else {
    Jump: 093048
  }
LocReturn 093040:
  PushStack call_result;
  TraceOperation 093047 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 093048:
  TraceOperation 093048 (Test_attr (Con 218) (Con 4) (Branch T (Dloc 093059)));
  Let b1 = M[002713];
  if (TestBit(b1,3)) {
    Jump: 093059
  } else {
    TraceOperation 093052 (Set_attr (Con 218) (Con 4));
    Let b2 = M[002713];
    SetByte 002713 SetBit(b2,3);
    TraceOperation 093055 (Add (Var (Global 1)) (Con 25) (Global 1));
    Let b3 = M[007910];
    Let b4 = M[007911];
    SetByte 007910 HiByte(Add(MakeHiLo(b3,b4),25));
    SetByte 007911 LoByte(Add(MakeHiLo(b3,b4),25));
    Jump: 093059
  }
LocOp 093059:
  TraceOperation 093059 (Print "However, the happiness derived from your high score and that thoroughly excellent cup of tea you had recently help you to survive.");
  GamePrint "However, the happiness derived from your high score and that thoroughly excellent cup of tea you had recently help you to survive.";
  TraceOperation 093136 New_line;
  GamePrint "\n";
  TraceOperation 093137 New_line;
  GamePrint "\n";
  TraceOperation 093138 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 093140:
  MakeRoutineFrame 0;
  Jump: 093141
LocOp 093141:
  TraceOperation 093141 (Je [Con 216,Var (Global 195)] (Branch F (Dloc 093284)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(216,MakeHiLo(b1,b2))) {
    TraceOperation 093146 (Je [Var (Global 203),Con 150] (Branch F (Dloc 093169)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 093150 (Je [Var (Global 201),Con 30] (Branch F (Dloc 093169)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 093154 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 093157 (Call (Floc 022042) [Con 22,Con 216,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame;
        PushReturnAddress 093157;
        SetLocal 1 22;
        SetLocal 2 216;
        SetLocal 3 MakeHiLo(b7,b8);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 022057
      } else {
        Jump: 093169
      }
    } else {
      Jump: 093169
    }
  } else {
    Jump: 093284
  }
LocReturn 093157:
  PushStack call_result;
  TraceOperation 093165 (Store (Con 211) (Con 216));
  SetByte 008298 0;
  SetByte 008299 216;
  TraceOperation 093168 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 093169:
  TraceOperation 093169 (Je [Var (Global 203),Con 75] (Branch F (Dloc 093187)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 093173 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 093176 (Call (Floc 022042) [Con 75,Con 216] Sp);
    PushFrame;
    PushReturnAddress 093176;
    SetLocal 1 75;
    SetLocal 2 216;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 093187
  }
LocReturn 093176:
  PushStack call_result;
  TraceOperation 093183 (Store (Con 211) (Con 216));
  SetByte 008298 0;
  SetByte 008299 216;
  TraceOperation 093186 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 093187:
  TraceOperation 093187 (Je [Var (Global 203),Con 174] (Branch F (Dloc 093210)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 093191 (Je [Var (Global 201),Con 28] (Branch F (Dloc 093210)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 093195 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 093198 (Call (Floc 022042) [Con 22,Con 216,Con 28] Sp);
      PushFrame;
      PushReturnAddress 093198;
      SetLocal 1 22;
      SetLocal 2 216;
      SetLocal 3 28;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 093210
    }
  } else {
    Jump: 093210
  }
LocReturn 093198:
  PushStack call_result;
  TraceOperation 093206 (Store (Con 211) (Con 216));
  SetByte 008298 0;
  SetByte 008299 216;
  TraceOperation 093209 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 093210:
  TraceOperation 093210 (Print "\"Unless you're here to show me some clear sign of your intelligence, please leave me alone. I'm a very busy door.\"");
  GamePrint "\"Unless you're here to show me some clear sign of your intelligence, please leave me alone. I'm a very busy door.\"";
  TraceOperation 093277 New_line;
  GamePrint "\n";
  TraceOperation 093278 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 093278;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 093278:
  PushStack call_result;
  TraceOperation 093283 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 093284:
  TraceOperation 093284 (Test_attr (Con 216) (Con 23) (Branch F (Dloc 093318)));
  Let b1 = M[002697];
  if (TestBit(b1,0)) {
    TraceOperation 093288 (Je [Var (Global 203),Con 85,Con 66,Con 134] (Branch T (Dloc 093299)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b2,b3),85),Equal(MakeHiLo(b2,b3),66)),Equal(MakeHiLo(b2,b3),134))) {
      Jump: 093299
    } else {
      TraceOperation 093295 (Je [Var (Global 203),Con 103] (Branch F (Dloc 093318)));
      Let b4 = M[008314];
      Let b5 = M[008315];
      if (Equal(MakeHiLo(b4,b5),103)) {
        Jump: 093299
      } else {
        Jump: 093318
      }
    }
  } else {
    Jump: 093318
  }
LocOp 093299:
  TraceOperation 093299 (Print_ret "You already induced the door to open.");
  GamePrint "You already induced the door to open.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 093318:
  TraceOperation 093318 (Test_attr (Con 216) (Con 23) (Branch F (Dloc 093369)));
  Let b1 = M[002697];
  if (TestBit(b1,0)) {
    TraceOperation 093322 (Je [Var (Global 203),Con 39] (Branch F (Dloc 093369)));
    Let b2 = M[008314];
    Let b3 = M[008315];
    if (Equal(MakeHiLo(b2,b3),39)) {
      TraceOperation 093326 (Print_ret "The door snaps, \"Hey! I'm resting. I've had a very busy day.\"");
      GamePrint "The door snaps, \"Hey! I'm resting. I've had a very busy day.\"\n";
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      Jump: 093369
    }
  } else {
    Jump: 093369
  }
LocOp 093369:
  TraceOperation 093369 (Je [Var (Global 203),Con 82] (Branch F (Dloc 093472)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),82)) {
    TraceOperation 093374 (Set_attr (Con 216) (Con 3));
    Let b3 = M[002695];
    SetByte 002695 SetBit(b3,4);
    TraceOperation 093377 (Print_ret "\"I suppose you think that since you have legs and I have not, you can get away with that sort of thing. Well,\" the door continues stiffly, \"maybe you can and maybe you can't.\"");
    GamePrint "\"I suppose you think that since you have legs and I have not, you can get away with that sort of thing. Well,\" the door continues stiffly, \"maybe you can and maybe you can't.\"\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 093472
  }
LocOp 093472:
  TraceOperation 093472 (Je [Var (Global 203),Con 66,Con 134] (Branch F (Dloc 093576)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),66),Equal(MakeHiLo(b1,b2),134))) {
    TraceOperation 093479 (Je [Var (Global 201),Con 8,Con 9] (Branch F (Dloc 093512)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),8),Equal(MakeHiLo(b3,b4),9))) {
      TraceOperation 093485 (Jz (Var (Global 222)) (Branch T (Dloc 093512)));
      Let b5 = M[008352];
      Let b6 = M[008353];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 093512
      } else {
        TraceOperation 093488 (Call (Floc 043468) [Con 9] Sp);
        PushFrame;
        PushReturnAddress 093488;
        SetLocal 1 9;
        MakeRoutineFrame 2;
        SetLocal 2 0;
        Jump: 043473
      }
    } else {
      Jump: 093512
    }
  } else {
    Jump: 093576
  }
LocReturn 093488:
  PushStack call_result;
  TraceOperation 093494 (Jz (Var Sp) (Branch T (Dloc 093512)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 093512
  } else {
    TraceOperation 093497 (Jz (Var (Global 66)) (Branch T (Dloc 093512)));
    Let b2 = M[008040];
    Let b3 = M[008041];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 093512
    } else {
      TraceOperation 093500 (Je [Var (Global 201),Var (Global 222)] (Branch T (Dloc 093512)));
      Let b4 = M[008310];
      Let b5 = M[008311];
      Let b6 = M[008352];
      Let b7 = M[008353];
      if (Equal(MakeHiLo(b4,b5),MakeHiLo(b6,b7))) {
        Jump: 093512
      } else {
        TraceOperation 093504 (Call (Floc 022042) [Con 85,Con 216] Sp);
        PushFrame;
        PushReturnAddress 093504;
        SetLocal 1 85;
        SetLocal 2 216;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      }
    }
  }
LocReturn 093504:
  PushStack call_result;
  TraceOperation 093511 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 093512:
  TraceOperation 093512 (Je [Var (Global 201),Con 8,Con 9] (Branch F (Dloc 093521)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(Equal(MakeHiLo(b1,b2),8),Equal(MakeHiLo(b1,b2),9))) {
    TraceOperation 093518 (Store (Con 238) (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    SetByte 008352 b3;
    SetByte 008353 b4;
    Jump: 093521
  } else {
    Jump: 093521
  }
LocOp 093521:
  TraceOperation 093521 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 093525 (Jl (Con 50) (Var Sp) (Branch T (Dloc 093565)));
  PopStack popped2;
  if (LessThan(50,popped2)) {
    Jump: 093565
  } else {
    TraceOperation 093529 (Print "The door says \"Big deal. Anyone can have");
    GamePrint "The door says \"Big deal. Anyone can have";
    TraceOperation 093554 (Call (Floc 043738) [Var (Global 201)] Sp);
    Let b3 = M[008310];
    Let b4 = M[008311];
    PushFrame;
    PushReturnAddress 093554;
    SetLocal 1 MakeHiLo(b3,b4);
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043743
  }
LocReturn 093554:
  PushStack call_result;
  TraceOperation 093560 (Print_ret ".\"");
  GamePrint ".\"\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 093565:
  TraceOperation 093565 (Print_ret "The door yawns.");
  GamePrint "The door yawns.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 093576:
  TraceOperation 093576 (Je [Var (Global 203),Con 85,Con 103] (Branch F (Dloc 093866)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),85),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 093583 (Call (Floc 043468) [Con 9] Sp);
    PushFrame;
    PushReturnAddress 093583;
    SetLocal 1 9;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    Jump: 093866
  }
LocReturn 093583:
  PushStack call_result;
  TraceOperation 093589 (Jz (Var Sp) (Branch T (Dloc 093705)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 093705
  } else {
    TraceOperation 093593 (Jz (Var (Global 66)) (Branch T (Dloc 093705)));
    Let b2 = M[008040];
    Let b3 = M[008041];
    if (IsZero(MakeHiLo(b2,b3))) {
      Jump: 093705
    } else {
      TraceOperation 093597 (Set_attr (Con 216) (Con 23));
      Let b4 = M[002697];
      SetByte 002697 SetBit(b4,0);
      TraceOperation 093600 (Print_ret "The door is almost speechless with admiration. \"Wow. Simultaneous tea and no tea. My apologies. You are clearly a heavy-duty philosopher.\" It opens respectfully.");
      GamePrint "The door is almost speechless with admiration. \"Wow. Simultaneous tea and no tea. My apologies. You are clearly a heavy-duty philosopher.\" It opens respectfully.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  }
LocOp 093705:
  TraceOperation 093705 (Print_ret "The door explains, in a haughty tone, that the room is occupied by a super-intelligent robot and that lesser beings (by which it means you) are not to be admitted. \"Show me some tiny example of your intelligence,\" it says, \"and maybe, just maybe, I might reconsider.\"");
  GamePrint "The door explains, in a haughty tone, that the room is occupied by a super-intelligent robot and that lesser beings (by which it means you) are not to be admitted. \"Show me some tiny example of your intelligence,\" it says, \"and maybe, just maybe, I might reconsider.\"\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 093866:
  TraceOperation 093866 (Je [Var (Global 203),Con 22] (Branch F (Dloc 093903)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 093870 (Je [Var (Global 202),Con 28] (Branch F (Dloc 093903)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 093874 (Print_ret "\"To keep out sub-intelligent beings.\"");
      GamePrint "\"To keep out sub-intelligent beings.\"\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 093903
    }
  } else {
    Jump: 093903
  }
LocOp 093903:
  TraceOperation 093903 (Je [Var (Global 203),Con 38] (Branch F (Dloc 093925)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),38)) {
    TraceOperation 093907 (Je [Var (Global 0),Con 218] (Branch F (Dloc 093918)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),218)) {
      TraceOperation 093911 (Call (Floc 043620) [Con 27] Sp);
      PushFrame;
      PushReturnAddress 093911;
      SetLocal 1 27;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 093918
    }
  } else {
    Jump: 093925
  }
LocReturn 093911:
  PushStack call_result;
  TraceOperation 093917 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 093918:
  TraceOperation 093918 (Call (Floc 043620) [Con 19] Sp);
  PushFrame;
  PushReturnAddress 093918;
  SetLocal 1 19;
  MakeRoutineFrame 1;
  Jump: 043623
LocReturn 093918:
  PushStack call_result;
  TraceOperation 093924 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 093925:
  TraceOperation 093925 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 093929 (Clear_attr (Con 216) (Con 26));
    Let b3 = M[002698];
    SetByte 002698 ClearBit(b3,5);
    TraceOperation 093932 (Call (Floc 034480) [] Sp);
    PushFrame;
    PushReturnAddress 093932;
    MakeRoutineFrame 0;
    Jump: 034481
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocReturn 093932:
  PushStack call_result;
  TraceOperation 093937 (Set_attr (Con 216) (Con 26));
  Let b1 = M[002698];
  SetByte 002698 SetBit(b1,5);
  TraceOperation 093940 Rtrue;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 093942:
  MakeRoutineFrame 0;
  Jump: 093943
LocOp 093943:
  TraceOperation 093943 (Je [Con 215,Var (Global 195)] (Branch F (Dloc 094605)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(215,MakeHiLo(b1,b2))) {
    TraceOperation 093948 (Je [Var (Global 203),Con 150] (Branch F (Dloc 093971)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 093952 (Je [Var (Global 201),Con 30] (Branch F (Dloc 093971)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 093956 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 093959 (Call (Floc 022042) [Con 22,Con 215,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame;
        PushReturnAddress 093959;
        SetLocal 1 22;
        SetLocal 2 215;
        SetLocal 3 MakeHiLo(b7,b8);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 022057
      } else {
        Jump: 093971
      }
    } else {
      Jump: 093971
    }
  } else {
    Jump: 094605
  }
LocReturn 093959:
  PushStack call_result;
  TraceOperation 093967 (Store (Con 211) (Con 215));
  SetByte 008298 0;
  SetByte 008299 215;
  TraceOperation 093970 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 093971:
  TraceOperation 093971 (Je [Var (Global 203),Con 75] (Branch F (Dloc 093989)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 093975 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 093978 (Call (Floc 022042) [Con 75,Con 215] Sp);
    PushFrame;
    PushReturnAddress 093978;
    SetLocal 1 75;
    SetLocal 2 215;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 093989
  }
LocReturn 093978:
  PushStack call_result;
  TraceOperation 093985 (Store (Con 211) (Con 215));
  SetByte 008298 0;
  SetByte 008299 215;
  TraceOperation 093988 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 093989:
  TraceOperation 093989 (Je [Var (Global 203),Con 174] (Branch F (Dloc 094012)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 093993 (Je [Var (Global 201),Con 28] (Branch F (Dloc 094012)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 093997 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 094000 (Call (Floc 022042) [Con 22,Con 215,Con 28] Sp);
      PushFrame;
      PushReturnAddress 094000;
      SetLocal 1 22;
      SetLocal 2 215;
      SetLocal 3 28;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 094012
    }
  } else {
    Jump: 094012
  }
LocReturn 094000:
  PushStack call_result;
  TraceOperation 094008 (Store (Con 211) (Con 215));
  SetByte 008298 0;
  SetByte 008299 215;
  TraceOperation 094011 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 094012:
  TraceOperation 094012 (Je [Var (Global 0),Con 218] (Branch F (Dloc 094565)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),218)) {
    TraceOperation 094017 (Je [Var (Global 203),Con 103,Con 125] (Branch F (Dloc 094409)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),103),Equal(MakeHiLo(b3,b4),125))) {
      TraceOperation 094024 (Je [Var (Global 201),Con 176,Con 177] (Branch F (Dloc 094409)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (LogOr(Equal(MakeHiLo(b5,b6),176),Equal(MakeHiLo(b5,b6),177))) {
        TraceOperation 094031 (Jz (Var (Global 214)) (Branch F (Dloc 094131)));
        Let b7 = M[008336];
        Let b8 = M[008337];
        if (IsZero(MakeHiLo(b7,b8))) {
          TraceOperation 094035 (Print "\"");
          GamePrint "\"";
          TraceOperation 094038 (Print_paddr (Var (Global 14)));
          Let b9 = M[007936];
          Let b10 = M[007937];
          GamePrint GetText(PackedAddress Z3(MakeHiLo(b9,b10)));
          TraceOperation 094040 (Print_ret "stupid. Are you aware,\" he asks, \"that this ship is in space, that space is an almost perfect vacuum, and that the hatch is the only thing holding in all the air?\"");
          GamePrint "stupid. Are you aware,\" he asks, \"that this ship is in space, that space is an almost perfect vacuum, and that the hatch is the only thing holding in all the air?\"\n";
          PopFrame;
          PopReturnAddress return_address_11;
          SetResult 1;
          JumpIndirect: (return) return_address_11
        } else {
          Jump: 094131
        }
      } else {
        Jump: 094409
      }
    } else {
      Jump: 094409
    }
  } else {
    Jump: 094565
  }
LocOp 094131:
  TraceOperation 094131 (Je [Var (Global 220),Con 3] (Branch F (Dloc 094179)));
  Let b1 = M[008348];
  Let b2 = M[008349];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 094135 (Print "\"After the help I got last time? ");
    GamePrint "\"After the help I got last time? ";
    TraceOperation 094160 (Print_paddr (Var (Global 14)));
    Let b3 = M[007936];
    Let b4 = M[007937];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 094162 (Print_ret "ungrateful. Go away.\"");
    GamePrint "ungrateful. Go away.\"\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 094179
  }
LocOp 094179:
  TraceOperation 094179 (Je [Var (Global 220),Con 4] (Branch F (Dloc 094192)));
  Let b1 = M[008348];
  Let b2 = M[008349];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 094183 (Print_ret "\"I did.\"");
    GamePrint "\"I did.\"\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 094192
  }
LocOp 094192:
  TraceOperation 094192 (Jg (Var (Global 220)) (Con 0) (Branch F (Dloc 094230)));
  Let b1 = M[008348];
  Let b2 = M[008349];
  if (GreaterThan(MakeHiLo(b1,b2),0)) {
    TraceOperation 094196 (Print "\"Yes, I said I'd do it! ");
    GamePrint "\"Yes, I said I'd do it! ";
    TraceOperation 094217 (Print_paddr (Var (Global 14)));
    Let b3 = M[007936];
    Let b4 = M[007937];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 094219 (Print_ret "repetitious.\"");
    GamePrint "repetitious.\"\n";
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 1;
    JumpIndirect: (return) return_address_5
  } else {
    Jump: 094230
  }
LocOp 094230:
  TraceOperation 094230 (Store (Con 236) (Con 1));
  SetByte 008348 0;
  SetByte 008349 1;
  TraceOperation 094233 (Call (Floc 022320) [Con -17989,Con 12] Sp);
  PushFrame;
  PushReturnAddress 094233;
  SetLocal 1 -17989;
  SetLocal 2 12;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 094233:
  PushStack call_result;
  TraceOperation 094241 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 094246 (Print "\"");
  GamePrint "\"";
  TraceOperation 094249 (Print_paddr (Var (Global 14)));
  Let b2 = M[007936];
  Let b3 = M[007937];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 094251 (Print "demanding. Do this. Pick up that. Unjam the opening mechanism of the other. Meet me in the hatchway ");
  GamePrint "demanding. Do this. Pick up that. Unjam the opening mechanism of the other. Meet me in the hatchway ";
  TraceOperation 094316 (Print_obj (Con 175));
  Let b4 = M[002333];
  Let b5 = M[002334];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
  GamePrint ite_res7;
  TraceOperation 094318 (Print_ret " in twelve turns. I suppose,\" he mutters, \"you can count up to twelve. So hard to know with morons. And don't forget to bring the proper tool.\"");
  GamePrint " in twelve turns. I suppose,\" he mutters, \"you can count up to twelve. So hard to know with morons. And don't forget to bring the proper tool.\"\n";
  PopFrame;
  PopReturnAddress return_address_8;
  SetResult 1;
  JumpIndirect: (return) return_address_8
LocOp 094409:
  TraceOperation 094409 (Je [Var (Global 203),Con 174] (Branch F (Dloc 094511)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 094414 (Je [Var (Global 201),Con 13] (Branch F (Dloc 094511)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),13)) {
      TraceOperation 094419 (Jg (Var (Global 220)) (Con 0) (Branch F (Dloc 094511)));
      Let b5 = M[008348];
      Let b6 = M[008349];
      if (GreaterThan(MakeHiLo(b5,b6),0)) {
        TraceOperation 094424 (Print_ret "Marvin looks scornful. \"How did you get past my door if you're so primordially benighted that you don't even know which tool is needed for a job like this?\"");
        GamePrint "Marvin looks scornful. \"How did you get past my door if you're so primordially benighted that you don't even know which tool is needed for a job like this?\"\n";
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      } else {
        Jump: 094511
      }
    } else {
      Jump: 094511
    }
  } else {
    Jump: 094511
  }
LocOp 094511:
  TraceOperation 094511 (Print "\"Please don't feel you have to take any notice of me. I'm just a menial robot.\"");
  GamePrint "\"Please don't feel you have to take any notice of me. I'm just a menial robot.\"";
  TraceOperation 094558 New_line;
  GamePrint "\n";
  TraceOperation 094559 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 094559;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 094559:
  PushStack call_result;
  TraceOperation 094564 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 094565:
  TraceOperation 094565 (Print "\"I think you ought to know I'm feeling very depressed.\"");
  GamePrint "\"I think you ought to know I'm feeling very depressed.\"";
  TraceOperation 094598 New_line;
  GamePrint "\n";
  TraceOperation 094599 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 094599;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 094599:
  PushStack call_result;
  TraceOperation 094604 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 094605:
  TraceOperation 094605 (Je [Var (Global 203),Con 22] (Branch F (Dloc 094722)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 094610 (Je [Var (Global 202),Con 28] (Branch F (Dloc 094722)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 094615 (Print_ret "\"Being clever doesn't always make you happy, you know. Look at me, brain the size of a planet, how many points do you think I've got? Minus thirty zillion at the last count.\"");
      GamePrint "\"Being clever doesn't always make you happy, you know. Look at me, brain the size of a planet, how many points do you think I've got? Minus thirty zillion at the last count.\"\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 094722
    }
  } else {
    Jump: 094722
  }
LocOp 094722:
  TraceOperation 094722 (Je [Var (Global 203),Con 69] (Branch F (Dloc 094751)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 094726 (Je [Var (Global 151),Con 2] (Branch F (Dloc 094751)));
    Let b3 = M[008210];
    Let b4 = M[008211];
    if (Equal(MakeHiLo(b3,b4),2)) {
      TraceOperation 094730 (Jin (Con 215) (Con 218) (Branch F (Dloc 094741)));
      Let b5 = M[002690];
      if (Equal(218,Widen(b5))) {
        TraceOperation 094734 (Call (Floc 043620) [Con 19] Sp);
        PushFrame;
        PushReturnAddress 094734;
        SetLocal 1 19;
        MakeRoutineFrame 1;
        Jump: 043623
      } else {
        Jump: 094741
      }
    } else {
      Jump: 094751
    }
  } else {
    Jump: 094751
  }
LocReturn 094734:
  PushStack call_result;
  TraceOperation 094740 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 094741:
  TraceOperation 094741 (Get_parent (Con 215) Sp);
  Let b1 = M[002690];
  PushStack Widen(b1);
  TraceOperation 094744 (Call (Floc 042574) [Var Sp] Sp);
  PopStack popped2;
  PushFrame;
  PushReturnAddress 094744;
  SetLocal 1 popped2;
  MakeRoutineFrame 2;
  SetLocal 2 1;
  Jump: 042579
LocReturn 094744:
  PushStack call_result;
  TraceOperation 094750 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 094751:
  TraceOperation 094751 (Je [Var (Global 203),Con 69] (Branch F (Dloc 094766)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 094755 (Je [Var (Global 151),Con 7] (Branch F (Dloc 094766)));
    Let b3 = M[008210];
    Let b4 = M[008211];
    if (Equal(MakeHiLo(b3,b4),7)) {
      TraceOperation 094759 (Call (Floc 043620) [Con 19] Sp);
      PushFrame;
      PushReturnAddress 094759;
      SetLocal 1 19;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 094766
    }
  } else {
    Jump: 094766
  }
LocReturn 094759:
  PushStack call_result;
  TraceOperation 094765 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 094766:
  TraceOperation 094766 (Je [Var (Global 203),Con 66] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 094770 (Je [Var (Global 220),Con 2] (Branch F Dfalse));
    Let b3 = M[008348];
    Let b4 = M[008349];
    if (Equal(MakeHiLo(b3,b4),2)) {
      TraceOperation 094774 (Je [Var (Global 201),Var (Global 219)] (Branch F (Dloc 095072)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      Let b7 = M[008346];
      Let b8 = M[008347];
      if (Equal(MakeHiLo(b5,b6),MakeHiLo(b7,b8))) {
        TraceOperation 094779 (Add (Var (Global 1)) (Con 25) (Global 1));
        Let b9 = M[007910];
        Let b10 = M[007911];
        SetByte 007910 HiByte(Add(MakeHiLo(b9,b10),25));
        SetByte 007911 LoByte(Add(MakeHiLo(b9,b10),25));
        TraceOperation 094783 (Store (Con 236) (Con 4));
        SetByte 008348 0;
        SetByte 008349 4;
        TraceOperation 094786 (Store (Con 167) (Con 7));
        SetByte 008210 0;
        SetByte 008211 7;
        TraceOperation 094789 (Call (Floc 022320) [Con 16277,Con 2] Sp);
        PushFrame;
        PushReturnAddress 094789;
        SetLocal 1 16277;
        SetLocal 2 2;
        MakeRoutineFrame 3;
        SetLocal 3 0;
        Jump: 022327
      } else {
        Jump: 095072
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 0;
      JumpIndirect: (return) return_address_11
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_12;
    SetResult 0;
    JumpIndirect: (return) return_address_12
  }
LocReturn 094789:
  PushStack call_result;
  TraceOperation 094797 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 094802 (Call (Floc 022340) [Con -17989] Sp);
  PushFrame;
  PushReturnAddress 094802;
  SetLocal 1 -17989;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 094802:
  PushStack call_result;
  TraceOperation 094809 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 094814 (Set_attr (Con 177) (Con 23));
  Let b2 = M[002346];
  SetByte 002346 SetBit(b2,0);
  TraceOperation 094817 (Insert_obj (Con 215) (Con 218));
  Let b3 = M[002690];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),215)) {
      Let b5 = M[002691];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),215)) {
          Let b9 = M[002691];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 002690 218;
  Let b10 = M[002719];
  SetByte 002691 LoByte(Widen(b10));
  SetByte 002719 215;
  TraceOperation 094820 (Insert_obj (Var (Global 219)) (Con 215));
  Let b11 = M[008346];
  Let b12 = M[008347];
  Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),4)];
  if (IsZero(Widen(b13))) {} else {
    Let b14 = M[Offset(Offset(000751,Mul(Widen(b13),9)),6)];
    if (Equal(Widen(b14),MakeHiLo(b11,b12))) {
      Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b13),9)),6) LoByte(Widen(b15));
    } else {
      Let loop_var16 = Widen(b14);
      Label 17: {
        Let b18 = M[Offset(Offset(000751,Mul(loop_var16,9)),5)];
        if (Equal(Widen(b18),MakeHiLo(b11,b12))) {
          Let b19 = M[Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var16,9)),5) LoByte(Widen(b19));
        } else {
          Assign loop_var16 = Widen(b18);
          Goto: Label 17
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),4) 215;
  Let b20 = M[002692];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b11,b12),9)),5) LoByte(Widen(b20));
  SetByte 002692 b12;
  TraceOperation 094823 (Print "Marvin fiddles inside the ");
  GamePrint "Marvin fiddles inside the ";
  TraceOperation 094840 (Print_obj (Con 176));
  Let b21 = M[002342];
  Let b22 = M[002343];
  Let b23 = M[Address(MakeHiLo(b21,b22))];
  Let ite_res24 = Ite((IsZeroByte(b23),"",GetText(Offset(Address(MakeHiLo(b21,b22)),1))));
  GamePrint ite_res24;
  TraceOperation 094842 (Print " with the ");
  GamePrint " with the ";
  TraceOperation 094847 (Print_obj (Var (Global 219)));
  Let b25 = M[008346];
  Let b26 = M[008347];
  Let b27 = M[Offset(Offset(000751,Mul(MakeHiLo(b25,b26),9)),7)];
  Let b28 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b25,b26),9)),7),1)];
  Let b29 = M[Address(MakeHiLo(b27,b28))];
  Let ite_res30 = Ite((IsZeroByte(b29),"",GetText(Offset(Address(MakeHiLo(b27,b28)),1))));
  GamePrint ite_res30;
  TraceOperation 094849 (Print_ret " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"");
  GamePrint " for about three-tenths of a second. You hear the hatchway slide open. \"I don't expect you to be grateful,\" says Marvin, \"or even interested, but that was probably more complicated than every single action you'll ever perform in your entire life put together.\" He limps away. \"And me,\" you hear him mutter as he goes, \"with this terrible pain in all the diodes down my left side.\"\n";
  PopFrame;
  PopReturnAddress return_address_31;
  SetResult 1;
  JumpIndirect: (return) return_address_31
LocOp 095072:
  TraceOperation 095072 (Print "\"That's not");
  GamePrint "\"That's not";
  TraceOperation 095083 (Call (Floc 043738) [Var (Global 219)] Sp);
  Let b1 = M[008346];
  Let b2 = M[008347];
  PushFrame;
  PushReturnAddress 095083;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 095083:
  PushStack call_result;
  TraceOperation 095089 (Print_ret ".\"");
  GamePrint ".\"\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 095094:
  MakeRoutineFrame 0;
  Jump: 095095
LocOp 095095:
  TraceOperation 095095 (Call (Floc 022320) [Con -17989,Con -1] Sp);
  PushFrame;
  PushReturnAddress 095095;
  SetLocal 1 -17989;
  SetLocal 2 -1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 095095:
  PushStack call_result;
  TraceOperation 095104 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 095109 (Je [Var (Global 220),Con 2] (Branch F (Dloc 095154)));
  Let b2 = M[008348];
  Let b3 = M[008349];
  if (Equal(MakeHiLo(b2,b3),2)) {
    TraceOperation 095113 (Store (Con 236) (Con 3));
    SetByte 008348 0;
    SetByte 008349 3;
    TraceOperation 095116 New_line;
    GamePrint "\n";
    TraceOperation 095117 (Je [Var (Global 0),Con 178] (Branch F (Dloc 095141)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    if (Equal(MakeHiLo(b4,b5),178)) {
      TraceOperation 095121 (Print "Marvin emerges from the ");
      GamePrint "Marvin emerges from the ";
      TraceOperation 095136 (Print_obj (Con 175));
      Let b6 = M[002333];
      Let b7 = M[002334];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
      GamePrint ite_res9;
      TraceOperation 095138 (Print ". ");
      GamePrint ". ";
      Jump: 095141
    } else {
      Jump: 095141
    }
  } else {
    Jump: 095154
  }
LocOp 095141:
  TraceOperation 095141 (Print "\"");
  GamePrint "\"";
  TraceOperation 095144 (Call (Floc 095546) [] Sp);
  PushFrame;
  PushReturnAddress 095144;
  MakeRoutineFrame 0;
  Jump: 095547
LocReturn 095144:
  PushStack call_result;
  TraceOperation 095149 (Store (Con 236) (Con 3));
  SetByte 008348 0;
  SetByte 008349 3;
  TraceOperation 095152 (Ret (Var (Global 220)));
  Let b1 = M[008348];
  Let b2 = M[008349];
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult MakeHiLo(b1,b2);
  JumpIndirect: (return) return_address_3
LocOp 095154:
  TraceOperation 095154 (Jin (Con 215) (Con 175) (Branch F (Dloc 095279)));
  Let b1 = M[002690];
  if (Equal(175,Widen(b1))) {
    TraceOperation 095159 (Je [Var (Global 0),Con 175] (Branch F (Dloc 095222)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    if (Equal(MakeHiLo(b2,b3),175)) {
      TraceOperation 095163 (Jz (Var (Global 219)) (Branch F (Dloc 095183)));
      Let b4 = M[008346];
      Let b5 = M[008347];
      if (IsZero(MakeHiLo(b4,b5))) {
        Jump: 095166
      } else {
        Jump: 095183
      }
    } else {
      Jump: 095222
    }
  } else {
    Jump: 095279
  }
LocOp 095166:
  TraceOperation 095166 (Call (Floc 020718) [Var (Global 67)] (Global 219));
  Let b1 = M[008042];
  Let b2 = M[008043];
  PushFrame;
  PushReturnAddress 095166;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 020721
LocReturn 095166:
  SetByte 008346 HiByte(call_result);
  SetByte 008347 LoByte(call_result);
  TraceOperation 095172 (Call (Floc 043468) [Var (Global 219),Con 31] Sp);
  Let b1 = M[008346];
  Let b2 = M[008347];
  PushFrame;
  PushReturnAddress 095172;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 31;
  MakeRoutineFrame 2;
  Jump: 043473
LocReturn 095172:
  PushStack call_result;
  TraceOperation 095179 (Jz (Var Sp) (Branch F (Dloc 095166)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 095183
  } else {
    Jump: 095166
  }
LocOp 095183:
  TraceOperation 095183 (Store (Con 236) (Con 2));
  SetByte 008348 0;
  SetByte 008349 2;
  TraceOperation 095186 (Print "Marvin, looking bored, says \"Hand me");
  GamePrint "Marvin, looking bored, says \"Hand me";
  TraceOperation 095211 (Call (Floc 043738) [Var (Global 219)] Sp);
  Let b1 = M[008346];
  Let b2 = M[008347];
  PushFrame;
  PushReturnAddress 095211;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 095211:
  PushStack call_result;
  TraceOperation 095217 (Print_ret ".\"");
  GamePrint ".\"\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 095222:
  TraceOperation 095222 New_line;
  GamePrint "\n";
  TraceOperation 095223 (Print "Marvin wanders up to you. \"I went to the ");
  GamePrint "Marvin wanders up to you. \"I went to the ";
  TraceOperation 095250 (Print_obj (Con 175));
  Let b1 = M[002333];
  Let b2 = M[002334];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 095252 (Print " but you never showed up. ");
  GamePrint " but you never showed up. ";
  TraceOperation 095269 (Call (Floc 095546) [] Sp);
  PushFrame;
  PushReturnAddress 095269;
  MakeRoutineFrame 0;
  Jump: 095547
LocReturn 095269:
  PushStack call_result;
  TraceOperation 095274 (Store (Con 236) (Con 3));
  SetByte 008348 0;
  SetByte 008349 3;
  TraceOperation 095277 (Ret (Var (Global 220)));
  Let b1 = M[008348];
  Let b2 = M[008349];
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult MakeHiLo(b1,b2);
  JumpIndirect: (return) return_address_3
LocOp 095279:
  TraceOperation 095279 (Je [Var (Global 220),Con 1] (Branch F (Dloc 095305)));
  Let b1 = M[008348];
  Let b2 = M[008349];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 095283 (Insert_obj (Con 215) (Con 175));
    Let b3 = M[002690];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),215)) {
        Let b5 = M[002691];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),215)) {
            Let b9 = M[002691];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002690 175;
    Let b10 = M[002332];
    SetByte 002691 LoByte(Widen(b10));
    SetByte 002332 215;
    TraceOperation 095286 (Je [Var (Global 0),Con 175] (Branch F Dfalse));
    Let b11 = M[007908];
    Let b12 = M[007909];
    if (Equal(MakeHiLo(b11,b12),175)) {
      TraceOperation 095290 (Print_ret "Marvin shambles in.");
      GamePrint "Marvin shambles in.\n";
      PopFrame;
      PopReturnAddress return_address_13;
      SetResult 1;
      JumpIndirect: (return) return_address_13
    } else {
      PopFrame;
      PopReturnAddress return_address_14;
      SetResult 0;
      JumpIndirect: (return) return_address_14
    }
  } else {
    Jump: 095305
  }
LocOp 095305:
  TraceOperation 095305 (Jin (Con 215) (Var (Global 0)) (Branch F (Dloc 095428)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002690];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    TraceOperation 095310 (Call (Floc 022320) [Con 16277,Con 2] Sp);
    PushFrame;
    PushReturnAddress 095310;
    SetLocal 1 16277;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 095428
  }
LocReturn 095310:
  PushStack call_result;
  TraceOperation 095318 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 095323 (Store (Con 167) (Con 2));
  SetByte 008210 0;
  SetByte 008211 2;
  TraceOperation 095326 New_line;
  GamePrint "\n";
  TraceOperation 095327 (Je [Var (Global 0),Con 178,Con 210,Con 190] (Branch T (Dloc 095341)));
  Let b2 = M[007908];
  Let b3 = M[007909];
  if (LogOr(LogOr(Equal(MakeHiLo(b2,b3),178),Equal(MakeHiLo(b2,b3),210)),Equal(MakeHiLo(b2,b3),190))) {
    Jump: 095341
  } else {
    TraceOperation 095334 (Je [Var (Global 0),Con 192,Con 188,Con 201] (Branch F (Dloc 095372)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    if (LogOr(LogOr(Equal(MakeHiLo(b4,b5),192),Equal(MakeHiLo(b4,b5),188)),Equal(MakeHiLo(b4,b5),201))) {
      Jump: 095341
    } else {
      Jump: 095372
    }
  }
LocOp 095341:
  TraceOperation 095341 (Print "Marvin wanders off.");
  GamePrint "Marvin wanders off.";
  TraceOperation 095356 New_line;
  GamePrint "\n";
  TraceOperation 095357 (Je [Var (Global 0),Con 192,Con 188,Con 178] (Branch F (Dloc 095368)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),192),Equal(MakeHiLo(b1,b2),188)),Equal(MakeHiLo(b1,b2),178))) {
    TraceOperation 095364 (Insert_obj (Con 215) (Con 191));
    Let b3 = M[002690];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),215)) {
        Let b5 = M[002691];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),215)) {
            Let b9 = M[002691];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002690 191;
    Let b10 = M[002476];
    SetByte 002691 LoByte(Widen(b10));
    SetByte 002476 215;
    TraceOperation 095367 Rtrue;
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 1;
    JumpIndirect: (return) return_address_11
  } else {
    Jump: 095368
  }
LocOp 095368:
  TraceOperation 095368 (Insert_obj (Con 215) (Con 192));
  Let b1 = M[002690];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),215)) {
      Let b3 = M[002691];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),215)) {
          Let b7 = M[002691];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002690 192;
  Let b8 = M[002485];
  SetByte 002691 LoByte(Widen(b8));
  SetByte 002485 215;
  TraceOperation 095371 Rtrue;
  PopFrame;
  PopReturnAddress return_address_9;
  SetResult 1;
  JumpIndirect: (return) return_address_9
LocOp 095372:
  TraceOperation 095372 (Je [Var (Global 0),Con 191] (Branch F (Dloc 095418)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),191)) {
    TraceOperation 095376 (Insert_obj (Con 215) (Con 218));
    Let b3 = M[002690];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),215)) {
        Let b5 = M[002691];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),215)) {
            Let b9 = M[002691];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002690 218;
    Let b10 = M[002719];
    SetByte 002691 LoByte(Widen(b10));
    SetByte 002719 215;
    TraceOperation 095379 (Print_ret "Marvin enters a room to port, and the door closes behind him.");
    GamePrint "Marvin enters a room to port, and the door closes behind him.\n";
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 1;
    JumpIndirect: (return) return_address_11
  } else {
    Jump: 095418
  }
LocOp 095418:
  TraceOperation 095418 (Print "Bug #17");
  GamePrint "Bug #17";
  TraceOperation 095427 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 095428:
  TraceOperation 095428 (Jin (Con 215) (Con 218) (Branch T (Dloc 095436)));
  Let b1 = M[002690];
  if (Equal(218,Widen(b1))) {
    Jump: 095436
  } else {
    TraceOperation 095432 (Insert_obj (Con 215) (Con 218));
    Let b2 = M[002690];
    if (IsZero(Widen(b2))) {} else {
      Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b3),215)) {
        Let b4 = M[002691];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
      } else {
        Let loop_var5 = Widen(b3);
        Label 6: {
          Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
          if (Equal(Widen(b7),215)) {
            Let b8 = M[002691];
            SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
          } else {
            Assign loop_var5 = Widen(b7);
            Goto: Label 6
          }
        }
      }
    }
    SetByte 002690 218;
    Let b9 = M[002719];
    SetByte 002691 LoByte(Widen(b9));
    SetByte 002719 215;
    TraceOperation 095435 Rfalse;
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
LocOp 095436:
  TraceOperation 095436 (Call (Floc 092774) [Con 31] Sp);
  PushFrame;
  PushReturnAddress 095436;
  SetLocal 1 31;
  MakeRoutineFrame 1;
  Jump: 092777
LocReturn 095436:
  PushStack call_result;
  TraceOperation 095442 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 095445 (Je [Var (Global 0),Con 175] (Branch T Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),175)) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 095449 (Test_attr (Con 216) (Con 23) (Branch T Dfalse));
      Let b6 = M[002697];
      if (TestBit(b6,0)) {
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 0;
        JumpIndirect: (return) return_address_7
      } else {
        TraceOperation 095453 (Jz (Var (Global 213)) (Branch F Dfalse));
        Let b8 = M[008334];
        Let b9 = M[008335];
        if (IsZero(MakeHiLo(b8,b9))) {
          TraceOperation 095456 (Je [Var (Global 0),Con 188] (Branch F (Dloc 095464)));
          Let b10 = M[007908];
          Let b11 = M[007909];
          if (Equal(MakeHiLo(b10,b11),188)) {
            TraceOperation 095460 (Jl (Var (Global 211)) (Con 3) (Branch T Dfalse));
            Let b12 = M[008330];
            Let b13 = M[008331];
            if (LessThan(MakeHiLo(b12,b13),3)) {
              PopFrame;
              PopReturnAddress return_address_14;
              SetResult 0;
              JumpIndirect: (return) return_address_14
            } else {
              Jump: 095464
            }
          } else {
            Jump: 095464
          }
        } else {
          PopFrame;
          PopReturnAddress return_address_15;
          SetResult 0;
          JumpIndirect: (return) return_address_15
        }
      }
    }
  }
LocOp 095464:
  TraceOperation 095464 (Random (Con 100) Sp);
  LetRandom random1 100;
  PushStack random1;
  TraceOperation 095468 (Jl (Con 8) (Var Sp) (Branch T Dfalse));
  PopStack popped2;
  if (LessThan(8,popped2)) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 095472 (Insert_obj (Con 215) (Var (Global 0)));
    Let b4 = M[007908];
    Let b5 = M[007909];
    Let b6 = M[002690];
    if (IsZero(Widen(b6))) {} else {
      Let b7 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
      if (Equal(Widen(b7),215)) {
        Let b8 = M[002691];
        SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b8));
      } else {
        Let loop_var9 = Widen(b7);
        Label 10: {
          Let b11 = M[Offset(Offset(000751,Mul(loop_var9,9)),5)];
          if (Equal(Widen(b11),215)) {
            Let b12 = M[002691];
            SetByte Offset(Offset(000751,Mul(loop_var9,9)),5) LoByte(Widen(b12));
          } else {
            Assign loop_var9 = Widen(b11);
            Goto: Label 10
          }
        }
      }
    }
    SetByte 002690 b5;
    Let b13 = M[Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6)];
    SetByte 002691 LoByte(Widen(b13));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b4,b5),9)),6) 215;
    TraceOperation 095475 New_line;
    GamePrint "\n";
    TraceOperation 095476 (Print_ret "You feel a wave of depression sweep over you, and you turn to see that Marvin the robot has stalked miserably into the room.");
    GamePrint "You feel a wave of depression sweep over you, and you turn to see that Marvin the robot has stalked miserably into the room.\n";
    PopFrame;
    PopReturnAddress return_address_14;
    SetResult 1;
    JumpIndirect: (return) return_address_14
  }
--------------------------------------------------
LocRoutine 095546:
  MakeRoutineFrame 0;
  Jump: 095547
LocOp 095547:
  TraceOperation 095547 (Call (Floc 022340) [Con -17989] Sp);
  PushFrame;
  PushReturnAddress 095547;
  SetLocal 1 -17989;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 095547:
  PushStack call_result;
  TraceOperation 095554 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 095559 (Insert_obj (Con 215) (Con 218));
  Let b2 = M[002690];
  if (IsZero(Widen(b2))) {} else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b3),215)) {
      Let b4 = M[002691];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
    } else {
      Let loop_var5 = Widen(b3);
      Label 6: {
        Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
        if (Equal(Widen(b7),215)) {
          Let b8 = M[002691];
          SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
        } else {
          Assign loop_var5 = Widen(b7);
          Goto: Label 6
        }
      }
    }
  }
  SetByte 002690 218;
  Let b9 = M[002719];
  SetByte 002691 LoByte(Widen(b9));
  SetByte 002719 215;
  TraceOperation 095562 (Print "Ah. I was misled into thinking that you wanted me to open the hatch, probably by the fact that you asked me to. Obviously you changed your mind or I misunderstood you or you are a moronic imbecile. I wonder which");
  GamePrint "Ah. I was misled into thinking that you wanted me to open the hatch, probably by the fact that you asked me to. Obviously you changed your mind or I misunderstood you or you are a moronic imbecile. I wonder which";
  TraceOperation 095683 (Je [Var (Global 0),Con 218] (Branch T (Dloc 095718)));
  Let b10 = M[007908];
  Let b11 = M[007909];
  if (Equal(MakeHiLo(b10,b11),218)) {
    Jump: 095718
  } else {
    TraceOperation 095687 (Print ". I'm going back to my pantry to be alone with my grief");
    GamePrint ". I'm going back to my pantry to be alone with my grief";
    Jump: 095718
  }
LocOp 095718:
  TraceOperation 095718 (Print_ret ".\" Marvin stalks miserably away.");
  GamePrint ".\" Marvin stalks miserably away.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 095744:
  MakeRoutineFrame 0;
  Jump: 095745
LocOp 095745:
  TraceOperation 095745 (Je [Var (Global 203),Con 171] (Branch F (Dloc 095766)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),171)) {
    TraceOperation 095749 (Je [Var (Global 201),Con 214] (Branch F (Dloc 095766)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),214)) {
      TraceOperation 095753 (Jin (Con 212) (Con 214) (Branch F (Dloc 095766)));
      Let b5 = M[002663];
      if (Equal(214,Widen(b5))) {
        TraceOperation 095757 (Call (Floc 022042) [Con 171,Con 212,Var (Global 202)] Sp);
        Let b6 = M[008312];
        Let b7 = M[008313];
        PushFrame;
        PushReturnAddress 095757;
        SetLocal 1 171;
        SetLocal 2 212;
        SetLocal 3 MakeHiLo(b6,b7);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 022057
      } else {
        Jump: 095766
      }
    } else {
      Jump: 095766
    }
  } else {
    Jump: 095766
  }
LocReturn 095757:
  PushStack call_result;
  TraceOperation 095765 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 095766:
  TraceOperation 095766 (Je [Var (Global 203),Con 63,Con 120,Con 61] (Branch F (Dloc 095963)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),120)),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 095774 (Print "The pot is filled with fertile soil");
    GamePrint "The pot is filled with fertile soil";
    TraceOperation 095795 (Jin (Con 212) (Con 214) (Branch F (Dloc 095849)));
    Let b3 = M[002663];
    if (Equal(214,Widen(b3))) {
      TraceOperation 095799 (Print ", out of which has sprouted a ");
      GamePrint ", out of which has sprouted a ";
      TraceOperation 095814 (Jz (Var (Global 217)) (Branch T (Dloc 095833)));
      Let b4 = M[008342];
      Let b5 = M[008343];
      if (IsZero(MakeHiLo(b4,b5))) {
        Jump: 095833
      } else {
        TraceOperation 095817 (Print "large, leafy plant");
        GamePrint "large, leafy plant";
        TraceOperation 095830 (Jump 095960);
        Jump: 095960
      }
    } else {
      Jump: 095849
    }
  } else {
    Jump: 095963
  }
LocOp 095833:
  TraceOperation 095833 (Print "tiny plant stalk");
  GamePrint "tiny plant stalk";
  TraceOperation 095846 (Jump 095960);
  Jump: 095960
LocOp 095849:
  TraceOperation 095849 (Print ". It is inscribed \"Inertial Guidance System -- Magrathean Missile Company.\" It must have been created by the same burst of improbability that created the whale itself");
  GamePrint ". It is inscribed \"Inertial Guidance System -- Magrathean Missile Company.\" It must have been created by the same burst of improbability that created the whale itself";
  Jump: 095960
LocOp 095960:
  TraceOperation 095960 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 095963:
  TraceOperation 095963 (Je [Var (Global 203),Con 46] (Branch F (Dloc 096048)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 095968 (Je [Var (Global 201),Con 140,Con 69,Con 155] (Branch T (Dloc 095980)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),140),Equal(MakeHiLo(b3,b4),69)),Equal(MakeHiLo(b3,b4),155))) {
      Jump: 095980
    } else {
      TraceOperation 095975 (Je [Var (Global 201),Con 61] (Branch F (Dloc 096048)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),61)) {
        Jump: 095980
      } else {
        Jump: 096048
      }
    }
  } else {
    Jump: 096048
  }
LocOp 095980:
  TraceOperation 095980 (Insert_obj (Var (Global 201)) (Con 219));
  Let b1 = M[008310];
  Let b2 = M[008311];
  Let b3 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4)];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),MakeHiLo(b1,b2))) {
      Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),MakeHiLo(b1,b2))) {
          Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5)];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),4) 219;
  Let b10 = M[002728];
  SetByte Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),5) LoByte(Widen(b10));
  SetByte 002728 b2;
  TraceOperation 095983 (Inc (Con 234));
  Let b11 = M[008344];
  Let b12 = M[008345];
  SetByte 008344 HiByte(Add(MakeHiLo(b11,b12),1));
  SetByte 008345 LoByte(Add(MakeHiLo(b11,b12),1));
  TraceOperation 095985 (Je [Var (Global 218),Con 4] (Branch F (Dloc 096002)));
  Let b13 = M[008344];
  Let b14 = M[008345];
  if (Equal(MakeHiLo(b13,b14),4)) {
    TraceOperation 095989 (Call (Floc 022320) [Con -17504,Con 10] Sp);
    PushFrame;
    PushReturnAddress 095989;
    SetLocal 1 -17504;
    SetLocal 2 10;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 096002
  }
LocReturn 095989:
  PushStack call_result;
  TraceOperation 095997 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  Jump: 096002
LocOp 096002:
  TraceOperation 096002 (Print "You dig a ");
  GamePrint "You dig a ";
  TraceOperation 096009 (Print_obj (Con 115));
  Let b1 = M[001793];
  Let b2 = M[001794];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 096011 (Print_ret ", gingerly place the fluff at the bottom, and cover it over.");
  GamePrint ", gingerly place the fluff at the bottom, and cover it over.\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 096048:
  TraceOperation 096048 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 096054 (Je [Var (Global 201),Con 214] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),214)) {
      TraceOperation 096058 (Call (Floc 057650) [] Sp);
      PushFrame;
      PushReturnAddress 096058;
      MakeRoutineFrame 0;
      Jump: 057651
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 096058:
  PushStack call_result;
  TraceOperation 096063 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 096064:
  MakeRoutineFrame 0;
  Jump: 096065
LocOp 096065:
  TraceOperation 096065 (Insert_obj (Con 212) (Con 214));
  Let b1 = M[002663];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),212)) {
      Let b3 = M[002664];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),212)) {
          Let b7 = M[002664];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002663 214;
  Let b8 = M[002683];
  SetByte 002664 LoByte(Widen(b8));
  SetByte 002683 212;
  TraceOperation 096068 (Call (Floc 043370) [Con 214] Sp);
  PushFrame;
  PushReturnAddress 096068;
  SetLocal 1 214;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043375
LocReturn 096068:
  PushStack call_result;
  TraceOperation 096074 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 096077 New_line;
    GamePrint "\n";
    TraceOperation 096078 (Print "You notice a tiny movement from the ");
    GamePrint "You notice a tiny movement from the ";
    TraceOperation 096099 (Print_obj (Con 214));
    Let b3 = M[002684];
    Let b4 = M[002685];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 096101 (Print_ret ". You look closely, and see a tiny sprout poking out of the soil.");
    GamePrint ". You look closely, and see a tiny sprout poking out of the soil.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  }
--------------------------------------------------
LocRoutine 096138:
  MakeRoutineFrame 0;
  Jump: 096139
LocOp 096139:
  TraceOperation 096139 (Je [Var (Global 203),Con 61] (Branch F (Dloc 096230)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 096144 (Jz (Var (Global 217)) (Branch T (Dloc 096211)));
    Let b3 = M[008342];
    Let b4 = M[008343];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 096211
    } else {
      TraceOperation 096148 (Print "The plant is now large and leafy.");
      GamePrint "The plant is now large and leafy.";
      TraceOperation 096167 (Test_attr (Con 211) (Con 27) (Branch F (Dloc 096209)));
      Let b5 = M[002653];
      if (TestBit(b5,4)) {
        TraceOperation 096171 (Call (Floc 043370) [Con 211] Sp);
        PushFrame;
        PushReturnAddress 096171;
        SetLocal 1 211;
        MakeRoutineFrame 2;
        SetLocal 2 0;
        Jump: 043375
      } else {
        Jump: 096209
      }
    }
  } else {
    Jump: 096230
  }
LocReturn 096171:
  PushStack call_result;
  TraceOperation 096177 (Jz (Var Sp) (Branch T (Dloc 096209)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 096209
  } else {
    TraceOperation 096180 (Print " Hanging from it is a large, succulent fruit.");
    GamePrint " Hanging from it is a large, succulent fruit.";
    Jump: 096209
  }
LocOp 096209:
  TraceOperation 096209 New_line;
  GamePrint "\n";
  TraceOperation 096210 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 096211:
  TraceOperation 096211 (Print_ret "The plant is just a tiny stem.");
  GamePrint "The plant is just a tiny stem.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 096230:
  TraceOperation 096230 (Je [Var (Global 203),Con 53,Con 124] (Branch F (Dloc 096258)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),53),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 096236 (Je [Var (Global 201),Con 212] (Branch F (Dloc 096258)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),212)) {
      TraceOperation 096240 (Jz (Var (Global 202)) (Branch T (Dloc 096249)));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 096249
      } else {
        TraceOperation 096243 (Call (Floc 057842) [] Sp);
        PushFrame;
        PushReturnAddress 096243;
        MakeRoutineFrame 0;
        Jump: 057843
      }
    } else {
      Jump: 096258
    }
  } else {
    Jump: 096258
  }
LocReturn 096243:
  PushStack call_result;
  TraceOperation 096248 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 096249:
  TraceOperation 096249 (Call (Floc 022042) [Var (Global 203),Con 214,Var (Global 202)] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008312];
  Let b4 = M[008313];
  PushFrame;
  PushReturnAddress 096249;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 214;
  SetLocal 3 MakeHiLo(b3,b4);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 096249:
  PushStack call_result;
  TraceOperation 096257 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 096258:
  TraceOperation 096258 (Je [Var (Global 203),Con 171] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),171)) {
    TraceOperation 096262 (Jz (Var (Global 217)) (Branch F Dfalse));
    Let b3 = M[008342];
    Let b4 = M[008343];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 096265 (Je [Var (Global 202),Con 9,Con 204,Con 122] (Branch F Dfalse));
      Let b5 = M[008312];
      Let b6 = M[008313];
      if (LogOr(LogOr(Equal(MakeHiLo(b5,b6),9),Equal(MakeHiLo(b5,b6),204)),Equal(MakeHiLo(b5,b6),122))) {
        TraceOperation 096272 (Insert_obj (Var (Global 202)) (Con 219));
        Let b7 = M[008312];
        Let b8 = M[008313];
        Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),4)];
        if (IsZero(Widen(b9))) {} else {
          Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
          if (Equal(Widen(b10),MakeHiLo(b7,b8))) {
            Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),5)];
            SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
          } else {
            Let loop_var12 = Widen(b10);
            Label 13: {
              Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
              if (Equal(Widen(b14),MakeHiLo(b7,b8))) {
                Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),5)];
                SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
              } else {
                Assign loop_var12 = Widen(b14);
                Goto: Label 13
              }
            }
          }
        }
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),4) 219;
        Let b16 = M[002728];
        SetByte Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),5) LoByte(Widen(b16));
        SetByte 002728 b8;
        TraceOperation 096275 (Insert_obj (Con 212) (Con 219));
        Let b17 = M[002663];
        if (IsZero(Widen(b17))) {} else {
          Let b18 = M[Offset(Offset(000751,Mul(Widen(b17),9)),6)];
          if (Equal(Widen(b18),212)) {
            Let b19 = M[002664];
            SetByte Offset(Offset(000751,Mul(Widen(b17),9)),6) LoByte(Widen(b19));
          } else {
            Let loop_var20 = Widen(b18);
            Label 21: {
              Let b22 = M[Offset(Offset(000751,Mul(loop_var20,9)),5)];
              if (Equal(Widen(b22),212)) {
                Let b23 = M[002664];
                SetByte Offset(Offset(000751,Mul(loop_var20,9)),5) LoByte(Widen(b23));
              } else {
                Assign loop_var20 = Widen(b22);
                Goto: Label 21
              }
            }
          }
        }
        SetByte 002663 219;
        Let b24 = M[002728];
        SetByte 002664 LoByte(Widen(b24));
        SetByte 002728 212;
        TraceOperation 096278 (Print "After several seconds, the plant shrivels up.");
        GamePrint "After several seconds, the plant shrivels up.";
        TraceOperation 096309 (Call (Floc 049734) [Con -12342] Sp);
        PushFrame;
        PushReturnAddress 096309;
        SetLocal 1 -12342;
        MakeRoutineFrame 1;
        Jump: 049737
      } else {
        PopFrame;
        PopReturnAddress return_address_25;
        SetResult 0;
        JumpIndirect: (return) return_address_25
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_26;
      SetResult 0;
      JumpIndirect: (return) return_address_26
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_27;
    SetResult 0;
    JumpIndirect: (return) return_address_27
  }
LocReturn 096309:
  PushStack call_result;
  TraceOperation 096316 New_line;
  GamePrint "\n";
  TraceOperation 096317 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 096318:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 096321
LocOp 096321:
  TraceOperation 096321 (Je [Var (Global 203),Con 107,Con 124] (Branch F (Dloc 096347)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),107),Equal(MakeHiLo(b1,b2),124))) {
    TraceOperation 096327 (Test_attr (Con 211) (Con 21) (Branch F (Dloc 096347)));
    Let b3 = M[002652];
    if (TestBit(b3,2)) {
      TraceOperation 096331 (Clear_attr (Con 211) (Con 21));
      Let b4 = M[002652];
      SetByte 002652 ClearBit(b4,2);
      TraceOperation 096334 (Clear_attr (Con 211) (Con 27));
      Let b5 = M[002653];
      SetByte 002653 ClearBit(b5,4);
      TraceOperation 096337 (Insert_obj (Con 211) (Con 31));
      Let b6 = M[002654];
      if (IsZero(Widen(b6))) {} else {
        Let b7 = M[Offset(Offset(000751,Mul(Widen(b6),9)),6)];
        if (Equal(Widen(b7),211)) {
          Let b8 = M[002655];
          SetByte Offset(Offset(000751,Mul(Widen(b6),9)),6) LoByte(Widen(b8));
        } else {
          Let loop_var9 = Widen(b7);
          Label 10: {
            Let b11 = M[Offset(Offset(000751,Mul(loop_var9,9)),5)];
            if (Equal(Widen(b11),211)) {
              Let b12 = M[002655];
              SetByte Offset(Offset(000751,Mul(loop_var9,9)),5) LoByte(Widen(b12));
            } else {
              Assign loop_var9 = Widen(b11);
              Goto: Label 10
            }
          }
        }
      }
      SetByte 002654 31;
      Let b13 = M[001036];
      SetByte 002655 LoByte(Widen(b13));
      SetByte 001036 211;
      TraceOperation 096340 (Print_ret "Done.");
      GamePrint "Done.\n";
      PopFrame;
      PopReturnAddress return_address_14;
      SetResult 1;
      JumpIndirect: (return) return_address_14
    } else {
      Jump: 096347
    }
  } else {
    Jump: 096347
  }
LocOp 096347:
  TraceOperation 096347 (Je [Var (Global 203),Con 154,Con 53] (Branch F (Dloc 096386)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),53))) {
    TraceOperation 096353 (Test_attr (Con 211) (Con 21) (Branch F (Dloc 096386)));
    Let b3 = M[002652];
    if (TestBit(b3,2)) {
      TraceOperation 096357 (Clear_attr (Con 211) (Con 21));
      Let b4 = M[002652];
      SetByte 002652 ClearBit(b4,2);
      TraceOperation 096360 (Clear_attr (Con 211) (Con 27));
      Let b5 = M[002653];
      SetByte 002653 ClearBit(b5,4);
      TraceOperation 096363 (Insert_obj (Con 211) (Var (Global 0)));
      Let b6 = M[007908];
      Let b7 = M[007909];
      Let b8 = M[002654];
      if (IsZero(Widen(b8))) {} else {
        Let b9 = M[Offset(Offset(000751,Mul(Widen(b8),9)),6)];
        if (Equal(Widen(b9),211)) {
          Let b10 = M[002655];
          SetByte Offset(Offset(000751,Mul(Widen(b8),9)),6) LoByte(Widen(b10));
        } else {
          Let loop_var11 = Widen(b9);
          Label 12: {
            Let b13 = M[Offset(Offset(000751,Mul(loop_var11,9)),5)];
            if (Equal(Widen(b13),211)) {
              Let b14 = M[002655];
              SetByte Offset(Offset(000751,Mul(loop_var11,9)),5) LoByte(Widen(b14));
            } else {
              Assign loop_var11 = Widen(b13);
              Goto: Label 12
            }
          }
        }
      }
      SetByte 002654 b7;
      Let b15 = M[Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6)];
      SetByte 002655 LoByte(Widen(b15));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b6,b7),9)),6) 211;
      TraceOperation 096366 (Je [Var (Global 203),Con 53] (Branch F (Dloc 096379)));
      Let b16 = M[008314];
      Let b17 = M[008315];
      if (Equal(MakeHiLo(b16,b17),53)) {
        TraceOperation 096370 (Print_ret "Dropped.");
        GamePrint "Dropped.\n";
        PopFrame;
        PopReturnAddress return_address_18;
        SetResult 1;
        JumpIndirect: (return) return_address_18
      } else {
        Jump: 096379
      }
    } else {
      Jump: 096386
    }
  } else {
    Jump: 096386
  }
LocOp 096379:
  TraceOperation 096379 (Print_ret "Thrown.");
  GamePrint "Thrown.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 096386:
  TraceOperation 096386 (Je [Var (Global 203),Con 56] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),56)) {
    Jump: 096390
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocOp 096390:
  TraceOperation 096390 (Call (Floc 020718) [Var (Global 67)] (Global 219));
  Let b1 = M[008042];
  Let b2 = M[008043];
  PushFrame;
  PushReturnAddress 096390;
  SetLocal 1 MakeHiLo(b1,b2);
  MakeRoutineFrame 1;
  Jump: 020721
LocReturn 096390:
  SetByte 008346 HiByte(call_result);
  SetByte 008347 LoByte(call_result);
  TraceOperation 096396 (Inc (Con 1));
  GetLocal 1 local1_1;
  SetLocal 1 Add(local1_1,1);
  TraceOperation 096398 (Call (Floc 092774) [Var (Global 219)] Sp);
  Let b2 = M[008346];
  Let b3 = M[008347];
  PushFrame;
  PushReturnAddress 096398;
  SetLocal 1 MakeHiLo(b2,b3);
  MakeRoutineFrame 1;
  Jump: 092777
LocReturn 096398:
  PushStack call_result;
  TraceOperation 096404 (Jz (Var Sp) (Branch T (Dloc 096412)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 096412
  } else {
    TraceOperation 096407 (Jg (Var (Local 1)) (Con 50) (Branch F (Dloc 096390)));
    GetLocal 1 local1_2;
    if (GreaterThan(local1_2,50)) {
      Jump: 096412
    } else {
      Jump: 096390
    }
  }
LocOp 096412:
  TraceOperation 096412 (Insert_obj (Con 211) (Con 219));
  Let b1 = M[002654];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),211)) {
      Let b3 = M[002655];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),211)) {
          Let b7 = M[002655];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002654 219;
  Let b8 = M[002728];
  SetByte 002655 LoByte(Widen(b8));
  SetByte 002728 211;
  TraceOperation 096415 (Print "The fruit has a zesty taste, and you devour it greedily. Suddenly, your vision wavers, and you see yourself, as though from a distance, standing near Marvin, who asks you for");
  GamePrint "The fruit has a zesty taste, and you devour it greedily. Suddenly, your vision wavers, and you see yourself, as though from a distance, standing near Marvin, who asks you for";
  TraceOperation 096516 (Call (Floc 043738) [Var (Global 219)] Sp);
  Let b9 = M[008346];
  Let b10 = M[008347];
  PushFrame;
  PushReturnAddress 096516;
  SetLocal 1 MakeHiLo(b9,b10);
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043743
LocReturn 096516:
  PushStack call_result;
  TraceOperation 096522 (Print ". Then, the image vanishes like a movie when the film breaks, and you find yourself still in");
  GamePrint ". Then, the image vanishes like a movie when the film breaks, and you find yourself still in";
  TraceOperation 096577 (Call (Floc 043738) [Var (Global 0),Con 1] Sp);
  Let b1 = M[007908];
  Let b2 = M[007909];
  PushFrame;
  PushReturnAddress 096577;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 1;
  MakeRoutineFrame 2;
  Jump: 043743
LocReturn 096577:
  PushStack call_result;
  TraceOperation 096584 (Print_ret ".\n\nIt seems that this plant is a rare horticultural phenomenon long thought to be extinct: The Tree of Foreknowledge.");
  GamePrint ".\n\nIt seems that this plant is a rare horticultural phenomenon long thought to be extinct: The Tree of Foreknowledge.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 096656:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 096659
LocOp 096659:
  TraceOperation 096659 (Je [Var (Local 1),Con 3] (Branch F (Dloc 096759)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 096664 (Print "You are in the Galley area of the ship, containing a machine which is the state of the art in Nutritional Technology, a ");
    GamePrint "You are in the Galley area of the ship, containing a machine which is the state of the art in Nutritional Technology, a ";
    TraceOperation 096733 (Print_paddr (Var (Global 43)));
    Let b2 = M[007994];
    Let b3 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 096735 (Print " ");
    GamePrint " ";
    TraceOperation 096738 (Print_obj (Con 209));
    Let b4 = M[002639];
    Let b5 = M[002640];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 096740 (Print_ret ". There is an exit to starboard.");
    GamePrint ". There is an exit to starboard.\n";
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 1;
    JumpIndirect: (return) return_address_8
  } else {
    Jump: 096759
  }
LocOp 096759:
  TraceOperation 096759 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 096763 (Call (Floc 020662) [Con -16129] Sp);
    PushFrame;
    PushReturnAddress 096763;
    SetLocal 1 -16129;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 020671
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocReturn 096763:
  PushStack call_result;
  TraceOperation 096770 (Jz (Var Sp) (Branch F Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 096773 (Random (Con 100) Sp);
    LetRandom random2 100;
    PushStack random2;
    TraceOperation 096777 (Jl (Con 3) (Var Sp) (Branch T Dfalse));
    PopStack popped3;
    if (LessThan(3,popped3)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 096781 (Store (Con 167) (Con 6));
      SetByte 008210 0;
      SetByte 008211 6;
      TraceOperation 096784 (Call (Floc 022320) [Con 16277,Con 2] Sp);
      PushFrame;
      PushReturnAddress 096784;
      SetLocal 1 16277;
      SetLocal 2 2;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 022327
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  }
LocReturn 096784:
  PushStack call_result;
  TraceOperation 096792 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 096797 New_line;
  GamePrint "\n";
  TraceOperation 096798 (Print_obj (Con 195));
  Let b2 = M[002513];
  Let b3 = M[002514];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 096800 (Print " walks in and presses the ");
  GamePrint " walks in and presses the ";
  TraceOperation 096815 (Print_obj (Con 208));
  Let b6 = M[002630];
  Let b7 = M[002631];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
  GamePrint ite_res9;
  TraceOperation 096817 (Print ". The ");
  GamePrint ". The ";
  TraceOperation 096822 (Print_obj (Con 209));
  Let b10 = M[002639];
  Let b11 = M[002640];
  Let b12 = M[Address(MakeHiLo(b10,b11))];
  Let ite_res13 = Ite((IsZeroByte(b12),"",GetText(Offset(Address(MakeHiLo(b10,b11)),1))));
  GamePrint ite_res13;
  TraceOperation 096824 (Print_ret " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.");
  GamePrint " produces a huge, ice-cold Pan-Galactic Gargle Blaster. Zaphod heads off toward the sauna, sipping loudly.\n";
  PopFrame;
  PopReturnAddress return_address_14;
  SetResult 1;
  JumpIndirect: (return) return_address_14
--------------------------------------------------
LocRoutine 096898:
  MakeRoutineFrame 0;
  Jump: 096899
LocOp 096899:
  TraceOperation 096899 (Je [Con 209,Var (Global 195)] (Branch F (Dloc 097046)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(209,MakeHiLo(b1,b2))) {
    TraceOperation 096904 (Je [Var (Global 203),Con 150] (Branch F (Dloc 096927)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 096908 (Je [Var (Global 201),Con 30] (Branch F (Dloc 096927)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 096912 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 096915 (Call (Floc 022042) [Con 22,Con 209,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame;
        PushReturnAddress 096915;
        SetLocal 1 22;
        SetLocal 2 209;
        SetLocal 3 MakeHiLo(b7,b8);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 022057
      } else {
        Jump: 096927
      }
    } else {
      Jump: 096927
    }
  } else {
    Jump: 097046
  }
LocReturn 096915:
  PushStack call_result;
  TraceOperation 096923 (Store (Con 211) (Con 209));
  SetByte 008298 0;
  SetByte 008299 209;
  TraceOperation 096926 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 096927:
  TraceOperation 096927 (Je [Var (Global 203),Con 75] (Branch F (Dloc 096945)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 096931 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 096934 (Call (Floc 022042) [Con 75,Con 209] Sp);
    PushFrame;
    PushReturnAddress 096934;
    SetLocal 1 75;
    SetLocal 2 209;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 096945
  }
LocReturn 096934:
  PushStack call_result;
  TraceOperation 096941 (Store (Con 211) (Con 209));
  SetByte 008298 0;
  SetByte 008299 209;
  TraceOperation 096944 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 096945:
  TraceOperation 096945 (Je [Var (Global 203),Con 174] (Branch F (Dloc 096968)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 096949 (Je [Var (Global 201),Con 28] (Branch F (Dloc 096968)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 096953 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 096956 (Call (Floc 022042) [Con 22,Con 209,Con 28] Sp);
      PushFrame;
      PushReturnAddress 096956;
      SetLocal 1 22;
      SetLocal 2 209;
      SetLocal 3 28;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 096968
    }
  } else {
    Jump: 096968
  }
LocReturn 096956:
  PushStack call_result;
  TraceOperation 096964 (Store (Con 211) (Con 209));
  SetByte 008298 0;
  SetByte 008299 209;
  TraceOperation 096967 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 096968:
  TraceOperation 096968 (Je [Var (Global 203),Con 67] (Branch F (Dloc 096976)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),67)) {
    TraceOperation 096972 (Je [Var (Global 201),Con 30] (Branch T (Dloc 096984)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),30)) {
      Jump: 096984
    } else {
      Jump: 096976
    }
  } else {
    Jump: 096976
  }
LocOp 096976:
  TraceOperation 096976 (Je [Var (Global 203),Con 66] (Branch F (Dloc 096999)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),66)) {
    TraceOperation 096980 (Je [Var (Global 202),Con 30] (Branch F (Dloc 096999)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),30)) {
      Jump: 096984
    } else {
      Jump: 096999
    }
  } else {
    Jump: 096999
  }
LocOp 096984:
  TraceOperation 096984 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 096987 (Call (Floc 022042) [Con 23,Con 209,Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 096987;
  SetLocal 1 23;
  SetLocal 2 209;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 096987:
  PushStack call_result;
  TraceOperation 096995 (Store (Con 211) (Con 209));
  SetByte 008298 0;
  SetByte 008299 209;
  TraceOperation 096998 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 096999:
  TraceOperation 096999 (Je [Var (Global 203),Con 97] (Branch F (Dloc 097023)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),97)) {
    TraceOperation 097003 (Je [Var (Global 201),Con 8,Con 9] (Branch F (Dloc 097023)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),8),Equal(MakeHiLo(b3,b4),9))) {
      TraceOperation 097009 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 097012 (Call (Floc 022042) [Con 159,Con 208] Sp);
      PushFrame;
      PushReturnAddress 097012;
      SetLocal 1 159;
      SetLocal 2 208;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 097023
    }
  } else {
    Jump: 097023
  }
LocReturn 097012:
  PushStack call_result;
  TraceOperation 097019 (Store (Con 211) (Con 209));
  SetByte 008298 0;
  SetByte 008299 209;
  TraceOperation 097022 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 097023:
  TraceOperation 097023 (Print "The ");
  GamePrint "The ";
  TraceOperation 097026 (Print_obj (Con 209));
  Let b1 = M[002639];
  Let b2 = M[002640];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 097028 (Print " ignores you.");
  GamePrint " ignores you.";
  TraceOperation 097039 New_line;
  GamePrint "\n";
  TraceOperation 097040 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 097040;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 097040:
  PushStack call_result;
  TraceOperation 097045 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 097046:
  TraceOperation 097046 (Je [Var (Global 203),Con 61] (Branch F (Dloc 097140)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 097051 (Print "The ");
    GamePrint "The ";
    TraceOperation 097054 (Print_obj (Con 209));
    Let b3 = M[002639];
    Let b4 = M[002640];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 097056 (Print " has a ");
    GamePrint " has a ";
    TraceOperation 097061 (Print_obj (Con 208));
    Let b7 = M[002630];
    Let b8 = M[002631];
    Let b9 = M[Address(MakeHiLo(b7,b8))];
    Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
    GamePrint ite_res10;
    TraceOperation 097063 (Print ", a dispensing slot, and a service panel which is ");
    GamePrint ", a dispensing slot, and a service panel which is ";
    TraceOperation 097094 (Test_attr (Con 209) (Con 23) (Branch F (Dloc 097106)));
    Let b11 = M[002634];
    if (TestBit(b11,0)) {
      TraceOperation 097098 (Print "open");
      GamePrint "open";
      TraceOperation 097103 (Jump 097109);
      Jump: 097109
    } else {
      Jump: 097106
    }
  } else {
    Jump: 097140
  }
LocOp 097106:
  TraceOperation 097106 (Print "closed");
  GamePrint "closed";
  Jump: 097109
LocOp 097109:
  TraceOperation 097109 (Print ".");
  GamePrint ".";
  TraceOperation 097112 (Call (Floc 057998) [] Sp);
  PushFrame;
  PushReturnAddress 097112;
  MakeRoutineFrame 0;
  Jump: 057999
LocReturn 097112:
  PushStack call_result;
  TraceOperation 097117 (Call (Floc 020662) [Con -16129] Sp);
  PushFrame;
  PushReturnAddress 097117;
  SetLocal 1 -16129;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 020671
LocReturn 097117:
  PushStack call_result;
  TraceOperation 097124 (Jz (Var Sp) (Branch T (Dloc 097138)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 097138
  } else {
    TraceOperation 097127 (Print " ");
    GamePrint " ";
    TraceOperation 097130 (Call (Floc 022042) [Con 74,Con 209] Sp);
    PushFrame;
    PushReturnAddress 097130;
    SetLocal 1 74;
    SetLocal 2 209;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 097130:
  PushStack call_result;
  TraceOperation 097137 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 097138:
  TraceOperation 097138 New_line;
  GamePrint "\n";
  TraceOperation 097139 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 097140:
  TraceOperation 097140 (Je [Var (Global 203),Con 74] (Branch F (Dloc 097184)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 097144 (Call (Floc 020662) [Con -16129] Sp);
    PushFrame;
    PushReturnAddress 097144;
    SetLocal 1 -16129;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 020671
  } else {
    Jump: 097184
  }
LocReturn 097144:
  PushStack call_result;
  TraceOperation 097151 (Jz (Var Sp) (Branch T (Dloc 097184)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 097184
  } else {
    TraceOperation 097154 (Print "The ");
    GamePrint "The ";
    TraceOperation 097157 (Print_obj (Con 209));
    Let b2 = M[002639];
    Let b3 = M[002640];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 097159 (Print_ret " is making a faint whirring noise.");
    GamePrint " is making a faint whirring noise.\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  }
LocOp 097184:
  TraceOperation 097184 (Je [Var (Global 203),Con 23] (Branch F (Dloc 097202)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),23)) {
    TraceOperation 097188 (Je [Var (Global 202),Con 204,Con 9] (Branch F (Dloc 097202)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),204),Equal(MakeHiLo(b3,b4),9))) {
      TraceOperation 097194 (Call (Floc 022042) [Con 159,Con 208] Sp);
      PushFrame;
      PushReturnAddress 097194;
      SetLocal 1 159;
      SetLocal 2 208;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 097202
    }
  } else {
    Jump: 097202
  }
LocReturn 097194:
  PushStack call_result;
  TraceOperation 097201 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 097202:
  TraceOperation 097202 (Je [Var (Global 203),Con 88] (Branch F (Dloc 097214)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 097206 (Call (Floc 022042) [Con 159,Con 208] Sp);
    PushFrame;
    PushReturnAddress 097206;
    SetLocal 1 159;
    SetLocal 2 208;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 097214
  }
LocReturn 097206:
  PushStack call_result;
  TraceOperation 097213 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 097214:
  TraceOperation 097214 (Je [Var (Global 203),Con 40] (Branch F (Dloc 097236)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),40)) {
    TraceOperation 097218 (Call (Floc 020662) [Con -16129] Sp);
    PushFrame;
    PushReturnAddress 097218;
    SetLocal 1 -16129;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 020671
  } else {
    Jump: 097236
  }
LocReturn 097218:
  PushStack call_result;
  TraceOperation 097225 (Jz (Var Sp) (Branch T (Dloc 097236)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 097236
  } else {
    TraceOperation 097228 (Call (Floc 022042) [Con 159,Con 208] Sp);
    PushFrame;
    PushReturnAddress 097228;
    SetLocal 1 159;
    SetLocal 2 208;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  }
LocReturn 097228:
  PushStack call_result;
  TraceOperation 097235 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 097236:
  TraceOperation 097236 (Je [Var (Global 203),Con 130,Con 82,Con 24] (Branch F (Dloc 097326)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),130),Equal(MakeHiLo(b1,b2),82)),Equal(MakeHiLo(b1,b2),24))) {
    TraceOperation 097244 (Jz (Var (Global 221)) (Branch T (Dloc 097326)));
    Let b3 = M[008350];
    Let b4 = M[008351];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 097326
    } else {
      TraceOperation 097248 (Print "The ");
      GamePrint "The ";
      TraceOperation 097251 (Print_obj (Con 209));
      Let b5 = M[002639];
      Let b6 = M[002640];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 097253 (Print " says ");
      GamePrint " says ";
      TraceOperation 097256 (Random (Con 100) Sp);
      LetRandom random9 100;
      PushStack random9;
      TraceOperation 097260 (Jl (Con 50) (Var Sp) (Branch T (Dloc 097279)));
      PopStack popped10;
      if (LessThan(50,popped10)) {
        Jump: 097279
      } else {
        TraceOperation 097264 (Print_ret "\"Share and Enjoy.\"");
        GamePrint "\"Share and Enjoy.\"\n";
        PopFrame;
        PopReturnAddress return_address_11;
        SetResult 1;
        JumpIndirect: (return) return_address_11
      }
    }
  } else {
    Jump: 097326
  }
LocOp 097279:
  TraceOperation 097279 (Print_ret "\"If you have enjoyed the experience of this drink, why not share it with your friends?\"");
  GamePrint "\"If you have enjoyed the experience of this drink, why not share it with your friends?\"\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 097326:
  TraceOperation 097326 (Je [Var (Global 203),Con 41,Con 46] (Branch F (Dloc 097386)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),41),Equal(MakeHiLo(b1,b2),46))) {
    TraceOperation 097332 (Je [Var (Global 202),Con 209] (Branch F (Dloc 097386)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),209)) {
      TraceOperation 097336 (Test_attr (Con 209) (Con 23) (Branch T (Dloc 097351)));
      Let b5 = M[002634];
      if (TestBit(b5,0)) {
        Jump: 097351
      } else {
        TraceOperation 097340 (Print_ret "The panel is closed.");
        GamePrint "The panel is closed.\n";
        PopFrame;
        PopReturnAddress return_address_6;
        SetResult 1;
        JumpIndirect: (return) return_address_6
      }
    } else {
      Jump: 097386
    }
  } else {
    Jump: 097386
  }
LocOp 097351:
  TraceOperation 097351 (Get_child (Con 209) Sp (Branch F (Dloc 097364)));
  Let b1 = M[002638];
  PushStack Widen(b1);
  if (IsZero(Widen(b1))) {
    Jump: 097364
  } else {
    TraceOperation 097355 (Print_ret "There's no room.");
    GamePrint "There's no room.\n";
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 1;
    JumpIndirect: (return) return_address_2
  }
LocOp 097364:
  TraceOperation 097364 (Je [Var (Global 201),Con 88,Con 206] (Branch F (Dloc 097380)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (LogOr(Equal(MakeHiLo(b1,b2),88),Equal(MakeHiLo(b1,b2),206))) {
    TraceOperation 097370 (Insert_obj (Var (Global 201)) (Con 209));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4)];
    if (IsZero(Widen(b5))) {} else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b6),MakeHiLo(b3,b4))) {
        Let b7 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
      } else {
        Let loop_var8 = Widen(b6);
        Label 9: {
          Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
          if (Equal(Widen(b10),MakeHiLo(b3,b4))) {
            Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5)];
            SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
          } else {
            Assign loop_var8 = Widen(b10);
            Goto: Label 9
          }
        }
      }
    }
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),4) 209;
    Let b12 = M[002638];
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),5) LoByte(Widen(b12));
    SetByte 002638 b4;
    TraceOperation 097373 (Print_ret "Done.");
    GamePrint "Done.\n";
    PopFrame;
    PopReturnAddress return_address_13;
    SetResult 1;
    JumpIndirect: (return) return_address_13
  } else {
    Jump: 097380
  }
LocOp 097380:
  TraceOperation 097380 (Call (Floc 035526) [] Sp);
  PushFrame;
  PushReturnAddress 097380;
  MakeRoutineFrame 0;
  Jump: 035527
LocReturn 097380:
  PushStack call_result;
  TraceOperation 097385 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 097386:
  TraceOperation 097386 (Je [Var (Global 203),Con 63] (Branch F (Dloc 097446)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),63)) {
    TraceOperation 097390 (Test_attr (Con 209) (Con 23) (Branch T (Dloc 097402)));
    Let b3 = M[002634];
    if (TestBit(b3,0)) {
      Jump: 097402
    } else {
      TraceOperation 097394 (Call (Floc 022042) [Con 103,Con 209] Sp);
      PushFrame;
      PushReturnAddress 097394;
      SetLocal 1 103;
      SetLocal 2 209;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    }
  } else {
    Jump: 097446
  }
LocReturn 097394:
  PushStack call_result;
  TraceOperation 097401 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 097402:
  TraceOperation 097402 (Jin (Con 206) (Con 209) (Branch F (Dloc 097418)));
  Let b1 = M[002609];
  if (Equal(209,Widen(b1))) {
    TraceOperation 097406 (Print "There is a ");
    GamePrint "There is a ";
    TraceOperation 097411 (Print_obj (Con 206));
    Let b2 = M[002612];
    Let b3 = M[002613];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 097413 (Print_ret " there.");
    GamePrint " there.\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 097418
  }
LocOp 097418:
  TraceOperation 097418 (Jin (Con 88) (Con 209) (Branch F (Dloc 097434)));
  Let b1 = M[001547];
  if (Equal(209,Widen(b1))) {
    TraceOperation 097422 (Print "There is a ");
    GamePrint "There is a ";
    TraceOperation 097427 (Print_obj (Con 88));
    Let b2 = M[001550];
    Let b3 = M[001551];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 097429 (Print_ret " there.");
    GamePrint " there.\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 097434
  }
LocOp 097434:
  TraceOperation 097434 (Print "There's nothing in the ");
  GamePrint "There's nothing in the ";
  TraceOperation 097441 (Print_obj (Con 209));
  Let b1 = M[002639];
  Let b2 = M[002640];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 097443 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 097446:
  TraceOperation 097446 (Je [Var (Global 203),Con 22] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 097450 (Je [Var (Global 202),Con 28] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 097454 (Print_ret "\"To provide a nutritious and flavour-enhanced diet.\"");
      GamePrint "\"To provide a nutritious and flavour-enhanced diet.\"\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 0;
      JumpIndirect: (return) return_address_6
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
--------------------------------------------------
LocRoutine 097494:
  MakeRoutineFrame 0;
  Jump: 097495
LocOp 097495:
  TraceOperation 097495 (Je [Var (Global 203),Con 114,Con 159] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),114),Equal(MakeHiLo(b1,b2),159))) {
    TraceOperation 097501 (Jin (Con 88) (Con 209) (Branch F (Dloc 097696)));
    Let b3 = M[001547];
    if (Equal(209,Widen(b3))) {
      TraceOperation 097506 (Call (Floc 020662) [Con -16129] Sp);
      PushFrame;
      PushReturnAddress 097506;
      SetLocal 1 -16129;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 020671
    } else {
      Jump: 097696
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocReturn 097506:
  PushStack call_result;
  TraceOperation 097513 (Jz (Var Sp) (Branch T (Dloc 097542)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 097542
  } else {
    TraceOperation 097516 (Print "\"Please wait...");
    GamePrint "\"Please wait...";
    TraceOperation 097531 (Print_obj (Con 209));
    Let b2 = M[002639];
    Let b3 = M[002640];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 097533 (Print_ret " engaged.\"");
    GamePrint " engaged.\"\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  }
LocOp 097542:
  TraceOperation 097542 (Jin (Con 9) (Con 208) (Branch F (Dloc 097654)));
  Let b1 = M[000836];
  if (Equal(208,Widen(b1))) {
    TraceOperation 097547 (Call (Floc 022320) [Con -16129,Con -1] Sp);
    PushFrame;
    PushReturnAddress 097547;
    SetLocal 1 -16129;
    SetLocal 2 -1;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 097654
  }
LocReturn 097547:
  PushStack call_result;
  TraceOperation 097556 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 097561 (Print "The ");
  GamePrint "The ";
  TraceOperation 097564 (Print_obj (Con 209));
  Let b2 = M[002639];
  Let b3 = M[002640];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 097566 (Print " is puzzled that you want something made by pouring boiling water on dead leaves and squirting stuff from a cow in it, and says that it will need some help from ");
  GamePrint " is puzzled that you want something made by pouring boiling water on dead leaves and squirting stuff from a cow in it, and says that it will need some help from ";
  TraceOperation 097649 (Print_obj (Con 198));
  Let b6 = M[002540];
  Let b7 = M[002541];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
  GamePrint ite_res9;
  TraceOperation 097651 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_10;
  SetResult 1;
  JumpIndirect: (return) return_address_10
LocOp 097654:
  TraceOperation 097654 (Print "\"I won't go through that again. If ");
  GamePrint "\"I won't go through that again. If ";
  TraceOperation 097675 (Print_obj (Con 204));
  Let b1 = M[002594];
  Let b2 = M[002595];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 097677 (Print_ret " isn't good enough, too bad.\"");
  GamePrint " isn't good enough, too bad.\"\n";
  PopFrame;
  PopReturnAddress return_address_5;
  SetResult 1;
  JumpIndirect: (return) return_address_5
LocOp 097696:
  TraceOperation 097696 (Jin (Con 204) (Con 208) (Branch F (Dloc 097860)));
  Let b1 = M[002591];
  if (Equal(208,Widen(b1))) {
    TraceOperation 097701 (Insert_obj (Con 204) (Con 207));
    Let b2 = M[002591];
    if (IsZero(Widen(b2))) {} else {
      Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b3),204)) {
        Let b4 = M[002592];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
      } else {
        Let loop_var5 = Widen(b3);
        Label 6: {
          Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
          if (Equal(Widen(b7),204)) {
            Let b8 = M[002592];
            SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
          } else {
            Assign loop_var5 = Widen(b7);
            Goto: Label 6
          }
        }
      }
    }
    SetByte 002591 207;
    Let b9 = M[002620];
    SetByte 002592 LoByte(Widen(b9));
    SetByte 002620 204;
    TraceOperation 097704 (Store (Con 207) (Con 204));
    SetByte 008290 0;
    SetByte 008291 204;
    TraceOperation 097707 (Print "The ");
    GamePrint "The ";
    TraceOperation 097710 (Print_obj (Con 209));
    Let b10 = M[002639];
    Let b11 = M[002640];
    Let b12 = M[Address(MakeHiLo(b10,b11))];
    Let ite_res13 = Ite((IsZeroByte(b12),"",GetText(Offset(Address(MakeHiLo(b10,b11)),1))));
    GamePrint ite_res13;
    TraceOperation 097712 (Print " makes an instant but highly detailed examination of your taste buds, a spectroscopic analysis of your metabolism and sends tiny experimental signals down your neural pathways to see what you like.\nA cupful of ");
    GamePrint " makes an instant but highly detailed examination of your taste buds, a spectroscopic analysis of your metabolism and sends tiny experimental signals down your neural pathways to see what you like.\nA cupful of ";
    TraceOperation 097837 (Print_obj (Con 204));
    Let b14 = M[002594];
    Let b15 = M[002595];
    Let b16 = M[Address(MakeHiLo(b14,b15))];
    Let ite_res17 = Ite((IsZeroByte(b16),"",GetText(Offset(Address(MakeHiLo(b14,b15)),1))));
    GamePrint ite_res17;
    TraceOperation 097839 (Print_ret " appears in the dispensing slot.");
    GamePrint " appears in the dispensing slot.\n";
    PopFrame;
    PopReturnAddress return_address_18;
    SetResult 1;
    JumpIndirect: (return) return_address_18
  } else {
    Jump: 097860
  }
LocOp 097860:
  TraceOperation 097860 (Print "\"You still haven't drunk the nutritious and flavour-enhanced cupful of ");
  GamePrint "\"You still haven't drunk the nutritious and flavour-enhanced cupful of ";
  TraceOperation 097907 (Print_obj (Con 204));
  Let b1 = M[002594];
  Let b2 = M[002595];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 097909 (Print " I already gave you,\" scolds the ");
  GamePrint " I already gave you,\" scolds the ";
  TraceOperation 097928 (Print_obj (Con 209));
  Let b5 = M[002639];
  Let b6 = M[002640];
  Let b7 = M[Address(MakeHiLo(b5,b6))];
  Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
  GamePrint ite_res8;
  TraceOperation 097930 (Print_ret ".");
  GamePrint ".\n";
  PopFrame;
  PopReturnAddress return_address_9;
  SetResult 1;
  JumpIndirect: (return) return_address_9
--------------------------------------------------
LocRoutine 097934:
  MakeRoutineFrame 0;
  Jump: 097935
LocOp 097935:
  TraceOperation 097935 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 097941 (Je [Var (Global 201),Con 207] (Branch F Dfalse));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),207)) {
      TraceOperation 097945 (Call (Floc 057650) [] Sp);
      PushFrame;
      PushReturnAddress 097945;
      MakeRoutineFrame 0;
      Jump: 057651
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 097945:
  PushStack call_result;
  TraceOperation 097950 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 097952:
  MakeRoutineFrame 0;
  Jump: 097953
LocOp 097953:
  TraceOperation 097953 (Je [Var (Global 203),Con 39,Con 103] (Branch F (Dloc 097969)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 097959 (Je [Var (Global 201),Con 206] (Branch F (Dloc 097969)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),206)) {
      TraceOperation 097963 (Call (Floc 057650) [] Sp);
      PushFrame;
      PushReturnAddress 097963;
      MakeRoutineFrame 0;
      Jump: 057651
    } else {
      Jump: 097969
    }
  } else {
    Jump: 097969
  }
LocReturn 097963:
  PushStack call_result;
  TraceOperation 097968 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 097969:
  TraceOperation 097969 (Je [Var (Global 203),Con 61] (Branch F (Dloc 098227)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 097974 (Print "The ");
    GamePrint "The ";
    TraceOperation 097977 (Print_obj (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 097979 (Print " is square, about ten inches on each side. It has a number of microchips, some printed circuitry, and a message printed in microscopic letters. There are also eight ");
    GamePrint " is square, about ten inches on each side. It has a number of microchips, some printed circuitry, and a message printed in microscopic letters. There are also eight ";
    TraceOperation 098076 (Print_obj (Con 205));
    Let b9 = M[002603];
    Let b10 = M[002604];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
    GamePrint ite_res12;
    TraceOperation 098078 (Print_ret "es, marked:\n  1  Cholesterol Register\n  2  MSG Specifier\n  3  Thiamin Stack\n  4  Piquant-O-Mat\n  5  Flavour Dump\n  6  Vitamin Interrupts\n  7  Nose Sequencer\n  8  Bouquet Arbitration Bus");
    GamePrint "es, marked:\n  1  Cholesterol Register\n  2  MSG Specifier\n  3  Thiamin Stack\n  4  Piquant-O-Mat\n  5  Flavour Dump\n  6  Vitamin Interrupts\n  7  Nose Sequencer\n  8  Bouquet Arbitration Bus\n";
    PopFrame;
    PopReturnAddress return_address_13;
    SetResult 1;
    JumpIndirect: (return) return_address_13
  } else {
    Jump: 098227
  }
LocOp 098227:
  TraceOperation 098227 (Je [Var (Global 203),Con 45] (Branch F (Dloc 098273)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),45)) {
    TraceOperation 098231 (Insert_obj (Con 206) (Con 219));
    Let b3 = M[002609];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),206)) {
        Let b5 = M[002610];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),206)) {
            Let b9 = M[002610];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002609 219;
    Let b10 = M[002728];
    SetByte 002610 LoByte(Widen(b10));
    SetByte 002728 206;
    TraceOperation 098234 (Print_ret "It's all the device deserves. It shatters with a satisfying crunch.");
    GamePrint "It's all the device deserves. It shatters with a satisfying crunch.\n";
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 1;
    JumpIndirect: (return) return_address_11
  } else {
    Jump: 098273
  }
LocOp 098273:
  TraceOperation 098273 (Je [Var (Global 203),Con 62,Con 120] (Branch F (Dloc 098334)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),62),Equal(MakeHiLo(b1,b2),120))) {
    TraceOperation 098279 (Je [Var (Global 202),Con 59] (Branch F (Dloc 098334)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),59)) {
      TraceOperation 098283 (Print_ret "The message reads \"This is just a satirical device. It has no practical function.\"");
      GamePrint "The message reads \"This is just a satirical device. It has no practical function.\"\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 098334
    }
  } else {
    Jump: 098334
  }
LocOp 098334:
  TraceOperation 098334 (Je [Var (Global 203),Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),120)) {
    TraceOperation 098338 (Print_ret "The message is too small for you to read.");
    GamePrint "The message is too small for you to read.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 098360:
  MakeRoutineFrame 0;
  Jump: 098361
LocOp 098361:
  TraceOperation 098361 (Je [Var (Global 203),Con 88,Con 154,Con 145] (Branch T (Dloc 098375)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),88),Equal(MakeHiLo(b1,b2),154)),Equal(MakeHiLo(b1,b2),145))) {
    Jump: 098375
  } else {
    TraceOperation 098368 (Je [Var (Global 203),Con 98,Con 114,Con 40] (Branch F Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),98),Equal(MakeHiLo(b3,b4),114)),Equal(MakeHiLo(b3,b4),40))) {
      Jump: 098375
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  }
LocOp 098375:
  TraceOperation 098375 (Print "Switched.");
  GamePrint "Switched.";
  TraceOperation 098384 (Jin (Con 206) (Con 209) (Branch F (Dloc 098440)));
  Let b1 = M[002609];
  if (Equal(209,Widen(b1))) {
    TraceOperation 098388 (Print " Some lights on the ");
    GamePrint " Some lights on the ";
    TraceOperation 098401 (Print_obj (Con 209));
    Let b2 = M[002639];
    Let b3 = M[002640];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 098403 (Print_ret " flash briefly. A promising hum quickly dies away.");
    GamePrint " flash briefly. A promising hum quickly dies away.\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 098440
  }
LocOp 098440:
  TraceOperation 098440 New_line;
  GamePrint "\n";
  TraceOperation 098441 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098442:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 098445
LocOp 098445:
  TraceOperation 098445 (Call (Floc 049796) [Con 204] Sp);
  PushFrame;
  PushReturnAddress 098445;
  SetLocal 1 204;
  MakeRoutineFrame 1;
  Jump: 049799
LocReturn 098445:
  PushStack call_result;
  TraceOperation 098451 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 098452:
  MakeRoutineFrame 0;
  Jump: 098453
LocOp 098453:
  TraceOperation 098453 (Je [Var (Global 203),Con 52,Con 57,Con 51] (Branch F (Dloc 098647)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),52),Equal(MakeHiLo(b1,b2),57)),Equal(MakeHiLo(b1,b2),51))) {
    TraceOperation 098461 (Call (Floc 043468) [Con 204] Sp);
    PushFrame;
    PushReturnAddress 098461;
    SetLocal 1 204;
    MakeRoutineFrame 2;
    SetLocal 2 0;
    Jump: 043473
  } else {
    Jump: 098647
  }
LocReturn 098461:
  PushStack call_result;
  TraceOperation 098467 (Jz (Var Sp) (Branch F (Dloc 098479)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 098470 (Print_paddr (Var (Global 24)));
    Let b2 = M[007956];
    Let b3 = M[007957];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 098472 (Print_ret " the cup!");
    GamePrint " the cup!\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  } else {
    Jump: 098479
  }
LocOp 098479:
  TraceOperation 098479 (Jg (Var (Global 1)) (Con 300) (Branch F (Dloc 098520)));
  Let b1 = M[007910];
  Let b2 = M[007911];
  if (GreaterThan(MakeHiLo(b1,b2),300)) {
    TraceOperation 098485 (Print_ret "You'd rather continue savouring that delicious tea.");
    GamePrint "You'd rather continue savouring that delicious tea.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 098520
  }
LocOp 098520:
  TraceOperation 098520 (Jz (Var (Global 221)) (Branch T (Dloc 098557)));
  Let b1 = M[008350];
  Let b2 = M[008351];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 098557
  } else {
    TraceOperation 098523 (Sub (Var (Global 1)) (Con 30) (Global 1));
    Let b3 = M[007910];
    Let b4 = M[007911];
    SetByte 007910 HiByte(Sub(MakeHiLo(b3,b4),30));
    SetByte 007911 LoByte(Sub(MakeHiLo(b3,b4),30));
    TraceOperation 098527 (Store (Con 91) (Con 0));
    SetByte 008058 0;
    SetByte 008059 0;
    TraceOperation 098530 (Print "That last gulp of the vile ");
    GamePrint "That last gulp of the vile ";
    TraceOperation 098547 (Print_obj (Con 204));
    Let b5 = M[002594];
    Let b6 = M[002595];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 098549 (Call (Floc 042734) [Con -12341] Sp);
    PushFrame;
    PushReturnAddress 098549;
    SetLocal 1 -12341;
    MakeRoutineFrame 1;
    Jump: 042737
  }
LocReturn 098549:
  PushStack call_result;
  TraceOperation 098556 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 098557:
  TraceOperation 098557 (Je [Con 204,Var (Global 208)] (Branch F (Dloc 098564)));
  Let b1 = M[008324];
  Let b2 = M[008325];
  if (Equal(204,MakeHiLo(b1,b2))) {
    TraceOperation 098561 (Store (Con 224) (Con 0));
    SetByte 008324 0;
    SetByte 008325 0;
    Jump: 098564
  } else {
    Jump: 098564
  }
LocOp 098564:
  TraceOperation 098564 (Store (Con 237) (Con 1));
  SetByte 008350 0;
  SetByte 008351 1;
  TraceOperation 098567 (Sub (Var (Global 1)) (Con 30) (Global 1));
  Let b1 = M[007910];
  Let b2 = M[007911];
  SetByte 007910 HiByte(Sub(MakeHiLo(b1,b2),30));
  SetByte 007911 LoByte(Sub(MakeHiLo(b1,b2),30));
  TraceOperation 098571 (Insert_obj (Con 204) (Con 208));
  Let b3 = M[002591];
  if (IsZero(Widen(b3))) {} else {
    Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
    if (Equal(Widen(b4),204)) {
      Let b5 = M[002592];
      SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
    } else {
      Let loop_var6 = Widen(b4);
      Label 7: {
        Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
        if (Equal(Widen(b8),204)) {
          Let b9 = M[002592];
          SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
        } else {
          Assign loop_var6 = Widen(b8);
          Goto: Label 7
        }
      }
    }
  }
  SetByte 002591 208;
  Let b10 = M[002629];
  SetByte 002592 LoByte(Widen(b10));
  SetByte 002629 204;
  TraceOperation 098574 (Print "It tastes almost, but not quite, entirely unlike tea. It's absolutely disgusting.");
  GamePrint "It tastes almost, but not quite, entirely unlike tea. It's absolutely disgusting.";
  TraceOperation 098623 (Call (Floc 049734) [Con -12342] Sp);
  PushFrame;
  PushReturnAddress 098623;
  SetLocal 1 -12342;
  MakeRoutineFrame 1;
  Jump: 049737
LocReturn 098623:
  PushStack call_result;
  TraceOperation 098630 (Je [Var (Global 0),Con 210] (Branch F (Dloc 098645)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),210)) {
    TraceOperation 098634 (Print " ");
    GamePrint " ";
    TraceOperation 098637 (Call (Floc 022042) [Con 24,Con 209] Sp);
    PushFrame;
    PushReturnAddress 098637;
    SetLocal 1 24;
    SetLocal 2 209;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 098645
  }
LocReturn 098637:
  PushStack call_result;
  TraceOperation 098644 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 098645:
  TraceOperation 098645 New_line;
  GamePrint "\n";
  TraceOperation 098646 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 098647:
  TraceOperation 098647 (Je [Var (Global 203),Con 63,Con 61] (Branch F (Dloc 098708)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),63),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 098653 (Print "About the only characteristic it shares with tea is that of");
    GamePrint "About the only characteristic it shares with tea is that of";
    TraceOperation 098686 (Print_paddr (Var (Global 34)));
    Let b3 = M[007976];
    Let b4 = M[007977];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b3,b4)));
    TraceOperation 098688 (Print ".");
    GamePrint ".";
    TraceOperation 098691 (Je [Var (Global 201),Var (Global 208)] (Branch F (Dloc 098706)));
    Let b5 = M[008310];
    Let b6 = M[008311];
    Let b7 = M[008324];
    Let b8 = M[008325];
    if (Equal(MakeHiLo(b5,b6),MakeHiLo(b7,b8))) {
      TraceOperation 098695 (Print " ");
      GamePrint " ";
      TraceOperation 098698 (Call (Floc 022042) [Con 61,Con 179] Sp);
      PushFrame;
      PushReturnAddress 098698;
      SetLocal 1 61;
      SetLocal 2 179;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 098706
    }
  } else {
    Jump: 098708
  }
LocReturn 098698:
  PushStack call_result;
  TraceOperation 098705 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 098706:
  TraceOperation 098706 New_line;
  GamePrint "\n";
  TraceOperation 098707 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 098708:
  TraceOperation 098708 (Je [Var (Global 203),Con 154,Con 112] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),112))) {
    TraceOperation 098714 (Call (Floc 049650) [] Sp);
    PushFrame;
    PushReturnAddress 098714;
    MakeRoutineFrame 0;
    Jump: 049651
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 098714:
  PushStack call_result;
  TraceOperation 098719 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 098720:
  MakeRoutineFrame 0;
  Jump: 098721
LocOp 098721:
  TraceOperation 098721 (Je [Var (Global 203),Con 61,Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),61),Equal(MakeHiLo(b1,b2),120))) {
    TraceOperation 098727 (Print "The carton is labelled \"");
    GamePrint "The carton is labelled \"";
    TraceOperation 098742 (Print_obj (Con 88));
    Let b3 = M[001550];
    Let b4 = M[001551];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 098744 (Print ".\"");
    GamePrint ".\"";
    TraceOperation 098749 New_line;
    GamePrint "\n";
    TraceOperation 098750 (Je [Var (Global 203),Con 61] (Branch F Dtrue));
    Let b7 = M[008314];
    Let b8 = M[008315];
    if (Equal(MakeHiLo(b7,b8),61)) {
      TraceOperation 098754 Rfalse;
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    } else {
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 1;
      JumpIndirect: (return) return_address_10
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 0;
    JumpIndirect: (return) return_address_11
  }
--------------------------------------------------
LocRoutine 098756:
  MakeRoutineFrame 0;
  Jump: 098757
LocOp 098757:
  TraceOperation 098757 (Je [Var (Global 203),Con 120,Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),120),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 098763 (Print "The gun has a large label which reads \"Anti-Bugblatter Beast Ray Gun.\"");
    GamePrint "The gun has a large label which reads \"Anti-Bugblatter Beast Ray Gun.\"";
    TraceOperation 098806 (Call (Floc 057998) [] Sp);
    PushFrame;
    PushReturnAddress 098806;
    MakeRoutineFrame 0;
    Jump: 057999
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 098806:
  PushStack call_result;
  TraceOperation 098811 New_line;
  GamePrint "\n";
  TraceOperation 098812 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 098814:
  MakeRoutineFrame 0;
  Jump: 098815
LocOp 098815:
  TraceOperation 098815 (Inc (Con 231));
  Let b1 = M[008338];
  Let b2 = M[008339];
  SetByte 008338 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008339 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 098817 (Je [Var (Global 0),Con 210] (Branch T (Dloc 098825)));
  Let b3 = M[007908];
  Let b4 = M[007909];
  if (Equal(MakeHiLo(b3,b4),210)) {
    Jump: 098825
  } else {
    TraceOperation 098821 (Jl (Var (Global 215)) (Con 7) (Branch T Dfalse));
    Let b5 = M[008338];
    Let b6 = M[008339];
    if (LessThan(MakeHiLo(b5,b6),7)) {
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 0;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 098825
    }
  }
LocOp 098825:
  TraceOperation 098825 New_line;
  GamePrint "\n";
  TraceOperation 098826 (Je [Var (Global 215),Con 1] (Branch F (Dloc 098849)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),1)) {
    TraceOperation 098830 (Print_ret "The nutrimat begins to whirr.");
    GamePrint "The nutrimat begins to whirr.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 098849
  }
LocOp 098849:
  TraceOperation 098849 (Je [Var (Global 215),Con 2] (Branch F (Dloc 098898)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 098853 (Print_ret "A red sign lights up saying:\n   MEMORY OVERLOAD");
    GamePrint "A red sign lights up saying:\n   MEMORY OVERLOAD\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 098898
  }
LocOp 098898:
  TraceOperation 098898 (Je [Var (Global 215),Con 3] (Branch F (Dloc 098961)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 098902 (Print_ret "Another red sign lights up saying:\n   RESERVE MEMORY OVERLOAD");
    GamePrint "Another red sign lights up saying:\n   RESERVE MEMORY OVERLOAD\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 098961
  }
LocOp 098961:
  TraceOperation 098961 (Je [Var (Global 215),Con 4] (Branch F (Dloc 099045)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 098966 (Print_ret "A third sign lights up:\n   PROCESSOR OVERLOAD,\n   SWITCH TO TERMINAL MODE");
    GamePrint "A third sign lights up:\n   PROCESSOR OVERLOAD,\n   SWITCH TO TERMINAL MODE\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 099045
  }
LocOp 099045:
  TraceOperation 099045 (Je [Var (Global 215),Con 5] (Branch F (Dloc 099098)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),5)) {
    TraceOperation 099049 (Print_ret "A blue sign lights up:\n   NUTRIMAT GOING ON LINE");
    GamePrint "A blue sign lights up:\n   NUTRIMAT GOING ON LINE\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 099098
  }
LocOp 099098:
  TraceOperation 099098 (Je [Var (Global 215),Con 6] (Branch F (Dloc 099462)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 099103 (Print_ret "More and more signs light up:\n   SHIPBOARD COMPUTER ACCESSED\n   MAIN MEMORY OVERLOAD\n   RESERVE MEMORY ACCESSED\n   PARALLEL PROCESSORS ON LINE\n\n   ****************************\n   ** NUMBERS BEING CRUNCHED **\n   ****************************");
    GamePrint "More and more signs light up:\n   SHIPBOARD COMPUTER ACCESSED\n   MAIN MEMORY OVERLOAD\n   RESERVE MEMORY ACCESSED\n   PARALLEL PROCESSORS ON LINE\n\n   ****************************\n   ** NUMBERS BEING CRUNCHED **\n   ****************************\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 099462
  }
LocOp 099462:
  TraceOperation 099462 (Je [Var (Global 215),Con 7] (Branch F (Dloc 099681)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (Equal(MakeHiLo(b1,b2),7)) {
    TraceOperation 099467 (Set_attr (Con 7) (Con 3));
    Let b3 = M[000814];
    SetByte 000814 SetBit(b3,4);
    TraceOperation 099470 (Print_paddr (Var (Global 21)));
    Let b4 = M[007950];
    Let b5 = M[007951];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 099472 (Print_obj (Con 198));
    Let b6 = M[002540];
    Let b7 = M[002541];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
    GamePrint ite_res9;
    TraceOperation 099474 (Print ". Emergency situation! Nuclear missiles have just been launched at us from the approaching planet, which my data banks indicate is");
    GamePrint ". Emergency situation! Nuclear missiles have just been launched at us from the approaching planet, which my data banks indicate is";
    TraceOperation 099553 (Print_paddr (Var (Global 17)));
    Let b10 = M[007942];
    Let b11 = M[007943];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
    TraceOperation 099555 (Print ". I cannot perform evasive maneuvers because");
    GamePrint ". I cannot perform evasive maneuvers because";
    TraceOperation 099584 (Print_paddr (Var (Global 3)));
    Let b12 = M[007914];
    Let b13 = M[007915];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b12,b13)));
    TraceOperation 099586 (Print_obj (Con 209));
    Let b14 = M[002639];
    Let b15 = M[002640];
    Let b16 = M[Address(MakeHiLo(b14,b15))];
    Let ite_res17 = Ite((IsZeroByte(b16),"",GetText(Offset(Address(MakeHiLo(b14,b15)),1))));
    GamePrint ite_res17;
    TraceOperation 099588 (Print_ret ". The missiles will turn this ship into a huge atomic fireball in approximately eight turns. By the way, somebody didn't finish their spinach at dinner.\"");
    GamePrint ". The missiles will turn this ship into a huge atomic fireball in approximately eight turns. By the way, somebody didn't finish their spinach at dinner.\"\n";
    PopFrame;
    PopReturnAddress return_address_18;
    SetResult 1;
    JumpIndirect: (return) return_address_18
  } else {
    Jump: 099681
  }
LocOp 099681:
  TraceOperation 099681 (Jl (Var (Global 215)) (Con 15) (Branch F (Dloc 099738)));
  Let b1 = M[008338];
  Let b2 = M[008339];
  if (LessThan(MakeHiLo(b1,b2),15)) {
    TraceOperation 099685 (Print_ret "You hear distant sounds of panic: shouts of anger, cries of alarm, pounding feet.");
    GamePrint "You hear distant sounds of panic: shouts of anger, cries of alarm, pounding feet.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 099738
  }
LocOp 099738:
  TraceOperation 099738 (Call (Floc 022340) [Con -16129] Sp);
  PushFrame;
  PushReturnAddress 099738;
  SetLocal 1 -16129;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 099738:
  PushStack call_result;
  TraceOperation 099745 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 099750 (Print "It seems that the missiles struck ");
  GamePrint "It seems that the missiles struck ";
  TraceOperation 099767 (Print_obj (Con 220));
  Let b2 = M[002738];
  Let b3 = M[002739];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 099769 (Call (Floc 042734) [Con -12296] Sp);
  PushFrame;
  PushReturnAddress 099769;
  SetLocal 1 -12296;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 099769:
  PushStack call_result;
  TraceOperation 099776 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 099778:
  MakeRoutineFrame 0;
  Jump: 099779
LocOp 099779:
  TraceOperation 099779 (Call (Floc 092774) [Con 31] Sp);
  PushFrame;
  PushReturnAddress 099779;
  SetLocal 1 31;
  MakeRoutineFrame 1;
  Jump: 092777
LocReturn 099779:
  PushStack call_result;
  TraceOperation 099785 (Jz (Var Sp) (Branch F (Dloc 099802)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 099788 (Call (Floc 022320) [Con -15647,Con 12] Sp);
    PushFrame;
    PushReturnAddress 099788;
    SetLocal 1 -15647;
    SetLocal 2 12;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 099802
  }
LocReturn 099788:
  PushStack call_result;
  TraceOperation 099796 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 099801 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 099802:
  TraceOperation 099802 (Insert_obj (Con 215) (Con 218));
  Let b1 = M[002690];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),215)) {
      Let b3 = M[002691];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),215)) {
          Let b7 = M[002691];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002690 218;
  Let b8 = M[002719];
  SetByte 002691 LoByte(Widen(b8));
  SetByte 002719 215;
  TraceOperation 099805 (Call (Floc 022340) [Con -17989] Sp);
  PushFrame;
  PushReturnAddress 099805;
  SetLocal 1 -17989;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 099805:
  PushStack call_result;
  TraceOperation 099812 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 099817 (Store (Con 230) (Con 1));
  SetByte 008336 0;
  SetByte 008337 1;
  TraceOperation 099820 New_line;
  GamePrint "\n";
  TraceOperation 099821 (Print_paddr (Var (Global 21)));
  Let b2 = M[007950];
  Let b3 = M[007951];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 099823 (Print_obj (Con 198));
  Let b4 = M[002540];
  Let b5 = M[002541];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
  GamePrint ite_res7;
  TraceOperation 099825 (Print ". We have just landed on");
  GamePrint ". We have just landed on";
  TraceOperation 099840 (Print_paddr (Var (Global 17)));
  Let b8 = M[007942];
  Let b9 = M[007943];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b8,b9)));
  TraceOperation 099842 (Print_ret ". I don't want anyone going outside until I've checked the atmosphere, climatic conditions, existence of dangerous wildlife, airborne diseases, volcanic activity, presence of real estate agents, and more than eight thousand other possible dangers. This routine check will take 14.9 years. And don't even think about leaving until I finish, because I'm jamming the hatch.\"");
  GamePrint ". I don't want anyone going outside until I've checked the atmosphere, climatic conditions, existence of dangerous wildlife, airborne diseases, volcanic activity, presence of real estate agents, and more than eight thousand other possible dangers. This routine check will take 14.9 years. And don't even think about leaving until I finish, because I'm jamming the hatch.\"\n";
  PopFrame;
  PopReturnAddress return_address_10;
  SetResult 1;
  JumpIndirect: (return) return_address_10
--------------------------------------------------
LocRoutine 100066:
  MakeRoutineFrame 0;
  Jump: 100067
LocOp 100067:
  TraceOperation 100067 (Call (Floc 042626) [] Sp);
  PushFrame;
  PushReturnAddress 100067;
  MakeRoutineFrame 0;
  Jump: 042627
LocReturn 100067:
  PushStack call_result;
  TraceOperation 100072 (Random (Con 12) Sp);
  LetRandom random1 12;
  PushStack random1;
  TraceOperation 100076 (Add (Con 10) (Var Sp) Sp);
  PopStack popped2;
  PushStack Add(10,popped2);
  TraceOperation 100080 (Add (Var (Global 2)) (Var Sp) (Global 2));
  Let b3 = M[007912];
  Let b4 = M[007913];
  PopStack popped5;
  SetByte 007912 HiByte(Add(MakeHiLo(b3,b4),popped5));
  SetByte 007913 LoByte(Add(MakeHiLo(b3,b4),popped5));
  TraceOperation 100084 (Print "You enter the sauna. After several ");
  GamePrint "You enter the sauna. After several ";
  TraceOperation 100107 (Call (Floc 020662) [Con -32630] Sp);
  PushFrame;
  PushReturnAddress 100107;
  SetLocal 1 -32630;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 020671
LocReturn 100107:
  PushStack call_result;
  TraceOperation 100114 (Jz (Var Sp) (Branch T (Dloc 100127)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100127
  } else {
    TraceOperation 100117 (Print "minutes");
    GamePrint "minutes";
    TraceOperation 100124 (Jump 100132);
    Jump: 100132
  }
LocOp 100127:
  TraceOperation 100127 (Print "hours");
  GamePrint "hours";
  Jump: 100132
LocOp 100132:
  TraceOperation 100132 (Print ", you come out a changed man.");
  GamePrint ", you come out a changed man.";
  TraceOperation 100151 (Call (Floc 043468) [Con 214] Sp);
  PushFrame;
  PushReturnAddress 100151;
  SetLocal 1 214;
  MakeRoutineFrame 2;
  SetLocal 2 0;
  Jump: 043473
LocReturn 100151:
  PushStack call_result;
  TraceOperation 100157 (Jz (Var Sp) (Branch T (Dloc 100196)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100196
  } else {
    TraceOperation 100160 (Jin (Con 212) (Con 214) (Branch F (Dloc 100196)));
    Let b2 = M[002663];
    if (Equal(214,Widen(b2))) {
      TraceOperation 100164 (Jz (Var (Global 217)) (Branch F (Dloc 100196)));
      Let b3 = M[008342];
      Let b4 = M[008343];
      if (IsZero(MakeHiLo(b3,b4))) {
        TraceOperation 100167 (Store (Con 233) (Con 1));
        SetByte 008342 0;
        SetByte 008343 1;
        TraceOperation 100170 (Add (Var (Global 1)) (Con 25) (Global 1));
        Let b5 = M[007910];
        Let b6 = M[007911];
        SetByte 007910 HiByte(Add(MakeHiLo(b5,b6),25));
        SetByte 007911 LoByte(Add(MakeHiLo(b5,b6),25));
        TraceOperation 100174 (Insert_obj (Con 211) (Con 214));
        Let b7 = M[002654];
        if (IsZero(Widen(b7))) {} else {
          Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
          if (Equal(Widen(b8),211)) {
            Let b9 = M[002655];
            SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
          } else {
            Let loop_var10 = Widen(b8);
            Label 11: {
              Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
              if (Equal(Widen(b12),211)) {
                Let b13 = M[002655];
                SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
              } else {
                Assign loop_var10 = Widen(b12);
                Goto: Label 11
              }
            }
          }
        }
        SetByte 002654 214;
        Let b14 = M[002683];
        SetByte 002655 LoByte(Widen(b14));
        SetByte 002683 211;
        TraceOperation 100177 (Print " You have with you a changed plant.");
        GamePrint " You have with you a changed plant.";
        Jump: 100196
      } else {
        Jump: 100196
      }
    } else {
      Jump: 100196
    }
  }
LocOp 100196:
  TraceOperation 100196 New_line;
  GamePrint "\n";
  TraceOperation 100197 (Jin (Con 215) (Con 201) (Branch F Dfalse));
  Let b1 = M[002690];
  if (Equal(201,Widen(b1))) {
    TraceOperation 100201 (Insert_obj (Con 215) (Con 218));
    Let b2 = M[002690];
    if (IsZero(Widen(b2))) {} else {
      Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b3),215)) {
        Let b4 = M[002691];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
      } else {
        Let loop_var5 = Widen(b3);
        Label 6: {
          Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
          if (Equal(Widen(b7),215)) {
            Let b8 = M[002691];
            SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
          } else {
            Assign loop_var5 = Widen(b7);
            Goto: Label 6
          }
        }
      }
    }
    SetByte 002690 218;
    Let b9 = M[002719];
    SetByte 002691 LoByte(Widen(b9));
    SetByte 002719 215;
    TraceOperation 100204 Rfalse;
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  } else {
    PopFrame;
    PopReturnAddress return_address_11;
    SetResult 0;
    JumpIndirect: (return) return_address_11
  }
--------------------------------------------------
LocRoutine 100206:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 100209
LocOp 100209:
  TraceOperation 100209 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 100213 (Print "This is the bridge of ");
    GamePrint "This is the bridge of ";
    TraceOperation 100224 (Print_obj (Con 220));
    Let b2 = M[002738];
    Let b3 = M[002739];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 100226 (Print ". A gangway leads down, and steam comes from an entrance to port. Next to the control console is ");
    GamePrint ". A gangway leads down, and steam comes from an entrance to port. Next to the control console is ";
    TraceOperation 100287 (Print_obj (Con 198));
    Let b6 = M[002540];
    Let b7 = M[002541];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
    GamePrint ite_res9;
    TraceOperation 100289 (Print ".");
    GamePrint ".";
    TraceOperation 100292 (Jz (Var (Global 210)) (Branch T (Dloc 100308)));
    Let b10 = M[008328];
    Let b11 = M[008329];
    if (IsZero(MakeHiLo(b10,b11))) {
      Jump: 100308
    } else {
      TraceOperation 100295 (Print " ");
      GamePrint " ";
      TraceOperation 100298 (Call (Floc 022042) [Con 61,Con 197] Sp);
      PushFrame;
      PushReturnAddress 100298;
      SetLocal 1 61;
      SetLocal 2 197;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_12;
    SetResult 0;
    JumpIndirect: (return) return_address_12
  }
LocReturn 100298:
  PushStack call_result;
  TraceOperation 100305 (Jump 100309);
  Jump: 100309
LocOp 100308:
  TraceOperation 100308 New_line;
  GamePrint "\n";
  Jump: 100309
LocOp 100309:
  TraceOperation 100309 (Test_attr (Con 201) (Con 27) (Branch T Dfalse));
  Let b1 = M[002563];
  if (TestBit(b1,4)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 100313 (Set_attr (Con 201) (Con 27));
    Let b3 = M[002563];
    SetByte 002563 SetBit(b3,4);
    TraceOperation 100316 New_line;
    GamePrint "\n";
    TraceOperation 100317 (Print_ret "At the controls, apparently expecting you and Ford, are a man with more than the usual number of heads (the name \"Zaphod\" is stitched on his shirt) and a dark-haired woman, holding a handbag. Both seem somehow familiar.");
    GamePrint "At the controls, apparently expecting you and Ford, are a man with more than the usual number of heads (the name \"Zaphod\" is stitched on his shirt) and a dark-haired woman, holding a handbag. Both seem somehow familiar.\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 100450:
  MakeRoutineFrame 0;
  Jump: 100451
LocOp 100451:
  TraceOperation 100451 (Je [Var (Global 203),Con 28,Con 21,Con 38] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),28),Equal(MakeHiLo(b1,b2),21)),Equal(MakeHiLo(b1,b2),38))) {
    TraceOperation 100458 (Je [Var (Global 0),Con 201] (Branch F Dfalse));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),201)) {
      TraceOperation 100462 (Call (Floc 043620) [Con 19] Sp);
      PushFrame;
      PushReturnAddress 100462;
      SetLocal 1 19;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 100462:
  PushStack call_result;
  TraceOperation 100468 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 100470:
  MakeRoutineFrame 0;
  Jump: 100471
LocOp 100471:
  TraceOperation 100471 (Jin (Con 195) (Var (Global 0)) (Branch T (Dloc 100486)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  Let b3 = M[002510];
  if (Equal(MakeHiLo(b1,b2),Widen(b3))) {
    Jump: 100486
  } else {
    TraceOperation 100475 (Print_ret "What people?");
    GamePrint "What people?\n";
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 1;
    JumpIndirect: (return) return_address_4
  }
LocOp 100486:
  TraceOperation 100486 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 100490 (Call (Floc 022042) [Con 61,Con 195] Sp);
    PushFrame;
    PushReturnAddress 100490;
    SetLocal 1 61;
    SetLocal 2 195;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 100490:
  PushStack call_result;
  TraceOperation 100497 (Call (Floc 022042) [Con 61,Con 194] Sp);
  PushFrame;
  PushReturnAddress 100497;
  SetLocal 1 61;
  SetLocal 2 194;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  SetLocal 3 0;
  Jump: 022057
LocReturn 100497:
  PushStack call_result;
  TraceOperation 100504 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 100506:
  MakeRoutineFrame 0;
  Jump: 100507
LocOp 100507:
  TraceOperation 100507 (Je [Con 198,Var (Global 195)] (Branch F (Dloc 100924)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(198,MakeHiLo(b1,b2))) {
    TraceOperation 100512 (Je [Var (Global 203),Con 150] (Branch F (Dloc 100535)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 100516 (Je [Var (Global 201),Con 30] (Branch F (Dloc 100535)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 100520 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 100523 (Call (Floc 022042) [Con 22,Con 198,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame;
        PushReturnAddress 100523;
        SetLocal 1 22;
        SetLocal 2 198;
        SetLocal 3 MakeHiLo(b7,b8);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 022057
      } else {
        Jump: 100535
      }
    } else {
      Jump: 100535
    }
  } else {
    Jump: 100924
  }
LocReturn 100523:
  PushStack call_result;
  TraceOperation 100531 (Store (Con 211) (Con 198));
  SetByte 008298 0;
  SetByte 008299 198;
  TraceOperation 100534 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 100535:
  TraceOperation 100535 (Je [Var (Global 203),Con 75] (Branch F (Dloc 100553)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 100539 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 100542 (Call (Floc 022042) [Con 75,Con 198] Sp);
    PushFrame;
    PushReturnAddress 100542;
    SetLocal 1 75;
    SetLocal 2 198;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 100553
  }
LocReturn 100542:
  PushStack call_result;
  TraceOperation 100549 (Store (Con 211) (Con 198));
  SetByte 008298 0;
  SetByte 008299 198;
  TraceOperation 100552 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 100553:
  TraceOperation 100553 (Je [Var (Global 203),Con 174] (Branch F (Dloc 100576)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 100557 (Je [Var (Global 201),Con 28] (Branch F (Dloc 100576)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 100561 (Store (Con 211) (Con 31));
      SetByte 008298 0;
      SetByte 008299 31;
      TraceOperation 100564 (Call (Floc 022042) [Con 22,Con 198,Con 28] Sp);
      PushFrame;
      PushReturnAddress 100564;
      SetLocal 1 22;
      SetLocal 2 198;
      SetLocal 3 28;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 100576
    }
  } else {
    Jump: 100576
  }
LocReturn 100564:
  PushStack call_result;
  TraceOperation 100572 (Store (Con 211) (Con 198));
  SetByte 008298 0;
  SetByte 008299 198;
  TraceOperation 100575 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 100576:
  TraceOperation 100576 (Je [Var (Global 203),Con 88] (Branch F (Dloc 100683)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 100581 (Je [Var (Global 201),Con 186,Con 187] (Branch F (Dloc 100683)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),186),Equal(MakeHiLo(b3,b4),187))) {
      TraceOperation 100588 (Call (Floc 020662) [Con -16129] Sp);
      PushFrame;
      PushReturnAddress 100588;
      SetLocal 1 -16129;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 020671
    } else {
      Jump: 100683
    }
  } else {
    Jump: 100683
  }
LocReturn 100588:
  PushStack call_result;
  TraceOperation 100595 (Jz (Var Sp) (Branch T (Dloc 100634)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 100634
  } else {
    TraceOperation 100598 (Print "\"Sorry,");
    GamePrint "\"Sorry,";
    TraceOperation 100607 (Print_paddr (Var (Global 3)));
    Let b2 = M[007914];
    Let b3 = M[007915];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 100609 (Print_obj (Con 209));
    Let b4 = M[002639];
    Let b5 = M[002640];
    Let b6 = M[Address(MakeHiLo(b4,b5))];
    Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
    GamePrint ite_res7;
    TraceOperation 100611 (Print_ret ". I can't do everything, you know.\"");
    GamePrint ". I can't do everything, you know.\"\n";
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 1;
    JumpIndirect: (return) return_address_8
  }
LocOp 100634:
  TraceOperation 100634 (Print "\"Sorry, current course for");
  GamePrint "\"Sorry, current course for";
  TraceOperation 100655 (Print_paddr (Var (Global 17)));
  Let b1 = M[007942];
  Let b2 = M[007943];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 100657 (Print " can be countermanded only by ");
  GamePrint " can be countermanded only by ";
  TraceOperation 100676 (Print_obj (Con 195));
  Let b3 = M[002513];
  Let b4 = M[002514];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 100678 (Print_ret ".\"");
  GamePrint ".\"\n";
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 100683:
  TraceOperation 100683 (Je [Var (Global 203),Con 103,Con 125] (Branch F (Dloc 100796)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),103),Equal(MakeHiLo(b1,b2),125))) {
    TraceOperation 100690 (Je [Var (Global 201),Con 177] (Branch F (Dloc 100796)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),177)) {
      TraceOperation 100695 (Jz (Var (Global 214)) (Branch T (Dloc 100796)));
      Let b5 = M[008336];
      Let b6 = M[008337];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 100796
      } else {
        TraceOperation 100699 (Print_ret "\"Not until I completely check out the safety of this planet. Please wait approximately fourteen years. In the meantime, have you brushed your teeth lately?\"");
        GamePrint "\"Not until I completely check out the safety of this planet. Please wait approximately fourteen years. In the meantime, have you brushed your teeth lately?\"\n";
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      }
    } else {
      Jump: 100796
    }
  } else {
    Jump: 100796
  }
LocOp 100796:
  TraceOperation 100796 (Je [Var (Global 203),Con 181] (Branch F (Dloc 100810)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),181)) {
    TraceOperation 100800 (Je [Var (Global 213),Con 18] (Branch F (Dloc 100810)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),18)) {
      TraceOperation 100804 (Call (Floc 040748) [] Sp);
      PushFrame;
      PushReturnAddress 100804;
      MakeRoutineFrame 0;
      Jump: 040749
    } else {
      Jump: 100810
    }
  } else {
    Jump: 100810
  }
LocReturn 100804:
  PushStack call_result;
  TraceOperation 100809 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 100810:
  TraceOperation 100810 (Je [Var (Global 203),Con 102] (Branch F (Dloc 100824)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),102)) {
    TraceOperation 100814 (Je [Var (Global 213),Con 18] (Branch F (Dloc 100824)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),18)) {
      TraceOperation 100818 (Call (Floc 035052) [] Sp);
      PushFrame;
      PushReturnAddress 100818;
      MakeRoutineFrame 0;
      Jump: 035053
    } else {
      Jump: 100824
    }
  } else {
    Jump: 100824
  }
LocReturn 100818:
  PushStack call_result;
  TraceOperation 100823 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 100824:
  TraceOperation 100824 (Store (Con 229) (Con 18));
  SetByte 008334 0;
  SetByte 008335 18;
  TraceOperation 100827 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame;
  PushReturnAddress 100827;
  SetLocal 1 -14349;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 100827:
  PushStack call_result;
  TraceOperation 100835 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 100840 (Print "Eddie sighs deeply. \"I can't talk right now. Do you know how difficult it is to pilot a ship as complicated as this one?\"");
  GamePrint "Eddie sighs deeply. \"I can't talk right now. Do you know how difficult it is to pilot a ship as complicated as this one?\"";
  TraceOperation 100917 New_line;
  GamePrint "\n";
  TraceOperation 100918 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 100918;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 100918:
  PushStack call_result;
  TraceOperation 100923 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 100924:
  TraceOperation 100924 (Je [Var (Global 203),Con 40] (Branch F (Dloc 100949)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),40)) {
    TraceOperation 100928 (Print_ret "You don't know how (fortunately).");
    GamePrint "You don't know how (fortunately).\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 100949
  }
LocOp 100949:
  TraceOperation 100949 (Je [Var (Global 203),Con 22] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 100953 (Je [Var (Global 202),Con 28] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 100957 (Store (Con 229) (Con 19));
      SetByte 008334 0;
      SetByte 008335 19;
      TraceOperation 100960 (Call (Floc 022320) [Con -14349,Con 2] Sp);
      PushFrame;
      PushReturnAddress 100960;
      SetLocal 1 -14349;
      SetLocal 2 2;
      MakeRoutineFrame 3;
      SetLocal 3 0;
      Jump: 022327
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 100960:
  PushStack call_result;
  TraceOperation 100968 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 100973 (Print "\"To pilot ");
  GamePrint "\"To pilot ";
  TraceOperation 100982 (Print_obj (Con 220));
  Let b2 = M[002738];
  Let b3 = M[002739];
  Let b4 = M[Address(MakeHiLo(b2,b3))];
  Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
  GamePrint ite_res5;
  TraceOperation 100984 (Print ", process data requests from the ");
  GamePrint ", process data requests from the ";
  TraceOperation 101005 (Print_obj (Con 209));
  Let b6 = M[002639];
  Let b7 = M[002640];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
  GamePrint ite_res9;
  TraceOperation 101007 (Print_ret " and keep the crew healthy. Read your manual! How do you expect to get anywhere in life? But don't read unless there's enough light.\"");
  GamePrint " and keep the crew healthy. Read your manual! How do you expect to get anywhere in life? But don't read unless there's enough light.\"\n";
  PopFrame;
  PopReturnAddress return_address_10;
  SetResult 1;
  JumpIndirect: (return) return_address_10
--------------------------------------------------
LocRoutine 101090:
  MakeRoutineFrame 0;
  Jump: 101091
LocOp 101091:
  TraceOperation 101091 (Jz (Var (Global 210)) (Branch T Dfalse));
  Let b1 = M[008328];
  Let b2 = M[008329];
  if (IsZero(MakeHiLo(b1,b2))) {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    TraceOperation 101094 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
    Let b4 = M[008314];
    Let b5 = M[008315];
    if (Equal(MakeHiLo(b4,b5),61)) {
      TraceOperation 101098 (Print "A ");
      GamePrint "A ";
      TraceOperation 101101 (Print_obj (Con 186));
      Let b6 = M[002432];
      Let b7 = M[002433];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
      GamePrint ite_res9;
      TraceOperation 101103 (Print_ret " is plugged into the large receptacle.");
      GamePrint " is plugged into the large receptacle.\n";
      PopFrame;
      PopReturnAddress return_address_10;
      SetResult 1;
      JumpIndirect: (return) return_address_10
    } else {
      PopFrame;
      PopReturnAddress return_address_11;
      SetResult 0;
      JumpIndirect: (return) return_address_11
    }
  }
--------------------------------------------------
LocRoutine 101124:
  MakeRoutineFrame 0;
  Jump: 101125
LocOp 101125:
  TraceOperation 101125 (Je [Var (Global 120),Con 195] (Branch F (Dloc 101153)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),195)) {
    TraceOperation 101129 (Je [Var (Global 201),Con 195,Con 196] (Branch F (Dloc 101144)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (LogOr(Equal(MakeHiLo(b3,b4),195),Equal(MakeHiLo(b3,b4),196))) {
      TraceOperation 101135 (Call (Floc 022042) [Var (Global 203),Con 30,Var (Global 202)] Sp);
      Let b5 = M[008314];
      Let b6 = M[008315];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame;
      PushReturnAddress 101135;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 30;
      SetLocal 3 MakeHiLo(b7,b8);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 101144
    }
  } else {
    Jump: 101153
  }
LocReturn 101135:
  PushStack call_result;
  TraceOperation 101143 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 101144:
  TraceOperation 101144 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 30] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 101144;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 30;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 101144:
  PushStack call_result;
  TraceOperation 101152 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 101153:
  TraceOperation 101153 (Je [Var (Global 195),Con 195] (Branch F (Dloc 101237)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(MakeHiLo(b1,b2),195)) {
    TraceOperation 101158 (Je [Var (Global 203),Con 150] (Branch F (Dloc 101181)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 101162 (Je [Var (Global 201),Con 30] (Branch F (Dloc 101181)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 101166 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 101169 (Call (Floc 022042) [Con 22,Con 195,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame;
        PushReturnAddress 101169;
        SetLocal 1 22;
        SetLocal 2 195;
        SetLocal 3 MakeHiLo(b7,b8);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 022057
      } else {
        Jump: 101181
      }
    } else {
      Jump: 101181
    }
  } else {
    Jump: 101237
  }
LocReturn 101169:
  PushStack call_result;
  TraceOperation 101177 (Store (Con 211) (Con 195));
  SetByte 008298 0;
  SetByte 008299 195;
  TraceOperation 101180 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 101181:
  TraceOperation 101181 (Je [Var (Global 203),Con 75] (Branch F (Dloc 101199)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 101185 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 101188 (Call (Floc 022042) [Con 75,Con 195] Sp);
    PushFrame;
    PushReturnAddress 101188;
    SetLocal 1 75;
    SetLocal 2 195;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 101199
  }
LocReturn 101188:
  PushStack call_result;
  TraceOperation 101195 (Store (Con 211) (Con 195));
  SetByte 008298 0;
  SetByte 008299 195;
  TraceOperation 101198 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 101199:
  TraceOperation 101199 (Je [Var (Global 203),Con 174] (Branch F (Dloc 101211)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 101203 (Je [Var (Global 201),Con 28] (Branch F (Dloc 101211)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 101207 (Print_paddr (Var (Global 33)));
      Let b5 = M[007974];
      Let b6 = M[007975];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 101209 New_line;
      GamePrint "\n";
      TraceOperation 101210 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 101211
    }
  } else {
    Jump: 101211
  }
LocOp 101211:
  TraceOperation 101211 (Print "\"Shut up, Earthman.\"");
  GamePrint "\"Shut up, Earthman.\"";
  TraceOperation 101230 New_line;
  GamePrint "\n";
  TraceOperation 101231 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 101231;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 101231:
  PushStack call_result;
  TraceOperation 101236 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 101237:
  TraceOperation 101237 (Je [Var (Global 120),Con 194] (Branch F (Dloc 101645)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),194)) {
    TraceOperation 101242 (Je [Var (Global 202),Con 196] (Branch F (Dloc 101260)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),196)) {
      TraceOperation 101246 (Je [Var (Global 203),Con 66,Con 134] (Branch F (Dloc 101260)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (LogOr(Equal(MakeHiLo(b5,b6),66),Equal(MakeHiLo(b5,b6),134))) {
        TraceOperation 101252 (Call (Floc 022042) [Con 75,Con 196] Sp);
        PushFrame;
        PushReturnAddress 101252;
        SetLocal 1 75;
        SetLocal 2 196;
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        SetLocal 3 0;
        Jump: 022057
      } else {
        Jump: 101260
      }
    } else {
      Jump: 101260
    }
  } else {
    Jump: 101645
  }
LocReturn 101252:
  PushStack call_result;
  TraceOperation 101259 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 101260:
  TraceOperation 101260 (Je [Var (Global 203),Con 15,Con 75,Con 67] (Branch T (Dloc 101274)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),15),Equal(MakeHiLo(b1,b2),75)),Equal(MakeHiLo(b1,b2),67))) {
    Jump: 101274
  } else {
    TraceOperation 101267 (Je [Var (Global 203),Con 23,Con 22] (Branch F (Dloc 101396)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),23),Equal(MakeHiLo(b3,b4),22))) {
      Jump: 101274
    } else {
      Jump: 101396
    }
  }
LocOp 101274:
  TraceOperation 101274 (Je [Var (Global 201),Con 196] (Branch F (Dloc 101396)));
  Let b1 = M[008310];
  Let b2 = M[008311];
  if (Equal(MakeHiLo(b1,b2),196)) {
    TraceOperation 101279 (Jin (Con 196) (Var (Global 0)) (Branch T (Dloc 101300)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[002519];
    if (Equal(MakeHiLo(b3,b4),Widen(b5))) {
      Jump: 101300
    } else {
      TraceOperation 101283 (Print_ret "Phil's not here anymore!");
      GamePrint "Phil's not here anymore!\n";
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  } else {
    Jump: 101396
  }
LocOp 101300:
  TraceOperation 101300 (Test_attr (Con 69) (Con 21) (Branch T (Dloc 101317)));
  Let b1 = M[001374];
  if (TestBit(b1,2)) {
    Jump: 101317
  } else {
    TraceOperation 101304 (Call (Floc 022320) [Con -14685,Con 3] Sp);
    PushFrame;
    PushReturnAddress 101304;
    SetLocal 1 -14685;
    SetLocal 2 3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  }
LocReturn 101304:
  PushStack call_result;
  TraceOperation 101312 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  Jump: 101317
LocOp 101317:
  TraceOperation 101317 (Print "Phil must not have noticed you, because he just moved into the ");
  GamePrint "Phil must not have noticed you, because he just moved into the ";
  TraceOperation 101348 (Je [Var (Global 0),Con 76] (Branch F (Dloc 101363)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),76)) {
    TraceOperation 101352 (Insert_obj (Con 196) (Con 74));
    Let b3 = M[002519];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),196)) {
        Let b5 = M[002520];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),196)) {
            Let b9 = M[002520];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002519 74;
    Let b10 = M[001423];
    SetByte 002520 LoByte(Widen(b10));
    SetByte 001423 196;
    TraceOperation 101355 (Insert_obj (Con 68) (Con 74));
    Let b11 = M[001367];
    if (IsZero(Widen(b11))) {} else {
      Let b12 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
      if (Equal(Widen(b12),68)) {
        Let b13 = M[001368];
        SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b13));
      } else {
        Let loop_var14 = Widen(b12);
        Label 15: {
          Let b16 = M[Offset(Offset(000751,Mul(loop_var14,9)),5)];
          if (Equal(Widen(b16),68)) {
            Let b17 = M[001368];
            SetByte Offset(Offset(000751,Mul(loop_var14,9)),5) LoByte(Widen(b17));
          } else {
            Assign loop_var14 = Widen(b16);
            Goto: Label 15
          }
        }
      }
    }
    SetByte 001367 74;
    Let b18 = M[001423];
    SetByte 001368 LoByte(Widen(b18));
    SetByte 001423 68;
    TraceOperation 101358 (Print_obj (Con 74));
    Let b19 = M[001424];
    Let b20 = M[001425];
    Let b21 = M[Address(MakeHiLo(b19,b20))];
    Let ite_res22 = Ite((IsZeroByte(b21),"",GetText(Offset(Address(MakeHiLo(b19,b20)),1))));
    GamePrint ite_res22;
    TraceOperation 101360 (Jump 101386);
    Jump: 101386
  } else {
    Jump: 101363
  }
LocOp 101363:
  TraceOperation 101363 (Je [Var (Global 0),Con 74] (Branch F (Dloc 101378)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),74)) {
    TraceOperation 101367 (Insert_obj (Con 196) (Con 73));
    Let b3 = M[002519];
    if (IsZero(Widen(b3))) {} else {
      Let b4 = M[Offset(Offset(000751,Mul(Widen(b3),9)),6)];
      if (Equal(Widen(b4),196)) {
        Let b5 = M[002520];
        SetByte Offset(Offset(000751,Mul(Widen(b3),9)),6) LoByte(Widen(b5));
      } else {
        Let loop_var6 = Widen(b4);
        Label 7: {
          Let b8 = M[Offset(Offset(000751,Mul(loop_var6,9)),5)];
          if (Equal(Widen(b8),196)) {
            Let b9 = M[002520];
            SetByte Offset(Offset(000751,Mul(loop_var6,9)),5) LoByte(Widen(b9));
          } else {
            Assign loop_var6 = Widen(b8);
            Goto: Label 7
          }
        }
      }
    }
    SetByte 002519 73;
    Let b10 = M[001414];
    SetByte 002520 LoByte(Widen(b10));
    SetByte 001414 196;
    TraceOperation 101370 (Insert_obj (Con 68) (Con 73));
    Let b11 = M[001367];
    if (IsZero(Widen(b11))) {} else {
      Let b12 = M[Offset(Offset(000751,Mul(Widen(b11),9)),6)];
      if (Equal(Widen(b12),68)) {
        Let b13 = M[001368];
        SetByte Offset(Offset(000751,Mul(Widen(b11),9)),6) LoByte(Widen(b13));
      } else {
        Let loop_var14 = Widen(b12);
        Label 15: {
          Let b16 = M[Offset(Offset(000751,Mul(loop_var14,9)),5)];
          if (Equal(Widen(b16),68)) {
            Let b17 = M[001368];
            SetByte Offset(Offset(000751,Mul(loop_var14,9)),5) LoByte(Widen(b17));
          } else {
            Assign loop_var14 = Widen(b16);
            Goto: Label 15
          }
        }
      }
    }
    SetByte 001367 73;
    Let b18 = M[001414];
    SetByte 001368 LoByte(Widen(b18));
    SetByte 001414 68;
    TraceOperation 101373 (Print_obj (Con 73));
    Let b19 = M[001415];
    Let b20 = M[001416];
    Let b21 = M[Address(MakeHiLo(b19,b20))];
    Let ite_res22 = Ite((IsZeroByte(b21),"",GetText(Offset(Address(MakeHiLo(b19,b20)),1))));
    GamePrint ite_res22;
    TraceOperation 101375 (Jump 101386);
    Jump: 101386
  } else {
    Jump: 101378
  }
LocOp 101378:
  TraceOperation 101378 (Insert_obj (Con 196) (Con 76));
  Let b1 = M[002519];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),196)) {
      Let b3 = M[002520];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),196)) {
          Let b7 = M[002520];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002519 76;
  Let b8 = M[001441];
  SetByte 002520 LoByte(Widen(b8));
  SetByte 001441 196;
  TraceOperation 101381 (Insert_obj (Con 68) (Con 76));
  Let b9 = M[001367];
  if (IsZero(Widen(b9))) {} else {
    Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
    if (Equal(Widen(b10),68)) {
      Let b11 = M[001368];
      SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
    } else {
      Let loop_var12 = Widen(b10);
      Label 13: {
        Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
        if (Equal(Widen(b14),68)) {
          Let b15 = M[001368];
          SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
        } else {
          Assign loop_var12 = Widen(b14);
          Goto: Label 13
        }
      }
    }
  }
  SetByte 001367 76;
  Let b16 = M[001441];
  SetByte 001368 LoByte(Widen(b16));
  SetByte 001441 68;
  TraceOperation 101384 (Print_obj (Con 76));
  Let b17 = M[001442];
  Let b18 = M[001443];
  Let b19 = M[Address(MakeHiLo(b17,b18))];
  Let ite_res20 = Ite((IsZeroByte(b19),"",GetText(Offset(Address(MakeHiLo(b17,b18)),1))));
  GamePrint ite_res20;
  Jump: 101386
LocOp 101386:
  TraceOperation 101386 (Print ".");
  GamePrint ".";
  TraceOperation 101389 New_line;
  GamePrint "\n";
  TraceOperation 101390 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 101390;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 101390:
  PushStack call_result;
  TraceOperation 101395 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 101396:
  TraceOperation 101396 (Je [Var (Global 203),Con 61] (Branch F (Dloc 101626)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 101401 (Print_ret "He is very attractive, if a little weird, and has a slight other-worldly look. You suspect he's a party-crasher, an impression reinforced by his inappropriate garb; he seems clothed for a fancy dress party or something, because he has what appears to be a large birdcage on his shoulder with a black drape over it. The bird inside must be asleep, because you can hear snoring coming from inside it.");
    GamePrint "He is very attractive, if a little weird, and has a slight other-worldly look. You suspect he's a party-crasher, an impression reinforced by his inappropriate garb; he seems clothed for a fancy dress party or something, because he has what appears to be a large birdcage on his shoulder with a black drape over it. The bird inside must be asleep, because you can hear snoring coming from inside it.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 101626
  }
LocOp 101626:
  TraceOperation 101626 (Je [Var (Global 203),Con 108] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),108)) {
    TraceOperation 101630 (Print_ret "You're not that kind of girl.");
    GamePrint "You're not that kind of girl.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 101645:
  TraceOperation 101645 (Je [Var (Global 203),Con 61] (Branch F (Dloc 101664)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 101649 (Print_ret "Zaphod has two heads.");
    GamePrint "Zaphod has two heads.\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 101664
  }
LocOp 101664:
  TraceOperation 101664 (Je [Var (Global 203),Con 69] (Branch F (Dloc 101690)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),69)) {
    TraceOperation 101668 (Je [Var (Global 151),Con 3] (Branch F (Dloc 101679)));
    Let b3 = M[008210];
    Let b4 = M[008211];
    if (Equal(MakeHiLo(b3,b4),3)) {
      TraceOperation 101672 (Call (Floc 043620) [Con 19] Sp);
      PushFrame;
      PushReturnAddress 101672;
      SetLocal 1 19;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 101679
    }
  } else {
    Jump: 101690
  }
LocReturn 101672:
  PushStack call_result;
  TraceOperation 101678 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 101679:
  TraceOperation 101679 (Je [Var (Global 151),Con 6] (Branch F Dfalse));
  Let b1 = M[008210];
  Let b2 = M[008211];
  if (Equal(MakeHiLo(b1,b2),6)) {
    TraceOperation 101683 (Call (Floc 043620) [Con 27] Sp);
    PushFrame;
    PushReturnAddress 101683;
    SetLocal 1 27;
    MakeRoutineFrame 1;
    Jump: 043623
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 101683:
  PushStack call_result;
  TraceOperation 101689 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 101690:
  TraceOperation 101690 (Je [Var (Global 203),Con 22] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 101694 (Je [Var (Global 202),Con 28] (Branch F Dfalse));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 101698 (Print_paddr (Var (Global 33)));
      Let b5 = M[007974];
      Let b6 = M[007975];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 101700 New_line;
      GamePrint "\n";
      TraceOperation 101701 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 0;
      JumpIndirect: (return) return_address_8
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_9;
    SetResult 0;
    JumpIndirect: (return) return_address_9
  }
--------------------------------------------------
LocRoutine 101702:
  MakeRoutineFrame 0;
  Jump: 101703
LocOp 101703:
  TraceOperation 101703 (Jz (Var (Global 96)) (Branch T (Dloc 101814)));
  Let b1 = M[008100];
  Let b2 = M[008101];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 101814
  } else {
    TraceOperation 101707 (Call (Floc 022320) [Con -14685,Con 3] Sp);
    PushFrame;
    PushReturnAddress 101707;
    SetLocal 1 -14685;
    SetLocal 2 3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  }
LocReturn 101707:
  PushStack call_result;
  TraceOperation 101715 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 101720 (Call (Floc 020662) [Con -20734] Sp);
  PushFrame;
  PushReturnAddress 101720;
  SetLocal 1 -20734;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 020671
LocReturn 101720:
  PushStack call_result;
  TraceOperation 101727 (Jz (Var Sp) (Branch T Dfalse));
  PopStack popped1;
  if (IsZero(popped1)) {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    TraceOperation 101730 (Insert_obj (Con 196) (Var (Global 0)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    Let b5 = M[002519];
    if (IsZero(Widen(b5))) {} else {
      Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
      if (Equal(Widen(b6),196)) {
        Let b7 = M[002520];
        SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
      } else {
        Let loop_var8 = Widen(b6);
        Label 9: {
          Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
          if (Equal(Widen(b10),196)) {
            Let b11 = M[002520];
            SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
          } else {
            Assign loop_var8 = Widen(b10);
            Goto: Label 9
          }
        }
      }
    }
    SetByte 002519 b4;
    Let b12 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6)];
    SetByte 002520 LoByte(Widen(b12));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),6) 196;
    TraceOperation 101733 (Insert_obj (Con 68) (Var (Global 0)));
    Let b13 = M[007908];
    Let b14 = M[007909];
    Let b15 = M[001367];
    if (IsZero(Widen(b15))) {} else {
      Let b16 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
      if (Equal(Widen(b16),68)) {
        Let b17 = M[001368];
        SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b17));
      } else {
        Let loop_var18 = Widen(b16);
        Label 19: {
          Let b20 = M[Offset(Offset(000751,Mul(loop_var18,9)),5)];
          if (Equal(Widen(b20),68)) {
            Let b21 = M[001368];
            SetByte Offset(Offset(000751,Mul(loop_var18,9)),5) LoByte(Widen(b21));
          } else {
            Assign loop_var18 = Widen(b20);
            Goto: Label 19
          }
        }
      }
    }
    SetByte 001367 b14;
    Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6)];
    SetByte 001368 LoByte(Widen(b22));
    SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6) 68;
    TraceOperation 101736 New_line;
    GamePrint "\n";
    TraceOperation 101737 (Print_ret "Out of the corner of your eye, you see Phil leering at you. He starts to approach, but then notices the hostess with you and veers away.");
    GamePrint "Out of the corner of your eye, you see Phil leering at you. He starts to approach, but then notices the hostess with you and veers away.\n";
    PopFrame;
    PopReturnAddress return_address_23;
    SetResult 1;
    JumpIndirect: (return) return_address_23
  }
LocOp 101814:
  TraceOperation 101814 (Add (Var (Global 1)) (Con 25) (Global 1));
  Let b1 = M[007910];
  Let b2 = M[007911];
  SetByte 007910 HiByte(Add(MakeHiLo(b1,b2),25));
  SetByte 007911 LoByte(Add(MakeHiLo(b1,b2),25));
  TraceOperation 101818 (Set_attr (Con 76) (Con 4));
  Let b3 = M[001435];
  SetByte 001435 SetBit(b3,3);
  TraceOperation 101821 (Set_attr (Con 70) (Con 27));
  Let b4 = M[001384];
  SetByte 001384 SetBit(b4,4);
  TraceOperation 101824 New_line;
  GamePrint "\n";
  TraceOperation 101825 (Call (Floc 042734) [Con -12269] Sp);
  PushFrame;
  PushReturnAddress 101825;
  SetLocal 1 -12269;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 101825:
  PushStack call_result;
  TraceOperation 101832 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 101834:
  MakeRoutineFrame 0;
  Jump: 101835
LocOp 101835:
  TraceOperation 101835 (Je [Var (Global 120),Con 194] (Branch F (Dloc 101861)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),194)) {
    TraceOperation 101839 (Je [Con 194,Var (Global 201)] (Branch F (Dloc 101852)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(194,MakeHiLo(b3,b4))) {
      TraceOperation 101843 (Call (Floc 022042) [Var (Global 203),Con 30,Var (Global 202)] Sp);
      Let b5 = M[008314];
      Let b6 = M[008315];
      Let b7 = M[008312];
      Let b8 = M[008313];
      PushFrame;
      PushReturnAddress 101843;
      SetLocal 1 MakeHiLo(b5,b6);
      SetLocal 2 30;
      SetLocal 3 MakeHiLo(b7,b8);
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 101852
    }
  } else {
    Jump: 101861
  }
LocReturn 101843:
  PushStack call_result;
  TraceOperation 101851 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 101852:
  TraceOperation 101852 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 30] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008310];
  Let b4 = M[008311];
  PushFrame;
  PushReturnAddress 101852;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 MakeHiLo(b3,b4);
  SetLocal 3 30;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 101852:
  PushStack call_result;
  TraceOperation 101860 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 101861:
  TraceOperation 101861 (Je [Con 194,Var (Global 195)] (Branch F (Dloc 102055)));
  Let b1 = M[008298];
  Let b2 = M[008299];
  if (Equal(194,MakeHiLo(b1,b2))) {
    TraceOperation 101866 (Je [Var (Global 203),Con 150] (Branch F (Dloc 101889)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),150)) {
      TraceOperation 101870 (Je [Var (Global 201),Con 30] (Branch F (Dloc 101889)));
      Let b5 = M[008310];
      Let b6 = M[008311];
      if (Equal(MakeHiLo(b5,b6),30)) {
        TraceOperation 101874 (Store (Con 211) (Con 31));
        SetByte 008298 0;
        SetByte 008299 31;
        TraceOperation 101877 (Call (Floc 022042) [Con 22,Con 194,Var (Global 202)] Sp);
        Let b7 = M[008312];
        Let b8 = M[008313];
        PushFrame;
        PushReturnAddress 101877;
        SetLocal 1 22;
        SetLocal 2 194;
        SetLocal 3 MakeHiLo(b7,b8);
        MakeRoutineFrame 7;
        SetLocal 7 0;
        SetLocal 6 0;
        SetLocal 5 0;
        SetLocal 4 0;
        Jump: 022057
      } else {
        Jump: 101889
      }
    } else {
      Jump: 101889
    }
  } else {
    Jump: 102055
  }
LocReturn 101877:
  PushStack call_result;
  TraceOperation 101885 (Store (Con 211) (Con 194));
  SetByte 008298 0;
  SetByte 008299 194;
  TraceOperation 101888 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 101889:
  TraceOperation 101889 (Je [Var (Global 203),Con 75] (Branch F (Dloc 101907)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),75)) {
    TraceOperation 101893 (Store (Con 211) (Con 31));
    SetByte 008298 0;
    SetByte 008299 31;
    TraceOperation 101896 (Call (Floc 022042) [Con 75,Con 194] Sp);
    PushFrame;
    PushReturnAddress 101896;
    SetLocal 1 75;
    SetLocal 2 194;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 101907
  }
LocReturn 101896:
  PushStack call_result;
  TraceOperation 101903 (Store (Con 211) (Con 194));
  SetByte 008298 0;
  SetByte 008299 194;
  TraceOperation 101906 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 101907:
  TraceOperation 101907 (Je [Var (Global 203),Con 174] (Branch F (Dloc 101919)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),174)) {
    TraceOperation 101911 (Je [Var (Global 201),Con 28] (Branch F (Dloc 101919)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 101915 (Print_paddr (Var (Global 33)));
      Let b5 = M[007974];
      Let b6 = M[007975];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 101917 New_line;
      GamePrint "\n";
      TraceOperation 101918 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 101919
    }
  } else {
    Jump: 101919
  }
LocOp 101919:
  TraceOperation 101919 (Je [Var (Global 203),Con 132] (Branch F (Dloc 101931)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 101923 (Jin (Con 52) (Con 194) (Branch F (Dloc 101931)));
    Let b3 = M[001223];
    if (Equal(194,Widen(b3))) {
      TraceOperation 101927 (Je [Var (Global 201),Con 51] (Branch T (Dloc 101943)));
      Let b4 = M[008310];
      Let b5 = M[008311];
      if (Equal(MakeHiLo(b4,b5),51)) {
        Jump: 101943
      } else {
        Jump: 101931
      }
    } else {
      Jump: 101931
    }
  } else {
    Jump: 101931
  }
LocOp 101931:
  TraceOperation 101931 (Je [Var (Global 203),Con 133] (Branch F (Dloc 101964)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),133)) {
    TraceOperation 101935 (Jin (Con 52) (Con 194) (Branch F (Dloc 101964)));
    Let b3 = M[001223];
    if (Equal(194,Widen(b3))) {
      TraceOperation 101939 (Je [Var (Global 202),Con 51] (Branch F (Dloc 101964)));
      Let b4 = M[008312];
      Let b5 = M[008313];
      if (Equal(MakeHiLo(b4,b5),51)) {
        Jump: 101943
      } else {
        Jump: 101964
      }
    } else {
      Jump: 101964
    }
  } else {
    Jump: 101964
  }
LocOp 101943:
  TraceOperation 101943 (Insert_obj (Con 52) (Con 31));
  Let b1 = M[001223];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),52)) {
      Let b3 = M[001224];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),52)) {
          Let b7 = M[001224];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 001223 31;
  Let b8 = M[001036];
  SetByte 001224 LoByte(Widen(b8));
  SetByte 001036 52;
  TraceOperation 101946 (Store (Con 211) (Con 31));
  SetByte 008298 0;
  SetByte 008299 31;
  TraceOperation 101949 (Call (Floc 022042) [Con 132,Con 51,Con 52] Sp);
  PushFrame;
  PushReturnAddress 101949;
  SetLocal 1 132;
  SetLocal 2 51;
  SetLocal 3 52;
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 101949:
  PushStack call_result;
  TraceOperation 101957 (Store (Con 211) (Con 194));
  SetByte 008298 0;
  SetByte 008299 194;
  TraceOperation 101960 (Insert_obj (Con 52) (Con 194));
  Let b1 = M[001223];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),52)) {
      Let b3 = M[001224];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),52)) {
          Let b7 = M[001224];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 001223 194;
  Let b8 = M[002503];
  SetByte 001224 LoByte(Widen(b8));
  SetByte 002503 52;
  TraceOperation 101963 Rtrue;
  PopFrame;
  PopReturnAddress return_address_9;
  SetResult 1;
  JumpIndirect: (return) return_address_9
LocOp 101964:
  TraceOperation 101964 (Je [Var (Global 120),Con 195] (Branch F (Dloc 102019)));
  Let b1 = M[008148];
  Let b2 = M[008149];
  if (Equal(MakeHiLo(b1,b2),195)) {
    TraceOperation 101968 (Print "\"Shut up, you jerk!\" hisses ");
    GamePrint "\"Shut up, you jerk!\" hisses ";
    TraceOperation 101989 (Print_obj (Con 194));
    Let b3 = M[002504];
    Let b4 = M[002505];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 101991 (Print ". \"Just get on with the plan.\"");
    GamePrint ". \"Just get on with the plan.\"";
    TraceOperation 102012 New_line;
    GamePrint "\n";
    TraceOperation 102013 (Call (Floc 043634) [] Sp);
    PushFrame;
    PushReturnAddress 102013;
    MakeRoutineFrame 0;
    Jump: 043635
  } else {
    Jump: 102019
  }
LocReturn 102013:
  PushStack call_result;
  TraceOperation 102018 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 102019:
  TraceOperation 102019 (Print_obj (Con 194));
  Let b1 = M[002504];
  Let b2 = M[002505];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 102021 (Print " smiles disinterestedly at you and looks away.");
  GamePrint " smiles disinterestedly at you and looks away.";
  TraceOperation 102048 New_line;
  GamePrint "\n";
  TraceOperation 102049 (Call (Floc 043634) [] Sp);
  PushFrame;
  PushReturnAddress 102049;
  MakeRoutineFrame 0;
  Jump: 043635
LocReturn 102049:
  PushStack call_result;
  TraceOperation 102054 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 102055:
  TraceOperation 102055 (Je [Var (Global 203),Con 132] (Branch F (Dloc 102110)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),132)) {
    TraceOperation 102059 (Je [Var (Global 202),Con 52] (Branch F (Dloc 102110)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),52)) {
      TraceOperation 102063 (Print "How heartless! Fortunately, justice prevails as the guards");
      GamePrint "How heartless! Fortunately, justice prevails as the guards";
      TraceOperation 102104 (Call (Floc 092666) [] Sp);
      PushFrame;
      PushReturnAddress 102104;
      MakeRoutineFrame 0;
      Jump: 092667
    } else {
      Jump: 102110
    }
  } else {
    Jump: 102110
  }
LocReturn 102104:
  PushStack call_result;
  TraceOperation 102109 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 102110:
  TraceOperation 102110 (Je [Var (Global 203),Con 22] (Branch F (Dloc 102122)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),22)) {
    TraceOperation 102114 (Je [Var (Global 202),Con 28] (Branch F (Dloc 102122)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),28)) {
      TraceOperation 102118 (Print_paddr (Var (Global 33)));
      Let b5 = M[007974];
      Let b6 = M[007975];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b5,b6)));
      TraceOperation 102120 New_line;
      GamePrint "\n";
      TraceOperation 102121 Rtrue;
      PopFrame;
      PopReturnAddress return_address_7;
      SetResult 1;
      JumpIndirect: (return) return_address_7
    } else {
      Jump: 102122
    }
  } else {
    Jump: 102122
  }
LocOp 102122:
  TraceOperation 102122 (Je [Var (Global 151),Con 3] (Branch F (Dloc 102137)));
  Let b1 = M[008210];
  Let b2 = M[008211];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 102126 (Je [Var (Global 203),Con 69] (Branch F (Dloc 102137)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (Equal(MakeHiLo(b3,b4),69)) {
      TraceOperation 102130 (Call (Floc 043620) [Con 19] Sp);
      PushFrame;
      PushReturnAddress 102130;
      SetLocal 1 19;
      MakeRoutineFrame 1;
      Jump: 043623
    } else {
      Jump: 102137
    }
  } else {
    Jump: 102137
  }
LocReturn 102130:
  PushStack call_result;
  TraceOperation 102136 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 102137:
  TraceOperation 102137 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 102141 (Jin (Con 52) (Con 194) (Branch F Dfalse));
    Let b3 = M[001223];
    if (Equal(194,Widen(b3))) {
      TraceOperation 102145 (Print_ret "She's holding a blaster at your head.");
      GamePrint "She's holding a blaster at your head.\n";
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 102166:
  MakeRoutineFrame 0;
  Jump: 102167
LocOp 102167:
  TraceOperation 102167 (Je [Var (Global 203),Con 154,Con 53] (Branch F (Dloc 102183)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),154),Equal(MakeHiLo(b1,b2),53))) {
    TraceOperation 102173 (Je [Var (Global 120),Con 194] (Branch F (Dloc 102183)));
    Let b3 = M[008148];
    Let b4 = M[008149];
    if (Equal(MakeHiLo(b3,b4),194)) {
      TraceOperation 102177 (Call (Floc 089360) [] Sp);
      PushFrame;
      PushReturnAddress 102177;
      MakeRoutineFrame 0;
      Jump: 089361
    } else {
      Jump: 102183
    }
  } else {
    Jump: 102183
  }
LocReturn 102177:
  PushStack call_result;
  TraceOperation 102182 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 102183:
  TraceOperation 102183 (Je [Var (Global 203),Con 124] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 102187 (Jin (Con 193) (Con 194) (Branch F Dfalse));
    Let b3 = M[002492];
    if (Equal(194,Widen(b3))) {
      TraceOperation 102191 (Print_obj (Con 194));
      Let b4 = M[002504];
      Let b5 = M[002505];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
      GamePrint ite_res7;
      TraceOperation 102193 (Print_ret " pulls it away.");
      GamePrint " pulls it away.\n";
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 1;
      JumpIndirect: (return) return_address_8
    } else {
      PopFrame;
      PopReturnAddress return_address_9;
      SetResult 0;
      JumpIndirect: (return) return_address_9
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 0;
    JumpIndirect: (return) return_address_10
  }
--------------------------------------------------
LocRoutine 102204:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102207
LocOp 102207:
  TraceOperation 102207 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 102211 (Print "This is one end of a short corridor that continues ");
    GamePrint "This is one end of a short corridor that continues ";
    TraceOperation 102242 (Je [Var (Global 0),Con 192] (Branch F (Dloc 102252)));
    Let b2 = M[007908];
    Let b3 = M[007909];
    if (Equal(MakeHiLo(b2,b3),192)) {
      TraceOperation 102246 (Print "aft");
      GamePrint "aft";
      TraceOperation 102249 (Jump 102257);
      Jump: 102257
    } else {
      Jump: 102252
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
LocOp 102252:
  TraceOperation 102252 (Print "fore");
  GamePrint "fore";
  Jump: 102257
LocOp 102257:
  TraceOperation 102257 (Print " along the main deck of ");
  GamePrint " along the main deck of ";
  TraceOperation 102272 (Print_obj (Con 220));
  Let b1 = M[002738];
  Let b2 = M[002739];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 102274 (Print ". Doorways lead to ");
  GamePrint ". Doorways lead to ";
  TraceOperation 102289 (Je [Var (Global 0),Con 192] (Branch F (Dloc 102301)));
  Let b5 = M[007908];
  Let b6 = M[007909];
  if (Equal(MakeHiLo(b5,b6),192)) {
    TraceOperation 102293 (Print "fore");
    GamePrint "fore";
    TraceOperation 102298 (Jump 102304);
    Jump: 102304
  } else {
    Jump: 102301
  }
LocOp 102301:
  TraceOperation 102301 (Print "aft");
  GamePrint "aft";
  Jump: 102304
LocOp 102304:
  TraceOperation 102304 (Print " and port. In addition, a gangway leads ");
  GamePrint " and port. In addition, a gangway leads ";
  TraceOperation 102331 (Je [Var (Global 0),Con 192] (Branch F (Dloc 102341)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),192)) {
    TraceOperation 102335 (Print "up");
    GamePrint "up";
    TraceOperation 102338 (Jump 102346);
    Jump: 102346
  } else {
    Jump: 102341
  }
LocOp 102341:
  TraceOperation 102341 (Print "down");
  GamePrint "down";
  Jump: 102346
LocOp 102346:
  TraceOperation 102346 (Print_ret "ward.");
  GamePrint "ward.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102352:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102355
LocOp 102355:
  TraceOperation 102355 (Je [Var (Local 1),Con 2] (Branch F (Dloc 102363)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 102359 (Clear_attr (Con 177) (Con 28));
    Let b2 = M[002347];
    SetByte 002347 ClearBit(b2,3);
    TraceOperation 102362 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 102363
  }
LocOp 102363:
  TraceOperation 102363 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 102367 (Call (Floc 102204) [Con 3] Sp);
    PushFrame;
    PushReturnAddress 102367;
    SetLocal 1 3;
    MakeRoutineFrame 1;
    Jump: 102207
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocReturn 102367:
  PushStack call_result;
  TraceOperation 102373 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 102374:
  MakeRoutineFrame 0;
  Jump: 102375
LocOp 102375:
  TraceOperation 102375 (Store (Con 229) (Con 0));
  SetByte 008334 0;
  SetByte 008335 0;
  TraceOperation 102378 Rfalse;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 0;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102380:
  MakeRoutineFrame 0;
  Jump: 102381
LocOp 102381:
  TraceOperation 102381 (Inc (Con 228));
  Let b1 = M[008332];
  Let b2 = M[008333];
  SetByte 008332 HiByte(Add(MakeHiLo(b1,b2),1));
  SetByte 008333 LoByte(Add(MakeHiLo(b1,b2),1));
  TraceOperation 102383 (Je [Var (Global 212),Con 1] (Branch F (Dloc 102490)));
  Let b3 = M[008332];
  Let b4 = M[008333];
  if (Equal(MakeHiLo(b3,b4),1)) {
    TraceOperation 102388 (Store (Con 229) (Con 1));
    SetByte 008334 0;
    SetByte 008335 1;
    TraceOperation 102391 (Call (Floc 022320) [Con -14128,Con 2] Sp);
    PushFrame;
    PushReturnAddress 102391;
    SetLocal 1 -14128;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 102490
  }
LocReturn 102391:
  PushStack call_result;
  TraceOperation 102399 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102404 (Print "That entrance leads to the");
  GamePrint "That entrance leads to the";
  TraceOperation 102423 (Print_paddr (Var (Global 11)));
  Let b2 = M[007930];
  Let b3 = M[007931];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 102425 (Print " chamber. It's supposed to be a terribly dangerous area of the ship. Are you sure you want to go in there?");
  GamePrint " chamber. It's supposed to be a terribly dangerous area of the ship. Are you sure you want to go in there?";
  TraceOperation 102488 New_line;
  GamePrint "\n";
  TraceOperation 102489 Rfalse;
  PopFrame;
  PopReturnAddress return_address_4;
  SetResult 0;
  JumpIndirect: (return) return_address_4
LocOp 102490:
  TraceOperation 102490 (Je [Var (Global 212),Con 2] (Branch F (Dloc 102525)));
  Let b1 = M[008332];
  Let b2 = M[008333];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 102494 (Store (Con 229) (Con 1));
    SetByte 008334 0;
    SetByte 008335 1;
    TraceOperation 102497 (Call (Floc 022320) [Con -14128,Con 2] Sp);
    PushFrame;
    PushReturnAddress 102497;
    SetLocal 1 -14128;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 102525
  }
LocReturn 102497:
  PushStack call_result;
  TraceOperation 102505 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102510 (Print "Absolutely sure?");
  GamePrint "Absolutely sure?";
  TraceOperation 102523 New_line;
  GamePrint "\n";
  TraceOperation 102524 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 102525:
  TraceOperation 102525 (Je [Var (Global 212),Con 3] (Branch F (Dloc 102719)));
  Let b1 = M[008332];
  Let b2 = M[008333];
  if (Equal(MakeHiLo(b1,b2),3)) {
    TraceOperation 102530 (Call (Floc 022340) [Con -14128] Sp);
    PushFrame;
    PushReturnAddress 102530;
    SetLocal 1 -14128;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    Jump: 102719
  }
LocReturn 102530:
  PushStack call_result;
  TraceOperation 102537 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 102542 (Store (Con 229) (Con 100));
  SetByte 008334 0;
  SetByte 008335 100;
  TraceOperation 102545 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame;
  PushReturnAddress 102545;
  SetLocal 1 -14349;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 102545:
  PushStack call_result;
  TraceOperation 102553 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102558 (Print "I can tell you don't want to really. You stride away with a spring in your step, wisely leaving the Drive Chamber safely behind you. Telegrams arrive from well-wishers in all corners of the Galaxy congratulating you on your prudence and wisdom, cheering you up immensely.");
  GamePrint "I can tell you don't want to really. You stride away with a spring in your step, wisely leaving the Drive Chamber safely behind you. Telegrams arrive from well-wishers in all corners of the Galaxy congratulating you on your prudence and wisdom, cheering you up immensely.";
  TraceOperation 102717 New_line;
  GamePrint "\n";
  TraceOperation 102718 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 102719:
  TraceOperation 102719 (Je [Var (Global 212),Con 4] (Branch F (Dloc 102794)));
  Let b1 = M[008332];
  Let b2 = M[008333];
  if (Equal(MakeHiLo(b1,b2),4)) {
    TraceOperation 102724 (Call (Floc 022320) [Con -14128,Con 2] Sp);
    PushFrame;
    PushReturnAddress 102724;
    SetLocal 1 -14128;
    SetLocal 2 2;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    Jump: 022327
  } else {
    Jump: 102794
  }
LocReturn 102724:
  PushStack call_result;
  TraceOperation 102732 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102737 (Call (Floc 022320) [Con -14349,Con 2] Sp);
  PushFrame;
  PushReturnAddress 102737;
  SetLocal 1 -14349;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 102737:
  PushStack call_result;
  TraceOperation 102745 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102750 (Store (Con 229) (Con 2));
  SetByte 008334 0;
  SetByte 008335 2;
  TraceOperation 102753 (Print "What? You're joking, of course. Can I ask you to reconsider?");
  GamePrint "What? You're joking, of course. Can I ask you to reconsider?";
  TraceOperation 102792 New_line;
  GamePrint "\n";
  TraceOperation 102793 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
LocOp 102794:
  TraceOperation 102794 (Jg (Var (Global 212)) (Con 4) (Branch F Dfalse));
  Let b1 = M[008332];
  Let b2 = M[008333];
  if (GreaterThan(MakeHiLo(b1,b2),4)) {
    TraceOperation 102798 (Call (Floc 022340) [Con -14128] Sp);
    PushFrame;
    PushReturnAddress 102798;
    SetLocal 1 -14128;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 102798:
  PushStack call_result;
  TraceOperation 102805 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 102810 (Store (Con 229) (Con 0));
  SetByte 008334 0;
  SetByte 008335 0;
  TraceOperation 102813 (Ret (Con 188));
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 188;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 102816:
  MakeRoutineFrame 0;
  Jump: 102817
LocOp 102817:
  TraceOperation 102817 (Je [Var (Global 203),Con 102] (Branch F (Dloc 102825)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),102)) {
    TraceOperation 102821 (Je [Var (Global 213),Con 1] (Branch T (Dloc 102837)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),1)) {
      Jump: 102837
    } else {
      Jump: 102825
    }
  } else {
    Jump: 102825
  }
LocOp 102825:
  TraceOperation 102825 (Je [Var (Global 203),Con 181] (Branch F (Dloc 102836)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),181)) {
    TraceOperation 102829 (Je [Var (Global 213),Con 2] (Branch F (Dloc 102836)));
    Let b3 = M[008334];
    Let b4 = M[008335];
    if (Equal(MakeHiLo(b3,b4),2)) {
      TraceOperation 102833 (Jump 102837);
      Jump: 102837
    } else {
      Jump: 102836
    }
  } else {
    Jump: 102836
  }
LocOp 102836:
  TraceOperation 102836 New_line;
  GamePrint "\n";
  Jump: 102837
LocOp 102837:
  TraceOperation 102837 (Store (Con 229) (Con 0));
  SetByte 008334 0;
  SetByte 008335 0;
  TraceOperation 102840 (Store (Con 228) (Con 0));
  SetByte 008332 0;
  SetByte 008333 0;
  TraceOperation 102843 (Print_ret "I knew you weren't serious about entering that extremely dangerous area.");
  GamePrint "I knew you weren't serious about entering that extremely dangerous area.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 102888:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 102891
LocOp 102891:
  TraceOperation 102891 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 102895 (Store (Con 136) (Con 123));
    SetByte 008148 0;
    SetByte 008149 123;
    TraceOperation 102898 (Insert_obj (Con 177) (Con 169));
    Let b2 = M[002348];
    if (IsZero(Widen(b2))) {} else {
      Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
      if (Equal(Widen(b3),177)) {
        Let b4 = M[002349];
        SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
      } else {
        Let loop_var5 = Widen(b3);
        Label 6: {
          Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
          if (Equal(Widen(b7),177)) {
            Let b8 = M[002349];
            SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
          } else {
            Assign loop_var5 = Widen(b7);
            Goto: Label 6
          }
        }
      }
    }
    SetByte 002348 169;
    Let b9 = M[002278];
    SetByte 002349 LoByte(Widen(b9));
    SetByte 002278 177;
    TraceOperation 102901 (Insert_obj (Con 176) (Con 169));
    Let b10 = M[002339];
    if (IsZero(Widen(b10))) {} else {
      Let b11 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
      if (Equal(Widen(b11),176)) {
        Let b12 = M[002340];
        SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b12));
      } else {
        Let loop_var13 = Widen(b11);
        Label 14: {
          Let b15 = M[Offset(Offset(000751,Mul(loop_var13,9)),5)];
          if (Equal(Widen(b15),176)) {
            Let b16 = M[002340];
            SetByte Offset(Offset(000751,Mul(loop_var13,9)),5) LoByte(Widen(b16));
          } else {
            Assign loop_var13 = Widen(b15);
            Goto: Label 14
          }
        }
      }
    }
    SetByte 002339 169;
    Let b17 = M[002278];
    SetByte 002340 LoByte(Widen(b17));
    SetByte 002278 176;
    TraceOperation 102904 (Insert_obj (Con 123) (Con 169));
    Let b18 = M[001862];
    if (IsZero(Widen(b18))) {} else {
      Let b19 = M[Offset(Offset(000751,Mul(Widen(b18),9)),6)];
      if (Equal(Widen(b19),123)) {
        Let b20 = M[001863];
        SetByte Offset(Offset(000751,Mul(Widen(b18),9)),6) LoByte(Widen(b20));
      } else {
        Let loop_var21 = Widen(b19);
        Label 22: {
          Let b23 = M[Offset(Offset(000751,Mul(loop_var21,9)),5)];
          if (Equal(Widen(b23),123)) {
            Let b24 = M[001863];
            SetByte Offset(Offset(000751,Mul(loop_var21,9)),5) LoByte(Widen(b24));
          } else {
            Assign loop_var21 = Widen(b23);
            Goto: Label 22
          }
        }
      }
    }
    SetByte 001862 169;
    Let b25 = M[002278];
    SetByte 001863 LoByte(Widen(b25));
    SetByte 002278 123;
    TraceOperation 102907 (Test_attr (Con 190) (Con 27) (Branch F (Dloc 102921)));
    Let b26 = M[002464];
    if (TestBit(b26,4)) {
      TraceOperation 102911 (Insert_obj (Con 142) (Con 219));
      Let b27 = M[002033];
      if (IsZero(Widen(b27))) {} else {
        Let b28 = M[Offset(Offset(000751,Mul(Widen(b27),9)),6)];
        if (Equal(Widen(b28),142)) {
          Let b29 = M[002034];
          SetByte Offset(Offset(000751,Mul(Widen(b27),9)),6) LoByte(Widen(b29));
        } else {
          Let loop_var30 = Widen(b28);
          Label 31: {
            Let b32 = M[Offset(Offset(000751,Mul(loop_var30,9)),5)];
            if (Equal(Widen(b32),142)) {
              Let b33 = M[002034];
              SetByte Offset(Offset(000751,Mul(loop_var30,9)),5) LoByte(Widen(b33));
            } else {
              Assign loop_var30 = Widen(b32);
              Goto: Label 31
            }
          }
        }
      }
      SetByte 002033 219;
      Let b34 = M[002728];
      SetByte 002034 LoByte(Widen(b34));
      SetByte 002728 142;
      TraceOperation 102914 (Insert_obj (Con 194) (Con 219));
      Let b35 = M[002501];
      if (IsZero(Widen(b35))) {} else {
        Let b36 = M[Offset(Offset(000751,Mul(Widen(b35),9)),6)];
        if (Equal(Widen(b36),194)) {
          Let b37 = M[002502];
          SetByte Offset(Offset(000751,Mul(Widen(b35),9)),6) LoByte(Widen(b37));
        } else {
          Let loop_var38 = Widen(b36);
          Label 39: {
            Let b40 = M[Offset(Offset(000751,Mul(loop_var38,9)),5)];
            if (Equal(Widen(b40),194)) {
              Let b41 = M[002502];
              SetByte Offset(Offset(000751,Mul(loop_var38,9)),5) LoByte(Widen(b41));
            } else {
              Assign loop_var38 = Widen(b40);
              Goto: Label 39
            }
          }
        }
      }
      SetByte 002501 219;
      Let b42 = M[002728];
      SetByte 002502 LoByte(Widen(b42));
      SetByte 002728 194;
      TraceOperation 102917 (Insert_obj (Con 195) (Con 219));
      Let b43 = M[002510];
      if (IsZero(Widen(b43))) {} else {
        Let b44 = M[Offset(Offset(000751,Mul(Widen(b43),9)),6)];
        if (Equal(Widen(b44),195)) {
          Let b45 = M[002511];
          SetByte Offset(Offset(000751,Mul(Widen(b43),9)),6) LoByte(Widen(b45));
        } else {
          Let loop_var46 = Widen(b44);
          Label 47: {
            Let b48 = M[Offset(Offset(000751,Mul(loop_var46,9)),5)];
            if (Equal(Widen(b48),195)) {
              Let b49 = M[002511];
              SetByte Offset(Offset(000751,Mul(loop_var46,9)),5) LoByte(Widen(b49));
            } else {
              Assign loop_var46 = Widen(b48);
              Goto: Label 47
            }
          }
        }
      }
      SetByte 002510 219;
      Let b50 = M[002728];
      SetByte 002511 LoByte(Widen(b50));
      SetByte 002728 195;
      TraceOperation 102920 Rfalse;
      PopFrame;
      PopReturnAddress return_address_51;
      SetResult 0;
      JumpIndirect: (return) return_address_51
    } else {
      Jump: 102921
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_52;
    SetResult 0;
    JumpIndirect: (return) return_address_52
  }
LocOp 102921:
  TraceOperation 102921 (Set_attr (Con 190) (Con 27));
  Let b1 = M[002464];
  SetByte 002464 SetBit(b1,4);
  TraceOperation 102924 (Call (Floc 022320) [Con -32630,Con 1] Sp);
  PushFrame;
  PushReturnAddress 102924;
  SetLocal 1 -32630;
  SetLocal 2 1;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 102924:
  PushStack call_result;
  TraceOperation 102932 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 102937 Rfalse;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 0;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 102938:
  MakeRoutineFrame 0;
  Jump: 102939
LocOp 102939:
  TraceOperation 102939 (Je [Var (Global 203),Con 120] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),120)) {
    TraceOperation 102943 (Print "\"Equipped with a sensational breakthrough in Improbability Physics, ");
    GamePrint "\"Equipped with a sensational breakthrough in Improbability Physics, ";
    TraceOperation 102978 (Print_obj (Con 220));
    Let b3 = M[002738];
    Let b4 = M[002739];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 102980 (Print " will make you the envy of every major government. When the ship's");
    GamePrint " will make you the envy of every major government. When the ship's";
    TraceOperation 103019 (Print_paddr (Var (Global 11)));
    Let b7 = M[007930];
    Let b8 = M[007931];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b7,b8)));
    TraceOperation 103021 (Print " is activated, ");
    GamePrint " is activated, ";
    TraceOperation 103032 (Print_obj (Con 220));
    Let b9 = M[002738];
    Let b10 = M[002739];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
    GamePrint ite_res12;
    TraceOperation 103034 (Print " passes through every point in the universe simultaneously, making travel to any single location a breeze!\"\n\nThe ");
    GamePrint " passes through every point in the universe simultaneously, making travel to any single location a breeze!\"\n\nThe ";
    TraceOperation 103103 (Print_obj (Con 189));
    Let b13 = M[002459];
    Let b14 = M[002460];
    Let b15 = M[Address(MakeHiLo(b13,b14))];
    Let ite_res16 = Ite((IsZeroByte(b15),"",GetText(Offset(Address(MakeHiLo(b13,b14)),1))));
    GamePrint ite_res16;
    TraceOperation 103105 (Print " goes on to describe the ship's complement of ");
    GamePrint " goes on to describe the ship's complement of ";
    TraceOperation 103134 (Print_paddr (Var (Global 43)));
    Let b17 = M[007994];
    Let b18 = M[007995];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b17,b18)));
    TraceOperation 103136 (Print "-designed robots and computers, all equipped with GPP (");
    GamePrint "-designed robots and computers, all equipped with GPP (";
    TraceOperation 103173 (Print_paddr (Var (Global 29)));
    Let b19 = M[007966];
    Let b20 = M[007967];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b19,b20)));
    TraceOperation 103175 (Print_ret ").");
    GamePrint ").\n";
    PopFrame;
    PopReturnAddress return_address_21;
    SetResult 1;
    JumpIndirect: (return) return_address_21
  } else {
    PopFrame;
    PopReturnAddress return_address_22;
    SetResult 0;
    JumpIndirect: (return) return_address_22
  }
--------------------------------------------------
LocRoutine 103180:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 103183
LocOp 103183:
  TraceOperation 103183 (Je [Var (Local 1),Con 3] (Branch F (Dloc 103369)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 103188 (Inc (Con 227));
    Let b2 = M[008330];
    Let b3 = M[008331];
    SetByte 008330 HiByte(Add(MakeHiLo(b2,b3),1));
    SetByte 008331 LoByte(Add(MakeHiLo(b2,b3),1));
    TraceOperation 103190 (Je [Var (Global 211),Con 1] (Branch F (Dloc 103236)));
    Let b4 = M[008330];
    Let b5 = M[008331];
    if (Equal(MakeHiLo(b4,b5),1)) {
      TraceOperation 103194 (Print "You're in the");
      GamePrint "You're in the";
      TraceOperation 103201 (Print_paddr (Var (Global 11)));
      Let b6 = M[007930];
      Let b7 = M[007931];
      GamePrint GetText(PackedAddress Z3(MakeHiLo(b6,b7)));
      TraceOperation 103203 (Print_ret " chamber. Nothing happens; there is nothing to see.");
      GamePrint " chamber. Nothing happens; there is nothing to see.\n";
      PopFrame;
      PopReturnAddress return_address_8;
      SetResult 1;
      JumpIndirect: (return) return_address_8
    } else {
      Jump: 103236
    }
  } else {
    Jump: 103369
  }
LocOp 103236:
  TraceOperation 103236 (Je [Var (Global 211),Con 2] (Branch F (Dloc 103257)));
  Let b1 = M[008330];
  Let b2 = M[008331];
  if (Equal(MakeHiLo(b1,b2),2)) {
    TraceOperation 103240 (Print_ret "I mean it! There's nothing to see here!");
    GamePrint "I mean it! There's nothing to see here!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 103257
  }
LocOp 103257:
  TraceOperation 103257 (Jg (Var (Global 211)) (Con 2) (Branch F Dfalse));
  Let b1 = M[008330];
  Let b2 = M[008331];
  if (GreaterThan(MakeHiLo(b1,b2),2)) {
    TraceOperation 103261 (Je [Var (Global 211),Con 3] (Branch F (Dloc 103312)));
    Let b3 = M[008330];
    Let b4 = M[008331];
    if (Equal(MakeHiLo(b3,b4),3)) {
      TraceOperation 103265 (Insert_obj (Con 187) (Con 169));
      Let b5 = M[002438];
      if (IsZero(Widen(b5))) {} else {
        Let b6 = M[Offset(Offset(000751,Mul(Widen(b5),9)),6)];
        if (Equal(Widen(b6),187)) {
          Let b7 = M[002439];
          SetByte Offset(Offset(000751,Mul(Widen(b5),9)),6) LoByte(Widen(b7));
        } else {
          Let loop_var8 = Widen(b6);
          Label 9: {
            Let b10 = M[Offset(Offset(000751,Mul(loop_var8,9)),5)];
            if (Equal(Widen(b10),187)) {
              Let b11 = M[002439];
              SetByte Offset(Offset(000751,Mul(loop_var8,9)),5) LoByte(Widen(b11));
            } else {
              Assign loop_var8 = Widen(b10);
              Goto: Label 9
            }
          }
        }
      }
      SetByte 002438 169;
      Let b12 = M[002278];
      SetByte 002439 LoByte(Widen(b12));
      SetByte 002278 187;
      TraceOperation 103268 (Insert_obj (Con 186) (Var (Global 0)));
      Let b13 = M[007908];
      Let b14 = M[007909];
      Let b15 = M[002429];
      if (IsZero(Widen(b15))) {} else {
        Let b16 = M[Offset(Offset(000751,Mul(Widen(b15),9)),6)];
        if (Equal(Widen(b16),186)) {
          Let b17 = M[002430];
          SetByte Offset(Offset(000751,Mul(Widen(b15),9)),6) LoByte(Widen(b17));
        } else {
          Let loop_var18 = Widen(b16);
          Label 19: {
            Let b20 = M[Offset(Offset(000751,Mul(loop_var18,9)),5)];
            if (Equal(Widen(b20),186)) {
              Let b21 = M[002430];
              SetByte Offset(Offset(000751,Mul(loop_var18,9)),5) LoByte(Widen(b21));
            } else {
              Assign loop_var18 = Widen(b20);
              Goto: Label 19
            }
          }
        }
      }
      SetByte 002429 b14;
      Let b22 = M[Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6)];
      SetByte 002430 LoByte(Widen(b22));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b13,b14),9)),6) 186;
      TraceOperation 103271 (Insert_obj (Con 14) (Var (Global 0)));
      Let b23 = M[007908];
      Let b24 = M[007909];
      Let b25 = M[000881];
      if (IsZero(Widen(b25))) {} else {
        Let b26 = M[Offset(Offset(000751,Mul(Widen(b25),9)),6)];
        if (Equal(Widen(b26),14)) {
          Let b27 = M[000882];
          SetByte Offset(Offset(000751,Mul(Widen(b25),9)),6) LoByte(Widen(b27));
        } else {
          Let loop_var28 = Widen(b26);
          Label 29: {
            Let b30 = M[Offset(Offset(000751,Mul(loop_var28,9)),5)];
            if (Equal(Widen(b30),14)) {
              Let b31 = M[000882];
              SetByte Offset(Offset(000751,Mul(loop_var28,9)),5) LoByte(Widen(b31));
            } else {
              Assign loop_var28 = Widen(b30);
              Goto: Label 29
            }
          }
        }
      }
      SetByte 000881 b24;
      Let b32 = M[Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),6)];
      SetByte 000882 LoByte(Widen(b32));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b23,b24),9)),6) 14;
      TraceOperation 103274 (Insert_obj (Con 11) (Var (Global 0)));
      Let b33 = M[007908];
      Let b34 = M[007909];
      Let b35 = M[000854];
      if (IsZero(Widen(b35))) {} else {
        Let b36 = M[Offset(Offset(000751,Mul(Widen(b35),9)),6)];
        if (Equal(Widen(b36),11)) {
          Let b37 = M[000855];
          SetByte Offset(Offset(000751,Mul(Widen(b35),9)),6) LoByte(Widen(b37));
        } else {
          Let loop_var38 = Widen(b36);
          Label 39: {
            Let b40 = M[Offset(Offset(000751,Mul(loop_var38,9)),5)];
            if (Equal(Widen(b40),11)) {
              Let b41 = M[000855];
              SetByte Offset(Offset(000751,Mul(loop_var38,9)),5) LoByte(Widen(b41));
            } else {
              Assign loop_var38 = Widen(b40);
              Goto: Label 39
            }
          }
        }
      }
      SetByte 000854 b34;
      Let b42 = M[Offset(Offset(000751,Mul(MakeHiLo(b33,b34),9)),6)];
      SetByte 000855 LoByte(Widen(b42));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b33,b34),9)),6) 11;
      TraceOperation 103277 (Add (Var (Global 1)) (Con 25) (Global 1));
      Let b43 = M[007910];
      Let b44 = M[007911];
      SetByte 007910 HiByte(Add(MakeHiLo(b43,b44),25));
      SetByte 007911 LoByte(Add(MakeHiLo(b43,b44),25));
      TraceOperation 103281 (Print "Okay, okay, there are a FEW things to see here. ");
      GamePrint "Okay, okay, there are a FEW things to see here. ";
      Jump: 103312
    } else {
      Jump: 103312
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_45;
    SetResult 0;
    JumpIndirect: (return) return_address_45
  }
LocOp 103312:
  TraceOperation 103312 (Print "This is the room that houses the powerful In");
  GamePrint "This is the room that houses the powerful In";
  TraceOperation 103337 (Print_paddr (Var (Global 10)));
  Let b1 = M[007928];
  Let b2 = M[007929];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 103339 (Print " that drives ");
  GamePrint " that drives ";
  TraceOperation 103348 (Print_obj (Con 220));
  Let b3 = M[002738];
  Let b4 = M[002739];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 103350 (Print_ret ". An exit lies fore of here.");
  GamePrint ". An exit lies fore of here.\n";
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 103369:
  TraceOperation 103369 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 103373 (Je [Var (Global 211),Con 3] (Branch F Dfalse));
    Let b2 = M[008330];
    Let b3 = M[008331];
    if (Equal(MakeHiLo(b2,b3),3)) {
      TraceOperation 103377 (Store (Con 227) (Con 4));
      SetByte 008330 0;
      SetByte 008331 4;
      TraceOperation 103380 New_line;
      GamePrint "\n";
      TraceOperation 103381 (Print_ret "(Footnote 10)");
      GamePrint "(Footnote 10)\n";
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 1;
      JumpIndirect: (return) return_address_4
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 103390:
  MakeRoutineFrame 0;
  Jump: 103391
LocOp 103391:
  TraceOperation 103391 (Je [Var (Global 203),Con 159,Con 61] (Branch F (Dloc 103408)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),159),Equal(MakeHiLo(b1,b2),61))) {
    TraceOperation 103397 (Je [Var (Global 0),Con 188] (Branch T (Dloc 103408)));
    Let b3 = M[007908];
    Let b4 = M[007909];
    if (Equal(MakeHiLo(b3,b4),188)) {
      Jump: 103408
    } else {
      TraceOperation 103401 (Call (Floc 057596) [Con 187] Sp);
      PushFrame;
      PushReturnAddress 103401;
      SetLocal 1 187;
      MakeRoutineFrame 1;
      Jump: 057599
    }
  } else {
    Jump: 103408
  }
LocReturn 103401:
  PushStack call_result;
  TraceOperation 103407 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 103408:
  TraceOperation 103408 (Je [Var (Global 203),Con 88] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 103412 (Print "Only ");
    GamePrint "Only ";
    TraceOperation 103417 (Print_obj (Con 198));
    Let b3 = M[002540];
    Let b4 = M[002541];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 103419 (Print_ret " can activate the drive.");
    GamePrint " can activate the drive.\n";
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 1;
    JumpIndirect: (return) return_address_7
  } else {
    PopFrame;
    PopReturnAddress return_address_8;
    SetResult 0;
    JumpIndirect: (return) return_address_8
  }
--------------------------------------------------
LocRoutine 103434:
  MakeRoutineFrame 0;
  Jump: 103435
LocOp 103435:
  TraceOperation 103435 (Je [Var (Global 203),Con 61] (Branch F (Dloc 103595)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 103440 (Print "The ");
    GamePrint "The ";
    TraceOperation 103443 (Print_obj (Con 186));
    Let b3 = M[002432];
    Let b4 = M[002433];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 103445 (Print " has a switch");
    GamePrint " has a switch";
    TraceOperation 103454 (Jin (Con 185) (Con 186) (Branch F (Dloc 103513)));
    Let b7 = M[002420];
    if (Equal(186,Widen(b7))) {
      TraceOperation 103458 (Print ", a long cord ");
      GamePrint ", a long cord ";
      TraceOperation 103469 (Jz (Var (Global 210)) (Branch T (Dloc 103496)));
      Let b8 = M[008328];
      Let b9 = M[008329];
      if (IsZero(MakeHiLo(b8,b9))) {
        Jump: 103496
      } else {
        TraceOperation 103472 (Print "plugged into the control console,");
        GamePrint "plugged into the control console,";
        TraceOperation 103493 (Jump 103544);
        Jump: 103544
      }
    } else {
      Jump: 103513
    }
  } else {
    Jump: 103595
  }
LocOp 103496:
  TraceOperation 103496 (Print "ending with a ");
  GamePrint "ending with a ";
  TraceOperation 103505 (Print_obj (Con 185));
  Let b1 = M[002423];
  Let b2 = M[002424];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 103507 (Print ",");
  GamePrint ",";
  TraceOperation 103510 (Jump 103544);
  Jump: 103544
LocOp 103513:
  TraceOperation 103513 (Print ", a fused spot where a long cord once began,");
  GamePrint ", a fused spot where a long cord once began,";
  Jump: 103544
LocOp 103544:
  TraceOperation 103544 (Print " and a short cord ");
  GamePrint " and a short cord ";
  TraceOperation 103557 (Jz (Var (Global 209)) (Branch T (Dloc 103574)));
  Let b1 = M[008326];
  Let b2 = M[008327];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 103574
  } else {
    TraceOperation 103560 (Print "plugged into the ");
    GamePrint "plugged into the ";
    TraceOperation 103569 (Print_obj (Con 182));
    Let b3 = M[002396];
    Let b4 = M[002397];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 103571 (Jump 103585);
    Jump: 103585
  }
LocOp 103574:
  TraceOperation 103574 (Print "ending with a ");
  GamePrint "ending with a ";
  TraceOperation 103583 (Print_obj (Con 184));
  Let b1 = M[002414];
  Let b2 = M[002415];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  Jump: 103585
LocOp 103585:
  TraceOperation 103585 (Print ".");
  GamePrint ".";
  TraceOperation 103588 (Call (Floc 057998) [] Sp);
  PushFrame;
  PushReturnAddress 103588;
  MakeRoutineFrame 0;
  Jump: 057999
LocReturn 103588:
  PushStack call_result;
  TraceOperation 103593 New_line;
  GamePrint "\n";
  TraceOperation 103594 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 103595:
  TraceOperation 103595 (Je [Var (Global 203),Con 157,Con 41] (Branch F (Dloc 103605)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),157),Equal(MakeHiLo(b1,b2),41))) {
    TraceOperation 103601 (Je [Var (Global 201),Con 186] (Branch T (Dloc 103617)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    if (Equal(MakeHiLo(b3,b4),186)) {
      Jump: 103617
    } else {
      Jump: 103605
    }
  } else {
    Jump: 103605
  }
LocOp 103605:
  TraceOperation 103605 (Je [Var (Global 203),Con 46] (Branch F (Dloc 103680)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 103610 (Je [Var (Global 202),Con 180,Con 197] (Branch F (Dloc 103680)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),180),Equal(MakeHiLo(b3,b4),197))) {
      Jump: 103617
    } else {
      Jump: 103680
    }
  } else {
    Jump: 103680
  }
LocOp 103617:
  TraceOperation 103617 (Jin (Con 185) (Con 186) (Branch F (Dloc 103671)));
  Let b1 = M[002420];
  if (Equal(186,Widen(b1))) {
    TraceOperation 103621 (Print "In case you hadn't noticed, there are two connections leading from the ");
    GamePrint "In case you hadn't noticed, there are two connections leading from the ";
    TraceOperation 103664 (Print_obj (Con 186));
    Let b2 = M[002432];
    Let b3 = M[002433];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 103666 (Print_ret "...");
    GamePrint "...\n";
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 1;
    JumpIndirect: (return) return_address_6
  } else {
    Jump: 103671
  }
LocOp 103671:
  TraceOperation 103671 (Call (Floc 022042) [Con 41,Con 184,Var (Global 202)] Sp);
  Let b1 = M[008312];
  Let b2 = M[008313];
  PushFrame;
  PushReturnAddress 103671;
  SetLocal 1 41;
  SetLocal 2 184;
  SetLocal 3 MakeHiLo(b1,b2);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 103671:
  PushStack call_result;
  TraceOperation 103679 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 103680:
  TraceOperation 103680 (Je [Var (Global 203),Con 163] (Branch F (Dloc 103710)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),163)) {
    TraceOperation 103684 (Jz (Var (Global 210)) (Branch F (Dloc 103690)));
    Let b3 = M[008328];
    Let b4 = M[008329];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 103687 (Jz (Var (Global 209)) (Branch T (Dloc 103706)));
      Let b5 = M[008326];
      Let b6 = M[008327];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 103706
      } else {
        Jump: 103690
      }
    } else {
      Jump: 103690
    }
  } else {
    Jump: 103710
  }
LocOp 103690:
  TraceOperation 103690 (Store (Con 225) (Con 0));
  SetByte 008326 0;
  SetByte 008327 0;
  TraceOperation 103693 (Store (Con 226) (Con 0));
  SetByte 008328 0;
  SetByte 008329 0;
  TraceOperation 103696 (Clear_attr (Con 186) (Con 27));
  Let b1 = M[002428];
  SetByte 002428 ClearBit(b1,4);
  TraceOperation 103699 (Print_ret "Done.");
  GamePrint "Done.\n";
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 1;
  JumpIndirect: (return) return_address_2
LocOp 103706:
  TraceOperation 103706 (Print_paddr (Var (Global 61)));
  Let b1 = M[008030];
  Let b2 = M[008031];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 103708 New_line;
  GamePrint "\n";
  TraceOperation 103709 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 103710:
  TraceOperation 103710 (Je [Var (Global 203),Con 88] (Branch F (Dloc 103722)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),88)) {
    TraceOperation 103714 (Call (Floc 022042) [Con 88,Con 183] Sp);
    PushFrame;
    PushReturnAddress 103714;
    SetLocal 1 88;
    SetLocal 2 183;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 103722
  }
LocReturn 103714:
  PushStack call_result;
  TraceOperation 103721 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 103722:
  TraceOperation 103722 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 103728 (Call (Floc 030950) [] Sp);
    PushFrame;
    PushReturnAddress 103728;
    MakeRoutineFrame 0;
    Jump: 030951
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 103728:
  PushStack call_result;
  TraceOperation 103733 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 103734:
  MakeRoutineFrame 0;
  Jump: 103735
LocOp 103735:
  TraceOperation 103735 (Je [Var (Global 203),Con 157,Con 46,Con 41] (Branch F (Dloc 103906)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),157),Equal(MakeHiLo(b1,b2),46)),Equal(MakeHiLo(b1,b2),41))) {
    TraceOperation 103743 (Je [Var (Global 202),Con 199,Con 197] (Branch F (Dloc 103906)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),199),Equal(MakeHiLo(b3,b4),197))) {
      TraceOperation 103750 (Jz (Var (Global 210)) (Branch T (Dloc 103760)));
      Let b5 = M[008328];
      Let b6 = M[008329];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 103760
      } else {
        TraceOperation 103753 (Print_ret "It already is!");
        GamePrint "It already is!\n";
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      }
    } else {
      Jump: 103906
    }
  } else {
    Jump: 103906
  }
LocOp 103760:
  TraceOperation 103760 (Store (Con 226) (Con 1));
  SetByte 008328 0;
  SetByte 008329 1;
  TraceOperation 103763 (Set_attr (Con 186) (Con 27));
  Let b1 = M[002428];
  SetByte 002428 SetBit(b1,4);
  TraceOperation 103766 (Print "Plugged.");
  GamePrint "Plugged.";
  TraceOperation 103775 (Call (Floc 020662) [Con -16129] Sp);
  PushFrame;
  PushReturnAddress 103775;
  SetLocal 1 -16129;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 020671
LocReturn 103775:
  PushStack call_result;
  TraceOperation 103782 (Jz (Var Sp) (Branch F (Dloc 103904)));
  PopStack popped1;
  if (IsZero(popped1)) {
    TraceOperation 103786 (Print " ");
    GamePrint " ";
    TraceOperation 103789 (Print_obj (Con 198));
    Let b2 = M[002540];
    Let b3 = M[002541];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 103791 (Print " says \"You shouldn't be playing around with a ");
    GamePrint " says \"You shouldn't be playing around with a ";
    TraceOperation 103816 (Print_obj (Con 186));
    Let b6 = M[002432];
    Let b7 = M[002433];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
    GamePrint ite_res9;
    TraceOperation 103818 (Print ". Who knows where it's been?\"");
    GamePrint ". Who knows where it's been?\"";
    TraceOperation 103837 New_line;
    GamePrint "\n";
    TraceOperation 103838 New_line;
    GamePrint "\n";
    TraceOperation 103839 (Print_paddr (Var (Global 21)));
    Let b10 = M[007950];
    Let b11 = M[007951];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b10,b11)));
    TraceOperation 103841 (Print_obj (Con 198));
    Let b12 = M[002540];
    Let b13 = M[002541];
    Let b14 = M[Address(MakeHiLo(b12,b13))];
    Let ite_res15 = Ite((IsZeroByte(b14),"",GetText(Offset(Address(MakeHiLo(b12,b13)),1))));
    GamePrint ite_res15;
    TraceOperation 103843 (Print ". Someone has connected a ");
    GamePrint ". Someone has connected a ";
    TraceOperation 103862 (Print_obj (Con 186));
    Let b16 = M[002432];
    Let b17 = M[002433];
    Let b18 = M[Address(MakeHiLo(b16,b17))];
    Let ite_res19 = Ite((IsZeroByte(b18),"",GetText(Offset(Address(MakeHiLo(b16,b17)),1))));
    GamePrint ite_res19;
    TraceOperation 103864 (Print " to");
    GamePrint " to";
    TraceOperation 103867 (Print_paddr (Var (Global 7)));
    Let b20 = M[007922];
    Let b21 = M[007923];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b20,b21)));
    TraceOperation 103869 (Print ". Better be an emergency, that's all I have to say.\"");
    GamePrint ". Better be an emergency, that's all I have to say.\"";
    Jump: 103904
  } else {
    Jump: 103904
  }
LocOp 103904:
  TraceOperation 103904 New_line;
  GamePrint "\n";
  TraceOperation 103905 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 103906:
  TraceOperation 103906 (Je [Var (Global 203),Con 124] (Branch F (Dloc 103922)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 103910 (Je [Var (Global 202),Con 199] (Branch F (Dloc 103922)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),199)) {
      TraceOperation 103914 (Call (Floc 022042) [Con 163,Con 185] Sp);
      PushFrame;
      PushReturnAddress 103914;
      SetLocal 1 163;
      SetLocal 2 185;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 103922
    }
  } else {
    Jump: 103922
  }
LocReturn 103914:
  PushStack call_result;
  TraceOperation 103921 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 103922:
  TraceOperation 103922 (Je [Var (Global 203),Con 123,Con 163] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),123),Equal(MakeHiLo(b1,b2),163))) {
    TraceOperation 103928 (Jz (Var (Global 210)) (Branch T (Dloc 103944)));
    Let b3 = M[008328];
    Let b4 = M[008329];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 103944
    } else {
      TraceOperation 103931 (Store (Con 226) (Con 0));
      SetByte 008328 0;
      SetByte 008329 0;
      TraceOperation 103934 (Clear_attr (Con 186) (Con 27));
      Let b5 = M[002428];
      SetByte 002428 ClearBit(b5,4);
      TraceOperation 103937 (Print_ret "Done.");
      GamePrint "Done.\n";
      PopFrame;
      PopReturnAddress return_address_6;
      SetResult 1;
      JumpIndirect: (return) return_address_6
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_7;
    SetResult 0;
    JumpIndirect: (return) return_address_7
  }
LocOp 103944:
  TraceOperation 103944 (Print_paddr (Var (Global 61)));
  Let b1 = M[008030];
  Let b2 = M[008031];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 103946 New_line;
  GamePrint "\n";
  TraceOperation 103947 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 103948:
  MakeRoutineFrame 0;
  Jump: 103949
LocOp 103949:
  TraceOperation 103949 (Je [Var (Global 203),Con 157,Con 46,Con 41] (Branch F (Dloc 103984)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),157),Equal(MakeHiLo(b1,b2),46)),Equal(MakeHiLo(b1,b2),41))) {
    TraceOperation 103956 (Je [Var (Global 202),Con 182,Con 180] (Branch F (Dloc 103984)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),182),Equal(MakeHiLo(b3,b4),180))) {
      TraceOperation 103962 (Jz (Var (Global 209)) (Branch T (Dloc 103972)));
      Let b5 = M[008326];
      Let b6 = M[008327];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 103972
      } else {
        TraceOperation 103965 (Print_ret "It already is!");
        GamePrint "It already is!\n";
        PopFrame;
        PopReturnAddress return_address_7;
        SetResult 1;
        JumpIndirect: (return) return_address_7
      }
    } else {
      Jump: 103984
    }
  } else {
    Jump: 103984
  }
LocOp 103972:
  TraceOperation 103972 (Store (Con 225) (Con 1));
  SetByte 008326 0;
  SetByte 008327 1;
  TraceOperation 103975 (Print_ret "Plugged.");
  GamePrint "Plugged.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 103984:
  TraceOperation 103984 (Je [Var (Global 203),Con 124] (Branch F (Dloc 104000)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),124)) {
    TraceOperation 103988 (Je [Var (Global 202),Con 182] (Branch F (Dloc 104000)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),182)) {
      TraceOperation 103992 (Call (Floc 022042) [Con 163,Con 184] Sp);
      PushFrame;
      PushReturnAddress 103992;
      SetLocal 1 163;
      SetLocal 2 184;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      Jump: 022057
    } else {
      Jump: 104000
    }
  } else {
    Jump: 104000
  }
LocReturn 103992:
  PushStack call_result;
  TraceOperation 103999 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 104000:
  TraceOperation 104000 (Je [Var (Global 203),Con 123,Con 163] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),123),Equal(MakeHiLo(b1,b2),163))) {
    TraceOperation 104006 (Jz (Var (Global 209)) (Branch T (Dloc 104019)));
    Let b3 = M[008326];
    Let b4 = M[008327];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 104019
    } else {
      TraceOperation 104009 (Store (Con 225) (Con 0));
      SetByte 008326 0;
      SetByte 008327 0;
      TraceOperation 104012 (Print_ret "Done.");
      GamePrint "Done.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocOp 104019:
  TraceOperation 104019 (Print_paddr (Var (Global 61)));
  Let b1 = M[008030];
  Let b2 = M[008031];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 104021 New_line;
  GamePrint "\n";
  TraceOperation 104022 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
--------------------------------------------------
LocRoutine 104024:
  MakeRoutineFrame 0;
  Jump: 104025
LocOp 104025:
  TraceOperation 104025 (Je [Var (Global 203),Con 114,Con 145,Con 88] (Branch T (Dloc 104038)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(LogOr(Equal(MakeHiLo(b1,b2),114),Equal(MakeHiLo(b1,b2),145)),Equal(MakeHiLo(b1,b2),88))) {
    Jump: 104038
  } else {
    TraceOperation 104032 (Je [Var (Global 203),Con 154,Con 98] (Branch F Dfalse));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(Equal(MakeHiLo(b3,b4),154),Equal(MakeHiLo(b3,b4),98))) {
      Jump: 104038
    } else {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    }
  }
LocOp 104038:
  TraceOperation 104038 (Jz (Var (Global 209)) (Branch T (Dloc 104879)));
  Let b1 = M[008326];
  Let b2 = M[008327];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 104879
  } else {
    TraceOperation 104042 (Jz (Var (Global 208)) (Branch T (Dloc 104879)));
    Let b3 = M[008324];
    Let b4 = M[008325];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 104879
    } else {
      TraceOperation 104046 (Insert_obj (Con 186) (Var (Global 0)));
      Let b5 = M[007908];
      Let b6 = M[007909];
      Let b7 = M[002429];
      if (IsZero(Widen(b7))) {} else {
        Let b8 = M[Offset(Offset(000751,Mul(Widen(b7),9)),6)];
        if (Equal(Widen(b8),186)) {
          Let b9 = M[002430];
          SetByte Offset(Offset(000751,Mul(Widen(b7),9)),6) LoByte(Widen(b9));
        } else {
          Let loop_var10 = Widen(b8);
          Label 11: {
            Let b12 = M[Offset(Offset(000751,Mul(loop_var10,9)),5)];
            if (Equal(Widen(b12),186)) {
              Let b13 = M[002430];
              SetByte Offset(Offset(000751,Mul(loop_var10,9)),5) LoByte(Widen(b13));
            } else {
              Assign loop_var10 = Widen(b12);
              Goto: Label 11
            }
          }
        }
      }
      SetByte 002429 b6;
      Let b14 = M[Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6)];
      SetByte 002430 LoByte(Widen(b14));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b5,b6),9)),6) 186;
      TraceOperation 104049 (Insert_obj (Con 182) (Var (Global 0)));
      Let b15 = M[007908];
      Let b16 = M[007909];
      Let b17 = M[002393];
      if (IsZero(Widen(b17))) {} else {
        Let b18 = M[Offset(Offset(000751,Mul(Widen(b17),9)),6)];
        if (Equal(Widen(b18),182)) {
          Let b19 = M[002394];
          SetByte Offset(Offset(000751,Mul(Widen(b17),9)),6) LoByte(Widen(b19));
        } else {
          Let loop_var20 = Widen(b18);
          Label 21: {
            Let b22 = M[Offset(Offset(000751,Mul(loop_var20,9)),5)];
            if (Equal(Widen(b22),182)) {
              Let b23 = M[002394];
              SetByte Offset(Offset(000751,Mul(loop_var20,9)),5) LoByte(Widen(b23));
            } else {
              Assign loop_var20 = Widen(b22);
              Goto: Label 21
            }
          }
        }
      }
      SetByte 002393 b16;
      Let b24 = M[Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6)];
      SetByte 002394 LoByte(Widen(b24));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b15,b16),9)),6) 182;
      TraceOperation 104052 (Insert_obj (Var (Global 208)) (Var (Global 0)));
      Let b25 = M[008324];
      Let b26 = M[008325];
      Let b27 = M[007908];
      Let b28 = M[007909];
      Let b29 = M[Offset(Offset(000751,Mul(MakeHiLo(b25,b26),9)),4)];
      if (IsZero(Widen(b29))) {} else {
        Let b30 = M[Offset(Offset(000751,Mul(Widen(b29),9)),6)];
        if (Equal(Widen(b30),MakeHiLo(b25,b26))) {
          Let b31 = M[Offset(Offset(000751,Mul(MakeHiLo(b25,b26),9)),5)];
          SetByte Offset(Offset(000751,Mul(Widen(b29),9)),6) LoByte(Widen(b31));
        } else {
          Let loop_var32 = Widen(b30);
          Label 33: {
            Let b34 = M[Offset(Offset(000751,Mul(loop_var32,9)),5)];
            if (Equal(Widen(b34),MakeHiLo(b25,b26))) {
              Let b35 = M[Offset(Offset(000751,Mul(MakeHiLo(b25,b26),9)),5)];
              SetByte Offset(Offset(000751,Mul(loop_var32,9)),5) LoByte(Widen(b35));
            } else {
              Assign loop_var32 = Widen(b34);
              Goto: Label 33
            }
          }
        }
      }
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b25,b26),9)),4) b28;
      Let b36 = M[Offset(Offset(000751,Mul(MakeHiLo(b27,b28),9)),6)];
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b25,b26),9)),5) LoByte(Widen(b36));
      SetByte Offset(Offset(000751,Mul(MakeHiLo(b27,b28),9)),6) b26;
      TraceOperation 104055 (Je [Var (Global 208),Con 9] (Branch F (Dloc 104062)));
      Let b37 = M[008324];
      Let b38 = M[008325];
      if (Equal(MakeHiLo(b37,b38),9)) {
        TraceOperation 104059 (Store (Con 82) (Con 1));
        SetByte 008040 0;
        SetByte 008041 1;
        Jump: 104062
      } else {
        Jump: 104062
      }
    }
  }
LocOp 104062:
  TraceOperation 104062 (Jz (Var (Global 210)) (Branch T (Dloc 104816)));
  Let b1 = M[008328];
  Let b2 = M[008329];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 104816
  } else {
    TraceOperation 104066 (Print "As you flip the switch, sparks fly from the large receptacle. ");
    GamePrint "As you flip the switch, sparks fly from the large receptacle. ";
    TraceOperation 104101 (Call (Floc 020662) [Con -16129] Sp);
    PushFrame;
    PushReturnAddress 104101;
    SetLocal 1 -16129;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 020671
  }
LocReturn 104101:
  PushStack call_result;
  TraceOperation 104108 (Jz (Var Sp) (Branch T (Dloc 104162)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104162
  } else {
    TraceOperation 104111 (Jg (Var (Global 215)) (Con 6) (Branch F (Dloc 104162)));
    Let b2 = M[008338];
    Let b3 = M[008339];
    if (GreaterThan(MakeHiLo(b2,b3),6)) {
      TraceOperation 104115 (Print "\"My new control console!\" wails ");
      GamePrint "\"My new control console!\" wails ";
      TraceOperation 104140 (Print_obj (Con 198));
      Let b4 = M[002540];
      Let b5 = M[002541];
      Let b6 = M[Address(MakeHiLo(b4,b5))];
      Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
      GamePrint ite_res7;
      TraceOperation 104142 (Print ". \"This is the thanks I get");
      GamePrint ". \"This is the thanks I get";
      TraceOperation 104159 (Jump 104220);
      Jump: 104220
    } else {
      Jump: 104162
    }
  }
LocOp 104162:
  TraceOperation 104162 (Print "\"Now look what you've done. You've destroyed");
  GamePrint "\"Now look what you've done. You've destroyed";
  TraceOperation 104191 (Print_paddr (Var (Global 7)));
  Let b1 = M[007922];
  Let b2 = M[007923];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 104193 (Print ". Don't you know it's only for emergencies");
  GamePrint ". Don't you know it's only for emergencies";
  Jump: 104220
LocOp 104220:
  TraceOperation 104220 (Print "?\"");
  GamePrint "?\"";
  TraceOperation 104225 New_line;
  GamePrint "\n";
  TraceOperation 104226 New_line;
  GamePrint "\n";
  TraceOperation 104227 (Store (Con 226) (Con 0));
  SetByte 008328 0;
  SetByte 008329 0;
  TraceOperation 104230 (Clear_attr (Con 186) (Con 27));
  Let b1 = M[002428];
  SetByte 002428 ClearBit(b1,4);
  TraceOperation 104233 (Insert_obj (Con 185) (Con 219));
  Let b2 = M[002420];
  if (IsZero(Widen(b2))) {} else {
    Let b3 = M[Offset(Offset(000751,Mul(Widen(b2),9)),6)];
    if (Equal(Widen(b3),185)) {
      Let b4 = M[002421];
      SetByte Offset(Offset(000751,Mul(Widen(b2),9)),6) LoByte(Widen(b4));
    } else {
      Let loop_var5 = Widen(b3);
      Label 6: {
        Let b7 = M[Offset(Offset(000751,Mul(loop_var5,9)),5)];
        if (Equal(Widen(b7),185)) {
          Let b8 = M[002421];
          SetByte Offset(Offset(000751,Mul(loop_var5,9)),5) LoByte(Widen(b8));
        } else {
          Assign loop_var5 = Widen(b7);
          Goto: Label 6
        }
      }
    }
  }
  SetByte 002420 219;
  Let b9 = M[002728];
  SetByte 002421 LoByte(Widen(b9));
  SetByte 002728 185;
  TraceOperation 104236 (Insert_obj (Con 197) (Con 219));
  Let b10 = M[002528];
  if (IsZero(Widen(b10))) {} else {
    Let b11 = M[Offset(Offset(000751,Mul(Widen(b10),9)),6)];
    if (Equal(Widen(b11),197)) {
      Let b12 = M[002529];
      SetByte Offset(Offset(000751,Mul(Widen(b10),9)),6) LoByte(Widen(b12));
    } else {
      Let loop_var13 = Widen(b11);
      Label 14: {
        Let b15 = M[Offset(Offset(000751,Mul(loop_var13,9)),5)];
        if (Equal(Widen(b15),197)) {
          Let b16 = M[002529];
          SetByte Offset(Offset(000751,Mul(loop_var13,9)),5) LoByte(Widen(b16));
        } else {
          Assign loop_var13 = Widen(b15);
          Goto: Label 14
        }
      }
    }
  }
  SetByte 002528 219;
  Let b17 = M[002728];
  SetByte 002529 LoByte(Widen(b17));
  SetByte 002728 197;
  TraceOperation 104239 (Call (Floc 020662) [Con -16129] Sp);
  PushFrame;
  PushReturnAddress 104239;
  SetLocal 1 -16129;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 020671
LocReturn 104239:
  PushStack call_result;
  TraceOperation 104246 (Jz (Var Sp) (Branch T (Dloc 104557)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104557
  } else {
    TraceOperation 104250 (Jg (Var (Global 215)) (Con 6) (Branch F (Dloc 104557)));
    Let b2 = M[008338];
    Let b3 = M[008339];
    if (GreaterThan(MakeHiLo(b2,b3),6)) {
      TraceOperation 104255 (Insert_obj (Con 9) (Con 207));
      Let b4 = M[000836];
      if (IsZero(Widen(b4))) {} else {
        Let b5 = M[Offset(Offset(000751,Mul(Widen(b4),9)),6)];
        if (Equal(Widen(b5),9)) {
          Let b6 = M[000837];
          SetByte Offset(Offset(000751,Mul(Widen(b4),9)),6) LoByte(Widen(b6));
        } else {
          Let loop_var7 = Widen(b5);
          Label 8: {
            Let b9 = M[Offset(Offset(000751,Mul(loop_var7,9)),5)];
            if (Equal(Widen(b9),9)) {
              Let b10 = M[000837];
              SetByte Offset(Offset(000751,Mul(loop_var7,9)),5) LoByte(Widen(b10));
            } else {
              Assign loop_var7 = Widen(b9);
              Goto: Label 8
            }
          }
        }
      }
      SetByte 000836 207;
      Let b11 = M[002620];
      SetByte 000837 LoByte(Widen(b11));
      SetByte 002620 9;
      TraceOperation 104258 (Call (Floc 022340) [Con -16129] Sp);
      PushFrame;
      PushReturnAddress 104258;
      SetLocal 1 -16129;
      MakeRoutineFrame 4;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 022349
    } else {
      Jump: 104557
    }
  }
LocReturn 104258:
  PushStack call_result;
  TraceOperation 104265 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 104270 (Call (Floc 022320) [Con -15647,Con 24] Sp);
  PushFrame;
  PushReturnAddress 104270;
  SetLocal 1 -15647;
  SetLocal 2 24;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 104270:
  PushStack call_result;
  TraceOperation 104278 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 104283 (Store (Con 167) (Con 3));
  SetByte 008210 0;
  SetByte 008211 3;
  TraceOperation 104286 (Call (Floc 022320) [Con 16277,Con 2] Sp);
  PushFrame;
  PushReturnAddress 104286;
  SetLocal 1 16277;
  SetLocal 2 2;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 104286:
  PushStack call_result;
  TraceOperation 104294 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  TraceOperation 104299 (Print "The universe goes crazy for a moment.");
  GamePrint "The universe goes crazy for a moment.";
  TraceOperation 104324 New_line;
  GamePrint "\n";
  TraceOperation 104325 New_line;
  GamePrint "\n";
  TraceOperation 104326 (Print_paddr (Var (Global 21)));
  Let b2 = M[007950];
  Let b3 = M[007951];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
  TraceOperation 104328 (Print_obj (Con 198));
  Let b4 = M[002540];
  Let b5 = M[002541];
  Let b6 = M[Address(MakeHiLo(b4,b5))];
  Let ite_res7 = Ite((IsZeroByte(b6),"",GetText(Offset(Address(MakeHiLo(b4,b5)),1))));
  GamePrint ite_res7;
  TraceOperation 104330 (Print ". The missiles have turned into a sperm whale");
  GamePrint ". The missiles have turned into a sperm whale";
  TraceOperation 104357 (Call (Floc 057772) [Con -12125] Sp);
  PushFrame;
  PushReturnAddress 104357;
  SetLocal 1 -12125;
  MakeRoutineFrame 1;
  Jump: 057775
LocReturn 104357:
  PushStack call_result;
  TraceOperation 104364 (Print " The whale is currently plummeting toward");
  GamePrint " The whale is currently plummeting toward";
  TraceOperation 104385 (Print_paddr (Var (Global 17)));
  Let b1 = M[007942];
  Let b2 = M[007943];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 104387 (Print ". I hope this will teach you to listen to me when I say that legendary lost planets can be dangerous. I am proceeding with the pre-set landing instructions.\"\n\nFord, Zaphod, and ");
  GamePrint ". I hope this will teach you to listen to me when I say that legendary lost planets can be dangerous. I am proceeding with the pre-set landing instructions.\"\n\nFord, Zaphod, and ";
  TraceOperation 104494 (Print_obj (Con 194));
  Let b3 = M[002504];
  Let b4 = M[002505];
  Let b5 = M[Address(MakeHiLo(b3,b4))];
  Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
  GamePrint ite_res6;
  TraceOperation 104496 (Print_ret " saunter by on their way back to the sauna. \"Good work, kid,\" says Zaphod, slamming you on the back.");
  GamePrint " saunter by on their way back to the sauna. \"Good work, kid,\" says Zaphod, slamming you on the back.\n";
  PopFrame;
  PopReturnAddress return_address_7;
  SetResult 1;
  JumpIndirect: (return) return_address_7
LocOp 104557:
  TraceOperation 104557 (Call (Floc 022340) [Con -16129] Sp);
  PushFrame;
  PushReturnAddress 104557;
  SetLocal 1 -16129;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 022349
LocReturn 104557:
  PushStack call_result;
  TraceOperation 104564 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 104569 (Sub (Var (Global 1)) (Con 30) (Global 1));
  Let b2 = M[007910];
  Let b3 = M[007911];
  SetByte 007910 HiByte(Sub(MakeHiLo(b2,b3),30));
  SetByte 007911 LoByte(Sub(MakeHiLo(b2,b3),30));
  TraceOperation 104573 (Print_paddr (Var (Global 21)));
  Let b4 = M[007950];
  Let b5 = M[007951];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
  TraceOperation 104575 (Print_obj (Con 198));
  Let b6 = M[002540];
  Let b7 = M[002541];
  Let b8 = M[Address(MakeHiLo(b6,b7))];
  Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
  GamePrint ite_res9;
  TraceOperation 104577 (Print ". Someone has activated a ");
  GamePrint ". Someone has activated a ";
  TraceOperation 104596 (Print_obj (Con 186));
  Let b10 = M[002432];
  Let b11 = M[002433];
  Let b12 = M[Address(MakeHiLo(b10,b11))];
  Let ite_res13 = Ite((IsZeroByte(b12),"",GetText(Offset(Address(MakeHiLo(b10,b11)),1))));
  GamePrint ite_res13;
  TraceOperation 104598 (Print " at");
  GamePrint " at";
  TraceOperation 104601 (Print_paddr (Var (Global 7)));
  Let b14 = M[007922];
  Let b15 = M[007923];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b14,b15)));
  TraceOperation 104603 (Print ", moving us 8 billion parsecs away from our destination, adding seven weeks to our trip. As if that isn't bad enough, all 300 members of the Fronurbdi Planetary Senate appeared in the ");
  GamePrint ", moving us 8 billion parsecs away from our destination, adding seven weeks to our trip. As if that isn't bad enough, all 300 members of the Fronurbdi Planetary Senate appeared in the ";
  TraceOperation 104718 (Print_obj (Con 178));
  Let b16 = M[002360];
  Let b17 = M[002361];
  Let b18 = M[Address(MakeHiLo(b16,b17))];
  Let ite_res19 = Ite((IsZeroByte(b18),"",GetText(Offset(Address(MakeHiLo(b16,b17)),1))));
  GamePrint ite_res19;
  TraceOperation 104720 (Call (Floc 057772) [Con -12121] Sp);
  PushFrame;
  PushReturnAddress 104720;
  SetLocal 1 -12121;
  MakeRoutineFrame 1;
  Jump: 057775
LocReturn 104720:
  PushStack call_result;
  TraceOperation 104727 (Print_ret " I'm flushing them into space now, but who knows what sort of germs they've dragged into the ship? Everyone should take extra vitamins today.\"");
  GamePrint " I'm flushing them into space now, but who knows what sort of germs they've dragged into the ship? Everyone should take extra vitamins today.\"\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 104816:
  TraceOperation 104816 (Call (Floc 020662) [Con -16129] Sp);
  PushFrame;
  PushReturnAddress 104816;
  SetLocal 1 -16129;
  MakeRoutineFrame 4;
  SetLocal 4 0;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 020671
LocReturn 104816:
  PushStack call_result;
  TraceOperation 104823 (Jz (Var Sp) (Branch T (Dloc 104849)));
  PopStack popped1;
  if (IsZero(popped1)) {
    Jump: 104849
  } else {
    TraceOperation 104826 (Store (Con 91) (Con 1));
    SetByte 008058 0;
    SetByte 008059 1;
    TraceOperation 104829 (Call (Floc 022340) [Con -16129] Sp);
    PushFrame;
    PushReturnAddress 104829;
    SetLocal 1 -16129;
    MakeRoutineFrame 4;
    SetLocal 4 0;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 022349
  }
LocReturn 104829:
  PushStack call_result;
  TraceOperation 104836 (Storew (Var Sp) (Con 0) (Con 0));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 0;
  TraceOperation 104841 (Call (Floc 042734) [Con -12117] Sp);
  PushFrame;
  PushReturnAddress 104841;
  SetLocal 1 -12117;
  MakeRoutineFrame 1;
  Jump: 042737
LocReturn 104841:
  PushStack call_result;
  TraceOperation 104848 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 104849:
  TraceOperation 104849 (Je [Var (Global 208),Con 9] (Branch F (Dloc 104856)));
  Let b1 = M[008324];
  Let b2 = M[008325];
  if (Equal(MakeHiLo(b1,b2),9)) {
    TraceOperation 104853 (Store (Con 223) (Con 1));
    SetByte 008322 0;
    SetByte 008323 1;
    Jump: 104856
  } else {
    Jump: 104856
  }
LocOp 104856:
  TraceOperation 104856 (Insert_obj (Con 177) (Con 219));
  Let b1 = M[002348];
  if (IsZero(Widen(b1))) {} else {
    Let b2 = M[Offset(Offset(000751,Mul(Widen(b1),9)),6)];
    if (Equal(Widen(b2),177)) {
      Let b3 = M[002349];
      SetByte Offset(Offset(000751,Mul(Widen(b1),9)),6) LoByte(Widen(b3));
    } else {
      Let loop_var4 = Widen(b2);
      Label 5: {
        Let b6 = M[Offset(Offset(000751,Mul(loop_var4,9)),5)];
        if (Equal(Widen(b6),177)) {
          Let b7 = M[002349];
          SetByte Offset(Offset(000751,Mul(loop_var4,9)),5) LoByte(Widen(b7));
        } else {
          Assign loop_var4 = Widen(b6);
          Goto: Label 5
        }
      }
    }
  }
  SetByte 002348 219;
  Let b8 = M[002728];
  SetByte 002349 LoByte(Widen(b8));
  SetByte 002728 177;
  TraceOperation 104859 (Insert_obj (Con 176) (Con 219));
  Let b9 = M[002339];
  if (IsZero(Widen(b9))) {} else {
    Let b10 = M[Offset(Offset(000751,Mul(Widen(b9),9)),6)];
    if (Equal(Widen(b10),176)) {
      Let b11 = M[002340];
      SetByte Offset(Offset(000751,Mul(Widen(b9),9)),6) LoByte(Widen(b11));
    } else {
      Let loop_var12 = Widen(b10);
      Label 13: {
        Let b14 = M[Offset(Offset(000751,Mul(loop_var12,9)),5)];
        if (Equal(Widen(b14),176)) {
          Let b15 = M[002340];
          SetByte Offset(Offset(000751,Mul(loop_var12,9)),5) LoByte(Widen(b15));
        } else {
          Assign loop_var12 = Widen(b14);
          Goto: Label 13
        }
      }
    }
  }
  SetByte 002339 219;
  Let b16 = M[002728];
  SetByte 002340 LoByte(Widen(b16));
  SetByte 002728 176;
  TraceOperation 104862 (Call (Floc 020718) [Var (Global 206)] Sp);
  Let b17 = M[008320];
  Let b18 = M[008321];
  PushFrame;
  PushReturnAddress 104862;
  SetLocal 1 MakeHiLo(b17,b18);
  MakeRoutineFrame 1;
  Jump: 020721
LocReturn 104862:
  PushStack call_result;
  TraceOperation 104868 (Print_paddr (Var Sp));
  PopStack popped1;
  GamePrint GetText(PackedAddress Z3(popped1));
  TraceOperation 104870 New_line;
  GamePrint "\n";
  TraceOperation 104871 New_line;
  GamePrint "\n";
  TraceOperation 104872 (Call (Floc 042574) [Con 25] Sp);
  PushFrame;
  PushReturnAddress 104872;
  SetLocal 1 25;
  MakeRoutineFrame 2;
  SetLocal 2 1;
  Jump: 042579
LocReturn 104872:
  PushStack call_result;
  TraceOperation 104878 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 104879:
  TraceOperation 104879 (Print_ret "Nothing happens.");
  GamePrint "Nothing happens.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104892:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 104895
LocOp 104895:
  TraceOperation 104895 (Print "Lying on the deck is a plotter");
  GamePrint "Lying on the deck is a plotter";
  TraceOperation 104914 (Jz (Var (Global 209)) (Branch T (Dloc 104936)));
  Let b1 = M[008326];
  Let b2 = M[008327];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 104936
  } else {
    TraceOperation 104917 (Print " connected to a ");
    GamePrint " connected to a ";
    TraceOperation 104928 (Print_obj (Con 186));
    Let b3 = M[002432];
    Let b4 = M[002433];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 104930 (Print ".");
    GamePrint ".";
    TraceOperation 104933 (Jump 104939);
    Jump: 104939
  }
LocOp 104936:
  TraceOperation 104936 (Print ".");
  GamePrint ".";
  Jump: 104939
LocOp 104939:
  TraceOperation 104939 (Jz (Var (Global 208)) (Branch T (Dloc 104971)));
  Let b1 = M[008324];
  Let b2 = M[008325];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 104971
  } else {
    TraceOperation 104942 (Print " The plotter's ");
    GamePrint " The plotter's ";
    TraceOperation 104953 (Print_obj (Con 179));
    Let b3 = M[002369];
    Let b4 = M[002370];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 104955 (Print " is submerged in ");
    GamePrint " is submerged in ";
    TraceOperation 104966 (Print_obj (Var (Global 208)));
    Let b7 = M[008324];
    Let b8 = M[008325];
    Let b9 = M[Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),7)];
    Let b10 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b7,b8),9)),7),1)];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
    GamePrint ite_res12;
    TraceOperation 104968 (Print ".");
    GamePrint ".";
    Jump: 104971
  }
LocOp 104971:
  TraceOperation 104971 New_line;
  GamePrint "\n";
  TraceOperation 104972 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 104974:
  MakeRoutineFrame 0;
  Jump: 104975
LocOp 104975:
  TraceOperation 104975 (Je [Var (Global 203),Con 61] (Branch F (Dloc 105064)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 104980 (Print "The ");
    GamePrint "The ";
    TraceOperation 104983 (Print_obj (Var (Global 201)));
    Let b3 = M[008310];
    Let b4 = M[008311];
    Let b5 = M[Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7)];
    Let b6 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b3,b4),9)),7),1)];
    Let b7 = M[Address(MakeHiLo(b5,b6))];
    Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
    GamePrint ite_res8;
    TraceOperation 104985 (Print " has a ");
    GamePrint " has a ";
    TraceOperation 104990 (Print_obj (Con 180));
    Let b9 = M[002378];
    Let b10 = M[002379];
    Let b11 = M[Address(MakeHiLo(b9,b10))];
    Let ite_res12 = Ite((IsZeroByte(b11),"",GetText(Offset(Address(MakeHiLo(b9,b10)),1))));
    GamePrint ite_res12;
    TraceOperation 104992 (Print " and a ");
    GamePrint " and a ";
    TraceOperation 104997 (Print_obj (Con 179));
    Let b13 = M[002369];
    Let b14 = M[002370];
    Let b15 = M[Address(MakeHiLo(b13,b14))];
    Let ite_res16 = Ite((IsZeroByte(b15),"",GetText(Offset(Address(MakeHiLo(b13,b14)),1))));
    GamePrint ite_res16;
    TraceOperation 104999 (Jz (Var (Global 208)) (Branch T (Dloc 105015)));
    Let b17 = M[008324];
    Let b18 = M[008325];
    if (IsZero(MakeHiLo(b17,b18))) {
      Jump: 105015
    } else {
      TraceOperation 105002 (Print " which is sitting in ");
      GamePrint " which is sitting in ";
      TraceOperation 105013 (Print_obj (Var (Global 208)));
      Let b19 = M[008324];
      Let b20 = M[008325];
      Let b21 = M[Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),7)];
      Let b22 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b19,b20),9)),7),1)];
      Let b23 = M[Address(MakeHiLo(b21,b22))];
      Let ite_res24 = Ite((IsZeroByte(b23),"",GetText(Offset(Address(MakeHiLo(b21,b22)),1))));
      GamePrint ite_res24;
      Jump: 105015
    }
  } else {
    Jump: 105064
  }
LocOp 105015:
  TraceOperation 105015 (Jz (Var (Global 209)) (Branch T (Dloc 105054)));
  Let b1 = M[008326];
  Let b2 = M[008327];
  if (IsZero(MakeHiLo(b1,b2))) {
    Jump: 105054
  } else {
    TraceOperation 105018 (Print ". The short cord from the ");
    GamePrint ". The short cord from the ";
    TraceOperation 105033 (Print_obj (Con 186));
    Let b3 = M[002432];
    Let b4 = M[002433];
    Let b5 = M[Address(MakeHiLo(b3,b4))];
    Let ite_res6 = Ite((IsZeroByte(b5),"",GetText(Offset(Address(MakeHiLo(b3,b4)),1))));
    GamePrint ite_res6;
    TraceOperation 105035 (Print " is plugged in the receptacle");
    GamePrint " is plugged in the receptacle";
    Jump: 105054
  }
LocOp 105054:
  TraceOperation 105054 (Print ".");
  GamePrint ".";
  TraceOperation 105057 (Call (Floc 057998) [] Sp);
  PushFrame;
  PushReturnAddress 105057;
  MakeRoutineFrame 0;
  Jump: 057999
LocReturn 105057:
  PushStack call_result;
  TraceOperation 105062 New_line;
  GamePrint "\n";
  TraceOperation 105063 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 105064:
  TraceOperation 105064 (Je [Var (Global 203),Con 41] (Branch F (Dloc 105081)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),41)) {
    TraceOperation 105068 (Je [Var (Global 202),Con 186] (Branch F (Dloc 105081)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (Equal(MakeHiLo(b3,b4),186)) {
      TraceOperation 105072 (Call (Floc 022042) [Con 41,Con 186,Con 182] Sp);
      PushFrame;
      PushReturnAddress 105072;
      SetLocal 1 41;
      SetLocal 2 186;
      SetLocal 3 182;
      MakeRoutineFrame 7;
      SetLocal 7 0;
      SetLocal 6 0;
      SetLocal 5 0;
      SetLocal 4 0;
      Jump: 022057
    } else {
      Jump: 105081
    }
  } else {
    Jump: 105081
  }
LocReturn 105072:
  PushStack call_result;
  TraceOperation 105080 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 105081:
  TraceOperation 105081 (Je [Var (Global 203),Con 163] (Branch F (Dloc 105104)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),163)) {
    TraceOperation 105085 (Jz (Var (Global 209)) (Branch T (Dloc 105100)));
    Let b3 = M[008326];
    Let b4 = M[008327];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 105100
    } else {
      TraceOperation 105088 (Store (Con 225) (Con 0));
      SetByte 008326 0;
      SetByte 008327 0;
      TraceOperation 105091 (Print_ret "Unplugged.");
      GamePrint "Unplugged.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    Jump: 105104
  }
LocOp 105100:
  TraceOperation 105100 (Print_paddr (Var (Global 61)));
  Let b1 = M[008030];
  Let b2 = M[008031];
  GamePrint GetText(PackedAddress Z3(MakeHiLo(b1,b2)));
  TraceOperation 105102 New_line;
  GamePrint "\n";
  TraceOperation 105103 Rtrue;
  PopFrame;
  PopReturnAddress return_address_3;
  SetResult 1;
  JumpIndirect: (return) return_address_3
LocOp 105104:
  TraceOperation 105104 (Je [Var (Global 203),Con 39,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),39),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 105110 (Call (Floc 030950) [] Sp);
    PushFrame;
    PushReturnAddress 105110;
    MakeRoutineFrame 0;
    Jump: 030951
  } else {
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  }
LocReturn 105110:
  PushStack call_result;
  TraceOperation 105115 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 105116:
  MakeRoutineFrame 0;
  Jump: 105117
LocOp 105117:
  TraceOperation 105117 (Je [Var (Global 203),Con 46] (Branch F (Dloc 105197)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),46)) {
    TraceOperation 105122 (Je [Var (Global 202),Con 9,Con 204] (Branch F (Dloc 105197)));
    Let b3 = M[008312];
    Let b4 = M[008313];
    if (LogOr(Equal(MakeHiLo(b3,b4),9),Equal(MakeHiLo(b3,b4),204))) {
      TraceOperation 105129 (Jz (Var (Global 208)) (Branch T (Dloc 105158)));
      Let b5 = M[008324];
      Let b6 = M[008325];
      if (IsZero(MakeHiLo(b5,b6))) {
        Jump: 105158
      } else {
        TraceOperation 105132 (Print "But the ");
        GamePrint "But the ";
        TraceOperation 105139 (Print_obj (Con 179));
        Let b7 = M[002369];
        Let b8 = M[002370];
        Let b9 = M[Address(MakeHiLo(b7,b8))];
        Let ite_res10 = Ite((IsZeroByte(b9),"",GetText(Offset(Address(MakeHiLo(b7,b8)),1))));
        GamePrint ite_res10;
        TraceOperation 105141 (Print " is already in");
        GamePrint " is already in";
        TraceOperation 105148 (Call (Floc 043738) [Var (Global 208),Con 1] Sp);
        Let b11 = M[008324];
        Let b12 = M[008325];
        PushFrame;
        PushReturnAddress 105148;
        SetLocal 1 MakeHiLo(b11,b12);
        SetLocal 2 1;
        MakeRoutineFrame 2;
        Jump: 043743
      }
    } else {
      Jump: 105197
    }
  } else {
    Jump: 105197
  }
LocReturn 105148:
  PushStack call_result;
  TraceOperation 105155 (Print_ret "!");
  GamePrint "!\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 105158:
  TraceOperation 105158 (Store (Con 224) (Var (Global 202)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  SetByte 008324 b1;
  SetByte 008325 b2;
  TraceOperation 105161 (Je [Var (Global 202),Con 9] (Branch F (Dloc 105190)));
  Let b3 = M[008312];
  Let b4 = M[008313];
  if (Equal(MakeHiLo(b3,b4),9)) {
    TraceOperation 105165 (Jz (Var (Global 100)) (Branch F (Dloc 105190)));
    Let b5 = M[008108];
    Let b6 = M[008109];
    if (IsZero(MakeHiLo(b5,b6))) {
      TraceOperation 105168 (Store (Con 116) (Con 1));
      SetByte 008108 0;
      SetByte 008109 1;
      TraceOperation 105171 (Call (Floc 021838) [Var (Global 233)] Sp);
      Let b7 = M[008374];
      Let b8 = M[008375];
      PushFrame;
      PushReturnAddress 105171;
      SetLocal 1 MakeHiLo(b7,b8);
      MakeRoutineFrame 5;
      SetLocal 5 0;
      SetLocal 4 0;
      SetLocal 3 0;
      SetLocal 2 0;
      Jump: 021849
    } else {
      Jump: 105190
    }
  } else {
    Jump: 105190
  }
LocReturn 105171:
  PushStack call_result;
  TraceOperation 105177 (Call (Floc 022320) [Con -22495,Con 3] Sp);
  PushFrame;
  PushReturnAddress 105177;
  SetLocal 1 -22495;
  SetLocal 2 3;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  Jump: 022327
LocReturn 105177:
  PushStack call_result;
  TraceOperation 105185 (Storew (Var Sp) (Con 0) (Con 1));
  PopStack popped1;
  SetByte Offset(Address(popped1),0) 0;
  SetByte Offset(Offset(Address(popped1),0),1) 1;
  Jump: 105190
LocOp 105190:
  TraceOperation 105190 (Print_ret "Done.");
  GamePrint "Done.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 105197:
  TraceOperation 105197 (Je [Var (Global 203),Con 61] (Branch F (Dloc 105231)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 105201 (Jz (Var (Global 208)) (Branch T (Dloc 105231)));
    Let b3 = M[008324];
    Let b4 = M[008325];
    if (IsZero(MakeHiLo(b3,b4))) {
      Jump: 105231
    } else {
      TraceOperation 105204 (Print "The ");
      GamePrint "The ";
      TraceOperation 105207 (Print_obj (Con 179));
      Let b5 = M[002369];
      Let b6 = M[002370];
      Let b7 = M[Address(MakeHiLo(b5,b6))];
      Let ite_res8 = Ite((IsZeroByte(b7),"",GetText(Offset(Address(MakeHiLo(b5,b6)),1))));
      GamePrint ite_res8;
      TraceOperation 105209 (Print " is suspended in the cup of ");
      GamePrint " is suspended in the cup of ";
      TraceOperation 105226 (Print_obj (Var (Global 208)));
      Let b9 = M[008324];
      Let b10 = M[008325];
      Let b11 = M[Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),7)];
      Let b12 = M[Offset(Offset(Offset(000751,Mul(MakeHiLo(b9,b10),9)),7),1)];
      Let b13 = M[Address(MakeHiLo(b11,b12))];
      Let ite_res14 = Ite((IsZeroByte(b13),"",GetText(Offset(Address(MakeHiLo(b11,b12)),1))));
      GamePrint ite_res14;
      TraceOperation 105228 (Print_ret ".");
      GamePrint ".\n";
      PopFrame;
      PopReturnAddress return_address_15;
      SetResult 1;
      JumpIndirect: (return) return_address_15
    }
  } else {
    Jump: 105231
  }
LocOp 105231:
  TraceOperation 105231 (Je [Var (Global 203),Con 123] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),123)) {
    TraceOperation 105235 (Jz (Var (Global 208)) (Branch T Dfalse));
    Let b3 = M[008324];
    Let b4 = M[008325];
    if (IsZero(MakeHiLo(b3,b4))) {
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 0;
      JumpIndirect: (return) return_address_5
    } else {
      TraceOperation 105238 (Print "The ");
      GamePrint "The ";
      TraceOperation 105241 (Print_obj (Con 179));
      Let b6 = M[002369];
      Let b7 = M[002370];
      Let b8 = M[Address(MakeHiLo(b6,b7))];
      Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
      GamePrint ite_res9;
      TraceOperation 105243 (Print " is no longer suspended in");
      GamePrint " is no longer suspended in";
      TraceOperation 105262 (Call (Floc 043738) [Var (Global 208),Con 1] Sp);
      Let b10 = M[008324];
      Let b11 = M[008325];
      PushFrame;
      PushReturnAddress 105262;
      SetLocal 1 MakeHiLo(b10,b11);
      SetLocal 2 1;
      MakeRoutineFrame 2;
      Jump: 043743
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_12;
    SetResult 0;
    JumpIndirect: (return) return_address_12
  }
LocReturn 105262:
  PushStack call_result;
  TraceOperation 105269 (Print ".");
  GamePrint ".";
  TraceOperation 105272 New_line;
  GamePrint "\n";
  TraceOperation 105273 (Store (Con 224) (Con 0));
  SetByte 008324 0;
  SetByte 008325 0;
  TraceOperation 105276 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 105278:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 105281
LocOp 105281:
  TraceOperation 105281 (Je [Var (Local 1),Con 3] (Branch F (Dloc 105359)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 105286 (Print "You are at the bottom of a gangway. A hatch below you is ");
    GamePrint "You are at the bottom of a gangway. A hatch below you is ";
    TraceOperation 105319 (Test_attr (Con 177) (Con 23) (Branch F (Dloc 105331)));
    Let b2 = M[002346];
    if (TestBit(b2,0)) {
      TraceOperation 105323 (Print "open");
      GamePrint "open";
      TraceOperation 105328 (Jump 105334);
      Jump: 105334
    } else {
      Jump: 105331
    }
  } else {
    Jump: 105359
  }
LocOp 105331:
  TraceOperation 105331 (Print "closed");
  GamePrint "closed";
  Jump: 105334
LocOp 105334:
  TraceOperation 105334 (Print_ret ". There is a small access space to starboard.");
  GamePrint ". There is a small access space to starboard.\n";
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 105359:
  TraceOperation 105359 (Je [Var (Local 1),Con 2] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 105363 (Set_attr (Con 177) (Con 28));
    Let b2 = M[002347];
    SetByte 002347 SetBit(b2,3);
    TraceOperation 105366 Rfalse;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 0;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 105368:
  MakeRoutineFrame 0;
  Jump: 105369
LocOp 105369:
  TraceOperation 105369 (Call (Floc 105444) [Con 31] Sp);
  PushFrame;
  PushReturnAddress 105369;
  SetLocal 1 31;
  MakeRoutineFrame 3;
  SetLocal 3 0;
  SetLocal 2 0;
  Jump: 105451
LocReturn 105369:
  PushStack call_result;
  TraceOperation 105375 (Jg (Var Sp) (Con 1) (Branch F (Dloc 105438)));
  PopStack popped1;
  if (GreaterThan(popped1,1)) {
    TraceOperation 105379 (Print "That entrance is so narrow that you probably couldn't pass by holding anything. Well, maybe ONE thing.");
    GamePrint "That entrance is so narrow that you probably couldn't pass by holding anything. Well, maybe ONE thing.";
    TraceOperation 105436 New_line;
    GamePrint "\n";
    TraceOperation 105437 Rfalse;
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  } else {
    Jump: 105438
  }
LocOp 105438:
  TraceOperation 105438 (Clear_attr (Con 177) (Con 28));
  Let b1 = M[002347];
  SetByte 002347 ClearBit(b1,3);
  TraceOperation 105441 (Ret (Con 175));
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult 175;
  JumpIndirect: (return) return_address_2
--------------------------------------------------
LocRoutine 105444:
  MakeRoutineFrame 3;
  if (LessThanByte(num_actuals,3)) {
    SetLocal 3 0;
    if (LessThanByte(num_actuals,2)) {
      SetLocal 2 0;
      if (LessThanByte(num_actuals,1)) {
        SetLocal 1 0;
      }
    }
  }
  Jump: 105451
LocOp 105451:
  TraceOperation 105451 (Get_child (Var (Local 1)) (Local 2) (Branch T (Dloc 105455)));
  GetLocal 1 local1_1;
  Let b2 = M[Offset(Offset(000751,Mul(local1_1,9)),6)];
  SetLocal 2 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 105455
  } else {
    Jump: 105455
  }
LocOp 105455:
  TraceOperation 105455 (Jz (Var (Local 2)) (Branch F (Dloc 105460)));
  GetLocal 2 local2_1;
  if (IsZero(local2_1)) {
    TraceOperation 105458 (Ret (Var (Local 3)));
    GetLocal 3 local3_2;
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult local3_2;
    JumpIndirect: (return) return_address_3
  } else {
    Jump: 105460
  }
LocOp 105460:
  TraceOperation 105460 (Test_attr (Var (Local 2)) (Con 9) (Branch T (Dloc 105474)));
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Offset(000751,Mul(local2_1,9)),1)];
  if (TestBit(b2,6)) {
    Jump: 105474
  } else {
    TraceOperation 105464 (Test_attr (Var (Local 2)) (Con 22) (Branch T (Dloc 105474)));
    GetLocal 2 local2_3;
    Let b4 = M[Offset(Offset(000751,Mul(local2_3,9)),2)];
    if (TestBit(b4,1)) {
      Jump: 105474
    } else {
      TraceOperation 105468 (Je [Var (Local 2),Con 111] (Branch T (Dloc 105474)));
      GetLocal 2 local2_5;
      if (Equal(local2_5,111)) {
        Jump: 105474
      } else {
        TraceOperation 105472 (Inc (Con 3));
        GetLocal 3 local3_6;
        SetLocal 3 Add(local3_6,1);
        Jump: 105474
      }
    }
  }
LocOp 105474:
  TraceOperation 105474 (Get_child (Var (Local 2)) Sp (Branch F (Dloc 105488)));
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Offset(000751,Mul(local2_1,9)),6)];
  PushStack Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 105488
  } else {
    TraceOperation 105478 (Call (Floc 105444) [Var (Local 2)] Sp);
    GetLocal 2 local2_3;
    PushFrame;
    PushReturnAddress 105478;
    SetLocal 1 local2_3;
    MakeRoutineFrame 3;
    SetLocal 3 0;
    SetLocal 2 0;
    Jump: 105451
  }
LocReturn 105478:
  PushStack call_result;
  TraceOperation 105484 (Add (Var (Local 3)) (Var Sp) (Local 3));
  GetLocal 3 local3_1;
  PopStack popped2;
  SetLocal 3 Add(local3_1,popped2);
  Jump: 105488
LocOp 105488:
  TraceOperation 105488 (Get_sibling (Var (Local 2)) (Local 2) (Branch T (Dloc 105492)));
  GetLocal 2 local2_1;
  Let b2 = M[Offset(Offset(000751,Mul(local2_1,9)),5)];
  SetLocal 2 Widen(b2);
  if (IsZero(Widen(b2))) {
    Jump: 105492
  } else {
    Jump: 105492
  }
LocOp 105492:
  TraceOperation 105492 (Jump 105455);
  Jump: 105455
--------------------------------------------------
LocRoutine 105496:
  MakeRoutineFrame 0;
  Jump: 105497
LocOp 105497:
  TraceOperation 105497 (Je [Var (Global 0),Con 178] (Branch T (Dloc 105519)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),178)) {
    Jump: 105519
  } else {
    TraceOperation 105501 (Je [Var (Global 203),Con 61,Con 39,Con 103] (Branch T (Dloc 105512)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),61),Equal(MakeHiLo(b3,b4),39)),Equal(MakeHiLo(b3,b4),103))) {
      Jump: 105512
    } else {
      TraceOperation 105508 (Je [Var (Global 203),Con 159] (Branch F (Dloc 105519)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (Equal(MakeHiLo(b5,b6),159)) {
        Jump: 105512
      } else {
        Jump: 105519
      }
    }
  }
LocOp 105512:
  TraceOperation 105512 (Call (Floc 057596) [Con 177] Sp);
  PushFrame;
  PushReturnAddress 105512;
  SetLocal 1 177;
  MakeRoutineFrame 1;
  Jump: 057599
LocReturn 105512:
  PushStack call_result;
  TraceOperation 105518 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 105519:
  TraceOperation 105519 (Je [Var (Global 203),Con 38,Con 103] (Branch F (Dloc 105633)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 105526 (Jz (Var (Global 214)) (Branch F (Dloc 105633)));
    Let b3 = M[008336];
    Let b4 = M[008337];
    if (IsZero(MakeHiLo(b3,b4))) {
      TraceOperation 105530 (Print_ret "Loud sirens blare, fantastically bright red lights flash from all sides, and a soft female voice mentions that opening this hatch in space will evacuate the air from the ship.");
      GamePrint "Loud sirens blare, fantastically bright red lights flash from all sides, and a soft female voice mentions that opening this hatch in space will evacuate the air from the ship.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    } else {
      Jump: 105633
    }
  } else {
    Jump: 105633
  }
LocOp 105633:
  TraceOperation 105633 (Je [Var (Global 203),Con 38,Con 103] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (LogOr(Equal(MakeHiLo(b1,b2),38),Equal(MakeHiLo(b1,b2),103))) {
    TraceOperation 105639 (Test_attr (Con 177) (Con 23) (Branch T Dfalse));
    Let b3 = M[002346];
    if (TestBit(b3,0)) {
      PopFrame;
      PopReturnAddress return_address_4;
      SetResult 0;
      JumpIndirect: (return) return_address_4
    } else {
      TraceOperation 105643 (Print_ret "The hatch appears to be jammed shut.");
      GamePrint "The hatch appears to be jammed shut.\n";
      PopFrame;
      PopReturnAddress return_address_5;
      SetResult 1;
      JumpIndirect: (return) return_address_5
    }
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
--------------------------------------------------
LocRoutine 105666:
  MakeRoutineFrame 0;
  Jump: 105667
LocOp 105667:
  TraceOperation 105667 (Je [Var (Global 0),Con 175] (Branch T (Dloc 105689)));
  Let b1 = M[007908];
  Let b2 = M[007909];
  if (Equal(MakeHiLo(b1,b2),175)) {
    Jump: 105689
  } else {
    TraceOperation 105671 (Je [Var (Global 203),Con 159,Con 139,Con 61] (Branch T (Dloc 105682)));
    Let b3 = M[008314];
    Let b4 = M[008315];
    if (LogOr(LogOr(Equal(MakeHiLo(b3,b4),159),Equal(MakeHiLo(b3,b4),139)),Equal(MakeHiLo(b3,b4),61))) {
      Jump: 105682
    } else {
      TraceOperation 105678 (Je [Var (Global 203),Con 125] (Branch F (Dloc 105689)));
      Let b5 = M[008314];
      Let b6 = M[008315];
      if (Equal(MakeHiLo(b5,b6),125)) {
        Jump: 105682
      } else {
        Jump: 105689
      }
    }
  }
LocOp 105682:
  TraceOperation 105682 (Call (Floc 057596) [Con 176] Sp);
  PushFrame;
  PushReturnAddress 105682;
  SetLocal 1 176;
  MakeRoutineFrame 1;
  Jump: 057599
LocReturn 105682:
  PushStack call_result;
  TraceOperation 105688 Ret_popped;
  PopStack popped1;
  PopFrame;
  PopReturnAddress return_address_2;
  SetResult popped1;
  JumpIndirect: (return) return_address_2
LocOp 105689:
  TraceOperation 105689 (Je [Var (Global 203),Con 125] (Branch F (Dloc 105701)));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),125)) {
    TraceOperation 105693 (Call (Floc 022042) [Con 125,Con 177] Sp);
    PushFrame;
    PushReturnAddress 105693;
    SetLocal 1 125;
    SetLocal 2 177;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    Jump: 105701
  }
LocReturn 105693:
  PushStack call_result;
  TraceOperation 105700 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 105701:
  TraceOperation 105701 (Je [Var (Global 203),Con 61] (Branch F Dfalse));
  Let b1 = M[008314];
  Let b2 = M[008315];
  if (Equal(MakeHiLo(b1,b2),61)) {
    TraceOperation 105705 (Print_ret "I don't even understand it, and I'm a computer!");
    GamePrint "I don't even understand it, and I'm a computer!\n";
    PopFrame;
    PopReturnAddress return_address_3;
    SetResult 1;
    JumpIndirect: (return) return_address_3
  } else {
    PopFrame;
    PopReturnAddress return_address_4;
    SetResult 0;
    JumpIndirect: (return) return_address_4
  }
--------------------------------------------------
LocRoutine 105730:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 105733
LocOp 105733:
  TraceOperation 105733 (Je [Var (Local 1),Con 3] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,3)) {
    TraceOperation 105737 (Print "This tiny area, with an exit to port, is for working on the hatch ");
    GamePrint "This tiny area, with an exit to port, is for working on the hatch ";
    TraceOperation 105774 (Print_obj (Con 176));
    Let b2 = M[002342];
    Let b3 = M[002343];
    Let b4 = M[Address(MakeHiLo(b2,b3))];
    Let ite_res5 = Ite((IsZeroByte(b4),"",GetText(Offset(Address(MakeHiLo(b2,b3)),1))));
    GamePrint ite_res5;
    TraceOperation 105776 (Print ", which is vastly more complicated than your rather ordinary intelligence can comprehend. ");
    GamePrint ", which is vastly more complicated than your rather ordinary intelligence can comprehend. ";
    TraceOperation 105831 (Call (Floc 022042) [Con 61,Con 42] Sp);
    PushFrame;
    PushReturnAddress 105831;
    SetLocal 1 61;
    SetLocal 2 42;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    SetLocal 3 0;
    Jump: 022057
  } else {
    PopFrame;
    PopReturnAddress return_address_6;
    SetResult 0;
    JumpIndirect: (return) return_address_6
  }
LocReturn 105831:
  PushStack call_result;
  TraceOperation 105838 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 105840:
  MakeRoutineFrame 0;
  Jump: 105841
LocOp 105841:
  TraceOperation 105841 (Je [Var (Global 202),Con 48] (Branch F (Dloc 105854)));
  Let b1 = M[008312];
  Let b2 = M[008313];
  if (Equal(MakeHiLo(b1,b2),48)) {
    TraceOperation 105845 (Call (Floc 022042) [Var (Global 203),Var (Global 201),Con 42] Sp);
    Let b3 = M[008314];
    Let b4 = M[008315];
    Let b5 = M[008310];
    Let b6 = M[008311];
    PushFrame;
    PushReturnAddress 105845;
    SetLocal 1 MakeHiLo(b3,b4);
    SetLocal 2 MakeHiLo(b5,b6);
    SetLocal 3 42;
    MakeRoutineFrame 7;
    SetLocal 7 0;
    SetLocal 6 0;
    SetLocal 5 0;
    SetLocal 4 0;
    Jump: 022057
  } else {
    Jump: 105854
  }
LocReturn 105845:
  PushStack call_result;
  TraceOperation 105853 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
LocOp 105854:
  TraceOperation 105854 (Call (Floc 022042) [Var (Global 203),Con 42,Var (Global 202)] Sp);
  Let b1 = M[008314];
  Let b2 = M[008315];
  Let b3 = M[008312];
  Let b4 = M[008313];
  PushFrame;
  PushReturnAddress 105854;
  SetLocal 1 MakeHiLo(b1,b2);
  SetLocal 2 42;
  SetLocal 3 MakeHiLo(b3,b4);
  MakeRoutineFrame 7;
  SetLocal 7 0;
  SetLocal 6 0;
  SetLocal 5 0;
  SetLocal 4 0;
  Jump: 022057
LocReturn 105854:
  PushStack call_result;
  TraceOperation 105862 Rtrue;
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 1;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 105864:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 0;
  }
  Jump: 105867
LocOp 105867:
  TraceOperation 105867 (Je [Var (Local 1),Con 2] (Branch F (Dloc 106020)));
  GetLocal 1 local1_1;
  if (Equal(local1_1,2)) {
    TraceOperation 105872 (Print "You step onto the landing ramp leading down toward the surface of");
    GamePrint "You step onto the landing ramp leading down toward the surface of";
    TraceOperation 105907 (Print_paddr (Var (Global 17)));
    Let b2 = M[007942];
    Let b3 = M[007943];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b2,b3)));
    TraceOperation 105909 (Print ". ");
    GamePrint ". ";
    TraceOperation 105912 (Print_paddr (Var (Global 21)));
    Let b4 = M[007950];
    Let b5 = M[007951];
    GamePrint GetText(PackedAddress Z3(MakeHiLo(b4,b5)));
    TraceOperation 105914 (Print_obj (Con 198));
    Let b6 = M[002540];
    Let b7 = M[002541];
    Let b8 = M[Address(MakeHiLo(b6,b7))];
    Let ite_res9 = Ite((IsZeroByte(b8),"",GetText(Offset(Address(MakeHiLo(b6,b7)),1))));
    GamePrint ite_res9;
    TraceOperation 105916 (Print ". Someone is leaving the ship on a strange planet without wrapping up all nice and warm. It'll all end in tears, I just know it...\" The voice fades behind you.");
    GamePrint ". Someone is leaving the ship on a strange planet without wrapping up all nice and warm. It'll all end in tears, I just know it...\" The voice fades behind you.";
    TraceOperation 106017 New_line;
    GamePrint "\n";
    TraceOperation 106018 New_line;
    GamePrint "\n";
    TraceOperation 106019 Rtrue;
    PopFrame;
    PopReturnAddress return_address_10;
    SetResult 1;
    JumpIndirect: (return) return_address_10
  } else {
    Jump: 106020
  }
LocOp 106020:
  TraceOperation 106020 (Je [Var (Local 1),Con 6] (Branch F Dfalse));
  GetLocal 1 local1_1;
  if (Equal(local1_1,6)) {
    TraceOperation 106024 New_line;
    GamePrint "\n";
    TraceOperation 106025 (Print "Slowly, nervously, you step downwards, the cold thin air rasping in your lungs. You set one single foot on the ancient dust -- and almost instantly the most incredible adventure starts which you'll have to buy the next game to find out about.");
    GamePrint "Slowly, nervously, you step downwards, the cold thin air rasping in your lungs. You set one single foot on the ancient dust -- and almost instantly the most incredible adventure starts which you'll have to buy the next game to find out about.";
    TraceOperation 106170 New_line;
    GamePrint "\n";
    TraceOperation 106171 New_line;
    GamePrint "\n";
    TraceOperation 106172 (Call (Floc 029196) [] Sp);
    PushFrame;
    PushReturnAddress 106172;
    MakeRoutineFrame 1;
    SetLocal 1 1;
    Jump: 029199
  } else {
    PopFrame;
    PopReturnAddress return_address_2;
    SetResult 0;
    JumpIndirect: (return) return_address_2
  }
LocReturn 106172:
  PushStack call_result;
  TraceOperation 106177 New_line;
  GamePrint "\n";
  TraceOperation 106178 (Print "By the way, there WAS a causal relationship between your taking the ");
  GamePrint "By the way, there WAS a causal relationship between your taking the ";
  TraceOperation 106217 (Print_obj (Con 19));
  Let b1 = M[000929];
  Let b2 = M[000930];
  Let b3 = M[Address(MakeHiLo(b1,b2))];
  Let ite_res4 = Ite((IsZeroByte(b3),"",GetText(Offset(Address(MakeHiLo(b1,b2)),1))));
  GamePrint ite_res4;
  TraceOperation 106219 (Print " and the tree collapsing at the very beginning of the game. We apologise for this slight inaccuracy.");
  GamePrint " and the tree collapsing at the very beginning of the game. We apologise for this slight inaccuracy.";
  TraceOperation 106276 New_line;
  GamePrint "\n";
  TraceOperation 106277 Quit;
  Quit
--------------------------------------------------
LocRoutine 106794:
  MakeRoutineFrame 1;
  if (LessThanByte(num_actuals,1)) {
    SetLocal 1 5214;
  }
  Jump: 106797
LocOp 106797:
  TraceOperation 106797 (Test_attr (Var (Global 76)) (Var (Local 1)) (Branch F (Dloc 100848)));
  Let b1 = M[008060];
  Let b2 = M[008061];
  GetLocal 1 local1_3;
  Let b4 = M[Offset(Offset(000751,Mul(MakeHiLo(b1,b2),9)),Div8(local1_3))];
  if (TestBit(b4,SevenMinus(LoByte(Mod(local1_3,8))))) {
    TraceOperation 106802 (Jl (Var (Global 150)) (Var (Global 77)) (Branch F Dtrue));
    Let b5 = M[008208];
    Let b6 = M[008209];
    Let b7 = M[008062];
    Let b8 = M[008063];
    if (LessThan(MakeHiLo(b5,b6),MakeHiLo(b7,b8))) {
      TraceOperation 106806 (Jin (Con 180) (Con 95) (Branch F (Dloc 100183)));
      Let b9 = M[002375];
      if (Equal(95,Widen(b9))) {
        TraceOperation 106811 (Test_attr (Con 0) (Var (Global 71)) (Branch F (Dloc 111304)));
        Let b10 = M[008050];
        Let b11 = M[008051];
        Let b12 = M[Offset(000751,Div8(MakeHiLo(b10,b11)))];
        if (TestBit(b12,SevenMinus(LoByte(Mod(MakeHiLo(b10,b11),8))))) {
          TraceOperation 106816 (Store (Var (Global 71)) (Con 27));
          Let b13 = M[008050];
          Let b14 = M[008051];
          if (IsZeroByte(b14)) {
            Note "\"Op.Store/DSp\"";
            PopStack popped15;
            PushStack 27;
          } else {
            if (LessThanByte(b14,16)) {
              SetLocal b14 27;
            } else {
              SetByte Offset(007908,Mul(2,Widen(MinusByte(b14,16)))) 0;
              SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b14,16)))),1) 27;
            }
          }
          TraceOperation 106819 (Add (Con 220) (Var (Global 162)) (Global 5));
          Let b16 = M[008232];
          Let b17 = M[008233];
          SetByte 007918 HiByte(Add(220,MakeHiLo(b16,b17)));
          SetByte 007919 LoByte(Add(220,MakeHiLo(b16,b17)));
          TraceOperation 106823 (Inc_chk (Var (Global 52)) (Var (Global 163)) (Branch F (Dloc 112431)));
          Let b18 = M[008012];
          Let b19 = M[008013];
          if (IsZeroByte(b19)) {
            PopStack popped20;
            Let b21 = M[008234];
            Let b22 = M[008235];
            PushStack Add(popped20,1);
            if (GreaterThanEqual(popped20,MakeHiLo(b21,b22))) {
              TraceOperation 106828 Rtrue;
              PopFrame;
              PopReturnAddress return_address_23;
              SetResult 1;
              JumpIndirect: (return) return_address_23
            } else {
              Jump: 112431
            }
          } else {
            if (LessThanByte(b19,16)) {
              GetLocal b19 localb19_24;
              Let b25 = M[008234];
              Let b26 = M[008235];
              SetLocal b19 Add(localb19_24,1);
              if (GreaterThanEqual(localb19_24,MakeHiLo(b25,b26))) {
                TraceOperation 106828 Rtrue;
                PopFrame;
                PopReturnAddress return_address_27;
                SetResult 1;
                JumpIndirect: (return) return_address_27
              } else {
                Jump: 112431
              }
            } else {
              Let b28 = M[Offset(007908,Mul(2,Widen(MinusByte(b19,16))))];
              Let b29 = M[Offset(Offset(007908,Mul(2,Widen(MinusByte(b19,16)))),1)];
              Let b30 = M[008234];
              Let b31 = M[008235];
              SetByte Offset(007908,Mul(2,Widen(MinusByte(b19,16)))) HiByte(Add(MakeHiLo(b28,b29),1));
              SetByte Offset(Offset(007908,Mul(2,Widen(MinusByte(b19,16)))),1) LoByte(Add(MakeHiLo(b28,b29),1));
              if (GreaterThanEqual(MakeHiLo(b28,b29),MakeHiLo(b30,b31))) {
                TraceOperation 106828 Rtrue;
                PopFrame;
                PopReturnAddress return_address_32;
                SetResult 1;
                JumpIndirect: (return) return_address_32
              } else {
                Jump: 112431
              }
            }
          }
        } else {
          Jump: 111304
        }
      } else {
        Jump: 100183
      }
    } else {
      PopFrame;
      PopReturnAddress return_address_33;
      SetResult 1;
      JumpIndirect: (return) return_address_33
    }
  } else {
    Jump: 100848
  }
--------------------------------------------------
LocRoutine 108450:
  MakeRoutineFrame 0;
  Jump: 108451
LocOp 108451:
  TraceOperation 108451 (Dec_chk (Con 58) (Var (Global 90)) (Branch F (Dloc 108507)));
  Let b1 = M[007992];
  Let b2 = M[007993];
  Let b3 = M[008088];
  Let b4 = M[008089];
  if (LessThanEqual(MakeHiLo(b1,b2),MakeHiLo(b3,b4))) {
    SetByte 007992 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 007993 LoByte(Sub(MakeHiLo(b1,b2),1));
    TraceOperation 108455 Rfalse;
    PopFrame;
    PopReturnAddress return_address_5;
    SetResult 0;
    JumpIndirect: (return) return_address_5
  } else {
    SetByte 007992 HiByte(Sub(MakeHiLo(b1,b2),1));
    SetByte 007993 LoByte(Sub(MakeHiLo(b1,b2),1));
    Jump: 108507
  }
--------------------------------------------------
LocRoutine 109720:
  MakeRoutineFrame 0;
  Jump: 109721
LocOp 109721:
  TraceOperation 109721 (Ret (Con 24211));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 24211;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 109792:
  MakeRoutineFrame 0;
  Jump: 109793
LocOp 109793:
  TraceOperation 109793 (Ret (Con 24211));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 24211;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 111364:
  MakeRoutineFrame 0;
  Jump: 111365
LocOp 111365:
  TraceOperation 111365 (Jump 116298);
  Jump: 116298
--------------------------------------------------
LocRoutine 111594:
  MakeRoutineFrame 2;
  if (LessThanByte(num_actuals,2)) {
    SetLocal 2 -2046;
    if (LessThanByte(num_actuals,1)) {
      SetLocal 1 -3046;
    }
  }
  Jump: 111599
LocOp 111599:
  TraceOperation 111599 (Ret (Con 11266));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 11266;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 111844:
  MakeRoutineFrame 0;
  Jump: 111845
LocOp 111845:
  TraceOperation 111845 (Ret (Con 27));
  PopFrame;
  PopReturnAddress return_address_1;
  SetResult 27;
  JumpIndirect: (return) return_address_1
--------------------------------------------------
LocRoutine 111866:
  MakeRoutineFrame 0;
  Jump: 111867
LocOp 111867:
  TraceOperation 111867 (Jump 118562);
  Jump: 118562
--------------------------------------------------
LocRoutine 112024:
  MakeRoutineFrame 0;
  Jump: 112025
LocOp 112025:
  TraceOperation 112025 (Jump 118720);
  Jump: 118720
